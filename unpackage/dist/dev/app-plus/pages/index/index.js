"use weex:vue";

if (typeof Promise !== 'undefined' && !Promise.prototype.finally) {
  Promise.prototype.finally = function(callback) {
    const promise = this.constructor
    return this.then(
      value => promise.resolve(callback()).then(() => value),
      reason => promise.resolve(callback()).then(() => {
        throw reason
      })
    )
  }
};

if (typeof uni !== 'undefined' && uni && uni.requireGlobal) {
  const global = uni.requireGlobal()
  ArrayBuffer = global.ArrayBuffer
  Int8Array = global.Int8Array
  Uint8Array = global.Uint8Array
  Uint8ClampedArray = global.Uint8ClampedArray
  Int16Array = global.Int16Array
  Uint16Array = global.Uint16Array
  Int32Array = global.Int32Array
  Uint32Array = global.Uint32Array
  Float32Array = global.Float32Array
  Float64Array = global.Float64Array
  BigInt64Array = global.BigInt64Array
  BigUint64Array = global.BigUint64Array
};


(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __commonJS = (cb2, mod) => function __require() {
    return mod || (0, cb2[__getOwnPropNames(cb2)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to2, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to2, key) && key !== except)
          __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to2;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __async = (__this, __arguments, generator) => {
    return new Promise((resolve, reject) => {
      var fulfilled = (value) => {
        try {
          step(generator.next(value));
        } catch (e2) {
          reject(e2);
        }
      };
      var rejected = (value) => {
        try {
          step(generator.throw(value));
        } catch (e2) {
          reject(e2);
        }
      };
      var step = (x2) => x2.done ? resolve(x2.value) : Promise.resolve(x2.value).then(fulfilled, rejected);
      step((generator = generator.apply(__this, __arguments)).next());
    });
  };

  // vue-ns:vue
  var require_vue = __commonJS({
    "vue-ns:vue"(exports, module) {
      module.exports = Vue;
    }
  });

  // pinia-ns:pinia
  var require_pinia = __commonJS({
    "pinia-ns:pinia"(exports, module) {
      module.exports = uni.Pinia;
    }
  });

  // D:/code/HBuilderProjects/IntelligentFlow/unpackage/dist/dev/.nvue/_plugin-vue_export-helper.js
  var import_vue = __toESM(require_vue());
  var import_pinia = __toESM(require_pinia());
  var isString = (val) => typeof val === "string";
  var ON_LOAD = "onLoad";
  var ON_UNLOAD = "onUnload";
  function formatAppLog(type, filename, ...args) {
    if (uni.__log__) {
      uni.__log__(type, filename, ...args);
    } else {
      console[type].apply(console, [...args, filename]);
    }
  }
  function resolveEasycom(component, easycom) {
    return isString(component) ? easycom : component;
  }
  var createHook = (lifecycle) => (hook, target = (0, import_vue.getCurrentInstance)()) => {
    !import_vue.isInSSRComponentSetup && (0, import_vue.injectHook)(lifecycle, hook, target);
  };
  var onLoad = /* @__PURE__ */ createHook(ON_LOAD);
  var onUnload = /* @__PURE__ */ createHook(ON_UNLOAD);
  var useSettingStore = (0, import_pinia.defineStore)("setting", () => {
    let temp = uni.getStorageSync("setting");
    if (!temp) {
      temp = {
        ip: "127.0.0.1",
        port: 8080
      };
    }
    const setting = (0, import_vue.ref)(temp);
    temp = uni.getStorageSync("text");
    if (!temp) {
      temp = {
        topTitle: "\u667A\u6167\u5BA2\u6D41",
        leftTitle: "\u5BA2\u6D41\u5206\u5E03",
        rightTitle: "\u8FD1\u671F\u5BA2\u6D41",
        centre: {
          title: "\u666F\u533A\u4EBA\u6570",
          text: "\u4ECA\u65E5\u5165\u56ED"
        },
        bottomTitle: "\u5206\u65F6\u5BA2\u6D41"
      };
    }
    const textConfig = (0, import_vue.ref)(temp);
    const updateSetting = (newValue) => {
      if (!newValue)
        return;
      Object.assign(setting.value, newValue);
      uni.setStorageSync("setting", setting.value);
    };
    const updateText = (text_config) => {
      Object.assign(textConfig.value, text_config);
    };
    const baseUrl = (0, import_vue.computed)(() => {
      if (setting.value === void 0) {
        setting.value = {
          ip: "127.0.0.1",
          port: 8080
        };
      }
      return `http://${setting.value.ip}:${setting.value.port}/power-haven`;
    });
    return {
      setting,
      textConfig,
      updateText,
      updateSetting,
      baseUrl
    };
  });
  var _export_sfc = (sfc, props) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props) {
      target[key] = val;
    }
    return target;
  };

  // D:/code/HBuilderProjects/IntelligentFlow/unpackage/dist/dev/.nvue/pages/index/index.js
  var import_vue2 = __toESM(require_vue());

  // D:/code/HBuilderProjects/IntelligentFlow/unpackage/dist/dev/.nvue/interface.js
  var _imports_0 = "/static/background.png";
  function post(endpoint, data) {
    const settingStore = useSettingStore();
    return new Promise((resolve, reject) => {
      uni.request({
        method: "POST",
        url: settingStore.baseUrl + endpoint,
        data,
        success(temp) {
          if (temp.statusCode == 200) {
            response = temp.data;
            if (response.code == 0) {
              resolve(response.data);
            } else {
              reject(response.msg);
            }
          } else {
            reject(temp.errMsg);
          }
        },
        fail(temp) {
          reject(temp);
        }
      });
    });
  }
  function update_minutes_flow_data(cameraId) {
    const endpoint = "/bigscreen/person/line/minute10";
    return post(endpoint, {
      cameraId
    }).catch((reason) => {
      formatAppLog("error", "at utils/api/interface.js:18", "update_minutes_flow_data ", reason);
    });
  }
  function update_recent_flow_data(cameraId) {
    const endpoint = "/bigscreen/person/bar/hour4";
    return post(endpoint, {
      cameraId
    }).catch((reason) => {
      formatAppLog("error", "at utils/api/interface.js:28", "update_recent_flow_data ", reason);
    });
  }
  function update_calendar_flow_data(cameraId) {
    const endpoint = "/bigscreen/person/line/month2";
    return post(endpoint, {
      cameraId
    }).catch((reason) => {
      formatAppLog("error", "at utils/api/interface.js:38", "update_calendar_flow_data ", reason);
    });
  }

  // D:/code/HBuilderProjects/IntelligentFlow/unpackage/dist/dev/.nvue/pages/index/index.js
  var import_pinia2 = __toESM(require_pinia());
  var _imports_02 = "/static/title.png";
  var _sfc_main$9 = /* @__PURE__ */ (0, import_vue2.defineComponent)({
    __name: "HeaderTitle",
    props: {
      title: {
        type: String,
        require: true
      }
    },
    setup(__props) {
      const props = __props;
      return (_ctx, _cache) => {
        return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
          class: "contain",
          renderWhole: true
        }, [
          (0, import_vue2.createElementVNode)("u-image", {
            class: "background hd-img-1",
            src: _imports_02,
            mode: "scaleToFill"
          }),
          (0, import_vue2.createElementVNode)(
            "u-text",
            { class: "text" },
            (0, import_vue2.toDisplayString)(props.title),
            1
            /* TEXT */
          )
        ]);
      };
    }
  });
  var _style_0$9 = { "contain": { "": { "width": 962, "height": 60 } }, "background": { "": { "position": "absolute", "zIndex": -1 } }, "text": { "": { "marginTop": 5, "textAlign": "center", "fontWeight": "800", "color": "#ffffff", "fontSize": 36 } }, "hd-img-1": { "": { "top": 0, "left": 0, "width": 962, "height": 60 } } };
  var HeaderTitle = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["styles", [_style_0$9]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/HeaderTitle.nvue"]]);
  var _style_0$8 = { "contain": { "": { "position": "relative", "paddingTop": 10, "paddingRight": 10, "paddingBottom": 10, "paddingLeft": 10 } }, "common": { "": { "position": "absolute", "backgroundColor": "#4788fb", "boxShadow": "0 0 30px #4788fb" } }, "w-r": { "": { "width": 40, "height": 10 } }, "w-b": { "": { "height": 40, "width": 10 } }, "b-t-l": { "": { "borderTopLeftRadius": 10 } }, "b-t-r": { "": { "borderTopRightRadius": 10 } }, "b-b-l": { "": { "borderBottomLeftRadius": 10 } }, "b-b-r": { "": { "borderBottomRightRadius": 10 } }, "p-t-l": { "": { "top": 0, "left": 0 } }, "p-t-r": { "": { "top": 0, "right": 0 } }, "p-b-l": { "": { "bottom": 0, "left": 0 } }, "p-b-r": { "": { "bottom": 0, "right": 0 } } };
  var _sfc_main$8 = {};
  function _sfc_render$6(_ctx, _cache) {
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
      class: "contain",
      renderWhole: true
    }, [
      (0, import_vue2.createElementVNode)("view", { class: "common w-r p-t-l b-t-l" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-b p-t-l b-t-l" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-r p-t-r b-t-r" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-b p-t-r b-t-r" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-r p-b-l b-b-l" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-b p-b-l b-b-l" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-r p-b-r b-b-r" }),
      (0, import_vue2.createElementVNode)("view", { class: "common w-b p-b-r b-b-r" }),
      (0, import_vue2.createCommentVNode)(" \u63D2\u69FD "),
      (0, import_vue2.renderSlot)(_ctx.$slots, "default")
    ]);
  }
  var ContentBox = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["render", _sfc_render$6], ["styles", [_style_0$8]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/ContentBox.nvue"]]);
  function base64ToPath(base64) {
    return new Promise((resolve, reject) => {
      const [, format, bodyData] = /data:image\/(\w+);base64,(.*)/.exec(base64) || [];
      const bitmap = new plus.nativeObj.Bitmap("bitmap" + Date.now());
      bitmap.loadBase64Data(base64, () => {
        if (!format) {
          reject(new Error("ERROR_BASE64SRC_PARSE"));
        }
        const time = (/* @__PURE__ */ new Date()).getTime();
        const filePath = `_doc/uniapp_temp/${time}.${format}`;
        bitmap.save(
          filePath,
          {},
          () => {
            bitmap.clear();
            resolve(filePath);
          },
          (error) => {
            bitmap.clear();
            formatAppLog("error", "at uni_modules/lime-echart/components/l-echart/utils.js:98", `${JSON.stringify(error)}`);
            reject(error);
          }
        );
      }, (error) => {
        bitmap.clear();
        formatAppLog("error", "at uni_modules/lime-echart/components/l-echart/utils.js:103", `${JSON.stringify(error)}`);
        reject(error);
      });
    });
  }
  function sleep(time) {
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(true);
      }, time);
    });
  }
  var Echarts = class {
    constructor(webview2) {
      this.webview = webview2;
      this.options = null;
    }
    setOption() {
      this.options = arguments;
      this.webview.evalJs(`setOption(${JSON.stringify(arguments)})`);
    }
    getOption() {
      return this.options;
    }
    showLoading() {
      this.webview.evalJs(`showLoading(${JSON.stringify(arguments)})`);
    }
    hideLoading() {
      this.webview.evalJs(`hideLoading()`);
    }
    clear() {
      this.webview.evalJs(`clear()`);
    }
    dispose() {
      this.webview.evalJs(`dispose()`);
    }
    resize(size) {
      if (size) {
        this.webview.evalJs(`resize(${size})`);
      } else {
        this.webview.evalJs(`resize()`);
      }
    }
    on(type, ...args) {
      formatAppLog("warn", "at uni_modules/lime-echart/components/l-echart/nvue.js:33", "nvue \u6682\u4E0D\u652F\u6301\u4E8B\u4EF6");
    }
  };
  var _style_0$7 = { "lime-echart": { "": { "position": "relative", "flex": 1 } }, "lime-echart__canvas": { "": { "flex": 1 } } };
  global = {};
  var _sfc_main$7 = {
    name: "lime-echart",
    props: {
      webviewStyles: Object,
      // hybrid: Boolean,
      customStyle: String,
      isDisableScroll: Boolean,
      isClickable: {
        type: Boolean,
        default: true
      },
      enableHover: Boolean,
      beforeDelay: {
        type: Number,
        default: 30
      }
    },
    data() {
      return {
        use2dCanvas: false,
        ariaLabel: "\u56FE\u8868",
        width: null,
        height: null,
        nodeWidth: null,
        nodeHeight: null,
        // canvasNode: null,
        config: {},
        inited: false,
        finished: false,
        file: "",
        platform: "",
        isPC: false,
        isDown: false,
        isOffscreenCanvas: false,
        offscreenWidth: 0,
        offscreenHeight: 0
      };
    },
    computed: {
      canvasId() {
        return `lime-echart${this._ && this._.uid || this._uid}`;
      },
      offscreenCanvasId() {
        return `${this.canvasId}_offscreen`;
      },
      offscreenStyle() {
        return `width:${this.offscreenWidth}px;height: ${this.offscreenHeight}px; position: fixed; left: 99999px; background: red`;
      },
      canvasStyle() {
        return this.width && this.height ? "width:" + this.width + "px;height:" + this.height + "px" : "";
      }
    },
    unmounted() {
      this.clear();
      this.dispose();
    },
    created() {
      this.use2dCanvas = this.type === "2d" && canIUseCanvas2d();
    },
    mounted() {
      this.$nextTick(() => {
        this.$emit("finished");
      });
    },
    methods: {
      onMessage(e2) {
        var _a2;
        const res = ((_a2 = e2 == null ? void 0 : e2.detail) == null ? void 0 : _a2.data[0]) || null;
        if (res == null ? void 0 : res.event) {
          if (res.event === "inited") {
            this.inited = true;
          }
          this.$emit(res.event, JSON.parse(res.data));
        } else if (res == null ? void 0 : res.file) {
          this.file = res.data;
        } else if (!res[0] && JSON.stringify(res[0]) != "{}") {
          formatAppLog("error", "at uni_modules/lime-echart/components/l-echart/l-echart.vue:198", res);
        } else {
          formatAppLog("log", "at uni_modules/lime-echart/components/l-echart/l-echart.vue:200", ...res);
        }
      },
      setChart(callback) {
        if (!this.chart) {
          formatAppLog("warn", "at uni_modules/lime-echart/components/l-echart/l-echart.vue:206", `\u7EC4\u4EF6\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u8BF7\u5148\u4F7F\u7528 init`);
          return;
        }
        if (typeof callback === "function" && this.chart) {
          callback(this.chart);
        }
        if (typeof callback === "function") {
          this.$refs.webview.evalJs(`setChart(${JSON.stringify(callback.toString())}, ${JSON.stringify(this.chart.options)})`);
        }
      },
      setOption() {
        if (!this.chart || !this.chart.setOption) {
          formatAppLog("warn", "at uni_modules/lime-echart/components/l-echart/l-echart.vue:220", `\u7EC4\u4EF6\u8FD8\u672A\u521D\u59CB\u5316\uFF0C\u8BF7\u5148\u4F7F\u7528 init`);
          return;
        }
        this.chart.setOption(...arguments);
      },
      showLoading() {
        if (this.chart) {
          this.chart.showLoading(...arguments);
        }
      },
      hideLoading() {
        if (this.chart) {
          this.chart.hideLoading();
        }
      },
      clear() {
        if (this.chart) {
          this.chart.clear();
        }
      },
      dispose() {
        if (this.chart) {
          this.chart.dispose();
        }
      },
      resize(size) {
        if (size && size.width && size.height) {
          this.height = size.height;
          this.width = size.width;
          if (this.chart) {
            this.chart.resize(size);
          }
        } else {
          this.$nextTick(() => {
            uni.createSelectorQuery().in(this).select(`.lime-echart`).boundingClientRect().exec((res) => {
              if (res) {
                let { width, height } = res[0];
                this.width = width = width || 300;
                this.height = height = height || 300;
                this.chart.resize({ width, height });
              }
            });
          });
        }
      },
      canvasToTempFilePath(args = {}) {
        this.file = "";
        this.$refs.webview.evalJs(`canvasToTempFilePath()`);
        return new Promise((resolve, reject) => {
          this.$watch("file", (file) => __async(this, null, function* () {
            if (file) {
              const tempFilePath = yield base64ToPath(file);
              resolve(args.success({ tempFilePath }));
            } else {
              reject(args.fail({ error: `` }));
            }
          }));
        });
      },
      init(_0) {
        return __async(this, arguments, function* (echarts2, ...args) {
          let theme = null, opts = {}, callback;
          Array.from(arguments).forEach((item) => {
            if (typeof item === "function") {
              callback = item;
            }
            if (["string"].includes(typeof item)) {
              theme = item;
            }
            if (typeof item === "object") {
              opts = item;
            }
          });
          if (this.beforeDelay) {
            yield sleep(this.beforeDelay);
          }
          yield this.getContext();
          this.chart = new Echarts(this.$refs.webview);
          this.$refs.webview.evalJs(`init(null, null, ${JSON.stringify(opts)}, ${theme})`);
          if (callback) {
            callback(this.chart);
          } else {
            return this.chart;
          }
        });
      },
      getContext() {
        if (this.finished) {
          return Promise.resolve(this.finished);
        }
        return new Promise((resolve) => {
          this.$watch("finished", (val) => {
            if (val) {
              resolve(this.finished);
            }
          });
        });
      }
    }
  };
  function _sfc_render$5(_ctx, _cache, $props, $setup, $data, $options) {
    return $options.canvasId ? ((0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
      key: 0,
      class: "lime-echart",
      style: (0, import_vue2.normalizeStyle)($props.customStyle),
      ref: "limeEchart",
      ariaLabel: $data.ariaLabel,
      renderWhole: true
    }, [
      (0, import_vue2.createElementVNode)("u-web-view", {
        class: "lime-echart__canvas",
        id: $options.canvasId,
        style: (0, import_vue2.normalizeStyle)($options.canvasStyle),
        webviewStyles: $props.webviewStyles,
        ref: "webview",
        src: "/uni_modules/lime-echart/static/index.html",
        onPagefinish: _cache[0] || (_cache[0] = ($event) => $data.finished = true),
        "on:onPostMessage": _cache[1] || (_cache[1] = (...args) => $options.onMessage && $options.onMessage(...args))
      }, null, 44, ["id", "webviewStyles"])
    ], 12, ["ariaLabel"])) : (0, import_vue2.createCommentVNode)("v-if", true);
  }
  var __easycom_0 = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["render", _sfc_render$5], ["styles", [_style_0$7]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/uni_modules/lime-echart/components/l-echart/l-echart.vue"]]);
  var t = function(e2, n2) {
    return t = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t2, e3) {
      t2.__proto__ = e3;
    } || function(t2, e3) {
      for (var n3 in e3)
        Object.prototype.hasOwnProperty.call(e3, n3) && (t2[n3] = e3[n3]);
    }, t(e2, n2);
  };
  function e(e2, n2) {
    if ("function" != typeof n2 && null !== n2)
      throw new TypeError("Class extends value " + String(n2) + " is not a constructor or null");
    function i2() {
      this.constructor = e2;
    }
    t(e2, n2), e2.prototype = null === n2 ? Object.create(n2) : (i2.prototype = n2.prototype, new i2());
  }
  var n = function() {
    this.firefox = false, this.ie = false, this.edge = false, this.newEdge = false, this.weChat = false;
  };
  var i = new function() {
    this.browser = new n(), this.node = false, this.wxa = false, this.worker = false, this.svgSupported = false, this.touchEventsSupported = false, this.pointerEventsSupported = false, this.domSupported = false, this.transformSupported = false, this.transform3dSupported = false, this.hasGlobalWindow = "undefined" != typeof window;
  }();
  "object" == typeof wx && "function" == typeof wx.getSystemInfoSync ? (i.wxa = true, i.touchEventsSupported = true) : "undefined" == typeof document && "undefined" != typeof self ? i.worker = true : "undefined" == typeof navigator ? (i.node = true, i.svgSupported = true) : function(t2, e2) {
    var n2 = e2.browser, i2 = t2.match(/Firefox\/([\d.]+)/), r2 = t2.match(/MSIE\s([\d.]+)/) || t2.match(/Trident\/.+?rv:(([\d.]+))/), o2 = t2.match(/Edge?\/([\d.]+)/), a2 = /micromessenger/i.test(t2);
    i2 && (n2.firefox = true, n2.version = i2[1]);
    r2 && (n2.ie = true, n2.version = r2[1]);
    o2 && (n2.edge = true, n2.version = o2[1], n2.newEdge = +o2[1].split(".")[0] > 18);
    a2 && (n2.weChat = true);
    e2.svgSupported = "undefined" != typeof SVGRect, e2.touchEventsSupported = "ontouchstart" in window && !n2.ie && !n2.edge, e2.pointerEventsSupported = "onpointerdown" in window && (n2.edge || n2.ie && +n2.version >= 11), e2.domSupported = "undefined" != typeof document;
    var s2 = document.documentElement.style;
    e2.transform3dSupported = (n2.ie && "transition" in s2 || n2.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in s2) && !("OTransition" in s2), e2.transformSupported = e2.transform3dSupported || n2.ie && +n2.version >= 9;
  }(navigator.userAgent, i);
  var r = "sans-serif";
  var o = "12px " + r;
  var a;
  var s;
  var l = function(t2) {
    var e2 = {};
    if ("undefined" == typeof JSON)
      return e2;
    for (var n2 = 0; n2 < t2.length; n2++) {
      var i2 = String.fromCharCode(n2 + 32), r2 = (t2.charCodeAt(n2) - 20) / 100;
      e2[i2] = r2;
    }
    return e2;
  }("007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N");
  var u = { createCanvas: function() {
    return "undefined" != typeof document && document.createElement("canvas");
  }, measureText: function(t2, e2) {
    if (!a) {
      var n2 = u.createCanvas();
      a = n2 && n2.getContext("2d");
    }
    if (a)
      return s !== e2 && (s = a.font = e2 || o), a.measureText(t2);
    t2 = t2 || "";
    var i2 = /(\d+)px/.exec(e2 = e2 || o), r2 = i2 && +i2[1] || 12, h2 = 0;
    if (e2.indexOf("mono") >= 0)
      h2 = r2 * t2.length;
    else
      for (var c2 = 0; c2 < t2.length; c2++) {
        var p2 = l[t2[c2]];
        h2 += null == p2 ? r2 : p2 * r2;
      }
    return { width: h2 };
  }, loadImage: function(t2, e2, n2) {
    var i2 = new Image();
    return i2.onload = e2, i2.onerror = n2, i2.src = t2, i2;
  } };
  function h(t2) {
    for (var e2 in u)
      t2[e2] && (u[e2] = t2[e2]);
  }
  var c = z(["Function", "RegExp", "Date", "Error", "CanvasGradient", "CanvasPattern", "Image", "Canvas"], function(t2, e2) {
    return t2["[object " + e2 + "]"] = true, t2;
  }, {});
  var p = z(["Int8", "Uint8", "Uint8Clamped", "Int16", "Uint16", "Int32", "Uint32", "Float32", "Float64"], function(t2, e2) {
    return t2["[object " + e2 + "Array]"] = true, t2;
  }, {});
  var d = Object.prototype.toString;
  var f = Array.prototype;
  var g = f.forEach;
  var y = f.filter;
  var v = f.slice;
  var m = f.map;
  var x = function() {
  }.constructor;
  var _ = x ? x.prototype : null;
  var b = "__proto__";
  var w = 2311;
  function S() {
    return w++;
  }
  function M() {
    for (var t2 = [], e2 = 0; e2 < arguments.length; e2++)
      t2[e2] = arguments[e2];
    "undefined" != typeof console && console.error.apply(console, t2);
  }
  function I(t2) {
    if (null == t2 || "object" != typeof t2)
      return t2;
    var e2 = t2, n2 = d.call(t2);
    if ("[object Array]" === n2) {
      if (!ct(t2)) {
        e2 = [];
        for (var i2 = 0, r2 = t2.length; i2 < r2; i2++)
          e2[i2] = I(t2[i2]);
      }
    } else if (p[n2]) {
      if (!ct(t2)) {
        var o2 = t2.constructor;
        if (o2.from)
          e2 = o2.from(t2);
        else {
          e2 = new o2(t2.length);
          for (i2 = 0, r2 = t2.length; i2 < r2; i2++)
            e2[i2] = t2[i2];
        }
      }
    } else if (!c[n2] && !ct(t2) && !$(t2))
      for (var a2 in e2 = {}, t2)
        t2.hasOwnProperty(a2) && a2 !== b && (e2[a2] = I(t2[a2]));
    return e2;
  }
  function T(t2, e2, n2) {
    if (!j(e2) || !j(t2))
      return n2 ? I(e2) : t2;
    for (var i2 in e2)
      if (e2.hasOwnProperty(i2) && i2 !== b) {
        var r2 = t2[i2], o2 = e2[i2];
        !j(o2) || !j(r2) || H(o2) || H(r2) || $(o2) || $(r2) || q(o2) || q(r2) || ct(o2) || ct(r2) ? !n2 && i2 in t2 || (t2[i2] = I(e2[i2])) : T(r2, o2, n2);
      }
    return t2;
  }
  function C(t2, e2) {
    for (var n2 = t2[0], i2 = 1, r2 = t2.length; i2 < r2; i2++)
      n2 = T(n2, t2[i2], e2);
    return n2;
  }
  function D(t2, e2) {
    if (Object.assign)
      Object.assign(t2, e2);
    else
      for (var n2 in e2)
        e2.hasOwnProperty(n2) && n2 !== b && (t2[n2] = e2[n2]);
    return t2;
  }
  function A(t2, e2, n2) {
    for (var i2 = F(e2), r2 = 0; r2 < i2.length; r2++) {
      var o2 = i2[r2];
      (n2 ? null != e2[o2] : null == t2[o2]) && (t2[o2] = e2[o2]);
    }
    return t2;
  }
  var k = u.createCanvas;
  function L(t2, e2) {
    if (t2) {
      if (t2.indexOf)
        return t2.indexOf(e2);
      for (var n2 = 0, i2 = t2.length; n2 < i2; n2++)
        if (t2[n2] === e2)
          return n2;
    }
    return -1;
  }
  function P(t2, e2) {
    var n2 = t2.prototype;
    function i2() {
    }
    for (var r2 in i2.prototype = e2.prototype, t2.prototype = new i2(), n2)
      n2.hasOwnProperty(r2) && (t2.prototype[r2] = n2[r2]);
    t2.prototype.constructor = t2, t2.superClass = e2;
  }
  function O(t2, e2, n2) {
    if (t2 = "prototype" in t2 ? t2.prototype : t2, e2 = "prototype" in e2 ? e2.prototype : e2, Object.getOwnPropertyNames)
      for (var i2 = Object.getOwnPropertyNames(e2), r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2];
        "constructor" !== o2 && (n2 ? null != e2[o2] : null == t2[o2]) && (t2[o2] = e2[o2]);
      }
    else
      A(t2, e2, n2);
  }
  function R(t2) {
    return !!t2 && ("string" != typeof t2 && "number" == typeof t2.length);
  }
  function N(t2, e2, n2) {
    if (t2 && e2)
      if (t2.forEach && t2.forEach === g)
        t2.forEach(e2, n2);
      else if (t2.length === +t2.length)
        for (var i2 = 0, r2 = t2.length; i2 < r2; i2++)
          e2.call(n2, t2[i2], i2, t2);
      else
        for (var o2 in t2)
          t2.hasOwnProperty(o2) && e2.call(n2, t2[o2], o2, t2);
  }
  function E(t2, e2, n2) {
    if (!t2)
      return [];
    if (!e2)
      return ot(t2);
    if (t2.map && t2.map === m)
      return t2.map(e2, n2);
    for (var i2 = [], r2 = 0, o2 = t2.length; r2 < o2; r2++)
      i2.push(e2.call(n2, t2[r2], r2, t2));
    return i2;
  }
  function z(t2, e2, n2, i2) {
    if (t2 && e2) {
      for (var r2 = 0, o2 = t2.length; r2 < o2; r2++)
        n2 = e2.call(i2, n2, t2[r2], r2, t2);
      return n2;
    }
  }
  function V(t2, e2, n2) {
    if (!t2)
      return [];
    if (!e2)
      return ot(t2);
    if (t2.filter && t2.filter === y)
      return t2.filter(e2, n2);
    for (var i2 = [], r2 = 0, o2 = t2.length; r2 < o2; r2++)
      e2.call(n2, t2[r2], r2, t2) && i2.push(t2[r2]);
    return i2;
  }
  function B(t2, e2, n2) {
    if (t2 && e2) {
      for (var i2 = 0, r2 = t2.length; i2 < r2; i2++)
        if (e2.call(n2, t2[i2], i2, t2))
          return t2[i2];
    }
  }
  function F(t2) {
    if (!t2)
      return [];
    if (Object.keys)
      return Object.keys(t2);
    var e2 = [];
    for (var n2 in t2)
      t2.hasOwnProperty(n2) && e2.push(n2);
    return e2;
  }
  var G = _ && Y(_.bind) ? _.call.bind(_.bind) : function(t2, e2) {
    for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
      n2[i2 - 2] = arguments[i2];
    return function() {
      return t2.apply(e2, n2.concat(v.call(arguments)));
    };
  };
  function W(t2) {
    for (var e2 = [], n2 = 1; n2 < arguments.length; n2++)
      e2[n2 - 1] = arguments[n2];
    return function() {
      return t2.apply(this, e2.concat(v.call(arguments)));
    };
  }
  function H(t2) {
    return Array.isArray ? Array.isArray(t2) : "[object Array]" === d.call(t2);
  }
  function Y(t2) {
    return "function" == typeof t2;
  }
  function X(t2) {
    return "string" == typeof t2;
  }
  function U(t2) {
    return "[object String]" === d.call(t2);
  }
  function Z(t2) {
    return "number" == typeof t2;
  }
  function j(t2) {
    var e2 = typeof t2;
    return "function" === e2 || !!t2 && "object" === e2;
  }
  function q(t2) {
    return !!c[d.call(t2)];
  }
  function K(t2) {
    return !!p[d.call(t2)];
  }
  function $(t2) {
    return "object" == typeof t2 && "number" == typeof t2.nodeType && "object" == typeof t2.ownerDocument;
  }
  function J(t2) {
    return null != t2.colorStops;
  }
  function Q(t2) {
    return null != t2.image;
  }
  function tt(t2) {
    return "[object RegExp]" === d.call(t2);
  }
  function et(t2) {
    return t2 != t2;
  }
  function nt() {
    for (var t2 = [], e2 = 0; e2 < arguments.length; e2++)
      t2[e2] = arguments[e2];
    for (var n2 = 0, i2 = t2.length; n2 < i2; n2++)
      if (null != t2[n2])
        return t2[n2];
  }
  function it(t2, e2) {
    return null != t2 ? t2 : e2;
  }
  function rt(t2, e2, n2) {
    return null != t2 ? t2 : null != e2 ? e2 : n2;
  }
  function ot(t2) {
    for (var e2 = [], n2 = 1; n2 < arguments.length; n2++)
      e2[n2 - 1] = arguments[n2];
    return v.apply(t2, e2);
  }
  function at(t2) {
    if ("number" == typeof t2)
      return [t2, t2, t2, t2];
    var e2 = t2.length;
    return 2 === e2 ? [t2[0], t2[1], t2[0], t2[1]] : 3 === e2 ? [t2[0], t2[1], t2[2], t2[1]] : t2;
  }
  function st(t2, e2) {
    if (!t2)
      throw new Error(e2);
  }
  function lt(t2) {
    return null == t2 ? null : "function" == typeof t2.trim ? t2.trim() : t2.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  }
  var ut = "__ec_primitive__";
  function ht(t2) {
    t2[ut] = true;
  }
  function ct(t2) {
    return t2[ut];
  }
  var pt = function() {
    function t2() {
      this.data = {};
    }
    return t2.prototype.delete = function(t3) {
      var e2 = this.has(t3);
      return e2 && delete this.data[t3], e2;
    }, t2.prototype.has = function(t3) {
      return this.data.hasOwnProperty(t3);
    }, t2.prototype.get = function(t3) {
      return this.data[t3];
    }, t2.prototype.set = function(t3, e2) {
      return this.data[t3] = e2, this;
    }, t2.prototype.keys = function() {
      return F(this.data);
    }, t2.prototype.forEach = function(t3) {
      var e2 = this.data;
      for (var n2 in e2)
        e2.hasOwnProperty(n2) && t3(e2[n2], n2);
    }, t2;
  }();
  var dt = "function" == typeof Map;
  var ft = function() {
    function t2(e2) {
      var n2 = H(e2);
      this.data = dt ? /* @__PURE__ */ new Map() : new pt();
      var i2 = this;
      function r2(t3, e3) {
        n2 ? i2.set(t3, e3) : i2.set(e3, t3);
      }
      e2 instanceof t2 ? e2.each(r2) : e2 && N(e2, r2);
    }
    return t2.prototype.hasKey = function(t3) {
      return this.data.has(t3);
    }, t2.prototype.get = function(t3) {
      return this.data.get(t3);
    }, t2.prototype.set = function(t3, e2) {
      return this.data.set(t3, e2), e2;
    }, t2.prototype.each = function(t3, e2) {
      this.data.forEach(function(n2, i2) {
        t3.call(e2, n2, i2);
      });
    }, t2.prototype.keys = function() {
      var t3 = this.data.keys();
      return dt ? Array.from(t3) : t3;
    }, t2.prototype.removeKey = function(t3) {
      this.data.delete(t3);
    }, t2;
  }();
  function gt(t2) {
    return new ft(t2);
  }
  function yt(t2, e2) {
    for (var n2 = new t2.constructor(t2.length + e2.length), i2 = 0; i2 < t2.length; i2++)
      n2[i2] = t2[i2];
    var r2 = t2.length;
    for (i2 = 0; i2 < e2.length; i2++)
      n2[i2 + r2] = e2[i2];
    return n2;
  }
  function vt(t2, e2) {
    var n2;
    if (Object.create)
      n2 = Object.create(t2);
    else {
      var i2 = function() {
      };
      i2.prototype = t2, n2 = new i2();
    }
    return e2 && D(n2, e2), n2;
  }
  function mt(t2) {
    var e2 = t2.style;
    e2.webkitUserSelect = "none", e2.userSelect = "none", e2.webkitTapHighlightColor = "rgba(0,0,0,0)", e2["-webkit-touch-callout"] = "none";
  }
  function xt(t2, e2) {
    return t2.hasOwnProperty(e2);
  }
  function _t() {
  }
  var bt = 180 / Math.PI;
  var wt = Object.freeze({ __proto__: null, guid: S, logError: M, clone: I, merge: T, mergeAll: C, extend: D, defaults: A, createCanvas: k, indexOf: L, inherits: P, mixin: O, isArrayLike: R, each: N, map: E, reduce: z, filter: V, find: B, keys: F, bind: G, curry: W, isArray: H, isFunction: Y, isString: X, isStringSafe: U, isNumber: Z, isObject: j, isBuiltInObject: q, isTypedArray: K, isDom: $, isGradientObject: J, isImagePatternObject: Q, isRegExp: tt, eqNaN: et, retrieve: nt, retrieve2: it, retrieve3: rt, slice: ot, normalizeCssArray: at, assert: st, trim: lt, setAsPrimitive: ht, isPrimitive: ct, HashMap: ft, createHashMap: gt, concatArray: yt, createObject: vt, disableUserSelect: mt, hasOwn: xt, noop: _t, RADIAN_TO_DEGREE: bt });
  function St(t2, e2) {
    return null == t2 && (t2 = 0), null == e2 && (e2 = 0), [t2, e2];
  }
  function Mt(t2, e2) {
    return t2[0] = e2[0], t2[1] = e2[1], t2;
  }
  function It(t2) {
    return [t2[0], t2[1]];
  }
  function Tt(t2, e2, n2) {
    return t2[0] = e2, t2[1] = n2, t2;
  }
  function Ct(t2, e2, n2) {
    return t2[0] = e2[0] + n2[0], t2[1] = e2[1] + n2[1], t2;
  }
  function Dt(t2, e2, n2, i2) {
    return t2[0] = e2[0] + n2[0] * i2, t2[1] = e2[1] + n2[1] * i2, t2;
  }
  function At(t2, e2, n2) {
    return t2[0] = e2[0] - n2[0], t2[1] = e2[1] - n2[1], t2;
  }
  function kt(t2) {
    return Math.sqrt(Pt(t2));
  }
  var Lt = kt;
  function Pt(t2) {
    return t2[0] * t2[0] + t2[1] * t2[1];
  }
  var Ot = Pt;
  function Rt(t2, e2, n2) {
    return t2[0] = e2[0] * n2, t2[1] = e2[1] * n2, t2;
  }
  function Nt(t2, e2) {
    var n2 = kt(e2);
    return 0 === n2 ? (t2[0] = 0, t2[1] = 0) : (t2[0] = e2[0] / n2, t2[1] = e2[1] / n2), t2;
  }
  function Et(t2, e2) {
    return Math.sqrt((t2[0] - e2[0]) * (t2[0] - e2[0]) + (t2[1] - e2[1]) * (t2[1] - e2[1]));
  }
  var zt = Et;
  function Vt(t2, e2) {
    return (t2[0] - e2[0]) * (t2[0] - e2[0]) + (t2[1] - e2[1]) * (t2[1] - e2[1]);
  }
  var Bt = Vt;
  function Ft(t2, e2, n2, i2) {
    return t2[0] = e2[0] + i2 * (n2[0] - e2[0]), t2[1] = e2[1] + i2 * (n2[1] - e2[1]), t2;
  }
  function Gt(t2, e2, n2) {
    var i2 = e2[0], r2 = e2[1];
    return t2[0] = n2[0] * i2 + n2[2] * r2 + n2[4], t2[1] = n2[1] * i2 + n2[3] * r2 + n2[5], t2;
  }
  function Wt(t2, e2, n2) {
    return t2[0] = Math.min(e2[0], n2[0]), t2[1] = Math.min(e2[1], n2[1]), t2;
  }
  function Ht(t2, e2, n2) {
    return t2[0] = Math.max(e2[0], n2[0]), t2[1] = Math.max(e2[1], n2[1]), t2;
  }
  var Yt = Object.freeze({ __proto__: null, create: St, copy: Mt, clone: It, set: Tt, add: Ct, scaleAndAdd: Dt, sub: At, len: kt, length: Lt, lenSquare: Pt, lengthSquare: Ot, mul: function(t2, e2, n2) {
    return t2[0] = e2[0] * n2[0], t2[1] = e2[1] * n2[1], t2;
  }, div: function(t2, e2, n2) {
    return t2[0] = e2[0] / n2[0], t2[1] = e2[1] / n2[1], t2;
  }, dot: function(t2, e2) {
    return t2[0] * e2[0] + t2[1] * e2[1];
  }, scale: Rt, normalize: Nt, distance: Et, dist: zt, distanceSquare: Vt, distSquare: Bt, negate: function(t2, e2) {
    return t2[0] = -e2[0], t2[1] = -e2[1], t2;
  }, lerp: Ft, applyTransform: Gt, min: Wt, max: Ht });
  var Xt = function(t2, e2) {
    this.target = t2, this.topTarget = e2 && e2.topTarget;
  };
  var Ut = function() {
    function t2(t3) {
      this.handler = t3, t3.on("mousedown", this._dragStart, this), t3.on("mousemove", this._drag, this), t3.on("mouseup", this._dragEnd, this);
    }
    return t2.prototype._dragStart = function(t3) {
      for (var e2 = t3.target; e2 && !e2.draggable; )
        e2 = e2.parent || e2.__hostTarget;
      e2 && (this._draggingTarget = e2, e2.dragging = true, this._x = t3.offsetX, this._y = t3.offsetY, this.handler.dispatchToElement(new Xt(e2, t3), "dragstart", t3.event));
    }, t2.prototype._drag = function(t3) {
      var e2 = this._draggingTarget;
      if (e2) {
        var n2 = t3.offsetX, i2 = t3.offsetY, r2 = n2 - this._x, o2 = i2 - this._y;
        this._x = n2, this._y = i2, e2.drift(r2, o2, t3), this.handler.dispatchToElement(new Xt(e2, t3), "drag", t3.event);
        var a2 = this.handler.findHover(n2, i2, e2).target, s2 = this._dropTarget;
        this._dropTarget = a2, e2 !== a2 && (s2 && a2 !== s2 && this.handler.dispatchToElement(new Xt(s2, t3), "dragleave", t3.event), a2 && a2 !== s2 && this.handler.dispatchToElement(new Xt(a2, t3), "dragenter", t3.event));
      }
    }, t2.prototype._dragEnd = function(t3) {
      var e2 = this._draggingTarget;
      e2 && (e2.dragging = false), this.handler.dispatchToElement(new Xt(e2, t3), "dragend", t3.event), this._dropTarget && this.handler.dispatchToElement(new Xt(this._dropTarget, t3), "drop", t3.event), this._draggingTarget = null, this._dropTarget = null;
    }, t2;
  }();
  var Zt = function() {
    function t2(t3) {
      t3 && (this._$eventProcessor = t3);
    }
    return t2.prototype.on = function(t3, e2, n2, i2) {
      this._$handlers || (this._$handlers = {});
      var r2 = this._$handlers;
      if ("function" == typeof e2 && (i2 = n2, n2 = e2, e2 = null), !n2 || !t3)
        return this;
      var o2 = this._$eventProcessor;
      null != e2 && o2 && o2.normalizeQuery && (e2 = o2.normalizeQuery(e2)), r2[t3] || (r2[t3] = []);
      for (var a2 = 0; a2 < r2[t3].length; a2++)
        if (r2[t3][a2].h === n2)
          return this;
      var s2 = { h: n2, query: e2, ctx: i2 || this, callAtLast: n2.zrEventfulCallAtLast }, l2 = r2[t3].length - 1, u2 = r2[t3][l2];
      return u2 && u2.callAtLast ? r2[t3].splice(l2, 0, s2) : r2[t3].push(s2), this;
    }, t2.prototype.isSilent = function(t3) {
      var e2 = this._$handlers;
      return !e2 || !e2[t3] || !e2[t3].length;
    }, t2.prototype.off = function(t3, e2) {
      var n2 = this._$handlers;
      if (!n2)
        return this;
      if (!t3)
        return this._$handlers = {}, this;
      if (e2) {
        if (n2[t3]) {
          for (var i2 = [], r2 = 0, o2 = n2[t3].length; r2 < o2; r2++)
            n2[t3][r2].h !== e2 && i2.push(n2[t3][r2]);
          n2[t3] = i2;
        }
        n2[t3] && 0 === n2[t3].length && delete n2[t3];
      } else
        delete n2[t3];
      return this;
    }, t2.prototype.trigger = function(t3) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++)
        e2[n2 - 1] = arguments[n2];
      if (!this._$handlers)
        return this;
      var i2 = this._$handlers[t3], r2 = this._$eventProcessor;
      if (i2)
        for (var o2 = e2.length, a2 = i2.length, s2 = 0; s2 < a2; s2++) {
          var l2 = i2[s2];
          if (!r2 || !r2.filter || null == l2.query || r2.filter(t3, l2.query))
            switch (o2) {
              case 0:
                l2.h.call(l2.ctx);
                break;
              case 1:
                l2.h.call(l2.ctx, e2[0]);
                break;
              case 2:
                l2.h.call(l2.ctx, e2[0], e2[1]);
                break;
              default:
                l2.h.apply(l2.ctx, e2);
            }
        }
      return r2 && r2.afterTrigger && r2.afterTrigger(t3), this;
    }, t2.prototype.triggerWithContext = function(t3) {
      for (var e2 = [], n2 = 1; n2 < arguments.length; n2++)
        e2[n2 - 1] = arguments[n2];
      if (!this._$handlers)
        return this;
      var i2 = this._$handlers[t3], r2 = this._$eventProcessor;
      if (i2)
        for (var o2 = e2.length, a2 = e2[o2 - 1], s2 = i2.length, l2 = 0; l2 < s2; l2++) {
          var u2 = i2[l2];
          if (!r2 || !r2.filter || null == u2.query || r2.filter(t3, u2.query))
            switch (o2) {
              case 0:
                u2.h.call(a2);
                break;
              case 1:
                u2.h.call(a2, e2[0]);
                break;
              case 2:
                u2.h.call(a2, e2[0], e2[1]);
                break;
              default:
                u2.h.apply(a2, e2.slice(1, o2 - 1));
            }
        }
      return r2 && r2.afterTrigger && r2.afterTrigger(t3), this;
    }, t2;
  }();
  var jt = Math.log(2);
  function qt(t2, e2, n2, i2, r2, o2) {
    var a2 = i2 + "-" + r2, s2 = t2.length;
    if (o2.hasOwnProperty(a2))
      return o2[a2];
    if (1 === e2) {
      var l2 = Math.round(Math.log((1 << s2) - 1 & ~r2) / jt);
      return t2[n2][l2];
    }
    for (var u2 = i2 | 1 << n2, h2 = n2 + 1; i2 & 1 << h2; )
      h2++;
    for (var c2 = 0, p2 = 0, d2 = 0; p2 < s2; p2++) {
      var f2 = 1 << p2;
      f2 & r2 || (c2 += (d2 % 2 ? -1 : 1) * t2[n2][p2] * qt(t2, e2 - 1, h2, u2, r2 | f2, o2), d2++);
    }
    return o2[a2] = c2, c2;
  }
  function Kt(t2, e2) {
    var n2 = [[t2[0], t2[1], 1, 0, 0, 0, -e2[0] * t2[0], -e2[0] * t2[1]], [0, 0, 0, t2[0], t2[1], 1, -e2[1] * t2[0], -e2[1] * t2[1]], [t2[2], t2[3], 1, 0, 0, 0, -e2[2] * t2[2], -e2[2] * t2[3]], [0, 0, 0, t2[2], t2[3], 1, -e2[3] * t2[2], -e2[3] * t2[3]], [t2[4], t2[5], 1, 0, 0, 0, -e2[4] * t2[4], -e2[4] * t2[5]], [0, 0, 0, t2[4], t2[5], 1, -e2[5] * t2[4], -e2[5] * t2[5]], [t2[6], t2[7], 1, 0, 0, 0, -e2[6] * t2[6], -e2[6] * t2[7]], [0, 0, 0, t2[6], t2[7], 1, -e2[7] * t2[6], -e2[7] * t2[7]]], i2 = {}, r2 = qt(n2, 8, 0, 0, 0, i2);
    if (0 !== r2) {
      for (var o2 = [], a2 = 0; a2 < 8; a2++)
        for (var s2 = 0; s2 < 8; s2++)
          null == o2[s2] && (o2[s2] = 0), o2[s2] += ((a2 + s2) % 2 ? -1 : 1) * qt(n2, 7, 0 === a2 ? 1 : 0, 1 << a2, 1 << s2, i2) / r2 * e2[a2];
      return function(t3, e3, n3) {
        var i3 = e3 * o2[6] + n3 * o2[7] + 1;
        t3[0] = (e3 * o2[0] + n3 * o2[1] + o2[2]) / i3, t3[1] = (e3 * o2[3] + n3 * o2[4] + o2[5]) / i3;
      };
    }
  }
  var $t = "___zrEVENTSAVED";
  var Jt = [];
  function Qt(t2, e2, n2, r2, o2) {
    if (e2.getBoundingClientRect && i.domSupported && !te(e2)) {
      var a2 = e2[$t] || (e2[$t] = {}), s2 = function(t3, e3) {
        var n3 = e3.markers;
        if (n3)
          return n3;
        n3 = e3.markers = [];
        for (var i2 = ["left", "right"], r3 = ["top", "bottom"], o3 = 0; o3 < 4; o3++) {
          var a3 = document.createElement("div"), s3 = o3 % 2, l3 = (o3 >> 1) % 2;
          a3.style.cssText = ["position: absolute", "visibility: hidden", "padding: 0", "margin: 0", "border-width: 0", "user-select: none", "width:0", "height:0", i2[s3] + ":0", r3[l3] + ":0", i2[1 - s3] + ":auto", r3[1 - l3] + ":auto", ""].join("!important;"), t3.appendChild(a3), n3.push(a3);
        }
        return n3;
      }(e2, a2), l2 = function(t3, e3, n3) {
        for (var i2 = n3 ? "invTrans" : "trans", r3 = e3[i2], o3 = e3.srcCoords, a3 = [], s3 = [], l3 = true, u2 = 0; u2 < 4; u2++) {
          var h2 = t3[u2].getBoundingClientRect(), c2 = 2 * u2, p2 = h2.left, d2 = h2.top;
          a3.push(p2, d2), l3 = l3 && o3 && p2 === o3[c2] && d2 === o3[c2 + 1], s3.push(t3[u2].offsetLeft, t3[u2].offsetTop);
        }
        return l3 && r3 ? r3 : (e3.srcCoords = a3, e3[i2] = n3 ? Kt(s3, a3) : Kt(a3, s3));
      }(s2, a2, o2);
      if (l2)
        return l2(t2, n2, r2), true;
    }
    return false;
  }
  function te(t2) {
    return "CANVAS" === t2.nodeName.toUpperCase();
  }
  var ee = /([&<>"'])/g;
  var ne = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" };
  function ie(t2) {
    return null == t2 ? "" : (t2 + "").replace(ee, function(t3, e2) {
      return ne[e2];
    });
  }
  var re = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;
  var oe = [];
  var ae = i.browser.firefox && +i.browser.version.split(".")[0] < 39;
  function se(t2, e2, n2, i2) {
    return n2 = n2 || {}, i2 ? le(t2, e2, n2) : ae && null != e2.layerX && e2.layerX !== e2.offsetX ? (n2.zrX = e2.layerX, n2.zrY = e2.layerY) : null != e2.offsetX ? (n2.zrX = e2.offsetX, n2.zrY = e2.offsetY) : le(t2, e2, n2), n2;
  }
  function le(t2, e2, n2) {
    if (i.domSupported && t2.getBoundingClientRect) {
      var r2 = e2.clientX, o2 = e2.clientY;
      if (te(t2)) {
        var a2 = t2.getBoundingClientRect();
        return n2.zrX = r2 - a2.left, void (n2.zrY = o2 - a2.top);
      }
      if (Qt(oe, t2, r2, o2))
        return n2.zrX = oe[0], void (n2.zrY = oe[1]);
    }
    n2.zrX = n2.zrY = 0;
  }
  function ue(t2) {
    return t2 || window.event;
  }
  function he(t2, e2, n2) {
    if (null != (e2 = ue(e2)).zrX)
      return e2;
    var i2 = e2.type;
    if (i2 && i2.indexOf("touch") >= 0) {
      var r2 = "touchend" !== i2 ? e2.targetTouches[0] : e2.changedTouches[0];
      r2 && se(t2, r2, e2, n2);
    } else {
      se(t2, e2, e2, n2);
      var o2 = function(t3) {
        var e3 = t3.wheelDelta;
        if (e3)
          return e3;
        var n3 = t3.deltaX, i3 = t3.deltaY;
        if (null == n3 || null == i3)
          return e3;
        return 3 * (0 !== i3 ? Math.abs(i3) : Math.abs(n3)) * (i3 > 0 ? -1 : i3 < 0 ? 1 : n3 > 0 ? -1 : 1);
      }(e2);
      e2.zrDelta = o2 ? o2 / 120 : -(e2.detail || 0) / 3;
    }
    var a2 = e2.button;
    return null == e2.which && void 0 !== a2 && re.test(e2.type) && (e2.which = 1 & a2 ? 1 : 2 & a2 ? 3 : 4 & a2 ? 2 : 0), e2;
  }
  function ce(t2, e2, n2, i2) {
    t2.addEventListener(e2, n2, i2);
  }
  var pe = function(t2) {
    t2.preventDefault(), t2.stopPropagation(), t2.cancelBubble = true;
  };
  function de(t2) {
    return 2 === t2.which || 3 === t2.which;
  }
  var fe = function() {
    function t2() {
      this._track = [];
    }
    return t2.prototype.recognize = function(t3, e2, n2) {
      return this._doTrack(t3, e2, n2), this._recognize(t3);
    }, t2.prototype.clear = function() {
      return this._track.length = 0, this;
    }, t2.prototype._doTrack = function(t3, e2, n2) {
      var i2 = t3.touches;
      if (i2) {
        for (var r2 = { points: [], touches: [], target: e2, event: t3 }, o2 = 0, a2 = i2.length; o2 < a2; o2++) {
          var s2 = i2[o2], l2 = se(n2, s2, {});
          r2.points.push([l2.zrX, l2.zrY]), r2.touches.push(s2);
        }
        this._track.push(r2);
      }
    }, t2.prototype._recognize = function(t3) {
      for (var e2 in ye)
        if (ye.hasOwnProperty(e2)) {
          var n2 = ye[e2](this._track, t3);
          if (n2)
            return n2;
        }
    }, t2;
  }();
  function ge(t2) {
    var e2 = t2[1][0] - t2[0][0], n2 = t2[1][1] - t2[0][1];
    return Math.sqrt(e2 * e2 + n2 * n2);
  }
  var ye = { pinch: function(t2, e2) {
    var n2 = t2.length;
    if (n2) {
      var i2, r2 = (t2[n2 - 1] || {}).points, o2 = (t2[n2 - 2] || {}).points || r2;
      if (o2 && o2.length > 1 && r2 && r2.length > 1) {
        var a2 = ge(r2) / ge(o2);
        !isFinite(a2) && (a2 = 1), e2.pinchScale = a2;
        var s2 = [((i2 = r2)[0][0] + i2[1][0]) / 2, (i2[0][1] + i2[1][1]) / 2];
        return e2.pinchX = s2[0], e2.pinchY = s2[1], { type: "pinch", target: t2[0].target, event: e2 };
      }
    }
  } };
  function ve() {
    return [1, 0, 0, 1, 0, 0];
  }
  function me(t2) {
    return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2[4] = 0, t2[5] = 0, t2;
  }
  function xe(t2, e2) {
    return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2[4] = e2[4], t2[5] = e2[5], t2;
  }
  function _e(t2, e2, n2) {
    var i2 = e2[0] * n2[0] + e2[2] * n2[1], r2 = e2[1] * n2[0] + e2[3] * n2[1], o2 = e2[0] * n2[2] + e2[2] * n2[3], a2 = e2[1] * n2[2] + e2[3] * n2[3], s2 = e2[0] * n2[4] + e2[2] * n2[5] + e2[4], l2 = e2[1] * n2[4] + e2[3] * n2[5] + e2[5];
    return t2[0] = i2, t2[1] = r2, t2[2] = o2, t2[3] = a2, t2[4] = s2, t2[5] = l2, t2;
  }
  function be(t2, e2, n2) {
    return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2[4] = e2[4] + n2[0], t2[5] = e2[5] + n2[1], t2;
  }
  function we(t2, e2, n2) {
    var i2 = e2[0], r2 = e2[2], o2 = e2[4], a2 = e2[1], s2 = e2[3], l2 = e2[5], u2 = Math.sin(n2), h2 = Math.cos(n2);
    return t2[0] = i2 * h2 + a2 * u2, t2[1] = -i2 * u2 + a2 * h2, t2[2] = r2 * h2 + s2 * u2, t2[3] = -r2 * u2 + h2 * s2, t2[4] = h2 * o2 + u2 * l2, t2[5] = h2 * l2 - u2 * o2, t2;
  }
  function Se(t2, e2, n2) {
    var i2 = n2[0], r2 = n2[1];
    return t2[0] = e2[0] * i2, t2[1] = e2[1] * r2, t2[2] = e2[2] * i2, t2[3] = e2[3] * r2, t2[4] = e2[4] * i2, t2[5] = e2[5] * r2, t2;
  }
  function Me(t2, e2) {
    var n2 = e2[0], i2 = e2[2], r2 = e2[4], o2 = e2[1], a2 = e2[3], s2 = e2[5], l2 = n2 * a2 - o2 * i2;
    return l2 ? (l2 = 1 / l2, t2[0] = a2 * l2, t2[1] = -o2 * l2, t2[2] = -i2 * l2, t2[3] = n2 * l2, t2[4] = (i2 * s2 - a2 * r2) * l2, t2[5] = (o2 * r2 - n2 * s2) * l2, t2) : null;
  }
  function Ie(t2) {
    var e2 = [1, 0, 0, 1, 0, 0];
    return xe(e2, t2), e2;
  }
  var Te = Object.freeze({ __proto__: null, create: ve, identity: me, copy: xe, mul: _e, translate: be, rotate: we, scale: Se, invert: Me, clone: Ie });
  var Ce = function() {
    function t2(t3, e2) {
      this.x = t3 || 0, this.y = e2 || 0;
    }
    return t2.prototype.copy = function(t3) {
      return this.x = t3.x, this.y = t3.y, this;
    }, t2.prototype.clone = function() {
      return new t2(this.x, this.y);
    }, t2.prototype.set = function(t3, e2) {
      return this.x = t3, this.y = e2, this;
    }, t2.prototype.equal = function(t3) {
      return t3.x === this.x && t3.y === this.y;
    }, t2.prototype.add = function(t3) {
      return this.x += t3.x, this.y += t3.y, this;
    }, t2.prototype.scale = function(t3) {
      this.x *= t3, this.y *= t3;
    }, t2.prototype.scaleAndAdd = function(t3, e2) {
      this.x += t3.x * e2, this.y += t3.y * e2;
    }, t2.prototype.sub = function(t3) {
      return this.x -= t3.x, this.y -= t3.y, this;
    }, t2.prototype.dot = function(t3) {
      return this.x * t3.x + this.y * t3.y;
    }, t2.prototype.len = function() {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    }, t2.prototype.lenSquare = function() {
      return this.x * this.x + this.y * this.y;
    }, t2.prototype.normalize = function() {
      var t3 = this.len();
      return this.x /= t3, this.y /= t3, this;
    }, t2.prototype.distance = function(t3) {
      var e2 = this.x - t3.x, n2 = this.y - t3.y;
      return Math.sqrt(e2 * e2 + n2 * n2);
    }, t2.prototype.distanceSquare = function(t3) {
      var e2 = this.x - t3.x, n2 = this.y - t3.y;
      return e2 * e2 + n2 * n2;
    }, t2.prototype.negate = function() {
      return this.x = -this.x, this.y = -this.y, this;
    }, t2.prototype.transform = function(t3) {
      if (t3) {
        var e2 = this.x, n2 = this.y;
        return this.x = t3[0] * e2 + t3[2] * n2 + t3[4], this.y = t3[1] * e2 + t3[3] * n2 + t3[5], this;
      }
    }, t2.prototype.toArray = function(t3) {
      return t3[0] = this.x, t3[1] = this.y, t3;
    }, t2.prototype.fromArray = function(t3) {
      this.x = t3[0], this.y = t3[1];
    }, t2.set = function(t3, e2, n2) {
      t3.x = e2, t3.y = n2;
    }, t2.copy = function(t3, e2) {
      t3.x = e2.x, t3.y = e2.y;
    }, t2.len = function(t3) {
      return Math.sqrt(t3.x * t3.x + t3.y * t3.y);
    }, t2.lenSquare = function(t3) {
      return t3.x * t3.x + t3.y * t3.y;
    }, t2.dot = function(t3, e2) {
      return t3.x * e2.x + t3.y * e2.y;
    }, t2.add = function(t3, e2, n2) {
      t3.x = e2.x + n2.x, t3.y = e2.y + n2.y;
    }, t2.sub = function(t3, e2, n2) {
      t3.x = e2.x - n2.x, t3.y = e2.y - n2.y;
    }, t2.scale = function(t3, e2, n2) {
      t3.x = e2.x * n2, t3.y = e2.y * n2;
    }, t2.scaleAndAdd = function(t3, e2, n2, i2) {
      t3.x = e2.x + n2.x * i2, t3.y = e2.y + n2.y * i2;
    }, t2.lerp = function(t3, e2, n2, i2) {
      var r2 = 1 - i2;
      t3.x = r2 * e2.x + i2 * n2.x, t3.y = r2 * e2.y + i2 * n2.y;
    }, t2;
  }();
  var De = Math.min;
  var Ae = Math.max;
  var ke = new Ce();
  var Le = new Ce();
  var Pe = new Ce();
  var Oe = new Ce();
  var Re = new Ce();
  var Ne = new Ce();
  var Ee = function() {
    function t2(t3, e2, n2, i2) {
      n2 < 0 && (t3 += n2, n2 = -n2), i2 < 0 && (e2 += i2, i2 = -i2), this.x = t3, this.y = e2, this.width = n2, this.height = i2;
    }
    return t2.prototype.union = function(t3) {
      var e2 = De(t3.x, this.x), n2 = De(t3.y, this.y);
      isFinite(this.x) && isFinite(this.width) ? this.width = Ae(t3.x + t3.width, this.x + this.width) - e2 : this.width = t3.width, isFinite(this.y) && isFinite(this.height) ? this.height = Ae(t3.y + t3.height, this.y + this.height) - n2 : this.height = t3.height, this.x = e2, this.y = n2;
    }, t2.prototype.applyTransform = function(e2) {
      t2.applyTransform(this, this, e2);
    }, t2.prototype.calculateTransform = function(t3) {
      var e2 = this, n2 = t3.width / e2.width, i2 = t3.height / e2.height, r2 = [1, 0, 0, 1, 0, 0];
      return be(r2, r2, [-e2.x, -e2.y]), Se(r2, r2, [n2, i2]), be(r2, r2, [t3.x, t3.y]), r2;
    }, t2.prototype.intersect = function(e2, n2) {
      if (!e2)
        return false;
      e2 instanceof t2 || (e2 = t2.create(e2));
      var i2 = this, r2 = i2.x, o2 = i2.x + i2.width, a2 = i2.y, s2 = i2.y + i2.height, l2 = e2.x, u2 = e2.x + e2.width, h2 = e2.y, c2 = e2.y + e2.height, p2 = !(o2 < l2 || u2 < r2 || s2 < h2 || c2 < a2);
      if (n2) {
        var d2 = 1 / 0, f2 = 0, g2 = Math.abs(o2 - l2), y2 = Math.abs(u2 - r2), v2 = Math.abs(s2 - h2), m2 = Math.abs(c2 - a2), x2 = Math.min(g2, y2), _2 = Math.min(v2, m2);
        o2 < l2 || u2 < r2 ? x2 > f2 && (f2 = x2, g2 < y2 ? Ce.set(Ne, -g2, 0) : Ce.set(Ne, y2, 0)) : x2 < d2 && (d2 = x2, g2 < y2 ? Ce.set(Re, g2, 0) : Ce.set(Re, -y2, 0)), s2 < h2 || c2 < a2 ? _2 > f2 && (f2 = _2, v2 < m2 ? Ce.set(Ne, 0, -v2) : Ce.set(Ne, 0, m2)) : x2 < d2 && (d2 = x2, v2 < m2 ? Ce.set(Re, 0, v2) : Ce.set(Re, 0, -m2));
      }
      return n2 && Ce.copy(n2, p2 ? Re : Ne), p2;
    }, t2.prototype.contain = function(t3, e2) {
      var n2 = this;
      return t3 >= n2.x && t3 <= n2.x + n2.width && e2 >= n2.y && e2 <= n2.y + n2.height;
    }, t2.prototype.clone = function() {
      return new t2(this.x, this.y, this.width, this.height);
    }, t2.prototype.copy = function(e2) {
      t2.copy(this, e2);
    }, t2.prototype.plain = function() {
      return { x: this.x, y: this.y, width: this.width, height: this.height };
    }, t2.prototype.isFinite = function() {
      return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
    }, t2.prototype.isZero = function() {
      return 0 === this.width || 0 === this.height;
    }, t2.create = function(e2) {
      return new t2(e2.x, e2.y, e2.width, e2.height);
    }, t2.copy = function(t3, e2) {
      t3.x = e2.x, t3.y = e2.y, t3.width = e2.width, t3.height = e2.height;
    }, t2.applyTransform = function(e2, n2, i2) {
      if (i2) {
        if (i2[1] < 1e-5 && i2[1] > -1e-5 && i2[2] < 1e-5 && i2[2] > -1e-5) {
          var r2 = i2[0], o2 = i2[3], a2 = i2[4], s2 = i2[5];
          return e2.x = n2.x * r2 + a2, e2.y = n2.y * o2 + s2, e2.width = n2.width * r2, e2.height = n2.height * o2, e2.width < 0 && (e2.x += e2.width, e2.width = -e2.width), void (e2.height < 0 && (e2.y += e2.height, e2.height = -e2.height));
        }
        ke.x = Pe.x = n2.x, ke.y = Oe.y = n2.y, Le.x = Oe.x = n2.x + n2.width, Le.y = Pe.y = n2.y + n2.height, ke.transform(i2), Oe.transform(i2), Le.transform(i2), Pe.transform(i2), e2.x = De(ke.x, Le.x, Pe.x, Oe.x), e2.y = De(ke.y, Le.y, Pe.y, Oe.y);
        var l2 = Ae(ke.x, Le.x, Pe.x, Oe.x), u2 = Ae(ke.y, Le.y, Pe.y, Oe.y);
        e2.width = l2 - e2.x, e2.height = u2 - e2.y;
      } else
        e2 !== n2 && t2.copy(e2, n2);
    }, t2;
  }();
  var ze = "silent";
  function Ve() {
    pe(this.event);
  }
  var Be = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.handler = null, e2;
    }
    return e(n2, t2), n2.prototype.dispose = function() {
    }, n2.prototype.setCursor = function() {
    }, n2;
  }(Zt);
  var Fe = function(t2, e2) {
    this.x = t2, this.y = e2;
  };
  var Ge = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"];
  var We = new Ee(0, 0, 0, 0);
  var He = function(t2) {
    function n2(e2, n3, i2, r2, o2) {
      var a2 = t2.call(this) || this;
      return a2._hovered = new Fe(0, 0), a2.storage = e2, a2.painter = n3, a2.painterRoot = r2, a2._pointerSize = o2, i2 = i2 || new Be(), a2.proxy = null, a2.setHandlerProxy(i2), a2._draggingMgr = new Ut(a2), a2;
    }
    return e(n2, t2), n2.prototype.setHandlerProxy = function(t3) {
      this.proxy && this.proxy.dispose(), t3 && (N(Ge, function(e2) {
        t3.on && t3.on(e2, this[e2], this);
      }, this), t3.handler = this), this.proxy = t3;
    }, n2.prototype.mousemove = function(t3) {
      var e2 = t3.zrX, n3 = t3.zrY, i2 = Ue(this, e2, n3), r2 = this._hovered, o2 = r2.target;
      o2 && !o2.__zr && (o2 = (r2 = this.findHover(r2.x, r2.y)).target);
      var a2 = this._hovered = i2 ? new Fe(e2, n3) : this.findHover(e2, n3), s2 = a2.target, l2 = this.proxy;
      l2.setCursor && l2.setCursor(s2 ? s2.cursor : "default"), o2 && s2 !== o2 && this.dispatchToElement(r2, "mouseout", t3), this.dispatchToElement(a2, "mousemove", t3), s2 && s2 !== o2 && this.dispatchToElement(a2, "mouseover", t3);
    }, n2.prototype.mouseout = function(t3) {
      var e2 = t3.zrEventControl;
      "only_globalout" !== e2 && this.dispatchToElement(this._hovered, "mouseout", t3), "no_globalout" !== e2 && this.trigger("globalout", { type: "globalout", event: t3 });
    }, n2.prototype.resize = function() {
      this._hovered = new Fe(0, 0);
    }, n2.prototype.dispatch = function(t3, e2) {
      var n3 = this[t3];
      n3 && n3.call(this, e2);
    }, n2.prototype.dispose = function() {
      this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
    }, n2.prototype.setCursorStyle = function(t3) {
      var e2 = this.proxy;
      e2.setCursor && e2.setCursor(t3);
    }, n2.prototype.dispatchToElement = function(t3, e2, n3) {
      var i2 = (t3 = t3 || {}).target;
      if (!i2 || !i2.silent) {
        for (var r2 = "on" + e2, o2 = function(t4, e3, n4) {
          return { type: t4, event: n4, target: e3.target, topTarget: e3.topTarget, cancelBubble: false, offsetX: n4.zrX, offsetY: n4.zrY, gestureEvent: n4.gestureEvent, pinchX: n4.pinchX, pinchY: n4.pinchY, pinchScale: n4.pinchScale, wheelDelta: n4.zrDelta, zrByTouch: n4.zrByTouch, which: n4.which, stop: Ve };
        }(e2, t3, n3); i2 && (i2[r2] && (o2.cancelBubble = !!i2[r2].call(i2, o2)), i2.trigger(e2, o2), i2 = i2.__hostTarget ? i2.__hostTarget : i2.parent, !o2.cancelBubble); )
          ;
        o2.cancelBubble || (this.trigger(e2, o2), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function(t4) {
          "function" == typeof t4[r2] && t4[r2].call(t4, o2), t4.trigger && t4.trigger(e2, o2);
        }));
      }
    }, n2.prototype.findHover = function(t3, e2, n3) {
      var i2 = this.storage.getDisplayList(), r2 = new Fe(t3, e2);
      if (Xe(i2, r2, t3, e2, n3), this._pointerSize && !r2.target) {
        for (var o2 = [], a2 = this._pointerSize, s2 = a2 / 2, l2 = new Ee(t3 - s2, e2 - s2, a2, a2), u2 = i2.length - 1; u2 >= 0; u2--) {
          var h2 = i2[u2];
          h2 === n3 || h2.ignore || h2.ignoreCoarsePointer || h2.parent && h2.parent.ignoreCoarsePointer || (We.copy(h2.getBoundingRect()), h2.transform && We.applyTransform(h2.transform), We.intersect(l2) && o2.push(h2));
        }
        if (o2.length)
          for (var c2 = Math.PI / 12, p2 = 2 * Math.PI, d2 = 0; d2 < s2; d2 += 4)
            for (var f2 = 0; f2 < p2; f2 += c2) {
              if (Xe(o2, r2, t3 + d2 * Math.cos(f2), e2 + d2 * Math.sin(f2), n3), r2.target)
                return r2;
            }
      }
      return r2;
    }, n2.prototype.processGesture = function(t3, e2) {
      this._gestureMgr || (this._gestureMgr = new fe());
      var n3 = this._gestureMgr;
      "start" === e2 && n3.clear();
      var i2 = n3.recognize(t3, this.findHover(t3.zrX, t3.zrY, null).target, this.proxy.dom);
      if ("end" === e2 && n3.clear(), i2) {
        var r2 = i2.type;
        t3.gestureEvent = r2;
        var o2 = new Fe();
        o2.target = i2.target, this.dispatchToElement(o2, r2, i2.event);
      }
    }, n2;
  }(Zt);
  function Ye(t2, e2, n2) {
    if (t2[t2.rectHover ? "rectContain" : "contain"](e2, n2)) {
      for (var i2 = t2, r2 = void 0, o2 = false; i2; ) {
        if (i2.ignoreClip && (o2 = true), !o2) {
          var a2 = i2.getClipPath();
          if (a2 && !a2.contain(e2, n2))
            return false;
          i2.silent && (r2 = true);
        }
        var s2 = i2.__hostTarget;
        i2 = s2 || i2.parent;
      }
      return !r2 || ze;
    }
    return false;
  }
  function Xe(t2, e2, n2, i2, r2) {
    for (var o2 = t2.length - 1; o2 >= 0; o2--) {
      var a2 = t2[o2], s2 = void 0;
      if (a2 !== r2 && !a2.ignore && (s2 = Ye(a2, n2, i2)) && (!e2.topTarget && (e2.topTarget = a2), s2 !== ze)) {
        e2.target = a2;
        break;
      }
    }
  }
  function Ue(t2, e2, n2) {
    var i2 = t2.painter;
    return e2 < 0 || e2 > i2.getWidth() || n2 < 0 || n2 > i2.getHeight();
  }
  N(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function(t2) {
    He.prototype[t2] = function(e2) {
      var n2, i2, r2 = e2.zrX, o2 = e2.zrY, a2 = Ue(this, r2, o2);
      if ("mouseup" === t2 && a2 || (i2 = (n2 = this.findHover(r2, o2)).target), "mousedown" === t2)
        this._downEl = i2, this._downPoint = [e2.zrX, e2.zrY], this._upEl = i2;
      else if ("mouseup" === t2)
        this._upEl = i2;
      else if ("click" === t2) {
        if (this._downEl !== this._upEl || !this._downPoint || zt(this._downPoint, [e2.zrX, e2.zrY]) > 4)
          return;
        this._downPoint = null;
      }
      this.dispatchToElement(n2, t2, e2);
    };
  });
  function Ze(t2, e2, n2, i2) {
    var r2 = e2 + 1;
    if (r2 === n2)
      return 1;
    if (i2(t2[r2++], t2[e2]) < 0) {
      for (; r2 < n2 && i2(t2[r2], t2[r2 - 1]) < 0; )
        r2++;
      !function(t3, e3, n3) {
        n3--;
        for (; e3 < n3; ) {
          var i3 = t3[e3];
          t3[e3++] = t3[n3], t3[n3--] = i3;
        }
      }(t2, e2, r2);
    } else
      for (; r2 < n2 && i2(t2[r2], t2[r2 - 1]) >= 0; )
        r2++;
    return r2 - e2;
  }
  function je(t2, e2, n2, i2, r2) {
    for (i2 === e2 && i2++; i2 < n2; i2++) {
      for (var o2, a2 = t2[i2], s2 = e2, l2 = i2; s2 < l2; )
        r2(a2, t2[o2 = s2 + l2 >>> 1]) < 0 ? l2 = o2 : s2 = o2 + 1;
      var u2 = i2 - s2;
      switch (u2) {
        case 3:
          t2[s2 + 3] = t2[s2 + 2];
        case 2:
          t2[s2 + 2] = t2[s2 + 1];
        case 1:
          t2[s2 + 1] = t2[s2];
          break;
        default:
          for (; u2 > 0; )
            t2[s2 + u2] = t2[s2 + u2 - 1], u2--;
      }
      t2[s2] = a2;
    }
  }
  function qe(t2, e2, n2, i2, r2, o2) {
    var a2 = 0, s2 = 0, l2 = 1;
    if (o2(t2, e2[n2 + r2]) > 0) {
      for (s2 = i2 - r2; l2 < s2 && o2(t2, e2[n2 + r2 + l2]) > 0; )
        a2 = l2, (l2 = 1 + (l2 << 1)) <= 0 && (l2 = s2);
      l2 > s2 && (l2 = s2), a2 += r2, l2 += r2;
    } else {
      for (s2 = r2 + 1; l2 < s2 && o2(t2, e2[n2 + r2 - l2]) <= 0; )
        a2 = l2, (l2 = 1 + (l2 << 1)) <= 0 && (l2 = s2);
      l2 > s2 && (l2 = s2);
      var u2 = a2;
      a2 = r2 - l2, l2 = r2 - u2;
    }
    for (a2++; a2 < l2; ) {
      var h2 = a2 + (l2 - a2 >>> 1);
      o2(t2, e2[n2 + h2]) > 0 ? a2 = h2 + 1 : l2 = h2;
    }
    return l2;
  }
  function Ke(t2, e2, n2, i2, r2, o2) {
    var a2 = 0, s2 = 0, l2 = 1;
    if (o2(t2, e2[n2 + r2]) < 0) {
      for (s2 = r2 + 1; l2 < s2 && o2(t2, e2[n2 + r2 - l2]) < 0; )
        a2 = l2, (l2 = 1 + (l2 << 1)) <= 0 && (l2 = s2);
      l2 > s2 && (l2 = s2);
      var u2 = a2;
      a2 = r2 - l2, l2 = r2 - u2;
    } else {
      for (s2 = i2 - r2; l2 < s2 && o2(t2, e2[n2 + r2 + l2]) >= 0; )
        a2 = l2, (l2 = 1 + (l2 << 1)) <= 0 && (l2 = s2);
      l2 > s2 && (l2 = s2), a2 += r2, l2 += r2;
    }
    for (a2++; a2 < l2; ) {
      var h2 = a2 + (l2 - a2 >>> 1);
      o2(t2, e2[n2 + h2]) < 0 ? l2 = h2 : a2 = h2 + 1;
    }
    return l2;
  }
  function $e(t2, e2) {
    var n2, i2, r2 = 7, o2 = 0;
    t2.length;
    var a2 = [];
    function s2(s3) {
      var l2 = n2[s3], u2 = i2[s3], h2 = n2[s3 + 1], c2 = i2[s3 + 1];
      i2[s3] = u2 + c2, s3 === o2 - 3 && (n2[s3 + 1] = n2[s3 + 2], i2[s3 + 1] = i2[s3 + 2]), o2--;
      var p2 = Ke(t2[h2], t2, l2, u2, 0, e2);
      l2 += p2, 0 !== (u2 -= p2) && 0 !== (c2 = qe(t2[l2 + u2 - 1], t2, h2, c2, c2 - 1, e2)) && (u2 <= c2 ? function(n3, i3, o3, s4) {
        var l3 = 0;
        for (l3 = 0; l3 < i3; l3++)
          a2[l3] = t2[n3 + l3];
        var u3 = 0, h3 = o3, c3 = n3;
        if (t2[c3++] = t2[h3++], 0 == --s4) {
          for (l3 = 0; l3 < i3; l3++)
            t2[c3 + l3] = a2[u3 + l3];
          return;
        }
        if (1 === i3) {
          for (l3 = 0; l3 < s4; l3++)
            t2[c3 + l3] = t2[h3 + l3];
          return void (t2[c3 + s4] = a2[u3]);
        }
        var p3, d2, f2, g2 = r2;
        for (; ; ) {
          p3 = 0, d2 = 0, f2 = false;
          do {
            if (e2(t2[h3], a2[u3]) < 0) {
              if (t2[c3++] = t2[h3++], d2++, p3 = 0, 0 == --s4) {
                f2 = true;
                break;
              }
            } else if (t2[c3++] = a2[u3++], p3++, d2 = 0, 1 == --i3) {
              f2 = true;
              break;
            }
          } while ((p3 | d2) < g2);
          if (f2)
            break;
          do {
            if (0 !== (p3 = Ke(t2[h3], a2, u3, i3, 0, e2))) {
              for (l3 = 0; l3 < p3; l3++)
                t2[c3 + l3] = a2[u3 + l3];
              if (c3 += p3, u3 += p3, (i3 -= p3) <= 1) {
                f2 = true;
                break;
              }
            }
            if (t2[c3++] = t2[h3++], 0 == --s4) {
              f2 = true;
              break;
            }
            if (0 !== (d2 = qe(a2[u3], t2, h3, s4, 0, e2))) {
              for (l3 = 0; l3 < d2; l3++)
                t2[c3 + l3] = t2[h3 + l3];
              if (c3 += d2, h3 += d2, 0 === (s4 -= d2)) {
                f2 = true;
                break;
              }
            }
            if (t2[c3++] = a2[u3++], 1 == --i3) {
              f2 = true;
              break;
            }
            g2--;
          } while (p3 >= 7 || d2 >= 7);
          if (f2)
            break;
          g2 < 0 && (g2 = 0), g2 += 2;
        }
        if ((r2 = g2) < 1 && (r2 = 1), 1 === i3) {
          for (l3 = 0; l3 < s4; l3++)
            t2[c3 + l3] = t2[h3 + l3];
          t2[c3 + s4] = a2[u3];
        } else {
          if (0 === i3)
            throw new Error();
          for (l3 = 0; l3 < i3; l3++)
            t2[c3 + l3] = a2[u3 + l3];
        }
      }(l2, u2, h2, c2) : function(n3, i3, o3, s4) {
        var l3 = 0;
        for (l3 = 0; l3 < s4; l3++)
          a2[l3] = t2[o3 + l3];
        var u3 = n3 + i3 - 1, h3 = s4 - 1, c3 = o3 + s4 - 1, p3 = 0, d2 = 0;
        if (t2[c3--] = t2[u3--], 0 == --i3) {
          for (p3 = c3 - (s4 - 1), l3 = 0; l3 < s4; l3++)
            t2[p3 + l3] = a2[l3];
          return;
        }
        if (1 === s4) {
          for (d2 = (c3 -= i3) + 1, p3 = (u3 -= i3) + 1, l3 = i3 - 1; l3 >= 0; l3--)
            t2[d2 + l3] = t2[p3 + l3];
          return void (t2[c3] = a2[h3]);
        }
        var f2 = r2;
        for (; ; ) {
          var g2 = 0, y2 = 0, v2 = false;
          do {
            if (e2(a2[h3], t2[u3]) < 0) {
              if (t2[c3--] = t2[u3--], g2++, y2 = 0, 0 == --i3) {
                v2 = true;
                break;
              }
            } else if (t2[c3--] = a2[h3--], y2++, g2 = 0, 1 == --s4) {
              v2 = true;
              break;
            }
          } while ((g2 | y2) < f2);
          if (v2)
            break;
          do {
            if (0 !== (g2 = i3 - Ke(a2[h3], t2, n3, i3, i3 - 1, e2))) {
              for (i3 -= g2, d2 = (c3 -= g2) + 1, p3 = (u3 -= g2) + 1, l3 = g2 - 1; l3 >= 0; l3--)
                t2[d2 + l3] = t2[p3 + l3];
              if (0 === i3) {
                v2 = true;
                break;
              }
            }
            if (t2[c3--] = a2[h3--], 1 == --s4) {
              v2 = true;
              break;
            }
            if (0 !== (y2 = s4 - qe(t2[u3], a2, 0, s4, s4 - 1, e2))) {
              for (s4 -= y2, d2 = (c3 -= y2) + 1, p3 = (h3 -= y2) + 1, l3 = 0; l3 < y2; l3++)
                t2[d2 + l3] = a2[p3 + l3];
              if (s4 <= 1) {
                v2 = true;
                break;
              }
            }
            if (t2[c3--] = t2[u3--], 0 == --i3) {
              v2 = true;
              break;
            }
            f2--;
          } while (g2 >= 7 || y2 >= 7);
          if (v2)
            break;
          f2 < 0 && (f2 = 0), f2 += 2;
        }
        (r2 = f2) < 1 && (r2 = 1);
        if (1 === s4) {
          for (d2 = (c3 -= i3) + 1, p3 = (u3 -= i3) + 1, l3 = i3 - 1; l3 >= 0; l3--)
            t2[d2 + l3] = t2[p3 + l3];
          t2[c3] = a2[h3];
        } else {
          if (0 === s4)
            throw new Error();
          for (p3 = c3 - (s4 - 1), l3 = 0; l3 < s4; l3++)
            t2[p3 + l3] = a2[l3];
        }
      }(l2, u2, h2, c2));
    }
    return n2 = [], i2 = [], { mergeRuns: function() {
      for (; o2 > 1; ) {
        var t3 = o2 - 2;
        if (t3 >= 1 && i2[t3 - 1] <= i2[t3] + i2[t3 + 1] || t3 >= 2 && i2[t3 - 2] <= i2[t3] + i2[t3 - 1])
          i2[t3 - 1] < i2[t3 + 1] && t3--;
        else if (i2[t3] > i2[t3 + 1])
          break;
        s2(t3);
      }
    }, forceMergeRuns: function() {
      for (; o2 > 1; ) {
        var t3 = o2 - 2;
        t3 > 0 && i2[t3 - 1] < i2[t3 + 1] && t3--, s2(t3);
      }
    }, pushRun: function(t3, e3) {
      n2[o2] = t3, i2[o2] = e3, o2 += 1;
    } };
  }
  function Je(t2, e2, n2, i2) {
    n2 || (n2 = 0), i2 || (i2 = t2.length);
    var r2 = i2 - n2;
    if (!(r2 < 2)) {
      var o2 = 0;
      if (r2 < 32)
        je(t2, n2, i2, n2 + (o2 = Ze(t2, n2, i2, e2)), e2);
      else {
        var a2 = $e(t2, e2), s2 = function(t3) {
          for (var e3 = 0; t3 >= 32; )
            e3 |= 1 & t3, t3 >>= 1;
          return t3 + e3;
        }(r2);
        do {
          if ((o2 = Ze(t2, n2, i2, e2)) < s2) {
            var l2 = r2;
            l2 > s2 && (l2 = s2), je(t2, n2, n2 + l2, n2 + o2, e2), o2 = l2;
          }
          a2.pushRun(n2, o2), a2.mergeRuns(), r2 -= o2, n2 += o2;
        } while (0 !== r2);
        a2.forceMergeRuns();
      }
    }
  }
  var Qe = false;
  function tn() {
    Qe || (Qe = true, formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:35", "z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
  }
  function en(t2, e2) {
    return t2.zlevel === e2.zlevel ? t2.z === e2.z ? t2.z2 - e2.z2 : t2.z - e2.z : t2.zlevel - e2.zlevel;
  }
  var nn = function() {
    function t2() {
      this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = en;
    }
    return t2.prototype.traverse = function(t3, e2) {
      for (var n2 = 0; n2 < this._roots.length; n2++)
        this._roots[n2].traverse(t3, e2);
    }, t2.prototype.getDisplayList = function(t3, e2) {
      e2 = e2 || false;
      var n2 = this._displayList;
      return !t3 && n2.length || this.updateDisplayList(e2), n2;
    }, t2.prototype.updateDisplayList = function(t3) {
      this._displayListLen = 0;
      for (var e2 = this._roots, n2 = this._displayList, i2 = 0, r2 = e2.length; i2 < r2; i2++)
        this._updateAndAddDisplayable(e2[i2], null, t3);
      n2.length = this._displayListLen, Je(n2, en);
    }, t2.prototype._updateAndAddDisplayable = function(t3, e2, n2) {
      if (!t3.ignore || n2) {
        t3.beforeUpdate(), t3.update(), t3.afterUpdate();
        var i2 = t3.getClipPath();
        if (t3.ignoreClip)
          e2 = null;
        else if (i2) {
          e2 = e2 ? e2.slice() : [];
          for (var r2 = i2, o2 = t3; r2; )
            r2.parent = o2, r2.updateTransform(), e2.push(r2), o2 = r2, r2 = r2.getClipPath();
        }
        if (t3.childrenRef) {
          for (var a2 = t3.childrenRef(), s2 = 0; s2 < a2.length; s2++) {
            var l2 = a2[s2];
            t3.__dirty && (l2.__dirty |= 1), this._updateAndAddDisplayable(l2, e2, n2);
          }
          t3.__dirty = 0;
        } else {
          var u2 = t3;
          e2 && e2.length ? u2.__clipPaths = e2 : u2.__clipPaths && u2.__clipPaths.length > 0 && (u2.__clipPaths = []), isNaN(u2.z) && (tn(), u2.z = 0), isNaN(u2.z2) && (tn(), u2.z2 = 0), isNaN(u2.zlevel) && (tn(), u2.zlevel = 0), this._displayList[this._displayListLen++] = u2;
        }
        var h2 = t3.getDecalElement && t3.getDecalElement();
        h2 && this._updateAndAddDisplayable(h2, e2, n2);
        var c2 = t3.getTextGuideLine();
        c2 && this._updateAndAddDisplayable(c2, e2, n2);
        var p2 = t3.getTextContent();
        p2 && this._updateAndAddDisplayable(p2, e2, n2);
      }
    }, t2.prototype.addRoot = function(t3) {
      t3.__zr && t3.__zr.storage === this || this._roots.push(t3);
    }, t2.prototype.delRoot = function(t3) {
      if (t3 instanceof Array)
        for (var e2 = 0, n2 = t3.length; e2 < n2; e2++)
          this.delRoot(t3[e2]);
      else {
        var i2 = L(this._roots, t3);
        i2 >= 0 && this._roots.splice(i2, 1);
      }
    }, t2.prototype.delAllRoots = function() {
      this._roots = [], this._displayList = [], this._displayListLen = 0;
    }, t2.prototype.getRoots = function() {
      return this._roots;
    }, t2.prototype.dispose = function() {
      this._displayList = null, this._roots = null;
    }, t2;
  }();
  var rn = i.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function(t2) {
    return setTimeout(t2, 16);
  };
  var on = { linear: function(t2) {
    return t2;
  }, quadraticIn: function(t2) {
    return t2 * t2;
  }, quadraticOut: function(t2) {
    return t2 * (2 - t2);
  }, quadraticInOut: function(t2) {
    return (t2 *= 2) < 1 ? 0.5 * t2 * t2 : -0.5 * (--t2 * (t2 - 2) - 1);
  }, cubicIn: function(t2) {
    return t2 * t2 * t2;
  }, cubicOut: function(t2) {
    return --t2 * t2 * t2 + 1;
  }, cubicInOut: function(t2) {
    return (t2 *= 2) < 1 ? 0.5 * t2 * t2 * t2 : 0.5 * ((t2 -= 2) * t2 * t2 + 2);
  }, quarticIn: function(t2) {
    return t2 * t2 * t2 * t2;
  }, quarticOut: function(t2) {
    return 1 - --t2 * t2 * t2 * t2;
  }, quarticInOut: function(t2) {
    return (t2 *= 2) < 1 ? 0.5 * t2 * t2 * t2 * t2 : -0.5 * ((t2 -= 2) * t2 * t2 * t2 - 2);
  }, quinticIn: function(t2) {
    return t2 * t2 * t2 * t2 * t2;
  }, quinticOut: function(t2) {
    return --t2 * t2 * t2 * t2 * t2 + 1;
  }, quinticInOut: function(t2) {
    return (t2 *= 2) < 1 ? 0.5 * t2 * t2 * t2 * t2 * t2 : 0.5 * ((t2 -= 2) * t2 * t2 * t2 * t2 + 2);
  }, sinusoidalIn: function(t2) {
    return 1 - Math.cos(t2 * Math.PI / 2);
  }, sinusoidalOut: function(t2) {
    return Math.sin(t2 * Math.PI / 2);
  }, sinusoidalInOut: function(t2) {
    return 0.5 * (1 - Math.cos(Math.PI * t2));
  }, exponentialIn: function(t2) {
    return 0 === t2 ? 0 : Math.pow(1024, t2 - 1);
  }, exponentialOut: function(t2) {
    return 1 === t2 ? 1 : 1 - Math.pow(2, -10 * t2);
  }, exponentialInOut: function(t2) {
    return 0 === t2 ? 0 : 1 === t2 ? 1 : (t2 *= 2) < 1 ? 0.5 * Math.pow(1024, t2 - 1) : 0.5 * (2 - Math.pow(2, -10 * (t2 - 1)));
  }, circularIn: function(t2) {
    return 1 - Math.sqrt(1 - t2 * t2);
  }, circularOut: function(t2) {
    return Math.sqrt(1 - --t2 * t2);
  }, circularInOut: function(t2) {
    return (t2 *= 2) < 1 ? -0.5 * (Math.sqrt(1 - t2 * t2) - 1) : 0.5 * (Math.sqrt(1 - (t2 -= 2) * t2) + 1);
  }, elasticIn: function(t2) {
    var e2, n2 = 0.1;
    return 0 === t2 ? 0 : 1 === t2 ? 1 : (!n2 || n2 < 1 ? (n2 = 1, e2 = 0.1) : e2 = 0.4 * Math.asin(1 / n2) / (2 * Math.PI), -n2 * Math.pow(2, 10 * (t2 -= 1)) * Math.sin((t2 - e2) * (2 * Math.PI) / 0.4));
  }, elasticOut: function(t2) {
    var e2, n2 = 0.1;
    return 0 === t2 ? 0 : 1 === t2 ? 1 : (!n2 || n2 < 1 ? (n2 = 1, e2 = 0.1) : e2 = 0.4 * Math.asin(1 / n2) / (2 * Math.PI), n2 * Math.pow(2, -10 * t2) * Math.sin((t2 - e2) * (2 * Math.PI) / 0.4) + 1);
  }, elasticInOut: function(t2) {
    var e2, n2 = 0.1, i2 = 0.4;
    return 0 === t2 ? 0 : 1 === t2 ? 1 : (!n2 || n2 < 1 ? (n2 = 1, e2 = 0.1) : e2 = i2 * Math.asin(1 / n2) / (2 * Math.PI), (t2 *= 2) < 1 ? n2 * Math.pow(2, 10 * (t2 -= 1)) * Math.sin((t2 - e2) * (2 * Math.PI) / i2) * -0.5 : n2 * Math.pow(2, -10 * (t2 -= 1)) * Math.sin((t2 - e2) * (2 * Math.PI) / i2) * 0.5 + 1);
  }, backIn: function(t2) {
    var e2 = 1.70158;
    return t2 * t2 * ((e2 + 1) * t2 - e2);
  }, backOut: function(t2) {
    var e2 = 1.70158;
    return --t2 * t2 * ((e2 + 1) * t2 + e2) + 1;
  }, backInOut: function(t2) {
    var e2 = 2.5949095;
    return (t2 *= 2) < 1 ? t2 * t2 * ((e2 + 1) * t2 - e2) * 0.5 : 0.5 * ((t2 -= 2) * t2 * ((e2 + 1) * t2 + e2) + 2);
  }, bounceIn: function(t2) {
    return 1 - on.bounceOut(1 - t2);
  }, bounceOut: function(t2) {
    return t2 < 1 / 2.75 ? 7.5625 * t2 * t2 : t2 < 2 / 2.75 ? 7.5625 * (t2 -= 1.5 / 2.75) * t2 + 0.75 : t2 < 2.5 / 2.75 ? 7.5625 * (t2 -= 2.25 / 2.75) * t2 + 0.9375 : 7.5625 * (t2 -= 2.625 / 2.75) * t2 + 0.984375;
  }, bounceInOut: function(t2) {
    return t2 < 0.5 ? 0.5 * on.bounceIn(2 * t2) : 0.5 * on.bounceOut(2 * t2 - 1) + 0.5;
  } };
  var an = Math.pow;
  var sn = Math.sqrt;
  var ln = 1e-8;
  var un = 1e-4;
  var hn = sn(3);
  var cn = 1 / 3;
  var pn = St();
  var dn = St();
  var fn = St();
  function gn(t2) {
    return t2 > -1e-8 && t2 < ln;
  }
  function yn(t2) {
    return t2 > ln || t2 < -1e-8;
  }
  function vn(t2, e2, n2, i2, r2) {
    var o2 = 1 - r2;
    return o2 * o2 * (o2 * t2 + 3 * r2 * e2) + r2 * r2 * (r2 * i2 + 3 * o2 * n2);
  }
  function mn(t2, e2, n2, i2, r2) {
    var o2 = 1 - r2;
    return 3 * (((e2 - t2) * o2 + 2 * (n2 - e2) * r2) * o2 + (i2 - n2) * r2 * r2);
  }
  function xn(t2, e2, n2, i2, r2, o2) {
    var a2 = i2 + 3 * (e2 - n2) - t2, s2 = 3 * (n2 - 2 * e2 + t2), l2 = 3 * (e2 - t2), u2 = t2 - r2, h2 = s2 * s2 - 3 * a2 * l2, c2 = s2 * l2 - 9 * a2 * u2, p2 = l2 * l2 - 3 * s2 * u2, d2 = 0;
    if (gn(h2) && gn(c2)) {
      if (gn(s2))
        o2[0] = 0;
      else
        (M2 = -l2 / s2) >= 0 && M2 <= 1 && (o2[d2++] = M2);
    } else {
      var f2 = c2 * c2 - 4 * h2 * p2;
      if (gn(f2)) {
        var g2 = c2 / h2, y2 = -g2 / 2;
        (M2 = -s2 / a2 + g2) >= 0 && M2 <= 1 && (o2[d2++] = M2), y2 >= 0 && y2 <= 1 && (o2[d2++] = y2);
      } else if (f2 > 0) {
        var v2 = sn(f2), m2 = h2 * s2 + 1.5 * a2 * (-c2 + v2), x2 = h2 * s2 + 1.5 * a2 * (-c2 - v2);
        (M2 = (-s2 - ((m2 = m2 < 0 ? -an(-m2, cn) : an(m2, cn)) + (x2 = x2 < 0 ? -an(-x2, cn) : an(x2, cn)))) / (3 * a2)) >= 0 && M2 <= 1 && (o2[d2++] = M2);
      } else {
        var _2 = (2 * h2 * s2 - 3 * a2 * c2) / (2 * sn(h2 * h2 * h2)), b2 = Math.acos(_2) / 3, w2 = sn(h2), S2 = Math.cos(b2), M2 = (-s2 - 2 * w2 * S2) / (3 * a2), I2 = (y2 = (-s2 + w2 * (S2 + hn * Math.sin(b2))) / (3 * a2), (-s2 + w2 * (S2 - hn * Math.sin(b2))) / (3 * a2));
        M2 >= 0 && M2 <= 1 && (o2[d2++] = M2), y2 >= 0 && y2 <= 1 && (o2[d2++] = y2), I2 >= 0 && I2 <= 1 && (o2[d2++] = I2);
      }
    }
    return d2;
  }
  function _n(t2, e2, n2, i2, r2) {
    var o2 = 6 * n2 - 12 * e2 + 6 * t2, a2 = 9 * e2 + 3 * i2 - 3 * t2 - 9 * n2, s2 = 3 * e2 - 3 * t2, l2 = 0;
    if (gn(a2)) {
      if (yn(o2))
        (h2 = -s2 / o2) >= 0 && h2 <= 1 && (r2[l2++] = h2);
    } else {
      var u2 = o2 * o2 - 4 * a2 * s2;
      if (gn(u2))
        r2[0] = -o2 / (2 * a2);
      else if (u2 > 0) {
        var h2, c2 = sn(u2), p2 = (-o2 - c2) / (2 * a2);
        (h2 = (-o2 + c2) / (2 * a2)) >= 0 && h2 <= 1 && (r2[l2++] = h2), p2 >= 0 && p2 <= 1 && (r2[l2++] = p2);
      }
    }
    return l2;
  }
  function bn(t2, e2, n2, i2, r2, o2) {
    var a2 = (e2 - t2) * r2 + t2, s2 = (n2 - e2) * r2 + e2, l2 = (i2 - n2) * r2 + n2, u2 = (s2 - a2) * r2 + a2, h2 = (l2 - s2) * r2 + s2, c2 = (h2 - u2) * r2 + u2;
    o2[0] = t2, o2[1] = a2, o2[2] = u2, o2[3] = c2, o2[4] = c2, o2[5] = h2, o2[6] = l2, o2[7] = i2;
  }
  function wn(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2, h2) {
    var c2, p2, d2, f2, g2, y2 = 5e-3, v2 = 1 / 0;
    pn[0] = l2, pn[1] = u2;
    for (var m2 = 0; m2 < 1; m2 += 0.05)
      dn[0] = vn(t2, n2, r2, a2, m2), dn[1] = vn(e2, i2, o2, s2, m2), (f2 = Bt(pn, dn)) < v2 && (c2 = m2, v2 = f2);
    v2 = 1 / 0;
    for (var x2 = 0; x2 < 32 && !(y2 < un); x2++)
      p2 = c2 - y2, d2 = c2 + y2, dn[0] = vn(t2, n2, r2, a2, p2), dn[1] = vn(e2, i2, o2, s2, p2), f2 = Bt(dn, pn), p2 >= 0 && f2 < v2 ? (c2 = p2, v2 = f2) : (fn[0] = vn(t2, n2, r2, a2, d2), fn[1] = vn(e2, i2, o2, s2, d2), g2 = Bt(fn, pn), d2 <= 1 && g2 < v2 ? (c2 = d2, v2 = g2) : y2 *= 0.5);
    return h2 && (h2[0] = vn(t2, n2, r2, a2, c2), h2[1] = vn(e2, i2, o2, s2, c2)), sn(v2);
  }
  function Sn(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    for (var u2 = t2, h2 = e2, c2 = 0, p2 = 1 / l2, d2 = 1; d2 <= l2; d2++) {
      var f2 = d2 * p2, g2 = vn(t2, n2, r2, a2, f2), y2 = vn(e2, i2, o2, s2, f2), v2 = g2 - u2, m2 = y2 - h2;
      c2 += Math.sqrt(v2 * v2 + m2 * m2), u2 = g2, h2 = y2;
    }
    return c2;
  }
  function Mn(t2, e2, n2, i2) {
    var r2 = 1 - i2;
    return r2 * (r2 * t2 + 2 * i2 * e2) + i2 * i2 * n2;
  }
  function In(t2, e2, n2, i2) {
    return 2 * ((1 - i2) * (e2 - t2) + i2 * (n2 - e2));
  }
  function Tn(t2, e2, n2) {
    var i2 = t2 + n2 - 2 * e2;
    return 0 === i2 ? 0.5 : (t2 - e2) / i2;
  }
  function Cn(t2, e2, n2, i2, r2) {
    var o2 = (e2 - t2) * i2 + t2, a2 = (n2 - e2) * i2 + e2, s2 = (a2 - o2) * i2 + o2;
    r2[0] = t2, r2[1] = o2, r2[2] = s2, r2[3] = s2, r2[4] = a2, r2[5] = n2;
  }
  function Dn(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    var u2, h2 = 5e-3, c2 = 1 / 0;
    pn[0] = a2, pn[1] = s2;
    for (var p2 = 0; p2 < 1; p2 += 0.05) {
      dn[0] = Mn(t2, n2, r2, p2), dn[1] = Mn(e2, i2, o2, p2), (y2 = Bt(pn, dn)) < c2 && (u2 = p2, c2 = y2);
    }
    c2 = 1 / 0;
    for (var d2 = 0; d2 < 32 && !(h2 < un); d2++) {
      var f2 = u2 - h2, g2 = u2 + h2;
      dn[0] = Mn(t2, n2, r2, f2), dn[1] = Mn(e2, i2, o2, f2);
      var y2 = Bt(dn, pn);
      if (f2 >= 0 && y2 < c2)
        u2 = f2, c2 = y2;
      else {
        fn[0] = Mn(t2, n2, r2, g2), fn[1] = Mn(e2, i2, o2, g2);
        var v2 = Bt(fn, pn);
        g2 <= 1 && v2 < c2 ? (u2 = g2, c2 = v2) : h2 *= 0.5;
      }
    }
    return l2 && (l2[0] = Mn(t2, n2, r2, u2), l2[1] = Mn(e2, i2, o2, u2)), sn(c2);
  }
  function An(t2, e2, n2, i2, r2, o2, a2) {
    for (var s2 = t2, l2 = e2, u2 = 0, h2 = 1 / a2, c2 = 1; c2 <= a2; c2++) {
      var p2 = c2 * h2, d2 = Mn(t2, n2, r2, p2), f2 = Mn(e2, i2, o2, p2), g2 = d2 - s2, y2 = f2 - l2;
      u2 += Math.sqrt(g2 * g2 + y2 * y2), s2 = d2, l2 = f2;
    }
    return u2;
  }
  var kn = /cubic-bezier\(([0-9,\.e ]+)\)/;
  function Ln(t2) {
    var e2 = t2 && kn.exec(t2);
    if (e2) {
      var n2 = e2[1].split(","), i2 = +lt(n2[0]), r2 = +lt(n2[1]), o2 = +lt(n2[2]), a2 = +lt(n2[3]);
      if (isNaN(i2 + r2 + o2 + a2))
        return;
      var s2 = [];
      return function(t3) {
        return t3 <= 0 ? 0 : t3 >= 1 ? 1 : xn(0, i2, o2, 1, t3, s2) && vn(0, r2, a2, 1, s2[0]);
      };
    }
  }
  var Pn = function() {
    function t2(t3) {
      this._inited = false, this._startTime = 0, this._pausedTime = 0, this._paused = false, this._life = t3.life || 1e3, this._delay = t3.delay || 0, this.loop = t3.loop || false, this.onframe = t3.onframe || _t, this.ondestroy = t3.ondestroy || _t, this.onrestart = t3.onrestart || _t, t3.easing && this.setEasing(t3.easing);
    }
    return t2.prototype.step = function(t3, e2) {
      if (this._inited || (this._startTime = t3 + this._delay, this._inited = true), !this._paused) {
        var n2 = this._life, i2 = t3 - this._startTime - this._pausedTime, r2 = i2 / n2;
        r2 < 0 && (r2 = 0), r2 = Math.min(r2, 1);
        var o2 = this.easingFunc, a2 = o2 ? o2(r2) : r2;
        if (this.onframe(a2), 1 === r2) {
          if (!this.loop)
            return true;
          var s2 = i2 % n2;
          this._startTime = t3 - s2, this._pausedTime = 0, this.onrestart();
        }
        return false;
      }
      this._pausedTime += e2;
    }, t2.prototype.pause = function() {
      this._paused = true;
    }, t2.prototype.resume = function() {
      this._paused = false;
    }, t2.prototype.setEasing = function(t3) {
      this.easing = t3, this.easingFunc = Y(t3) ? t3 : on[t3] || Ln(t3);
    }, t2;
  }();
  var On = function(t2) {
    this.value = t2;
  };
  var Rn = function() {
    function t2() {
      this._len = 0;
    }
    return t2.prototype.insert = function(t3) {
      var e2 = new On(t3);
      return this.insertEntry(e2), e2;
    }, t2.prototype.insertEntry = function(t3) {
      this.head ? (this.tail.next = t3, t3.prev = this.tail, t3.next = null, this.tail = t3) : this.head = this.tail = t3, this._len++;
    }, t2.prototype.remove = function(t3) {
      var e2 = t3.prev, n2 = t3.next;
      e2 ? e2.next = n2 : this.head = n2, n2 ? n2.prev = e2 : this.tail = e2, t3.next = t3.prev = null, this._len--;
    }, t2.prototype.len = function() {
      return this._len;
    }, t2.prototype.clear = function() {
      this.head = this.tail = null, this._len = 0;
    }, t2;
  }();
  var Nn = function() {
    function t2(t3) {
      this._list = new Rn(), this._maxSize = 10, this._map = {}, this._maxSize = t3;
    }
    return t2.prototype.put = function(t3, e2) {
      var n2 = this._list, i2 = this._map, r2 = null;
      if (null == i2[t3]) {
        var o2 = n2.len(), a2 = this._lastRemovedEntry;
        if (o2 >= this._maxSize && o2 > 0) {
          var s2 = n2.head;
          n2.remove(s2), delete i2[s2.key], r2 = s2.value, this._lastRemovedEntry = s2;
        }
        a2 ? a2.value = e2 : a2 = new On(e2), a2.key = t3, n2.insertEntry(a2), i2[t3] = a2;
      }
      return r2;
    }, t2.prototype.get = function(t3) {
      var e2 = this._map[t3], n2 = this._list;
      if (null != e2)
        return e2 !== n2.tail && (n2.remove(e2), n2.insertEntry(e2)), e2.value;
    }, t2.prototype.clear = function() {
      this._list.clear(), this._map = {};
    }, t2.prototype.len = function() {
      return this._list.len();
    }, t2;
  }();
  var En = { transparent: [0, 0, 0, 0], aliceblue: [240, 248, 255, 1], antiquewhite: [250, 235, 215, 1], aqua: [0, 255, 255, 1], aquamarine: [127, 255, 212, 1], azure: [240, 255, 255, 1], beige: [245, 245, 220, 1], bisque: [255, 228, 196, 1], black: [0, 0, 0, 1], blanchedalmond: [255, 235, 205, 1], blue: [0, 0, 255, 1], blueviolet: [138, 43, 226, 1], brown: [165, 42, 42, 1], burlywood: [222, 184, 135, 1], cadetblue: [95, 158, 160, 1], chartreuse: [127, 255, 0, 1], chocolate: [210, 105, 30, 1], coral: [255, 127, 80, 1], cornflowerblue: [100, 149, 237, 1], cornsilk: [255, 248, 220, 1], crimson: [220, 20, 60, 1], cyan: [0, 255, 255, 1], darkblue: [0, 0, 139, 1], darkcyan: [0, 139, 139, 1], darkgoldenrod: [184, 134, 11, 1], darkgray: [169, 169, 169, 1], darkgreen: [0, 100, 0, 1], darkgrey: [169, 169, 169, 1], darkkhaki: [189, 183, 107, 1], darkmagenta: [139, 0, 139, 1], darkolivegreen: [85, 107, 47, 1], darkorange: [255, 140, 0, 1], darkorchid: [153, 50, 204, 1], darkred: [139, 0, 0, 1], darksalmon: [233, 150, 122, 1], darkseagreen: [143, 188, 143, 1], darkslateblue: [72, 61, 139, 1], darkslategray: [47, 79, 79, 1], darkslategrey: [47, 79, 79, 1], darkturquoise: [0, 206, 209, 1], darkviolet: [148, 0, 211, 1], deeppink: [255, 20, 147, 1], deepskyblue: [0, 191, 255, 1], dimgray: [105, 105, 105, 1], dimgrey: [105, 105, 105, 1], dodgerblue: [30, 144, 255, 1], firebrick: [178, 34, 34, 1], floralwhite: [255, 250, 240, 1], forestgreen: [34, 139, 34, 1], fuchsia: [255, 0, 255, 1], gainsboro: [220, 220, 220, 1], ghostwhite: [248, 248, 255, 1], gold: [255, 215, 0, 1], goldenrod: [218, 165, 32, 1], gray: [128, 128, 128, 1], green: [0, 128, 0, 1], greenyellow: [173, 255, 47, 1], grey: [128, 128, 128, 1], honeydew: [240, 255, 240, 1], hotpink: [255, 105, 180, 1], indianred: [205, 92, 92, 1], indigo: [75, 0, 130, 1], ivory: [255, 255, 240, 1], khaki: [240, 230, 140, 1], lavender: [230, 230, 250, 1], lavenderblush: [255, 240, 245, 1], lawngreen: [124, 252, 0, 1], lemonchiffon: [255, 250, 205, 1], lightblue: [173, 216, 230, 1], lightcoral: [240, 128, 128, 1], lightcyan: [224, 255, 255, 1], lightgoldenrodyellow: [250, 250, 210, 1], lightgray: [211, 211, 211, 1], lightgreen: [144, 238, 144, 1], lightgrey: [211, 211, 211, 1], lightpink: [255, 182, 193, 1], lightsalmon: [255, 160, 122, 1], lightseagreen: [32, 178, 170, 1], lightskyblue: [135, 206, 250, 1], lightslategray: [119, 136, 153, 1], lightslategrey: [119, 136, 153, 1], lightsteelblue: [176, 196, 222, 1], lightyellow: [255, 255, 224, 1], lime: [0, 255, 0, 1], limegreen: [50, 205, 50, 1], linen: [250, 240, 230, 1], magenta: [255, 0, 255, 1], maroon: [128, 0, 0, 1], mediumaquamarine: [102, 205, 170, 1], mediumblue: [0, 0, 205, 1], mediumorchid: [186, 85, 211, 1], mediumpurple: [147, 112, 219, 1], mediumseagreen: [60, 179, 113, 1], mediumslateblue: [123, 104, 238, 1], mediumspringgreen: [0, 250, 154, 1], mediumturquoise: [72, 209, 204, 1], mediumvioletred: [199, 21, 133, 1], midnightblue: [25, 25, 112, 1], mintcream: [245, 255, 250, 1], mistyrose: [255, 228, 225, 1], moccasin: [255, 228, 181, 1], navajowhite: [255, 222, 173, 1], navy: [0, 0, 128, 1], oldlace: [253, 245, 230, 1], olive: [128, 128, 0, 1], olivedrab: [107, 142, 35, 1], orange: [255, 165, 0, 1], orangered: [255, 69, 0, 1], orchid: [218, 112, 214, 1], palegoldenrod: [238, 232, 170, 1], palegreen: [152, 251, 152, 1], paleturquoise: [175, 238, 238, 1], palevioletred: [219, 112, 147, 1], papayawhip: [255, 239, 213, 1], peachpuff: [255, 218, 185, 1], peru: [205, 133, 63, 1], pink: [255, 192, 203, 1], plum: [221, 160, 221, 1], powderblue: [176, 224, 230, 1], purple: [128, 0, 128, 1], red: [255, 0, 0, 1], rosybrown: [188, 143, 143, 1], royalblue: [65, 105, 225, 1], saddlebrown: [139, 69, 19, 1], salmon: [250, 128, 114, 1], sandybrown: [244, 164, 96, 1], seagreen: [46, 139, 87, 1], seashell: [255, 245, 238, 1], sienna: [160, 82, 45, 1], silver: [192, 192, 192, 1], skyblue: [135, 206, 235, 1], slateblue: [106, 90, 205, 1], slategray: [112, 128, 144, 1], slategrey: [112, 128, 144, 1], snow: [255, 250, 250, 1], springgreen: [0, 255, 127, 1], steelblue: [70, 130, 180, 1], tan: [210, 180, 140, 1], teal: [0, 128, 128, 1], thistle: [216, 191, 216, 1], tomato: [255, 99, 71, 1], turquoise: [64, 224, 208, 1], violet: [238, 130, 238, 1], wheat: [245, 222, 179, 1], white: [255, 255, 255, 1], whitesmoke: [245, 245, 245, 1], yellow: [255, 255, 0, 1], yellowgreen: [154, 205, 50, 1] };
  function zn(t2) {
    return (t2 = Math.round(t2)) < 0 ? 0 : t2 > 255 ? 255 : t2;
  }
  function Vn(t2) {
    return t2 < 0 ? 0 : t2 > 1 ? 1 : t2;
  }
  function Bn(t2) {
    var e2 = t2;
    return e2.length && "%" === e2.charAt(e2.length - 1) ? zn(parseFloat(e2) / 100 * 255) : zn(parseInt(e2, 10));
  }
  function Fn(t2) {
    var e2 = t2;
    return e2.length && "%" === e2.charAt(e2.length - 1) ? Vn(parseFloat(e2) / 100) : Vn(parseFloat(e2));
  }
  function Gn(t2, e2, n2) {
    return n2 < 0 ? n2 += 1 : n2 > 1 && (n2 -= 1), 6 * n2 < 1 ? t2 + (e2 - t2) * n2 * 6 : 2 * n2 < 1 ? e2 : 3 * n2 < 2 ? t2 + (e2 - t2) * (2 / 3 - n2) * 6 : t2;
  }
  function Wn(t2, e2, n2) {
    return t2 + (e2 - t2) * n2;
  }
  function Hn(t2, e2, n2, i2, r2) {
    return t2[0] = e2, t2[1] = n2, t2[2] = i2, t2[3] = r2, t2;
  }
  function Yn(t2, e2) {
    return t2[0] = e2[0], t2[1] = e2[1], t2[2] = e2[2], t2[3] = e2[3], t2;
  }
  var Xn = new Nn(20);
  var Un = null;
  function Zn(t2, e2) {
    Un && Yn(Un, e2), Un = Xn.put(t2, Un || e2.slice());
  }
  function jn(t2, e2) {
    if (t2) {
      e2 = e2 || [];
      var n2 = Xn.get(t2);
      if (n2)
        return Yn(e2, n2);
      var i2 = (t2 += "").replace(/ /g, "").toLowerCase();
      if (i2 in En)
        return Yn(e2, En[i2]), Zn(t2, e2), e2;
      var r2, o2 = i2.length;
      if ("#" === i2.charAt(0))
        return 4 === o2 || 5 === o2 ? (r2 = parseInt(i2.slice(1, 4), 16)) >= 0 && r2 <= 4095 ? (Hn(e2, (3840 & r2) >> 4 | (3840 & r2) >> 8, 240 & r2 | (240 & r2) >> 4, 15 & r2 | (15 & r2) << 4, 5 === o2 ? parseInt(i2.slice(4), 16) / 15 : 1), Zn(t2, e2), e2) : void Hn(e2, 0, 0, 0, 1) : 7 === o2 || 9 === o2 ? (r2 = parseInt(i2.slice(1, 7), 16)) >= 0 && r2 <= 16777215 ? (Hn(e2, (16711680 & r2) >> 16, (65280 & r2) >> 8, 255 & r2, 9 === o2 ? parseInt(i2.slice(7), 16) / 255 : 1), Zn(t2, e2), e2) : void Hn(e2, 0, 0, 0, 1) : void 0;
      var a2 = i2.indexOf("("), s2 = i2.indexOf(")");
      if (-1 !== a2 && s2 + 1 === o2) {
        var l2 = i2.substr(0, a2), u2 = i2.substr(a2 + 1, s2 - (a2 + 1)).split(","), h2 = 1;
        switch (l2) {
          case "rgba":
            if (4 !== u2.length)
              return 3 === u2.length ? Hn(e2, +u2[0], +u2[1], +u2[2], 1) : Hn(e2, 0, 0, 0, 1);
            h2 = Fn(u2.pop());
          case "rgb":
            return u2.length >= 3 ? (Hn(e2, Bn(u2[0]), Bn(u2[1]), Bn(u2[2]), 3 === u2.length ? h2 : Fn(u2[3])), Zn(t2, e2), e2) : void Hn(e2, 0, 0, 0, 1);
          case "hsla":
            return 4 !== u2.length ? void Hn(e2, 0, 0, 0, 1) : (u2[3] = Fn(u2[3]), qn(u2, e2), Zn(t2, e2), e2);
          case "hsl":
            return 3 !== u2.length ? void Hn(e2, 0, 0, 0, 1) : (qn(u2, e2), Zn(t2, e2), e2);
          default:
            return;
        }
      }
      Hn(e2, 0, 0, 0, 1);
    }
  }
  function qn(t2, e2) {
    var n2 = (parseFloat(t2[0]) % 360 + 360) % 360 / 360, i2 = Fn(t2[1]), r2 = Fn(t2[2]), o2 = r2 <= 0.5 ? r2 * (i2 + 1) : r2 + i2 - r2 * i2, a2 = 2 * r2 - o2;
    return Hn(e2 = e2 || [], zn(255 * Gn(a2, o2, n2 + 1 / 3)), zn(255 * Gn(a2, o2, n2)), zn(255 * Gn(a2, o2, n2 - 1 / 3)), 1), 4 === t2.length && (e2[3] = t2[3]), e2;
  }
  function Kn(t2, e2) {
    var n2 = jn(t2);
    if (n2) {
      for (var i2 = 0; i2 < 3; i2++)
        n2[i2] = e2 < 0 ? n2[i2] * (1 - e2) | 0 : (255 - n2[i2]) * e2 + n2[i2] | 0, n2[i2] > 255 ? n2[i2] = 255 : n2[i2] < 0 && (n2[i2] = 0);
      return ii(n2, 4 === n2.length ? "rgba" : "rgb");
    }
  }
  function $n(t2, e2, n2) {
    if (e2 && e2.length && t2 >= 0 && t2 <= 1) {
      n2 = n2 || [];
      var i2 = t2 * (e2.length - 1), r2 = Math.floor(i2), o2 = Math.ceil(i2), a2 = e2[r2], s2 = e2[o2], l2 = i2 - r2;
      return n2[0] = zn(Wn(a2[0], s2[0], l2)), n2[1] = zn(Wn(a2[1], s2[1], l2)), n2[2] = zn(Wn(a2[2], s2[2], l2)), n2[3] = Vn(Wn(a2[3], s2[3], l2)), n2;
    }
  }
  var Jn = $n;
  function Qn(t2, e2, n2) {
    if (e2 && e2.length && t2 >= 0 && t2 <= 1) {
      var i2 = t2 * (e2.length - 1), r2 = Math.floor(i2), o2 = Math.ceil(i2), a2 = jn(e2[r2]), s2 = jn(e2[o2]), l2 = i2 - r2, u2 = ii([zn(Wn(a2[0], s2[0], l2)), zn(Wn(a2[1], s2[1], l2)), zn(Wn(a2[2], s2[2], l2)), Vn(Wn(a2[3], s2[3], l2))], "rgba");
      return n2 ? { color: u2, leftIndex: r2, rightIndex: o2, value: i2 } : u2;
    }
  }
  var ti = Qn;
  function ei(t2, e2, n2, i2) {
    var r2 = jn(t2);
    if (t2)
      return r2 = function(t3) {
        if (t3) {
          var e3, n3, i3 = t3[0] / 255, r3 = t3[1] / 255, o2 = t3[2] / 255, a2 = Math.min(i3, r3, o2), s2 = Math.max(i3, r3, o2), l2 = s2 - a2, u2 = (s2 + a2) / 2;
          if (0 === l2)
            e3 = 0, n3 = 0;
          else {
            n3 = u2 < 0.5 ? l2 / (s2 + a2) : l2 / (2 - s2 - a2);
            var h2 = ((s2 - i3) / 6 + l2 / 2) / l2, c2 = ((s2 - r3) / 6 + l2 / 2) / l2, p2 = ((s2 - o2) / 6 + l2 / 2) / l2;
            i3 === s2 ? e3 = p2 - c2 : r3 === s2 ? e3 = 1 / 3 + h2 - p2 : o2 === s2 && (e3 = 2 / 3 + c2 - h2), e3 < 0 && (e3 += 1), e3 > 1 && (e3 -= 1);
          }
          var d2 = [360 * e3, n3, u2];
          return null != t3[3] && d2.push(t3[3]), d2;
        }
      }(r2), null != e2 && (r2[0] = function(t3) {
        return (t3 = Math.round(t3)) < 0 ? 0 : t3 > 360 ? 360 : t3;
      }(e2)), null != n2 && (r2[1] = Fn(n2)), null != i2 && (r2[2] = Fn(i2)), ii(qn(r2), "rgba");
  }
  function ni(t2, e2) {
    var n2 = jn(t2);
    if (n2 && null != e2)
      return n2[3] = Vn(e2), ii(n2, "rgba");
  }
  function ii(t2, e2) {
    if (t2 && t2.length) {
      var n2 = t2[0] + "," + t2[1] + "," + t2[2];
      return "rgba" !== e2 && "hsva" !== e2 && "hsla" !== e2 || (n2 += "," + t2[3]), e2 + "(" + n2 + ")";
    }
  }
  function ri(t2, e2) {
    var n2 = jn(t2);
    return n2 ? (0.299 * n2[0] + 0.587 * n2[1] + 0.114 * n2[2]) * n2[3] / 255 + (1 - n2[3]) * e2 : 0;
  }
  var oi = Object.freeze({ __proto__: null, parse: jn, lift: Kn, toHex: function(t2) {
    var e2 = jn(t2);
    if (e2)
      return ((1 << 24) + (e2[0] << 16) + (e2[1] << 8) + +e2[2]).toString(16).slice(1);
  }, fastLerp: $n, fastMapToColor: Jn, lerp: Qn, mapToColor: ti, modifyHSL: ei, modifyAlpha: ni, stringify: ii, lum: ri, random: function() {
    return ii([Math.round(255 * Math.random()), Math.round(255 * Math.random()), Math.round(255 * Math.random())], "rgb");
  } });
  var ai = Math.round;
  function si(t2) {
    var e2;
    if (t2 && "transparent" !== t2) {
      if ("string" == typeof t2 && t2.indexOf("rgba") > -1) {
        var n2 = jn(t2);
        n2 && (t2 = "rgb(" + n2[0] + "," + n2[1] + "," + n2[2] + ")", e2 = n2[3]);
      }
    } else
      t2 = "none";
    return { color: t2, opacity: null == e2 ? 1 : e2 };
  }
  var li = 1e-4;
  function ui(t2) {
    return t2 < li && t2 > -1e-4;
  }
  function hi(t2) {
    return ai(1e3 * t2) / 1e3;
  }
  function ci(t2) {
    return ai(1e4 * t2) / 1e4;
  }
  var pi = { left: "start", right: "end", center: "middle", middle: "middle" };
  function di(t2) {
    return t2 && !!t2.image;
  }
  function fi(t2) {
    return di(t2) || function(t3) {
      return t3 && !!t3.svgElement;
    }(t2);
  }
  function gi(t2) {
    return "linear" === t2.type;
  }
  function yi(t2) {
    return "radial" === t2.type;
  }
  function vi(t2) {
    return t2 && ("linear" === t2.type || "radial" === t2.type);
  }
  function mi(t2) {
    return "url(#" + t2 + ")";
  }
  function xi(t2) {
    var e2 = t2.getGlobalScale(), n2 = Math.max(e2[0], e2[1]);
    return Math.max(Math.ceil(Math.log(n2) / Math.log(10)), 1);
  }
  function _i(t2) {
    var e2 = t2.x || 0, n2 = t2.y || 0, i2 = (t2.rotation || 0) * bt, r2 = it(t2.scaleX, 1), o2 = it(t2.scaleY, 1), a2 = t2.skewX || 0, s2 = t2.skewY || 0, l2 = [];
    return (e2 || n2) && l2.push("translate(" + e2 + "px," + n2 + "px)"), i2 && l2.push("rotate(" + i2 + ")"), 1 === r2 && 1 === o2 || l2.push("scale(" + r2 + "," + o2 + ")"), (a2 || s2) && l2.push("skew(" + ai(a2 * bt) + "deg, " + ai(s2 * bt) + "deg)"), l2.join(" ");
  }
  var bi = i.hasGlobalWindow && Y(window.btoa) ? function(t2) {
    return window.btoa(unescape(encodeURIComponent(t2)));
  } : "undefined" != typeof Buffer ? function(t2) {
    return Buffer.from(t2).toString("base64");
  } : function(t2) {
    return null;
  };
  var wi = Array.prototype.slice;
  function Si(t2, e2, n2) {
    return (e2 - t2) * n2 + t2;
  }
  function Mi(t2, e2, n2, i2) {
    for (var r2 = e2.length, o2 = 0; o2 < r2; o2++)
      t2[o2] = Si(e2[o2], n2[o2], i2);
    return t2;
  }
  function Ii(t2, e2, n2, i2) {
    for (var r2 = e2.length, o2 = 0; o2 < r2; o2++)
      t2[o2] = e2[o2] + n2[o2] * i2;
    return t2;
  }
  function Ti(t2, e2, n2, i2) {
    for (var r2 = e2.length, o2 = r2 && e2[0].length, a2 = 0; a2 < r2; a2++) {
      t2[a2] || (t2[a2] = []);
      for (var s2 = 0; s2 < o2; s2++)
        t2[a2][s2] = e2[a2][s2] + n2[a2][s2] * i2;
    }
    return t2;
  }
  function Ci(t2, e2) {
    for (var n2 = t2.length, i2 = e2.length, r2 = n2 > i2 ? e2 : t2, o2 = Math.min(n2, i2), a2 = r2[o2 - 1] || { color: [0, 0, 0, 0], offset: 0 }, s2 = o2; s2 < Math.max(n2, i2); s2++)
      r2.push({ offset: a2.offset, color: a2.color.slice() });
  }
  function Di(t2, e2, n2) {
    var i2 = t2, r2 = e2;
    if (i2.push && r2.push) {
      var o2 = i2.length, a2 = r2.length;
      if (o2 !== a2)
        if (o2 > a2)
          i2.length = a2;
        else
          for (var s2 = o2; s2 < a2; s2++)
            i2.push(1 === n2 ? r2[s2] : wi.call(r2[s2]));
      var l2 = i2[0] && i2[0].length;
      for (s2 = 0; s2 < i2.length; s2++)
        if (1 === n2)
          isNaN(i2[s2]) && (i2[s2] = r2[s2]);
        else
          for (var u2 = 0; u2 < l2; u2++)
            isNaN(i2[s2][u2]) && (i2[s2][u2] = r2[s2][u2]);
    }
  }
  function Ai(t2) {
    if (R(t2)) {
      var e2 = t2.length;
      if (R(t2[0])) {
        for (var n2 = [], i2 = 0; i2 < e2; i2++)
          n2.push(wi.call(t2[i2]));
        return n2;
      }
      return wi.call(t2);
    }
    return t2;
  }
  function ki(t2) {
    return t2[0] = Math.floor(t2[0]) || 0, t2[1] = Math.floor(t2[1]) || 0, t2[2] = Math.floor(t2[2]) || 0, t2[3] = null == t2[3] ? 1 : t2[3], "rgba(" + t2.join(",") + ")";
  }
  function Li(t2) {
    return 4 === t2 || 5 === t2;
  }
  function Pi(t2) {
    return 1 === t2 || 2 === t2;
  }
  var Oi = [0, 0, 0, 0];
  var Ri = function() {
    function t2(t3) {
      this.keyframes = [], this.discrete = false, this._invalid = false, this._needsSort = false, this._lastFr = 0, this._lastFrP = 0, this.propName = t3;
    }
    return t2.prototype.isFinished = function() {
      return this._finished;
    }, t2.prototype.setFinished = function() {
      this._finished = true, this._additiveTrack && this._additiveTrack.setFinished();
    }, t2.prototype.needsAnimate = function() {
      return this.keyframes.length >= 1;
    }, t2.prototype.getAdditiveTrack = function() {
      return this._additiveTrack;
    }, t2.prototype.addKeyframe = function(t3, e2, n2) {
      this._needsSort = true;
      var i2 = this.keyframes, r2 = i2.length, o2 = false, a2 = 6, s2 = e2;
      if (R(e2)) {
        var l2 = function(t4) {
          return R(t4 && t4[0]) ? 2 : 1;
        }(e2);
        a2 = l2, (1 === l2 && !Z(e2[0]) || 2 === l2 && !Z(e2[0][0])) && (o2 = true);
      } else if (Z(e2) && !et(e2))
        a2 = 0;
      else if (X(e2))
        if (isNaN(+e2)) {
          var u2 = jn(e2);
          u2 && (s2 = u2, a2 = 3);
        } else
          a2 = 0;
      else if (J(e2)) {
        var h2 = D({}, s2);
        h2.colorStops = E(e2.colorStops, function(t4) {
          return { offset: t4.offset, color: jn(t4.color) };
        }), gi(e2) ? a2 = 4 : yi(e2) && (a2 = 5), s2 = h2;
      }
      0 === r2 ? this.valType = a2 : a2 === this.valType && 6 !== a2 || (o2 = true), this.discrete = this.discrete || o2;
      var c2 = { time: t3, value: s2, rawValue: e2, percent: 0 };
      return n2 && (c2.easing = n2, c2.easingFunc = Y(n2) ? n2 : on[n2] || Ln(n2)), i2.push(c2), c2;
    }, t2.prototype.prepare = function(t3, e2) {
      var n2 = this.keyframes;
      this._needsSort && n2.sort(function(t4, e3) {
        return t4.time - e3.time;
      });
      for (var i2 = this.valType, r2 = n2.length, o2 = n2[r2 - 1], a2 = this.discrete, s2 = Pi(i2), l2 = Li(i2), u2 = 0; u2 < r2; u2++) {
        var h2 = n2[u2], c2 = h2.value, p2 = o2.value;
        h2.percent = h2.time / t3, a2 || (s2 && u2 !== r2 - 1 ? Di(c2, p2, i2) : l2 && Ci(c2.colorStops, p2.colorStops));
      }
      if (!a2 && 5 !== i2 && e2 && this.needsAnimate() && e2.needsAnimate() && i2 === e2.valType && !e2._finished) {
        this._additiveTrack = e2;
        var d2 = n2[0].value;
        for (u2 = 0; u2 < r2; u2++)
          0 === i2 ? n2[u2].additiveValue = n2[u2].value - d2 : 3 === i2 ? n2[u2].additiveValue = Ii([], n2[u2].value, d2, -1) : Pi(i2) && (n2[u2].additiveValue = 1 === i2 ? Ii([], n2[u2].value, d2, -1) : Ti([], n2[u2].value, d2, -1));
      }
    }, t2.prototype.step = function(t3, e2) {
      if (!this._finished) {
        this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
        var n2, i2, r2, o2 = null != this._additiveTrack, a2 = o2 ? "additiveValue" : "value", s2 = this.valType, l2 = this.keyframes, u2 = l2.length, h2 = this.propName, c2 = 3 === s2, p2 = this._lastFr, d2 = Math.min;
        if (1 === u2)
          i2 = r2 = l2[0];
        else {
          if (e2 < 0)
            n2 = 0;
          else if (e2 < this._lastFrP) {
            for (n2 = d2(p2 + 1, u2 - 1); n2 >= 0 && !(l2[n2].percent <= e2); n2--)
              ;
            n2 = d2(n2, u2 - 2);
          } else {
            for (n2 = p2; n2 < u2 && !(l2[n2].percent > e2); n2++)
              ;
            n2 = d2(n2 - 1, u2 - 2);
          }
          r2 = l2[n2 + 1], i2 = l2[n2];
        }
        if (i2 && r2) {
          this._lastFr = n2, this._lastFrP = e2;
          var f2 = r2.percent - i2.percent, g2 = 0 === f2 ? 1 : d2((e2 - i2.percent) / f2, 1);
          r2.easingFunc && (g2 = r2.easingFunc(g2));
          var y2 = o2 ? this._additiveValue : c2 ? Oi : t3[h2];
          if (!Pi(s2) && !c2 || y2 || (y2 = this._additiveValue = []), this.discrete)
            t3[h2] = g2 < 1 ? i2.rawValue : r2.rawValue;
          else if (Pi(s2))
            1 === s2 ? Mi(y2, i2[a2], r2[a2], g2) : function(t4, e3, n3, i3) {
              for (var r3 = e3.length, o3 = r3 && e3[0].length, a3 = 0; a3 < r3; a3++) {
                t4[a3] || (t4[a3] = []);
                for (var s3 = 0; s3 < o3; s3++)
                  t4[a3][s3] = Si(e3[a3][s3], n3[a3][s3], i3);
              }
            }(y2, i2[a2], r2[a2], g2);
          else if (Li(s2)) {
            var v2 = i2[a2], m2 = r2[a2], x2 = 4 === s2;
            t3[h2] = { type: x2 ? "linear" : "radial", x: Si(v2.x, m2.x, g2), y: Si(v2.y, m2.y, g2), colorStops: E(v2.colorStops, function(t4, e3) {
              var n3 = m2.colorStops[e3];
              return { offset: Si(t4.offset, n3.offset, g2), color: ki(Mi([], t4.color, n3.color, g2)) };
            }), global: m2.global }, x2 ? (t3[h2].x2 = Si(v2.x2, m2.x2, g2), t3[h2].y2 = Si(v2.y2, m2.y2, g2)) : t3[h2].r = Si(v2.r, m2.r, g2);
          } else if (c2)
            Mi(y2, i2[a2], r2[a2], g2), o2 || (t3[h2] = ki(y2));
          else {
            var _2 = Si(i2[a2], r2[a2], g2);
            o2 ? this._additiveValue = _2 : t3[h2] = _2;
          }
          o2 && this._addToTarget(t3);
        }
      }
    }, t2.prototype._addToTarget = function(t3) {
      var e2 = this.valType, n2 = this.propName, i2 = this._additiveValue;
      0 === e2 ? t3[n2] = t3[n2] + i2 : 3 === e2 ? (jn(t3[n2], Oi), Ii(Oi, Oi, i2, 1), t3[n2] = ki(Oi)) : 1 === e2 ? Ii(t3[n2], t3[n2], i2, 1) : 2 === e2 && Ti(t3[n2], t3[n2], i2, 1);
    }, t2;
  }();
  var Ni = function() {
    function t2(t3, e2, n2, i2) {
      this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = t3, this._loop = e2, e2 && i2 ? M("Can' use additive animation on looped animation.") : (this._additiveAnimators = i2, this._allowDiscrete = n2);
    }
    return t2.prototype.getMaxTime = function() {
      return this._maxTime;
    }, t2.prototype.getDelay = function() {
      return this._delay;
    }, t2.prototype.getLoop = function() {
      return this._loop;
    }, t2.prototype.getTarget = function() {
      return this._target;
    }, t2.prototype.changeTarget = function(t3) {
      this._target = t3;
    }, t2.prototype.when = function(t3, e2, n2) {
      return this.whenWithKeys(t3, e2, F(e2), n2);
    }, t2.prototype.whenWithKeys = function(t3, e2, n2, i2) {
      for (var r2 = this._tracks, o2 = 0; o2 < n2.length; o2++) {
        var a2 = n2[o2], s2 = r2[a2];
        if (!s2) {
          s2 = r2[a2] = new Ri(a2);
          var l2 = void 0, u2 = this._getAdditiveTrack(a2);
          if (u2) {
            var h2 = u2.keyframes, c2 = h2[h2.length - 1];
            l2 = c2 && c2.value, 3 === u2.valType && l2 && (l2 = ki(l2));
          } else
            l2 = this._target[a2];
          if (null == l2)
            continue;
          t3 > 0 && s2.addKeyframe(0, Ai(l2), i2), this._trackKeys.push(a2);
        }
        s2.addKeyframe(t3, Ai(e2[a2]), i2);
      }
      return this._maxTime = Math.max(this._maxTime, t3), this;
    }, t2.prototype.pause = function() {
      this._clip.pause(), this._paused = true;
    }, t2.prototype.resume = function() {
      this._clip.resume(), this._paused = false;
    }, t2.prototype.isPaused = function() {
      return !!this._paused;
    }, t2.prototype.duration = function(t3) {
      return this._maxTime = t3, this._force = true, this;
    }, t2.prototype._doneCallback = function() {
      this._setTracksFinished(), this._clip = null;
      var t3 = this._doneCbs;
      if (t3)
        for (var e2 = t3.length, n2 = 0; n2 < e2; n2++)
          t3[n2].call(this);
    }, t2.prototype._abortedCallback = function() {
      this._setTracksFinished();
      var t3 = this.animation, e2 = this._abortedCbs;
      if (t3 && t3.removeClip(this._clip), this._clip = null, e2)
        for (var n2 = 0; n2 < e2.length; n2++)
          e2[n2].call(this);
    }, t2.prototype._setTracksFinished = function() {
      for (var t3 = this._tracks, e2 = this._trackKeys, n2 = 0; n2 < e2.length; n2++)
        t3[e2[n2]].setFinished();
    }, t2.prototype._getAdditiveTrack = function(t3) {
      var e2, n2 = this._additiveAnimators;
      if (n2)
        for (var i2 = 0; i2 < n2.length; i2++) {
          var r2 = n2[i2].getTrack(t3);
          r2 && (e2 = r2);
        }
      return e2;
    }, t2.prototype.start = function(t3) {
      if (!(this._started > 0)) {
        this._started = 1;
        for (var e2 = this, n2 = [], i2 = this._maxTime || 0, r2 = 0; r2 < this._trackKeys.length; r2++) {
          var o2 = this._trackKeys[r2], a2 = this._tracks[o2], s2 = this._getAdditiveTrack(o2), l2 = a2.keyframes, u2 = l2.length;
          if (a2.prepare(i2, s2), a2.needsAnimate())
            if (!this._allowDiscrete && a2.discrete) {
              var h2 = l2[u2 - 1];
              h2 && (e2._target[a2.propName] = h2.rawValue), a2.setFinished();
            } else
              n2.push(a2);
        }
        if (n2.length || this._force) {
          var c2 = new Pn({ life: i2, loop: this._loop, delay: this._delay || 0, onframe: function(t4) {
            e2._started = 2;
            var i3 = e2._additiveAnimators;
            if (i3) {
              for (var r3 = false, o3 = 0; o3 < i3.length; o3++)
                if (i3[o3]._clip) {
                  r3 = true;
                  break;
                }
              r3 || (e2._additiveAnimators = null);
            }
            for (o3 = 0; o3 < n2.length; o3++)
              n2[o3].step(e2._target, t4);
            var a3 = e2._onframeCbs;
            if (a3)
              for (o3 = 0; o3 < a3.length; o3++)
                a3[o3](e2._target, t4);
          }, ondestroy: function() {
            e2._doneCallback();
          } });
          this._clip = c2, this.animation && this.animation.addClip(c2), t3 && c2.setEasing(t3);
        } else
          this._doneCallback();
        return this;
      }
    }, t2.prototype.stop = function(t3) {
      if (this._clip) {
        var e2 = this._clip;
        t3 && e2.onframe(1), this._abortedCallback();
      }
    }, t2.prototype.delay = function(t3) {
      return this._delay = t3, this;
    }, t2.prototype.during = function(t3) {
      return t3 && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(t3)), this;
    }, t2.prototype.done = function(t3) {
      return t3 && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(t3)), this;
    }, t2.prototype.aborted = function(t3) {
      return t3 && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(t3)), this;
    }, t2.prototype.getClip = function() {
      return this._clip;
    }, t2.prototype.getTrack = function(t3) {
      return this._tracks[t3];
    }, t2.prototype.getTracks = function() {
      var t3 = this;
      return E(this._trackKeys, function(e2) {
        return t3._tracks[e2];
      });
    }, t2.prototype.stopTracks = function(t3, e2) {
      if (!t3.length || !this._clip)
        return true;
      for (var n2 = this._tracks, i2 = this._trackKeys, r2 = 0; r2 < t3.length; r2++) {
        var o2 = n2[t3[r2]];
        o2 && !o2.isFinished() && (e2 ? o2.step(this._target, 1) : 1 === this._started && o2.step(this._target, 0), o2.setFinished());
      }
      var a2 = true;
      for (r2 = 0; r2 < i2.length; r2++)
        if (!n2[i2[r2]].isFinished()) {
          a2 = false;
          break;
        }
      return a2 && this._abortedCallback(), a2;
    }, t2.prototype.saveTo = function(t3, e2, n2) {
      if (t3) {
        e2 = e2 || this._trackKeys;
        for (var i2 = 0; i2 < e2.length; i2++) {
          var r2 = e2[i2], o2 = this._tracks[r2];
          if (o2 && !o2.isFinished()) {
            var a2 = o2.keyframes, s2 = a2[n2 ? 0 : a2.length - 1];
            s2 && (t3[r2] = Ai(s2.rawValue));
          }
        }
      }
    }, t2.prototype.__changeFinalValue = function(t3, e2) {
      e2 = e2 || F(t3);
      for (var n2 = 0; n2 < e2.length; n2++) {
        var i2 = e2[n2], r2 = this._tracks[i2];
        if (r2) {
          var o2 = r2.keyframes;
          if (o2.length > 1) {
            var a2 = o2.pop();
            r2.addKeyframe(a2.time, t3[i2]), r2.prepare(this._maxTime, r2.getAdditiveTrack());
          }
        }
      }
    }, t2;
  }();
  function Ei() {
    return (/* @__PURE__ */ new Date()).getTime();
  }
  var zi;
  var Vi;
  var Bi = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      return n3._running = false, n3._time = 0, n3._pausedTime = 0, n3._pauseStart = 0, n3._paused = false, e2 = e2 || {}, n3.stage = e2.stage || {}, n3;
    }
    return e(n2, t2), n2.prototype.addClip = function(t3) {
      t3.animation && this.removeClip(t3), this._head ? (this._tail.next = t3, t3.prev = this._tail, t3.next = null, this._tail = t3) : this._head = this._tail = t3, t3.animation = this;
    }, n2.prototype.addAnimator = function(t3) {
      t3.animation = this;
      var e2 = t3.getClip();
      e2 && this.addClip(e2);
    }, n2.prototype.removeClip = function(t3) {
      if (t3.animation) {
        var e2 = t3.prev, n3 = t3.next;
        e2 ? e2.next = n3 : this._head = n3, n3 ? n3.prev = e2 : this._tail = e2, t3.next = t3.prev = t3.animation = null;
      }
    }, n2.prototype.removeAnimator = function(t3) {
      var e2 = t3.getClip();
      e2 && this.removeClip(e2), t3.animation = null;
    }, n2.prototype.update = function(t3) {
      for (var e2 = Ei() - this._pausedTime, n3 = e2 - this._time, i2 = this._head; i2; ) {
        var r2 = i2.next;
        i2.step(e2, n3) ? (i2.ondestroy(), this.removeClip(i2), i2 = r2) : i2 = r2;
      }
      this._time = e2, t3 || (this.trigger("frame", n3), this.stage.update && this.stage.update());
    }, n2.prototype._startLoop = function() {
      var t3 = this;
      this._running = true, rn(function e2() {
        t3._running && (rn(e2), !t3._paused && t3.update());
      });
    }, n2.prototype.start = function() {
      this._running || (this._time = Ei(), this._pausedTime = 0, this._startLoop());
    }, n2.prototype.stop = function() {
      this._running = false;
    }, n2.prototype.pause = function() {
      this._paused || (this._pauseStart = Ei(), this._paused = true);
    }, n2.prototype.resume = function() {
      this._paused && (this._pausedTime += Ei() - this._pauseStart, this._paused = false);
    }, n2.prototype.clear = function() {
      for (var t3 = this._head; t3; ) {
        var e2 = t3.next;
        t3.prev = t3.next = t3.animation = null, t3 = e2;
      }
      this._head = this._tail = null;
    }, n2.prototype.isFinished = function() {
      return null == this._head;
    }, n2.prototype.animate = function(t3, e2) {
      e2 = e2 || {}, this.start();
      var n3 = new Ni(t3, e2.loop);
      return this.addAnimator(n3), n3;
    }, n2;
  }(Zt);
  var Fi = i.domSupported;
  var Gi = (Vi = { pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1 }, { mouse: zi = ["click", "dblclick", "mousewheel", "wheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"], touch: ["touchstart", "touchend", "touchmove"], pointer: E(zi, function(t2) {
    var e2 = t2.replace("mouse", "pointer");
    return Vi.hasOwnProperty(e2) ? e2 : t2;
  }) });
  var Wi = ["mousemove", "mouseup"];
  var Hi = ["pointermove", "pointerup"];
  var Yi = false;
  function Xi(t2) {
    var e2 = t2.pointerType;
    return "pen" === e2 || "touch" === e2;
  }
  function Ui(t2) {
    t2 && (t2.zrByTouch = true);
  }
  function Zi(t2, e2) {
    for (var n2 = e2, i2 = false; n2 && 9 !== n2.nodeType && !(i2 = n2.domBelongToZr || n2 !== e2 && n2 === t2.painterRoot); )
      n2 = n2.parentNode;
    return i2;
  }
  var ji = function(t2, e2) {
    this.stopPropagation = _t, this.stopImmediatePropagation = _t, this.preventDefault = _t, this.type = e2.type, this.target = this.currentTarget = t2.dom, this.pointerType = e2.pointerType, this.clientX = e2.clientX, this.clientY = e2.clientY;
  };
  var qi = { mousedown: function(t2) {
    t2 = he(this.dom, t2), this.__mayPointerCapture = [t2.zrX, t2.zrY], this.trigger("mousedown", t2);
  }, mousemove: function(t2) {
    t2 = he(this.dom, t2);
    var e2 = this.__mayPointerCapture;
    !e2 || t2.zrX === e2[0] && t2.zrY === e2[1] || this.__togglePointerCapture(true), this.trigger("mousemove", t2);
  }, mouseup: function(t2) {
    t2 = he(this.dom, t2), this.__togglePointerCapture(false), this.trigger("mouseup", t2);
  }, mouseout: function(t2) {
    Zi(this, (t2 = he(this.dom, t2)).toElement || t2.relatedTarget) || (this.__pointerCapturing && (t2.zrEventControl = "no_globalout"), this.trigger("mouseout", t2));
  }, wheel: function(t2) {
    Yi = true, t2 = he(this.dom, t2), this.trigger("mousewheel", t2);
  }, mousewheel: function(t2) {
    Yi || (t2 = he(this.dom, t2), this.trigger("mousewheel", t2));
  }, touchstart: function(t2) {
    Ui(t2 = he(this.dom, t2)), this.__lastTouchMoment = /* @__PURE__ */ new Date(), this.handler.processGesture(t2, "start"), qi.mousemove.call(this, t2), qi.mousedown.call(this, t2);
  }, touchmove: function(t2) {
    Ui(t2 = he(this.dom, t2)), this.handler.processGesture(t2, "change"), qi.mousemove.call(this, t2);
  }, touchend: function(t2) {
    Ui(t2 = he(this.dom, t2)), this.handler.processGesture(t2, "end"), qi.mouseup.call(this, t2), +/* @__PURE__ */ new Date() - +this.__lastTouchMoment < 300 && qi.click.call(this, t2);
  }, pointerdown: function(t2) {
    qi.mousedown.call(this, t2);
  }, pointermove: function(t2) {
    Xi(t2) || qi.mousemove.call(this, t2);
  }, pointerup: function(t2) {
    qi.mouseup.call(this, t2);
  }, pointerout: function(t2) {
    Xi(t2) || qi.mouseout.call(this, t2);
  } };
  N(["click", "dblclick", "contextmenu"], function(t2) {
    qi[t2] = function(e2) {
      e2 = he(this.dom, e2), this.trigger(t2, e2);
    };
  });
  var Ki = { pointermove: function(t2) {
    Xi(t2) || Ki.mousemove.call(this, t2);
  }, pointerup: function(t2) {
    Ki.mouseup.call(this, t2);
  }, mousemove: function(t2) {
    this.trigger("mousemove", t2);
  }, mouseup: function(t2) {
    var e2 = this.__pointerCapturing;
    this.__togglePointerCapture(false), this.trigger("mouseup", t2), e2 && (t2.zrEventControl = "only_globalout", this.trigger("mouseout", t2));
  } };
  function $i(t2, e2) {
    var n2 = e2.domHandlers;
    i.pointerEventsSupported ? N(Gi.pointer, function(i2) {
      Qi(e2, i2, function(e3) {
        n2[i2].call(t2, e3);
      });
    }) : (i.touchEventsSupported && N(Gi.touch, function(i2) {
      Qi(e2, i2, function(r2) {
        n2[i2].call(t2, r2), function(t3) {
          t3.touching = true, null != t3.touchTimer && (clearTimeout(t3.touchTimer), t3.touchTimer = null), t3.touchTimer = setTimeout(function() {
            t3.touching = false, t3.touchTimer = null;
          }, 700);
        }(e2);
      });
    }), N(Gi.mouse, function(i2) {
      Qi(e2, i2, function(r2) {
        r2 = ue(r2), e2.touching || n2[i2].call(t2, r2);
      });
    }));
  }
  function Ji(t2, e2) {
    function n2(n3) {
      Qi(e2, n3, function(i2) {
        i2 = ue(i2), Zi(t2, i2.target) || (i2 = function(t3, e3) {
          return he(t3.dom, new ji(t3, e3), true);
        }(t2, i2), e2.domHandlers[n3].call(t2, i2));
      }, { capture: true });
    }
    i.pointerEventsSupported ? N(Hi, n2) : i.touchEventsSupported || N(Wi, n2);
  }
  function Qi(t2, e2, n2, i2) {
    t2.mounted[e2] = n2, t2.listenerOpts[e2] = i2, ce(t2.domTarget, e2, n2, i2);
  }
  function tr(t2) {
    var e2, n2, i2, r2, o2 = t2.mounted;
    for (var a2 in o2)
      o2.hasOwnProperty(a2) && (e2 = t2.domTarget, n2 = a2, i2 = o2[a2], r2 = t2.listenerOpts[a2], e2.removeEventListener(n2, i2, r2));
    t2.mounted = {};
  }
  var er = function(t2, e2) {
    this.mounted = {}, this.listenerOpts = {}, this.touching = false, this.domTarget = t2, this.domHandlers = e2;
  };
  var nr = function(t2) {
    function n2(e2, n3) {
      var i2 = t2.call(this) || this;
      return i2.__pointerCapturing = false, i2.dom = e2, i2.painterRoot = n3, i2._localHandlerScope = new er(e2, qi), Fi && (i2._globalHandlerScope = new er(document, Ki)), $i(i2, i2._localHandlerScope), i2;
    }
    return e(n2, t2), n2.prototype.dispose = function() {
      tr(this._localHandlerScope), Fi && tr(this._globalHandlerScope);
    }, n2.prototype.setCursor = function(t3) {
      this.dom.style && (this.dom.style.cursor = t3 || "default");
    }, n2.prototype.__togglePointerCapture = function(t3) {
      if (this.__mayPointerCapture = null, Fi && +this.__pointerCapturing ^ +t3) {
        this.__pointerCapturing = t3;
        var e2 = this._globalHandlerScope;
        t3 ? Ji(this, e2) : tr(e2);
      }
    }, n2;
  }(Zt);
  var ir = 1;
  i.hasGlobalWindow && (ir = Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1));
  var rr = ir;
  var or = "#333";
  var ar = "#ccc";
  var sr = me;
  var lr = 5e-5;
  function ur(t2) {
    return t2 > lr || t2 < -5e-5;
  }
  var hr = [];
  var cr = [];
  var pr = [1, 0, 0, 1, 0, 0];
  var dr = Math.abs;
  var fr = function() {
    function t2() {
    }
    return t2.prototype.getLocalTransform = function(e2) {
      return t2.getLocalTransform(this, e2);
    }, t2.prototype.setPosition = function(t3) {
      this.x = t3[0], this.y = t3[1];
    }, t2.prototype.setScale = function(t3) {
      this.scaleX = t3[0], this.scaleY = t3[1];
    }, t2.prototype.setSkew = function(t3) {
      this.skewX = t3[0], this.skewY = t3[1];
    }, t2.prototype.setOrigin = function(t3) {
      this.originX = t3[0], this.originY = t3[1];
    }, t2.prototype.needLocalTransform = function() {
      return ur(this.rotation) || ur(this.x) || ur(this.y) || ur(this.scaleX - 1) || ur(this.scaleY - 1) || ur(this.skewX) || ur(this.skewY);
    }, t2.prototype.updateTransform = function() {
      var t3 = this.parent && this.parent.transform, e2 = this.needLocalTransform(), n2 = this.transform;
      e2 || t3 ? (n2 = n2 || [1, 0, 0, 1, 0, 0], e2 ? this.getLocalTransform(n2) : sr(n2), t3 && (e2 ? _e(n2, t3, n2) : xe(n2, t3)), this.transform = n2, this._resolveGlobalScaleRatio(n2)) : n2 && (sr(n2), this.invTransform = null);
    }, t2.prototype._resolveGlobalScaleRatio = function(t3) {
      var e2 = this.globalScaleRatio;
      if (null != e2 && 1 !== e2) {
        this.getGlobalScale(hr);
        var n2 = hr[0] < 0 ? -1 : 1, i2 = hr[1] < 0 ? -1 : 1, r2 = ((hr[0] - n2) * e2 + n2) / hr[0] || 0, o2 = ((hr[1] - i2) * e2 + i2) / hr[1] || 0;
        t3[0] *= r2, t3[1] *= r2, t3[2] *= o2, t3[3] *= o2;
      }
      this.invTransform = this.invTransform || [1, 0, 0, 1, 0, 0], Me(this.invTransform, t3);
    }, t2.prototype.getComputedTransform = function() {
      for (var t3 = this, e2 = []; t3; )
        e2.push(t3), t3 = t3.parent;
      for (; t3 = e2.pop(); )
        t3.updateTransform();
      return this.transform;
    }, t2.prototype.setLocalTransform = function(t3) {
      if (t3) {
        var e2 = t3[0] * t3[0] + t3[1] * t3[1], n2 = t3[2] * t3[2] + t3[3] * t3[3], i2 = Math.atan2(t3[1], t3[0]), r2 = Math.PI / 2 + i2 - Math.atan2(t3[3], t3[2]);
        n2 = Math.sqrt(n2) * Math.cos(r2), e2 = Math.sqrt(e2), this.skewX = r2, this.skewY = 0, this.rotation = -i2, this.x = +t3[4], this.y = +t3[5], this.scaleX = e2, this.scaleY = n2, this.originX = 0, this.originY = 0;
      }
    }, t2.prototype.decomposeTransform = function() {
      if (this.transform) {
        var t3 = this.parent, e2 = this.transform;
        t3 && t3.transform && (_e(cr, t3.invTransform, e2), e2 = cr);
        var n2 = this.originX, i2 = this.originY;
        (n2 || i2) && (pr[4] = n2, pr[5] = i2, _e(cr, e2, pr), cr[4] -= n2, cr[5] -= i2, e2 = cr), this.setLocalTransform(e2);
      }
    }, t2.prototype.getGlobalScale = function(t3) {
      var e2 = this.transform;
      return t3 = t3 || [], e2 ? (t3[0] = Math.sqrt(e2[0] * e2[0] + e2[1] * e2[1]), t3[1] = Math.sqrt(e2[2] * e2[2] + e2[3] * e2[3]), e2[0] < 0 && (t3[0] = -t3[0]), e2[3] < 0 && (t3[1] = -t3[1]), t3) : (t3[0] = 1, t3[1] = 1, t3);
    }, t2.prototype.transformCoordToLocal = function(t3, e2) {
      var n2 = [t3, e2], i2 = this.invTransform;
      return i2 && Gt(n2, n2, i2), n2;
    }, t2.prototype.transformCoordToGlobal = function(t3, e2) {
      var n2 = [t3, e2], i2 = this.transform;
      return i2 && Gt(n2, n2, i2), n2;
    }, t2.prototype.getLineScale = function() {
      var t3 = this.transform;
      return t3 && dr(t3[0] - 1) > 1e-10 && dr(t3[3] - 1) > 1e-10 ? Math.sqrt(dr(t3[0] * t3[3] - t3[2] * t3[1])) : 1;
    }, t2.prototype.copyTransform = function(t3) {
      yr(this, t3);
    }, t2.getLocalTransform = function(t3, e2) {
      e2 = e2 || [];
      var n2 = t3.originX || 0, i2 = t3.originY || 0, r2 = t3.scaleX, o2 = t3.scaleY, a2 = t3.anchorX, s2 = t3.anchorY, l2 = t3.rotation || 0, u2 = t3.x, h2 = t3.y, c2 = t3.skewX ? Math.tan(t3.skewX) : 0, p2 = t3.skewY ? Math.tan(-t3.skewY) : 0;
      if (n2 || i2 || a2 || s2) {
        var d2 = n2 + a2, f2 = i2 + s2;
        e2[4] = -d2 * r2 - c2 * f2 * o2, e2[5] = -f2 * o2 - p2 * d2 * r2;
      } else
        e2[4] = e2[5] = 0;
      return e2[0] = r2, e2[3] = o2, e2[1] = p2 * r2, e2[2] = c2 * o2, l2 && we(e2, e2, l2), e2[4] += n2 + u2, e2[5] += i2 + h2, e2;
    }, t2.initDefaultProps = function() {
      var e2 = t2.prototype;
      e2.scaleX = e2.scaleY = e2.globalScaleRatio = 1, e2.x = e2.y = e2.originX = e2.originY = e2.skewX = e2.skewY = e2.rotation = e2.anchorX = e2.anchorY = 0;
    }(), t2;
  }();
  var gr = ["x", "y", "originX", "originY", "anchorX", "anchorY", "rotation", "scaleX", "scaleY", "skewX", "skewY"];
  function yr(t2, e2) {
    for (var n2 = 0; n2 < gr.length; n2++) {
      var i2 = gr[n2];
      t2[i2] = e2[i2];
    }
  }
  var vr = {};
  function mr(t2, e2) {
    var n2 = vr[e2 = e2 || o];
    n2 || (n2 = vr[e2] = new Nn(500));
    var i2 = n2.get(t2);
    return null == i2 && (i2 = u.measureText(t2, e2).width, n2.put(t2, i2)), i2;
  }
  function xr(t2, e2, n2, i2) {
    var r2 = mr(t2, e2), o2 = Sr(e2), a2 = br(0, r2, n2), s2 = wr(0, o2, i2);
    return new Ee(a2, s2, r2, o2);
  }
  function _r(t2, e2, n2, i2) {
    var r2 = ((t2 || "") + "").split("\n");
    if (1 === r2.length)
      return xr(r2[0], e2, n2, i2);
    for (var o2 = new Ee(0, 0, 0, 0), a2 = 0; a2 < r2.length; a2++) {
      var s2 = xr(r2[a2], e2, n2, i2);
      0 === a2 ? o2.copy(s2) : o2.union(s2);
    }
    return o2;
  }
  function br(t2, e2, n2) {
    return "right" === n2 ? t2 -= e2 : "center" === n2 && (t2 -= e2 / 2), t2;
  }
  function wr(t2, e2, n2) {
    return "middle" === n2 ? t2 -= e2 / 2 : "bottom" === n2 && (t2 -= e2), t2;
  }
  function Sr(t2) {
    return mr("\u56FD", t2);
  }
  function Mr(t2, e2) {
    return "string" == typeof t2 ? t2.lastIndexOf("%") >= 0 ? parseFloat(t2) / 100 * e2 : parseFloat(t2) : t2;
  }
  function Ir(t2, e2, n2) {
    var i2 = e2.position || "inside", r2 = null != e2.distance ? e2.distance : 5, o2 = n2.height, a2 = n2.width, s2 = o2 / 2, l2 = n2.x, u2 = n2.y, h2 = "left", c2 = "top";
    if (i2 instanceof Array)
      l2 += Mr(i2[0], n2.width), u2 += Mr(i2[1], n2.height), h2 = null, c2 = null;
    else
      switch (i2) {
        case "left":
          l2 -= r2, u2 += s2, h2 = "right", c2 = "middle";
          break;
        case "right":
          l2 += r2 + a2, u2 += s2, c2 = "middle";
          break;
        case "top":
          l2 += a2 / 2, u2 -= r2, h2 = "center", c2 = "bottom";
          break;
        case "bottom":
          l2 += a2 / 2, u2 += o2 + r2, h2 = "center";
          break;
        case "inside":
          l2 += a2 / 2, u2 += s2, h2 = "center", c2 = "middle";
          break;
        case "insideLeft":
          l2 += r2, u2 += s2, c2 = "middle";
          break;
        case "insideRight":
          l2 += a2 - r2, u2 += s2, h2 = "right", c2 = "middle";
          break;
        case "insideTop":
          l2 += a2 / 2, u2 += r2, h2 = "center";
          break;
        case "insideBottom":
          l2 += a2 / 2, u2 += o2 - r2, h2 = "center", c2 = "bottom";
          break;
        case "insideTopLeft":
          l2 += r2, u2 += r2;
          break;
        case "insideTopRight":
          l2 += a2 - r2, u2 += r2, h2 = "right";
          break;
        case "insideBottomLeft":
          l2 += r2, u2 += o2 - r2, c2 = "bottom";
          break;
        case "insideBottomRight":
          l2 += a2 - r2, u2 += o2 - r2, h2 = "right", c2 = "bottom";
      }
    return (t2 = t2 || {}).x = l2, t2.y = u2, t2.align = h2, t2.verticalAlign = c2, t2;
  }
  var Tr = "__zr_normal__";
  var Cr = gr.concat(["ignore"]);
  var Dr = z(gr, function(t2, e2) {
    return t2[e2] = true, t2;
  }, { ignore: false });
  var Ar = {};
  var kr = new Ee(0, 0, 0, 0);
  var Lr = function() {
    function t2(t3) {
      this.id = S(), this.animators = [], this.currentStates = [], this.states = {}, this._init(t3);
    }
    return t2.prototype._init = function(t3) {
      this.attr(t3);
    }, t2.prototype.drift = function(t3, e2, n2) {
      switch (this.draggable) {
        case "horizontal":
          e2 = 0;
          break;
        case "vertical":
          t3 = 0;
      }
      var i2 = this.transform;
      i2 || (i2 = this.transform = [1, 0, 0, 1, 0, 0]), i2[4] += t3, i2[5] += e2, this.decomposeTransform(), this.markRedraw();
    }, t2.prototype.beforeUpdate = function() {
    }, t2.prototype.afterUpdate = function() {
    }, t2.prototype.update = function() {
      this.updateTransform(), this.__dirty && this.updateInnerText();
    }, t2.prototype.updateInnerText = function(t3) {
      var e2 = this._textContent;
      if (e2 && (!e2.ignore || t3)) {
        this.textConfig || (this.textConfig = {});
        var n2 = this.textConfig, i2 = n2.local, r2 = e2.innerTransformable, o2 = void 0, a2 = void 0, s2 = false;
        r2.parent = i2 ? this : null;
        var l2 = false;
        if (r2.copyTransform(e2), null != n2.position) {
          var u2 = kr;
          n2.layoutRect ? u2.copy(n2.layoutRect) : u2.copy(this.getBoundingRect()), i2 || u2.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Ar, n2, u2) : Ir(Ar, n2, u2), r2.x = Ar.x, r2.y = Ar.y, o2 = Ar.align, a2 = Ar.verticalAlign;
          var h2 = n2.origin;
          if (h2 && null != n2.rotation) {
            var c2 = void 0, p2 = void 0;
            "center" === h2 ? (c2 = 0.5 * u2.width, p2 = 0.5 * u2.height) : (c2 = Mr(h2[0], u2.width), p2 = Mr(h2[1], u2.height)), l2 = true, r2.originX = -r2.x + c2 + (i2 ? 0 : u2.x), r2.originY = -r2.y + p2 + (i2 ? 0 : u2.y);
          }
        }
        null != n2.rotation && (r2.rotation = n2.rotation);
        var d2 = n2.offset;
        d2 && (r2.x += d2[0], r2.y += d2[1], l2 || (r2.originX = -d2[0], r2.originY = -d2[1]));
        var f2 = null == n2.inside ? "string" == typeof n2.position && n2.position.indexOf("inside") >= 0 : n2.inside, g2 = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), y2 = void 0, v2 = void 0, m2 = void 0;
        f2 && this.canBeInsideText() ? (y2 = n2.insideFill, v2 = n2.insideStroke, null != y2 && "auto" !== y2 || (y2 = this.getInsideTextFill()), null != v2 && "auto" !== v2 || (v2 = this.getInsideTextStroke(y2), m2 = true)) : (y2 = n2.outsideFill, v2 = n2.outsideStroke, null != y2 && "auto" !== y2 || (y2 = this.getOutsideFill()), null != v2 && "auto" !== v2 || (v2 = this.getOutsideStroke(y2), m2 = true)), (y2 = y2 || "#000") === g2.fill && v2 === g2.stroke && m2 === g2.autoStroke && o2 === g2.align && a2 === g2.verticalAlign || (s2 = true, g2.fill = y2, g2.stroke = v2, g2.autoStroke = m2, g2.align = o2, g2.verticalAlign = a2, e2.setDefaultTextStyle(g2)), e2.__dirty |= 1, s2 && e2.dirtyStyle(true);
      }
    }, t2.prototype.canBeInsideText = function() {
      return true;
    }, t2.prototype.getInsideTextFill = function() {
      return "#fff";
    }, t2.prototype.getInsideTextStroke = function(t3) {
      return "#000";
    }, t2.prototype.getOutsideFill = function() {
      return this.__zr && this.__zr.isDarkMode() ? ar : or;
    }, t2.prototype.getOutsideStroke = function(t3) {
      var e2 = this.__zr && this.__zr.getBackgroundColor(), n2 = "string" == typeof e2 && jn(e2);
      n2 || (n2 = [255, 255, 255, 1]);
      for (var i2 = n2[3], r2 = this.__zr.isDarkMode(), o2 = 0; o2 < 3; o2++)
        n2[o2] = n2[o2] * i2 + (r2 ? 0 : 255) * (1 - i2);
      return n2[3] = 1, ii(n2, "rgba");
    }, t2.prototype.traverse = function(t3, e2) {
    }, t2.prototype.attrKV = function(t3, e2) {
      "textConfig" === t3 ? this.setTextConfig(e2) : "textContent" === t3 ? this.setTextContent(e2) : "clipPath" === t3 ? this.setClipPath(e2) : "extra" === t3 ? (this.extra = this.extra || {}, D(this.extra, e2)) : this[t3] = e2;
    }, t2.prototype.hide = function() {
      this.ignore = true, this.markRedraw();
    }, t2.prototype.show = function() {
      this.ignore = false, this.markRedraw();
    }, t2.prototype.attr = function(t3, e2) {
      if ("string" == typeof t3)
        this.attrKV(t3, e2);
      else if (j(t3))
        for (var n2 = F(t3), i2 = 0; i2 < n2.length; i2++) {
          var r2 = n2[i2];
          this.attrKV(r2, t3[r2]);
        }
      return this.markRedraw(), this;
    }, t2.prototype.saveCurrentToNormalState = function(t3) {
      this._innerSaveToNormal(t3);
      for (var e2 = this._normalState, n2 = 0; n2 < this.animators.length; n2++) {
        var i2 = this.animators[n2], r2 = i2.__fromStateTransition;
        if (!(i2.getLoop() || r2 && r2 !== Tr)) {
          var o2 = i2.targetName, a2 = o2 ? e2[o2] : e2;
          i2.saveTo(a2);
        }
      }
    }, t2.prototype._innerSaveToNormal = function(t3) {
      var e2 = this._normalState;
      e2 || (e2 = this._normalState = {}), t3.textConfig && !e2.textConfig && (e2.textConfig = this.textConfig), this._savePrimaryToNormal(t3, e2, Cr);
    }, t2.prototype._savePrimaryToNormal = function(t3, e2, n2) {
      for (var i2 = 0; i2 < n2.length; i2++) {
        var r2 = n2[i2];
        null == t3[r2] || r2 in e2 || (e2[r2] = this[r2]);
      }
    }, t2.prototype.hasState = function() {
      return this.currentStates.length > 0;
    }, t2.prototype.getState = function(t3) {
      return this.states[t3];
    }, t2.prototype.ensureState = function(t3) {
      var e2 = this.states;
      return e2[t3] || (e2[t3] = {}), e2[t3];
    }, t2.prototype.clearStates = function(t3) {
      this.useState(Tr, false, t3);
    }, t2.prototype.useState = function(t3, e2, n2, i2) {
      var r2 = t3 === Tr;
      if (this.hasState() || !r2) {
        var o2 = this.currentStates, a2 = this.stateTransition;
        if (!(L(o2, t3) >= 0) || !e2 && 1 !== o2.length) {
          var s2;
          if (this.stateProxy && !r2 && (s2 = this.stateProxy(t3)), s2 || (s2 = this.states && this.states[t3]), s2 || r2) {
            r2 || this.saveCurrentToNormalState(s2);
            var l2 = !!(s2 && s2.hoverLayer || i2);
            l2 && this._toggleHoverLayerFlag(true), this._applyStateObj(t3, s2, this._normalState, e2, !n2 && !this.__inHover && a2 && a2.duration > 0, a2);
            var u2 = this._textContent, h2 = this._textGuide;
            return u2 && u2.useState(t3, e2, n2, l2), h2 && h2.useState(t3, e2, n2, l2), r2 ? (this.currentStates = [], this._normalState = {}) : e2 ? this.currentStates.push(t3) : this.currentStates = [t3], this._updateAnimationTargets(), this.markRedraw(), !l2 && this.__inHover && (this._toggleHoverLayerFlag(false), this.__dirty &= -2), s2;
          }
          M("State " + t3 + " not exists.");
        }
      }
    }, t2.prototype.useStates = function(t3, e2, n2) {
      if (t3.length) {
        var i2 = [], r2 = this.currentStates, o2 = t3.length, a2 = o2 === r2.length;
        if (a2) {
          for (var s2 = 0; s2 < o2; s2++)
            if (t3[s2] !== r2[s2]) {
              a2 = false;
              break;
            }
        }
        if (a2)
          return;
        for (s2 = 0; s2 < o2; s2++) {
          var l2 = t3[s2], u2 = void 0;
          this.stateProxy && (u2 = this.stateProxy(l2, t3)), u2 || (u2 = this.states[l2]), u2 && i2.push(u2);
        }
        var h2 = i2[o2 - 1], c2 = !!(h2 && h2.hoverLayer || n2);
        c2 && this._toggleHoverLayerFlag(true);
        var p2 = this._mergeStates(i2), d2 = this.stateTransition;
        this.saveCurrentToNormalState(p2), this._applyStateObj(t3.join(","), p2, this._normalState, false, !e2 && !this.__inHover && d2 && d2.duration > 0, d2);
        var f2 = this._textContent, g2 = this._textGuide;
        f2 && f2.useStates(t3, e2, c2), g2 && g2.useStates(t3, e2, c2), this._updateAnimationTargets(), this.currentStates = t3.slice(), this.markRedraw(), !c2 && this.__inHover && (this._toggleHoverLayerFlag(false), this.__dirty &= -2);
      } else
        this.clearStates();
    }, t2.prototype._updateAnimationTargets = function() {
      for (var t3 = 0; t3 < this.animators.length; t3++) {
        var e2 = this.animators[t3];
        e2.targetName && e2.changeTarget(this[e2.targetName]);
      }
    }, t2.prototype.removeState = function(t3) {
      var e2 = L(this.currentStates, t3);
      if (e2 >= 0) {
        var n2 = this.currentStates.slice();
        n2.splice(e2, 1), this.useStates(n2);
      }
    }, t2.prototype.replaceState = function(t3, e2, n2) {
      var i2 = this.currentStates.slice(), r2 = L(i2, t3), o2 = L(i2, e2) >= 0;
      r2 >= 0 ? o2 ? i2.splice(r2, 1) : i2[r2] = e2 : n2 && !o2 && i2.push(e2), this.useStates(i2);
    }, t2.prototype.toggleState = function(t3, e2) {
      e2 ? this.useState(t3, true) : this.removeState(t3);
    }, t2.prototype._mergeStates = function(t3) {
      for (var e2, n2 = {}, i2 = 0; i2 < t3.length; i2++) {
        var r2 = t3[i2];
        D(n2, r2), r2.textConfig && D(e2 = e2 || {}, r2.textConfig);
      }
      return e2 && (n2.textConfig = e2), n2;
    }, t2.prototype._applyStateObj = function(t3, e2, n2, i2, r2, o2) {
      var a2 = !(e2 && i2);
      e2 && e2.textConfig ? (this.textConfig = D({}, i2 ? this.textConfig : n2.textConfig), D(this.textConfig, e2.textConfig)) : a2 && n2.textConfig && (this.textConfig = n2.textConfig);
      for (var s2 = {}, l2 = false, u2 = 0; u2 < Cr.length; u2++) {
        var h2 = Cr[u2], c2 = r2 && Dr[h2];
        e2 && null != e2[h2] ? c2 ? (l2 = true, s2[h2] = e2[h2]) : this[h2] = e2[h2] : a2 && null != n2[h2] && (c2 ? (l2 = true, s2[h2] = n2[h2]) : this[h2] = n2[h2]);
      }
      if (!r2)
        for (u2 = 0; u2 < this.animators.length; u2++) {
          var p2 = this.animators[u2], d2 = p2.targetName;
          p2.getLoop() || p2.__changeFinalValue(d2 ? (e2 || n2)[d2] : e2 || n2);
        }
      l2 && this._transitionState(t3, s2, o2);
    }, t2.prototype._attachComponent = function(t3) {
      if ((!t3.__zr || t3.__hostTarget) && t3 !== this) {
        var e2 = this.__zr;
        e2 && t3.addSelfToZr(e2), t3.__zr = e2, t3.__hostTarget = this;
      }
    }, t2.prototype._detachComponent = function(t3) {
      t3.__zr && t3.removeSelfFromZr(t3.__zr), t3.__zr = null, t3.__hostTarget = null;
    }, t2.prototype.getClipPath = function() {
      return this._clipPath;
    }, t2.prototype.setClipPath = function(t3) {
      this._clipPath && this._clipPath !== t3 && this.removeClipPath(), this._attachComponent(t3), this._clipPath = t3, this.markRedraw();
    }, t2.prototype.removeClipPath = function() {
      var t3 = this._clipPath;
      t3 && (this._detachComponent(t3), this._clipPath = null, this.markRedraw());
    }, t2.prototype.getTextContent = function() {
      return this._textContent;
    }, t2.prototype.setTextContent = function(t3) {
      var e2 = this._textContent;
      e2 !== t3 && (e2 && e2 !== t3 && this.removeTextContent(), t3.innerTransformable = new fr(), this._attachComponent(t3), this._textContent = t3, this.markRedraw());
    }, t2.prototype.setTextConfig = function(t3) {
      this.textConfig || (this.textConfig = {}), D(this.textConfig, t3), this.markRedraw();
    }, t2.prototype.removeTextConfig = function() {
      this.textConfig = null, this.markRedraw();
    }, t2.prototype.removeTextContent = function() {
      var t3 = this._textContent;
      t3 && (t3.innerTransformable = null, this._detachComponent(t3), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
    }, t2.prototype.getTextGuideLine = function() {
      return this._textGuide;
    }, t2.prototype.setTextGuideLine = function(t3) {
      this._textGuide && this._textGuide !== t3 && this.removeTextGuideLine(), this._attachComponent(t3), this._textGuide = t3, this.markRedraw();
    }, t2.prototype.removeTextGuideLine = function() {
      var t3 = this._textGuide;
      t3 && (this._detachComponent(t3), this._textGuide = null, this.markRedraw());
    }, t2.prototype.markRedraw = function() {
      this.__dirty |= 1;
      var t3 = this.__zr;
      t3 && (this.__inHover ? t3.refreshHover() : t3.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
    }, t2.prototype.dirty = function() {
      this.markRedraw();
    }, t2.prototype._toggleHoverLayerFlag = function(t3) {
      this.__inHover = t3;
      var e2 = this._textContent, n2 = this._textGuide;
      e2 && (e2.__inHover = t3), n2 && (n2.__inHover = t3);
    }, t2.prototype.addSelfToZr = function(t3) {
      if (this.__zr !== t3) {
        this.__zr = t3;
        var e2 = this.animators;
        if (e2)
          for (var n2 = 0; n2 < e2.length; n2++)
            t3.animation.addAnimator(e2[n2]);
        this._clipPath && this._clipPath.addSelfToZr(t3), this._textContent && this._textContent.addSelfToZr(t3), this._textGuide && this._textGuide.addSelfToZr(t3);
      }
    }, t2.prototype.removeSelfFromZr = function(t3) {
      if (this.__zr) {
        this.__zr = null;
        var e2 = this.animators;
        if (e2)
          for (var n2 = 0; n2 < e2.length; n2++)
            t3.animation.removeAnimator(e2[n2]);
        this._clipPath && this._clipPath.removeSelfFromZr(t3), this._textContent && this._textContent.removeSelfFromZr(t3), this._textGuide && this._textGuide.removeSelfFromZr(t3);
      }
    }, t2.prototype.animate = function(t3, e2, n2) {
      var i2 = t3 ? this[t3] : this;
      var r2 = new Ni(i2, e2, n2);
      return t3 && (r2.targetName = t3), this.addAnimator(r2, t3), r2;
    }, t2.prototype.addAnimator = function(t3, e2) {
      var n2 = this.__zr, i2 = this;
      t3.during(function() {
        i2.updateDuringAnimation(e2);
      }).done(function() {
        var e3 = i2.animators, n3 = L(e3, t3);
        n3 >= 0 && e3.splice(n3, 1);
      }), this.animators.push(t3), n2 && n2.animation.addAnimator(t3), n2 && n2.wakeUp();
    }, t2.prototype.updateDuringAnimation = function(t3) {
      this.markRedraw();
    }, t2.prototype.stopAnimation = function(t3, e2) {
      for (var n2 = this.animators, i2 = n2.length, r2 = [], o2 = 0; o2 < i2; o2++) {
        var a2 = n2[o2];
        t3 && t3 !== a2.scope ? r2.push(a2) : a2.stop(e2);
      }
      return this.animators = r2, this;
    }, t2.prototype.animateTo = function(t3, e2, n2) {
      Pr(this, t3, e2, n2);
    }, t2.prototype.animateFrom = function(t3, e2, n2) {
      Pr(this, t3, e2, n2, true);
    }, t2.prototype._transitionState = function(t3, e2, n2, i2) {
      for (var r2 = Pr(this, e2, n2, i2), o2 = 0; o2 < r2.length; o2++)
        r2[o2].__fromStateTransition = t3;
    }, t2.prototype.getBoundingRect = function() {
      return null;
    }, t2.prototype.getPaintRect = function() {
      return null;
    }, t2.initDefaultProps = function() {
      var e2 = t2.prototype;
      e2.type = "element", e2.name = "", e2.ignore = e2.silent = e2.isGroup = e2.draggable = e2.dragging = e2.ignoreClip = e2.__inHover = false, e2.__dirty = 1;
      function n2(t3, n3, i2, r2) {
        function o2(t4, e3) {
          Object.defineProperty(e3, 0, { get: function() {
            return t4[i2];
          }, set: function(e4) {
            t4[i2] = e4;
          } }), Object.defineProperty(e3, 1, { get: function() {
            return t4[r2];
          }, set: function(e4) {
            t4[r2] = e4;
          } });
        }
        Object.defineProperty(e2, t3, { get: function() {
          this[n3] || o2(this, this[n3] = []);
          return this[n3];
        }, set: function(t4) {
          this[i2] = t4[0], this[r2] = t4[1], this[n3] = t4, o2(this, t4);
        } });
      }
      Object.defineProperty && (n2("position", "_legacyPos", "x", "y"), n2("scale", "_legacyScale", "scaleX", "scaleY"), n2("origin", "_legacyOrigin", "originX", "originY"));
    }(), t2;
  }();
  function Pr(t2, e2, n2, i2, r2) {
    var o2 = [];
    Nr(t2, "", t2, e2, n2 = n2 || {}, i2, o2, r2);
    var a2 = o2.length, s2 = false, l2 = n2.done, u2 = n2.aborted, h2 = function() {
      s2 = true, --a2 <= 0 && (s2 ? l2 && l2() : u2 && u2());
    }, c2 = function() {
      --a2 <= 0 && (s2 ? l2 && l2() : u2 && u2());
    };
    a2 || l2 && l2(), o2.length > 0 && n2.during && o2[0].during(function(t3, e3) {
      n2.during(e3);
    });
    for (var p2 = 0; p2 < o2.length; p2++) {
      var d2 = o2[p2];
      h2 && d2.done(h2), c2 && d2.aborted(c2), n2.force && d2.duration(n2.duration), d2.start(n2.easing);
    }
    return o2;
  }
  function Or(t2, e2, n2) {
    for (var i2 = 0; i2 < n2; i2++)
      t2[i2] = e2[i2];
  }
  function Rr(t2, e2, n2) {
    if (R(e2[n2]))
      if (R(t2[n2]) || (t2[n2] = []), K(e2[n2])) {
        var i2 = e2[n2].length;
        t2[n2].length !== i2 && (t2[n2] = new e2[n2].constructor(i2), Or(t2[n2], e2[n2], i2));
      } else {
        var r2 = e2[n2], o2 = t2[n2], a2 = r2.length;
        if (R(r2[0]))
          for (var s2 = r2[0].length, l2 = 0; l2 < a2; l2++)
            o2[l2] ? Or(o2[l2], r2[l2], s2) : o2[l2] = Array.prototype.slice.call(r2[l2]);
        else
          Or(o2, r2, a2);
        o2.length = r2.length;
      }
    else
      t2[n2] = e2[n2];
  }
  function Nr(t2, e2, n2, i2, r2, o2, a2, s2) {
    for (var l2 = F(i2), u2 = r2.duration, h2 = r2.delay, c2 = r2.additive, p2 = r2.setToFinal, d2 = !j(o2), f2 = t2.animators, g2 = [], y2 = 0; y2 < l2.length; y2++) {
      var v2 = l2[y2], m2 = i2[v2];
      if (null != m2 && null != n2[v2] && (d2 || o2[v2]))
        if (!j(m2) || R(m2) || J(m2))
          g2.push(v2);
        else {
          if (e2) {
            s2 || (n2[v2] = m2, t2.updateDuringAnimation(e2));
            continue;
          }
          Nr(t2, v2, n2[v2], m2, r2, o2 && o2[v2], a2, s2);
        }
      else
        s2 || (n2[v2] = m2, t2.updateDuringAnimation(e2), g2.push(v2));
    }
    var x2 = g2.length;
    if (!c2 && x2)
      for (var _2 = 0; _2 < f2.length; _2++) {
        if ((w2 = f2[_2]).targetName === e2) {
          if (w2.stopTracks(g2)) {
            var b2 = L(f2, w2);
            f2.splice(b2, 1);
          }
        }
      }
    if (r2.force || (g2 = V(g2, function(t3) {
      return e3 = i2[t3], r3 = n2[t3], !(e3 === r3 || R(e3) && R(r3) && function(t4, e4) {
        var n3 = t4.length;
        if (n3 !== e4.length)
          return false;
        for (var i3 = 0; i3 < n3; i3++)
          if (t4[i3] !== e4[i3])
            return false;
        return true;
      }(e3, r3));
      var e3, r3;
    }), x2 = g2.length), x2 > 0 || r2.force && !a2.length) {
      var w2, S2 = void 0, M2 = void 0, I2 = void 0;
      if (s2) {
        M2 = {}, p2 && (S2 = {});
        for (_2 = 0; _2 < x2; _2++) {
          M2[v2 = g2[_2]] = n2[v2], p2 ? S2[v2] = i2[v2] : n2[v2] = i2[v2];
        }
      } else if (p2) {
        I2 = {};
        for (_2 = 0; _2 < x2; _2++) {
          I2[v2 = g2[_2]] = Ai(n2[v2]), Rr(n2, i2, v2);
        }
      }
      (w2 = new Ni(n2, false, false, c2 ? V(f2, function(t3) {
        return t3.targetName === e2;
      }) : null)).targetName = e2, r2.scope && (w2.scope = r2.scope), p2 && S2 && w2.whenWithKeys(0, S2, g2), I2 && w2.whenWithKeys(0, I2, g2), w2.whenWithKeys(null == u2 ? 500 : u2, s2 ? M2 : i2, g2).delay(h2 || 0), t2.addAnimator(w2, e2), a2.push(w2);
    }
  }
  O(Lr, Zt), O(Lr, fr);
  var Er = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      return n3.isGroup = true, n3._children = [], n3.attr(e2), n3;
    }
    return e(n2, t2), n2.prototype.childrenRef = function() {
      return this._children;
    }, n2.prototype.children = function() {
      return this._children.slice();
    }, n2.prototype.childAt = function(t3) {
      return this._children[t3];
    }, n2.prototype.childOfName = function(t3) {
      for (var e2 = this._children, n3 = 0; n3 < e2.length; n3++)
        if (e2[n3].name === t3)
          return e2[n3];
    }, n2.prototype.childCount = function() {
      return this._children.length;
    }, n2.prototype.add = function(t3) {
      return t3 && t3 !== this && t3.parent !== this && (this._children.push(t3), this._doAdd(t3)), this;
    }, n2.prototype.addBefore = function(t3, e2) {
      if (t3 && t3 !== this && t3.parent !== this && e2 && e2.parent === this) {
        var n3 = this._children, i2 = n3.indexOf(e2);
        i2 >= 0 && (n3.splice(i2, 0, t3), this._doAdd(t3));
      }
      return this;
    }, n2.prototype.replace = function(t3, e2) {
      var n3 = L(this._children, t3);
      return n3 >= 0 && this.replaceAt(e2, n3), this;
    }, n2.prototype.replaceAt = function(t3, e2) {
      var n3 = this._children, i2 = n3[e2];
      if (t3 && t3 !== this && t3.parent !== this && t3 !== i2) {
        n3[e2] = t3, i2.parent = null;
        var r2 = this.__zr;
        r2 && i2.removeSelfFromZr(r2), this._doAdd(t3);
      }
      return this;
    }, n2.prototype._doAdd = function(t3) {
      t3.parent && t3.parent.remove(t3), t3.parent = this;
      var e2 = this.__zr;
      e2 && e2 !== t3.__zr && t3.addSelfToZr(e2), e2 && e2.refresh();
    }, n2.prototype.remove = function(t3) {
      var e2 = this.__zr, n3 = this._children, i2 = L(n3, t3);
      return i2 < 0 || (n3.splice(i2, 1), t3.parent = null, e2 && t3.removeSelfFromZr(e2), e2 && e2.refresh()), this;
    }, n2.prototype.removeAll = function() {
      for (var t3 = this._children, e2 = this.__zr, n3 = 0; n3 < t3.length; n3++) {
        var i2 = t3[n3];
        e2 && i2.removeSelfFromZr(e2), i2.parent = null;
      }
      return t3.length = 0, this;
    }, n2.prototype.eachChild = function(t3, e2) {
      for (var n3 = this._children, i2 = 0; i2 < n3.length; i2++) {
        var r2 = n3[i2];
        t3.call(e2, r2, i2);
      }
      return this;
    }, n2.prototype.traverse = function(t3, e2) {
      for (var n3 = 0; n3 < this._children.length; n3++) {
        var i2 = this._children[n3], r2 = t3.call(e2, i2);
        i2.isGroup && !r2 && i2.traverse(t3, e2);
      }
      return this;
    }, n2.prototype.addSelfToZr = function(e2) {
      t2.prototype.addSelfToZr.call(this, e2);
      for (var n3 = 0; n3 < this._children.length; n3++) {
        this._children[n3].addSelfToZr(e2);
      }
    }, n2.prototype.removeSelfFromZr = function(e2) {
      t2.prototype.removeSelfFromZr.call(this, e2);
      for (var n3 = 0; n3 < this._children.length; n3++) {
        this._children[n3].removeSelfFromZr(e2);
      }
    }, n2.prototype.getBoundingRect = function(t3) {
      for (var e2 = new Ee(0, 0, 0, 0), n3 = t3 || this._children, i2 = [], r2 = null, o2 = 0; o2 < n3.length; o2++) {
        var a2 = n3[o2];
        if (!a2.ignore && !a2.invisible) {
          var s2 = a2.getBoundingRect(), l2 = a2.getLocalTransform(i2);
          l2 ? (Ee.applyTransform(e2, s2, l2), (r2 = r2 || e2.clone()).union(e2)) : (r2 = r2 || s2.clone()).union(s2);
        }
      }
      return r2 || e2;
    }, n2;
  }(Lr);
  Er.prototype.type = "group";
  var zr = {};
  var Vr = {};
  var Br = function() {
    function t2(t3, e2, n2) {
      var r2 = this;
      this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = true, this._needsRefreshHover = true, this._darkMode = false, n2 = n2 || {}, this.dom = e2, this.id = t3;
      var o2 = new nn(), a2 = n2.renderer || "canvas";
      zr[a2] || (a2 = F(zr)[0]), n2.useDirtyRect = null != n2.useDirtyRect && n2.useDirtyRect;
      var s2 = new zr[a2](e2, o2, n2, t3), l2 = n2.ssr || s2.ssrOnly;
      this.storage = o2, this.painter = s2;
      var u2, h2 = i.node || i.worker || l2 ? null : new nr(s2.getViewportRoot(), s2.root), c2 = n2.useCoarsePointer;
      (null == c2 || "auto" === c2 ? i.touchEventsSupported : !!c2) && (u2 = it(n2.pointerSize, 44)), this.handler = new He(o2, s2, h2, s2.root, u2), this.animation = new Bi({ stage: { update: l2 ? null : function() {
        return r2._flush(true);
      } } }), l2 || this.animation.start();
    }
    return t2.prototype.add = function(t3) {
      t3 && (this.storage.addRoot(t3), t3.addSelfToZr(this), this.refresh());
    }, t2.prototype.remove = function(t3) {
      t3 && (this.storage.delRoot(t3), t3.removeSelfFromZr(this), this.refresh());
    }, t2.prototype.configLayer = function(t3, e2) {
      this.painter.configLayer && this.painter.configLayer(t3, e2), this.refresh();
    }, t2.prototype.setBackgroundColor = function(t3) {
      this.painter.setBackgroundColor && this.painter.setBackgroundColor(t3), this.refresh(), this._backgroundColor = t3, this._darkMode = function(t4) {
        if (!t4)
          return false;
        if ("string" == typeof t4)
          return ri(t4, 1) < 0.4;
        if (t4.colorStops) {
          for (var e2 = t4.colorStops, n2 = 0, i2 = e2.length, r2 = 0; r2 < i2; r2++)
            n2 += ri(e2[r2].color, 1);
          return (n2 /= i2) < 0.4;
        }
        return false;
      }(t3);
    }, t2.prototype.getBackgroundColor = function() {
      return this._backgroundColor;
    }, t2.prototype.setDarkMode = function(t3) {
      this._darkMode = t3;
    }, t2.prototype.isDarkMode = function() {
      return this._darkMode;
    }, t2.prototype.refreshImmediately = function(t3) {
      t3 || this.animation.update(true), this._needsRefresh = false, this.painter.refresh(), this._needsRefresh = false;
    }, t2.prototype.refresh = function() {
      this._needsRefresh = true, this.animation.start();
    }, t2.prototype.flush = function() {
      this._flush(false);
    }, t2.prototype._flush = function(t3) {
      var e2, n2 = Ei();
      this._needsRefresh && (e2 = true, this.refreshImmediately(t3)), this._needsRefreshHover && (e2 = true, this.refreshHoverImmediately());
      var i2 = Ei();
      e2 ? (this._stillFrameAccum = 0, this.trigger("rendered", { elapsedTime: i2 - n2 })) : this._sleepAfterStill > 0 && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill && this.animation.stop());
    }, t2.prototype.setSleepAfterStill = function(t3) {
      this._sleepAfterStill = t3;
    }, t2.prototype.wakeUp = function() {
      this.animation.start(), this._stillFrameAccum = 0;
    }, t2.prototype.refreshHover = function() {
      this._needsRefreshHover = true;
    }, t2.prototype.refreshHoverImmediately = function() {
      this._needsRefreshHover = false, this.painter.refreshHover && "canvas" === this.painter.getType() && this.painter.refreshHover();
    }, t2.prototype.resize = function(t3) {
      t3 = t3 || {}, this.painter.resize(t3.width, t3.height), this.handler.resize();
    }, t2.prototype.clearAnimation = function() {
      this.animation.clear();
    }, t2.prototype.getWidth = function() {
      return this.painter.getWidth();
    }, t2.prototype.getHeight = function() {
      return this.painter.getHeight();
    }, t2.prototype.setCursorStyle = function(t3) {
      this.handler.setCursorStyle(t3);
    }, t2.prototype.findHover = function(t3, e2) {
      return this.handler.findHover(t3, e2);
    }, t2.prototype.on = function(t3, e2, n2) {
      return this.handler.on(t3, e2, n2), this;
    }, t2.prototype.off = function(t3, e2) {
      this.handler.off(t3, e2);
    }, t2.prototype.trigger = function(t3, e2) {
      this.handler.trigger(t3, e2);
    }, t2.prototype.clear = function() {
      for (var t3 = this.storage.getRoots(), e2 = 0; e2 < t3.length; e2++)
        t3[e2] instanceof Er && t3[e2].removeSelfFromZr(this);
      this.storage.delAllRoots(), this.painter.clear();
    }, t2.prototype.dispose = function() {
      var t3;
      this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, t3 = this.id, delete Vr[t3];
    }, t2;
  }();
  function Fr(t2, e2) {
    var n2 = new Br(S(), t2, e2);
    return Vr[n2.id] = n2, n2;
  }
  function Gr(t2, e2) {
    zr[t2] = e2;
  }
  var Wr = Object.freeze({ __proto__: null, init: Fr, dispose: function(t2) {
    t2.dispose();
  }, disposeAll: function() {
    for (var t2 in Vr)
      Vr.hasOwnProperty(t2) && Vr[t2].dispose();
    Vr = {};
  }, getInstance: function(t2) {
    return Vr[t2];
  }, registerPainter: Gr, version: "5.4.4" });
  var Hr = 1e-4;
  function Yr(t2, e2, n2, i2) {
    var r2 = e2[0], o2 = e2[1], a2 = n2[0], s2 = n2[1], l2 = o2 - r2, u2 = s2 - a2;
    if (0 === l2)
      return 0 === u2 ? a2 : (a2 + s2) / 2;
    if (i2)
      if (l2 > 0) {
        if (t2 <= r2)
          return a2;
        if (t2 >= o2)
          return s2;
      } else {
        if (t2 >= r2)
          return a2;
        if (t2 <= o2)
          return s2;
      }
    else {
      if (t2 === r2)
        return a2;
      if (t2 === o2)
        return s2;
    }
    return (t2 - r2) / l2 * u2 + a2;
  }
  function Xr(t2, e2) {
    switch (t2) {
      case "center":
      case "middle":
        t2 = "50%";
        break;
      case "left":
      case "top":
        t2 = "0%";
        break;
      case "right":
      case "bottom":
        t2 = "100%";
    }
    return X(t2) ? (n2 = t2, n2.replace(/^\s+|\s+$/g, "")).match(/%$/) ? parseFloat(t2) / 100 * e2 : parseFloat(t2) : null == t2 ? NaN : +t2;
    var n2;
  }
  function Ur(t2, e2, n2) {
    return null == e2 && (e2 = 10), e2 = Math.min(Math.max(0, e2), 20), t2 = (+t2).toFixed(e2), n2 ? t2 : +t2;
  }
  function Zr(t2) {
    return t2.sort(function(t3, e2) {
      return t3 - e2;
    }), t2;
  }
  function jr(t2) {
    if (t2 = +t2, isNaN(t2))
      return 0;
    if (t2 > 1e-14) {
      for (var e2 = 1, n2 = 0; n2 < 15; n2++, e2 *= 10)
        if (Math.round(t2 * e2) / e2 === t2)
          return n2;
    }
    return qr(t2);
  }
  function qr(t2) {
    var e2 = t2.toString().toLowerCase(), n2 = e2.indexOf("e"), i2 = n2 > 0 ? +e2.slice(n2 + 1) : 0, r2 = n2 > 0 ? n2 : e2.length, o2 = e2.indexOf("."), a2 = o2 < 0 ? 0 : r2 - 1 - o2;
    return Math.max(0, a2 - i2);
  }
  function Kr(t2, e2) {
    var n2 = Math.log, i2 = Math.LN10, r2 = Math.floor(n2(t2[1] - t2[0]) / i2), o2 = Math.round(n2(Math.abs(e2[1] - e2[0])) / i2), a2 = Math.min(Math.max(-r2 + o2, 0), 20);
    return isFinite(a2) ? a2 : 20;
  }
  function $r(t2, e2) {
    var n2 = z(t2, function(t3, e3) {
      return t3 + (isNaN(e3) ? 0 : e3);
    }, 0);
    if (0 === n2)
      return [];
    for (var i2 = Math.pow(10, e2), r2 = E(t2, function(t3) {
      return (isNaN(t3) ? 0 : t3) / n2 * i2 * 100;
    }), o2 = 100 * i2, a2 = E(r2, function(t3) {
      return Math.floor(t3);
    }), s2 = z(a2, function(t3, e3) {
      return t3 + e3;
    }, 0), l2 = E(r2, function(t3, e3) {
      return t3 - a2[e3];
    }); s2 < o2; ) {
      for (var u2 = Number.NEGATIVE_INFINITY, h2 = null, c2 = 0, p2 = l2.length; c2 < p2; ++c2)
        l2[c2] > u2 && (u2 = l2[c2], h2 = c2);
      ++a2[h2], l2[h2] = 0, ++s2;
    }
    return E(a2, function(t3) {
      return t3 / i2;
    });
  }
  function Jr(t2, e2) {
    var n2 = Math.max(jr(t2), jr(e2)), i2 = t2 + e2;
    return n2 > 20 ? i2 : Ur(i2, n2);
  }
  var Qr = 9007199254740991;
  function to(t2) {
    var e2 = 2 * Math.PI;
    return (t2 % e2 + e2) % e2;
  }
  function eo(t2) {
    return t2 > -1e-4 && t2 < Hr;
  }
  var no = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
  function io(t2) {
    if (t2 instanceof Date)
      return t2;
    if (X(t2)) {
      var e2 = no.exec(t2);
      if (!e2)
        return /* @__PURE__ */ new Date(NaN);
      if (e2[8]) {
        var n2 = +e2[4] || 0;
        return "Z" !== e2[8].toUpperCase() && (n2 -= +e2[8].slice(0, 3)), new Date(Date.UTC(+e2[1], +(e2[2] || 1) - 1, +e2[3] || 1, n2, +(e2[5] || 0), +e2[6] || 0, e2[7] ? +e2[7].substring(0, 3) : 0));
      }
      return new Date(+e2[1], +(e2[2] || 1) - 1, +e2[3] || 1, +e2[4] || 0, +(e2[5] || 0), +e2[6] || 0, e2[7] ? +e2[7].substring(0, 3) : 0);
    }
    return null == t2 ? /* @__PURE__ */ new Date(NaN) : new Date(Math.round(t2));
  }
  function ro(t2) {
    return Math.pow(10, oo(t2));
  }
  function oo(t2) {
    if (0 === t2)
      return 0;
    var e2 = Math.floor(Math.log(t2) / Math.LN10);
    return t2 / Math.pow(10, e2) >= 10 && e2++, e2;
  }
  function ao(t2, e2) {
    var n2 = oo(t2), i2 = Math.pow(10, n2), r2 = t2 / i2;
    return t2 = (e2 ? r2 < 1.5 ? 1 : r2 < 2.5 ? 2 : r2 < 4 ? 3 : r2 < 7 ? 5 : 10 : r2 < 1 ? 1 : r2 < 2 ? 2 : r2 < 3 ? 3 : r2 < 5 ? 5 : 10) * i2, n2 >= -20 ? +t2.toFixed(n2 < 0 ? -n2 : 0) : t2;
  }
  function so(t2, e2) {
    var n2 = (t2.length - 1) * e2 + 1, i2 = Math.floor(n2), r2 = +t2[i2 - 1], o2 = n2 - i2;
    return o2 ? r2 + o2 * (t2[i2] - r2) : r2;
  }
  function lo(t2) {
    t2.sort(function(t3, e3) {
      return s2(t3, e3, 0) ? -1 : 1;
    });
    for (var e2 = -1 / 0, n2 = 1, i2 = 0; i2 < t2.length; ) {
      for (var r2 = t2[i2].interval, o2 = t2[i2].close, a2 = 0; a2 < 2; a2++)
        r2[a2] <= e2 && (r2[a2] = e2, o2[a2] = a2 ? 1 : 1 - n2), e2 = r2[a2], n2 = o2[a2];
      r2[0] === r2[1] && o2[0] * o2[1] != 1 ? t2.splice(i2, 1) : i2++;
    }
    return t2;
    function s2(t3, e3, n3) {
      return t3.interval[n3] < e3.interval[n3] || t3.interval[n3] === e3.interval[n3] && (t3.close[n3] - e3.close[n3] == (n3 ? -1 : 1) || !n3 && s2(t3, e3, 1));
    }
  }
  function uo(t2) {
    var e2 = parseFloat(t2);
    return e2 == t2 && (0 !== e2 || !X(t2) || t2.indexOf("x") <= 0) ? e2 : NaN;
  }
  function ho(t2) {
    return !isNaN(uo(t2));
  }
  function co() {
    return Math.round(9 * Math.random());
  }
  function po(t2, e2) {
    return 0 === e2 ? t2 : po(e2, t2 % e2);
  }
  function fo(t2, e2) {
    return null == t2 ? e2 : null == e2 ? t2 : t2 * e2 / po(t2, e2);
  }
  function yo(t2) {
    throw new Error(t2);
  }
  function vo(t2, e2, n2) {
    return (e2 - t2) * n2 + t2;
  }
  var mo = "series\0";
  var xo = "\0_ec_\0";
  function _o(t2) {
    return t2 instanceof Array ? t2 : null == t2 ? [] : [t2];
  }
  function bo(t2, e2, n2) {
    if (t2) {
      t2[e2] = t2[e2] || {}, t2.emphasis = t2.emphasis || {}, t2.emphasis[e2] = t2.emphasis[e2] || {};
      for (var i2 = 0, r2 = n2.length; i2 < r2; i2++) {
        var o2 = n2[i2];
        !t2.emphasis[e2].hasOwnProperty(o2) && t2[e2].hasOwnProperty(o2) && (t2.emphasis[e2][o2] = t2[e2][o2]);
      }
    }
  }
  var wo = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
  function So(t2) {
    return !j(t2) || H(t2) || t2 instanceof Date ? t2 : t2.value;
  }
  function Mo(t2) {
    return j(t2) && !(t2 instanceof Array);
  }
  function Io(t2, e2, n2) {
    var i2 = "normalMerge" === n2, r2 = "replaceMerge" === n2, o2 = "replaceAll" === n2;
    t2 = t2 || [], e2 = (e2 || []).slice();
    var a2 = gt();
    N(e2, function(t3, n3) {
      j(t3) || (e2[n3] = null);
    });
    var s2, l2, u2 = function(t3, e3, n3) {
      var i3 = [];
      if ("replaceAll" === n3)
        return i3;
      for (var r3 = 0; r3 < t3.length; r3++) {
        var o3 = t3[r3];
        o3 && null != o3.id && e3.set(o3.id, r3), i3.push({ existing: "replaceMerge" === n3 || ko(o3) ? null : o3, newOption: null, keyInfo: null, brandNew: null });
      }
      return i3;
    }(t2, a2, n2);
    return (i2 || r2) && function(t3, e3, n3, i3) {
      N(i3, function(r3, o3) {
        if (r3 && null != r3.id) {
          var a3 = Co(r3.id), s3 = n3.get(a3);
          if (null != s3) {
            var l3 = t3[s3];
            st(!l3.newOption, 'Duplicated option on id "' + a3 + '".'), l3.newOption = r3, l3.existing = e3[s3], i3[o3] = null;
          }
        }
      });
    }(u2, t2, a2, e2), i2 && function(t3, e3) {
      N(e3, function(n3, i3) {
        if (n3 && null != n3.name)
          for (var r3 = 0; r3 < t3.length; r3++) {
            var o3 = t3[r3].existing;
            if (!t3[r3].newOption && o3 && (null == o3.id || null == n3.id) && !ko(n3) && !ko(o3) && To("name", o3, n3))
              return t3[r3].newOption = n3, void (e3[i3] = null);
          }
      });
    }(u2, e2), i2 || r2 ? function(t3, e3, n3) {
      N(e3, function(e4) {
        if (e4) {
          for (var i3, r3 = 0; (i3 = t3[r3]) && (i3.newOption || ko(i3.existing) || i3.existing && null != e4.id && !To("id", e4, i3.existing)); )
            r3++;
          i3 ? (i3.newOption = e4, i3.brandNew = n3) : t3.push({ newOption: e4, brandNew: n3, existing: null, keyInfo: null }), r3++;
        }
      });
    }(u2, e2, r2) : o2 && function(t3, e3) {
      N(e3, function(e4) {
        t3.push({ newOption: e4, brandNew: true, existing: null, keyInfo: null });
      });
    }(u2, e2), s2 = u2, l2 = gt(), N(s2, function(t3) {
      var e3 = t3.existing;
      e3 && l2.set(e3.id, t3);
    }), N(s2, function(t3) {
      var e3 = t3.newOption;
      st(!e3 || null == e3.id || !l2.get(e3.id) || l2.get(e3.id) === t3, "id duplicates: " + (e3 && e3.id)), e3 && null != e3.id && l2.set(e3.id, t3), !t3.keyInfo && (t3.keyInfo = {});
    }), N(s2, function(t3, e3) {
      var n3 = t3.existing, i3 = t3.newOption, r3 = t3.keyInfo;
      if (j(i3)) {
        if (r3.name = null != i3.name ? Co(i3.name) : n3 ? n3.name : mo + e3, n3)
          r3.id = Co(n3.id);
        else if (null != i3.id)
          r3.id = Co(i3.id);
        else {
          var o3 = 0;
          do {
            r3.id = "\0" + r3.name + "\0" + o3++;
          } while (l2.get(r3.id));
        }
        l2.set(r3.id, t3);
      }
    }), u2;
  }
  function To(t2, e2, n2) {
    var i2 = Do(e2[t2], null), r2 = Do(n2[t2], null);
    return null != i2 && null != r2 && i2 === r2;
  }
  function Co(t2) {
    return Do(t2, "");
  }
  function Do(t2, e2) {
    return null == t2 ? e2 : X(t2) ? t2 : Z(t2) || U(t2) ? t2 + "" : e2;
  }
  function Ao(t2) {
    var e2 = t2.name;
    return !(!e2 || !e2.indexOf(mo));
  }
  function ko(t2) {
    return t2 && null != t2.id && 0 === Co(t2.id).indexOf(xo);
  }
  function Lo(t2, e2) {
    return null != e2.dataIndexInside ? e2.dataIndexInside : null != e2.dataIndex ? H(e2.dataIndex) ? E(e2.dataIndex, function(e3) {
      return t2.indexOfRawIndex(e3);
    }) : t2.indexOfRawIndex(e2.dataIndex) : null != e2.name ? H(e2.name) ? E(e2.name, function(e3) {
      return t2.indexOfName(e3);
    }) : t2.indexOfName(e2.name) : void 0;
  }
  function Po() {
    var t2 = "__ec_inner_" + Oo++;
    return function(e2) {
      return e2[t2] || (e2[t2] = {});
    };
  }
  var Oo = co();
  function Ro(t2, e2, n2) {
    var i2 = No(e2, n2), r2 = i2.mainTypeSpecified, o2 = i2.queryOptionMap, a2 = i2.others, s2 = n2 ? n2.defaultMainType : null;
    return !r2 && s2 && o2.set(s2, {}), o2.each(function(e3, i3) {
      var r3 = Vo(t2, i3, e3, { useDefault: s2 === i3, enableAll: !n2 || null == n2.enableAll || n2.enableAll, enableNone: !n2 || null == n2.enableNone || n2.enableNone });
      a2[i3 + "Models"] = r3.models, a2[i3 + "Model"] = r3.models[0];
    }), a2;
  }
  function No(t2, e2) {
    var n2;
    if (X(t2)) {
      var i2 = {};
      i2[t2 + "Index"] = 0, n2 = i2;
    } else
      n2 = t2;
    var r2 = gt(), o2 = {}, a2 = false;
    return N(n2, function(t3, n3) {
      if ("dataIndex" !== n3 && "dataIndexInside" !== n3) {
        var i3 = n3.match(/^(\w+)(Index|Id|Name)$/) || [], s2 = i3[1], l2 = (i3[2] || "").toLowerCase();
        if (s2 && l2 && !(e2 && e2.includeMainTypes && L(e2.includeMainTypes, s2) < 0))
          a2 = a2 || !!s2, (r2.get(s2) || r2.set(s2, {}))[l2] = t3;
      } else
        o2[n3] = t3;
    }), { mainTypeSpecified: a2, queryOptionMap: r2, others: o2 };
  }
  var Eo = { useDefault: true, enableAll: false, enableNone: false };
  var zo = { useDefault: false, enableAll: true, enableNone: true };
  function Vo(t2, e2, n2, i2) {
    i2 = i2 || Eo;
    var r2 = n2.index, o2 = n2.id, a2 = n2.name, s2 = { models: null, specified: null != r2 || null != o2 || null != a2 };
    if (!s2.specified) {
      var l2 = void 0;
      return s2.models = i2.useDefault && (l2 = t2.getComponent(e2)) ? [l2] : [], s2;
    }
    return "none" === r2 || false === r2 ? (st(i2.enableNone, '`"none"` or `false` is not a valid value on index option.'), s2.models = [], s2) : ("all" === r2 && (st(i2.enableAll, '`"all"` is not a valid value on index option.'), r2 = o2 = a2 = null), s2.models = t2.queryComponents({ mainType: e2, index: r2, id: o2, name: a2 }), s2);
  }
  function Bo(t2, e2, n2) {
    t2.setAttribute ? t2.setAttribute(e2, n2) : t2[e2] = n2;
  }
  function Fo(t2, e2) {
    var n2 = gt(), i2 = [];
    return N(t2, function(t3) {
      var r2 = e2(t3);
      (n2.get(r2) || (i2.push(r2), n2.set(r2, []))).push(t3);
    }), { keys: i2, buckets: n2 };
  }
  function Go(t2, e2, n2, i2, r2) {
    var o2 = null == e2 || "auto" === e2;
    if (null == i2)
      return i2;
    if (Z(i2))
      return Ur(f2 = vo(n2 || 0, i2, r2), o2 ? Math.max(jr(n2 || 0), jr(i2)) : e2);
    if (X(i2))
      return r2 < 1 ? n2 : i2;
    for (var a2 = [], s2 = n2, l2 = i2, u2 = Math.max(s2 ? s2.length : 0, l2.length), h2 = 0; h2 < u2; ++h2) {
      var c2 = t2.getDimensionInfo(h2);
      if (c2 && "ordinal" === c2.type)
        a2[h2] = (r2 < 1 && s2 ? s2 : l2)[h2];
      else {
        var p2 = s2 && s2[h2] ? s2[h2] : 0, d2 = l2[h2], f2 = vo(p2, d2, r2);
        a2[h2] = Ur(f2, o2 ? Math.max(jr(p2), jr(d2)) : e2);
      }
    }
    return a2;
  }
  var Wo = "___EC__COMPONENT__CONTAINER___";
  var Ho = "___EC__EXTENDED_CLASS___";
  function Yo(t2) {
    var e2 = { main: "", sub: "" };
    if (t2) {
      var n2 = t2.split(".");
      e2.main = n2[0] || "", e2.sub = n2[1] || "";
    }
    return e2;
  }
  function Xo(t2, n2) {
    t2.$constructor = t2, t2.extend = function(t3) {
      var n3, i2, r2 = this;
      return Y(i2 = r2) && /^class\s/.test(Function.prototype.toString.call(i2)) ? n3 = function(t4) {
        function n4() {
          return t4.apply(this, arguments) || this;
        }
        return e(n4, t4), n4;
      }(r2) : (n3 = function() {
        (t3.$constructor || r2).apply(this, arguments);
      }, P(n3, this)), D(n3.prototype, t3), n3[Ho] = true, n3.extend = this.extend, n3.superCall = jo, n3.superApply = qo, n3.superClass = r2, n3;
    };
  }
  function Uo(t2, e2) {
    t2.extend = e2.extend;
  }
  var Zo = Math.round(10 * Math.random());
  function jo(t2, e2) {
    for (var n2 = [], i2 = 2; i2 < arguments.length; i2++)
      n2[i2 - 2] = arguments[i2];
    return this.superClass.prototype[e2].apply(t2, n2);
  }
  function qo(t2, e2, n2) {
    return this.superClass.prototype[e2].apply(t2, n2);
  }
  function Ko(t2) {
    var e2 = {};
    t2.registerClass = function(t3) {
      var n2, i2 = t3.type || t3.prototype.type;
      if (i2) {
        st(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(n2 = i2), 'componentType "' + n2 + '" illegal'), t3.prototype.type = i2;
        var r2 = Yo(i2);
        if (r2.sub) {
          if (r2.sub !== Wo) {
            var o2 = function(t4) {
              var n3 = e2[t4.main];
              n3 && n3[Wo] || ((n3 = e2[t4.main] = {})[Wo] = true);
              return n3;
            }(r2);
            o2[r2.sub] = t3;
          }
        } else
          e2[r2.main] = t3;
      }
      return t3;
    }, t2.getClass = function(t3, n2, i2) {
      var r2 = e2[t3];
      if (r2 && r2[Wo] && (r2 = n2 ? r2[n2] : null), i2 && !r2)
        throw new Error(n2 ? "Component " + t3 + "." + (n2 || "") + " is used but not imported." : t3 + ".type should be specified.");
      return r2;
    }, t2.getClassesByMainType = function(t3) {
      var n2 = Yo(t3), i2 = [], r2 = e2[n2.main];
      return r2 && r2[Wo] ? N(r2, function(t4, e3) {
        e3 !== Wo && i2.push(t4);
      }) : i2.push(r2), i2;
    }, t2.hasClass = function(t3) {
      var n2 = Yo(t3);
      return !!e2[n2.main];
    }, t2.getAllClassMainTypes = function() {
      var t3 = [];
      return N(e2, function(e3, n2) {
        t3.push(n2);
      }), t3;
    }, t2.hasSubTypes = function(t3) {
      var n2 = Yo(t3), i2 = e2[n2.main];
      return i2 && i2[Wo];
    };
  }
  function $o(t2, e2) {
    for (var n2 = 0; n2 < t2.length; n2++)
      t2[n2][1] || (t2[n2][1] = t2[n2][0]);
    return e2 = e2 || false, function(n3, i2, r2) {
      for (var o2 = {}, a2 = 0; a2 < t2.length; a2++) {
        var s2 = t2[a2][1];
        if (!(i2 && L(i2, s2) >= 0 || r2 && L(r2, s2) < 0)) {
          var l2 = n3.getShallow(s2, e2);
          null != l2 && (o2[t2[a2][0]] = l2);
        }
      }
      return o2;
    };
  }
  var Jo = $o([["fill", "color"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["opacity"], ["shadowColor"]]);
  var Qo = function() {
    function t2() {
    }
    return t2.prototype.getAreaStyle = function(t3, e2) {
      return Jo(this, t3, e2);
    }, t2;
  }();
  var ta = new Nn(50);
  function ea(t2) {
    if ("string" == typeof t2) {
      var e2 = ta.get(t2);
      return e2 && e2.image;
    }
    return t2;
  }
  function na(t2, e2, n2, i2, r2) {
    if (t2) {
      if ("string" == typeof t2) {
        if (e2 && e2.__zrImageSrc === t2 || !n2)
          return e2;
        var o2 = ta.get(t2), a2 = { hostEl: n2, cb: i2, cbPayload: r2 };
        return o2 ? !ra(e2 = o2.image) && o2.pending.push(a2) : ((e2 = u.loadImage(t2, ia, ia)).__zrImageSrc = t2, ta.put(t2, e2.__cachedImgObj = { image: e2, pending: [a2] })), e2;
      }
      return t2;
    }
    return e2;
  }
  function ia() {
    var t2 = this.__cachedImgObj;
    this.onload = this.onerror = this.__cachedImgObj = null;
    for (var e2 = 0; e2 < t2.pending.length; e2++) {
      var n2 = t2.pending[e2], i2 = n2.cb;
      i2 && i2(this, n2.cbPayload), n2.hostEl.dirty();
    }
    t2.pending.length = 0;
  }
  function ra(t2) {
    return t2 && t2.width && t2.height;
  }
  var oa = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
  function aa(t2, e2, n2, i2, r2) {
    if (!e2)
      return "";
    var o2 = (t2 + "").split("\n");
    r2 = sa(e2, n2, i2, r2);
    for (var a2 = 0, s2 = o2.length; a2 < s2; a2++)
      o2[a2] = la(o2[a2], r2);
    return o2.join("\n");
  }
  function sa(t2, e2, n2, i2) {
    var r2 = D({}, i2 = i2 || {});
    r2.font = e2, n2 = it(n2, "..."), r2.maxIterations = it(i2.maxIterations, 2);
    var o2 = r2.minChar = it(i2.minChar, 0);
    r2.cnCharWidth = mr("\u56FD", e2);
    var a2 = r2.ascCharWidth = mr("a", e2);
    r2.placeholder = it(i2.placeholder, "");
    for (var s2 = t2 = Math.max(0, t2 - 1), l2 = 0; l2 < o2 && s2 >= a2; l2++)
      s2 -= a2;
    var u2 = mr(n2, e2);
    return u2 > s2 && (n2 = "", u2 = 0), s2 = t2 - u2, r2.ellipsis = n2, r2.ellipsisWidth = u2, r2.contentWidth = s2, r2.containerWidth = t2, r2;
  }
  function la(t2, e2) {
    var n2 = e2.containerWidth, i2 = e2.font, r2 = e2.contentWidth;
    if (!n2)
      return "";
    var o2 = mr(t2, i2);
    if (o2 <= n2)
      return t2;
    for (var a2 = 0; ; a2++) {
      if (o2 <= r2 || a2 >= e2.maxIterations) {
        t2 += e2.ellipsis;
        break;
      }
      var s2 = 0 === a2 ? ua(t2, r2, e2.ascCharWidth, e2.cnCharWidth) : o2 > 0 ? Math.floor(t2.length * r2 / o2) : 0;
      o2 = mr(t2 = t2.substr(0, s2), i2);
    }
    return "" === t2 && (t2 = e2.placeholder), t2;
  }
  function ua(t2, e2, n2, i2) {
    for (var r2 = 0, o2 = 0, a2 = t2.length; o2 < a2 && r2 < e2; o2++) {
      var s2 = t2.charCodeAt(o2);
      r2 += 0 <= s2 && s2 <= 127 ? n2 : i2;
    }
    return o2;
  }
  var ha = function() {
  };
  var ca = function(t2) {
    this.tokens = [], t2 && (this.tokens = t2);
  };
  var pa = function() {
    this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [];
  };
  function da(t2, e2, n2, i2, r2) {
    var o2, a2, s2 = "" === e2, l2 = r2 && n2.rich[r2] || {}, u2 = t2.lines, h2 = l2.font || n2.font, c2 = false;
    if (i2) {
      var p2 = l2.padding, d2 = p2 ? p2[1] + p2[3] : 0;
      if (null != l2.width && "auto" !== l2.width) {
        var f2 = Mr(l2.width, i2.width) + d2;
        u2.length > 0 && f2 + i2.accumWidth > i2.width && (o2 = e2.split("\n"), c2 = true), i2.accumWidth = f2;
      } else {
        var g2 = ya(e2, h2, i2.width, i2.breakAll, i2.accumWidth);
        i2.accumWidth = g2.accumWidth + d2, a2 = g2.linesWidths, o2 = g2.lines;
      }
    } else
      o2 = e2.split("\n");
    for (var y2 = 0; y2 < o2.length; y2++) {
      var v2 = o2[y2], m2 = new ha();
      if (m2.styleName = r2, m2.text = v2, m2.isLineHolder = !v2 && !s2, "number" == typeof l2.width ? m2.width = l2.width : m2.width = a2 ? a2[y2] : mr(v2, h2), y2 || c2)
        u2.push(new ca([m2]));
      else {
        var x2 = (u2[u2.length - 1] || (u2[0] = new ca())).tokens, _2 = x2.length;
        1 === _2 && x2[0].isLineHolder ? x2[0] = m2 : (v2 || !_2 || s2) && x2.push(m2);
      }
    }
  }
  var fa = z(",&?/;] ".split(""), function(t2, e2) {
    return t2[e2] = true, t2;
  }, {});
  function ga(t2) {
    return !function(t3) {
      var e2 = t3.charCodeAt(0);
      return e2 >= 32 && e2 <= 591 || e2 >= 880 && e2 <= 4351 || e2 >= 4608 && e2 <= 5119 || e2 >= 7680 && e2 <= 8303;
    }(t2) || !!fa[t2];
  }
  function ya(t2, e2, n2, i2, r2) {
    for (var o2 = [], a2 = [], s2 = "", l2 = "", u2 = 0, h2 = 0, c2 = 0; c2 < t2.length; c2++) {
      var p2 = t2.charAt(c2);
      if ("\n" !== p2) {
        var d2 = mr(p2, e2), f2 = !i2 && !ga(p2);
        (o2.length ? h2 + d2 > n2 : r2 + h2 + d2 > n2) ? h2 ? (s2 || l2) && (f2 ? (s2 || (s2 = l2, l2 = "", h2 = u2 = 0), o2.push(s2), a2.push(h2 - u2), l2 += p2, s2 = "", h2 = u2 += d2) : (l2 && (s2 += l2, l2 = "", u2 = 0), o2.push(s2), a2.push(h2), s2 = p2, h2 = d2)) : f2 ? (o2.push(l2), a2.push(u2), l2 = p2, u2 = d2) : (o2.push(p2), a2.push(d2)) : (h2 += d2, f2 ? (l2 += p2, u2 += d2) : (l2 && (s2 += l2, l2 = "", u2 = 0), s2 += p2));
      } else
        l2 && (s2 += l2, h2 += u2), o2.push(s2), a2.push(h2), s2 = "", l2 = "", u2 = 0, h2 = 0;
    }
    return o2.length || s2 || (s2 = t2, l2 = "", u2 = 0), l2 && (s2 += l2), s2 && (o2.push(s2), a2.push(h2)), 1 === o2.length && (h2 += r2), { accumWidth: h2, lines: o2, linesWidths: a2 };
  }
  var va = "__zr_style_" + Math.round(10 * Math.random());
  var ma = { shadowBlur: 0, shadowOffsetX: 0, shadowOffsetY: 0, shadowColor: "#000", opacity: 1, blend: "source-over" };
  var xa = { style: { shadowBlur: true, shadowOffsetX: true, shadowOffsetY: true, shadowColor: true, opacity: true } };
  ma[va] = true;
  var _a = ["z", "z2", "invisible"];
  var ba = ["invisible"];
  var wa = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    var i2;
    return e(n2, t2), n2.prototype._init = function(e2) {
      for (var n3 = F(e2), i3 = 0; i3 < n3.length; i3++) {
        var r2 = n3[i3];
        "style" === r2 ? this.useStyle(e2[r2]) : t2.prototype.attrKV.call(this, r2, e2[r2]);
      }
      this.style || this.useStyle({});
    }, n2.prototype.beforeBrush = function() {
    }, n2.prototype.afterBrush = function() {
    }, n2.prototype.innerBeforeBrush = function() {
    }, n2.prototype.innerAfterBrush = function() {
    }, n2.prototype.shouldBePainted = function(t3, e2, n3, i3) {
      var r2 = this.transform;
      if (this.ignore || this.invisible || 0 === this.style.opacity || this.culling && function(t4, e3, n4) {
        Sa.copy(t4.getBoundingRect()), t4.transform && Sa.applyTransform(t4.transform);
        return Ma.width = e3, Ma.height = n4, !Sa.intersect(Ma);
      }(this, t3, e2) || r2 && !r2[0] && !r2[3])
        return false;
      if (n3 && this.__clipPaths) {
        for (var o2 = 0; o2 < this.__clipPaths.length; ++o2)
          if (this.__clipPaths[o2].isZeroArea())
            return false;
      }
      if (i3 && this.parent)
        for (var a2 = this.parent; a2; ) {
          if (a2.ignore)
            return false;
          a2 = a2.parent;
        }
      return true;
    }, n2.prototype.contain = function(t3, e2) {
      return this.rectContain(t3, e2);
    }, n2.prototype.traverse = function(t3, e2) {
      t3.call(e2, this);
    }, n2.prototype.rectContain = function(t3, e2) {
      var n3 = this.transformCoordToLocal(t3, e2);
      return this.getBoundingRect().contain(n3[0], n3[1]);
    }, n2.prototype.getPaintRect = function() {
      var t3 = this._paintRect;
      if (!this._paintRect || this.__dirty) {
        var e2 = this.transform, n3 = this.getBoundingRect(), i3 = this.style, r2 = i3.shadowBlur || 0, o2 = i3.shadowOffsetX || 0, a2 = i3.shadowOffsetY || 0;
        t3 = this._paintRect || (this._paintRect = new Ee(0, 0, 0, 0)), e2 ? Ee.applyTransform(t3, n3, e2) : t3.copy(n3), (r2 || o2 || a2) && (t3.width += 2 * r2 + Math.abs(o2), t3.height += 2 * r2 + Math.abs(a2), t3.x = Math.min(t3.x, t3.x + o2 - r2), t3.y = Math.min(t3.y, t3.y + a2 - r2));
        var s2 = this.dirtyRectTolerance;
        t3.isZero() || (t3.x = Math.floor(t3.x - s2), t3.y = Math.floor(t3.y - s2), t3.width = Math.ceil(t3.width + 1 + 2 * s2), t3.height = Math.ceil(t3.height + 1 + 2 * s2));
      }
      return t3;
    }, n2.prototype.setPrevPaintRect = function(t3) {
      t3 ? (this._prevPaintRect = this._prevPaintRect || new Ee(0, 0, 0, 0), this._prevPaintRect.copy(t3)) : this._prevPaintRect = null;
    }, n2.prototype.getPrevPaintRect = function() {
      return this._prevPaintRect;
    }, n2.prototype.animateStyle = function(t3) {
      return this.animate("style", t3);
    }, n2.prototype.updateDuringAnimation = function(t3) {
      "style" === t3 ? this.dirtyStyle() : this.markRedraw();
    }, n2.prototype.attrKV = function(e2, n3) {
      "style" !== e2 ? t2.prototype.attrKV.call(this, e2, n3) : this.style ? this.setStyle(n3) : this.useStyle(n3);
    }, n2.prototype.setStyle = function(t3, e2) {
      return "string" == typeof t3 ? this.style[t3] = e2 : D(this.style, t3), this.dirtyStyle(), this;
    }, n2.prototype.dirtyStyle = function(t3) {
      t3 || this.markRedraw(), this.__dirty |= 2, this._rect && (this._rect = null);
    }, n2.prototype.dirty = function() {
      this.dirtyStyle();
    }, n2.prototype.styleChanged = function() {
      return !!(2 & this.__dirty);
    }, n2.prototype.styleUpdated = function() {
      this.__dirty &= -3;
    }, n2.prototype.createStyle = function(t3) {
      return vt(ma, t3);
    }, n2.prototype.useStyle = function(t3) {
      t3[va] || (t3 = this.createStyle(t3)), this.__inHover ? this.__hoverStyle = t3 : this.style = t3, this.dirtyStyle();
    }, n2.prototype.isStyleObject = function(t3) {
      return t3[va];
    }, n2.prototype._innerSaveToNormal = function(e2) {
      t2.prototype._innerSaveToNormal.call(this, e2);
      var n3 = this._normalState;
      e2.style && !n3.style && (n3.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(e2, n3, _a);
    }, n2.prototype._applyStateObj = function(e2, n3, i3, r2, o2, a2) {
      t2.prototype._applyStateObj.call(this, e2, n3, i3, r2, o2, a2);
      var s2, l2 = !(n3 && r2);
      if (n3 && n3.style ? o2 ? r2 ? s2 = n3.style : (s2 = this._mergeStyle(this.createStyle(), i3.style), this._mergeStyle(s2, n3.style)) : (s2 = this._mergeStyle(this.createStyle(), r2 ? this.style : i3.style), this._mergeStyle(s2, n3.style)) : l2 && (s2 = i3.style), s2)
        if (o2) {
          var u2 = this.style;
          if (this.style = this.createStyle(l2 ? {} : u2), l2)
            for (var h2 = F(u2), c2 = 0; c2 < h2.length; c2++) {
              (d2 = h2[c2]) in s2 && (s2[d2] = s2[d2], this.style[d2] = u2[d2]);
            }
          var p2 = F(s2);
          for (c2 = 0; c2 < p2.length; c2++) {
            var d2 = p2[c2];
            this.style[d2] = this.style[d2];
          }
          this._transitionState(e2, { style: s2 }, a2, this.getAnimationStyleProps());
        } else
          this.useStyle(s2);
      var f2 = this.__inHover ? ba : _a;
      for (c2 = 0; c2 < f2.length; c2++) {
        d2 = f2[c2];
        n3 && null != n3[d2] ? this[d2] = n3[d2] : l2 && null != i3[d2] && (this[d2] = i3[d2]);
      }
    }, n2.prototype._mergeStates = function(e2) {
      for (var n3, i3 = t2.prototype._mergeStates.call(this, e2), r2 = 0; r2 < e2.length; r2++) {
        var o2 = e2[r2];
        o2.style && (n3 = n3 || {}, this._mergeStyle(n3, o2.style));
      }
      return n3 && (i3.style = n3), i3;
    }, n2.prototype._mergeStyle = function(t3, e2) {
      return D(t3, e2), t3;
    }, n2.prototype.getAnimationStyleProps = function() {
      return xa;
    }, n2.initDefaultProps = ((i2 = n2.prototype).type = "displayable", i2.invisible = false, i2.z = 0, i2.z2 = 0, i2.zlevel = 0, i2.culling = false, i2.cursor = "pointer", i2.rectHover = false, i2.incremental = false, i2._rect = null, i2.dirtyRectTolerance = 0, void (i2.__dirty = 3)), n2;
  }(Lr);
  var Sa = new Ee(0, 0, 0, 0);
  var Ma = new Ee(0, 0, 0, 0);
  var Ia = Math.min;
  var Ta = Math.max;
  var Ca = Math.sin;
  var Da = Math.cos;
  var Aa = 2 * Math.PI;
  var ka = St();
  var La = St();
  var Pa = St();
  function Oa(t2, e2, n2) {
    if (0 !== t2.length) {
      for (var i2 = t2[0], r2 = i2[0], o2 = i2[0], a2 = i2[1], s2 = i2[1], l2 = 1; l2 < t2.length; l2++)
        i2 = t2[l2], r2 = Ia(r2, i2[0]), o2 = Ta(o2, i2[0]), a2 = Ia(a2, i2[1]), s2 = Ta(s2, i2[1]);
      e2[0] = r2, e2[1] = a2, n2[0] = o2, n2[1] = s2;
    }
  }
  function Ra(t2, e2, n2, i2, r2, o2) {
    r2[0] = Ia(t2, n2), r2[1] = Ia(e2, i2), o2[0] = Ta(t2, n2), o2[1] = Ta(e2, i2);
  }
  var Na = [];
  var Ea = [];
  function za(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2) {
    var h2 = _n, c2 = vn, p2 = h2(t2, n2, r2, a2, Na);
    l2[0] = 1 / 0, l2[1] = 1 / 0, u2[0] = -1 / 0, u2[1] = -1 / 0;
    for (var d2 = 0; d2 < p2; d2++) {
      var f2 = c2(t2, n2, r2, a2, Na[d2]);
      l2[0] = Ia(f2, l2[0]), u2[0] = Ta(f2, u2[0]);
    }
    p2 = h2(e2, i2, o2, s2, Ea);
    for (d2 = 0; d2 < p2; d2++) {
      var g2 = c2(e2, i2, o2, s2, Ea[d2]);
      l2[1] = Ia(g2, l2[1]), u2[1] = Ta(g2, u2[1]);
    }
    l2[0] = Ia(t2, l2[0]), u2[0] = Ta(t2, u2[0]), l2[0] = Ia(a2, l2[0]), u2[0] = Ta(a2, u2[0]), l2[1] = Ia(e2, l2[1]), u2[1] = Ta(e2, u2[1]), l2[1] = Ia(s2, l2[1]), u2[1] = Ta(s2, u2[1]);
  }
  function Va(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2 = Tn, u2 = Mn, h2 = Ta(Ia(l2(t2, n2, r2), 1), 0), c2 = Ta(Ia(l2(e2, i2, o2), 1), 0), p2 = u2(t2, n2, r2, h2), d2 = u2(e2, i2, o2, c2);
    a2[0] = Ia(t2, r2, p2), a2[1] = Ia(e2, o2, d2), s2[0] = Ta(t2, r2, p2), s2[1] = Ta(e2, o2, d2);
  }
  function Ba(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    var u2 = Wt, h2 = Ht, c2 = Math.abs(r2 - o2);
    if (c2 % Aa < 1e-4 && c2 > 1e-4)
      return s2[0] = t2 - n2, s2[1] = e2 - i2, l2[0] = t2 + n2, void (l2[1] = e2 + i2);
    if (ka[0] = Da(r2) * n2 + t2, ka[1] = Ca(r2) * i2 + e2, La[0] = Da(o2) * n2 + t2, La[1] = Ca(o2) * i2 + e2, u2(s2, ka, La), h2(l2, ka, La), (r2 %= Aa) < 0 && (r2 += Aa), (o2 %= Aa) < 0 && (o2 += Aa), r2 > o2 && !a2 ? o2 += Aa : r2 < o2 && a2 && (r2 += Aa), a2) {
      var p2 = o2;
      o2 = r2, r2 = p2;
    }
    for (var d2 = 0; d2 < o2; d2 += Math.PI / 2)
      d2 > r2 && (Pa[0] = Da(d2) * n2 + t2, Pa[1] = Ca(d2) * i2 + e2, u2(s2, Pa, s2), h2(l2, Pa, l2));
  }
  var Fa = { M: 1, L: 2, C: 3, Q: 4, A: 5, Z: 6, R: 7 };
  var Ga = [];
  var Wa = [];
  var Ha = [];
  var Ya = [];
  var Xa = [];
  var Ua = [];
  var Za = Math.min;
  var ja = Math.max;
  var qa = Math.cos;
  var Ka = Math.sin;
  var $a = Math.abs;
  var Ja = Math.PI;
  var Qa = 2 * Ja;
  var ts = "undefined" != typeof Float32Array;
  var es = [];
  function ns(t2) {
    return Math.round(t2 / Ja * 1e8) / 1e8 % 2 * Ja;
  }
  function is(t2, e2) {
    var n2 = ns(t2[0]);
    n2 < 0 && (n2 += Qa);
    var i2 = n2 - t2[0], r2 = t2[1];
    r2 += i2, !e2 && r2 - n2 >= Qa ? r2 = n2 + Qa : e2 && n2 - r2 >= Qa ? r2 = n2 - Qa : !e2 && n2 > r2 ? r2 = n2 + (Qa - ns(n2 - r2)) : e2 && n2 < r2 && (r2 = n2 - (Qa - ns(r2 - n2))), t2[0] = n2, t2[1] = r2;
  }
  var rs = function() {
    function t2(t3) {
      this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, t3 && (this._saveData = false), this._saveData && (this.data = []);
    }
    return t2.prototype.increaseVersion = function() {
      this._version++;
    }, t2.prototype.getVersion = function() {
      return this._version;
    }, t2.prototype.setScale = function(t3, e2, n2) {
      (n2 = n2 || 0) > 0 && (this._ux = $a(n2 / rr / t3) || 0, this._uy = $a(n2 / rr / e2) || 0);
    }, t2.prototype.setDPR = function(t3) {
      this.dpr = t3;
    }, t2.prototype.setContext = function(t3) {
      this._ctx = t3;
    }, t2.prototype.getContext = function() {
      return this._ctx;
    }, t2.prototype.beginPath = function() {
      return this._ctx && this._ctx.beginPath(), this.reset(), this;
    }, t2.prototype.reset = function() {
      this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
    }, t2.prototype.moveTo = function(t3, e2) {
      return this._drawPendingPt(), this.addData(Fa.M, t3, e2), this._ctx && this._ctx.moveTo(t3, e2), this._x0 = t3, this._y0 = e2, this._xi = t3, this._yi = e2, this;
    }, t2.prototype.lineTo = function(t3, e2) {
      var n2 = $a(t3 - this._xi), i2 = $a(e2 - this._yi), r2 = n2 > this._ux || i2 > this._uy;
      if (this.addData(Fa.L, t3, e2), this._ctx && r2 && this._ctx.lineTo(t3, e2), r2)
        this._xi = t3, this._yi = e2, this._pendingPtDist = 0;
      else {
        var o2 = n2 * n2 + i2 * i2;
        o2 > this._pendingPtDist && (this._pendingPtX = t3, this._pendingPtY = e2, this._pendingPtDist = o2);
      }
      return this;
    }, t2.prototype.bezierCurveTo = function(t3, e2, n2, i2, r2, o2) {
      return this._drawPendingPt(), this.addData(Fa.C, t3, e2, n2, i2, r2, o2), this._ctx && this._ctx.bezierCurveTo(t3, e2, n2, i2, r2, o2), this._xi = r2, this._yi = o2, this;
    }, t2.prototype.quadraticCurveTo = function(t3, e2, n2, i2) {
      return this._drawPendingPt(), this.addData(Fa.Q, t3, e2, n2, i2), this._ctx && this._ctx.quadraticCurveTo(t3, e2, n2, i2), this._xi = n2, this._yi = i2, this;
    }, t2.prototype.arc = function(t3, e2, n2, i2, r2, o2) {
      this._drawPendingPt(), es[0] = i2, es[1] = r2, is(es, o2), i2 = es[0];
      var a2 = (r2 = es[1]) - i2;
      return this.addData(Fa.A, t3, e2, n2, n2, i2, a2, 0, o2 ? 0 : 1), this._ctx && this._ctx.arc(t3, e2, n2, i2, r2, o2), this._xi = qa(r2) * n2 + t3, this._yi = Ka(r2) * n2 + e2, this;
    }, t2.prototype.arcTo = function(t3, e2, n2, i2, r2) {
      return this._drawPendingPt(), this._ctx && this._ctx.arcTo(t3, e2, n2, i2, r2), this;
    }, t2.prototype.rect = function(t3, e2, n2, i2) {
      return this._drawPendingPt(), this._ctx && this._ctx.rect(t3, e2, n2, i2), this.addData(Fa.R, t3, e2, n2, i2), this;
    }, t2.prototype.closePath = function() {
      this._drawPendingPt(), this.addData(Fa.Z);
      var t3 = this._ctx, e2 = this._x0, n2 = this._y0;
      return t3 && t3.closePath(), this._xi = e2, this._yi = n2, this;
    }, t2.prototype.fill = function(t3) {
      t3 && t3.fill(), this.toStatic();
    }, t2.prototype.stroke = function(t3) {
      t3 && t3.stroke(), this.toStatic();
    }, t2.prototype.len = function() {
      return this._len;
    }, t2.prototype.setData = function(t3) {
      var e2 = t3.length;
      this.data && this.data.length === e2 || !ts || (this.data = new Float32Array(e2));
      for (var n2 = 0; n2 < e2; n2++)
        this.data[n2] = t3[n2];
      this._len = e2;
    }, t2.prototype.appendPath = function(t3) {
      t3 instanceof Array || (t3 = [t3]);
      for (var e2 = t3.length, n2 = 0, i2 = this._len, r2 = 0; r2 < e2; r2++)
        n2 += t3[r2].len();
      ts && this.data instanceof Float32Array && (this.data = new Float32Array(i2 + n2));
      for (r2 = 0; r2 < e2; r2++)
        for (var o2 = t3[r2].data, a2 = 0; a2 < o2.length; a2++)
          this.data[i2++] = o2[a2];
      this._len = i2;
    }, t2.prototype.addData = function(t3, e2, n2, i2, r2, o2, a2, s2, l2) {
      if (this._saveData) {
        var u2 = this.data;
        this._len + arguments.length > u2.length && (this._expandData(), u2 = this.data);
        for (var h2 = 0; h2 < arguments.length; h2++)
          u2[this._len++] = arguments[h2];
      }
    }, t2.prototype._drawPendingPt = function() {
      this._pendingPtDist > 0 && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
    }, t2.prototype._expandData = function() {
      if (!(this.data instanceof Array)) {
        for (var t3 = [], e2 = 0; e2 < this._len; e2++)
          t3[e2] = this.data[e2];
        this.data = t3;
      }
    }, t2.prototype.toStatic = function() {
      if (this._saveData) {
        this._drawPendingPt();
        var t3 = this.data;
        t3 instanceof Array && (t3.length = this._len, ts && this._len > 11 && (this.data = new Float32Array(t3)));
      }
    }, t2.prototype.getBoundingRect = function() {
      Ha[0] = Ha[1] = Xa[0] = Xa[1] = Number.MAX_VALUE, Ya[0] = Ya[1] = Ua[0] = Ua[1] = -Number.MAX_VALUE;
      var t3, e2 = this.data, n2 = 0, i2 = 0, r2 = 0, o2 = 0;
      for (t3 = 0; t3 < this._len; ) {
        var a2 = e2[t3++], s2 = 1 === t3;
        switch (s2 && (r2 = n2 = e2[t3], o2 = i2 = e2[t3 + 1]), a2) {
          case Fa.M:
            n2 = r2 = e2[t3++], i2 = o2 = e2[t3++], Xa[0] = r2, Xa[1] = o2, Ua[0] = r2, Ua[1] = o2;
            break;
          case Fa.L:
            Ra(n2, i2, e2[t3], e2[t3 + 1], Xa, Ua), n2 = e2[t3++], i2 = e2[t3++];
            break;
          case Fa.C:
            za(n2, i2, e2[t3++], e2[t3++], e2[t3++], e2[t3++], e2[t3], e2[t3 + 1], Xa, Ua), n2 = e2[t3++], i2 = e2[t3++];
            break;
          case Fa.Q:
            Va(n2, i2, e2[t3++], e2[t3++], e2[t3], e2[t3 + 1], Xa, Ua), n2 = e2[t3++], i2 = e2[t3++];
            break;
          case Fa.A:
            var l2 = e2[t3++], u2 = e2[t3++], h2 = e2[t3++], c2 = e2[t3++], p2 = e2[t3++], d2 = e2[t3++] + p2;
            t3 += 1;
            var f2 = !e2[t3++];
            s2 && (r2 = qa(p2) * h2 + l2, o2 = Ka(p2) * c2 + u2), Ba(l2, u2, h2, c2, p2, d2, f2, Xa, Ua), n2 = qa(d2) * h2 + l2, i2 = Ka(d2) * c2 + u2;
            break;
          case Fa.R:
            Ra(r2 = n2 = e2[t3++], o2 = i2 = e2[t3++], r2 + e2[t3++], o2 + e2[t3++], Xa, Ua);
            break;
          case Fa.Z:
            n2 = r2, i2 = o2;
        }
        Wt(Ha, Ha, Xa), Ht(Ya, Ya, Ua);
      }
      return 0 === t3 && (Ha[0] = Ha[1] = Ya[0] = Ya[1] = 0), new Ee(Ha[0], Ha[1], Ya[0] - Ha[0], Ya[1] - Ha[1]);
    }, t2.prototype._calculateLength = function() {
      var t3 = this.data, e2 = this._len, n2 = this._ux, i2 = this._uy, r2 = 0, o2 = 0, a2 = 0, s2 = 0;
      this._pathSegLen || (this._pathSegLen = []);
      for (var l2 = this._pathSegLen, u2 = 0, h2 = 0, c2 = 0; c2 < e2; ) {
        var p2 = t3[c2++], d2 = 1 === c2;
        d2 && (a2 = r2 = t3[c2], s2 = o2 = t3[c2 + 1]);
        var f2 = -1;
        switch (p2) {
          case Fa.M:
            r2 = a2 = t3[c2++], o2 = s2 = t3[c2++];
            break;
          case Fa.L:
            var g2 = t3[c2++], y2 = (x2 = t3[c2++]) - o2;
            ($a(A2 = g2 - r2) > n2 || $a(y2) > i2 || c2 === e2 - 1) && (f2 = Math.sqrt(A2 * A2 + y2 * y2), r2 = g2, o2 = x2);
            break;
          case Fa.C:
            var v2 = t3[c2++], m2 = t3[c2++], x2 = (g2 = t3[c2++], t3[c2++]), _2 = t3[c2++], b2 = t3[c2++];
            f2 = Sn(r2, o2, v2, m2, g2, x2, _2, b2, 10), r2 = _2, o2 = b2;
            break;
          case Fa.Q:
            f2 = An(r2, o2, v2 = t3[c2++], m2 = t3[c2++], g2 = t3[c2++], x2 = t3[c2++], 10), r2 = g2, o2 = x2;
            break;
          case Fa.A:
            var w2 = t3[c2++], S2 = t3[c2++], M2 = t3[c2++], I2 = t3[c2++], T2 = t3[c2++], C2 = t3[c2++], D2 = C2 + T2;
            c2 += 1;
            t3[c2++];
            d2 && (a2 = qa(T2) * M2 + w2, s2 = Ka(T2) * I2 + S2), f2 = ja(M2, I2) * Za(Qa, Math.abs(C2)), r2 = qa(D2) * M2 + w2, o2 = Ka(D2) * I2 + S2;
            break;
          case Fa.R:
            a2 = r2 = t3[c2++], s2 = o2 = t3[c2++], f2 = 2 * t3[c2++] + 2 * t3[c2++];
            break;
          case Fa.Z:
            var A2 = a2 - r2;
            y2 = s2 - o2;
            f2 = Math.sqrt(A2 * A2 + y2 * y2), r2 = a2, o2 = s2;
        }
        f2 >= 0 && (l2[h2++] = f2, u2 += f2);
      }
      return this._pathLen = u2, u2;
    }, t2.prototype.rebuildPath = function(t3, e2) {
      var n2, i2, r2, o2, a2, s2, l2, u2, h2, c2, p2 = this.data, d2 = this._ux, f2 = this._uy, g2 = this._len, y2 = e2 < 1, v2 = 0, m2 = 0, x2 = 0;
      if (!y2 || (this._pathSegLen || this._calculateLength(), l2 = this._pathSegLen, u2 = e2 * this._pathLen))
        t:
          for (var _2 = 0; _2 < g2; ) {
            var b2 = p2[_2++], w2 = 1 === _2;
            switch (w2 && (n2 = r2 = p2[_2], i2 = o2 = p2[_2 + 1]), b2 !== Fa.L && x2 > 0 && (t3.lineTo(h2, c2), x2 = 0), b2) {
              case Fa.M:
                n2 = r2 = p2[_2++], i2 = o2 = p2[_2++], t3.moveTo(r2, o2);
                break;
              case Fa.L:
                a2 = p2[_2++], s2 = p2[_2++];
                var S2 = $a(a2 - r2), M2 = $a(s2 - o2);
                if (S2 > d2 || M2 > f2) {
                  if (y2) {
                    if (v2 + (j2 = l2[m2++]) > u2) {
                      var I2 = (u2 - v2) / j2;
                      t3.lineTo(r2 * (1 - I2) + a2 * I2, o2 * (1 - I2) + s2 * I2);
                      break t;
                    }
                    v2 += j2;
                  }
                  t3.lineTo(a2, s2), r2 = a2, o2 = s2, x2 = 0;
                } else {
                  var T2 = S2 * S2 + M2 * M2;
                  T2 > x2 && (h2 = a2, c2 = s2, x2 = T2);
                }
                break;
              case Fa.C:
                var C2 = p2[_2++], D2 = p2[_2++], A2 = p2[_2++], k2 = p2[_2++], L2 = p2[_2++], P2 = p2[_2++];
                if (y2) {
                  if (v2 + (j2 = l2[m2++]) > u2) {
                    bn(r2, C2, A2, L2, I2 = (u2 - v2) / j2, Ga), bn(o2, D2, k2, P2, I2, Wa), t3.bezierCurveTo(Ga[1], Wa[1], Ga[2], Wa[2], Ga[3], Wa[3]);
                    break t;
                  }
                  v2 += j2;
                }
                t3.bezierCurveTo(C2, D2, A2, k2, L2, P2), r2 = L2, o2 = P2;
                break;
              case Fa.Q:
                C2 = p2[_2++], D2 = p2[_2++], A2 = p2[_2++], k2 = p2[_2++];
                if (y2) {
                  if (v2 + (j2 = l2[m2++]) > u2) {
                    Cn(r2, C2, A2, I2 = (u2 - v2) / j2, Ga), Cn(o2, D2, k2, I2, Wa), t3.quadraticCurveTo(Ga[1], Wa[1], Ga[2], Wa[2]);
                    break t;
                  }
                  v2 += j2;
                }
                t3.quadraticCurveTo(C2, D2, A2, k2), r2 = A2, o2 = k2;
                break;
              case Fa.A:
                var O2 = p2[_2++], R2 = p2[_2++], N2 = p2[_2++], E2 = p2[_2++], z2 = p2[_2++], V2 = p2[_2++], B2 = p2[_2++], F2 = !p2[_2++], G2 = N2 > E2 ? N2 : E2, W2 = $a(N2 - E2) > 1e-3, H2 = z2 + V2, Y2 = false;
                if (y2)
                  v2 + (j2 = l2[m2++]) > u2 && (H2 = z2 + V2 * (u2 - v2) / j2, Y2 = true), v2 += j2;
                if (W2 && t3.ellipse ? t3.ellipse(O2, R2, N2, E2, B2, z2, H2, F2) : t3.arc(O2, R2, G2, z2, H2, F2), Y2)
                  break t;
                w2 && (n2 = qa(z2) * N2 + O2, i2 = Ka(z2) * E2 + R2), r2 = qa(H2) * N2 + O2, o2 = Ka(H2) * E2 + R2;
                break;
              case Fa.R:
                n2 = r2 = p2[_2], i2 = o2 = p2[_2 + 1], a2 = p2[_2++], s2 = p2[_2++];
                var X2 = p2[_2++], U2 = p2[_2++];
                if (y2) {
                  if (v2 + (j2 = l2[m2++]) > u2) {
                    var Z2 = u2 - v2;
                    t3.moveTo(a2, s2), t3.lineTo(a2 + Za(Z2, X2), s2), (Z2 -= X2) > 0 && t3.lineTo(a2 + X2, s2 + Za(Z2, U2)), (Z2 -= U2) > 0 && t3.lineTo(a2 + ja(X2 - Z2, 0), s2 + U2), (Z2 -= X2) > 0 && t3.lineTo(a2, s2 + ja(U2 - Z2, 0));
                    break t;
                  }
                  v2 += j2;
                }
                t3.rect(a2, s2, X2, U2);
                break;
              case Fa.Z:
                if (y2) {
                  var j2;
                  if (v2 + (j2 = l2[m2++]) > u2) {
                    I2 = (u2 - v2) / j2;
                    t3.lineTo(r2 * (1 - I2) + n2 * I2, o2 * (1 - I2) + i2 * I2);
                    break t;
                  }
                  v2 += j2;
                }
                t3.closePath(), r2 = n2, o2 = i2;
            }
          }
    }, t2.prototype.clone = function() {
      var e2 = new t2(), n2 = this.data;
      return e2.data = n2.slice ? n2.slice() : Array.prototype.slice.call(n2), e2._len = this._len, e2;
    }, t2.CMD = Fa, t2.initDefaultProps = function() {
      var e2 = t2.prototype;
      e2._saveData = true, e2._ux = 0, e2._uy = 0, e2._pendingPtDist = 0, e2._version = 0;
    }(), t2;
  }();
  function os(t2, e2, n2, i2, r2, o2, a2) {
    if (0 === r2)
      return false;
    var s2 = r2, l2 = 0;
    if (a2 > e2 + s2 && a2 > i2 + s2 || a2 < e2 - s2 && a2 < i2 - s2 || o2 > t2 + s2 && o2 > n2 + s2 || o2 < t2 - s2 && o2 < n2 - s2)
      return false;
    if (t2 === n2)
      return Math.abs(o2 - t2) <= s2 / 2;
    var u2 = (l2 = (e2 - i2) / (t2 - n2)) * o2 - a2 + (t2 * i2 - n2 * e2) / (t2 - n2);
    return u2 * u2 / (l2 * l2 + 1) <= s2 / 2 * s2 / 2;
  }
  function as(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2, h2) {
    if (0 === l2)
      return false;
    var c2 = l2;
    return !(h2 > e2 + c2 && h2 > i2 + c2 && h2 > o2 + c2 && h2 > s2 + c2 || h2 < e2 - c2 && h2 < i2 - c2 && h2 < o2 - c2 && h2 < s2 - c2 || u2 > t2 + c2 && u2 > n2 + c2 && u2 > r2 + c2 && u2 > a2 + c2 || u2 < t2 - c2 && u2 < n2 - c2 && u2 < r2 - c2 && u2 < a2 - c2) && wn(t2, e2, n2, i2, r2, o2, a2, s2, u2, h2, null) <= c2 / 2;
  }
  function ss(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    if (0 === a2)
      return false;
    var u2 = a2;
    return !(l2 > e2 + u2 && l2 > i2 + u2 && l2 > o2 + u2 || l2 < e2 - u2 && l2 < i2 - u2 && l2 < o2 - u2 || s2 > t2 + u2 && s2 > n2 + u2 && s2 > r2 + u2 || s2 < t2 - u2 && s2 < n2 - u2 && s2 < r2 - u2) && Dn(t2, e2, n2, i2, r2, o2, s2, l2, null) <= u2 / 2;
  }
  var ls = 2 * Math.PI;
  function us(t2) {
    return (t2 %= ls) < 0 && (t2 += ls), t2;
  }
  var hs = 2 * Math.PI;
  function cs(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    if (0 === a2)
      return false;
    var u2 = a2;
    s2 -= t2, l2 -= e2;
    var h2 = Math.sqrt(s2 * s2 + l2 * l2);
    if (h2 - u2 > n2 || h2 + u2 < n2)
      return false;
    if (Math.abs(i2 - r2) % hs < 1e-4)
      return true;
    if (o2) {
      var c2 = i2;
      i2 = us(r2), r2 = us(c2);
    } else
      i2 = us(i2), r2 = us(r2);
    i2 > r2 && (r2 += hs);
    var p2 = Math.atan2(l2, s2);
    return p2 < 0 && (p2 += hs), p2 >= i2 && p2 <= r2 || p2 + hs >= i2 && p2 + hs <= r2;
  }
  function ps(t2, e2, n2, i2, r2, o2) {
    if (o2 > e2 && o2 > i2 || o2 < e2 && o2 < i2)
      return 0;
    if (i2 === e2)
      return 0;
    var a2 = (o2 - e2) / (i2 - e2), s2 = i2 < e2 ? 1 : -1;
    1 !== a2 && 0 !== a2 || (s2 = i2 < e2 ? 0.5 : -0.5);
    var l2 = a2 * (n2 - t2) + t2;
    return l2 === r2 ? 1 / 0 : l2 > r2 ? s2 : 0;
  }
  var ds = rs.CMD;
  var fs = 2 * Math.PI;
  var gs = [-1, -1, -1];
  var ys = [-1, -1];
  function vs(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2) {
    if (u2 > e2 && u2 > i2 && u2 > o2 && u2 > s2 || u2 < e2 && u2 < i2 && u2 < o2 && u2 < s2)
      return 0;
    var h2, c2 = xn(e2, i2, o2, s2, u2, gs);
    if (0 === c2)
      return 0;
    for (var p2 = 0, d2 = -1, f2 = void 0, g2 = void 0, y2 = 0; y2 < c2; y2++) {
      var v2 = gs[y2], m2 = 0 === v2 || 1 === v2 ? 0.5 : 1;
      vn(t2, n2, r2, a2, v2) < l2 || (d2 < 0 && (d2 = _n(e2, i2, o2, s2, ys), ys[1] < ys[0] && d2 > 1 && (h2 = void 0, h2 = ys[0], ys[0] = ys[1], ys[1] = h2), f2 = vn(e2, i2, o2, s2, ys[0]), d2 > 1 && (g2 = vn(e2, i2, o2, s2, ys[1]))), 2 === d2 ? v2 < ys[0] ? p2 += f2 < e2 ? m2 : -m2 : v2 < ys[1] ? p2 += g2 < f2 ? m2 : -m2 : p2 += s2 < g2 ? m2 : -m2 : v2 < ys[0] ? p2 += f2 < e2 ? m2 : -m2 : p2 += s2 < f2 ? m2 : -m2);
    }
    return p2;
  }
  function ms(t2, e2, n2, i2, r2, o2, a2, s2) {
    if (s2 > e2 && s2 > i2 && s2 > o2 || s2 < e2 && s2 < i2 && s2 < o2)
      return 0;
    var l2 = function(t3, e3, n3, i3, r3) {
      var o3 = t3 - 2 * e3 + n3, a3 = 2 * (e3 - t3), s3 = t3 - i3, l3 = 0;
      if (gn(o3))
        yn(a3) && (h3 = -s3 / a3) >= 0 && h3 <= 1 && (r3[l3++] = h3);
      else {
        var u3 = a3 * a3 - 4 * o3 * s3;
        if (gn(u3))
          (h3 = -a3 / (2 * o3)) >= 0 && h3 <= 1 && (r3[l3++] = h3);
        else if (u3 > 0) {
          var h3, c3 = sn(u3), p3 = (-a3 - c3) / (2 * o3);
          (h3 = (-a3 + c3) / (2 * o3)) >= 0 && h3 <= 1 && (r3[l3++] = h3), p3 >= 0 && p3 <= 1 && (r3[l3++] = p3);
        }
      }
      return l3;
    }(e2, i2, o2, s2, gs);
    if (0 === l2)
      return 0;
    var u2 = Tn(e2, i2, o2);
    if (u2 >= 0 && u2 <= 1) {
      for (var h2 = 0, c2 = Mn(e2, i2, o2, u2), p2 = 0; p2 < l2; p2++) {
        var d2 = 0 === gs[p2] || 1 === gs[p2] ? 0.5 : 1;
        Mn(t2, n2, r2, gs[p2]) < a2 || (gs[p2] < u2 ? h2 += c2 < e2 ? d2 : -d2 : h2 += o2 < c2 ? d2 : -d2);
      }
      return h2;
    }
    d2 = 0 === gs[0] || 1 === gs[0] ? 0.5 : 1;
    return Mn(t2, n2, r2, gs[0]) < a2 ? 0 : o2 < e2 ? d2 : -d2;
  }
  function xs(t2, e2, n2, i2, r2, o2, a2, s2) {
    if ((s2 -= e2) > n2 || s2 < -n2)
      return 0;
    var l2 = Math.sqrt(n2 * n2 - s2 * s2);
    gs[0] = -l2, gs[1] = l2;
    var u2 = Math.abs(i2 - r2);
    if (u2 < 1e-4)
      return 0;
    if (u2 >= fs - 1e-4) {
      i2 = 0, r2 = fs;
      var h2 = o2 ? 1 : -1;
      return a2 >= gs[0] + t2 && a2 <= gs[1] + t2 ? h2 : 0;
    }
    if (i2 > r2) {
      var c2 = i2;
      i2 = r2, r2 = c2;
    }
    i2 < 0 && (i2 += fs, r2 += fs);
    for (var p2 = 0, d2 = 0; d2 < 2; d2++) {
      var f2 = gs[d2];
      if (f2 + t2 > a2) {
        var g2 = Math.atan2(s2, f2);
        h2 = o2 ? 1 : -1;
        g2 < 0 && (g2 = fs + g2), (g2 >= i2 && g2 <= r2 || g2 + fs >= i2 && g2 + fs <= r2) && (g2 > Math.PI / 2 && g2 < 1.5 * Math.PI && (h2 = -h2), p2 += h2);
      }
    }
    return p2;
  }
  function _s(t2, e2, n2, i2, r2) {
    for (var o2, a2, s2, l2, u2 = t2.data, h2 = t2.len(), c2 = 0, p2 = 0, d2 = 0, f2 = 0, g2 = 0, y2 = 0; y2 < h2; ) {
      var v2 = u2[y2++], m2 = 1 === y2;
      switch (v2 === ds.M && y2 > 1 && (n2 || (c2 += ps(p2, d2, f2, g2, i2, r2))), m2 && (f2 = p2 = u2[y2], g2 = d2 = u2[y2 + 1]), v2) {
        case ds.M:
          p2 = f2 = u2[y2++], d2 = g2 = u2[y2++];
          break;
        case ds.L:
          if (n2) {
            if (os(p2, d2, u2[y2], u2[y2 + 1], e2, i2, r2))
              return true;
          } else
            c2 += ps(p2, d2, u2[y2], u2[y2 + 1], i2, r2) || 0;
          p2 = u2[y2++], d2 = u2[y2++];
          break;
        case ds.C:
          if (n2) {
            if (as(p2, d2, u2[y2++], u2[y2++], u2[y2++], u2[y2++], u2[y2], u2[y2 + 1], e2, i2, r2))
              return true;
          } else
            c2 += vs(p2, d2, u2[y2++], u2[y2++], u2[y2++], u2[y2++], u2[y2], u2[y2 + 1], i2, r2) || 0;
          p2 = u2[y2++], d2 = u2[y2++];
          break;
        case ds.Q:
          if (n2) {
            if (ss(p2, d2, u2[y2++], u2[y2++], u2[y2], u2[y2 + 1], e2, i2, r2))
              return true;
          } else
            c2 += ms(p2, d2, u2[y2++], u2[y2++], u2[y2], u2[y2 + 1], i2, r2) || 0;
          p2 = u2[y2++], d2 = u2[y2++];
          break;
        case ds.A:
          var x2 = u2[y2++], _2 = u2[y2++], b2 = u2[y2++], w2 = u2[y2++], S2 = u2[y2++], M2 = u2[y2++];
          y2 += 1;
          var I2 = !!(1 - u2[y2++]);
          o2 = Math.cos(S2) * b2 + x2, a2 = Math.sin(S2) * w2 + _2, m2 ? (f2 = o2, g2 = a2) : c2 += ps(p2, d2, o2, a2, i2, r2);
          var T2 = (i2 - x2) * w2 / b2 + x2;
          if (n2) {
            if (cs(x2, _2, w2, S2, S2 + M2, I2, e2, T2, r2))
              return true;
          } else
            c2 += xs(x2, _2, w2, S2, S2 + M2, I2, T2, r2);
          p2 = Math.cos(S2 + M2) * b2 + x2, d2 = Math.sin(S2 + M2) * w2 + _2;
          break;
        case ds.R:
          if (f2 = p2 = u2[y2++], g2 = d2 = u2[y2++], o2 = f2 + u2[y2++], a2 = g2 + u2[y2++], n2) {
            if (os(f2, g2, o2, g2, e2, i2, r2) || os(o2, g2, o2, a2, e2, i2, r2) || os(o2, a2, f2, a2, e2, i2, r2) || os(f2, a2, f2, g2, e2, i2, r2))
              return true;
          } else
            c2 += ps(o2, g2, o2, a2, i2, r2), c2 += ps(f2, a2, f2, g2, i2, r2);
          break;
        case ds.Z:
          if (n2) {
            if (os(p2, d2, f2, g2, e2, i2, r2))
              return true;
          } else
            c2 += ps(p2, d2, f2, g2, i2, r2);
          p2 = f2, d2 = g2;
      }
    }
    return n2 || (s2 = d2, l2 = g2, Math.abs(s2 - l2) < 1e-4) || (c2 += ps(p2, d2, f2, g2, i2, r2) || 0), 0 !== c2;
  }
  var bs = A({ fill: "#000", stroke: null, strokePercent: 1, fillOpacity: 1, strokeOpacity: 1, lineDashOffset: 0, lineWidth: 1, lineCap: "butt", miterLimit: 10, strokeNoScale: false, strokeFirst: false }, ma);
  var ws = { style: A({ fill: true, stroke: true, strokePercent: true, fillOpacity: true, strokeOpacity: true, lineDashOffset: true, lineWidth: true, miterLimit: true }, xa.style) };
  var Ss = gr.concat(["invisible", "culling", "z", "z2", "zlevel", "parent"]);
  var Ms = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    var i2;
    return e(n2, t2), n2.prototype.update = function() {
      var e2 = this;
      t2.prototype.update.call(this);
      var i3 = this.style;
      if (i3.decal) {
        var r2 = this._decalEl = this._decalEl || new n2();
        r2.buildPath === n2.prototype.buildPath && (r2.buildPath = function(t3) {
          e2.buildPath(t3, e2.shape);
        }), r2.silent = true;
        var o2 = r2.style;
        for (var a2 in i3)
          o2[a2] !== i3[a2] && (o2[a2] = i3[a2]);
        o2.fill = i3.fill ? i3.decal : null, o2.decal = null, o2.shadowColor = null, i3.strokeFirst && (o2.stroke = null);
        for (var s2 = 0; s2 < Ss.length; ++s2)
          r2[Ss[s2]] = this[Ss[s2]];
        r2.__dirty |= 1;
      } else
        this._decalEl && (this._decalEl = null);
    }, n2.prototype.getDecalElement = function() {
      return this._decalEl;
    }, n2.prototype._init = function(e2) {
      var n3 = F(e2);
      this.shape = this.getDefaultShape();
      var i3 = this.getDefaultStyle();
      i3 && this.useStyle(i3);
      for (var r2 = 0; r2 < n3.length; r2++) {
        var o2 = n3[r2], a2 = e2[o2];
        "style" === o2 ? this.style ? D(this.style, a2) : this.useStyle(a2) : "shape" === o2 ? D(this.shape, a2) : t2.prototype.attrKV.call(this, o2, a2);
      }
      this.style || this.useStyle({});
    }, n2.prototype.getDefaultStyle = function() {
      return null;
    }, n2.prototype.getDefaultShape = function() {
      return {};
    }, n2.prototype.canBeInsideText = function() {
      return this.hasFill();
    }, n2.prototype.getInsideTextFill = function() {
      var t3 = this.style.fill;
      if ("none" !== t3) {
        if (X(t3)) {
          var e2 = ri(t3, 0);
          return e2 > 0.5 ? or : e2 > 0.2 ? "#eee" : ar;
        }
        if (t3)
          return ar;
      }
      return or;
    }, n2.prototype.getInsideTextStroke = function(t3) {
      var e2 = this.style.fill;
      if (X(e2)) {
        var n3 = this.__zr;
        if (!(!n3 || !n3.isDarkMode()) === ri(t3, 0) < 0.4)
          return e2;
      }
    }, n2.prototype.buildPath = function(t3, e2, n3) {
    }, n2.prototype.pathUpdated = function() {
      this.__dirty &= -5;
    }, n2.prototype.getUpdatedPathProxy = function(t3) {
      return !this.path && this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, t3), this.path;
    }, n2.prototype.createPathProxy = function() {
      this.path = new rs(false);
    }, n2.prototype.hasStroke = function() {
      var t3 = this.style, e2 = t3.stroke;
      return !(null == e2 || "none" === e2 || !(t3.lineWidth > 0));
    }, n2.prototype.hasFill = function() {
      var t3 = this.style.fill;
      return null != t3 && "none" !== t3;
    }, n2.prototype.getBoundingRect = function() {
      var t3 = this._rect, e2 = this.style, n3 = !t3;
      if (n3) {
        var i3 = false;
        this.path || (i3 = true, this.createPathProxy());
        var r2 = this.path;
        (i3 || 4 & this.__dirty) && (r2.beginPath(), this.buildPath(r2, this.shape, false), this.pathUpdated()), t3 = r2.getBoundingRect();
      }
      if (this._rect = t3, this.hasStroke() && this.path && this.path.len() > 0) {
        var o2 = this._rectStroke || (this._rectStroke = t3.clone());
        if (this.__dirty || n3) {
          o2.copy(t3);
          var a2 = e2.strokeNoScale ? this.getLineScale() : 1, s2 = e2.lineWidth;
          if (!this.hasFill()) {
            var l2 = this.strokeContainThreshold;
            s2 = Math.max(s2, null == l2 ? 4 : l2);
          }
          a2 > 1e-10 && (o2.width += s2 / a2, o2.height += s2 / a2, o2.x -= s2 / a2 / 2, o2.y -= s2 / a2 / 2);
        }
        return o2;
      }
      return t3;
    }, n2.prototype.contain = function(t3, e2) {
      var n3 = this.transformCoordToLocal(t3, e2), i3 = this.getBoundingRect(), r2 = this.style;
      if (t3 = n3[0], e2 = n3[1], i3.contain(t3, e2)) {
        var o2 = this.path;
        if (this.hasStroke()) {
          var a2 = r2.lineWidth, s2 = r2.strokeNoScale ? this.getLineScale() : 1;
          if (s2 > 1e-10 && (this.hasFill() || (a2 = Math.max(a2, this.strokeContainThreshold)), function(t4, e3, n4, i4) {
            return _s(t4, e3, true, n4, i4);
          }(o2, a2 / s2, t3, e2)))
            return true;
        }
        if (this.hasFill())
          return function(t4, e3, n4) {
            return _s(t4, 0, false, e3, n4);
          }(o2, t3, e2);
      }
      return false;
    }, n2.prototype.dirtyShape = function() {
      this.__dirty |= 4, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
    }, n2.prototype.dirty = function() {
      this.dirtyStyle(), this.dirtyShape();
    }, n2.prototype.animateShape = function(t3) {
      return this.animate("shape", t3);
    }, n2.prototype.updateDuringAnimation = function(t3) {
      "style" === t3 ? this.dirtyStyle() : "shape" === t3 ? this.dirtyShape() : this.markRedraw();
    }, n2.prototype.attrKV = function(e2, n3) {
      "shape" === e2 ? this.setShape(n3) : t2.prototype.attrKV.call(this, e2, n3);
    }, n2.prototype.setShape = function(t3, e2) {
      var n3 = this.shape;
      return n3 || (n3 = this.shape = {}), "string" == typeof t3 ? n3[t3] = e2 : D(n3, t3), this.dirtyShape(), this;
    }, n2.prototype.shapeChanged = function() {
      return !!(4 & this.__dirty);
    }, n2.prototype.createStyle = function(t3) {
      return vt(bs, t3);
    }, n2.prototype._innerSaveToNormal = function(e2) {
      t2.prototype._innerSaveToNormal.call(this, e2);
      var n3 = this._normalState;
      e2.shape && !n3.shape && (n3.shape = D({}, this.shape));
    }, n2.prototype._applyStateObj = function(e2, n3, i3, r2, o2, a2) {
      t2.prototype._applyStateObj.call(this, e2, n3, i3, r2, o2, a2);
      var s2, l2 = !(n3 && r2);
      if (n3 && n3.shape ? o2 ? r2 ? s2 = n3.shape : (s2 = D({}, i3.shape), D(s2, n3.shape)) : (s2 = D({}, r2 ? this.shape : i3.shape), D(s2, n3.shape)) : l2 && (s2 = i3.shape), s2)
        if (o2) {
          this.shape = D({}, this.shape);
          for (var u2 = {}, h2 = F(s2), c2 = 0; c2 < h2.length; c2++) {
            var p2 = h2[c2];
            "object" == typeof s2[p2] ? this.shape[p2] = s2[p2] : u2[p2] = s2[p2];
          }
          this._transitionState(e2, { shape: u2 }, a2);
        } else
          this.shape = s2, this.dirtyShape();
    }, n2.prototype._mergeStates = function(e2) {
      for (var n3, i3 = t2.prototype._mergeStates.call(this, e2), r2 = 0; r2 < e2.length; r2++) {
        var o2 = e2[r2];
        o2.shape && (n3 = n3 || {}, this._mergeStyle(n3, o2.shape));
      }
      return n3 && (i3.shape = n3), i3;
    }, n2.prototype.getAnimationStyleProps = function() {
      return ws;
    }, n2.prototype.isZeroArea = function() {
      return false;
    }, n2.extend = function(t3) {
      var i3 = function(n3) {
        function i4(e2) {
          var i5 = n3.call(this, e2) || this;
          return t3.init && t3.init.call(i5, e2), i5;
        }
        return e(i4, n3), i4.prototype.getDefaultStyle = function() {
          return I(t3.style);
        }, i4.prototype.getDefaultShape = function() {
          return I(t3.shape);
        }, i4;
      }(n2);
      for (var r2 in t3)
        "function" == typeof t3[r2] && (i3.prototype[r2] = t3[r2]);
      return i3;
    }, n2.initDefaultProps = ((i2 = n2.prototype).type = "path", i2.strokeContainThreshold = 5, i2.segmentIgnoreThreshold = 0, i2.subPixelOptimize = false, i2.autoBatch = false, void (i2.__dirty = 7)), n2;
  }(wa);
  var Is = A({ strokeFirst: true, font: o, x: 0, y: 0, textAlign: "left", textBaseline: "top", miterLimit: 2 }, bs);
  var Ts = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.hasStroke = function() {
      var t3 = this.style, e2 = t3.stroke;
      return null != e2 && "none" !== e2 && t3.lineWidth > 0;
    }, n2.prototype.hasFill = function() {
      var t3 = this.style.fill;
      return null != t3 && "none" !== t3;
    }, n2.prototype.createStyle = function(t3) {
      return vt(Is, t3);
    }, n2.prototype.setBoundingRect = function(t3) {
      this._rect = t3;
    }, n2.prototype.getBoundingRect = function() {
      var t3 = this.style;
      if (!this._rect) {
        var e2 = t3.text;
        null != e2 ? e2 += "" : e2 = "";
        var n3 = _r(e2, t3.font, t3.textAlign, t3.textBaseline);
        if (n3.x += t3.x || 0, n3.y += t3.y || 0, this.hasStroke()) {
          var i2 = t3.lineWidth;
          n3.x -= i2 / 2, n3.y -= i2 / 2, n3.width += i2, n3.height += i2;
        }
        this._rect = n3;
      }
      return this._rect;
    }, n2.initDefaultProps = void (n2.prototype.dirtyRectTolerance = 10), n2;
  }(wa);
  Ts.prototype.type = "tspan";
  var Cs = A({ x: 0, y: 0 }, ma);
  var Ds = { style: A({ x: true, y: true, width: true, height: true, sx: true, sy: true, sWidth: true, sHeight: true }, xa.style) };
  var As = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.createStyle = function(t3) {
      return vt(Cs, t3);
    }, n2.prototype._getSize = function(t3) {
      var e2 = this.style, n3 = e2[t3];
      if (null != n3)
        return n3;
      var i2, r2 = (i2 = e2.image) && "string" != typeof i2 && i2.width && i2.height ? e2.image : this.__image;
      if (!r2)
        return 0;
      var o2 = "width" === t3 ? "height" : "width", a2 = e2[o2];
      return null == a2 ? r2[t3] : r2[t3] / r2[o2] * a2;
    }, n2.prototype.getWidth = function() {
      return this._getSize("width");
    }, n2.prototype.getHeight = function() {
      return this._getSize("height");
    }, n2.prototype.getAnimationStyleProps = function() {
      return Ds;
    }, n2.prototype.getBoundingRect = function() {
      var t3 = this.style;
      return this._rect || (this._rect = new Ee(t3.x || 0, t3.y || 0, this.getWidth(), this.getHeight())), this._rect;
    }, n2;
  }(wa);
  As.prototype.type = "image";
  var ks = Math.round;
  function Ls(t2, e2, n2) {
    if (e2) {
      var i2 = e2.x1, r2 = e2.x2, o2 = e2.y1, a2 = e2.y2;
      t2.x1 = i2, t2.x2 = r2, t2.y1 = o2, t2.y2 = a2;
      var s2 = n2 && n2.lineWidth;
      return s2 ? (ks(2 * i2) === ks(2 * r2) && (t2.x1 = t2.x2 = Os(i2, s2, true)), ks(2 * o2) === ks(2 * a2) && (t2.y1 = t2.y2 = Os(o2, s2, true)), t2) : t2;
    }
  }
  function Ps(t2, e2, n2) {
    if (e2) {
      var i2 = e2.x, r2 = e2.y, o2 = e2.width, a2 = e2.height;
      t2.x = i2, t2.y = r2, t2.width = o2, t2.height = a2;
      var s2 = n2 && n2.lineWidth;
      return s2 ? (t2.x = Os(i2, s2, true), t2.y = Os(r2, s2, true), t2.width = Math.max(Os(i2 + o2, s2, false) - t2.x, 0 === o2 ? 0 : 1), t2.height = Math.max(Os(r2 + a2, s2, false) - t2.y, 0 === a2 ? 0 : 1), t2) : t2;
    }
  }
  function Os(t2, e2, n2) {
    if (!e2)
      return t2;
    var i2 = ks(2 * t2);
    return (i2 + ks(e2)) % 2 == 0 ? i2 / 2 : (i2 + (n2 ? 1 : -1)) / 2;
  }
  var Rs = function() {
    this.x = 0, this.y = 0, this.width = 0, this.height = 0;
  };
  var Ns = {};
  var Es = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new Rs();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3, i2, r2, o2;
      if (this.subPixelOptimize) {
        var a2 = Ps(Ns, e2, this.style);
        n3 = a2.x, i2 = a2.y, r2 = a2.width, o2 = a2.height, a2.r = e2.r, e2 = a2;
      } else
        n3 = e2.x, i2 = e2.y, r2 = e2.width, o2 = e2.height;
      e2.r ? function(t4, e3) {
        var n4, i3, r3, o3, a3, s2 = e3.x, l2 = e3.y, u2 = e3.width, h2 = e3.height, c2 = e3.r;
        u2 < 0 && (s2 += u2, u2 = -u2), h2 < 0 && (l2 += h2, h2 = -h2), "number" == typeof c2 ? n4 = i3 = r3 = o3 = c2 : c2 instanceof Array ? 1 === c2.length ? n4 = i3 = r3 = o3 = c2[0] : 2 === c2.length ? (n4 = r3 = c2[0], i3 = o3 = c2[1]) : 3 === c2.length ? (n4 = c2[0], i3 = o3 = c2[1], r3 = c2[2]) : (n4 = c2[0], i3 = c2[1], r3 = c2[2], o3 = c2[3]) : n4 = i3 = r3 = o3 = 0, n4 + i3 > u2 && (n4 *= u2 / (a3 = n4 + i3), i3 *= u2 / a3), r3 + o3 > u2 && (r3 *= u2 / (a3 = r3 + o3), o3 *= u2 / a3), i3 + r3 > h2 && (i3 *= h2 / (a3 = i3 + r3), r3 *= h2 / a3), n4 + o3 > h2 && (n4 *= h2 / (a3 = n4 + o3), o3 *= h2 / a3), t4.moveTo(s2 + n4, l2), t4.lineTo(s2 + u2 - i3, l2), 0 !== i3 && t4.arc(s2 + u2 - i3, l2 + i3, i3, -Math.PI / 2, 0), t4.lineTo(s2 + u2, l2 + h2 - r3), 0 !== r3 && t4.arc(s2 + u2 - r3, l2 + h2 - r3, r3, 0, Math.PI / 2), t4.lineTo(s2 + o3, l2 + h2), 0 !== o3 && t4.arc(s2 + o3, l2 + h2 - o3, o3, Math.PI / 2, Math.PI), t4.lineTo(s2, l2 + n4), 0 !== n4 && t4.arc(s2 + n4, l2 + n4, n4, Math.PI, 1.5 * Math.PI);
      }(t3, e2) : t3.rect(n3, i2, r2, o2);
    }, n2.prototype.isZeroArea = function() {
      return !this.shape.width || !this.shape.height;
    }, n2;
  }(Ms);
  Es.prototype.type = "rect";
  var zs = { fill: "#000" };
  var Vs = { style: A({ fill: true, stroke: true, fillOpacity: true, strokeOpacity: true, lineWidth: true, fontSize: true, lineHeight: true, width: true, height: true, textShadowColor: true, textShadowBlur: true, textShadowOffsetX: true, textShadowOffsetY: true, backgroundColor: true, padding: true, borderColor: true, borderWidth: true, borderRadius: true }, xa.style) };
  var Bs = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      return n3.type = "text", n3._children = [], n3._defaultStyle = zs, n3.attr(e2), n3;
    }
    return e(n2, t2), n2.prototype.childrenRef = function() {
      return this._children;
    }, n2.prototype.update = function() {
      t2.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
      for (var e2 = 0; e2 < this._children.length; e2++) {
        var n3 = this._children[e2];
        n3.zlevel = this.zlevel, n3.z = this.z, n3.z2 = this.z2, n3.culling = this.culling, n3.cursor = this.cursor, n3.invisible = this.invisible;
      }
    }, n2.prototype.updateTransform = function() {
      var e2 = this.innerTransformable;
      e2 ? (e2.updateTransform(), e2.transform && (this.transform = e2.transform)) : t2.prototype.updateTransform.call(this);
    }, n2.prototype.getLocalTransform = function(e2) {
      var n3 = this.innerTransformable;
      return n3 ? n3.getLocalTransform(e2) : t2.prototype.getLocalTransform.call(this, e2);
    }, n2.prototype.getComputedTransform = function() {
      return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(true)), t2.prototype.getComputedTransform.call(this);
    }, n2.prototype._updateSubTexts = function() {
      var t3;
      this._childCursor = 0, Us(t3 = this.style), N(t3.rich, Us), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
    }, n2.prototype.addSelfToZr = function(e2) {
      t2.prototype.addSelfToZr.call(this, e2);
      for (var n3 = 0; n3 < this._children.length; n3++)
        this._children[n3].__zr = e2;
    }, n2.prototype.removeSelfFromZr = function(e2) {
      t2.prototype.removeSelfFromZr.call(this, e2);
      for (var n3 = 0; n3 < this._children.length; n3++)
        this._children[n3].__zr = null;
    }, n2.prototype.getBoundingRect = function() {
      if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
        for (var t3 = new Ee(0, 0, 0, 0), e2 = this._children, n3 = [], i2 = null, r2 = 0; r2 < e2.length; r2++) {
          var o2 = e2[r2], a2 = o2.getBoundingRect(), s2 = o2.getLocalTransform(n3);
          s2 ? (t3.copy(a2), t3.applyTransform(s2), (i2 = i2 || t3.clone()).union(t3)) : (i2 = i2 || a2.clone()).union(a2);
        }
        this._rect = i2 || t3;
      }
      return this._rect;
    }, n2.prototype.setDefaultTextStyle = function(t3) {
      this._defaultStyle = t3 || zs;
    }, n2.prototype.setTextContent = function(t3) {
    }, n2.prototype._mergeStyle = function(t3, e2) {
      if (!e2)
        return t3;
      var n3 = e2.rich, i2 = t3.rich || n3 && {};
      return D(t3, e2), n3 && i2 ? (this._mergeRich(i2, n3), t3.rich = i2) : i2 && (t3.rich = i2), t3;
    }, n2.prototype._mergeRich = function(t3, e2) {
      for (var n3 = F(e2), i2 = 0; i2 < n3.length; i2++) {
        var r2 = n3[i2];
        t3[r2] = t3[r2] || {}, D(t3[r2], e2[r2]);
      }
    }, n2.prototype.getAnimationStyleProps = function() {
      return Vs;
    }, n2.prototype._getOrCreateChild = function(t3) {
      var e2 = this._children[this._childCursor];
      return e2 && e2 instanceof t3 || (e2 = new t3()), this._children[this._childCursor++] = e2, e2.__zr = this.__zr, e2.parent = this, e2;
    }, n2.prototype._updatePlainTexts = function() {
      var t3 = this.style, e2 = t3.font || o, n3 = t3.padding, i2 = function(t4, e3) {
        null != t4 && (t4 += "");
        var n4, i3 = e3.overflow, r3 = e3.padding, o2 = e3.font, a3 = "truncate" === i3, s3 = Sr(o2), l3 = it(e3.lineHeight, s3), u3 = !!e3.backgroundColor, h3 = "truncate" === e3.lineOverflow, c3 = e3.width, p3 = (n4 = null == c3 || "break" !== i3 && "breakAll" !== i3 ? t4 ? t4.split("\n") : [] : t4 ? ya(t4, e3.font, c3, "breakAll" === i3, 0).lines : []).length * l3, d3 = it(e3.height, p3);
        if (p3 > d3 && h3) {
          var f3 = Math.floor(d3 / l3);
          n4 = n4.slice(0, f3);
        }
        if (t4 && a3 && null != c3)
          for (var g3 = sa(c3, o2, e3.ellipsis, { minChar: e3.truncateMinChar, placeholder: e3.placeholder }), y3 = 0; y3 < n4.length; y3++)
            n4[y3] = la(n4[y3], g3);
        var v3 = d3, m3 = 0;
        for (y3 = 0; y3 < n4.length; y3++)
          m3 = Math.max(mr(n4[y3], o2), m3);
        null == c3 && (c3 = m3);
        var x3 = m3;
        return r3 && (v3 += r3[0] + r3[2], x3 += r3[1] + r3[3], c3 += r3[1] + r3[3]), u3 && (x3 = c3), { lines: n4, height: d3, outerWidth: x3, outerHeight: v3, lineHeight: l3, calculatedLineHeight: s3, contentWidth: m3, contentHeight: p3, width: c3 };
      }(Ks(t3), t3), r2 = $s(t3), a2 = !!t3.backgroundColor, s2 = i2.outerHeight, l2 = i2.outerWidth, u2 = i2.contentWidth, h2 = i2.lines, c2 = i2.lineHeight, p2 = this._defaultStyle, d2 = t3.x || 0, f2 = t3.y || 0, g2 = t3.align || p2.align || "left", y2 = t3.verticalAlign || p2.verticalAlign || "top", v2 = d2, m2 = wr(f2, i2.contentHeight, y2);
      if (r2 || n3) {
        var x2 = br(d2, l2, g2), _2 = wr(f2, s2, y2);
        r2 && this._renderBackground(t3, t3, x2, _2, l2, s2);
      }
      m2 += c2 / 2, n3 && (v2 = qs(d2, g2, n3), "top" === y2 ? m2 += n3[0] : "bottom" === y2 && (m2 -= n3[2]));
      for (var b2 = 0, w2 = false, S2 = js("fill" in t3 ? t3.fill : (w2 = true, p2.fill)), M2 = Zs("stroke" in t3 ? t3.stroke : a2 || p2.autoStroke && !w2 ? null : (b2 = 2, p2.stroke)), I2 = t3.textShadowBlur > 0, T2 = null != t3.width && ("truncate" === t3.overflow || "break" === t3.overflow || "breakAll" === t3.overflow), C2 = i2.calculatedLineHeight, D2 = 0; D2 < h2.length; D2++) {
        var A2 = this._getOrCreateChild(Ts), k2 = A2.createStyle();
        A2.useStyle(k2), k2.text = h2[D2], k2.x = v2, k2.y = m2, g2 && (k2.textAlign = g2), k2.textBaseline = "middle", k2.opacity = t3.opacity, k2.strokeFirst = true, I2 && (k2.shadowBlur = t3.textShadowBlur || 0, k2.shadowColor = t3.textShadowColor || "transparent", k2.shadowOffsetX = t3.textShadowOffsetX || 0, k2.shadowOffsetY = t3.textShadowOffsetY || 0), k2.stroke = M2, k2.fill = S2, M2 && (k2.lineWidth = t3.lineWidth || b2, k2.lineDash = t3.lineDash, k2.lineDashOffset = t3.lineDashOffset || 0), k2.font = e2, Ys(k2, t3), m2 += c2, T2 && A2.setBoundingRect(new Ee(br(k2.x, t3.width, k2.textAlign), wr(k2.y, C2, k2.textBaseline), u2, C2));
      }
    }, n2.prototype._updateRichTexts = function() {
      var t3 = this.style, e2 = function(t4, e3) {
        var n4 = new pa();
        if (null != t4 && (t4 += ""), !t4)
          return n4;
        for (var i3, r3 = e3.width, o3 = e3.height, a3 = e3.overflow, s3 = "break" !== a3 && "breakAll" !== a3 || null == r3 ? null : { width: r3, accumWidth: 0, breakAll: "breakAll" === a3 }, l3 = oa.lastIndex = 0; null != (i3 = oa.exec(t4)); ) {
          var u3 = i3.index;
          u3 > l3 && da(n4, t4.substring(l3, u3), e3, s3), da(n4, i3[2], e3, s3, i3[1]), l3 = oa.lastIndex;
        }
        l3 < t4.length && da(n4, t4.substring(l3, t4.length), e3, s3);
        var h3 = [], c3 = 0, p3 = 0, d3 = e3.padding, f3 = "truncate" === a3, g3 = "truncate" === e3.lineOverflow;
        function y3(t5, e4, n5) {
          t5.width = e4, t5.lineHeight = n5, c3 += n5, p3 = Math.max(p3, e4);
        }
        t:
          for (var v3 = 0; v3 < n4.lines.length; v3++) {
            for (var m3 = n4.lines[v3], x3 = 0, _3 = 0, b3 = 0; b3 < m3.tokens.length; b3++) {
              var w3 = (P2 = m3.tokens[b3]).styleName && e3.rich[P2.styleName] || {}, S3 = P2.textPadding = w3.padding, M3 = S3 ? S3[1] + S3[3] : 0, I3 = P2.font = w3.font || e3.font;
              P2.contentHeight = Sr(I3);
              var T3 = it(w3.height, P2.contentHeight);
              if (P2.innerHeight = T3, S3 && (T3 += S3[0] + S3[2]), P2.height = T3, P2.lineHeight = rt(w3.lineHeight, e3.lineHeight, T3), P2.align = w3 && w3.align || e3.align, P2.verticalAlign = w3 && w3.verticalAlign || "middle", g3 && null != o3 && c3 + P2.lineHeight > o3) {
                b3 > 0 ? (m3.tokens = m3.tokens.slice(0, b3), y3(m3, _3, x3), n4.lines = n4.lines.slice(0, v3 + 1)) : n4.lines = n4.lines.slice(0, v3);
                break t;
              }
              var C3 = w3.width, D2 = null == C3 || "auto" === C3;
              if ("string" == typeof C3 && "%" === C3.charAt(C3.length - 1))
                P2.percentWidth = C3, h3.push(P2), P2.contentWidth = mr(P2.text, I3);
              else {
                if (D2) {
                  var A2 = w3.backgroundColor, k2 = A2 && A2.image;
                  k2 && ra(k2 = ea(k2)) && (P2.width = Math.max(P2.width, k2.width * T3 / k2.height));
                }
                var L2 = f3 && null != r3 ? r3 - _3 : null;
                null != L2 && L2 < P2.width ? !D2 || L2 < M3 ? (P2.text = "", P2.width = P2.contentWidth = 0) : (P2.text = aa(P2.text, L2 - M3, I3, e3.ellipsis, { minChar: e3.truncateMinChar }), P2.width = P2.contentWidth = mr(P2.text, I3)) : P2.contentWidth = mr(P2.text, I3);
              }
              P2.width += M3, _3 += P2.width, w3 && (x3 = Math.max(x3, P2.lineHeight));
            }
            y3(m3, _3, x3);
          }
        for (n4.outerWidth = n4.width = it(r3, p3), n4.outerHeight = n4.height = it(o3, c3), n4.contentHeight = c3, n4.contentWidth = p3, d3 && (n4.outerWidth += d3[1] + d3[3], n4.outerHeight += d3[0] + d3[2]), v3 = 0; v3 < h3.length; v3++) {
          var P2, O2 = (P2 = h3[v3]).percentWidth;
          P2.width = parseInt(O2, 10) / 100 * n4.width;
        }
        return n4;
      }(Ks(t3), t3), n3 = e2.width, i2 = e2.outerWidth, r2 = e2.outerHeight, o2 = t3.padding, a2 = t3.x || 0, s2 = t3.y || 0, l2 = this._defaultStyle, u2 = t3.align || l2.align, h2 = t3.verticalAlign || l2.verticalAlign, c2 = br(a2, i2, u2), p2 = wr(s2, r2, h2), d2 = c2, f2 = p2;
      o2 && (d2 += o2[3], f2 += o2[0]);
      var g2 = d2 + n3;
      $s(t3) && this._renderBackground(t3, t3, c2, p2, i2, r2);
      for (var y2 = !!t3.backgroundColor, v2 = 0; v2 < e2.lines.length; v2++) {
        for (var m2 = e2.lines[v2], x2 = m2.tokens, _2 = x2.length, b2 = m2.lineHeight, w2 = m2.width, S2 = 0, M2 = d2, I2 = g2, T2 = _2 - 1, C2 = void 0; S2 < _2 && (!(C2 = x2[S2]).align || "left" === C2.align); )
          this._placeToken(C2, t3, b2, f2, M2, "left", y2), w2 -= C2.width, M2 += C2.width, S2++;
        for (; T2 >= 0 && "right" === (C2 = x2[T2]).align; )
          this._placeToken(C2, t3, b2, f2, I2, "right", y2), w2 -= C2.width, I2 -= C2.width, T2--;
        for (M2 += (n3 - (M2 - d2) - (g2 - I2) - w2) / 2; S2 <= T2; )
          C2 = x2[S2], this._placeToken(C2, t3, b2, f2, M2 + C2.width / 2, "center", y2), M2 += C2.width, S2++;
        f2 += b2;
      }
    }, n2.prototype._placeToken = function(t3, e2, n3, i2, r2, a2, s2) {
      var l2 = e2.rich[t3.styleName] || {};
      l2.text = t3.text;
      var u2 = t3.verticalAlign, h2 = i2 + n3 / 2;
      "top" === u2 ? h2 = i2 + t3.height / 2 : "bottom" === u2 && (h2 = i2 + n3 - t3.height / 2), !t3.isLineHolder && $s(l2) && this._renderBackground(l2, e2, "right" === a2 ? r2 - t3.width : "center" === a2 ? r2 - t3.width / 2 : r2, h2 - t3.height / 2, t3.width, t3.height);
      var c2 = !!l2.backgroundColor, p2 = t3.textPadding;
      p2 && (r2 = qs(r2, a2, p2), h2 -= t3.height / 2 - p2[0] - t3.innerHeight / 2);
      var d2 = this._getOrCreateChild(Ts), f2 = d2.createStyle();
      d2.useStyle(f2);
      var g2 = this._defaultStyle, y2 = false, v2 = 0, m2 = js("fill" in l2 ? l2.fill : "fill" in e2 ? e2.fill : (y2 = true, g2.fill)), x2 = Zs("stroke" in l2 ? l2.stroke : "stroke" in e2 ? e2.stroke : c2 || s2 || g2.autoStroke && !y2 ? null : (v2 = 2, g2.stroke)), _2 = l2.textShadowBlur > 0 || e2.textShadowBlur > 0;
      f2.text = t3.text, f2.x = r2, f2.y = h2, _2 && (f2.shadowBlur = l2.textShadowBlur || e2.textShadowBlur || 0, f2.shadowColor = l2.textShadowColor || e2.textShadowColor || "transparent", f2.shadowOffsetX = l2.textShadowOffsetX || e2.textShadowOffsetX || 0, f2.shadowOffsetY = l2.textShadowOffsetY || e2.textShadowOffsetY || 0), f2.textAlign = a2, f2.textBaseline = "middle", f2.font = t3.font || o, f2.opacity = rt(l2.opacity, e2.opacity, 1), Ys(f2, l2), x2 && (f2.lineWidth = rt(l2.lineWidth, e2.lineWidth, v2), f2.lineDash = it(l2.lineDash, e2.lineDash), f2.lineDashOffset = e2.lineDashOffset || 0, f2.stroke = x2), m2 && (f2.fill = m2);
      var b2 = t3.contentWidth, w2 = t3.contentHeight;
      d2.setBoundingRect(new Ee(br(f2.x, b2, f2.textAlign), wr(f2.y, w2, f2.textBaseline), b2, w2));
    }, n2.prototype._renderBackground = function(t3, e2, n3, i2, r2, o2) {
      var a2, s2, l2, u2 = t3.backgroundColor, h2 = t3.borderWidth, c2 = t3.borderColor, p2 = u2 && u2.image, d2 = u2 && !p2, f2 = t3.borderRadius, g2 = this;
      if (d2 || t3.lineHeight || h2 && c2) {
        (a2 = this._getOrCreateChild(Es)).useStyle(a2.createStyle()), a2.style.fill = null;
        var y2 = a2.shape;
        y2.x = n3, y2.y = i2, y2.width = r2, y2.height = o2, y2.r = f2, a2.dirtyShape();
      }
      if (d2)
        (l2 = a2.style).fill = u2 || null, l2.fillOpacity = it(t3.fillOpacity, 1);
      else if (p2) {
        (s2 = this._getOrCreateChild(As)).onload = function() {
          g2.dirtyStyle();
        };
        var v2 = s2.style;
        v2.image = u2.image, v2.x = n3, v2.y = i2, v2.width = r2, v2.height = o2;
      }
      h2 && c2 && ((l2 = a2.style).lineWidth = h2, l2.stroke = c2, l2.strokeOpacity = it(t3.strokeOpacity, 1), l2.lineDash = t3.borderDash, l2.lineDashOffset = t3.borderDashOffset || 0, a2.strokeContainThreshold = 0, a2.hasFill() && a2.hasStroke() && (l2.strokeFirst = true, l2.lineWidth *= 2));
      var m2 = (a2 || s2).style;
      m2.shadowBlur = t3.shadowBlur || 0, m2.shadowColor = t3.shadowColor || "transparent", m2.shadowOffsetX = t3.shadowOffsetX || 0, m2.shadowOffsetY = t3.shadowOffsetY || 0, m2.opacity = rt(t3.opacity, e2.opacity, 1);
    }, n2.makeFont = function(t3) {
      var e2 = "";
      return Xs(t3) && (e2 = [t3.fontStyle, t3.fontWeight, Hs(t3.fontSize), t3.fontFamily || "sans-serif"].join(" ")), e2 && lt(e2) || t3.textFont || t3.font;
    }, n2;
  }(wa);
  var Fs = { left: true, right: 1, center: 1 };
  var Gs = { top: 1, bottom: 1, middle: 1 };
  var Ws = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
  function Hs(t2) {
    return "string" != typeof t2 || -1 === t2.indexOf("px") && -1 === t2.indexOf("rem") && -1 === t2.indexOf("em") ? isNaN(+t2) ? "12px" : t2 + "px" : t2;
  }
  function Ys(t2, e2) {
    for (var n2 = 0; n2 < Ws.length; n2++) {
      var i2 = Ws[n2], r2 = e2[i2];
      null != r2 && (t2[i2] = r2);
    }
  }
  function Xs(t2) {
    return null != t2.fontSize || t2.fontFamily || t2.fontWeight;
  }
  function Us(t2) {
    if (t2) {
      t2.font = Bs.makeFont(t2);
      var e2 = t2.align;
      "middle" === e2 && (e2 = "center"), t2.align = null == e2 || Fs[e2] ? e2 : "left";
      var n2 = t2.verticalAlign;
      "center" === n2 && (n2 = "middle"), t2.verticalAlign = null == n2 || Gs[n2] ? n2 : "top", t2.padding && (t2.padding = at(t2.padding));
    }
  }
  function Zs(t2, e2) {
    return null == t2 || e2 <= 0 || "transparent" === t2 || "none" === t2 ? null : t2.image || t2.colorStops ? "#000" : t2;
  }
  function js(t2) {
    return null == t2 || "none" === t2 ? null : t2.image || t2.colorStops ? "#000" : t2;
  }
  function qs(t2, e2, n2) {
    return "right" === e2 ? t2 - n2[1] : "center" === e2 ? t2 + n2[3] / 2 - n2[1] / 2 : t2 + n2[3];
  }
  function Ks(t2) {
    var e2 = t2.text;
    return null != e2 && (e2 += ""), e2;
  }
  function $s(t2) {
    return !!(t2.backgroundColor || t2.lineHeight || t2.borderWidth && t2.borderColor);
  }
  var Js = Po();
  var Qs = function(t2, e2, n2, i2) {
    if (i2) {
      var r2 = Js(i2);
      r2.dataIndex = n2, r2.dataType = e2, r2.seriesIndex = t2, "group" === i2.type && i2.traverse(function(i3) {
        var r3 = Js(i3);
        r3.seriesIndex = t2, r3.dataIndex = n2, r3.dataType = e2;
      });
    }
  };
  var tl = 1;
  var el = {};
  var nl = Po();
  var il = Po();
  var rl = ["emphasis", "blur", "select"];
  var ol = ["normal", "emphasis", "blur", "select"];
  var al = 10;
  var sl = "highlight";
  var ll = "downplay";
  var ul = "select";
  var hl = "unselect";
  var cl = "toggleSelect";
  function pl(t2) {
    return null != t2 && "none" !== t2;
  }
  var dl = new Nn(100);
  function fl(t2) {
    if (X(t2)) {
      var e2 = dl.get(t2);
      return e2 || (e2 = Kn(t2, -0.1), dl.put(t2, e2)), e2;
    }
    if (J(t2)) {
      var n2 = D({}, t2);
      return n2.colorStops = E(t2.colorStops, function(t3) {
        return { offset: t3.offset, color: Kn(t3.color, -0.1) };
      }), n2;
    }
    return t2;
  }
  function gl(t2, e2, n2) {
    t2.onHoverStateChange && (t2.hoverState || 0) !== n2 && t2.onHoverStateChange(e2), t2.hoverState = n2;
  }
  function yl(t2) {
    gl(t2, "emphasis", 2);
  }
  function vl(t2) {
    2 === t2.hoverState && gl(t2, "normal", 0);
  }
  function ml(t2) {
    gl(t2, "blur", 1);
  }
  function xl(t2) {
    1 === t2.hoverState && gl(t2, "normal", 0);
  }
  function _l(t2) {
    t2.selected = true;
  }
  function bl(t2) {
    t2.selected = false;
  }
  function wl(t2, e2, n2) {
    e2(t2, n2);
  }
  function Sl(t2, e2, n2) {
    wl(t2, e2, n2), t2.isGroup && t2.traverse(function(t3) {
      wl(t3, e2, n2);
    });
  }
  function Ml(t2, e2) {
    switch (e2) {
      case "emphasis":
        t2.hoverState = 2;
        break;
      case "normal":
        t2.hoverState = 0;
        break;
      case "blur":
        t2.hoverState = 1;
        break;
      case "select":
        t2.selected = true;
    }
  }
  function Il(t2, e2) {
    var n2 = this.states[t2];
    if (this.style) {
      if ("emphasis" === t2)
        return function(t3, e3, n3, i2) {
          var r2 = n3 && L(n3, "select") >= 0, o2 = false;
          if (t3 instanceof Ms) {
            var a2 = nl(t3), s2 = r2 && a2.selectFill || a2.normalFill, l2 = r2 && a2.selectStroke || a2.normalStroke;
            if (pl(s2) || pl(l2)) {
              var u2 = (i2 = i2 || {}).style || {};
              "inherit" === u2.fill ? (o2 = true, i2 = D({}, i2), (u2 = D({}, u2)).fill = s2) : !pl(u2.fill) && pl(s2) ? (o2 = true, i2 = D({}, i2), (u2 = D({}, u2)).fill = fl(s2)) : !pl(u2.stroke) && pl(l2) && (o2 || (i2 = D({}, i2), u2 = D({}, u2)), u2.stroke = fl(l2)), i2.style = u2;
            }
          }
          if (i2 && null == i2.z2) {
            o2 || (i2 = D({}, i2));
            var h2 = t3.z2EmphasisLift;
            i2.z2 = t3.z2 + (null != h2 ? h2 : al);
          }
          return i2;
        }(this, 0, e2, n2);
      if ("blur" === t2)
        return function(t3, e3, n3) {
          var i2 = L(t3.currentStates, e3) >= 0, r2 = t3.style.opacity, o2 = i2 ? null : function(t4, e4, n4, i3) {
            for (var r3 = t4.style, o3 = {}, a3 = 0; a3 < e4.length; a3++) {
              var s2 = e4[a3], l2 = r3[s2];
              o3[s2] = null == l2 ? i3 && i3[s2] : l2;
            }
            for (a3 = 0; a3 < t4.animators.length; a3++) {
              var u2 = t4.animators[a3];
              u2.__fromStateTransition && u2.__fromStateTransition.indexOf(n4) < 0 && "style" === u2.targetName && u2.saveTo(o3, e4);
            }
            return o3;
          }(t3, ["opacity"], e3, { opacity: 1 }), a2 = (n3 = n3 || {}).style || {};
          return null == a2.opacity && (n3 = D({}, n3), a2 = D({ opacity: i2 ? r2 : 0.1 * o2.opacity }, a2), n3.style = a2), n3;
        }(this, t2, n2);
      if ("select" === t2)
        return function(t3, e3, n3) {
          if (n3 && null == n3.z2) {
            n3 = D({}, n3);
            var i2 = t3.z2SelectLift;
            n3.z2 = t3.z2 + (null != i2 ? i2 : 9);
          }
          return n3;
        }(this, 0, n2);
    }
    return n2;
  }
  function Tl(t2) {
    t2.stateProxy = Il;
    var e2 = t2.getTextContent(), n2 = t2.getTextGuideLine();
    e2 && (e2.stateProxy = Il), n2 && (n2.stateProxy = Il);
  }
  function Cl(t2, e2) {
    !Nl(t2, e2) && !t2.__highByOuter && Sl(t2, yl);
  }
  function Dl(t2, e2) {
    !Nl(t2, e2) && !t2.__highByOuter && Sl(t2, vl);
  }
  function Al(t2, e2) {
    t2.__highByOuter |= 1 << (e2 || 0), Sl(t2, yl);
  }
  function kl(t2, e2) {
    !(t2.__highByOuter &= ~(1 << (e2 || 0))) && Sl(t2, vl);
  }
  function Ll(t2) {
    Sl(t2, ml);
  }
  function Pl(t2) {
    Sl(t2, xl);
  }
  function Ol(t2) {
    Sl(t2, _l);
  }
  function Rl(t2) {
    Sl(t2, bl);
  }
  function Nl(t2, e2) {
    return t2.__highDownSilentOnTouch && e2.zrByTouch;
  }
  function El(t2) {
    var e2 = t2.getModel(), n2 = [], i2 = [];
    e2.eachComponent(function(e3, r2) {
      var o2 = il(r2), a2 = "series" === e3, s2 = a2 ? t2.getViewOfSeriesModel(r2) : t2.getViewOfComponentModel(r2);
      !a2 && i2.push(s2), o2.isBlured && (s2.group.traverse(function(t3) {
        xl(t3);
      }), a2 && n2.push(r2)), o2.isBlured = false;
    }), N(i2, function(t3) {
      t3 && t3.toggleBlurSeries && t3.toggleBlurSeries(n2, false, e2);
    });
  }
  function zl(t2, e2, n2, i2) {
    var r2 = i2.getModel();
    function o2(t3, e3) {
      for (var n3 = 0; n3 < e3.length; n3++) {
        var i3 = t3.getItemGraphicEl(e3[n3]);
        i3 && Pl(i3);
      }
    }
    if (n2 = n2 || "coordinateSystem", null != t2 && e2 && "none" !== e2) {
      var a2 = r2.getSeriesByIndex(t2), s2 = a2.coordinateSystem;
      s2 && s2.master && (s2 = s2.master);
      var l2 = [];
      r2.eachSeries(function(t3) {
        var r3 = a2 === t3, u2 = t3.coordinateSystem;
        if (u2 && u2.master && (u2 = u2.master), !("series" === n2 && !r3 || "coordinateSystem" === n2 && !(u2 && s2 ? u2 === s2 : r3) || "series" === e2 && r3)) {
          if (i2.getViewOfSeriesModel(t3).group.traverse(function(t4) {
            t4.__highByOuter && r3 && "self" === e2 || ml(t4);
          }), R(e2))
            o2(t3.getData(), e2);
          else if (j(e2))
            for (var h2 = F(e2), c2 = 0; c2 < h2.length; c2++)
              o2(t3.getData(h2[c2]), e2[h2[c2]]);
          l2.push(t3), il(t3).isBlured = true;
        }
      }), r2.eachComponent(function(t3, e3) {
        if ("series" !== t3) {
          var n3 = i2.getViewOfComponentModel(e3);
          n3 && n3.toggleBlurSeries && n3.toggleBlurSeries(l2, true, r2);
        }
      });
    }
  }
  function Vl(t2, e2, n2) {
    if (null != t2 && null != e2) {
      var i2 = n2.getModel().getComponent(t2, e2);
      if (i2) {
        il(i2).isBlured = true;
        var r2 = n2.getViewOfComponentModel(i2);
        r2 && r2.focusBlurEnabled && r2.group.traverse(function(t3) {
          ml(t3);
        });
      }
    }
  }
  function Bl(t2, e2, n2, i2) {
    var r2 = { focusSelf: false, dispatchers: null };
    if (null == t2 || "series" === t2 || null == e2 || null == n2)
      return r2;
    var o2 = i2.getModel().getComponent(t2, e2);
    if (!o2)
      return r2;
    var a2 = i2.getViewOfComponentModel(o2);
    if (!a2 || !a2.findHighDownDispatchers)
      return r2;
    for (var s2, l2 = a2.findHighDownDispatchers(n2), u2 = 0; u2 < l2.length; u2++)
      if ("self" === Js(l2[u2]).focus) {
        s2 = true;
        break;
      }
    return { focusSelf: s2, dispatchers: l2 };
  }
  function Fl(t2) {
    N(t2.getAllData(), function(e2) {
      var n2 = e2.data, i2 = e2.type;
      n2.eachItemGraphicEl(function(e3, n3) {
        t2.isSelected(n3, i2) ? Ol(e3) : Rl(e3);
      });
    });
  }
  function Gl(t2) {
    var e2 = [];
    return t2.eachSeries(function(t3) {
      N(t3.getAllData(), function(n2) {
        n2.data;
        var i2 = n2.type, r2 = t3.getSelectedDataIndices();
        if (r2.length > 0) {
          var o2 = { dataIndex: r2, seriesIndex: t3.seriesIndex };
          null != i2 && (o2.dataType = i2), e2.push(o2);
        }
      });
    }), e2;
  }
  function Wl(t2, e2, n2) {
    jl(t2, true), Sl(t2, Tl), Yl(t2, e2, n2);
  }
  function Hl(t2, e2, n2, i2) {
    i2 ? function(t3) {
      jl(t3, false);
    }(t2) : Wl(t2, e2, n2);
  }
  function Yl(t2, e2, n2) {
    var i2 = Js(t2);
    null != e2 ? (i2.focus = e2, i2.blurScope = n2) : i2.focus && (i2.focus = null);
  }
  var Xl = ["emphasis", "blur", "select"];
  var Ul = { itemStyle: "getItemStyle", lineStyle: "getLineStyle", areaStyle: "getAreaStyle" };
  function Zl(t2, e2, n2, i2) {
    n2 = n2 || "itemStyle";
    for (var r2 = 0; r2 < Xl.length; r2++) {
      var o2 = Xl[r2], a2 = e2.getModel([o2, n2]);
      t2.ensureState(o2).style = i2 ? i2(a2) : a2[Ul[n2]]();
    }
  }
  function jl(t2, e2) {
    var n2 = false === e2, i2 = t2;
    t2.highDownSilentOnTouch && (i2.__highDownSilentOnTouch = t2.highDownSilentOnTouch), n2 && !i2.__highDownDispatcher || (i2.__highByOuter = i2.__highByOuter || 0, i2.__highDownDispatcher = !n2);
  }
  function ql(t2) {
    return !(!t2 || !t2.__highDownDispatcher);
  }
  function Kl(t2) {
    var e2 = t2.type;
    return e2 === ul || e2 === hl || e2 === cl;
  }
  function $l(t2) {
    var e2 = t2.type;
    return e2 === sl || e2 === ll;
  }
  var Jl = rs.CMD;
  var Ql = [[], [], []];
  var tu = Math.sqrt;
  var eu = Math.atan2;
  function nu(t2, e2) {
    if (e2) {
      var n2, i2, r2, o2, a2, s2, l2 = t2.data, u2 = t2.len(), h2 = Jl.M, c2 = Jl.C, p2 = Jl.L, d2 = Jl.R, f2 = Jl.A, g2 = Jl.Q;
      for (r2 = 0, o2 = 0; r2 < u2; ) {
        switch (n2 = l2[r2++], o2 = r2, i2 = 0, n2) {
          case h2:
          case p2:
            i2 = 1;
            break;
          case c2:
            i2 = 3;
            break;
          case g2:
            i2 = 2;
            break;
          case f2:
            var y2 = e2[4], v2 = e2[5], m2 = tu(e2[0] * e2[0] + e2[1] * e2[1]), x2 = tu(e2[2] * e2[2] + e2[3] * e2[3]), _2 = eu(-e2[1] / x2, e2[0] / m2);
            l2[r2] *= m2, l2[r2++] += y2, l2[r2] *= x2, l2[r2++] += v2, l2[r2++] *= m2, l2[r2++] *= x2, l2[r2++] += _2, l2[r2++] += _2, o2 = r2 += 2;
            break;
          case d2:
            s2[0] = l2[r2++], s2[1] = l2[r2++], Gt(s2, s2, e2), l2[o2++] = s2[0], l2[o2++] = s2[1], s2[0] += l2[r2++], s2[1] += l2[r2++], Gt(s2, s2, e2), l2[o2++] = s2[0], l2[o2++] = s2[1];
        }
        for (a2 = 0; a2 < i2; a2++) {
          var b2 = Ql[a2];
          b2[0] = l2[r2++], b2[1] = l2[r2++], Gt(b2, b2, e2), l2[o2++] = b2[0], l2[o2++] = b2[1];
        }
      }
      t2.increaseVersion();
    }
  }
  var iu = Math.sqrt;
  var ru = Math.sin;
  var ou = Math.cos;
  var au = Math.PI;
  function su(t2) {
    return Math.sqrt(t2[0] * t2[0] + t2[1] * t2[1]);
  }
  function lu(t2, e2) {
    return (t2[0] * e2[0] + t2[1] * e2[1]) / (su(t2) * su(e2));
  }
  function uu(t2, e2) {
    return (t2[0] * e2[1] < t2[1] * e2[0] ? -1 : 1) * Math.acos(lu(t2, e2));
  }
  function hu(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2, h2) {
    var c2 = l2 * (au / 180), p2 = ou(c2) * (t2 - n2) / 2 + ru(c2) * (e2 - i2) / 2, d2 = -1 * ru(c2) * (t2 - n2) / 2 + ou(c2) * (e2 - i2) / 2, f2 = p2 * p2 / (a2 * a2) + d2 * d2 / (s2 * s2);
    f2 > 1 && (a2 *= iu(f2), s2 *= iu(f2));
    var g2 = (r2 === o2 ? -1 : 1) * iu((a2 * a2 * (s2 * s2) - a2 * a2 * (d2 * d2) - s2 * s2 * (p2 * p2)) / (a2 * a2 * (d2 * d2) + s2 * s2 * (p2 * p2))) || 0, y2 = g2 * a2 * d2 / s2, v2 = g2 * -s2 * p2 / a2, m2 = (t2 + n2) / 2 + ou(c2) * y2 - ru(c2) * v2, x2 = (e2 + i2) / 2 + ru(c2) * y2 + ou(c2) * v2, _2 = uu([1, 0], [(p2 - y2) / a2, (d2 - v2) / s2]), b2 = [(p2 - y2) / a2, (d2 - v2) / s2], w2 = [(-1 * p2 - y2) / a2, (-1 * d2 - v2) / s2], S2 = uu(b2, w2);
    if (lu(b2, w2) <= -1 && (S2 = au), lu(b2, w2) >= 1 && (S2 = 0), S2 < 0) {
      var M2 = Math.round(S2 / au * 1e6) / 1e6;
      S2 = 2 * au + M2 % 2 * au;
    }
    h2.addData(u2, m2, x2, a2, s2, _2, S2, c2, o2);
  }
  var cu = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi;
  var pu = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  var du = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.applyTransform = function(t3) {
    }, n2;
  }(Ms);
  function fu(t2) {
    return null != t2.setData;
  }
  function gu(t2, e2) {
    var n2 = function(t3) {
      var e3 = new rs();
      if (!t3)
        return e3;
      var n3, i3 = 0, r2 = 0, o2 = i3, a2 = r2, s2 = rs.CMD, l2 = t3.match(cu);
      if (!l2)
        return e3;
      for (var u2 = 0; u2 < l2.length; u2++) {
        for (var h2 = l2[u2], c2 = h2.charAt(0), p2 = void 0, d2 = h2.match(pu) || [], f2 = d2.length, g2 = 0; g2 < f2; g2++)
          d2[g2] = parseFloat(d2[g2]);
        for (var y2 = 0; y2 < f2; ) {
          var v2 = void 0, m2 = void 0, x2 = void 0, _2 = void 0, b2 = void 0, w2 = void 0, S2 = void 0, M2 = i3, I2 = r2, T2 = void 0, C2 = void 0;
          switch (c2) {
            case "l":
              i3 += d2[y2++], r2 += d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "L":
              i3 = d2[y2++], r2 = d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "m":
              i3 += d2[y2++], r2 += d2[y2++], p2 = s2.M, e3.addData(p2, i3, r2), o2 = i3, a2 = r2, c2 = "l";
              break;
            case "M":
              i3 = d2[y2++], r2 = d2[y2++], p2 = s2.M, e3.addData(p2, i3, r2), o2 = i3, a2 = r2, c2 = "L";
              break;
            case "h":
              i3 += d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "H":
              i3 = d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "v":
              r2 += d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "V":
              r2 = d2[y2++], p2 = s2.L, e3.addData(p2, i3, r2);
              break;
            case "C":
              p2 = s2.C, e3.addData(p2, d2[y2++], d2[y2++], d2[y2++], d2[y2++], d2[y2++], d2[y2++]), i3 = d2[y2 - 2], r2 = d2[y2 - 1];
              break;
            case "c":
              p2 = s2.C, e3.addData(p2, d2[y2++] + i3, d2[y2++] + r2, d2[y2++] + i3, d2[y2++] + r2, d2[y2++] + i3, d2[y2++] + r2), i3 += d2[y2 - 2], r2 += d2[y2 - 1];
              break;
            case "S":
              v2 = i3, m2 = r2, T2 = e3.len(), C2 = e3.data, n3 === s2.C && (v2 += i3 - C2[T2 - 4], m2 += r2 - C2[T2 - 3]), p2 = s2.C, M2 = d2[y2++], I2 = d2[y2++], i3 = d2[y2++], r2 = d2[y2++], e3.addData(p2, v2, m2, M2, I2, i3, r2);
              break;
            case "s":
              v2 = i3, m2 = r2, T2 = e3.len(), C2 = e3.data, n3 === s2.C && (v2 += i3 - C2[T2 - 4], m2 += r2 - C2[T2 - 3]), p2 = s2.C, M2 = i3 + d2[y2++], I2 = r2 + d2[y2++], i3 += d2[y2++], r2 += d2[y2++], e3.addData(p2, v2, m2, M2, I2, i3, r2);
              break;
            case "Q":
              M2 = d2[y2++], I2 = d2[y2++], i3 = d2[y2++], r2 = d2[y2++], p2 = s2.Q, e3.addData(p2, M2, I2, i3, r2);
              break;
            case "q":
              M2 = d2[y2++] + i3, I2 = d2[y2++] + r2, i3 += d2[y2++], r2 += d2[y2++], p2 = s2.Q, e3.addData(p2, M2, I2, i3, r2);
              break;
            case "T":
              v2 = i3, m2 = r2, T2 = e3.len(), C2 = e3.data, n3 === s2.Q && (v2 += i3 - C2[T2 - 4], m2 += r2 - C2[T2 - 3]), i3 = d2[y2++], r2 = d2[y2++], p2 = s2.Q, e3.addData(p2, v2, m2, i3, r2);
              break;
            case "t":
              v2 = i3, m2 = r2, T2 = e3.len(), C2 = e3.data, n3 === s2.Q && (v2 += i3 - C2[T2 - 4], m2 += r2 - C2[T2 - 3]), i3 += d2[y2++], r2 += d2[y2++], p2 = s2.Q, e3.addData(p2, v2, m2, i3, r2);
              break;
            case "A":
              x2 = d2[y2++], _2 = d2[y2++], b2 = d2[y2++], w2 = d2[y2++], S2 = d2[y2++], hu(M2 = i3, I2 = r2, i3 = d2[y2++], r2 = d2[y2++], w2, S2, x2, _2, b2, p2 = s2.A, e3);
              break;
            case "a":
              x2 = d2[y2++], _2 = d2[y2++], b2 = d2[y2++], w2 = d2[y2++], S2 = d2[y2++], hu(M2 = i3, I2 = r2, i3 += d2[y2++], r2 += d2[y2++], w2, S2, x2, _2, b2, p2 = s2.A, e3);
          }
        }
        "z" !== c2 && "Z" !== c2 || (p2 = s2.Z, e3.addData(p2), i3 = o2, r2 = a2), n3 = p2;
      }
      return e3.toStatic(), e3;
    }(t2), i2 = D({}, e2);
    return i2.buildPath = function(t3) {
      if (fu(t3)) {
        t3.setData(n2.data), (e3 = t3.getContext()) && t3.rebuildPath(e3, 1);
      } else {
        var e3 = t3;
        n2.rebuildPath(e3, 1);
      }
    }, i2.applyTransform = function(t3) {
      nu(n2, t3), this.dirtyShape();
    }, i2;
  }
  function yu(t2, e2) {
    return new du(gu(t2, e2));
  }
  function vu(t2, e2) {
    e2 = e2 || {};
    var n2 = new Ms();
    return t2.shape && n2.setShape(t2.shape), n2.setStyle(t2.style), e2.bakeTransform ? nu(n2.path, t2.getComputedTransform()) : e2.toLocal ? n2.setLocalTransform(t2.getComputedTransform()) : n2.copyTransform(t2), n2.buildPath = t2.buildPath, n2.applyTransform = n2.applyTransform, n2.z = t2.z, n2.z2 = t2.z2, n2.zlevel = t2.zlevel, n2;
  }
  var mu = function() {
    this.cx = 0, this.cy = 0, this.r = 0;
  };
  var xu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new mu();
    }, n2.prototype.buildPath = function(t3, e2) {
      t3.moveTo(e2.cx + e2.r, e2.cy), t3.arc(e2.cx, e2.cy, e2.r, 0, 2 * Math.PI);
    }, n2;
  }(Ms);
  xu.prototype.type = "circle";
  var _u = function() {
    this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
  };
  var bu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new _u();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = 0.5522848, i2 = e2.cx, r2 = e2.cy, o2 = e2.rx, a2 = e2.ry, s2 = o2 * n3, l2 = a2 * n3;
      t3.moveTo(i2 - o2, r2), t3.bezierCurveTo(i2 - o2, r2 - l2, i2 - s2, r2 - a2, i2, r2 - a2), t3.bezierCurveTo(i2 + s2, r2 - a2, i2 + o2, r2 - l2, i2 + o2, r2), t3.bezierCurveTo(i2 + o2, r2 + l2, i2 + s2, r2 + a2, i2, r2 + a2), t3.bezierCurveTo(i2 - s2, r2 + a2, i2 - o2, r2 + l2, i2 - o2, r2), t3.closePath();
    }, n2;
  }(Ms);
  bu.prototype.type = "ellipse";
  var wu = Math.PI;
  var Su = 2 * wu;
  var Mu = Math.sin;
  var Iu = Math.cos;
  var Tu = Math.acos;
  var Cu = Math.atan2;
  var Du = Math.abs;
  var Au = Math.sqrt;
  var ku = Math.max;
  var Lu = Math.min;
  var Pu = 1e-4;
  function Ou(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = t2 - n2, l2 = e2 - i2, u2 = (a2 ? o2 : -o2) / Au(s2 * s2 + l2 * l2), h2 = u2 * l2, c2 = -u2 * s2, p2 = t2 + h2, d2 = e2 + c2, f2 = n2 + h2, g2 = i2 + c2, y2 = (p2 + f2) / 2, v2 = (d2 + g2) / 2, m2 = f2 - p2, x2 = g2 - d2, _2 = m2 * m2 + x2 * x2, b2 = r2 - o2, w2 = p2 * g2 - f2 * d2, S2 = (x2 < 0 ? -1 : 1) * Au(ku(0, b2 * b2 * _2 - w2 * w2)), M2 = (w2 * x2 - m2 * S2) / _2, I2 = (-w2 * m2 - x2 * S2) / _2, T2 = (w2 * x2 + m2 * S2) / _2, C2 = (-w2 * m2 + x2 * S2) / _2, D2 = M2 - y2, A2 = I2 - v2, k2 = T2 - y2, L2 = C2 - v2;
    return D2 * D2 + A2 * A2 > k2 * k2 + L2 * L2 && (M2 = T2, I2 = C2), { cx: M2, cy: I2, x0: -h2, y0: -c2, x1: M2 * (r2 / b2 - 1), y1: I2 * (r2 / b2 - 1) };
  }
  function Ru(t2, e2) {
    var n2, i2 = ku(e2.r, 0), r2 = ku(e2.r0 || 0, 0), o2 = i2 > 0;
    if (o2 || r2 > 0) {
      if (o2 || (i2 = r2, r2 = 0), r2 > i2) {
        var a2 = i2;
        i2 = r2, r2 = a2;
      }
      var s2 = e2.startAngle, l2 = e2.endAngle;
      if (!isNaN(s2) && !isNaN(l2)) {
        var u2 = e2.cx, h2 = e2.cy, c2 = !!e2.clockwise, p2 = Du(l2 - s2), d2 = p2 > Su && p2 % Su;
        if (d2 > Pu && (p2 = d2), i2 > Pu)
          if (p2 > Su - Pu)
            t2.moveTo(u2 + i2 * Iu(s2), h2 + i2 * Mu(s2)), t2.arc(u2, h2, i2, s2, l2, !c2), r2 > Pu && (t2.moveTo(u2 + r2 * Iu(l2), h2 + r2 * Mu(l2)), t2.arc(u2, h2, r2, l2, s2, c2));
          else {
            var f2 = void 0, g2 = void 0, y2 = void 0, v2 = void 0, m2 = void 0, x2 = void 0, _2 = void 0, b2 = void 0, w2 = void 0, S2 = void 0, M2 = void 0, I2 = void 0, T2 = void 0, C2 = void 0, D2 = void 0, A2 = void 0, k2 = i2 * Iu(s2), L2 = i2 * Mu(s2), P2 = r2 * Iu(l2), O2 = r2 * Mu(l2), R2 = p2 > Pu;
            if (R2) {
              var N2 = e2.cornerRadius;
              N2 && (n2 = function(t3) {
                var e3;
                if (H(t3)) {
                  var n3 = t3.length;
                  if (!n3)
                    return t3;
                  e3 = 1 === n3 ? [t3[0], t3[0], 0, 0] : 2 === n3 ? [t3[0], t3[0], t3[1], t3[1]] : 3 === n3 ? t3.concat(t3[2]) : t3;
                } else
                  e3 = [t3, t3, t3, t3];
                return e3;
              }(N2), f2 = n2[0], g2 = n2[1], y2 = n2[2], v2 = n2[3]);
              var E2 = Du(i2 - r2) / 2;
              if (m2 = Lu(E2, y2), x2 = Lu(E2, v2), _2 = Lu(E2, f2), b2 = Lu(E2, g2), M2 = w2 = ku(m2, x2), I2 = S2 = ku(_2, b2), (w2 > Pu || S2 > Pu) && (T2 = i2 * Iu(l2), C2 = i2 * Mu(l2), D2 = r2 * Iu(s2), A2 = r2 * Mu(s2), p2 < wu)) {
                var z2 = function(t3, e3, n3, i3, r3, o3, a3, s3) {
                  var l3 = n3 - t3, u3 = i3 - e3, h3 = a3 - r3, c3 = s3 - o3, p3 = c3 * l3 - h3 * u3;
                  if (!(p3 * p3 < Pu))
                    return [t3 + (p3 = (h3 * (e3 - o3) - c3 * (t3 - r3)) / p3) * l3, e3 + p3 * u3];
                }(k2, L2, D2, A2, T2, C2, P2, O2);
                if (z2) {
                  var V2 = k2 - z2[0], B2 = L2 - z2[1], F2 = T2 - z2[0], G2 = C2 - z2[1], W2 = 1 / Mu(Tu((V2 * F2 + B2 * G2) / (Au(V2 * V2 + B2 * B2) * Au(F2 * F2 + G2 * G2))) / 2), Y2 = Au(z2[0] * z2[0] + z2[1] * z2[1]);
                  M2 = Lu(w2, (i2 - Y2) / (W2 + 1)), I2 = Lu(S2, (r2 - Y2) / (W2 - 1));
                }
              }
            }
            if (R2)
              if (M2 > Pu) {
                var X2 = Lu(y2, M2), U2 = Lu(v2, M2), Z2 = Ou(D2, A2, k2, L2, i2, X2, c2), j2 = Ou(T2, C2, P2, O2, i2, U2, c2);
                t2.moveTo(u2 + Z2.cx + Z2.x0, h2 + Z2.cy + Z2.y0), M2 < w2 && X2 === U2 ? t2.arc(u2 + Z2.cx, h2 + Z2.cy, M2, Cu(Z2.y0, Z2.x0), Cu(j2.y0, j2.x0), !c2) : (X2 > 0 && t2.arc(u2 + Z2.cx, h2 + Z2.cy, X2, Cu(Z2.y0, Z2.x0), Cu(Z2.y1, Z2.x1), !c2), t2.arc(u2, h2, i2, Cu(Z2.cy + Z2.y1, Z2.cx + Z2.x1), Cu(j2.cy + j2.y1, j2.cx + j2.x1), !c2), U2 > 0 && t2.arc(u2 + j2.cx, h2 + j2.cy, U2, Cu(j2.y1, j2.x1), Cu(j2.y0, j2.x0), !c2));
              } else
                t2.moveTo(u2 + k2, h2 + L2), t2.arc(u2, h2, i2, s2, l2, !c2);
            else
              t2.moveTo(u2 + k2, h2 + L2);
            if (r2 > Pu && R2)
              if (I2 > Pu) {
                X2 = Lu(f2, I2), Z2 = Ou(P2, O2, T2, C2, r2, -(U2 = Lu(g2, I2)), c2), j2 = Ou(k2, L2, D2, A2, r2, -X2, c2);
                t2.lineTo(u2 + Z2.cx + Z2.x0, h2 + Z2.cy + Z2.y0), I2 < S2 && X2 === U2 ? t2.arc(u2 + Z2.cx, h2 + Z2.cy, I2, Cu(Z2.y0, Z2.x0), Cu(j2.y0, j2.x0), !c2) : (U2 > 0 && t2.arc(u2 + Z2.cx, h2 + Z2.cy, U2, Cu(Z2.y0, Z2.x0), Cu(Z2.y1, Z2.x1), !c2), t2.arc(u2, h2, r2, Cu(Z2.cy + Z2.y1, Z2.cx + Z2.x1), Cu(j2.cy + j2.y1, j2.cx + j2.x1), c2), X2 > 0 && t2.arc(u2 + j2.cx, h2 + j2.cy, X2, Cu(j2.y1, j2.x1), Cu(j2.y0, j2.x0), !c2));
              } else
                t2.lineTo(u2 + P2, h2 + O2), t2.arc(u2, h2, r2, l2, s2, c2);
            else
              t2.lineTo(u2 + P2, h2 + O2);
          }
        else
          t2.moveTo(u2, h2);
        t2.closePath();
      }
    }
  }
  var Nu = function() {
    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = true, this.cornerRadius = 0;
  };
  var Eu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new Nu();
    }, n2.prototype.buildPath = function(t3, e2) {
      Ru(t3, e2);
    }, n2.prototype.isZeroArea = function() {
      return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
    }, n2;
  }(Ms);
  Eu.prototype.type = "sector";
  var zu = function() {
    this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
  };
  var Vu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new zu();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.cx, i2 = e2.cy, r2 = 2 * Math.PI;
      t3.moveTo(n3 + e2.r, i2), t3.arc(n3, i2, e2.r, 0, r2, false), t3.moveTo(n3 + e2.r0, i2), t3.arc(n3, i2, e2.r0, 0, r2, true);
    }, n2;
  }(Ms);
  function Bu(t2, e2, n2) {
    var i2 = e2.smooth, r2 = e2.points;
    if (r2 && r2.length >= 2) {
      if (i2) {
        var o2 = function(t3, e3, n3, i3) {
          var r3, o3, a3, s3, l3 = [], u3 = [], h3 = [], c3 = [];
          if (i3) {
            a3 = [1 / 0, 1 / 0], s3 = [-1 / 0, -1 / 0];
            for (var p2 = 0, d2 = t3.length; p2 < d2; p2++)
              Wt(a3, a3, t3[p2]), Ht(s3, s3, t3[p2]);
            Wt(a3, a3, i3[0]), Ht(s3, s3, i3[1]);
          }
          for (p2 = 0, d2 = t3.length; p2 < d2; p2++) {
            var f2 = t3[p2];
            if (n3)
              r3 = t3[p2 ? p2 - 1 : d2 - 1], o3 = t3[(p2 + 1) % d2];
            else {
              if (0 === p2 || p2 === d2 - 1) {
                l3.push(It(t3[p2]));
                continue;
              }
              r3 = t3[p2 - 1], o3 = t3[p2 + 1];
            }
            At(u3, o3, r3), Rt(u3, u3, e3);
            var g2 = Et(f2, r3), y2 = Et(f2, o3), v2 = g2 + y2;
            0 !== v2 && (g2 /= v2, y2 /= v2), Rt(h3, u3, -g2), Rt(c3, u3, y2);
            var m2 = Ct([], f2, h3), x2 = Ct([], f2, c3);
            i3 && (Ht(m2, m2, a3), Wt(m2, m2, s3), Ht(x2, x2, a3), Wt(x2, x2, s3)), l3.push(m2), l3.push(x2);
          }
          return n3 && l3.push(l3.shift()), l3;
        }(r2, i2, n2, e2.smoothConstraint);
        t2.moveTo(r2[0][0], r2[0][1]);
        for (var a2 = r2.length, s2 = 0; s2 < (n2 ? a2 : a2 - 1); s2++) {
          var l2 = o2[2 * s2], u2 = o2[2 * s2 + 1], h2 = r2[(s2 + 1) % a2];
          t2.bezierCurveTo(l2[0], l2[1], u2[0], u2[1], h2[0], h2[1]);
        }
      } else {
        t2.moveTo(r2[0][0], r2[0][1]);
        s2 = 1;
        for (var c2 = r2.length; s2 < c2; s2++)
          t2.lineTo(r2[s2][0], r2[s2][1]);
      }
      n2 && t2.closePath();
    }
  }
  Vu.prototype.type = "ring";
  var Fu = function() {
    this.points = null, this.smooth = 0, this.smoothConstraint = null;
  };
  var Gu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new Fu();
    }, n2.prototype.buildPath = function(t3, e2) {
      Bu(t3, e2, true);
    }, n2;
  }(Ms);
  Gu.prototype.type = "polygon";
  var Wu = function() {
    this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
  };
  var Hu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new Wu();
    }, n2.prototype.buildPath = function(t3, e2) {
      Bu(t3, e2, false);
    }, n2;
  }(Ms);
  Hu.prototype.type = "polyline";
  var Yu = {};
  var Xu = function() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
  };
  var Uu = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new Xu();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3, i2, r2, o2;
      if (this.subPixelOptimize) {
        var a2 = Ls(Yu, e2, this.style);
        n3 = a2.x1, i2 = a2.y1, r2 = a2.x2, o2 = a2.y2;
      } else
        n3 = e2.x1, i2 = e2.y1, r2 = e2.x2, o2 = e2.y2;
      var s2 = e2.percent;
      0 !== s2 && (t3.moveTo(n3, i2), s2 < 1 && (r2 = n3 * (1 - s2) + r2 * s2, o2 = i2 * (1 - s2) + o2 * s2), t3.lineTo(r2, o2));
    }, n2.prototype.pointAt = function(t3) {
      var e2 = this.shape;
      return [e2.x1 * (1 - t3) + e2.x2 * t3, e2.y1 * (1 - t3) + e2.y2 * t3];
    }, n2;
  }(Ms);
  Uu.prototype.type = "line";
  var Zu = [];
  var ju = function() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
  };
  function qu(t2, e2, n2) {
    var i2 = t2.cpx2, r2 = t2.cpy2;
    return null != i2 || null != r2 ? [(n2 ? mn : vn)(t2.x1, t2.cpx1, t2.cpx2, t2.x2, e2), (n2 ? mn : vn)(t2.y1, t2.cpy1, t2.cpy2, t2.y2, e2)] : [(n2 ? In : Mn)(t2.x1, t2.cpx1, t2.x2, e2), (n2 ? In : Mn)(t2.y1, t2.cpy1, t2.y2, e2)];
  }
  var Ku = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new ju();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.x1, i2 = e2.y1, r2 = e2.x2, o2 = e2.y2, a2 = e2.cpx1, s2 = e2.cpy1, l2 = e2.cpx2, u2 = e2.cpy2, h2 = e2.percent;
      0 !== h2 && (t3.moveTo(n3, i2), null == l2 || null == u2 ? (h2 < 1 && (Cn(n3, a2, r2, h2, Zu), a2 = Zu[1], r2 = Zu[2], Cn(i2, s2, o2, h2, Zu), s2 = Zu[1], o2 = Zu[2]), t3.quadraticCurveTo(a2, s2, r2, o2)) : (h2 < 1 && (bn(n3, a2, l2, r2, h2, Zu), a2 = Zu[1], l2 = Zu[2], r2 = Zu[3], bn(i2, s2, u2, o2, h2, Zu), s2 = Zu[1], u2 = Zu[2], o2 = Zu[3]), t3.bezierCurveTo(a2, s2, l2, u2, r2, o2)));
    }, n2.prototype.pointAt = function(t3) {
      return qu(this.shape, t3, false);
    }, n2.prototype.tangentAt = function(t3) {
      var e2 = qu(this.shape, t3, true);
      return Nt(e2, e2);
    }, n2;
  }(Ms);
  Ku.prototype.type = "bezier-curve";
  var $u = function() {
    this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = true;
  };
  var Ju = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new $u();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.cx, i2 = e2.cy, r2 = Math.max(e2.r, 0), o2 = e2.startAngle, a2 = e2.endAngle, s2 = e2.clockwise, l2 = Math.cos(o2), u2 = Math.sin(o2);
      t3.moveTo(l2 * r2 + n3, u2 * r2 + i2), t3.arc(n3, i2, r2, o2, a2, !s2);
    }, n2;
  }(Ms);
  Ju.prototype.type = "arc";
  var Qu = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "compound", e2;
    }
    return e(n2, t2), n2.prototype._updatePathDirty = function() {
      for (var t3 = this.shape.paths, e2 = this.shapeChanged(), n3 = 0; n3 < t3.length; n3++)
        e2 = e2 || t3[n3].shapeChanged();
      e2 && this.dirtyShape();
    }, n2.prototype.beforeBrush = function() {
      this._updatePathDirty();
      for (var t3 = this.shape.paths || [], e2 = this.getGlobalScale(), n3 = 0; n3 < t3.length; n3++)
        t3[n3].path || t3[n3].createPathProxy(), t3[n3].path.setScale(e2[0], e2[1], t3[n3].segmentIgnoreThreshold);
    }, n2.prototype.buildPath = function(t3, e2) {
      for (var n3 = e2.paths || [], i2 = 0; i2 < n3.length; i2++)
        n3[i2].buildPath(t3, n3[i2].shape, true);
    }, n2.prototype.afterBrush = function() {
      for (var t3 = this.shape.paths || [], e2 = 0; e2 < t3.length; e2++)
        t3[e2].pathUpdated();
    }, n2.prototype.getBoundingRect = function() {
      return this._updatePathDirty.call(this), Ms.prototype.getBoundingRect.call(this);
    }, n2;
  }(Ms);
  var th = function() {
    function t2(t3) {
      this.colorStops = t3 || [];
    }
    return t2.prototype.addColorStop = function(t3, e2) {
      this.colorStops.push({ offset: t3, color: e2 });
    }, t2;
  }();
  var eh = function(t2) {
    function n2(e2, n3, i2, r2, o2, a2) {
      var s2 = t2.call(this, o2) || this;
      return s2.x = null == e2 ? 0 : e2, s2.y = null == n3 ? 0 : n3, s2.x2 = null == i2 ? 1 : i2, s2.y2 = null == r2 ? 0 : r2, s2.type = "linear", s2.global = a2 || false, s2;
    }
    return e(n2, t2), n2;
  }(th);
  var nh = function(t2) {
    function n2(e2, n3, i2, r2, o2) {
      var a2 = t2.call(this, r2) || this;
      return a2.x = null == e2 ? 0.5 : e2, a2.y = null == n3 ? 0.5 : n3, a2.r = null == i2 ? 0.5 : i2, a2.type = "radial", a2.global = o2 || false, a2;
    }
    return e(n2, t2), n2;
  }(th);
  var ih = [0, 0];
  var rh = [0, 0];
  var oh = new Ce();
  var ah = new Ce();
  var sh = function() {
    function t2(t3, e2) {
      this._corners = [], this._axes = [], this._origin = [0, 0];
      for (var n2 = 0; n2 < 4; n2++)
        this._corners[n2] = new Ce();
      for (n2 = 0; n2 < 2; n2++)
        this._axes[n2] = new Ce();
      t3 && this.fromBoundingRect(t3, e2);
    }
    return t2.prototype.fromBoundingRect = function(t3, e2) {
      var n2 = this._corners, i2 = this._axes, r2 = t3.x, o2 = t3.y, a2 = r2 + t3.width, s2 = o2 + t3.height;
      if (n2[0].set(r2, o2), n2[1].set(a2, o2), n2[2].set(a2, s2), n2[3].set(r2, s2), e2)
        for (var l2 = 0; l2 < 4; l2++)
          n2[l2].transform(e2);
      Ce.sub(i2[0], n2[1], n2[0]), Ce.sub(i2[1], n2[3], n2[0]), i2[0].normalize(), i2[1].normalize();
      for (l2 = 0; l2 < 2; l2++)
        this._origin[l2] = i2[l2].dot(n2[0]);
    }, t2.prototype.intersect = function(t3, e2) {
      var n2 = true, i2 = !e2;
      return oh.set(1 / 0, 1 / 0), ah.set(0, 0), !this._intersectCheckOneSide(this, t3, oh, ah, i2, 1) && (n2 = false, i2) || !this._intersectCheckOneSide(t3, this, oh, ah, i2, -1) && (n2 = false, i2) || i2 || Ce.copy(e2, n2 ? oh : ah), n2;
    }, t2.prototype._intersectCheckOneSide = function(t3, e2, n2, i2, r2, o2) {
      for (var a2 = true, s2 = 0; s2 < 2; s2++) {
        var l2 = this._axes[s2];
        if (this._getProjMinMaxOnAxis(s2, t3._corners, ih), this._getProjMinMaxOnAxis(s2, e2._corners, rh), ih[1] < rh[0] || ih[0] > rh[1]) {
          if (a2 = false, r2)
            return a2;
          var u2 = Math.abs(rh[0] - ih[1]), h2 = Math.abs(ih[0] - rh[1]);
          Math.min(u2, h2) > i2.len() && (u2 < h2 ? Ce.scale(i2, l2, -u2 * o2) : Ce.scale(i2, l2, h2 * o2));
        } else if (n2) {
          u2 = Math.abs(rh[0] - ih[1]), h2 = Math.abs(ih[0] - rh[1]);
          Math.min(u2, h2) < n2.len() && (u2 < h2 ? Ce.scale(n2, l2, u2 * o2) : Ce.scale(n2, l2, -h2 * o2));
        }
      }
      return a2;
    }, t2.prototype._getProjMinMaxOnAxis = function(t3, e2, n2) {
      for (var i2 = this._axes[t3], r2 = this._origin, o2 = e2[0].dot(i2) + r2[t3], a2 = o2, s2 = o2, l2 = 1; l2 < e2.length; l2++) {
        var u2 = e2[l2].dot(i2) + r2[t3];
        a2 = Math.min(u2, a2), s2 = Math.max(u2, s2);
      }
      n2[0] = a2, n2[1] = s2;
    }, t2;
  }();
  var lh = [];
  var uh = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.notClear = true, e2.incremental = true, e2._displayables = [], e2._temporaryDisplayables = [], e2._cursor = 0, e2;
    }
    return e(n2, t2), n2.prototype.traverse = function(t3, e2) {
      t3.call(e2, this);
    }, n2.prototype.useStyle = function() {
      this.style = {};
    }, n2.prototype.getCursor = function() {
      return this._cursor;
    }, n2.prototype.innerAfterBrush = function() {
      this._cursor = this._displayables.length;
    }, n2.prototype.clearDisplaybles = function() {
      this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = false;
    }, n2.prototype.clearTemporalDisplayables = function() {
      this._temporaryDisplayables = [];
    }, n2.prototype.addDisplayable = function(t3, e2) {
      e2 ? this._temporaryDisplayables.push(t3) : this._displayables.push(t3), this.markRedraw();
    }, n2.prototype.addDisplayables = function(t3, e2) {
      e2 = e2 || false;
      for (var n3 = 0; n3 < t3.length; n3++)
        this.addDisplayable(t3[n3], e2);
    }, n2.prototype.getDisplayables = function() {
      return this._displayables;
    }, n2.prototype.getTemporalDisplayables = function() {
      return this._temporaryDisplayables;
    }, n2.prototype.eachPendingDisplayable = function(t3) {
      for (var e2 = this._cursor; e2 < this._displayables.length; e2++)
        t3 && t3(this._displayables[e2]);
      for (e2 = 0; e2 < this._temporaryDisplayables.length; e2++)
        t3 && t3(this._temporaryDisplayables[e2]);
    }, n2.prototype.update = function() {
      this.updateTransform();
      for (var t3 = this._cursor; t3 < this._displayables.length; t3++) {
        (e2 = this._displayables[t3]).parent = this, e2.update(), e2.parent = null;
      }
      for (t3 = 0; t3 < this._temporaryDisplayables.length; t3++) {
        var e2;
        (e2 = this._temporaryDisplayables[t3]).parent = this, e2.update(), e2.parent = null;
      }
    }, n2.prototype.getBoundingRect = function() {
      if (!this._rect) {
        for (var t3 = new Ee(1 / 0, 1 / 0, -1 / 0, -1 / 0), e2 = 0; e2 < this._displayables.length; e2++) {
          var n3 = this._displayables[e2], i2 = n3.getBoundingRect().clone();
          n3.needLocalTransform() && i2.applyTransform(n3.getLocalTransform(lh)), t3.union(i2);
        }
        this._rect = t3;
      }
      return this._rect;
    }, n2.prototype.contain = function(t3, e2) {
      var n3 = this.transformCoordToLocal(t3, e2);
      if (this.getBoundingRect().contain(n3[0], n3[1]))
        for (var i2 = 0; i2 < this._displayables.length; i2++) {
          if (this._displayables[i2].contain(t3, e2))
            return true;
        }
      return false;
    }, n2;
  }(wa);
  var hh = Po();
  function ch(t2, e2, n2, i2, r2) {
    var o2;
    if (e2 && e2.ecModel) {
      var a2 = e2.ecModel.getUpdatePayload();
      o2 = a2 && a2.animation;
    }
    var s2 = "update" === t2;
    if (e2 && e2.isAnimationEnabled()) {
      var l2 = void 0, u2 = void 0, h2 = void 0;
      return i2 ? (l2 = it(i2.duration, 200), u2 = it(i2.easing, "cubicOut"), h2 = 0) : (l2 = e2.getShallow(s2 ? "animationDurationUpdate" : "animationDuration"), u2 = e2.getShallow(s2 ? "animationEasingUpdate" : "animationEasing"), h2 = e2.getShallow(s2 ? "animationDelayUpdate" : "animationDelay")), o2 && (null != o2.duration && (l2 = o2.duration), null != o2.easing && (u2 = o2.easing), null != o2.delay && (h2 = o2.delay)), Y(h2) && (h2 = h2(n2, r2)), Y(l2) && (l2 = l2(n2)), { duration: l2 || 0, delay: h2, easing: u2 };
    }
    return null;
  }
  function ph(t2, e2, n2, i2, r2, o2, a2) {
    var s2, l2 = false;
    Y(r2) ? (a2 = o2, o2 = r2, r2 = null) : j(r2) && (o2 = r2.cb, a2 = r2.during, l2 = r2.isFrom, s2 = r2.removeOpt, r2 = r2.dataIndex);
    var u2 = "leave" === t2;
    u2 || e2.stopAnimation("leave");
    var h2 = ch(t2, i2, r2, u2 ? s2 || {} : null, i2 && i2.getAnimationDelayParams ? i2.getAnimationDelayParams(e2, r2) : null);
    if (h2 && h2.duration > 0) {
      var c2 = { duration: h2.duration, delay: h2.delay || 0, easing: h2.easing, done: o2, force: !!o2 || !!a2, setToFinal: !u2, scope: t2, during: a2 };
      l2 ? e2.animateFrom(n2, c2) : e2.animateTo(n2, c2);
    } else
      e2.stopAnimation(), !l2 && e2.attr(n2), a2 && a2(1), o2 && o2();
  }
  function dh(t2, e2, n2, i2, r2, o2) {
    ph("update", t2, e2, n2, i2, r2, o2);
  }
  function fh(t2, e2, n2, i2, r2, o2) {
    ph("enter", t2, e2, n2, i2, r2, o2);
  }
  function gh(t2) {
    if (!t2.__zr)
      return true;
    for (var e2 = 0; e2 < t2.animators.length; e2++) {
      if ("leave" === t2.animators[e2].scope)
        return true;
    }
    return false;
  }
  function yh(t2, e2, n2, i2, r2, o2) {
    gh(t2) || ph("leave", t2, e2, n2, i2, r2, o2);
  }
  function vh(t2, e2, n2, i2) {
    t2.removeTextContent(), t2.removeTextGuideLine(), yh(t2, { style: { opacity: 0 } }, e2, n2, i2);
  }
  function mh(t2, e2, n2) {
    function i2() {
      t2.parent && t2.parent.remove(t2);
    }
    t2.isGroup ? t2.traverse(function(t3) {
      t3.isGroup || vh(t3, e2, n2, i2);
    }) : vh(t2, e2, n2, i2);
  }
  function xh(t2) {
    hh(t2).oldStyle = t2.style;
  }
  var _h = Math.max;
  var bh = Math.min;
  var wh = {};
  function Sh(t2) {
    return Ms.extend(t2);
  }
  var Mh = function(t2, n2) {
    var i2 = gu(t2, n2);
    return function(t3) {
      function n3(e2) {
        var n4 = t3.call(this, e2) || this;
        return n4.applyTransform = i2.applyTransform, n4.buildPath = i2.buildPath, n4;
      }
      return e(n3, t3), n3;
    }(du);
  };
  function Ih(t2, e2) {
    return Mh(t2, e2);
  }
  function Th(t2, e2) {
    wh[t2] = e2;
  }
  function Ch(t2) {
    if (wh.hasOwnProperty(t2))
      return wh[t2];
  }
  function Dh(t2, e2, n2, i2) {
    var r2 = yu(t2, e2);
    return n2 && ("center" === i2 && (n2 = kh(n2, r2.getBoundingRect())), Ph(r2, n2)), r2;
  }
  function Ah(t2, e2, n2) {
    var i2 = new As({ style: { image: t2, x: e2.x, y: e2.y, width: e2.width, height: e2.height }, onload: function(t3) {
      if ("center" === n2) {
        var r2 = { width: t3.width, height: t3.height };
        i2.setStyle(kh(e2, r2));
      }
    } });
    return i2;
  }
  function kh(t2, e2) {
    var n2, i2 = e2.width / e2.height, r2 = t2.height * i2;
    return n2 = r2 <= t2.width ? t2.height : (r2 = t2.width) / i2, { x: t2.x + t2.width / 2 - r2 / 2, y: t2.y + t2.height / 2 - n2 / 2, width: r2, height: n2 };
  }
  var Lh = function(t2, e2) {
    for (var n2 = [], i2 = t2.length, r2 = 0; r2 < i2; r2++) {
      var o2 = t2[r2];
      n2.push(o2.getUpdatedPathProxy(true));
    }
    var a2 = new Ms(e2);
    return a2.createPathProxy(), a2.buildPath = function(t3) {
      if (fu(t3)) {
        t3.appendPath(n2);
        var e3 = t3.getContext();
        e3 && t3.rebuildPath(e3, 1);
      }
    }, a2;
  };
  function Ph(t2, e2) {
    if (t2.applyTransform) {
      var n2 = t2.getBoundingRect().calculateTransform(e2);
      t2.applyTransform(n2);
    }
  }
  function Oh(t2, e2) {
    return Ls(t2, t2, { lineWidth: e2 }), t2;
  }
  var Rh = Os;
  function Nh(t2, e2) {
    for (var n2 = me([]); t2 && t2 !== e2; )
      _e(n2, t2.getLocalTransform(), n2), t2 = t2.parent;
    return n2;
  }
  function Eh(t2, e2, n2) {
    return e2 && !R(e2) && (e2 = fr.getLocalTransform(e2)), n2 && (e2 = Me([], e2)), Gt([], t2, e2);
  }
  function zh(t2, e2, n2) {
    var i2 = 0 === e2[4] || 0 === e2[5] || 0 === e2[0] ? 1 : Math.abs(2 * e2[4] / e2[0]), r2 = 0 === e2[4] || 0 === e2[5] || 0 === e2[2] ? 1 : Math.abs(2 * e2[4] / e2[2]), o2 = ["left" === t2 ? -i2 : "right" === t2 ? i2 : 0, "top" === t2 ? -r2 : "bottom" === t2 ? r2 : 0];
    return o2 = Eh(o2, e2, n2), Math.abs(o2[0]) > Math.abs(o2[1]) ? o2[0] > 0 ? "right" : "left" : o2[1] > 0 ? "bottom" : "top";
  }
  function Vh(t2) {
    return !t2.isGroup;
  }
  function Bh(t2, e2, n2) {
    if (t2 && e2) {
      var i2, r2 = (i2 = {}, t2.traverse(function(t3) {
        Vh(t3) && t3.anid && (i2[t3.anid] = t3);
      }), i2);
      e2.traverse(function(t3) {
        if (Vh(t3) && t3.anid) {
          var e3 = r2[t3.anid];
          if (e3) {
            var i3 = o2(t3);
            t3.attr(o2(e3)), dh(t3, i3, n2, Js(t3).dataIndex);
          }
        }
      });
    }
    function o2(t3) {
      var e3 = { x: t3.x, y: t3.y, rotation: t3.rotation };
      return function(t4) {
        return null != t4.shape;
      }(t3) && (e3.shape = D({}, t3.shape)), e3;
    }
  }
  function Fh(t2, e2) {
    return E(t2, function(t3) {
      var n2 = t3[0];
      n2 = _h(n2, e2.x), n2 = bh(n2, e2.x + e2.width);
      var i2 = t3[1];
      return i2 = _h(i2, e2.y), [n2, i2 = bh(i2, e2.y + e2.height)];
    });
  }
  function Gh(t2, e2) {
    var n2 = _h(t2.x, e2.x), i2 = bh(t2.x + t2.width, e2.x + e2.width), r2 = _h(t2.y, e2.y), o2 = bh(t2.y + t2.height, e2.y + e2.height);
    if (i2 >= n2 && o2 >= r2)
      return { x: n2, y: r2, width: i2 - n2, height: o2 - r2 };
  }
  function Wh(t2, e2, n2) {
    var i2 = D({ rectHover: true }, e2), r2 = i2.style = { strokeNoScale: true };
    if (n2 = n2 || { x: -1, y: -1, width: 2, height: 2 }, t2)
      return 0 === t2.indexOf("image://") ? (r2.image = t2.slice(8), A(r2, n2), new As(i2)) : Dh(t2.replace("path://", ""), i2, n2, "center");
  }
  function Hh(t2, e2, n2, i2, r2) {
    for (var o2 = 0, a2 = r2[r2.length - 1]; o2 < r2.length; o2++) {
      var s2 = r2[o2];
      if (Yh(t2, e2, n2, i2, s2[0], s2[1], a2[0], a2[1]))
        return true;
      a2 = s2;
    }
  }
  function Yh(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2, u2 = n2 - t2, h2 = i2 - e2, c2 = a2 - r2, p2 = s2 - o2, d2 = Xh(c2, p2, u2, h2);
    if ((l2 = d2) <= 1e-6 && l2 >= -1e-6)
      return false;
    var f2 = t2 - r2, g2 = e2 - o2, y2 = Xh(f2, g2, u2, h2) / d2;
    if (y2 < 0 || y2 > 1)
      return false;
    var v2 = Xh(f2, g2, c2, p2) / d2;
    return !(v2 < 0 || v2 > 1);
  }
  function Xh(t2, e2, n2, i2) {
    return t2 * i2 - n2 * e2;
  }
  function Uh(t2) {
    var e2 = t2.itemTooltipOption, n2 = t2.componentModel, i2 = t2.itemName, r2 = X(e2) ? { formatter: e2 } : e2, o2 = n2.mainType, a2 = n2.componentIndex, s2 = { componentType: o2, name: i2, $vars: ["name"] };
    s2[o2 + "Index"] = a2;
    var l2 = t2.formatterParamsExtra;
    l2 && N(F(l2), function(t3) {
      xt(s2, t3) || (s2[t3] = l2[t3], s2.$vars.push(t3));
    });
    var u2 = Js(t2.el);
    u2.componentMainType = o2, u2.componentIndex = a2, u2.tooltipConfig = { name: i2, option: A({ content: i2, formatterParams: s2 }, r2) };
  }
  function Zh(t2, e2) {
    var n2;
    t2.isGroup && (n2 = e2(t2)), n2 || t2.traverse(e2);
  }
  function jh(t2, e2) {
    if (t2)
      if (H(t2))
        for (var n2 = 0; n2 < t2.length; n2++)
          Zh(t2[n2], e2);
      else
        Zh(t2, e2);
  }
  Th("circle", xu), Th("ellipse", bu), Th("sector", Eu), Th("ring", Vu), Th("polygon", Gu), Th("polyline", Hu), Th("rect", Es), Th("line", Uu), Th("bezierCurve", Ku), Th("arc", Ju);
  var qh = Object.freeze({ __proto__: null, updateProps: dh, initProps: fh, removeElement: yh, removeElementWithFadeOut: mh, isElementRemoved: gh, extendShape: Sh, extendPath: Ih, registerShape: Th, getShapeClass: Ch, makePath: Dh, makeImage: Ah, mergePath: Lh, resizePath: Ph, subPixelOptimizeLine: Oh, subPixelOptimizeRect: function(t2) {
    return Ps(t2.shape, t2.shape, t2.style), t2;
  }, subPixelOptimize: Rh, getTransform: Nh, applyTransform: Eh, transformDirection: zh, groupTransition: Bh, clipPointsByRect: Fh, clipRectByRect: Gh, createIcon: Wh, linePolygonIntersect: Hh, lineLineIntersect: Yh, setTooltipConfig: Uh, traverseElements: jh, Group: Er, Image: As, Text: Bs, Circle: xu, Ellipse: bu, Sector: Eu, Ring: Vu, Polygon: Gu, Polyline: Hu, Rect: Es, Line: Uu, BezierCurve: Ku, Arc: Ju, IncrementalDisplayable: uh, CompoundPath: Qu, LinearGradient: eh, RadialGradient: nh, BoundingRect: Ee, OrientedBoundingRect: sh, Point: Ce, Path: Ms });
  var Kh = {};
  function $h(t2, e2) {
    for (var n2 = 0; n2 < rl.length; n2++) {
      var i2 = rl[n2], r2 = e2[i2], o2 = t2.ensureState(i2);
      o2.style = o2.style || {}, o2.style.text = r2;
    }
    var a2 = t2.currentStates.slice();
    t2.clearStates(true), t2.setStyle({ text: e2.normal }), t2.useStates(a2, true);
  }
  function Jh(t2, e2, n2) {
    var i2, r2 = t2.labelFetcher, o2 = t2.labelDataIndex, a2 = t2.labelDimIndex, s2 = e2.normal;
    r2 && (i2 = r2.getFormattedLabel(o2, "normal", null, a2, s2 && s2.get("formatter"), null != n2 ? { interpolatedValue: n2 } : null)), null == i2 && (i2 = Y(t2.defaultText) ? t2.defaultText(o2, t2, n2) : t2.defaultText);
    for (var l2 = { normal: i2 }, u2 = 0; u2 < rl.length; u2++) {
      var h2 = rl[u2], c2 = e2[h2];
      l2[h2] = it(r2 ? r2.getFormattedLabel(o2, h2, null, a2, c2 && c2.get("formatter")) : null, i2);
    }
    return l2;
  }
  function Qh(t2, e2, n2, i2) {
    n2 = n2 || Kh;
    for (var r2 = t2 instanceof Bs, o2 = false, a2 = 0; a2 < ol.length; a2++) {
      if ((p2 = e2[ol[a2]]) && p2.getShallow("show")) {
        o2 = true;
        break;
      }
    }
    var s2 = r2 ? t2 : t2.getTextContent();
    if (o2) {
      r2 || (s2 || (s2 = new Bs(), t2.setTextContent(s2)), t2.stateProxy && (s2.stateProxy = t2.stateProxy));
      var l2 = Jh(n2, e2), u2 = e2.normal, h2 = !!u2.getShallow("show"), c2 = ec(u2, i2 && i2.normal, n2, false, !r2);
      c2.text = l2.normal, r2 || t2.setTextConfig(nc(u2, n2, false));
      for (a2 = 0; a2 < rl.length; a2++) {
        var p2, d2 = rl[a2];
        if (p2 = e2[d2]) {
          var f2 = s2.ensureState(d2), g2 = !!it(p2.getShallow("show"), h2);
          if (g2 !== h2 && (f2.ignore = !g2), f2.style = ec(p2, i2 && i2[d2], n2, true, !r2), f2.style.text = l2[d2], !r2)
            t2.ensureState(d2).textConfig = nc(p2, n2, true);
        }
      }
      s2.silent = !!u2.getShallow("silent"), null != s2.style.x && (c2.x = s2.style.x), null != s2.style.y && (c2.y = s2.style.y), s2.ignore = !h2, s2.useStyle(c2), s2.dirty(), n2.enableTextSetter && (lc(s2).setLabelText = function(t3) {
        var i3 = Jh(n2, e2, t3);
        $h(s2, i3);
      });
    } else
      s2 && (s2.ignore = true);
    t2.dirty();
  }
  function tc(t2, e2) {
    e2 = e2 || "label";
    for (var n2 = { normal: t2.getModel(e2) }, i2 = 0; i2 < rl.length; i2++) {
      var r2 = rl[i2];
      n2[r2] = t2.getModel([r2, e2]);
    }
    return n2;
  }
  function ec(t2, e2, n2, i2, r2) {
    var o2 = {};
    return function(t3, e3, n3, i3, r3) {
      n3 = n3 || Kh;
      var o3, a2 = e3.ecModel, s2 = a2 && a2.option.textStyle, l2 = function(t4) {
        var e4;
        for (; t4 && t4 !== t4.ecModel; ) {
          var n4 = (t4.option || Kh).rich;
          if (n4) {
            e4 = e4 || {};
            for (var i4 = F(n4), r4 = 0; r4 < i4.length; r4++) {
              e4[i4[r4]] = 1;
            }
          }
          t4 = t4.parentModel;
        }
        return e4;
      }(e3);
      if (l2) {
        for (var u2 in o3 = {}, l2)
          if (l2.hasOwnProperty(u2)) {
            var h2 = e3.getModel(["rich", u2]);
            ac(o3[u2] = {}, h2, s2, n3, i3, r3, false, true);
          }
      }
      o3 && (t3.rich = o3);
      var c2 = e3.get("overflow");
      c2 && (t3.overflow = c2);
      var p2 = e3.get("minMargin");
      null != p2 && (t3.margin = p2);
      ac(t3, e3, s2, n3, i3, r3, true, false);
    }(o2, t2, n2, i2, r2), e2 && D(o2, e2), o2;
  }
  function nc(t2, e2, n2) {
    e2 = e2 || {};
    var i2, r2 = {}, o2 = t2.getShallow("rotate"), a2 = it(t2.getShallow("distance"), n2 ? null : 5), s2 = t2.getShallow("offset");
    return "outside" === (i2 = t2.getShallow("position") || (n2 ? null : "inside")) && (i2 = e2.defaultOutsidePosition || "top"), null != i2 && (r2.position = i2), null != s2 && (r2.offset = s2), null != o2 && (o2 *= Math.PI / 180, r2.rotation = o2), null != a2 && (r2.distance = a2), r2.outsideFill = "inherit" === t2.get("color") ? e2.inheritColor || null : "auto", r2;
  }
  var ic = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"];
  var rc = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"];
  var oc = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
  function ac(t2, e2, n2, i2, r2, o2, a2, s2) {
    n2 = !r2 && n2 || Kh;
    var l2 = i2 && i2.inheritColor, u2 = e2.getShallow("color"), h2 = e2.getShallow("textBorderColor"), c2 = it(e2.getShallow("opacity"), n2.opacity);
    "inherit" !== u2 && "auto" !== u2 || (u2 = l2 || null), "inherit" !== h2 && "auto" !== h2 || (h2 = l2 || null), o2 || (u2 = u2 || n2.color, h2 = h2 || n2.textBorderColor), null != u2 && (t2.fill = u2), null != h2 && (t2.stroke = h2);
    var p2 = it(e2.getShallow("textBorderWidth"), n2.textBorderWidth);
    null != p2 && (t2.lineWidth = p2);
    var d2 = it(e2.getShallow("textBorderType"), n2.textBorderType);
    null != d2 && (t2.lineDash = d2);
    var f2 = it(e2.getShallow("textBorderDashOffset"), n2.textBorderDashOffset);
    null != f2 && (t2.lineDashOffset = f2), r2 || null != c2 || s2 || (c2 = i2 && i2.defaultOpacity), null != c2 && (t2.opacity = c2), r2 || o2 || null == t2.fill && i2.inheritColor && (t2.fill = i2.inheritColor);
    for (var g2 = 0; g2 < ic.length; g2++) {
      var y2 = ic[g2];
      null != (m2 = it(e2.getShallow(y2), n2[y2])) && (t2[y2] = m2);
    }
    for (g2 = 0; g2 < rc.length; g2++) {
      y2 = rc[g2];
      null != (m2 = e2.getShallow(y2)) && (t2[y2] = m2);
    }
    if (null == t2.verticalAlign) {
      var v2 = e2.getShallow("baseline");
      null != v2 && (t2.verticalAlign = v2);
    }
    if (!a2 || !i2.disableBox) {
      for (g2 = 0; g2 < oc.length; g2++) {
        var m2;
        y2 = oc[g2];
        null != (m2 = e2.getShallow(y2)) && (t2[y2] = m2);
      }
      var x2 = e2.getShallow("borderType");
      null != x2 && (t2.borderDash = x2), "auto" !== t2.backgroundColor && "inherit" !== t2.backgroundColor || !l2 || (t2.backgroundColor = l2), "auto" !== t2.borderColor && "inherit" !== t2.borderColor || !l2 || (t2.borderColor = l2);
    }
  }
  function sc(t2, e2) {
    var n2 = e2 && e2.getModel("textStyle");
    return lt([t2.fontStyle || n2 && n2.getShallow("fontStyle") || "", t2.fontWeight || n2 && n2.getShallow("fontWeight") || "", (t2.fontSize || n2 && n2.getShallow("fontSize") || 12) + "px", t2.fontFamily || n2 && n2.getShallow("fontFamily") || "sans-serif"].join(" "));
  }
  var lc = Po();
  function uc(t2, e2, n2, i2) {
    if (t2) {
      var r2 = lc(t2);
      r2.prevValue = r2.value, r2.value = n2;
      var o2 = e2.normal;
      r2.valueAnimation = o2.get("valueAnimation"), r2.valueAnimation && (r2.precision = o2.get("precision"), r2.defaultInterpolatedText = i2, r2.statesModels = e2);
    }
  }
  function hc(t2, e2, n2, i2, r2) {
    var o2 = lc(t2);
    if (o2.valueAnimation && o2.prevValue !== o2.value) {
      var a2 = o2.defaultInterpolatedText, s2 = it(o2.interpolatedValue, o2.prevValue), l2 = o2.value;
      t2.percent = 0, (null == o2.prevValue ? fh : dh)(t2, { percent: 1 }, i2, e2, null, function(i3) {
        var u2 = Go(n2, o2.precision, s2, l2, i3);
        o2.interpolatedValue = 1 === i3 ? null : u2;
        var h2 = Jh({ labelDataIndex: e2, labelFetcher: r2, defaultText: a2 ? a2(u2) : u2 + "" }, o2.statesModels, u2);
        $h(t2, h2);
      });
    }
  }
  var cc;
  var pc;
  var dc = ["textStyle", "color"];
  var fc = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"];
  var gc = new Bs();
  var yc = function() {
    function t2() {
    }
    return t2.prototype.getTextColor = function(t3) {
      var e2 = this.ecModel;
      return this.getShallow("color") || (!t3 && e2 ? e2.get(dc) : null);
    }, t2.prototype.getFont = function() {
      return sc({ fontStyle: this.getShallow("fontStyle"), fontWeight: this.getShallow("fontWeight"), fontSize: this.getShallow("fontSize"), fontFamily: this.getShallow("fontFamily") }, this.ecModel);
    }, t2.prototype.getTextRect = function(t3) {
      for (var e2 = { text: t3, verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline") }, n2 = 0; n2 < fc.length; n2++)
        e2[fc[n2]] = this.getShallow(fc[n2]);
      return gc.useStyle(e2), gc.update(), gc.getBoundingRect();
    }, t2;
  }();
  var vc = [["lineWidth", "width"], ["stroke", "color"], ["opacity"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["shadowColor"], ["lineDash", "type"], ["lineDashOffset", "dashOffset"], ["lineCap", "cap"], ["lineJoin", "join"], ["miterLimit"]];
  var mc = $o(vc);
  var xc = function() {
    function t2() {
    }
    return t2.prototype.getLineStyle = function(t3) {
      return mc(this, t3);
    }, t2;
  }();
  var _c = [["fill", "color"], ["stroke", "borderColor"], ["lineWidth", "borderWidth"], ["opacity"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["shadowColor"], ["lineDash", "borderType"], ["lineDashOffset", "borderDashOffset"], ["lineCap", "borderCap"], ["lineJoin", "borderJoin"], ["miterLimit", "borderMiterLimit"]];
  var bc = $o(_c);
  var wc = function() {
    function t2() {
    }
    return t2.prototype.getItemStyle = function(t3, e2) {
      return bc(this, t3, e2);
    }, t2;
  }();
  var Sc = function() {
    function t2(t3, e2, n2) {
      this.parentModel = e2, this.ecModel = n2, this.option = t3;
    }
    return t2.prototype.init = function(t3, e2, n2) {
      for (var i2 = [], r2 = 3; r2 < arguments.length; r2++)
        i2[r2 - 3] = arguments[r2];
    }, t2.prototype.mergeOption = function(t3, e2) {
      T(this.option, t3, true);
    }, t2.prototype.get = function(t3, e2) {
      return null == t3 ? this.option : this._doGet(this.parsePath(t3), !e2 && this.parentModel);
    }, t2.prototype.getShallow = function(t3, e2) {
      var n2 = this.option, i2 = null == n2 ? n2 : n2[t3];
      if (null == i2 && !e2) {
        var r2 = this.parentModel;
        r2 && (i2 = r2.getShallow(t3));
      }
      return i2;
    }, t2.prototype.getModel = function(e2, n2) {
      var i2 = null != e2, r2 = i2 ? this.parsePath(e2) : null;
      return new t2(i2 ? this._doGet(r2) : this.option, n2 = n2 || this.parentModel && this.parentModel.getModel(this.resolveParentPath(r2)), this.ecModel);
    }, t2.prototype.isEmpty = function() {
      return null == this.option;
    }, t2.prototype.restoreData = function() {
    }, t2.prototype.clone = function() {
      return new this.constructor(I(this.option));
    }, t2.prototype.parsePath = function(t3) {
      return "string" == typeof t3 ? t3.split(".") : t3;
    }, t2.prototype.resolveParentPath = function(t3) {
      return t3;
    }, t2.prototype.isAnimationEnabled = function() {
      if (!i.node && this.option) {
        if (null != this.option.animation)
          return !!this.option.animation;
        if (this.parentModel)
          return this.parentModel.isAnimationEnabled();
      }
    }, t2.prototype._doGet = function(t3, e2) {
      var n2 = this.option;
      if (!t3)
        return n2;
      for (var i2 = 0; i2 < t3.length && (!t3[i2] || null != (n2 = n2 && "object" == typeof n2 ? n2[t3[i2]] : null)); i2++)
        ;
      return null == n2 && e2 && (n2 = e2._doGet(this.resolveParentPath(t3), e2.parentModel)), n2;
    }, t2;
  }();
  Xo(Sc), cc = Sc, pc = ["__\0is_clz", Zo++].join("_"), cc.prototype[pc] = true, cc.isInstance = function(t2) {
    return !(!t2 || !t2[pc]);
  }, O(Sc, xc), O(Sc, wc), O(Sc, Qo), O(Sc, yc);
  var Mc = Math.round(10 * Math.random());
  function Ic(t2) {
    return [t2 || "", Mc++].join("_");
  }
  function Tc(t2, e2) {
    return T(T({}, t2, true), e2, true);
  }
  var Cc = "ZH";
  var Dc = "EN";
  var Ac = Dc;
  var kc = {};
  var Lc = {};
  var Pc = i.domSupported && (document.documentElement.lang || navigator.language || navigator.browserLanguage).toUpperCase().indexOf(Cc) > -1 ? Cc : Ac;
  function Oc(t2, e2) {
    t2 = t2.toUpperCase(), Lc[t2] = new Sc(e2), kc[t2] = e2;
  }
  function Rc(t2) {
    return Lc[t2];
  }
  Oc(Dc, { time: { month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"] }, legend: { selector: { all: "All", inverse: "Inv" } }, toolbox: { brush: { title: { rect: "Box Select", polygon: "Lasso Select", lineX: "Horizontally Select", lineY: "Vertically Select", keep: "Keep Selections", clear: "Clear Selections" } }, dataView: { title: "Data View", lang: ["Data View", "Close", "Refresh"] }, dataZoom: { title: { zoom: "Zoom", back: "Zoom Reset" } }, magicType: { title: { line: "Switch to Line Chart", bar: "Switch to Bar Chart", stack: "Stack", tiled: "Tile" } }, restore: { title: "Restore" }, saveAsImage: { title: "Save as Image", lang: ["Right Click to Save Image"] } }, series: { typeNames: { pie: "Pie chart", bar: "Bar chart", line: "Line chart", scatter: "Scatter plot", effectScatter: "Ripple scatter plot", radar: "Radar chart", tree: "Tree", treemap: "Treemap", boxplot: "Boxplot", candlestick: "Candlestick", k: "K line chart", heatmap: "Heat map", map: "Map", parallel: "Parallel coordinate map", lines: "Line graph", graph: "Relationship graph", sankey: "Sankey diagram", funnel: "Funnel chart", gauge: "Gauge", pictorialBar: "Pictorial bar", themeRiver: "Theme River Map", sunburst: "Sunburst" } }, aria: { general: { withTitle: 'This is a chart about "{title}"', withoutTitle: "This is a chart" }, series: { single: { prefix: "", withName: " with type {seriesType} named {seriesName}.", withoutName: " with type {seriesType}." }, multiple: { prefix: ". It consists of {seriesCount} series count.", withName: " The {seriesId} series is a {seriesType} representing {seriesName}.", withoutName: " The {seriesId} series is a {seriesType}.", separator: { middle: "", end: "" } } }, data: { allData: "The data is as follows: ", partialData: "The first {displayCnt} items are: ", withName: "the data for {name} is {value}", withoutName: "{value}", separator: { middle: ", ", end: ". " } } } }), Oc(Cc, { time: { month: ["\u4E00\u6708", "\u4E8C\u6708", "\u4E09\u6708", "\u56DB\u6708", "\u4E94\u6708", "\u516D\u6708", "\u4E03\u6708", "\u516B\u6708", "\u4E5D\u6708", "\u5341\u6708", "\u5341\u4E00\u6708", "\u5341\u4E8C\u6708"], monthAbbr: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], dayOfWeek: ["\u661F\u671F\u65E5", "\u661F\u671F\u4E00", "\u661F\u671F\u4E8C", "\u661F\u671F\u4E09", "\u661F\u671F\u56DB", "\u661F\u671F\u4E94", "\u661F\u671F\u516D"], dayOfWeekAbbr: ["\u65E5", "\u4E00", "\u4E8C", "\u4E09", "\u56DB", "\u4E94", "\u516D"] }, legend: { selector: { all: "\u5168\u9009", inverse: "\u53CD\u9009" } }, toolbox: { brush: { title: { rect: "\u77E9\u5F62\u9009\u62E9", polygon: "\u5708\u9009", lineX: "\u6A2A\u5411\u9009\u62E9", lineY: "\u7EB5\u5411\u9009\u62E9", keep: "\u4FDD\u6301\u9009\u62E9", clear: "\u6E05\u9664\u9009\u62E9" } }, dataView: { title: "\u6570\u636E\u89C6\u56FE", lang: ["\u6570\u636E\u89C6\u56FE", "\u5173\u95ED", "\u5237\u65B0"] }, dataZoom: { title: { zoom: "\u533A\u57DF\u7F29\u653E", back: "\u533A\u57DF\u7F29\u653E\u8FD8\u539F" } }, magicType: { title: { line: "\u5207\u6362\u4E3A\u6298\u7EBF\u56FE", bar: "\u5207\u6362\u4E3A\u67F1\u72B6\u56FE", stack: "\u5207\u6362\u4E3A\u5806\u53E0", tiled: "\u5207\u6362\u4E3A\u5E73\u94FA" } }, restore: { title: "\u8FD8\u539F" }, saveAsImage: { title: "\u4FDD\u5B58\u4E3A\u56FE\u7247", lang: ["\u53F3\u952E\u53E6\u5B58\u4E3A\u56FE\u7247"] } }, series: { typeNames: { pie: "\u997C\u56FE", bar: "\u67F1\u72B6\u56FE", line: "\u6298\u7EBF\u56FE", scatter: "\u6563\u70B9\u56FE", effectScatter: "\u6D9F\u6F2A\u6563\u70B9\u56FE", radar: "\u96F7\u8FBE\u56FE", tree: "\u6811\u56FE", treemap: "\u77E9\u5F62\u6811\u56FE", boxplot: "\u7BB1\u578B\u56FE", candlestick: "K\u7EBF\u56FE", k: "K\u7EBF\u56FE", heatmap: "\u70ED\u529B\u56FE", map: "\u5730\u56FE", parallel: "\u5E73\u884C\u5750\u6807\u56FE", lines: "\u7EBF\u56FE", graph: "\u5173\u7CFB\u56FE", sankey: "\u6851\u57FA\u56FE", funnel: "\u6F0F\u6597\u56FE", gauge: "\u4EEA\u8868\u76D8\u56FE", pictorialBar: "\u8C61\u5F62\u67F1\u56FE", themeRiver: "\u4E3B\u9898\u6CB3\u6D41\u56FE", sunburst: "\u65ED\u65E5\u56FE" } }, aria: { general: { withTitle: "\u8FD9\u662F\u4E00\u4E2A\u5173\u4E8E\u201C{title}\u201D\u7684\u56FE\u8868\u3002", withoutTitle: "\u8FD9\u662F\u4E00\u4E2A\u56FE\u8868\uFF0C" }, series: { single: { prefix: "", withName: "\u56FE\u8868\u7C7B\u578B\u662F{seriesType}\uFF0C\u8868\u793A{seriesName}\u3002", withoutName: "\u56FE\u8868\u7C7B\u578B\u662F{seriesType}\u3002" }, multiple: { prefix: "\u5B83\u7531{seriesCount}\u4E2A\u56FE\u8868\u7CFB\u5217\u7EC4\u6210\u3002", withName: "\u7B2C{seriesId}\u4E2A\u7CFB\u5217\u662F\u4E00\u4E2A\u8868\u793A{seriesName}\u7684{seriesType}\uFF0C", withoutName: "\u7B2C{seriesId}\u4E2A\u7CFB\u5217\u662F\u4E00\u4E2A{seriesType}\uFF0C", separator: { middle: "\uFF1B", end: "\u3002" } } }, data: { allData: "\u5176\u6570\u636E\u662F\u2014\u2014", partialData: "\u5176\u4E2D\uFF0C\u524D{displayCnt}\u9879\u662F\u2014\u2014", withName: "{name}\u7684\u6570\u636E\u662F{value}", withoutName: "{value}", separator: { middle: "\uFF0C", end: "" } } } });
  var Nc = 1e3;
  var Ec = 6e4;
  var zc = 36e5;
  var Vc = 864e5;
  var Bc = 31536e6;
  var Fc = { year: "{yyyy}", month: "{MMM}", day: "{d}", hour: "{HH}:{mm}", minute: "{HH}:{mm}", second: "{HH}:{mm}:{ss}", millisecond: "{HH}:{mm}:{ss} {SSS}", none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}" };
  var Gc = "{yyyy}-{MM}-{dd}";
  var Wc = { year: "{yyyy}", month: "{yyyy}-{MM}", day: Gc, hour: Gc + " " + Fc.hour, minute: Gc + " " + Fc.minute, second: Gc + " " + Fc.second, millisecond: Fc.none };
  var Hc = ["year", "month", "day", "hour", "minute", "second", "millisecond"];
  var Yc = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
  function Xc(t2, e2) {
    return "0000".substr(0, e2 - (t2 += "").length) + t2;
  }
  function Uc(t2) {
    switch (t2) {
      case "half-year":
      case "quarter":
        return "month";
      case "week":
      case "half-week":
        return "day";
      case "half-day":
      case "quarter-day":
        return "hour";
      default:
        return t2;
    }
  }
  function Zc(t2) {
    return t2 === Uc(t2);
  }
  function jc(t2, e2, n2, i2) {
    var r2 = io(t2), o2 = r2[$c(n2)](), a2 = r2[Jc(n2)]() + 1, s2 = Math.floor((a2 - 1) / 3) + 1, l2 = r2[Qc(n2)](), u2 = r2["get" + (n2 ? "UTC" : "") + "Day"](), h2 = r2[tp(n2)](), c2 = (h2 - 1) % 12 + 1, p2 = r2[ep(n2)](), d2 = r2[np(n2)](), f2 = r2[ip(n2)](), g2 = (i2 instanceof Sc ? i2 : Rc(i2 || Pc) || Lc[Ac]).getModel("time"), y2 = g2.get("month"), v2 = g2.get("monthAbbr"), m2 = g2.get("dayOfWeek"), x2 = g2.get("dayOfWeekAbbr");
    return (e2 || "").replace(/{yyyy}/g, o2 + "").replace(/{yy}/g, Xc(o2 % 100 + "", 2)).replace(/{Q}/g, s2 + "").replace(/{MMMM}/g, y2[a2 - 1]).replace(/{MMM}/g, v2[a2 - 1]).replace(/{MM}/g, Xc(a2, 2)).replace(/{M}/g, a2 + "").replace(/{dd}/g, Xc(l2, 2)).replace(/{d}/g, l2 + "").replace(/{eeee}/g, m2[u2]).replace(/{ee}/g, x2[u2]).replace(/{e}/g, u2 + "").replace(/{HH}/g, Xc(h2, 2)).replace(/{H}/g, h2 + "").replace(/{hh}/g, Xc(c2 + "", 2)).replace(/{h}/g, c2 + "").replace(/{mm}/g, Xc(p2, 2)).replace(/{m}/g, p2 + "").replace(/{ss}/g, Xc(d2, 2)).replace(/{s}/g, d2 + "").replace(/{SSS}/g, Xc(f2, 3)).replace(/{S}/g, f2 + "");
  }
  function qc(t2, e2) {
    var n2 = io(t2), i2 = n2[Jc(e2)]() + 1, r2 = n2[Qc(e2)](), o2 = n2[tp(e2)](), a2 = n2[ep(e2)](), s2 = n2[np(e2)](), l2 = 0 === n2[ip(e2)](), u2 = l2 && 0 === s2, h2 = u2 && 0 === a2, c2 = h2 && 0 === o2, p2 = c2 && 1 === r2;
    return p2 && 1 === i2 ? "year" : p2 ? "month" : c2 ? "day" : h2 ? "hour" : u2 ? "minute" : l2 ? "second" : "millisecond";
  }
  function Kc(t2, e2, n2) {
    var i2 = Z(t2) ? io(t2) : t2;
    switch (e2 = e2 || qc(t2, n2)) {
      case "year":
        return i2[$c(n2)]();
      case "half-year":
        return i2[Jc(n2)]() >= 6 ? 1 : 0;
      case "quarter":
        return Math.floor((i2[Jc(n2)]() + 1) / 4);
      case "month":
        return i2[Jc(n2)]();
      case "day":
        return i2[Qc(n2)]();
      case "half-day":
        return i2[tp(n2)]() / 24;
      case "hour":
        return i2[tp(n2)]();
      case "minute":
        return i2[ep(n2)]();
      case "second":
        return i2[np(n2)]();
      case "millisecond":
        return i2[ip(n2)]();
    }
  }
  function $c(t2) {
    return t2 ? "getUTCFullYear" : "getFullYear";
  }
  function Jc(t2) {
    return t2 ? "getUTCMonth" : "getMonth";
  }
  function Qc(t2) {
    return t2 ? "getUTCDate" : "getDate";
  }
  function tp(t2) {
    return t2 ? "getUTCHours" : "getHours";
  }
  function ep(t2) {
    return t2 ? "getUTCMinutes" : "getMinutes";
  }
  function np(t2) {
    return t2 ? "getUTCSeconds" : "getSeconds";
  }
  function ip(t2) {
    return t2 ? "getUTCMilliseconds" : "getMilliseconds";
  }
  function rp(t2) {
    return t2 ? "setUTCFullYear" : "setFullYear";
  }
  function op(t2) {
    return t2 ? "setUTCMonth" : "setMonth";
  }
  function ap(t2) {
    return t2 ? "setUTCDate" : "setDate";
  }
  function sp(t2) {
    return t2 ? "setUTCHours" : "setHours";
  }
  function lp(t2) {
    return t2 ? "setUTCMinutes" : "setMinutes";
  }
  function up(t2) {
    return t2 ? "setUTCSeconds" : "setSeconds";
  }
  function hp(t2) {
    return t2 ? "setUTCMilliseconds" : "setMilliseconds";
  }
  function cp(t2) {
    if (!ho(t2))
      return X(t2) ? t2 : "-";
    var e2 = (t2 + "").split(".");
    return e2[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (e2.length > 1 ? "." + e2[1] : "");
  }
  function pp(t2, e2) {
    return t2 = (t2 || "").toLowerCase().replace(/-(.)/g, function(t3, e3) {
      return e3.toUpperCase();
    }), e2 && t2 && (t2 = t2.charAt(0).toUpperCase() + t2.slice(1)), t2;
  }
  var dp = at;
  function fp(t2, e2, n2) {
    function i2(t3) {
      return t3 && lt(t3) ? t3 : "-";
    }
    function r2(t3) {
      return !(null == t3 || isNaN(t3) || !isFinite(t3));
    }
    var o2 = "time" === e2, a2 = t2 instanceof Date;
    if (o2 || a2) {
      var s2 = o2 ? io(t2) : t2;
      if (!isNaN(+s2))
        return jc(s2, "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss}", n2);
      if (a2)
        return "-";
    }
    if ("ordinal" === e2)
      return U(t2) ? i2(t2) : Z(t2) && r2(t2) ? t2 + "" : "-";
    var l2 = uo(t2);
    return r2(l2) ? cp(l2) : U(t2) ? i2(t2) : "boolean" == typeof t2 ? t2 + "" : "-";
  }
  var gp = ["a", "b", "c", "d", "e", "f", "g"];
  var yp = function(t2, e2) {
    return "{" + t2 + (null == e2 ? "" : e2) + "}";
  };
  function vp(t2, e2, n2) {
    H(e2) || (e2 = [e2]);
    var i2 = e2.length;
    if (!i2)
      return "";
    for (var r2 = e2[0].$vars || [], o2 = 0; o2 < r2.length; o2++) {
      var a2 = gp[o2];
      t2 = t2.replace(yp(a2), yp(a2, 0));
    }
    for (var s2 = 0; s2 < i2; s2++)
      for (var l2 = 0; l2 < r2.length; l2++) {
        var u2 = e2[s2][r2[l2]];
        t2 = t2.replace(yp(gp[l2], s2), n2 ? ie(u2) : u2);
      }
    return t2;
  }
  function mp(t2, e2) {
    var n2 = X(t2) ? { color: t2, extraCssText: e2 } : t2 || {}, i2 = n2.color, r2 = n2.type;
    e2 = n2.extraCssText;
    var o2 = n2.renderMode || "html";
    return i2 ? "html" === o2 ? "subItem" === r2 ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + ie(i2) + ";" + (e2 || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + ie(i2) + ";" + (e2 || "") + '"></span>' : { renderMode: o2, content: "{" + (n2.markerId || "markerX") + "|}  ", style: "subItem" === r2 ? { width: 4, height: 4, borderRadius: 2, backgroundColor: i2 } : { width: 10, height: 10, borderRadius: 5, backgroundColor: i2 } } : "";
  }
  function xp(t2, e2) {
    return e2 = e2 || "transparent", X(t2) ? t2 : j(t2) && t2.colorStops && (t2.colorStops[0] || {}).color || e2;
  }
  function _p(t2, e2) {
    if ("_blank" === e2 || "blank" === e2) {
      var n2 = window.open();
      n2.opener = null, n2.location.href = t2;
    } else
      window.open(t2, e2);
  }
  var bp = N;
  var wp = ["left", "right", "top", "bottom", "width", "height"];
  var Sp = [["width", "left", "right"], ["height", "top", "bottom"]];
  function Mp(t2, e2, n2, i2, r2) {
    var o2 = 0, a2 = 0;
    null == i2 && (i2 = 1 / 0), null == r2 && (r2 = 1 / 0);
    var s2 = 0;
    e2.eachChild(function(l2, u2) {
      var h2, c2, p2 = l2.getBoundingRect(), d2 = e2.childAt(u2 + 1), f2 = d2 && d2.getBoundingRect();
      if ("horizontal" === t2) {
        var g2 = p2.width + (f2 ? -f2.x + p2.x : 0);
        (h2 = o2 + g2) > i2 || l2.newline ? (o2 = 0, h2 = g2, a2 += s2 + n2, s2 = p2.height) : s2 = Math.max(s2, p2.height);
      } else {
        var y2 = p2.height + (f2 ? -f2.y + p2.y : 0);
        (c2 = a2 + y2) > r2 || l2.newline ? (o2 += s2 + n2, a2 = 0, c2 = y2, s2 = p2.width) : s2 = Math.max(s2, p2.width);
      }
      l2.newline || (l2.x = o2, l2.y = a2, l2.markRedraw(), "horizontal" === t2 ? o2 = h2 + n2 : a2 = c2 + n2);
    });
  }
  var Ip = Mp;
  W(Mp, "vertical"), W(Mp, "horizontal");
  function Tp(t2, e2, n2) {
    n2 = dp(n2 || 0);
    var i2 = e2.width, r2 = e2.height, o2 = Xr(t2.left, i2), a2 = Xr(t2.top, r2), s2 = Xr(t2.right, i2), l2 = Xr(t2.bottom, r2), u2 = Xr(t2.width, i2), h2 = Xr(t2.height, r2), c2 = n2[2] + n2[0], p2 = n2[1] + n2[3], d2 = t2.aspect;
    switch (isNaN(u2) && (u2 = i2 - s2 - p2 - o2), isNaN(h2) && (h2 = r2 - l2 - c2 - a2), null != d2 && (isNaN(u2) && isNaN(h2) && (d2 > i2 / r2 ? u2 = 0.8 * i2 : h2 = 0.8 * r2), isNaN(u2) && (u2 = d2 * h2), isNaN(h2) && (h2 = u2 / d2)), isNaN(o2) && (o2 = i2 - s2 - u2 - p2), isNaN(a2) && (a2 = r2 - l2 - h2 - c2), t2.left || t2.right) {
      case "center":
        o2 = i2 / 2 - u2 / 2 - n2[3];
        break;
      case "right":
        o2 = i2 - u2 - p2;
    }
    switch (t2.top || t2.bottom) {
      case "middle":
      case "center":
        a2 = r2 / 2 - h2 / 2 - n2[0];
        break;
      case "bottom":
        a2 = r2 - h2 - c2;
    }
    o2 = o2 || 0, a2 = a2 || 0, isNaN(u2) && (u2 = i2 - p2 - o2 - (s2 || 0)), isNaN(h2) && (h2 = r2 - c2 - a2 - (l2 || 0));
    var f2 = new Ee(o2 + n2[3], a2 + n2[0], u2, h2);
    return f2.margin = n2, f2;
  }
  function Cp(t2, e2, n2, i2, r2, o2) {
    var a2, s2 = !r2 || !r2.hv || r2.hv[0], l2 = !r2 || !r2.hv || r2.hv[1], u2 = r2 && r2.boundingMode || "all";
    if ((o2 = o2 || t2).x = t2.x, o2.y = t2.y, !s2 && !l2)
      return false;
    if ("raw" === u2)
      a2 = "group" === t2.type ? new Ee(0, 0, +e2.width || 0, +e2.height || 0) : t2.getBoundingRect();
    else if (a2 = t2.getBoundingRect(), t2.needLocalTransform()) {
      var h2 = t2.getLocalTransform();
      (a2 = a2.clone()).applyTransform(h2);
    }
    var c2 = Tp(A({ width: a2.width, height: a2.height }, e2), n2, i2), p2 = s2 ? c2.x - a2.x : 0, d2 = l2 ? c2.y - a2.y : 0;
    return "raw" === u2 ? (o2.x = p2, o2.y = d2) : (o2.x += p2, o2.y += d2), o2 === t2 && t2.markRedraw(), true;
  }
  function Dp(t2) {
    var e2 = t2.layoutMode || t2.constructor.layoutMode;
    return j(e2) ? e2 : e2 ? { type: e2 } : null;
  }
  function Ap(t2, e2, n2) {
    var i2 = n2 && n2.ignoreSize;
    !H(i2) && (i2 = [i2, i2]);
    var r2 = a2(Sp[0], 0), o2 = a2(Sp[1], 1);
    function a2(n3, r3) {
      var o3 = {}, a3 = 0, u3 = {}, h2 = 0;
      if (bp(n3, function(e3) {
        u3[e3] = t2[e3];
      }), bp(n3, function(t3) {
        s2(e2, t3) && (o3[t3] = u3[t3] = e2[t3]), l2(o3, t3) && a3++, l2(u3, t3) && h2++;
      }), i2[r3])
        return l2(e2, n3[1]) ? u3[n3[2]] = null : l2(e2, n3[2]) && (u3[n3[1]] = null), u3;
      if (2 !== h2 && a3) {
        if (a3 >= 2)
          return o3;
        for (var c2 = 0; c2 < n3.length; c2++) {
          var p2 = n3[c2];
          if (!s2(o3, p2) && s2(t2, p2)) {
            o3[p2] = t2[p2];
            break;
          }
        }
        return o3;
      }
      return u3;
    }
    function s2(t3, e3) {
      return t3.hasOwnProperty(e3);
    }
    function l2(t3, e3) {
      return null != t3[e3] && "auto" !== t3[e3];
    }
    function u2(t3, e3, n3) {
      bp(t3, function(t4) {
        e3[t4] = n3[t4];
      });
    }
    u2(Sp[0], t2, r2), u2(Sp[1], t2, o2);
  }
  function kp(t2) {
    return Lp({}, t2);
  }
  function Lp(t2, e2) {
    return e2 && t2 && bp(wp, function(n2) {
      e2.hasOwnProperty(n2) && (t2[n2] = e2[n2]);
    }), t2;
  }
  var Pp = Po();
  var Op = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this, e2, n3, i2) || this;
      return r2.uid = Ic("ec_cpt_model"), r2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.mergeDefaultAndTheme(t3, n3);
    }, n2.prototype.mergeDefaultAndTheme = function(t3, e2) {
      var n3 = Dp(this), i2 = n3 ? kp(t3) : {};
      T(t3, e2.getTheme().get(this.mainType)), T(t3, this.getDefaultOption()), n3 && Ap(t3, i2, n3);
    }, n2.prototype.mergeOption = function(t3, e2) {
      T(this.option, t3, true);
      var n3 = Dp(this);
      n3 && Ap(this.option, t3, n3);
    }, n2.prototype.optionUpdated = function(t3, e2) {
    }, n2.prototype.getDefaultOption = function() {
      var t3 = this.constructor;
      if (!function(t4) {
        return !(!t4 || !t4[Ho]);
      }(t3))
        return t3.defaultOption;
      var e2 = Pp(this);
      if (!e2.defaultOption) {
        for (var n3 = [], i2 = t3; i2; ) {
          var r2 = i2.prototype.defaultOption;
          r2 && n3.push(r2), i2 = i2.superClass;
        }
        for (var o2 = {}, a2 = n3.length - 1; a2 >= 0; a2--)
          o2 = T(o2, n3[a2], true);
        e2.defaultOption = o2;
      }
      return e2.defaultOption;
    }, n2.prototype.getReferringComponents = function(t3, e2) {
      var n3 = t3 + "Index", i2 = t3 + "Id";
      return Vo(this.ecModel, t3, { index: this.get(n3, true), id: this.get(i2, true) }, e2);
    }, n2.prototype.getBoxLayoutParams = function() {
      var t3 = this;
      return { left: t3.get("left"), top: t3.get("top"), right: t3.get("right"), bottom: t3.get("bottom"), width: t3.get("width"), height: t3.get("height") };
    }, n2.prototype.getZLevelKey = function() {
      return "";
    }, n2.prototype.setZLevel = function(t3) {
      this.option.zlevel = t3;
    }, n2.protoInitialize = function() {
      var t3 = n2.prototype;
      t3.type = "component", t3.id = "", t3.name = "", t3.mainType = "", t3.subType = "", t3.componentIndex = 0;
    }(), n2;
  }(Sc);
  Uo(Op, Sc), Ko(Op), function(t2) {
    var e2 = {};
    t2.registerSubTypeDefaulter = function(t3, n2) {
      var i2 = Yo(t3);
      e2[i2.main] = n2;
    }, t2.determineSubType = function(n2, i2) {
      var r2 = i2.type;
      if (!r2) {
        var o2 = Yo(n2).main;
        t2.hasSubTypes(n2) && e2[o2] && (r2 = e2[o2](i2));
      }
      return r2;
    };
  }(Op), function(t2, e2) {
    function n2(t3, e3) {
      return t3[e3] || (t3[e3] = { predecessor: [], successor: [] }), t3[e3];
    }
    t2.topologicalTravel = function(t3, i2, r2, o2) {
      if (t3.length) {
        var a2 = function(t4) {
          var i3 = {}, r3 = [];
          return N(t4, function(o3) {
            var a3 = n2(i3, o3), s3 = function(t5, e3) {
              var n3 = [];
              return N(t5, function(t6) {
                L(e3, t6) >= 0 && n3.push(t6);
              }), n3;
            }(a3.originalDeps = e2(o3), t4);
            a3.entryCount = s3.length, 0 === a3.entryCount && r3.push(o3), N(s3, function(t5) {
              L(a3.predecessor, t5) < 0 && a3.predecessor.push(t5);
              var e3 = n2(i3, t5);
              L(e3.successor, t5) < 0 && e3.successor.push(o3);
            });
          }), { graph: i3, noEntryList: r3 };
        }(i2), s2 = a2.graph, l2 = a2.noEntryList, u2 = {};
        for (N(t3, function(t4) {
          u2[t4] = true;
        }); l2.length; ) {
          var h2 = l2.pop(), c2 = s2[h2], p2 = !!u2[h2];
          p2 && (r2.call(o2, h2, c2.originalDeps.slice()), delete u2[h2]), N(c2.successor, p2 ? f2 : d2);
        }
        N(u2, function() {
          var t4 = "";
          throw new Error(t4);
        });
      }
      function d2(t4) {
        s2[t4].entryCount--, 0 === s2[t4].entryCount && l2.push(t4);
      }
      function f2(t4) {
        u2[t4] = true, d2(t4);
      }
    };
  }(Op, function(t2) {
    var e2 = [];
    N(Op.getClassesByMainType(t2), function(t3) {
      e2 = e2.concat(t3.dependencies || t3.prototype.dependencies || []);
    }), e2 = E(e2, function(t3) {
      return Yo(t3).main;
    }), "dataset" !== t2 && L(e2, "dataset") <= 0 && e2.unshift("dataset");
    return e2;
  });
  var Rp = "";
  "undefined" != typeof navigator && (Rp = navigator.platform || "");
  var Np = "rgba(0, 0, 0, 0.2)";
  var Ep = { darkMode: "auto", colorBy: "series", color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"], gradientColor: ["#f6efa6", "#d88273", "#bf444c"], aria: { decal: { decals: [{ color: Np, dashArrayX: [1, 0], dashArrayY: [2, 5], symbolSize: 1, rotation: Math.PI / 6 }, { color: Np, symbol: "circle", dashArrayX: [[8, 8], [0, 8, 8, 0]], dashArrayY: [6, 0], symbolSize: 0.8 }, { color: Np, dashArrayX: [1, 0], dashArrayY: [4, 3], rotation: -Math.PI / 4 }, { color: Np, dashArrayX: [[6, 6], [0, 6, 6, 0]], dashArrayY: [6, 0] }, { color: Np, dashArrayX: [[1, 0], [1, 6]], dashArrayY: [1, 0, 6, 0], rotation: Math.PI / 4 }, { color: Np, symbol: "triangle", dashArrayX: [[9, 9], [0, 9, 9, 0]], dashArrayY: [7, 2], symbolSize: 0.75 }] } }, textStyle: { fontFamily: Rp.match(/^Win/) ? "Microsoft YaHei" : "sans-serif", fontSize: 12, fontStyle: "normal", fontWeight: "normal" }, blendMode: null, stateAnimation: { duration: 300, easing: "cubicOut" }, animation: "auto", animationDuration: 1e3, animationDurationUpdate: 500, animationEasing: "cubicInOut", animationEasingUpdate: "cubicInOut", animationThreshold: 2e3, progressiveThreshold: 3e3, progressive: 400, hoverLayerThreshold: 3e3, useUTC: false };
  var zp = gt(["tooltip", "label", "itemName", "itemId", "itemGroupId", "seriesName"]);
  var Vp = "original";
  var Bp = "arrayRows";
  var Fp = "objectRows";
  var Gp = "keyedColumns";
  var Wp = "typedArray";
  var Hp = "unknown";
  var Yp = "column";
  var Xp = "row";
  var Up = 1;
  var Zp = 2;
  var jp = 3;
  var qp = Po();
  function Kp(t2, e2, n2) {
    var i2 = {}, r2 = Jp(e2);
    if (!r2 || !t2)
      return i2;
    var o2, a2, s2 = [], l2 = [], u2 = e2.ecModel, h2 = qp(u2).datasetMap, c2 = r2.uid + "_" + n2.seriesLayoutBy;
    N(t2 = t2.slice(), function(e3, n3) {
      var r3 = j(e3) ? e3 : t2[n3] = { name: e3 };
      "ordinal" === r3.type && null == o2 && (o2 = n3, a2 = f2(r3)), i2[r3.name] = [];
    });
    var p2 = h2.get(c2) || h2.set(c2, { categoryWayDim: a2, valueWayDim: 0 });
    function d2(t3, e3, n3) {
      for (var i3 = 0; i3 < n3; i3++)
        t3.push(e3 + i3);
    }
    function f2(t3) {
      var e3 = t3.dimsDef;
      return e3 ? e3.length : 1;
    }
    return N(t2, function(t3, e3) {
      var n3 = t3.name, r3 = f2(t3);
      if (null == o2) {
        var a3 = p2.valueWayDim;
        d2(i2[n3], a3, r3), d2(l2, a3, r3), p2.valueWayDim += r3;
      } else if (o2 === e3)
        d2(i2[n3], 0, r3), d2(s2, 0, r3);
      else {
        a3 = p2.categoryWayDim;
        d2(i2[n3], a3, r3), d2(l2, a3, r3), p2.categoryWayDim += r3;
      }
    }), s2.length && (i2.itemName = s2), l2.length && (i2.seriesName = l2), i2;
  }
  function $p(t2, e2, n2) {
    var i2 = {};
    if (!Jp(t2))
      return i2;
    var r2, o2 = e2.sourceFormat, a2 = e2.dimensionsDefine;
    o2 !== Fp && o2 !== Gp || N(a2, function(t3, e3) {
      "name" === (j(t3) ? t3.name : t3) && (r2 = e3);
    });
    var s2 = function() {
      for (var t3 = {}, i3 = {}, s3 = [], l3 = 0, u2 = Math.min(5, n2); l3 < u2; l3++) {
        var h2 = td(e2.data, o2, e2.seriesLayoutBy, a2, e2.startIndex, l3);
        s3.push(h2);
        var c2 = h2 === jp;
        if (c2 && null == t3.v && l3 !== r2 && (t3.v = l3), (null == t3.n || t3.n === t3.v || !c2 && s3[t3.n] === jp) && (t3.n = l3), p2(t3) && s3[t3.n] !== jp)
          return t3;
        c2 || (h2 === Zp && null == i3.v && l3 !== r2 && (i3.v = l3), null != i3.n && i3.n !== i3.v || (i3.n = l3));
      }
      function p2(t4) {
        return null != t4.v && null != t4.n;
      }
      return p2(t3) ? t3 : p2(i3) ? i3 : null;
    }();
    if (s2) {
      i2.value = [s2.v];
      var l2 = null != r2 ? r2 : s2.n;
      i2.itemName = [l2], i2.seriesName = [l2];
    }
    return i2;
  }
  function Jp(t2) {
    if (!t2.get("data", true))
      return Vo(t2.ecModel, "dataset", { index: t2.get("datasetIndex", true), id: t2.get("datasetId", true) }, Eo).models[0];
  }
  function Qp(t2, e2) {
    return td(t2.data, t2.sourceFormat, t2.seriesLayoutBy, t2.dimensionsDefine, t2.startIndex, e2);
  }
  function td(t2, e2, n2, i2, r2, o2) {
    var a2, s2, l2;
    if (K(t2))
      return jp;
    if (i2) {
      var u2 = i2[o2];
      j(u2) ? (s2 = u2.name, l2 = u2.type) : X(u2) && (s2 = u2);
    }
    if (null != l2)
      return "ordinal" === l2 ? Up : jp;
    if (e2 === Bp) {
      var h2 = t2;
      if (n2 === Xp) {
        for (var c2 = h2[o2], p2 = 0; p2 < (c2 || []).length && p2 < 5; p2++)
          if (null != (a2 = m2(c2[r2 + p2])))
            return a2;
      } else
        for (p2 = 0; p2 < h2.length && p2 < 5; p2++) {
          var d2 = h2[r2 + p2];
          if (d2 && null != (a2 = m2(d2[o2])))
            return a2;
        }
    } else if (e2 === Fp) {
      var f2 = t2;
      if (!s2)
        return jp;
      for (p2 = 0; p2 < f2.length && p2 < 5; p2++) {
        if ((y2 = f2[p2]) && null != (a2 = m2(y2[s2])))
          return a2;
      }
    } else if (e2 === Gp) {
      if (!s2)
        return jp;
      if (!(c2 = t2[s2]) || K(c2))
        return jp;
      for (p2 = 0; p2 < c2.length && p2 < 5; p2++)
        if (null != (a2 = m2(c2[p2])))
          return a2;
    } else if (e2 === Vp) {
      var g2 = t2;
      for (p2 = 0; p2 < g2.length && p2 < 5; p2++) {
        var y2, v2 = So(y2 = g2[p2]);
        if (!H(v2))
          return jp;
        if (null != (a2 = m2(v2[o2])))
          return a2;
      }
    }
    function m2(t3) {
      var e3 = X(t3);
      return null != t3 && isFinite(t3) && "" !== t3 ? e3 ? Zp : jp : e3 && "-" !== t3 ? Up : void 0;
    }
    return jp;
  }
  var ed = gt();
  var nd;
  var id;
  var rd;
  var od = Po();
  var ad = Po();
  var sd = function() {
    function t2() {
    }
    return t2.prototype.getColorFromPalette = function(t3, e2, n2) {
      var i2 = _o(this.get("color", true)), r2 = this.get("colorLayer", true);
      return ud(this, od, i2, r2, t3, e2, n2);
    }, t2.prototype.clearColorPalette = function() {
      !function(t3, e2) {
        e2(t3).paletteIdx = 0, e2(t3).paletteNameMap = {};
      }(this, od);
    }, t2;
  }();
  function ld(t2, e2, n2, i2) {
    var r2 = _o(t2.get(["aria", "decal", "decals"]));
    return ud(t2, ad, r2, null, e2, n2, i2);
  }
  function ud(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = e2(o2 = o2 || t2), l2 = s2.paletteIdx || 0, u2 = s2.paletteNameMap = s2.paletteNameMap || {};
    if (u2.hasOwnProperty(r2))
      return u2[r2];
    var h2 = null != a2 && i2 ? function(t3, e3) {
      for (var n3 = t3.length, i3 = 0; i3 < n3; i3++)
        if (t3[i3].length > e3)
          return t3[i3];
      return t3[n3 - 1];
    }(i2, a2) : n2;
    if ((h2 = h2 || n2) && h2.length) {
      var c2 = h2[l2];
      return r2 && (u2[r2] = c2), s2.paletteIdx = (l2 + 1) % h2.length, c2;
    }
  }
  var hd = "\0_ec_inner";
  var cd = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3, i2, r2, o2) {
      i2 = i2 || {}, this.option = null, this._theme = new Sc(i2), this._locale = new Sc(r2), this._optionManager = o2;
    }, n2.prototype.setOption = function(t3, e2, n3) {
      var i2 = fd(e2);
      this._optionManager.setOption(t3, n3, i2), this._resetOption(null, i2);
    }, n2.prototype.resetOption = function(t3, e2) {
      return this._resetOption(t3, fd(e2));
    }, n2.prototype._resetOption = function(t3, e2) {
      var n3 = false, i2 = this._optionManager;
      if (!t3 || "recreate" === t3) {
        var r2 = i2.mountOption("recreate" === t3);
        this.option && "recreate" !== t3 ? (this.restoreData(), this._mergeOption(r2, e2)) : rd(this, r2), n3 = true;
      }
      if ("timeline" !== t3 && "media" !== t3 || this.restoreData(), !t3 || "recreate" === t3 || "timeline" === t3) {
        var o2 = i2.getTimelineOption(this);
        o2 && (n3 = true, this._mergeOption(o2, e2));
      }
      if (!t3 || "recreate" === t3 || "media" === t3) {
        var a2 = i2.getMediaOption(this);
        a2.length && N(a2, function(t4) {
          n3 = true, this._mergeOption(t4, e2);
        }, this);
      }
      return n3;
    }, n2.prototype.mergeOption = function(t3) {
      this._mergeOption(t3, null);
    }, n2.prototype._mergeOption = function(t3, e2) {
      var n3 = this.option, i2 = this._componentsMap, r2 = this._componentsCount, o2 = [], a2 = gt(), s2 = e2 && e2.replaceMergeMainTypeMap;
      qp(this).datasetMap = gt(), N(t3, function(t4, e3) {
        null != t4 && (Op.hasClass(e3) ? e3 && (o2.push(e3), a2.set(e3, true)) : n3[e3] = null == n3[e3] ? I(t4) : T(n3[e3], t4, true));
      }), s2 && s2.each(function(t4, e3) {
        Op.hasClass(e3) && !a2.get(e3) && (o2.push(e3), a2.set(e3, true));
      }), Op.topologicalTravel(o2, Op.getAllClassMainTypes(), function(e3) {
        var o3 = function(t4, e4, n4) {
          var i3 = ed.get(e4);
          if (!i3)
            return n4;
          var r3 = i3(t4);
          return r3 ? n4.concat(r3) : n4;
        }(this, e3, _o(t3[e3])), a3 = i2.get(e3), l2 = a3 ? s2 && s2.get(e3) ? "replaceMerge" : "normalMerge" : "replaceAll", u2 = Io(a3, o3, l2);
        (function(t4, e4, n4) {
          N(t4, function(t5) {
            var i3 = t5.newOption;
            j(i3) && (t5.keyInfo.mainType = e4, t5.keyInfo.subType = function(t6, e5, n5, i4) {
              return e5.type ? e5.type : n5 ? n5.subType : i4.determineSubType(t6, e5);
            }(e4, i3, t5.existing, n4));
          });
        })(u2, e3, Op), n3[e3] = null, i2.set(e3, null), r2.set(e3, 0);
        var h2, c2 = [], p2 = [], d2 = 0;
        N(u2, function(t4, n4) {
          var i3 = t4.existing, r3 = t4.newOption;
          if (r3) {
            var o4 = "series" === e3, a4 = Op.getClass(e3, t4.keyInfo.subType, !o4);
            if (!a4)
              return;
            if ("tooltip" === e3) {
              if (h2)
                return void 0;
              h2 = true;
            }
            if (i3 && i3.constructor === a4)
              i3.name = t4.keyInfo.name, i3.mergeOption(r3, this), i3.optionUpdated(r3, false);
            else {
              var s3 = D({ componentIndex: n4 }, t4.keyInfo);
              D(i3 = new a4(r3, this, this, s3), s3), t4.brandNew && (i3.__requireNewView = true), i3.init(r3, this, this), i3.optionUpdated(null, true);
            }
          } else
            i3 && (i3.mergeOption({}, this), i3.optionUpdated({}, false));
          i3 ? (c2.push(i3.option), p2.push(i3), d2++) : (c2.push(void 0), p2.push(void 0));
        }, this), n3[e3] = c2, i2.set(e3, p2), r2.set(e3, d2), "series" === e3 && nd(this);
      }, this), this._seriesIndices || nd(this);
    }, n2.prototype.getOption = function() {
      var t3 = I(this.option);
      return N(t3, function(e2, n3) {
        if (Op.hasClass(n3)) {
          for (var i2 = _o(e2), r2 = i2.length, o2 = false, a2 = r2 - 1; a2 >= 0; a2--)
            i2[a2] && !ko(i2[a2]) ? o2 = true : (i2[a2] = null, !o2 && r2--);
          i2.length = r2, t3[n3] = i2;
        }
      }), delete t3[hd], t3;
    }, n2.prototype.getTheme = function() {
      return this._theme;
    }, n2.prototype.getLocaleModel = function() {
      return this._locale;
    }, n2.prototype.setUpdatePayload = function(t3) {
      this._payload = t3;
    }, n2.prototype.getUpdatePayload = function() {
      return this._payload;
    }, n2.prototype.getComponent = function(t3, e2) {
      var n3 = this._componentsMap.get(t3);
      if (n3) {
        var i2 = n3[e2 || 0];
        if (i2)
          return i2;
        if (null == e2) {
          for (var r2 = 0; r2 < n3.length; r2++)
            if (n3[r2])
              return n3[r2];
        }
      }
    }, n2.prototype.queryComponents = function(t3) {
      var e2 = t3.mainType;
      if (!e2)
        return [];
      var n3, i2 = t3.index, r2 = t3.id, o2 = t3.name, a2 = this._componentsMap.get(e2);
      return a2 && a2.length ? (null != i2 ? (n3 = [], N(_o(i2), function(t4) {
        a2[t4] && n3.push(a2[t4]);
      })) : n3 = null != r2 ? pd("id", r2, a2) : null != o2 ? pd("name", o2, a2) : V(a2, function(t4) {
        return !!t4;
      }), dd(n3, t3)) : [];
    }, n2.prototype.findComponents = function(t3) {
      var e2, n3, i2, r2, o2, a2 = t3.query, s2 = t3.mainType, l2 = (n3 = s2 + "Index", i2 = s2 + "Id", r2 = s2 + "Name", !(e2 = a2) || null == e2[n3] && null == e2[i2] && null == e2[r2] ? null : { mainType: s2, index: e2[n3], id: e2[i2], name: e2[r2] }), u2 = l2 ? this.queryComponents(l2) : V(this._componentsMap.get(s2), function(t4) {
        return !!t4;
      });
      return o2 = dd(u2, t3), t3.filter ? V(o2, t3.filter) : o2;
    }, n2.prototype.eachComponent = function(t3, e2, n3) {
      var i2 = this._componentsMap;
      if (Y(t3)) {
        var r2 = e2, o2 = t3;
        i2.each(function(t4, e3) {
          for (var n4 = 0; t4 && n4 < t4.length; n4++) {
            var i3 = t4[n4];
            i3 && o2.call(r2, e3, i3, i3.componentIndex);
          }
        });
      } else
        for (var a2 = X(t3) ? i2.get(t3) : j(t3) ? this.findComponents(t3) : null, s2 = 0; a2 && s2 < a2.length; s2++) {
          var l2 = a2[s2];
          l2 && e2.call(n3, l2, l2.componentIndex);
        }
    }, n2.prototype.getSeriesByName = function(t3) {
      var e2 = Do(t3, null);
      return V(this._componentsMap.get("series"), function(t4) {
        return !!t4 && null != e2 && t4.name === e2;
      });
    }, n2.prototype.getSeriesByIndex = function(t3) {
      return this._componentsMap.get("series")[t3];
    }, n2.prototype.getSeriesByType = function(t3) {
      return V(this._componentsMap.get("series"), function(e2) {
        return !!e2 && e2.subType === t3;
      });
    }, n2.prototype.getSeries = function() {
      return V(this._componentsMap.get("series"), function(t3) {
        return !!t3;
      });
    }, n2.prototype.getSeriesCount = function() {
      return this._componentsCount.get("series");
    }, n2.prototype.eachSeries = function(t3, e2) {
      id(this), N(this._seriesIndices, function(n3) {
        var i2 = this._componentsMap.get("series")[n3];
        t3.call(e2, i2, n3);
      }, this);
    }, n2.prototype.eachRawSeries = function(t3, e2) {
      N(this._componentsMap.get("series"), function(n3) {
        n3 && t3.call(e2, n3, n3.componentIndex);
      });
    }, n2.prototype.eachSeriesByType = function(t3, e2, n3) {
      id(this), N(this._seriesIndices, function(i2) {
        var r2 = this._componentsMap.get("series")[i2];
        r2.subType === t3 && e2.call(n3, r2, i2);
      }, this);
    }, n2.prototype.eachRawSeriesByType = function(t3, e2, n3) {
      return N(this.getSeriesByType(t3), e2, n3);
    }, n2.prototype.isSeriesFiltered = function(t3) {
      return id(this), null == this._seriesIndicesMap.get(t3.componentIndex);
    }, n2.prototype.getCurrentSeriesIndices = function() {
      return (this._seriesIndices || []).slice();
    }, n2.prototype.filterSeries = function(t3, e2) {
      id(this);
      var n3 = [];
      N(this._seriesIndices, function(i2) {
        var r2 = this._componentsMap.get("series")[i2];
        t3.call(e2, r2, i2) && n3.push(i2);
      }, this), this._seriesIndices = n3, this._seriesIndicesMap = gt(n3);
    }, n2.prototype.restoreData = function(t3) {
      nd(this);
      var e2 = this._componentsMap, n3 = [];
      e2.each(function(t4, e3) {
        Op.hasClass(e3) && n3.push(e3);
      }), Op.topologicalTravel(n3, Op.getAllClassMainTypes(), function(n4) {
        N(e2.get(n4), function(e3) {
          !e3 || "series" === n4 && function(t4, e4) {
            if (e4) {
              var n5 = e4.seriesIndex, i2 = e4.seriesId, r2 = e4.seriesName;
              return null != n5 && t4.componentIndex !== n5 || null != i2 && t4.id !== i2 || null != r2 && t4.name !== r2;
            }
          }(e3, t3) || e3.restoreData();
        });
      });
    }, n2.internalField = (nd = function(t3) {
      var e2 = t3._seriesIndices = [];
      N(t3._componentsMap.get("series"), function(t4) {
        t4 && e2.push(t4.componentIndex);
      }), t3._seriesIndicesMap = gt(e2);
    }, id = function(t3) {
    }, void (rd = function(t3, e2) {
      t3.option = {}, t3.option[hd] = 1, t3._componentsMap = gt({ series: [] }), t3._componentsCount = gt();
      var n3 = e2.aria;
      j(n3) && null == n3.enabled && (n3.enabled = true), function(t4, e3) {
        var n4 = t4.color && !t4.colorLayer;
        N(e3, function(e4, i2) {
          "colorLayer" === i2 && n4 || Op.hasClass(i2) || ("object" == typeof e4 ? t4[i2] = t4[i2] ? T(t4[i2], e4, false) : I(e4) : null == t4[i2] && (t4[i2] = e4));
        });
      }(e2, t3._theme.option), T(e2, Ep, false), t3._mergeOption(e2, null);
    })), n2;
  }(Sc);
  function pd(t2, e2, n2) {
    if (H(e2)) {
      var i2 = gt();
      return N(e2, function(t3) {
        null != t3 && (null != Do(t3, null) && i2.set(t3, true));
      }), V(n2, function(e3) {
        return e3 && i2.get(e3[t2]);
      });
    }
    var r2 = Do(e2, null);
    return V(n2, function(e3) {
      return e3 && null != r2 && e3[t2] === r2;
    });
  }
  function dd(t2, e2) {
    return e2.hasOwnProperty("subType") ? V(t2, function(t3) {
      return t3 && t3.subType === e2.subType;
    }) : t2;
  }
  function fd(t2) {
    var e2 = gt();
    return t2 && N(_o(t2.replaceMerge), function(t3) {
      e2.set(t3, true);
    }), { replaceMergeMainTypeMap: e2 };
  }
  O(cd, sd);
  var gd = ["getDom", "getZr", "getWidth", "getHeight", "getDevicePixelRatio", "dispatchAction", "isSSR", "isDisposed", "on", "off", "getDataURL", "getConnectedDataURL", "getOption", "getId", "updateLabelLayout"];
  var yd = function(t2) {
    N(gd, function(e2) {
      this[e2] = G(t2[e2], t2);
    }, this);
  };
  var vd = {};
  var md = function() {
    function t2() {
      this._coordinateSystems = [];
    }
    return t2.prototype.create = function(t3, e2) {
      var n2 = [];
      N(vd, function(i2, r2) {
        var o2 = i2.create(t3, e2);
        n2 = n2.concat(o2 || []);
      }), this._coordinateSystems = n2;
    }, t2.prototype.update = function(t3, e2) {
      N(this._coordinateSystems, function(n2) {
        n2.update && n2.update(t3, e2);
      });
    }, t2.prototype.getCoordinateSystems = function() {
      return this._coordinateSystems.slice();
    }, t2.register = function(t3, e2) {
      vd[t3] = e2;
    }, t2.get = function(t3) {
      return vd[t3];
    }, t2;
  }();
  var xd = /^(min|max)?(.+)$/;
  var _d = function() {
    function t2(t3) {
      this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = t3;
    }
    return t2.prototype.setOption = function(t3, e2, n2) {
      t3 && (N(_o(t3.series), function(t4) {
        t4 && t4.data && K(t4.data) && ht(t4.data);
      }), N(_o(t3.dataset), function(t4) {
        t4 && t4.source && K(t4.source) && ht(t4.source);
      })), t3 = I(t3);
      var i2 = this._optionBackup, r2 = function(t4, e3, n3) {
        var i3, r3, o2 = [], a2 = t4.baseOption, s2 = t4.timeline, l2 = t4.options, u2 = t4.media, h2 = !!t4.media, c2 = !!(l2 || s2 || a2 && a2.timeline);
        a2 ? (r3 = a2).timeline || (r3.timeline = s2) : ((c2 || h2) && (t4.options = t4.media = null), r3 = t4);
        h2 && H(u2) && N(u2, function(t5) {
          t5 && t5.option && (t5.query ? o2.push(t5) : i3 || (i3 = t5));
        });
        function p2(t5) {
          N(e3, function(e4) {
            e4(t5, n3);
          });
        }
        return p2(r3), N(l2, function(t5) {
          return p2(t5);
        }), N(o2, function(t5) {
          return p2(t5.option);
        }), { baseOption: r3, timelineOptions: l2 || [], mediaDefault: i3, mediaList: o2 };
      }(t3, e2, !i2);
      this._newBaseOption = r2.baseOption, i2 ? (r2.timelineOptions.length && (i2.timelineOptions = r2.timelineOptions), r2.mediaList.length && (i2.mediaList = r2.mediaList), r2.mediaDefault && (i2.mediaDefault = r2.mediaDefault)) : this._optionBackup = r2;
    }, t2.prototype.mountOption = function(t3) {
      var e2 = this._optionBackup;
      return this._timelineOptions = e2.timelineOptions, this._mediaList = e2.mediaList, this._mediaDefault = e2.mediaDefault, this._currentMediaIndices = [], I(t3 ? e2.baseOption : this._newBaseOption);
    }, t2.prototype.getTimelineOption = function(t3) {
      var e2, n2 = this._timelineOptions;
      if (n2.length) {
        var i2 = t3.getComponent("timeline");
        i2 && (e2 = I(n2[i2.getCurrentIndex()]));
      }
      return e2;
    }, t2.prototype.getMediaOption = function(t3) {
      var e2, n2, i2 = this._api.getWidth(), r2 = this._api.getHeight(), o2 = this._mediaList, a2 = this._mediaDefault, s2 = [], l2 = [];
      if (!o2.length && !a2)
        return l2;
      for (var u2 = 0, h2 = o2.length; u2 < h2; u2++)
        bd(o2[u2].query, i2, r2) && s2.push(u2);
      return !s2.length && a2 && (s2 = [-1]), s2.length && (e2 = s2, n2 = this._currentMediaIndices, e2.join(",") !== n2.join(",")) && (l2 = E(s2, function(t4) {
        return I(-1 === t4 ? a2.option : o2[t4].option);
      })), this._currentMediaIndices = s2, l2;
    }, t2;
  }();
  function bd(t2, e2, n2) {
    var i2 = { width: e2, height: n2, aspectratio: e2 / n2 }, r2 = true;
    return N(t2, function(t3, e3) {
      var n3 = e3.match(xd);
      if (n3 && n3[1] && n3[2]) {
        var o2 = n3[1], a2 = n3[2].toLowerCase();
        (function(t4, e4, n4) {
          return "min" === n4 ? t4 >= e4 : "max" === n4 ? t4 <= e4 : t4 === e4;
        })(i2[a2], t3, o2) || (r2 = false);
      }
    }), r2;
  }
  var wd = N;
  var Sd = j;
  var Md = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
  function Id(t2) {
    var e2 = t2 && t2.itemStyle;
    if (e2)
      for (var n2 = 0, i2 = Md.length; n2 < i2; n2++) {
        var r2 = Md[n2], o2 = e2.normal, a2 = e2.emphasis;
        o2 && o2[r2] && (t2[r2] = t2[r2] || {}, t2[r2].normal ? T(t2[r2].normal, o2[r2]) : t2[r2].normal = o2[r2], o2[r2] = null), a2 && a2[r2] && (t2[r2] = t2[r2] || {}, t2[r2].emphasis ? T(t2[r2].emphasis, a2[r2]) : t2[r2].emphasis = a2[r2], a2[r2] = null);
      }
  }
  function Td(t2, e2, n2) {
    if (t2 && t2[e2] && (t2[e2].normal || t2[e2].emphasis)) {
      var i2 = t2[e2].normal, r2 = t2[e2].emphasis;
      i2 && (n2 ? (t2[e2].normal = t2[e2].emphasis = null, A(t2[e2], i2)) : t2[e2] = i2), r2 && (t2.emphasis = t2.emphasis || {}, t2.emphasis[e2] = r2, r2.focus && (t2.emphasis.focus = r2.focus), r2.blurScope && (t2.emphasis.blurScope = r2.blurScope));
    }
  }
  function Cd(t2) {
    Td(t2, "itemStyle"), Td(t2, "lineStyle"), Td(t2, "areaStyle"), Td(t2, "label"), Td(t2, "labelLine"), Td(t2, "upperLabel"), Td(t2, "edgeLabel");
  }
  function Dd(t2, e2) {
    var n2 = Sd(t2) && t2[e2], i2 = Sd(n2) && n2.textStyle;
    if (i2) {
      for (var r2 = 0, o2 = wo.length; r2 < o2; r2++) {
        var a2 = wo[r2];
        i2.hasOwnProperty(a2) && (n2[a2] = i2[a2]);
      }
    }
  }
  function Ad(t2) {
    t2 && (Cd(t2), Dd(t2, "label"), t2.emphasis && Dd(t2.emphasis, "label"));
  }
  function kd(t2) {
    return H(t2) ? t2 : t2 ? [t2] : [];
  }
  function Ld(t2) {
    return (H(t2) ? t2[0] : t2) || {};
  }
  function Pd(t2, e2) {
    wd(kd(t2.series), function(t3) {
      Sd(t3) && function(t4) {
        if (Sd(t4)) {
          Id(t4), Cd(t4), Dd(t4, "label"), Dd(t4, "upperLabel"), Dd(t4, "edgeLabel"), t4.emphasis && (Dd(t4.emphasis, "label"), Dd(t4.emphasis, "upperLabel"), Dd(t4.emphasis, "edgeLabel"));
          var e3 = t4.markPoint;
          e3 && (Id(e3), Ad(e3));
          var n3 = t4.markLine;
          n3 && (Id(n3), Ad(n3));
          var i2 = t4.markArea;
          i2 && Ad(i2);
          var r2 = t4.data;
          if ("graph" === t4.type) {
            r2 = r2 || t4.nodes;
            var o2 = t4.links || t4.edges;
            if (o2 && !K(o2))
              for (var a2 = 0; a2 < o2.length; a2++)
                Ad(o2[a2]);
            N(t4.categories, function(t5) {
              Cd(t5);
            });
          }
          if (r2 && !K(r2))
            for (a2 = 0; a2 < r2.length; a2++)
              Ad(r2[a2]);
          if ((e3 = t4.markPoint) && e3.data) {
            var s2 = e3.data;
            for (a2 = 0; a2 < s2.length; a2++)
              Ad(s2[a2]);
          }
          if ((n3 = t4.markLine) && n3.data) {
            var l2 = n3.data;
            for (a2 = 0; a2 < l2.length; a2++)
              H(l2[a2]) ? (Ad(l2[a2][0]), Ad(l2[a2][1])) : Ad(l2[a2]);
          }
          "gauge" === t4.type ? (Dd(t4, "axisLabel"), Dd(t4, "title"), Dd(t4, "detail")) : "treemap" === t4.type ? (Td(t4.breadcrumb, "itemStyle"), N(t4.levels, function(t5) {
            Cd(t5);
          })) : "tree" === t4.type && Cd(t4.leaves);
        }
      }(t3);
    });
    var n2 = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
    e2 && n2.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), wd(n2, function(e3) {
      wd(kd(t2[e3]), function(t3) {
        t3 && (Dd(t3, "axisLabel"), Dd(t3.axisPointer, "label"));
      });
    }), wd(kd(t2.parallel), function(t3) {
      var e3 = t3 && t3.parallelAxisDefault;
      Dd(e3, "axisLabel"), Dd(e3 && e3.axisPointer, "label");
    }), wd(kd(t2.calendar), function(t3) {
      Td(t3, "itemStyle"), Dd(t3, "dayLabel"), Dd(t3, "monthLabel"), Dd(t3, "yearLabel");
    }), wd(kd(t2.radar), function(t3) {
      Dd(t3, "name"), t3.name && null == t3.axisName && (t3.axisName = t3.name, delete t3.name), null != t3.nameGap && null == t3.axisNameGap && (t3.axisNameGap = t3.nameGap, delete t3.nameGap);
    }), wd(kd(t2.geo), function(t3) {
      Sd(t3) && (Ad(t3), wd(kd(t3.regions), function(t4) {
        Ad(t4);
      }));
    }), wd(kd(t2.timeline), function(t3) {
      Ad(t3), Td(t3, "label"), Td(t3, "itemStyle"), Td(t3, "controlStyle", true);
      var e3 = t3.data;
      H(e3) && N(e3, function(t4) {
        j(t4) && (Td(t4, "label"), Td(t4, "itemStyle"));
      });
    }), wd(kd(t2.toolbox), function(t3) {
      Td(t3, "iconStyle"), wd(t3.feature, function(t4) {
        Td(t4, "iconStyle");
      });
    }), Dd(Ld(t2.axisPointer), "label"), Dd(Ld(t2.tooltip).axisPointer, "label");
  }
  function Od(t2) {
    t2 && N(Rd, function(e2) {
      e2[0] in t2 && !(e2[1] in t2) && (t2[e2[1]] = t2[e2[0]]);
    });
  }
  var Rd = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]];
  var Nd = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"];
  var Ed = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
  function zd(t2) {
    var e2 = t2 && t2.itemStyle;
    if (e2)
      for (var n2 = 0; n2 < Ed.length; n2++) {
        var i2 = Ed[n2][1], r2 = Ed[n2][0];
        null != e2[i2] && (e2[r2] = e2[i2]);
      }
  }
  function Vd(t2) {
    t2 && "edge" === t2.alignTo && null != t2.margin && null == t2.edgeDistance && (t2.edgeDistance = t2.margin);
  }
  function Bd(t2) {
    t2 && t2.downplay && !t2.blur && (t2.blur = t2.downplay);
  }
  function Fd(t2, e2) {
    if (t2)
      for (var n2 = 0; n2 < t2.length; n2++)
        e2(t2[n2]), t2[n2] && Fd(t2[n2].children, e2);
  }
  function Gd(t2, e2) {
    Pd(t2, e2), t2.series = _o(t2.series), N(t2.series, function(t3) {
      if (j(t3)) {
        var e3 = t3.type;
        if ("line" === e3)
          null != t3.clipOverflow && (t3.clip = t3.clipOverflow);
        else if ("pie" === e3 || "gauge" === e3) {
          if (null != t3.clockWise && (t3.clockwise = t3.clockWise), Vd(t3.label), (r2 = t3.data) && !K(r2))
            for (var n2 = 0; n2 < r2.length; n2++)
              Vd(r2[n2]);
          null != t3.hoverOffset && (t3.emphasis = t3.emphasis || {}, (t3.emphasis.scaleSize = null) && (t3.emphasis.scaleSize = t3.hoverOffset));
        } else if ("gauge" === e3) {
          var i2 = function(t4, e4) {
            for (var n3 = e4.split(","), i3 = t4, r3 = 0; r3 < n3.length && null != (i3 = i3 && i3[n3[r3]]); r3++)
              ;
            return i3;
          }(t3, "pointer.color");
          null != i2 && function(t4, e4, n3, i3) {
            for (var r3, o3 = e4.split(","), a2 = t4, s2 = 0; s2 < o3.length - 1; s2++)
              null == a2[r3 = o3[s2]] && (a2[r3] = {}), a2 = a2[r3];
            (i3 || null == a2[o3[s2]]) && (a2[o3[s2]] = n3);
          }(t3, "itemStyle.color", i2);
        } else if ("bar" === e3) {
          var r2;
          if (zd(t3), zd(t3.backgroundStyle), zd(t3.emphasis), (r2 = t3.data) && !K(r2))
            for (n2 = 0; n2 < r2.length; n2++)
              "object" == typeof r2[n2] && (zd(r2[n2]), zd(r2[n2] && r2[n2].emphasis));
        } else if ("sunburst" === e3) {
          var o2 = t3.highlightPolicy;
          o2 && (t3.emphasis = t3.emphasis || {}, t3.emphasis.focus || (t3.emphasis.focus = o2)), Bd(t3), Fd(t3.data, Bd);
        } else
          "graph" === e3 || "sankey" === e3 ? function(t4) {
            t4 && null != t4.focusNodeAdjacency && (t4.emphasis = t4.emphasis || {}, null == t4.emphasis.focus && (t4.emphasis.focus = "adjacency"));
          }(t3) : "map" === e3 && (t3.mapType && !t3.map && (t3.map = t3.mapType), t3.mapLocation && A(t3, t3.mapLocation));
        null != t3.hoverAnimation && (t3.emphasis = t3.emphasis || {}, t3.emphasis && null == t3.emphasis.scale && (t3.emphasis.scale = t3.hoverAnimation)), Od(t3);
      }
    }), t2.dataRange && (t2.visualMap = t2.dataRange), N(Nd, function(e3) {
      var n2 = t2[e3];
      n2 && (H(n2) || (n2 = [n2]), N(n2, function(t3) {
        Od(t3);
      }));
    });
  }
  function Wd(t2) {
    N(t2, function(e2, n2) {
      var i2 = [], r2 = [NaN, NaN], o2 = [e2.stackResultDimension, e2.stackedOverDimension], a2 = e2.data, s2 = e2.isStackedByIndex, l2 = e2.seriesModel.get("stackStrategy") || "samesign";
      a2.modify(o2, function(o3, u2, h2) {
        var c2, p2, d2 = a2.get(e2.stackedDimension, h2);
        if (isNaN(d2))
          return r2;
        s2 ? p2 = a2.getRawIndex(h2) : c2 = a2.get(e2.stackedByDimension, h2);
        for (var f2 = NaN, g2 = n2 - 1; g2 >= 0; g2--) {
          var y2 = t2[g2];
          if (s2 || (p2 = y2.data.rawIndexOf(y2.stackedByDimension, c2)), p2 >= 0) {
            var v2 = y2.data.getByRawIndex(y2.stackResultDimension, p2);
            if ("all" === l2 || "positive" === l2 && v2 > 0 || "negative" === l2 && v2 < 0 || "samesign" === l2 && d2 >= 0 && v2 > 0 || "samesign" === l2 && d2 <= 0 && v2 < 0) {
              d2 = Jr(d2, v2), f2 = v2;
              break;
            }
          }
        }
        return i2[0] = d2, i2[1] = f2, i2;
      });
    });
  }
  var Hd;
  var Yd;
  var Xd;
  var Ud;
  var Zd;
  var jd = function(t2) {
    this.data = t2.data || (t2.sourceFormat === Gp ? {} : []), this.sourceFormat = t2.sourceFormat || Hp, this.seriesLayoutBy = t2.seriesLayoutBy || Yp, this.startIndex = t2.startIndex || 0, this.dimensionsDetectedCount = t2.dimensionsDetectedCount, this.metaRawOption = t2.metaRawOption;
    var e2 = this.dimensionsDefine = t2.dimensionsDefine;
    if (e2)
      for (var n2 = 0; n2 < e2.length; n2++) {
        var i2 = e2[n2];
        null == i2.type && Qp(this, n2) === Up && (i2.type = "ordinal");
      }
  };
  function qd(t2) {
    return t2 instanceof jd;
  }
  function Kd(t2, e2, n2) {
    n2 = n2 || Jd(t2);
    var i2 = e2.seriesLayoutBy, r2 = function(t3, e3, n3, i3, r3) {
      var o2, a2;
      if (!t3)
        return { dimensionsDefine: Qd(r3), startIndex: a2, dimensionsDetectedCount: o2 };
      if (e3 === Bp) {
        var s2 = t3;
        "auto" === i3 || null == i3 ? tf(function(t4) {
          null != t4 && "-" !== t4 && (X(t4) ? null == a2 && (a2 = 1) : a2 = 0);
        }, n3, s2, 10) : a2 = Z(i3) ? i3 : i3 ? 1 : 0, r3 || 1 !== a2 || (r3 = [], tf(function(t4, e4) {
          r3[e4] = null != t4 ? t4 + "" : "";
        }, n3, s2, 1 / 0)), o2 = r3 ? r3.length : n3 === Xp ? s2.length : s2[0] ? s2[0].length : null;
      } else if (e3 === Fp)
        r3 || (r3 = function(t4) {
          var e4, n4 = 0;
          for (; n4 < t4.length && !(e4 = t4[n4++]); )
            ;
          if (e4)
            return F(e4);
        }(t3));
      else if (e3 === Gp)
        r3 || (r3 = [], N(t3, function(t4, e4) {
          r3.push(e4);
        }));
      else if (e3 === Vp) {
        var l2 = So(t3[0]);
        o2 = H(l2) && l2.length || 1;
      }
      return { startIndex: a2, dimensionsDefine: Qd(r3), dimensionsDetectedCount: o2 };
    }(t2, n2, i2, e2.sourceHeader, e2.dimensions);
    return new jd({ data: t2, sourceFormat: n2, seriesLayoutBy: i2, dimensionsDefine: r2.dimensionsDefine, startIndex: r2.startIndex, dimensionsDetectedCount: r2.dimensionsDetectedCount, metaRawOption: I(e2) });
  }
  function $d(t2) {
    return new jd({ data: t2, sourceFormat: K(t2) ? Wp : Vp });
  }
  function Jd(t2) {
    var e2 = Hp;
    if (K(t2))
      e2 = Wp;
    else if (H(t2)) {
      0 === t2.length && (e2 = Bp);
      for (var n2 = 0, i2 = t2.length; n2 < i2; n2++) {
        var r2 = t2[n2];
        if (null != r2) {
          if (H(r2)) {
            e2 = Bp;
            break;
          }
          if (j(r2)) {
            e2 = Fp;
            break;
          }
        }
      }
    } else if (j(t2)) {
      for (var o2 in t2)
        if (xt(t2, o2) && R(t2[o2])) {
          e2 = Gp;
          break;
        }
    }
    return e2;
  }
  function Qd(t2) {
    if (t2) {
      var e2 = gt();
      return E(t2, function(t3, n2) {
        var i2 = { name: (t3 = j(t3) ? t3 : { name: t3 }).name, displayName: t3.displayName, type: t3.type };
        if (null == i2.name)
          return i2;
        i2.name += "", null == i2.displayName && (i2.displayName = i2.name);
        var r2 = e2.get(i2.name);
        return r2 ? i2.name += "-" + r2.count++ : e2.set(i2.name, { count: 1 }), i2;
      });
    }
  }
  function tf(t2, e2, n2, i2) {
    if (e2 === Xp)
      for (var r2 = 0; r2 < n2.length && r2 < i2; r2++)
        t2(n2[r2] ? n2[r2][0] : null, r2);
    else {
      var o2 = n2[0] || [];
      for (r2 = 0; r2 < o2.length && r2 < i2; r2++)
        t2(o2[r2], r2);
    }
  }
  function ef(t2) {
    var e2 = t2.sourceFormat;
    return e2 === Fp || e2 === Gp;
  }
  var nf = function() {
    function t2(t3, e2) {
      var n2 = qd(t3) ? t3 : $d(t3);
      this._source = n2;
      var i2 = this._data = n2.data;
      n2.sourceFormat === Wp && (this._offset = 0, this._dimSize = e2, this._data = i2), Zd(this, i2, n2);
    }
    return t2.prototype.getSource = function() {
      return this._source;
    }, t2.prototype.count = function() {
      return 0;
    }, t2.prototype.getItem = function(t3, e2) {
    }, t2.prototype.appendData = function(t3) {
    }, t2.prototype.clean = function() {
    }, t2.protoInitialize = function() {
      var e2 = t2.prototype;
      e2.pure = false, e2.persistent = true;
    }(), t2.internalField = function() {
      var t3;
      Zd = function(t4, r3, o2) {
        var a2 = o2.sourceFormat, s2 = o2.seriesLayoutBy, l2 = o2.startIndex, u2 = o2.dimensionsDefine, h2 = Ud[df(a2, s2)];
        if (D(t4, h2), a2 === Wp)
          t4.getItem = e2, t4.count = i2, t4.fillStorage = n2;
        else {
          var c2 = af(a2, s2);
          t4.getItem = G(c2, null, r3, l2, u2);
          var p2 = uf(a2, s2);
          t4.count = G(p2, null, r3, l2, u2);
        }
      };
      var e2 = function(t4, e3) {
        t4 -= this._offset, e3 = e3 || [];
        for (var n3 = this._data, i3 = this._dimSize, r3 = i3 * t4, o2 = 0; o2 < i3; o2++)
          e3[o2] = n3[r3 + o2];
        return e3;
      }, n2 = function(t4, e3, n3, i3) {
        for (var r3 = this._data, o2 = this._dimSize, a2 = 0; a2 < o2; a2++) {
          for (var s2 = i3[a2], l2 = null == s2[0] ? 1 / 0 : s2[0], u2 = null == s2[1] ? -1 / 0 : s2[1], h2 = e3 - t4, c2 = n3[a2], p2 = 0; p2 < h2; p2++) {
            var d2 = r3[p2 * o2 + a2];
            c2[t4 + p2] = d2, d2 < l2 && (l2 = d2), d2 > u2 && (u2 = d2);
          }
          s2[0] = l2, s2[1] = u2;
        }
      }, i2 = function() {
        return this._data ? this._data.length / this._dimSize : 0;
      };
      function r2(t4) {
        for (var e3 = 0; e3 < t4.length; e3++)
          this._data.push(t4[e3]);
      }
      (t3 = {})[Bp + "_" + Yp] = { pure: true, appendData: r2 }, t3[Bp + "_" + Xp] = { pure: true, appendData: function() {
        throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
      } }, t3[Fp] = { pure: true, appendData: r2 }, t3[Gp] = { pure: true, appendData: function(t4) {
        var e3 = this._data;
        N(t4, function(t5, n3) {
          for (var i3 = e3[n3] || (e3[n3] = []), r3 = 0; r3 < (t5 || []).length; r3++)
            i3.push(t5[r3]);
        });
      } }, t3[Vp] = { appendData: r2 }, t3[Wp] = { persistent: false, pure: true, appendData: function(t4) {
        this._data = t4;
      }, clean: function() {
        this._offset += this.count(), this._data = null;
      } }, Ud = t3;
    }(), t2;
  }();
  var rf = function(t2, e2, n2, i2) {
    return t2[i2];
  };
  var of = ((Hd = {})[Bp + "_" + Yp] = function(t2, e2, n2, i2) {
    return t2[i2 + e2];
  }, Hd[Bp + "_" + Xp] = function(t2, e2, n2, i2, r2) {
    i2 += e2;
    for (var o2 = r2 || [], a2 = t2, s2 = 0; s2 < a2.length; s2++) {
      var l2 = a2[s2];
      o2[s2] = l2 ? l2[i2] : null;
    }
    return o2;
  }, Hd[Fp] = rf, Hd[Gp] = function(t2, e2, n2, i2, r2) {
    for (var o2 = r2 || [], a2 = 0; a2 < n2.length; a2++) {
      var s2 = n2[a2].name;
      var l2 = t2[s2];
      o2[a2] = l2 ? l2[i2] : null;
    }
    return o2;
  }, Hd[Vp] = rf, Hd);
  function af(t2, e2) {
    var n2 = of[df(t2, e2)];
    return n2;
  }
  var sf = function(t2, e2, n2) {
    return t2.length;
  };
  var lf = ((Yd = {})[Bp + "_" + Yp] = function(t2, e2, n2) {
    return Math.max(0, t2.length - e2);
  }, Yd[Bp + "_" + Xp] = function(t2, e2, n2) {
    var i2 = t2[0];
    return i2 ? Math.max(0, i2.length - e2) : 0;
  }, Yd[Fp] = sf, Yd[Gp] = function(t2, e2, n2) {
    var i2 = n2[0].name;
    var r2 = t2[i2];
    return r2 ? r2.length : 0;
  }, Yd[Vp] = sf, Yd);
  function uf(t2, e2) {
    var n2 = lf[df(t2, e2)];
    return n2;
  }
  var hf = function(t2, e2, n2) {
    return t2[e2];
  };
  var cf = ((Xd = {})[Bp] = hf, Xd[Fp] = function(t2, e2, n2) {
    return t2[n2];
  }, Xd[Gp] = hf, Xd[Vp] = function(t2, e2, n2) {
    var i2 = So(t2);
    return i2 instanceof Array ? i2[e2] : i2;
  }, Xd[Wp] = hf, Xd);
  function pf(t2) {
    var e2 = cf[t2];
    return e2;
  }
  function df(t2, e2) {
    return t2 === Bp ? t2 + "_" + e2 : t2;
  }
  function ff(t2, e2, n2) {
    if (t2) {
      var i2 = t2.getRawDataItem(e2);
      if (null != i2) {
        var r2 = t2.getStore(), o2 = r2.getSource().sourceFormat;
        if (null != n2) {
          var a2 = t2.getDimensionIndex(n2), s2 = r2.getDimensionProperty(a2);
          return pf(o2)(i2, a2, s2);
        }
        var l2 = i2;
        return o2 === Vp && (l2 = So(i2)), l2;
      }
    }
  }
  var gf = /\{@(.+?)\}/g;
  var yf = function() {
    function t2() {
    }
    return t2.prototype.getDataParams = function(t3, e2) {
      var n2 = this.getData(e2), i2 = this.getRawValue(t3, e2), r2 = n2.getRawIndex(t3), o2 = n2.getName(t3), a2 = n2.getRawDataItem(t3), s2 = n2.getItemVisual(t3, "style"), l2 = s2 && s2[n2.getItemVisual(t3, "drawType") || "fill"], u2 = s2 && s2.stroke, h2 = this.mainType, c2 = "series" === h2, p2 = n2.userOutput && n2.userOutput.get();
      return { componentType: h2, componentSubType: this.subType, componentIndex: this.componentIndex, seriesType: c2 ? this.subType : null, seriesIndex: this.seriesIndex, seriesId: c2 ? this.id : null, seriesName: c2 ? this.name : null, name: o2, dataIndex: r2, data: a2, dataType: e2, value: i2, color: l2, borderColor: u2, dimensionNames: p2 ? p2.fullDimensions : null, encode: p2 ? p2.encode : null, $vars: ["seriesName", "name", "value"] };
    }, t2.prototype.getFormattedLabel = function(t3, e2, n2, i2, r2, o2) {
      e2 = e2 || "normal";
      var a2 = this.getData(n2), s2 = this.getDataParams(t3, n2);
      (o2 && (s2.value = o2.interpolatedValue), null != i2 && H(s2.value) && (s2.value = s2.value[i2]), r2) || (r2 = a2.getItemModel(t3).get("normal" === e2 ? ["label", "formatter"] : [e2, "label", "formatter"]));
      return Y(r2) ? (s2.status = e2, s2.dimensionIndex = i2, r2(s2)) : X(r2) ? vp(r2, s2).replace(gf, function(e3, n3) {
        var i3 = n3.length, r3 = n3;
        "[" === r3.charAt(0) && "]" === r3.charAt(i3 - 1) && (r3 = +r3.slice(1, i3 - 1));
        var s3 = ff(a2, t3, r3);
        if (o2 && H(o2.interpolatedValue)) {
          var l2 = a2.getDimensionIndex(r3);
          l2 >= 0 && (s3 = o2.interpolatedValue[l2]);
        }
        return null != s3 ? s3 + "" : "";
      }) : void 0;
    }, t2.prototype.getRawValue = function(t3, e2) {
      return ff(this.getData(e2), t3);
    }, t2.prototype.formatTooltip = function(t3, e2, n2) {
    }, t2;
  }();
  function vf(t2) {
    var e2, n2;
    return j(t2) ? t2.type && (n2 = t2) : e2 = t2, { text: e2, frag: n2 };
  }
  function mf(t2) {
    return new xf(t2);
  }
  var xf = function() {
    function t2(t3) {
      t3 = t3 || {}, this._reset = t3.reset, this._plan = t3.plan, this._count = t3.count, this._onDirty = t3.onDirty, this._dirty = true;
    }
    return t2.prototype.perform = function(t3) {
      var e2, n2 = this._upstream, i2 = t3 && t3.skip;
      if (this._dirty && n2) {
        var r2 = this.context;
        r2.data = r2.outputData = n2.context.outputData;
      }
      this.__pipeline && (this.__pipeline.currentTask = this), this._plan && !i2 && (e2 = this._plan(this.context));
      var o2, a2 = h2(this._modBy), s2 = this._modDataCount || 0, l2 = h2(t3 && t3.modBy), u2 = t3 && t3.modDataCount || 0;
      function h2(t4) {
        return !(t4 >= 1) && (t4 = 1), t4;
      }
      a2 === l2 && s2 === u2 || (e2 = "reset"), (this._dirty || "reset" === e2) && (this._dirty = false, o2 = this._doReset(i2)), this._modBy = l2, this._modDataCount = u2;
      var c2 = t3 && t3.step;
      if (this._dueEnd = n2 ? n2._outputDueEnd : this._count ? this._count(this.context) : 1 / 0, this._progress) {
        var p2 = this._dueIndex, d2 = Math.min(null != c2 ? this._dueIndex + c2 : 1 / 0, this._dueEnd);
        if (!i2 && (o2 || p2 < d2)) {
          var f2 = this._progress;
          if (H(f2))
            for (var g2 = 0; g2 < f2.length; g2++)
              this._doProgress(f2[g2], p2, d2, l2, u2);
          else
            this._doProgress(f2, p2, d2, l2, u2);
        }
        this._dueIndex = d2;
        var y2 = null != this._settedOutputEnd ? this._settedOutputEnd : d2;
        this._outputDueEnd = y2;
      } else
        this._dueIndex = this._outputDueEnd = null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
      return this.unfinished();
    }, t2.prototype.dirty = function() {
      this._dirty = true, this._onDirty && this._onDirty(this.context);
    }, t2.prototype._doProgress = function(t3, e2, n2, i2, r2) {
      _f.reset(e2, n2, i2, r2), this._callingProgress = t3, this._callingProgress({ start: e2, end: n2, count: n2 - e2, next: _f.next }, this.context);
    }, t2.prototype._doReset = function(t3) {
      var e2, n2;
      this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null, !t3 && this._reset && ((e2 = this._reset(this.context)) && e2.progress && (n2 = e2.forceFirstProgress, e2 = e2.progress), H(e2) && !e2.length && (e2 = null)), this._progress = e2, this._modBy = this._modDataCount = null;
      var i2 = this._downstream;
      return i2 && i2.dirty(), n2;
    }, t2.prototype.unfinished = function() {
      return this._progress && this._dueIndex < this._dueEnd;
    }, t2.prototype.pipe = function(t3) {
      (this._downstream !== t3 || this._dirty) && (this._downstream = t3, t3._upstream = this, t3.dirty());
    }, t2.prototype.dispose = function() {
      this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = false, this._disposed = true);
    }, t2.prototype.getUpstream = function() {
      return this._upstream;
    }, t2.prototype.getDownstream = function() {
      return this._downstream;
    }, t2.prototype.setOutputEnd = function(t3) {
      this._outputDueEnd = this._settedOutputEnd = t3;
    }, t2;
  }();
  var _f = function() {
    var t2, e2, n2, i2, r2, o2 = { reset: function(l2, u2, h2, c2) {
      e2 = l2, t2 = u2, n2 = h2, i2 = c2, r2 = Math.ceil(i2 / n2), o2.next = n2 > 1 && i2 > 0 ? s2 : a2;
    } };
    return o2;
    function a2() {
      return e2 < t2 ? e2++ : null;
    }
    function s2() {
      var o3 = e2 % r2 * n2 + Math.ceil(e2 / r2), a3 = e2 >= t2 ? null : o3 < i2 ? o3 : e2;
      return e2++, a3;
    }
  }();
  function bf(t2, e2) {
    var n2 = e2 && e2.type;
    return "ordinal" === n2 ? t2 : ("time" !== n2 || Z(t2) || null == t2 || "-" === t2 || (t2 = +io(t2)), null == t2 || "" === t2 ? NaN : +t2);
  }
  var wf = gt({ number: function(t2) {
    return parseFloat(t2);
  }, time: function(t2) {
    return +io(t2);
  }, trim: function(t2) {
    return X(t2) ? lt(t2) : t2;
  } });
  function Sf(t2) {
    return wf.get(t2);
  }
  var Mf = { lt: function(t2, e2) {
    return t2 < e2;
  }, lte: function(t2, e2) {
    return t2 <= e2;
  }, gt: function(t2, e2) {
    return t2 > e2;
  }, gte: function(t2, e2) {
    return t2 >= e2;
  } };
  var If = function() {
    function t2(t3, e2) {
      if (!Z(e2)) {
        var n2 = "";
        yo(n2);
      }
      this._opFn = Mf[t3], this._rvalFloat = uo(e2);
    }
    return t2.prototype.evaluate = function(t3) {
      return Z(t3) ? this._opFn(t3, this._rvalFloat) : this._opFn(uo(t3), this._rvalFloat);
    }, t2;
  }();
  var Tf = function() {
    function t2(t3, e2) {
      var n2 = "desc" === t3;
      this._resultLT = n2 ? 1 : -1, null == e2 && (e2 = n2 ? "min" : "max"), this._incomparable = "min" === e2 ? -1 / 0 : 1 / 0;
    }
    return t2.prototype.evaluate = function(t3, e2) {
      var n2 = Z(t3) ? t3 : uo(t3), i2 = Z(e2) ? e2 : uo(e2), r2 = isNaN(n2), o2 = isNaN(i2);
      if (r2 && (n2 = this._incomparable), o2 && (i2 = this._incomparable), r2 && o2) {
        var a2 = X(t3), s2 = X(e2);
        a2 && (n2 = s2 ? t3 : 0), s2 && (i2 = a2 ? e2 : 0);
      }
      return n2 < i2 ? this._resultLT : n2 > i2 ? -this._resultLT : 0;
    }, t2;
  }();
  var Cf = function() {
    function t2(t3, e2) {
      this._rval = e2, this._isEQ = t3, this._rvalTypeof = typeof e2, this._rvalFloat = uo(e2);
    }
    return t2.prototype.evaluate = function(t3) {
      var e2 = t3 === this._rval;
      if (!e2) {
        var n2 = typeof t3;
        n2 === this._rvalTypeof || "number" !== n2 && "number" !== this._rvalTypeof || (e2 = uo(t3) === this._rvalFloat);
      }
      return this._isEQ ? e2 : !e2;
    }, t2;
  }();
  function Df(t2, e2) {
    return "eq" === t2 || "ne" === t2 ? new Cf("eq" === t2, e2) : xt(Mf, t2) ? new If(t2, e2) : null;
  }
  var Af = function() {
    function t2() {
    }
    return t2.prototype.getRawData = function() {
      throw new Error("not supported");
    }, t2.prototype.getRawDataItem = function(t3) {
      throw new Error("not supported");
    }, t2.prototype.cloneRawData = function() {
    }, t2.prototype.getDimensionInfo = function(t3) {
    }, t2.prototype.cloneAllDimensionInfo = function() {
    }, t2.prototype.count = function() {
    }, t2.prototype.retrieveValue = function(t3, e2) {
    }, t2.prototype.retrieveValueFromItem = function(t3, e2) {
    }, t2.prototype.convertValue = function(t3, e2) {
      return bf(t3, e2);
    }, t2;
  }();
  function kf(t2) {
    var e2 = t2.sourceFormat;
    if (!Ef(e2)) {
      var n2 = "";
      yo(n2);
    }
    return t2.data;
  }
  function Lf(t2) {
    var e2 = t2.sourceFormat, n2 = t2.data;
    if (!Ef(e2)) {
      var i2 = "";
      yo(i2);
    }
    if (e2 === Bp) {
      for (var r2 = [], o2 = 0, a2 = n2.length; o2 < a2; o2++)
        r2.push(n2[o2].slice());
      return r2;
    }
    if (e2 === Fp) {
      for (r2 = [], o2 = 0, a2 = n2.length; o2 < a2; o2++)
        r2.push(D({}, n2[o2]));
      return r2;
    }
  }
  function Pf(t2, e2, n2) {
    if (null != n2)
      return Z(n2) || !isNaN(n2) && !xt(e2, n2) ? t2[n2] : xt(e2, n2) ? e2[n2] : void 0;
  }
  function Of(t2) {
    return I(t2);
  }
  var Rf = gt();
  function Nf(t2, e2, n2, i2) {
    var r2 = "";
    e2.length || yo(r2), j(t2) || yo(r2);
    var o2 = t2.type, a2 = Rf.get(o2);
    a2 || yo(r2);
    var s2 = E(e2, function(t3) {
      return function(t4, e3) {
        var n3 = new Af(), i3 = t4.data, r3 = n3.sourceFormat = t4.sourceFormat, o3 = t4.startIndex, a3 = "";
        t4.seriesLayoutBy !== Yp && yo(a3);
        var s3 = [], l3 = {}, u2 = t4.dimensionsDefine;
        if (u2)
          N(u2, function(t5, e4) {
            var n4 = t5.name, i4 = { index: e4, name: n4, displayName: t5.displayName };
            if (s3.push(i4), null != n4) {
              var r4 = "";
              xt(l3, n4) && yo(r4), l3[n4] = i4;
            }
          });
        else
          for (var h2 = 0; h2 < t4.dimensionsDetectedCount; h2++)
            s3.push({ index: h2 });
        var c2 = af(r3, Yp);
        e3.__isBuiltIn && (n3.getRawDataItem = function(t5) {
          return c2(i3, o3, s3, t5);
        }, n3.getRawData = G(kf, null, t4)), n3.cloneRawData = G(Lf, null, t4);
        var p2 = uf(r3, Yp);
        n3.count = G(p2, null, i3, o3, s3);
        var d2 = pf(r3);
        n3.retrieveValue = function(t5, e4) {
          var n4 = c2(i3, o3, s3, t5);
          return f2(n4, e4);
        };
        var f2 = n3.retrieveValueFromItem = function(t5, e4) {
          if (null != t5) {
            var n4 = s3[e4];
            return n4 ? d2(t5, e4, n4.name) : void 0;
          }
        };
        return n3.getDimensionInfo = G(Pf, null, s3, l3), n3.cloneAllDimensionInfo = G(Of, null, s3), n3;
      }(t3, a2);
    }), l2 = _o(a2.transform({ upstream: s2[0], upstreamList: s2, config: I(t2.config) }));
    return E(l2, function(t3, n3) {
      var i3, r3 = "";
      j(t3) || yo(r3), t3.data || yo(r3), Ef(Jd(t3.data)) || yo(r3);
      var o3 = e2[0];
      if (o3 && 0 === n3 && !t3.dimensions) {
        var a3 = o3.startIndex;
        a3 && (t3.data = o3.data.slice(0, a3).concat(t3.data)), i3 = { seriesLayoutBy: Yp, sourceHeader: a3, dimensions: o3.metaRawOption.dimensions };
      } else
        i3 = { seriesLayoutBy: Yp, sourceHeader: 0, dimensions: t3.dimensions };
      return Kd(t3.data, i3, null);
    });
  }
  function Ef(t2) {
    return t2 === Bp || t2 === Fp;
  }
  var zf;
  var Vf = "undefined";
  var Bf = typeof Uint32Array === Vf ? Array : Uint32Array;
  var Ff = typeof Uint16Array === Vf ? Array : Uint16Array;
  var Gf = typeof Int32Array === Vf ? Array : Int32Array;
  var Wf = typeof Float64Array === Vf ? Array : Float64Array;
  var Hf = { float: Wf, int: Gf, ordinal: Array, number: Array, time: Wf };
  function Yf(t2) {
    return t2 > 65535 ? Bf : Ff;
  }
  function Xf(t2, e2, n2, i2, r2) {
    var o2 = Hf[n2 || "float"];
    if (r2) {
      var a2 = t2[e2], s2 = a2 && a2.length;
      if (s2 !== i2) {
        for (var l2 = new o2(i2), u2 = 0; u2 < s2; u2++)
          l2[u2] = a2[u2];
        t2[e2] = l2;
      }
    } else
      t2[e2] = new o2(i2);
  }
  var Uf = function() {
    function t2() {
      this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = gt();
    }
    return t2.prototype.initData = function(t3, e2, n2) {
      this._provider = t3, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
      var i2 = t3.getSource(), r2 = this.defaultDimValueGetter = zf[i2.sourceFormat];
      this._dimValueGetter = n2 || r2, this._rawExtent = [];
      ef(i2);
      this._dimensions = E(e2, function(t4) {
        return { type: t4.type, property: t4.property };
      }), this._initDataFromProvider(0, t3.count());
    }, t2.prototype.getProvider = function() {
      return this._provider;
    }, t2.prototype.getSource = function() {
      return this._provider.getSource();
    }, t2.prototype.ensureCalculationDimension = function(t3, e2) {
      var n2 = this._calcDimNameToIdx, i2 = this._dimensions, r2 = n2.get(t3);
      if (null != r2) {
        if (i2[r2].type === e2)
          return r2;
      } else
        r2 = i2.length;
      return i2[r2] = { type: e2 }, n2.set(t3, r2), this._chunks[r2] = new Hf[e2 || "float"](this._rawCount), this._rawExtent[r2] = [1 / 0, -1 / 0], r2;
    }, t2.prototype.collectOrdinalMeta = function(t3, e2) {
      var n2 = this._chunks[t3], i2 = this._dimensions[t3], r2 = this._rawExtent, o2 = i2.ordinalOffset || 0, a2 = n2.length;
      0 === o2 && (r2[t3] = [1 / 0, -1 / 0]);
      for (var s2 = r2[t3], l2 = o2; l2 < a2; l2++) {
        var u2 = n2[l2] = e2.parseAndCollect(n2[l2]);
        isNaN(u2) || (s2[0] = Math.min(u2, s2[0]), s2[1] = Math.max(u2, s2[1]));
      }
      i2.ordinalMeta = e2, i2.ordinalOffset = a2, i2.type = "ordinal";
    }, t2.prototype.getOrdinalMeta = function(t3) {
      return this._dimensions[t3].ordinalMeta;
    }, t2.prototype.getDimensionProperty = function(t3) {
      var e2 = this._dimensions[t3];
      return e2 && e2.property;
    }, t2.prototype.appendData = function(t3) {
      var e2 = this._provider, n2 = this.count();
      e2.appendData(t3);
      var i2 = e2.count();
      return e2.persistent || (i2 += n2), n2 < i2 && this._initDataFromProvider(n2, i2, true), [n2, i2];
    }, t2.prototype.appendValues = function(t3, e2) {
      for (var n2 = this._chunks, i2 = this._dimensions, r2 = i2.length, o2 = this._rawExtent, a2 = this.count(), s2 = a2 + Math.max(t3.length, e2 || 0), l2 = 0; l2 < r2; l2++) {
        Xf(n2, l2, (d2 = i2[l2]).type, s2, true);
      }
      for (var u2 = [], h2 = a2; h2 < s2; h2++)
        for (var c2 = h2 - a2, p2 = 0; p2 < r2; p2++) {
          var d2 = i2[p2], f2 = zf.arrayRows.call(this, t3[c2] || u2, d2.property, c2, p2);
          n2[p2][h2] = f2;
          var g2 = o2[p2];
          f2 < g2[0] && (g2[0] = f2), f2 > g2[1] && (g2[1] = f2);
        }
      return this._rawCount = this._count = s2, { start: a2, end: s2 };
    }, t2.prototype._initDataFromProvider = function(t3, e2, n2) {
      for (var i2 = this._provider, r2 = this._chunks, o2 = this._dimensions, a2 = o2.length, s2 = this._rawExtent, l2 = E(o2, function(t4) {
        return t4.property;
      }), u2 = 0; u2 < a2; u2++) {
        var h2 = o2[u2];
        s2[u2] || (s2[u2] = [1 / 0, -1 / 0]), Xf(r2, u2, h2.type, e2, n2);
      }
      if (i2.fillStorage)
        i2.fillStorage(t3, e2, r2, s2);
      else
        for (var c2 = [], p2 = t3; p2 < e2; p2++) {
          c2 = i2.getItem(p2, c2);
          for (var d2 = 0; d2 < a2; d2++) {
            var f2 = r2[d2], g2 = this._dimValueGetter(c2, l2[d2], p2, d2);
            f2[p2] = g2;
            var y2 = s2[d2];
            g2 < y2[0] && (y2[0] = g2), g2 > y2[1] && (y2[1] = g2);
          }
        }
      !i2.persistent && i2.clean && i2.clean(), this._rawCount = this._count = e2, this._extent = [];
    }, t2.prototype.count = function() {
      return this._count;
    }, t2.prototype.get = function(t3, e2) {
      if (!(e2 >= 0 && e2 < this._count))
        return NaN;
      var n2 = this._chunks[t3];
      return n2 ? n2[this.getRawIndex(e2)] : NaN;
    }, t2.prototype.getValues = function(t3, e2) {
      var n2 = [], i2 = [];
      if (null == e2) {
        e2 = t3, t3 = [];
        for (var r2 = 0; r2 < this._dimensions.length; r2++)
          i2.push(r2);
      } else
        i2 = t3;
      r2 = 0;
      for (var o2 = i2.length; r2 < o2; r2++)
        n2.push(this.get(i2[r2], e2));
      return n2;
    }, t2.prototype.getByRawIndex = function(t3, e2) {
      if (!(e2 >= 0 && e2 < this._rawCount))
        return NaN;
      var n2 = this._chunks[t3];
      return n2 ? n2[e2] : NaN;
    }, t2.prototype.getSum = function(t3) {
      var e2 = 0;
      if (this._chunks[t3])
        for (var n2 = 0, i2 = this.count(); n2 < i2; n2++) {
          var r2 = this.get(t3, n2);
          isNaN(r2) || (e2 += r2);
        }
      return e2;
    }, t2.prototype.getMedian = function(t3) {
      var e2 = [];
      this.each([t3], function(t4) {
        isNaN(t4) || e2.push(t4);
      });
      var n2 = e2.sort(function(t4, e3) {
        return t4 - e3;
      }), i2 = this.count();
      return 0 === i2 ? 0 : i2 % 2 == 1 ? n2[(i2 - 1) / 2] : (n2[i2 / 2] + n2[i2 / 2 - 1]) / 2;
    }, t2.prototype.indexOfRawIndex = function(t3) {
      if (t3 >= this._rawCount || t3 < 0)
        return -1;
      if (!this._indices)
        return t3;
      var e2 = this._indices, n2 = e2[t3];
      if (null != n2 && n2 < this._count && n2 === t3)
        return t3;
      for (var i2 = 0, r2 = this._count - 1; i2 <= r2; ) {
        var o2 = (i2 + r2) / 2 | 0;
        if (e2[o2] < t3)
          i2 = o2 + 1;
        else {
          if (!(e2[o2] > t3))
            return o2;
          r2 = o2 - 1;
        }
      }
      return -1;
    }, t2.prototype.indicesOfNearest = function(t3, e2, n2) {
      var i2 = this._chunks[t3], r2 = [];
      if (!i2)
        return r2;
      null == n2 && (n2 = 1 / 0);
      for (var o2 = 1 / 0, a2 = -1, s2 = 0, l2 = 0, u2 = this.count(); l2 < u2; l2++) {
        var h2 = e2 - i2[this.getRawIndex(l2)], c2 = Math.abs(h2);
        c2 <= n2 && ((c2 < o2 || c2 === o2 && h2 >= 0 && a2 < 0) && (o2 = c2, a2 = h2, s2 = 0), h2 === a2 && (r2[s2++] = l2));
      }
      return r2.length = s2, r2;
    }, t2.prototype.getIndices = function() {
      var t3, e2 = this._indices;
      if (e2) {
        var n2 = e2.constructor, i2 = this._count;
        if (n2 === Array) {
          t3 = new n2(i2);
          for (var r2 = 0; r2 < i2; r2++)
            t3[r2] = e2[r2];
        } else
          t3 = new n2(e2.buffer, 0, i2);
      } else {
        t3 = new (n2 = Yf(this._rawCount))(this.count());
        for (r2 = 0; r2 < t3.length; r2++)
          t3[r2] = r2;
      }
      return t3;
    }, t2.prototype.filter = function(t3, e2) {
      if (!this._count)
        return this;
      for (var n2 = this.clone(), i2 = n2.count(), r2 = new (Yf(n2._rawCount))(i2), o2 = [], a2 = t3.length, s2 = 0, l2 = t3[0], u2 = n2._chunks, h2 = 0; h2 < i2; h2++) {
        var c2 = void 0, p2 = n2.getRawIndex(h2);
        if (0 === a2)
          c2 = e2(h2);
        else if (1 === a2) {
          c2 = e2(u2[l2][p2], h2);
        } else {
          for (var d2 = 0; d2 < a2; d2++)
            o2[d2] = u2[t3[d2]][p2];
          o2[d2] = h2, c2 = e2.apply(null, o2);
        }
        c2 && (r2[s2++] = p2);
      }
      return s2 < i2 && (n2._indices = r2), n2._count = s2, n2._extent = [], n2._updateGetRawIdx(), n2;
    }, t2.prototype.selectRange = function(t3) {
      var e2 = this.clone(), n2 = e2._count;
      if (!n2)
        return this;
      var i2 = F(t3), r2 = i2.length;
      if (!r2)
        return this;
      var o2 = e2.count(), a2 = new (Yf(e2._rawCount))(o2), s2 = 0, l2 = i2[0], u2 = t3[l2][0], h2 = t3[l2][1], c2 = e2._chunks, p2 = false;
      if (!e2._indices) {
        var d2 = 0;
        if (1 === r2) {
          for (var f2 = c2[i2[0]], g2 = 0; g2 < n2; g2++) {
            ((x2 = f2[g2]) >= u2 && x2 <= h2 || isNaN(x2)) && (a2[s2++] = d2), d2++;
          }
          p2 = true;
        } else if (2 === r2) {
          f2 = c2[i2[0]];
          var y2 = c2[i2[1]], v2 = t3[i2[1]][0], m2 = t3[i2[1]][1];
          for (g2 = 0; g2 < n2; g2++) {
            var x2 = f2[g2], _2 = y2[g2];
            (x2 >= u2 && x2 <= h2 || isNaN(x2)) && (_2 >= v2 && _2 <= m2 || isNaN(_2)) && (a2[s2++] = d2), d2++;
          }
          p2 = true;
        }
      }
      if (!p2)
        if (1 === r2)
          for (g2 = 0; g2 < o2; g2++) {
            var b2 = e2.getRawIndex(g2);
            ((x2 = c2[i2[0]][b2]) >= u2 && x2 <= h2 || isNaN(x2)) && (a2[s2++] = b2);
          }
        else
          for (g2 = 0; g2 < o2; g2++) {
            for (var w2 = true, S2 = (b2 = e2.getRawIndex(g2), 0); S2 < r2; S2++) {
              var M2 = i2[S2];
              ((x2 = c2[M2][b2]) < t3[M2][0] || x2 > t3[M2][1]) && (w2 = false);
            }
            w2 && (a2[s2++] = e2.getRawIndex(g2));
          }
      return s2 < o2 && (e2._indices = a2), e2._count = s2, e2._extent = [], e2._updateGetRawIdx(), e2;
    }, t2.prototype.map = function(t3, e2) {
      var n2 = this.clone(t3);
      return this._updateDims(n2, t3, e2), n2;
    }, t2.prototype.modify = function(t3, e2) {
      this._updateDims(this, t3, e2);
    }, t2.prototype._updateDims = function(t3, e2, n2) {
      for (var i2 = t3._chunks, r2 = [], o2 = e2.length, a2 = t3.count(), s2 = [], l2 = t3._rawExtent, u2 = 0; u2 < e2.length; u2++)
        l2[e2[u2]] = [1 / 0, -1 / 0];
      for (var h2 = 0; h2 < a2; h2++) {
        for (var c2 = t3.getRawIndex(h2), p2 = 0; p2 < o2; p2++)
          s2[p2] = i2[e2[p2]][c2];
        s2[o2] = h2;
        var d2 = n2 && n2.apply(null, s2);
        if (null != d2) {
          "object" != typeof d2 && (r2[0] = d2, d2 = r2);
          for (u2 = 0; u2 < d2.length; u2++) {
            var f2 = e2[u2], g2 = d2[u2], y2 = l2[f2], v2 = i2[f2];
            v2 && (v2[c2] = g2), g2 < y2[0] && (y2[0] = g2), g2 > y2[1] && (y2[1] = g2);
          }
        }
      }
    }, t2.prototype.lttbDownSample = function(t3, e2) {
      var n2, i2, r2, o2 = this.clone([t3], true), a2 = o2._chunks[t3], s2 = this.count(), l2 = 0, u2 = Math.floor(1 / e2), h2 = this.getRawIndex(0), c2 = new (Yf(this._rawCount))(Math.min(2 * (Math.ceil(s2 / u2) + 2), s2));
      c2[l2++] = h2;
      for (var p2 = 1; p2 < s2 - 1; p2 += u2) {
        for (var d2 = Math.min(p2 + u2, s2 - 1), f2 = Math.min(p2 + 2 * u2, s2), g2 = (f2 + d2) / 2, y2 = 0, v2 = d2; v2 < f2; v2++) {
          var m2 = a2[I2 = this.getRawIndex(v2)];
          isNaN(m2) || (y2 += m2);
        }
        y2 /= f2 - d2;
        var x2 = p2, _2 = Math.min(p2 + u2, s2), b2 = p2 - 1, w2 = a2[h2];
        n2 = -1, r2 = x2;
        var S2 = -1, M2 = 0;
        for (v2 = x2; v2 < _2; v2++) {
          var I2;
          m2 = a2[I2 = this.getRawIndex(v2)];
          isNaN(m2) ? (M2++, S2 < 0 && (S2 = I2)) : (i2 = Math.abs((b2 - g2) * (m2 - w2) - (b2 - v2) * (y2 - w2))) > n2 && (n2 = i2, r2 = I2);
        }
        M2 > 0 && M2 < _2 - x2 && (c2[l2++] = Math.min(S2, r2), r2 = Math.max(S2, r2)), c2[l2++] = r2, h2 = r2;
      }
      return c2[l2++] = this.getRawIndex(s2 - 1), o2._count = l2, o2._indices = c2, o2.getRawIndex = this._getRawIdx, o2;
    }, t2.prototype.downSample = function(t3, e2, n2, i2) {
      for (var r2 = this.clone([t3], true), o2 = r2._chunks, a2 = [], s2 = Math.floor(1 / e2), l2 = o2[t3], u2 = this.count(), h2 = r2._rawExtent[t3] = [1 / 0, -1 / 0], c2 = new (Yf(this._rawCount))(Math.ceil(u2 / s2)), p2 = 0, d2 = 0; d2 < u2; d2 += s2) {
        s2 > u2 - d2 && (s2 = u2 - d2, a2.length = s2);
        for (var f2 = 0; f2 < s2; f2++) {
          var g2 = this.getRawIndex(d2 + f2);
          a2[f2] = l2[g2];
        }
        var y2 = n2(a2), v2 = this.getRawIndex(Math.min(d2 + i2(a2, y2) || 0, u2 - 1));
        l2[v2] = y2, y2 < h2[0] && (h2[0] = y2), y2 > h2[1] && (h2[1] = y2), c2[p2++] = v2;
      }
      return r2._count = p2, r2._indices = c2, r2._updateGetRawIdx(), r2;
    }, t2.prototype.each = function(t3, e2) {
      if (this._count)
        for (var n2 = t3.length, i2 = this._chunks, r2 = 0, o2 = this.count(); r2 < o2; r2++) {
          var a2 = this.getRawIndex(r2);
          switch (n2) {
            case 0:
              e2(r2);
              break;
            case 1:
              e2(i2[t3[0]][a2], r2);
              break;
            case 2:
              e2(i2[t3[0]][a2], i2[t3[1]][a2], r2);
              break;
            default:
              for (var s2 = 0, l2 = []; s2 < n2; s2++)
                l2[s2] = i2[t3[s2]][a2];
              l2[s2] = r2, e2.apply(null, l2);
          }
        }
    }, t2.prototype.getDataExtent = function(t3) {
      var e2 = this._chunks[t3], n2 = [1 / 0, -1 / 0];
      if (!e2)
        return n2;
      var i2, r2 = this.count();
      if (!this._indices)
        return this._rawExtent[t3].slice();
      if (i2 = this._extent[t3])
        return i2.slice();
      for (var o2 = (i2 = n2)[0], a2 = i2[1], s2 = 0; s2 < r2; s2++) {
        var l2 = e2[this.getRawIndex(s2)];
        l2 < o2 && (o2 = l2), l2 > a2 && (a2 = l2);
      }
      return i2 = [o2, a2], this._extent[t3] = i2, i2;
    }, t2.prototype.getRawDataItem = function(t3) {
      var e2 = this.getRawIndex(t3);
      if (this._provider.persistent)
        return this._provider.getItem(e2);
      for (var n2 = [], i2 = this._chunks, r2 = 0; r2 < i2.length; r2++)
        n2.push(i2[r2][e2]);
      return n2;
    }, t2.prototype.clone = function(e2, n2) {
      var i2, r2, o2 = new t2(), a2 = this._chunks, s2 = e2 && z(e2, function(t3, e3) {
        return t3[e3] = true, t3;
      }, {});
      if (s2)
        for (var l2 = 0; l2 < a2.length; l2++)
          o2._chunks[l2] = s2[l2] ? (i2 = a2[l2], r2 = void 0, (r2 = i2.constructor) === Array ? i2.slice() : new r2(i2)) : a2[l2];
      else
        o2._chunks = a2;
      return this._copyCommonProps(o2), n2 || (o2._indices = this._cloneIndices()), o2._updateGetRawIdx(), o2;
    }, t2.prototype._copyCommonProps = function(t3) {
      t3._count = this._count, t3._rawCount = this._rawCount, t3._provider = this._provider, t3._dimensions = this._dimensions, t3._extent = I(this._extent), t3._rawExtent = I(this._rawExtent);
    }, t2.prototype._cloneIndices = function() {
      if (this._indices) {
        var t3 = this._indices.constructor, e2 = void 0;
        if (t3 === Array) {
          var n2 = this._indices.length;
          e2 = new t3(n2);
          for (var i2 = 0; i2 < n2; i2++)
            e2[i2] = this._indices[i2];
        } else
          e2 = new t3(this._indices);
        return e2;
      }
      return null;
    }, t2.prototype._getRawIdxIdentity = function(t3) {
      return t3;
    }, t2.prototype._getRawIdx = function(t3) {
      return t3 < this._count && t3 >= 0 ? this._indices[t3] : -1;
    }, t2.prototype._updateGetRawIdx = function() {
      this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
    }, t2.internalField = function() {
      function t3(t4, e2, n2, i2) {
        return bf(t4[i2], this._dimensions[i2]);
      }
      zf = { arrayRows: t3, objectRows: function(t4, e2, n2, i2) {
        return bf(t4[e2], this._dimensions[i2]);
      }, keyedColumns: t3, original: function(t4, e2, n2, i2) {
        var r2 = t4 && (null == t4.value ? t4 : t4.value);
        return bf(r2 instanceof Array ? r2[i2] : r2, this._dimensions[i2]);
      }, typedArray: function(t4, e2, n2, i2) {
        return t4[i2];
      } };
    }(), t2;
  }();
  var Zf = function() {
    function t2(t3) {
      this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = true, this._sourceHost = t3;
    }
    return t2.prototype.dirty = function() {
      this._setLocalSource([], []), this._storeList = [], this._dirty = true;
    }, t2.prototype._setLocalSource = function(t3, e2) {
      this._sourceList = t3, this._upstreamSignList = e2, this._versionSignBase++, this._versionSignBase > 9e10 && (this._versionSignBase = 0);
    }, t2.prototype._getVersionSign = function() {
      return this._sourceHost.uid + "_" + this._versionSignBase;
    }, t2.prototype.prepareSource = function() {
      this._isDirty() && (this._createSource(), this._dirty = false);
    }, t2.prototype._createSource = function() {
      this._setLocalSource([], []);
      var t3, e2, n2 = this._sourceHost, i2 = this._getUpstreamSourceManagers(), r2 = !!i2.length;
      if (qf(n2)) {
        var o2 = n2, a2 = void 0, s2 = void 0, l2 = void 0;
        if (r2) {
          var u2 = i2[0];
          u2.prepareSource(), a2 = (l2 = u2.getSource()).data, s2 = l2.sourceFormat, e2 = [u2._getVersionSign()];
        } else
          s2 = K(a2 = o2.get("data", true)) ? Wp : Vp, e2 = [];
        var h2 = this._getSourceMetaRawOption() || {}, c2 = l2 && l2.metaRawOption || {}, p2 = it(h2.seriesLayoutBy, c2.seriesLayoutBy) || null, d2 = it(h2.sourceHeader, c2.sourceHeader), f2 = it(h2.dimensions, c2.dimensions);
        t3 = p2 !== c2.seriesLayoutBy || !!d2 != !!c2.sourceHeader || f2 ? [Kd(a2, { seriesLayoutBy: p2, sourceHeader: d2, dimensions: f2 }, s2)] : [];
      } else {
        var g2 = n2;
        if (r2) {
          var y2 = this._applyTransform(i2);
          t3 = y2.sourceList, e2 = y2.upstreamSignList;
        } else {
          t3 = [Kd(g2.get("source", true), this._getSourceMetaRawOption(), null)], e2 = [];
        }
      }
      this._setLocalSource(t3, e2);
    }, t2.prototype._applyTransform = function(t3) {
      var e2, n2 = this._sourceHost, i2 = n2.get("transform", true), r2 = n2.get("fromTransformResult", true);
      if (null != r2) {
        var o2 = "";
        1 !== t3.length && Kf(o2);
      }
      var a2, s2 = [], l2 = [];
      return N(t3, function(t4) {
        t4.prepareSource();
        var e3 = t4.getSource(r2 || 0), n3 = "";
        null == r2 || e3 || Kf(n3), s2.push(e3), l2.push(t4._getVersionSign());
      }), i2 ? e2 = function(t4, e3, n3) {
        var i3 = _o(t4), r3 = i3.length, o3 = "";
        r3 || yo(o3);
        for (var a3 = 0, s3 = r3; a3 < s3; a3++)
          e3 = Nf(i3[a3], e3), a3 !== s3 - 1 && (e3.length = Math.max(e3.length, 1));
        return e3;
      }(i2, s2, n2.componentIndex) : null != r2 && (e2 = [(a2 = s2[0], new jd({ data: a2.data, sourceFormat: a2.sourceFormat, seriesLayoutBy: a2.seriesLayoutBy, dimensionsDefine: I(a2.dimensionsDefine), startIndex: a2.startIndex, dimensionsDetectedCount: a2.dimensionsDetectedCount }))]), { sourceList: e2, upstreamSignList: l2 };
    }, t2.prototype._isDirty = function() {
      if (this._dirty)
        return true;
      for (var t3 = this._getUpstreamSourceManagers(), e2 = 0; e2 < t3.length; e2++) {
        var n2 = t3[e2];
        if (n2._isDirty() || this._upstreamSignList[e2] !== n2._getVersionSign())
          return true;
      }
    }, t2.prototype.getSource = function(t3) {
      t3 = t3 || 0;
      var e2 = this._sourceList[t3];
      if (!e2) {
        var n2 = this._getUpstreamSourceManagers();
        return n2[0] && n2[0].getSource(t3);
      }
      return e2;
    }, t2.prototype.getSharedDataStore = function(t3) {
      var e2 = t3.makeStoreSchema();
      return this._innerGetDataStore(e2.dimensions, t3.source, e2.hash);
    }, t2.prototype._innerGetDataStore = function(t3, e2, n2) {
      var i2 = this._storeList, r2 = i2[0];
      r2 || (r2 = i2[0] = {});
      var o2 = r2[n2];
      if (!o2) {
        var a2 = this._getUpstreamSourceManagers()[0];
        qf(this._sourceHost) && a2 ? o2 = a2._innerGetDataStore(t3, e2, n2) : (o2 = new Uf()).initData(new nf(e2, t3.length), t3), r2[n2] = o2;
      }
      return o2;
    }, t2.prototype._getUpstreamSourceManagers = function() {
      var t3 = this._sourceHost;
      if (qf(t3)) {
        var e2 = Jp(t3);
        return e2 ? [e2.getSourceManager()] : [];
      }
      return E(function(t4) {
        return t4.get("transform", true) || t4.get("fromTransformResult", true) ? Vo(t4.ecModel, "dataset", { index: t4.get("fromDatasetIndex", true), id: t4.get("fromDatasetId", true) }, Eo).models : [];
      }(t3), function(t4) {
        return t4.getSourceManager();
      });
    }, t2.prototype._getSourceMetaRawOption = function() {
      var t3, e2, n2, i2 = this._sourceHost;
      if (qf(i2))
        t3 = i2.get("seriesLayoutBy", true), e2 = i2.get("sourceHeader", true), n2 = i2.get("dimensions", true);
      else if (!this._getUpstreamSourceManagers().length) {
        var r2 = i2;
        t3 = r2.get("seriesLayoutBy", true), e2 = r2.get("sourceHeader", true), n2 = r2.get("dimensions", true);
      }
      return { seriesLayoutBy: t3, sourceHeader: e2, dimensions: n2 };
    }, t2;
  }();
  function jf(t2) {
    t2.option.transform && ht(t2.option.transform);
  }
  function qf(t2) {
    return "series" === t2.mainType;
  }
  function Kf(t2) {
    throw new Error(t2);
  }
  var $f = "line-height:1";
  function Jf(t2, e2) {
    var n2 = t2.color || "#6e7079", i2 = t2.fontSize || 12, r2 = t2.fontWeight || "400", o2 = t2.color || "#464646", a2 = t2.fontSize || 14, s2 = t2.fontWeight || "900";
    return "html" === e2 ? { nameStyle: "font-size:" + ie(i2 + "") + "px;color:" + ie(n2) + ";font-weight:" + ie(r2 + ""), valueStyle: "font-size:" + ie(a2 + "") + "px;color:" + ie(o2) + ";font-weight:" + ie(s2 + "") } : { nameStyle: { fontSize: i2, fill: n2, fontWeight: r2 }, valueStyle: { fontSize: a2, fill: o2, fontWeight: s2 } };
  }
  var Qf = [0, 10, 20, 30];
  var tg = ["", "\n", "\n\n", "\n\n\n"];
  function eg(t2, e2) {
    return e2.type = t2, e2;
  }
  function ng(t2) {
    return "section" === t2.type;
  }
  function ig(t2) {
    return ng(t2) ? og : ag;
  }
  function rg(t2) {
    if (ng(t2)) {
      var e2 = 0, n2 = t2.blocks.length, i2 = n2 > 1 || n2 > 0 && !t2.noHeader;
      return N(t2.blocks, function(t3) {
        var n3 = rg(t3);
        n3 >= e2 && (e2 = n3 + +(i2 && (!n3 || ng(t3) && !t3.noHeader)));
      }), e2;
    }
    return 0;
  }
  function og(t2, e2, n2, i2) {
    var r2, o2 = e2.noHeader, a2 = (r2 = rg(e2), { html: Qf[r2], richText: tg[r2] }), s2 = [], l2 = e2.blocks || [];
    st(!l2 || H(l2)), l2 = l2 || [];
    var u2 = t2.orderMode;
    if (e2.sortBlocks && u2) {
      l2 = l2.slice();
      var h2 = { valueAsc: "asc", valueDesc: "desc" };
      if (xt(h2, u2)) {
        var c2 = new Tf(h2[u2], null);
        l2.sort(function(t3, e3) {
          return c2.evaluate(t3.sortParam, e3.sortParam);
        });
      } else
        "seriesDesc" === u2 && l2.reverse();
    }
    N(l2, function(n3, r3) {
      var o3 = e2.valueFormatter, l3 = ig(n3)(o3 ? D(D({}, t2), { valueFormatter: o3 }) : t2, n3, r3 > 0 ? a2.html : 0, i2);
      null != l3 && s2.push(l3);
    });
    var p2 = "richText" === t2.renderMode ? s2.join(a2.richText) : lg(s2.join(""), o2 ? n2 : a2.html);
    if (o2)
      return p2;
    var d2 = fp(e2.header, "ordinal", t2.useUTC), f2 = Jf(i2, t2.renderMode).nameStyle;
    return "richText" === t2.renderMode ? ug(t2, d2, f2) + a2.richText + p2 : lg('<div style="' + f2 + ";" + $f + ';">' + ie(d2) + "</div>" + p2, n2);
  }
  function ag(t2, e2, n2, i2) {
    var r2 = t2.renderMode, o2 = e2.noName, a2 = e2.noValue, s2 = !e2.markerType, l2 = e2.name, u2 = t2.useUTC, h2 = e2.valueFormatter || t2.valueFormatter || function(t3) {
      return E(t3 = H(t3) ? t3 : [t3], function(t4, e3) {
        return fp(t4, H(d2) ? d2[e3] : d2, u2);
      });
    };
    if (!o2 || !a2) {
      var c2 = s2 ? "" : t2.markupStyleCreator.makeTooltipMarker(e2.markerType, e2.markerColor || "#333", r2), p2 = o2 ? "" : fp(l2, "ordinal", u2), d2 = e2.valueType, f2 = a2 ? [] : h2(e2.value), g2 = !s2 || !o2, y2 = !s2 && o2, v2 = Jf(i2, r2), m2 = v2.nameStyle, x2 = v2.valueStyle;
      return "richText" === r2 ? (s2 ? "" : c2) + (o2 ? "" : ug(t2, p2, m2)) + (a2 ? "" : function(t3, e3, n3, i3, r3) {
        var o3 = [r3], a3 = i3 ? 10 : 20;
        return n3 && o3.push({ padding: [0, 0, 0, a3], align: "right" }), t3.markupStyleCreator.wrapRichTextStyle(H(e3) ? e3.join("  ") : e3, o3);
      }(t2, f2, g2, y2, x2)) : lg((s2 ? "" : c2) + (o2 ? "" : function(t3, e3, n3) {
        return '<span style="' + n3 + ";" + (e3 ? "margin-left:2px" : "") + '">' + ie(t3) + "</span>";
      }(p2, !s2, m2)) + (a2 ? "" : function(t3, e3, n3, i3) {
        var r3 = n3 ? "10px" : "20px", o3 = e3 ? "float:right;margin-left:" + r3 : "";
        return t3 = H(t3) ? t3 : [t3], '<span style="' + o3 + ";" + i3 + '">' + E(t3, function(t4) {
          return ie(t4);
        }).join("&nbsp;&nbsp;") + "</span>";
      }(f2, g2, y2, x2)), n2);
    }
  }
  function sg(t2, e2, n2, i2, r2, o2) {
    if (t2)
      return ig(t2)({ useUTC: r2, renderMode: n2, orderMode: i2, markupStyleCreator: e2, valueFormatter: t2.valueFormatter }, t2, 0, o2);
  }
  function lg(t2, e2) {
    return '<div style="' + ("margin: " + e2 + "px 0 0") + ";" + $f + ';">' + t2 + '<div style="clear:both"></div></div>';
  }
  function ug(t2, e2, n2) {
    return t2.markupStyleCreator.wrapRichTextStyle(e2, n2);
  }
  function hg(t2, e2) {
    return xp(t2.getData().getItemVisual(e2, "style")[t2.visualDrawType]);
  }
  function cg(t2, e2) {
    var n2 = t2.get("padding");
    return null != n2 ? n2 : "richText" === e2 ? [8, 10] : 10;
  }
  var pg = function() {
    function t2() {
      this.richTextStyles = {}, this._nextStyleNameId = co();
    }
    return t2.prototype._generateStyleName = function() {
      return "__EC_aUTo_" + this._nextStyleNameId++;
    }, t2.prototype.makeTooltipMarker = function(t3, e2, n2) {
      var i2 = "richText" === n2 ? this._generateStyleName() : null, r2 = mp({ color: e2, type: t3, renderMode: n2, markerId: i2 });
      return X(r2) ? r2 : (this.richTextStyles[i2] = r2.style, r2.content);
    }, t2.prototype.wrapRichTextStyle = function(t3, e2) {
      var n2 = {};
      H(e2) ? N(e2, function(t4) {
        return D(n2, t4);
      }) : D(n2, e2);
      var i2 = this._generateStyleName();
      return this.richTextStyles[i2] = n2, "{" + i2 + "|" + t3 + "}";
    }, t2;
  }();
  function dg(t2) {
    var e2, n2, i2, r2, o2 = t2.series, a2 = t2.dataIndex, s2 = t2.multipleSeries, l2 = o2.getData(), u2 = l2.mapDimensionsAll("defaultedTooltip"), h2 = u2.length, c2 = o2.getRawValue(a2), p2 = H(c2), d2 = hg(o2, a2);
    if (h2 > 1 || p2 && !h2) {
      var f2 = function(t3, e3, n3, i3, r3) {
        var o3 = e3.getData(), a3 = z(t3, function(t4, e4, n4) {
          var i4 = o3.getDimensionInfo(n4);
          return t4 || i4 && false !== i4.tooltip && null != i4.displayName;
        }, false), s3 = [], l3 = [], u3 = [];
        function h3(t4, e4) {
          var n4 = o3.getDimensionInfo(e4);
          n4 && false !== n4.otherDims.tooltip && (a3 ? u3.push(eg("nameValue", { markerType: "subItem", markerColor: r3, name: n4.displayName, value: t4, valueType: n4.type })) : (s3.push(t4), l3.push(n4.type)));
        }
        return i3.length ? N(i3, function(t4) {
          h3(ff(o3, n3, t4), t4);
        }) : N(t3, h3), { inlineValues: s3, inlineValueTypes: l3, blocks: u3 };
      }(c2, o2, a2, u2, d2);
      e2 = f2.inlineValues, n2 = f2.inlineValueTypes, i2 = f2.blocks, r2 = f2.inlineValues[0];
    } else if (h2) {
      var g2 = l2.getDimensionInfo(u2[0]);
      r2 = e2 = ff(l2, a2, u2[0]), n2 = g2.type;
    } else
      r2 = e2 = p2 ? c2[0] : c2;
    var y2 = Ao(o2), v2 = y2 && o2.name || "", m2 = l2.getName(a2), x2 = s2 ? v2 : m2;
    return eg("section", { header: v2, noHeader: s2 || !y2, sortParam: r2, blocks: [eg("nameValue", { markerType: "item", markerColor: d2, name: x2, noName: !lt(x2), value: e2, valueType: n2 })].concat(i2 || []) });
  }
  var fg = Po();
  function gg(t2, e2) {
    return t2.getName(e2) || t2.getId(e2);
  }
  var yg = "__universalTransitionEnabled";
  var vg = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2._selectedDataIndicesMap = {}, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.seriesIndex = this.componentIndex, this.dataTask = mf({ count: xg, reset: _g }), this.dataTask.context = { model: this }, this.mergeDefaultAndTheme(t3, n3), (fg(this).sourceManager = new Zf(this)).prepareSource();
      var i2 = this.getInitialData(t3, n3);
      wg(i2, this), this.dataTask.context.data = i2, fg(this).dataBeforeProcessed = i2, mg(this), this._initSelectedMapFromData(i2);
    }, n2.prototype.mergeDefaultAndTheme = function(t3, e2) {
      var n3 = Dp(this), i2 = n3 ? kp(t3) : {}, r2 = this.subType;
      Op.hasClass(r2) && (r2 += "Series"), T(t3, e2.getTheme().get(this.subType)), T(t3, this.getDefaultOption()), bo(t3, "label", ["show"]), this.fillDataTextStyle(t3.data), n3 && Ap(t3, i2, n3);
    }, n2.prototype.mergeOption = function(t3, e2) {
      t3 = T(this.option, t3, true), this.fillDataTextStyle(t3.data);
      var n3 = Dp(this);
      n3 && Ap(this.option, t3, n3);
      var i2 = fg(this).sourceManager;
      i2.dirty(), i2.prepareSource();
      var r2 = this.getInitialData(t3, e2);
      wg(r2, this), this.dataTask.dirty(), this.dataTask.context.data = r2, fg(this).dataBeforeProcessed = r2, mg(this), this._initSelectedMapFromData(r2);
    }, n2.prototype.fillDataTextStyle = function(t3) {
      if (t3 && !K(t3))
        for (var e2 = ["show"], n3 = 0; n3 < t3.length; n3++)
          t3[n3] && t3[n3].label && bo(t3[n3], "label", e2);
    }, n2.prototype.getInitialData = function(t3, e2) {
    }, n2.prototype.appendData = function(t3) {
      this.getRawData().appendData(t3.data);
    }, n2.prototype.getData = function(t3) {
      var e2 = Mg(this);
      if (e2) {
        var n3 = e2.context.data;
        return null == t3 ? n3 : n3.getLinkedData(t3);
      }
      return fg(this).data;
    }, n2.prototype.getAllData = function() {
      var t3 = this.getData();
      return t3 && t3.getLinkedDataAll ? t3.getLinkedDataAll() : [{ data: t3 }];
    }, n2.prototype.setData = function(t3) {
      var e2 = Mg(this);
      if (e2) {
        var n3 = e2.context;
        n3.outputData = t3, e2 !== this.dataTask && (n3.data = t3);
      }
      fg(this).data = t3;
    }, n2.prototype.getEncode = function() {
      var t3 = this.get("encode", true);
      if (t3)
        return gt(t3);
    }, n2.prototype.getSourceManager = function() {
      return fg(this).sourceManager;
    }, n2.prototype.getSource = function() {
      return this.getSourceManager().getSource();
    }, n2.prototype.getRawData = function() {
      return fg(this).dataBeforeProcessed;
    }, n2.prototype.getColorBy = function() {
      return this.get("colorBy") || "series";
    }, n2.prototype.isColorBySeries = function() {
      return "series" === this.getColorBy();
    }, n2.prototype.getBaseAxis = function() {
      var t3 = this.coordinateSystem;
      return t3 && t3.getBaseAxis && t3.getBaseAxis();
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      return dg({ series: this, dataIndex: t3, multipleSeries: e2 });
    }, n2.prototype.isAnimationEnabled = function() {
      var t3 = this.ecModel;
      if (i.node && (!t3 || !t3.ssr))
        return false;
      var e2 = this.getShallow("animation");
      return e2 && this.getData().count() > this.getShallow("animationThreshold") && (e2 = false), !!e2;
    }, n2.prototype.restoreData = function() {
      this.dataTask.dirty();
    }, n2.prototype.getColorFromPalette = function(t3, e2, n3) {
      var i2 = this.ecModel, r2 = sd.prototype.getColorFromPalette.call(this, t3, e2, n3);
      return r2 || (r2 = i2.getColorFromPalette(t3, e2, n3)), r2;
    }, n2.prototype.coordDimToDataDim = function(t3) {
      return this.getRawData().mapDimensionsAll(t3);
    }, n2.prototype.getProgressive = function() {
      return this.get("progressive");
    }, n2.prototype.getProgressiveThreshold = function() {
      return this.get("progressiveThreshold");
    }, n2.prototype.select = function(t3, e2) {
      this._innerSelect(this.getData(e2), t3);
    }, n2.prototype.unselect = function(t3, e2) {
      var n3 = this.option.selectedMap;
      if (n3) {
        var i2 = this.option.selectedMode, r2 = this.getData(e2);
        if ("series" === i2 || "all" === n3)
          return this.option.selectedMap = {}, void (this._selectedDataIndicesMap = {});
        for (var o2 = 0; o2 < t3.length; o2++) {
          var a2 = gg(r2, t3[o2]);
          n3[a2] = false, this._selectedDataIndicesMap[a2] = -1;
        }
      }
    }, n2.prototype.toggleSelect = function(t3, e2) {
      for (var n3 = [], i2 = 0; i2 < t3.length; i2++)
        n3[0] = t3[i2], this.isSelected(t3[i2], e2) ? this.unselect(n3, e2) : this.select(n3, e2);
    }, n2.prototype.getSelectedDataIndices = function() {
      if ("all" === this.option.selectedMap)
        return [].slice.call(this.getData().getIndices());
      for (var t3 = this._selectedDataIndicesMap, e2 = F(t3), n3 = [], i2 = 0; i2 < e2.length; i2++) {
        var r2 = t3[e2[i2]];
        r2 >= 0 && n3.push(r2);
      }
      return n3;
    }, n2.prototype.isSelected = function(t3, e2) {
      var n3 = this.option.selectedMap;
      if (!n3)
        return false;
      var i2 = this.getData(e2);
      return ("all" === n3 || n3[gg(i2, t3)]) && !i2.getItemModel(t3).get(["select", "disabled"]);
    }, n2.prototype.isUniversalTransitionEnabled = function() {
      if (this[yg])
        return true;
      var t3 = this.option.universalTransition;
      return !!t3 && (true === t3 || t3 && t3.enabled);
    }, n2.prototype._innerSelect = function(t3, e2) {
      var n3, i2, r2 = this.option, o2 = r2.selectedMode, a2 = e2.length;
      if (o2 && a2) {
        if ("series" === o2)
          r2.selectedMap = "all";
        else if ("multiple" === o2) {
          j(r2.selectedMap) || (r2.selectedMap = {});
          for (var s2 = r2.selectedMap, l2 = 0; l2 < a2; l2++) {
            var u2 = e2[l2];
            s2[c2 = gg(t3, u2)] = true, this._selectedDataIndicesMap[c2] = t3.getRawIndex(u2);
          }
        } else if ("single" === o2 || true === o2) {
          var h2 = e2[a2 - 1], c2 = gg(t3, h2);
          r2.selectedMap = ((n3 = {})[c2] = true, n3), this._selectedDataIndicesMap = ((i2 = {})[c2] = t3.getRawIndex(h2), i2);
        }
      }
    }, n2.prototype._initSelectedMapFromData = function(t3) {
      if (!this.option.selectedMap) {
        var e2 = [];
        t3.hasItemOption && t3.each(function(n3) {
          var i2 = t3.getRawDataItem(n3);
          i2 && i2.selected && e2.push(n3);
        }), e2.length > 0 && this._innerSelect(t3, e2);
      }
    }, n2.registerClass = function(t3) {
      return Op.registerClass(t3);
    }, n2.protoInitialize = function() {
      var t3 = n2.prototype;
      t3.type = "series.__base__", t3.seriesIndex = 0, t3.ignoreStyleOnData = false, t3.hasSymbolVisual = false, t3.defaultSymbol = "circle", t3.visualStyleAccessPath = "itemStyle", t3.visualDrawType = "fill";
    }(), n2;
  }(Op);
  function mg(t2) {
    var e2 = t2.name;
    Ao(t2) || (t2.name = function(t3) {
      var e3 = t3.getRawData(), n2 = e3.mapDimensionsAll("seriesName"), i2 = [];
      return N(n2, function(t4) {
        var n3 = e3.getDimensionInfo(t4);
        n3.displayName && i2.push(n3.displayName);
      }), i2.join(" ");
    }(t2) || e2);
  }
  function xg(t2) {
    return t2.model.getRawData().count();
  }
  function _g(t2) {
    var e2 = t2.model;
    return e2.setData(e2.getRawData().cloneShallow()), bg;
  }
  function bg(t2, e2) {
    e2.outputData && t2.end > e2.outputData.count() && e2.model.getRawData().cloneShallow(e2.outputData);
  }
  function wg(t2, e2) {
    N(yt(t2.CHANGABLE_METHODS, t2.DOWNSAMPLE_METHODS), function(n2) {
      t2.wrapMethod(n2, W(Sg, e2));
    });
  }
  function Sg(t2, e2) {
    var n2 = Mg(t2);
    return n2 && n2.setOutputEnd((e2 || this).count()), e2;
  }
  function Mg(t2) {
    var e2 = (t2.ecModel || {}).scheduler, n2 = e2 && e2.getPipeline(t2.uid);
    if (n2) {
      var i2 = n2.currentTask;
      if (i2) {
        var r2 = i2.agentStubMap;
        r2 && (i2 = r2.get(t2.uid));
      }
      return i2;
    }
  }
  O(vg, yf), O(vg, sd), Uo(vg, Op);
  var Ig = function() {
    function t2() {
      this.group = new Er(), this.uid = Ic("viewComponent");
    }
    return t2.prototype.init = function(t3, e2) {
    }, t2.prototype.render = function(t3, e2, n2, i2) {
    }, t2.prototype.dispose = function(t3, e2) {
    }, t2.prototype.updateView = function(t3, e2, n2, i2) {
    }, t2.prototype.updateLayout = function(t3, e2, n2, i2) {
    }, t2.prototype.updateVisual = function(t3, e2, n2, i2) {
    }, t2.prototype.toggleBlurSeries = function(t3, e2, n2) {
    }, t2.prototype.eachRendered = function(t3) {
      var e2 = this.group;
      e2 && e2.traverse(t3);
    }, t2;
  }();
  function Tg() {
    var t2 = Po();
    return function(e2) {
      var n2 = t2(e2), i2 = e2.pipelineContext, r2 = !!n2.large, o2 = !!n2.progressiveRender, a2 = n2.large = !(!i2 || !i2.large), s2 = n2.progressiveRender = !(!i2 || !i2.progressiveRender);
      return !(r2 === a2 && o2 === s2) && "reset";
    };
  }
  Xo(Ig), Ko(Ig);
  var Cg = Po();
  var Dg = Tg();
  var Ag = function() {
    function t2() {
      this.group = new Er(), this.uid = Ic("viewChart"), this.renderTask = mf({ plan: Pg, reset: Og }), this.renderTask.context = { view: this };
    }
    return t2.prototype.init = function(t3, e2) {
    }, t2.prototype.render = function(t3, e2, n2, i2) {
    }, t2.prototype.highlight = function(t3, e2, n2, i2) {
      var r2 = t3.getData(i2 && i2.dataType);
      r2 && Lg(r2, i2, "emphasis");
    }, t2.prototype.downplay = function(t3, e2, n2, i2) {
      var r2 = t3.getData(i2 && i2.dataType);
      r2 && Lg(r2, i2, "normal");
    }, t2.prototype.remove = function(t3, e2) {
      this.group.removeAll();
    }, t2.prototype.dispose = function(t3, e2) {
    }, t2.prototype.updateView = function(t3, e2, n2, i2) {
      this.render(t3, e2, n2, i2);
    }, t2.prototype.updateLayout = function(t3, e2, n2, i2) {
      this.render(t3, e2, n2, i2);
    }, t2.prototype.updateVisual = function(t3, e2, n2, i2) {
      this.render(t3, e2, n2, i2);
    }, t2.prototype.eachRendered = function(t3) {
      jh(this.group, t3);
    }, t2.markUpdateMethod = function(t3, e2) {
      Cg(t3).updateMethod = e2;
    }, t2.protoInitialize = void (t2.prototype.type = "chart"), t2;
  }();
  function kg(t2, e2, n2) {
    t2 && ql(t2) && ("emphasis" === e2 ? Al : kl)(t2, n2);
  }
  function Lg(t2, e2, n2) {
    var i2 = Lo(t2, e2), r2 = e2 && null != e2.highlightKey ? function(t3) {
      var e3 = el[t3];
      return null == e3 && tl <= 32 && (e3 = el[t3] = tl++), e3;
    }(e2.highlightKey) : null;
    null != i2 ? N(_o(i2), function(e3) {
      kg(t2.getItemGraphicEl(e3), n2, r2);
    }) : t2.eachItemGraphicEl(function(t3) {
      kg(t3, n2, r2);
    });
  }
  function Pg(t2) {
    return Dg(t2.model);
  }
  function Og(t2) {
    var e2 = t2.model, n2 = t2.ecModel, i2 = t2.api, r2 = t2.payload, o2 = e2.pipelineContext.progressiveRender, a2 = t2.view, s2 = r2 && Cg(r2).updateMethod, l2 = o2 ? "incrementalPrepareRender" : s2 && a2[s2] ? s2 : "render";
    return "render" !== l2 && a2[l2](e2, n2, i2, r2), Rg[l2];
  }
  Xo(Ag), Ko(Ag);
  var Rg = { incrementalPrepareRender: { progress: function(t2, e2) {
    e2.view.incrementalRender(t2, e2.model, e2.ecModel, e2.api, e2.payload);
  } }, render: { forceFirstProgress: true, progress: function(t2, e2) {
    e2.view.render(e2.model, e2.ecModel, e2.api, e2.payload);
  } } };
  var Ng = "\0__throttleOriginMethod";
  var Eg = "\0__throttleRate";
  var zg = "\0__throttleType";
  function Vg(t2, e2, n2) {
    var i2, r2, o2, a2, s2, l2 = 0, u2 = 0, h2 = null;
    function c2() {
      u2 = (/* @__PURE__ */ new Date()).getTime(), h2 = null, t2.apply(o2, a2 || []);
    }
    e2 = e2 || 0;
    var p2 = function() {
      for (var t3 = [], p3 = 0; p3 < arguments.length; p3++)
        t3[p3] = arguments[p3];
      i2 = (/* @__PURE__ */ new Date()).getTime(), o2 = this, a2 = t3;
      var d2 = s2 || e2, f2 = s2 || n2;
      s2 = null, r2 = i2 - (f2 ? l2 : u2) - d2, clearTimeout(h2), f2 ? h2 = setTimeout(c2, d2) : r2 >= 0 ? c2() : h2 = setTimeout(c2, -r2), l2 = i2;
    };
    return p2.clear = function() {
      h2 && (clearTimeout(h2), h2 = null);
    }, p2.debounceNextCall = function(t3) {
      s2 = t3;
    }, p2;
  }
  function Bg(t2, e2, n2, i2) {
    var r2 = t2[e2];
    if (r2) {
      var o2 = r2[Ng] || r2, a2 = r2[zg];
      if (r2[Eg] !== n2 || a2 !== i2) {
        if (null == n2 || !i2)
          return t2[e2] = o2;
        (r2 = t2[e2] = Vg(o2, n2, "debounce" === i2))[Ng] = o2, r2[zg] = i2, r2[Eg] = n2;
      }
      return r2;
    }
  }
  function Fg(t2, e2) {
    var n2 = t2[e2];
    n2 && n2[Ng] && (n2.clear && n2.clear(), t2[e2] = n2[Ng]);
  }
  var Gg = Po();
  var Wg = { itemStyle: $o(_c, true), lineStyle: $o(vc, true) };
  var Hg = { lineStyle: "stroke", itemStyle: "fill" };
  function Yg(t2, e2) {
    var n2 = t2.visualStyleMapper || Wg[e2];
    return n2 || (formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Unknown style type '" + e2 + "'."), Wg.itemStyle);
  }
  function Xg(t2, e2) {
    var n2 = t2.visualDrawType || Hg[e2];
    return n2 || (formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Unknown style type '" + e2 + "'."), "fill");
  }
  var Ug = { createOnAllSeries: true, performRawSeries: true, reset: function(t2, e2) {
    var n2 = t2.getData(), i2 = t2.visualStyleAccessPath || "itemStyle", r2 = t2.getModel(i2), o2 = Yg(t2, i2)(r2), a2 = r2.getShallow("decal");
    a2 && (n2.setVisual("decal", a2), a2.dirty = true);
    var s2 = Xg(t2, i2), l2 = o2[s2], u2 = Y(l2) ? l2 : null, h2 = "auto" === o2.fill || "auto" === o2.stroke;
    if (!o2[s2] || u2 || h2) {
      var c2 = t2.getColorFromPalette(t2.name, null, e2.getSeriesCount());
      o2[s2] || (o2[s2] = c2, n2.setVisual("colorFromPalette", true)), o2.fill = "auto" === o2.fill || Y(o2.fill) ? c2 : o2.fill, o2.stroke = "auto" === o2.stroke || Y(o2.stroke) ? c2 : o2.stroke;
    }
    if (n2.setVisual("style", o2), n2.setVisual("drawType", s2), !e2.isSeriesFiltered(t2) && u2)
      return n2.setVisual("colorFromPalette", false), { dataEach: function(e3, n3) {
        var i3 = t2.getDataParams(n3), r3 = D({}, o2);
        r3[s2] = u2(i3), e3.setItemVisual(n3, "style", r3);
      } };
  } };
  var Zg = new Sc();
  var jg = { createOnAllSeries: true, performRawSeries: true, reset: function(t2, e2) {
    if (!t2.ignoreStyleOnData && !e2.isSeriesFiltered(t2)) {
      var n2 = t2.getData(), i2 = t2.visualStyleAccessPath || "itemStyle", r2 = Yg(t2, i2), o2 = n2.getVisual("drawType");
      return { dataEach: n2.hasItemOption ? function(t3, e3) {
        var n3 = t3.getRawDataItem(e3);
        if (n3 && n3[i2]) {
          Zg.option = n3[i2];
          var a2 = r2(Zg);
          D(t3.ensureUniqueItemVisual(e3, "style"), a2), Zg.option.decal && (t3.setItemVisual(e3, "decal", Zg.option.decal), Zg.option.decal.dirty = true), o2 in a2 && t3.setItemVisual(e3, "colorFromPalette", false);
        }
      } : null };
    }
  } };
  var qg = { performRawSeries: true, overallReset: function(t2) {
    var e2 = gt();
    t2.eachSeries(function(t3) {
      var n2 = t3.getColorBy();
      if (!t3.isColorBySeries()) {
        var i2 = t3.type + "-" + n2, r2 = e2.get(i2);
        r2 || (r2 = {}, e2.set(i2, r2)), Gg(t3).scope = r2;
      }
    }), t2.eachSeries(function(e3) {
      if (!e3.isColorBySeries() && !t2.isSeriesFiltered(e3)) {
        var n2 = e3.getRawData(), i2 = {}, r2 = e3.getData(), o2 = Gg(e3).scope, a2 = e3.visualStyleAccessPath || "itemStyle", s2 = Xg(e3, a2);
        r2.each(function(t3) {
          var e4 = r2.getRawIndex(t3);
          i2[e4] = t3;
        }), n2.each(function(t3) {
          var a3 = i2[t3];
          if (r2.getItemVisual(a3, "colorFromPalette")) {
            var l2 = r2.ensureUniqueItemVisual(a3, "style"), u2 = n2.getName(t3) || t3 + "", h2 = n2.count();
            l2[s2] = e3.getColorFromPalette(u2, o2, h2);
          }
        });
      }
    });
  } };
  var Kg = Math.PI;
  var $g = function() {
    function t2(t3, e2, n2, i2) {
      this._stageTaskMap = gt(), this.ecInstance = t3, this.api = e2, n2 = this._dataProcessorHandlers = n2.slice(), i2 = this._visualHandlers = i2.slice(), this._allHandlers = n2.concat(i2);
    }
    return t2.prototype.restoreData = function(t3, e2) {
      t3.restoreData(e2), this._stageTaskMap.each(function(t4) {
        var e3 = t4.overallTask;
        e3 && e3.dirty();
      });
    }, t2.prototype.getPerformArgs = function(t3, e2) {
      if (t3.__pipeline) {
        var n2 = this._pipelineMap.get(t3.__pipeline.id), i2 = n2.context, r2 = !e2 && n2.progressiveEnabled && (!i2 || i2.progressiveRender) && t3.__idxInPipeline > n2.blockIndex ? n2.step : null, o2 = i2 && i2.modDataCount;
        return { step: r2, modBy: null != o2 ? Math.ceil(o2 / r2) : null, modDataCount: o2 };
      }
    }, t2.prototype.getPipeline = function(t3) {
      return this._pipelineMap.get(t3);
    }, t2.prototype.updateStreamModes = function(t3, e2) {
      var n2 = this._pipelineMap.get(t3.uid), i2 = t3.getData().count(), r2 = n2.progressiveEnabled && e2.incrementalPrepareRender && i2 >= n2.threshold, o2 = t3.get("large") && i2 >= t3.get("largeThreshold"), a2 = "mod" === t3.get("progressiveChunkMode") ? i2 : null;
      t3.pipelineContext = n2.context = { progressiveRender: r2, modDataCount: a2, large: o2 };
    }, t2.prototype.restorePipelines = function(t3) {
      var e2 = this, n2 = e2._pipelineMap = gt();
      t3.eachSeries(function(t4) {
        var i2 = t4.getProgressive(), r2 = t4.uid;
        n2.set(r2, { id: r2, head: null, tail: null, threshold: t4.getProgressiveThreshold(), progressiveEnabled: i2 && !(t4.preventIncremental && t4.preventIncremental()), blockIndex: -1, step: Math.round(i2 || 700), count: 0 }), e2._pipe(t4, t4.dataTask);
      });
    }, t2.prototype.prepareStageTasks = function() {
      var t3 = this._stageTaskMap, e2 = this.api.getModel(), n2 = this.api;
      N(this._allHandlers, function(i2) {
        var r2 = t3.get(i2.uid) || t3.set(i2.uid, {}), o2 = "";
        st(!(i2.reset && i2.overallReset), o2), i2.reset && this._createSeriesStageTask(i2, r2, e2, n2), i2.overallReset && this._createOverallStageTask(i2, r2, e2, n2);
      }, this);
    }, t2.prototype.prepareView = function(t3, e2, n2, i2) {
      var r2 = t3.renderTask, o2 = r2.context;
      o2.model = e2, o2.ecModel = n2, o2.api = i2, r2.__block = !t3.incrementalPrepareRender, this._pipe(e2, r2);
    }, t2.prototype.performDataProcessorTasks = function(t3, e2) {
      this._performStageTasks(this._dataProcessorHandlers, t3, e2, { block: true });
    }, t2.prototype.performVisualTasks = function(t3, e2, n2) {
      this._performStageTasks(this._visualHandlers, t3, e2, n2);
    }, t2.prototype._performStageTasks = function(t3, e2, n2, i2) {
      i2 = i2 || {};
      var r2 = false, o2 = this;
      function a2(t4, e3) {
        return t4.setDirty && (!t4.dirtyMap || t4.dirtyMap.get(e3.__pipeline.id));
      }
      N(t3, function(t4, s2) {
        if (!i2.visualType || i2.visualType === t4.visualType) {
          var l2 = o2._stageTaskMap.get(t4.uid), u2 = l2.seriesTaskMap, h2 = l2.overallTask;
          if (h2) {
            var c2, p2 = h2.agentStubMap;
            p2.each(function(t5) {
              a2(i2, t5) && (t5.dirty(), c2 = true);
            }), c2 && h2.dirty(), o2.updatePayload(h2, n2);
            var d2 = o2.getPerformArgs(h2, i2.block);
            p2.each(function(t5) {
              t5.perform(d2);
            }), h2.perform(d2) && (r2 = true);
          } else
            u2 && u2.each(function(s3, l3) {
              a2(i2, s3) && s3.dirty();
              var u3 = o2.getPerformArgs(s3, i2.block);
              u3.skip = !t4.performRawSeries && e2.isSeriesFiltered(s3.context.model), o2.updatePayload(s3, n2), s3.perform(u3) && (r2 = true);
            });
        }
      }), this.unfinished = r2 || this.unfinished;
    }, t2.prototype.performSeriesTasks = function(t3) {
      var e2;
      t3.eachSeries(function(t4) {
        e2 = t4.dataTask.perform() || e2;
      }), this.unfinished = e2 || this.unfinished;
    }, t2.prototype.plan = function() {
      this._pipelineMap.each(function(t3) {
        var e2 = t3.tail;
        do {
          if (e2.__block) {
            t3.blockIndex = e2.__idxInPipeline;
            break;
          }
          e2 = e2.getUpstream();
        } while (e2);
      });
    }, t2.prototype.updatePayload = function(t3, e2) {
      "remain" !== e2 && (t3.context.payload = e2);
    }, t2.prototype._createSeriesStageTask = function(t3, e2, n2, i2) {
      var r2 = this, o2 = e2.seriesTaskMap, a2 = e2.seriesTaskMap = gt(), s2 = t3.seriesType, l2 = t3.getTargetSeries;
      function u2(e3) {
        var s3 = e3.uid, l3 = a2.set(s3, o2 && o2.get(s3) || mf({ plan: ny, reset: iy, count: ay }));
        l3.context = { model: e3, ecModel: n2, api: i2, useClearVisual: t3.isVisual && !t3.isLayout, plan: t3.plan, reset: t3.reset, scheduler: r2 }, r2._pipe(e3, l3);
      }
      t3.createOnAllSeries ? n2.eachRawSeries(u2) : s2 ? n2.eachRawSeriesByType(s2, u2) : l2 && l2(n2, i2).each(u2);
    }, t2.prototype._createOverallStageTask = function(t3, e2, n2, i2) {
      var r2 = this, o2 = e2.overallTask = e2.overallTask || mf({ reset: Jg });
      o2.context = { ecModel: n2, api: i2, overallReset: t3.overallReset, scheduler: r2 };
      var a2 = o2.agentStubMap, s2 = o2.agentStubMap = gt(), l2 = t3.seriesType, u2 = t3.getTargetSeries, h2 = true, c2 = false, p2 = "";
      function d2(t4) {
        var e3 = t4.uid, n3 = s2.set(e3, a2 && a2.get(e3) || (c2 = true, mf({ reset: Qg, onDirty: ey })));
        n3.context = { model: t4, overallProgress: h2 }, n3.agent = o2, n3.__block = h2, r2._pipe(t4, n3);
      }
      st(!t3.createOnAllSeries, p2), l2 ? n2.eachRawSeriesByType(l2, d2) : u2 ? u2(n2, i2).each(d2) : (h2 = false, N(n2.getSeries(), d2)), c2 && o2.dirty();
    }, t2.prototype._pipe = function(t3, e2) {
      var n2 = t3.uid, i2 = this._pipelineMap.get(n2);
      !i2.head && (i2.head = e2), i2.tail && i2.tail.pipe(e2), i2.tail = e2, e2.__idxInPipeline = i2.count++, e2.__pipeline = i2;
    }, t2.wrapStageHandler = function(t3, e2) {
      return Y(t3) && (t3 = { overallReset: t3, seriesType: sy(t3) }), t3.uid = Ic("stageHandler"), e2 && (t3.visualType = e2), t3;
    }, t2;
  }();
  function Jg(t2) {
    t2.overallReset(t2.ecModel, t2.api, t2.payload);
  }
  function Qg(t2) {
    return t2.overallProgress && ty;
  }
  function ty() {
    this.agent.dirty(), this.getDownstream().dirty();
  }
  function ey() {
    this.agent && this.agent.dirty();
  }
  function ny(t2) {
    return t2.plan ? t2.plan(t2.model, t2.ecModel, t2.api, t2.payload) : null;
  }
  function iy(t2) {
    t2.useClearVisual && t2.data.clearAllVisual();
    var e2 = t2.resetDefines = _o(t2.reset(t2.model, t2.ecModel, t2.api, t2.payload));
    return e2.length > 1 ? E(e2, function(t3, e3) {
      return oy(e3);
    }) : ry;
  }
  var ry = oy(0);
  function oy(t2) {
    return function(e2, n2) {
      var i2 = n2.data, r2 = n2.resetDefines[t2];
      if (r2 && r2.dataEach)
        for (var o2 = e2.start; o2 < e2.end; o2++)
          r2.dataEach(i2, o2);
      else
        r2 && r2.progress && r2.progress(e2, i2);
    };
  }
  function ay(t2) {
    return t2.data.count();
  }
  function sy(t2) {
    ly = null;
    try {
      t2(uy, hy);
    } catch (t3) {
    }
    return ly;
  }
  var ly;
  var uy = {};
  var hy = {};
  function cy(t2, e2) {
    for (var n2 in e2.prototype)
      t2[n2] = _t;
  }
  cy(uy, cd), cy(hy, yd), uy.eachSeriesByType = uy.eachRawSeriesByType = function(t2) {
    ly = t2;
  }, uy.eachComponent = function(t2) {
    "series" === t2.mainType && t2.subType && (ly = t2.subType);
  };
  var py = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"];
  var dy = { color: py, colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], py] };
  var fy = "#B9B8CE";
  var gy = "#100C2A";
  var yy = function() {
    return { axisLine: { lineStyle: { color: fy } }, splitLine: { lineStyle: { color: "#484753" } }, splitArea: { areaStyle: { color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"] } }, minorSplitLine: { lineStyle: { color: "#20203B" } } };
  };
  var vy = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"];
  var my = { darkMode: true, color: vy, backgroundColor: gy, axisPointer: { lineStyle: { color: "#817f91" }, crossStyle: { color: "#817f91" }, label: { color: "#fff" } }, legend: { textStyle: { color: fy } }, textStyle: { color: fy }, title: { textStyle: { color: "#EEF1FA" }, subtextStyle: { color: "#B9B8CE" } }, toolbox: { iconStyle: { borderColor: fy } }, dataZoom: { borderColor: "#71708A", textStyle: { color: fy }, brushStyle: { color: "rgba(135,163,206,0.3)" }, handleStyle: { color: "#353450", borderColor: "#C5CBE3" }, moveHandleStyle: { color: "#B0B6C3", opacity: 0.3 }, fillerColor: "rgba(135,163,206,0.2)", emphasis: { handleStyle: { borderColor: "#91B7F2", color: "#4D587D" }, moveHandleStyle: { color: "#636D9A", opacity: 0.7 } }, dataBackground: { lineStyle: { color: "#71708A", width: 1 }, areaStyle: { color: "#71708A" } }, selectedDataBackground: { lineStyle: { color: "#87A3CE" }, areaStyle: { color: "#87A3CE" } } }, visualMap: { textStyle: { color: fy } }, timeline: { lineStyle: { color: fy }, label: { color: fy }, controlStyle: { color: fy, borderColor: fy } }, calendar: { itemStyle: { color: gy }, dayLabel: { color: fy }, monthLabel: { color: fy }, yearLabel: { color: fy } }, timeAxis: yy(), logAxis: yy(), valueAxis: yy(), categoryAxis: yy(), line: { symbol: "circle" }, graph: { color: vy }, gauge: { title: { color: fy }, axisLine: { lineStyle: { color: [[1, "rgba(207,212,219,0.2)"]] } }, axisLabel: { color: fy }, detail: { color: "#EEF1FA" } }, candlestick: { itemStyle: { color: "#f64e56", color0: "#54ea92", borderColor: "#f64e56", borderColor0: "#54ea92" } } };
  my.categoryAxis.splitLine.show = false;
  var xy = function() {
    function t2() {
    }
    return t2.prototype.normalizeQuery = function(t3) {
      var e2 = {}, n2 = {}, i2 = {};
      if (X(t3)) {
        var r2 = Yo(t3);
        e2.mainType = r2.main || null, e2.subType = r2.sub || null;
      } else {
        var o2 = ["Index", "Name", "Id"], a2 = { name: 1, dataIndex: 1, dataType: 1 };
        N(t3, function(t4, r3) {
          for (var s2 = false, l2 = 0; l2 < o2.length; l2++) {
            var u2 = o2[l2], h2 = r3.lastIndexOf(u2);
            if (h2 > 0 && h2 === r3.length - u2.length) {
              var c2 = r3.slice(0, h2);
              "data" !== c2 && (e2.mainType = c2, e2[u2.toLowerCase()] = t4, s2 = true);
            }
          }
          a2.hasOwnProperty(r3) && (n2[r3] = t4, s2 = true), s2 || (i2[r3] = t4);
        });
      }
      return { cptQuery: e2, dataQuery: n2, otherQuery: i2 };
    }, t2.prototype.filter = function(t3, e2) {
      var n2 = this.eventInfo;
      if (!n2)
        return true;
      var i2 = n2.targetEl, r2 = n2.packedEvent, o2 = n2.model, a2 = n2.view;
      if (!o2 || !a2)
        return true;
      var s2 = e2.cptQuery, l2 = e2.dataQuery;
      return u2(s2, o2, "mainType") && u2(s2, o2, "subType") && u2(s2, o2, "index", "componentIndex") && u2(s2, o2, "name") && u2(s2, o2, "id") && u2(l2, r2, "name") && u2(l2, r2, "dataIndex") && u2(l2, r2, "dataType") && (!a2.filterForExposedEvent || a2.filterForExposedEvent(t3, e2.otherQuery, i2, r2));
      function u2(t4, e3, n3, i3) {
        return null == t4[n3] || e3[i3 || n3] === t4[n3];
      }
    }, t2.prototype.afterTrigger = function() {
      this.eventInfo = null;
    }, t2;
  }();
  var _y = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"];
  var by = _y.concat(["symbolKeepAspect"]);
  var wy = { createOnAllSeries: true, performRawSeries: true, reset: function(t2, e2) {
    var n2 = t2.getData();
    if (t2.legendIcon && n2.setVisual("legendIcon", t2.legendIcon), t2.hasSymbolVisual) {
      for (var i2 = {}, r2 = {}, o2 = false, a2 = 0; a2 < _y.length; a2++) {
        var s2 = _y[a2], l2 = t2.get(s2);
        Y(l2) ? (o2 = true, r2[s2] = l2) : i2[s2] = l2;
      }
      if (i2.symbol = i2.symbol || t2.defaultSymbol, n2.setVisual(D({ legendIcon: t2.legendIcon || i2.symbol, symbolKeepAspect: t2.get("symbolKeepAspect") }, i2)), !e2.isSeriesFiltered(t2)) {
        var u2 = F(r2);
        return { dataEach: o2 ? function(e3, n3) {
          for (var i3 = t2.getRawValue(n3), o3 = t2.getDataParams(n3), a3 = 0; a3 < u2.length; a3++) {
            var s3 = u2[a3];
            e3.setItemVisual(n3, s3, r2[s3](i3, o3));
          }
        } : null };
      }
    }
  } };
  var Sy = { createOnAllSeries: true, performRawSeries: true, reset: function(t2, e2) {
    if (t2.hasSymbolVisual && !e2.isSeriesFiltered(t2))
      return { dataEach: t2.getData().hasItemOption ? function(t3, e3) {
        for (var n2 = t3.getItemModel(e3), i2 = 0; i2 < by.length; i2++) {
          var r2 = by[i2], o2 = n2.getShallow(r2, true);
          null != o2 && t3.setItemVisual(e3, r2, o2);
        }
      } : null };
  } };
  function My(t2, e2, n2) {
    switch (n2) {
      case "color":
        return t2.getItemVisual(e2, "style")[t2.getVisual("drawType")];
      case "opacity":
        return t2.getItemVisual(e2, "style").opacity;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        return t2.getItemVisual(e2, n2);
    }
  }
  function Iy(t2, e2) {
    switch (e2) {
      case "color":
        return t2.getVisual("style")[t2.getVisual("drawType")];
      case "opacity":
        return t2.getVisual("style").opacity;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        return t2.getVisual(e2);
    }
  }
  function Ty(t2, e2, n2, i2) {
    switch (n2) {
      case "color":
        t2.ensureUniqueItemVisual(e2, "style")[t2.getVisual("drawType")] = i2, t2.setItemVisual(e2, "colorFromPalette", false);
        break;
      case "opacity":
        t2.ensureUniqueItemVisual(e2, "style").opacity = i2;
        break;
      case "symbol":
      case "symbolSize":
      case "liftZ":
        t2.setItemVisual(e2, n2, i2);
    }
  }
  function Cy(t2, e2) {
    function n2(e3, n3) {
      var i2 = [];
      return e3.eachComponent({ mainType: "series", subType: t2, query: n3 }, function(t3) {
        i2.push(t3.seriesIndex);
      }), i2;
    }
    N([[t2 + "ToggleSelect", "toggleSelect"], [t2 + "Select", "select"], [t2 + "UnSelect", "unselect"]], function(t3) {
      e2(t3[0], function(e3, i2, r2) {
        e3 = D({}, e3), r2.dispatchAction(D(e3, { type: t3[1], seriesIndex: n2(i2, e3) }));
      });
    });
  }
  function Dy(t2, e2, n2, i2, r2) {
    var o2 = t2 + e2;
    n2.isSilent(o2) || i2.eachComponent({ mainType: "series", subType: "pie" }, function(t3) {
      for (var e3 = t3.seriesIndex, i3 = t3.option.selectedMap, a2 = r2.selected, s2 = 0; s2 < a2.length; s2++)
        if (a2[s2].seriesIndex === e3) {
          var l2 = t3.getData(), u2 = Lo(l2, r2.fromActionPayload);
          n2.trigger(o2, { type: o2, seriesId: t3.id, name: H(u2) ? l2.getName(u2[0]) : l2.getName(u2), selected: X(i3) ? i3 : D({}, i3) });
        }
    });
  }
  function Ay(t2, e2, n2) {
    for (var i2; t2 && (!e2(t2) || (i2 = t2, !n2)); )
      t2 = t2.__hostTarget || t2.parent;
    return i2;
  }
  var ky = Math.round(9 * Math.random());
  var Ly = "function" == typeof Object.defineProperty;
  var Py = function() {
    function t2() {
      this._id = "__ec_inner_" + ky++;
    }
    return t2.prototype.get = function(t3) {
      return this._guard(t3)[this._id];
    }, t2.prototype.set = function(t3, e2) {
      var n2 = this._guard(t3);
      return Ly ? Object.defineProperty(n2, this._id, { value: e2, enumerable: false, configurable: true }) : n2[this._id] = e2, this;
    }, t2.prototype.delete = function(t3) {
      return !!this.has(t3) && (delete this._guard(t3)[this._id], true);
    }, t2.prototype.has = function(t3) {
      return !!this._guard(t3)[this._id];
    }, t2.prototype._guard = function(t3) {
      if (t3 !== Object(t3))
        throw TypeError("Value of WeakMap is not a non-null object.");
      return t3;
    }, t2;
  }();
  var Oy = Ms.extend({ type: "triangle", shape: { cx: 0, cy: 0, width: 0, height: 0 }, buildPath: function(t2, e2) {
    var n2 = e2.cx, i2 = e2.cy, r2 = e2.width / 2, o2 = e2.height / 2;
    t2.moveTo(n2, i2 - o2), t2.lineTo(n2 + r2, i2 + o2), t2.lineTo(n2 - r2, i2 + o2), t2.closePath();
  } });
  var Ry = Ms.extend({ type: "diamond", shape: { cx: 0, cy: 0, width: 0, height: 0 }, buildPath: function(t2, e2) {
    var n2 = e2.cx, i2 = e2.cy, r2 = e2.width / 2, o2 = e2.height / 2;
    t2.moveTo(n2, i2 - o2), t2.lineTo(n2 + r2, i2), t2.lineTo(n2, i2 + o2), t2.lineTo(n2 - r2, i2), t2.closePath();
  } });
  var Ny = Ms.extend({ type: "pin", shape: { x: 0, y: 0, width: 0, height: 0 }, buildPath: function(t2, e2) {
    var n2 = e2.x, i2 = e2.y, r2 = e2.width / 5 * 3, o2 = Math.max(r2, e2.height), a2 = r2 / 2, s2 = a2 * a2 / (o2 - a2), l2 = i2 - o2 + a2 + s2, u2 = Math.asin(s2 / a2), h2 = Math.cos(u2) * a2, c2 = Math.sin(u2), p2 = Math.cos(u2), d2 = 0.6 * a2, f2 = 0.7 * a2;
    t2.moveTo(n2 - h2, l2 + s2), t2.arc(n2, l2, a2, Math.PI - u2, 2 * Math.PI + u2), t2.bezierCurveTo(n2 + h2 - c2 * d2, l2 + s2 + p2 * d2, n2, i2 - f2, n2, i2), t2.bezierCurveTo(n2, i2 - f2, n2 - h2 + c2 * d2, l2 + s2 + p2 * d2, n2 - h2, l2 + s2), t2.closePath();
  } });
  var Ey = Ms.extend({ type: "arrow", shape: { x: 0, y: 0, width: 0, height: 0 }, buildPath: function(t2, e2) {
    var n2 = e2.height, i2 = e2.width, r2 = e2.x, o2 = e2.y, a2 = i2 / 3 * 2;
    t2.moveTo(r2, o2), t2.lineTo(r2 + a2, o2 + n2), t2.lineTo(r2, o2 + n2 / 4 * 3), t2.lineTo(r2 - a2, o2 + n2), t2.lineTo(r2, o2), t2.closePath();
  } });
  var zy = { line: function(t2, e2, n2, i2, r2) {
    r2.x1 = t2, r2.y1 = e2 + i2 / 2, r2.x2 = t2 + n2, r2.y2 = e2 + i2 / 2;
  }, rect: function(t2, e2, n2, i2, r2) {
    r2.x = t2, r2.y = e2, r2.width = n2, r2.height = i2;
  }, roundRect: function(t2, e2, n2, i2, r2) {
    r2.x = t2, r2.y = e2, r2.width = n2, r2.height = i2, r2.r = Math.min(n2, i2) / 4;
  }, square: function(t2, e2, n2, i2, r2) {
    var o2 = Math.min(n2, i2);
    r2.x = t2, r2.y = e2, r2.width = o2, r2.height = o2;
  }, circle: function(t2, e2, n2, i2, r2) {
    r2.cx = t2 + n2 / 2, r2.cy = e2 + i2 / 2, r2.r = Math.min(n2, i2) / 2;
  }, diamond: function(t2, e2, n2, i2, r2) {
    r2.cx = t2 + n2 / 2, r2.cy = e2 + i2 / 2, r2.width = n2, r2.height = i2;
  }, pin: function(t2, e2, n2, i2, r2) {
    r2.x = t2 + n2 / 2, r2.y = e2 + i2 / 2, r2.width = n2, r2.height = i2;
  }, arrow: function(t2, e2, n2, i2, r2) {
    r2.x = t2 + n2 / 2, r2.y = e2 + i2 / 2, r2.width = n2, r2.height = i2;
  }, triangle: function(t2, e2, n2, i2, r2) {
    r2.cx = t2 + n2 / 2, r2.cy = e2 + i2 / 2, r2.width = n2, r2.height = i2;
  } };
  var Vy = {};
  N({ line: Uu, rect: Es, roundRect: Es, square: Es, circle: xu, diamond: Ry, pin: Ny, arrow: Ey, triangle: Oy }, function(t2, e2) {
    Vy[e2] = new t2();
  });
  var By = Ms.extend({ type: "symbol", shape: { symbolType: "", x: 0, y: 0, width: 0, height: 0 }, calculateTextPosition: function(t2, e2, n2) {
    var i2 = Ir(t2, e2, n2), r2 = this.shape;
    return r2 && "pin" === r2.symbolType && "inside" === e2.position && (i2.y = n2.y + 0.4 * n2.height), i2;
  }, buildPath: function(t2, e2, n2) {
    var i2 = e2.symbolType;
    if ("none" !== i2) {
      var r2 = Vy[i2];
      r2 || (r2 = Vy[i2 = "rect"]), zy[i2](e2.x, e2.y, e2.width, e2.height, r2.shape), r2.buildPath(t2, r2.shape, n2);
    }
  } });
  function Fy(t2, e2) {
    if ("image" !== this.type) {
      var n2 = this.style;
      this.__isEmptyBrush ? (n2.stroke = t2, n2.fill = e2 || "#fff", n2.lineWidth = 2) : "line" === this.shape.symbolType ? n2.stroke = t2 : n2.fill = t2, this.markRedraw();
    }
  }
  function Gy(t2, e2, n2, i2, r2, o2, a2) {
    var s2, l2 = 0 === t2.indexOf("empty");
    return l2 && (t2 = t2.substr(5, 1).toLowerCase() + t2.substr(6)), (s2 = 0 === t2.indexOf("image://") ? Ah(t2.slice(8), new Ee(e2, n2, i2, r2), a2 ? "center" : "cover") : 0 === t2.indexOf("path://") ? Dh(t2.slice(7), {}, new Ee(e2, n2, i2, r2), a2 ? "center" : "cover") : new By({ shape: { symbolType: t2, x: e2, y: n2, width: i2, height: r2 } })).__isEmptyBrush = l2, s2.setColor = Fy, o2 && s2.setColor(o2), s2;
  }
  function Wy(t2) {
    return H(t2) || (t2 = [+t2, +t2]), [t2[0] || 0, t2[1] || 0];
  }
  function Hy(t2, e2) {
    if (null != t2)
      return H(t2) || (t2 = [t2, t2]), [Xr(t2[0], e2[0]) || 0, Xr(it(t2[1], t2[0]), e2[1]) || 0];
  }
  function Yy(t2) {
    return isFinite(t2);
  }
  function Xy(t2, e2, n2) {
    for (var i2 = "radial" === e2.type ? function(t3, e3, n3) {
      var i3 = n3.width, r3 = n3.height, o3 = Math.min(i3, r3), a2 = null == e3.x ? 0.5 : e3.x, s2 = null == e3.y ? 0.5 : e3.y, l2 = null == e3.r ? 0.5 : e3.r;
      return e3.global || (a2 = a2 * i3 + n3.x, s2 = s2 * r3 + n3.y, l2 *= o3), a2 = Yy(a2) ? a2 : 0.5, s2 = Yy(s2) ? s2 : 0.5, l2 = l2 >= 0 && Yy(l2) ? l2 : 0.5, t3.createRadialGradient(a2, s2, 0, a2, s2, l2);
    }(t2, e2, n2) : function(t3, e3, n3) {
      var i3 = null == e3.x ? 0 : e3.x, r3 = null == e3.x2 ? 1 : e3.x2, o3 = null == e3.y ? 0 : e3.y, a2 = null == e3.y2 ? 0 : e3.y2;
      return e3.global || (i3 = i3 * n3.width + n3.x, r3 = r3 * n3.width + n3.x, o3 = o3 * n3.height + n3.y, a2 = a2 * n3.height + n3.y), i3 = Yy(i3) ? i3 : 0, r3 = Yy(r3) ? r3 : 1, o3 = Yy(o3) ? o3 : 0, a2 = Yy(a2) ? a2 : 0, t3.createLinearGradient(i3, o3, r3, a2);
    }(t2, e2, n2), r2 = e2.colorStops, o2 = 0; o2 < r2.length; o2++)
      i2.addColorStop(r2[o2].offset, r2[o2].color);
    return i2;
  }
  function Uy(t2) {
    return parseInt(t2, 10);
  }
  function Zy(t2, e2, n2) {
    var i2 = ["width", "height"][e2], r2 = ["clientWidth", "clientHeight"][e2], o2 = ["paddingLeft", "paddingTop"][e2], a2 = ["paddingRight", "paddingBottom"][e2];
    if (null != n2[i2] && "auto" !== n2[i2])
      return parseFloat(n2[i2]);
    var s2 = document.defaultView.getComputedStyle(t2);
    return (t2[r2] || Uy(s2[i2]) || Uy(t2.style[i2])) - (Uy(s2[o2]) || 0) - (Uy(s2[a2]) || 0) | 0;
  }
  function jy(t2) {
    var e2, n2, i2 = t2.style, r2 = i2.lineDash && i2.lineWidth > 0 && (e2 = i2.lineDash, n2 = i2.lineWidth, e2 && "solid" !== e2 && n2 > 0 ? "dashed" === e2 ? [4 * n2, 2 * n2] : "dotted" === e2 ? [n2] : Z(e2) ? [e2] : H(e2) ? e2 : null : null), o2 = i2.lineDashOffset;
    if (r2) {
      var a2 = i2.strokeNoScale && t2.getLineScale ? t2.getLineScale() : 1;
      a2 && 1 !== a2 && (r2 = E(r2, function(t3) {
        return t3 / a2;
      }), o2 /= a2);
    }
    return [r2, o2];
  }
  var qy = new rs(true);
  function Ky(t2) {
    var e2 = t2.stroke;
    return !(null == e2 || "none" === e2 || !(t2.lineWidth > 0));
  }
  function $y(t2) {
    return "string" == typeof t2 && "none" !== t2;
  }
  function Jy(t2) {
    var e2 = t2.fill;
    return null != e2 && "none" !== e2;
  }
  function Qy(t2, e2) {
    if (null != e2.fillOpacity && 1 !== e2.fillOpacity) {
      var n2 = t2.globalAlpha;
      t2.globalAlpha = e2.fillOpacity * e2.opacity, t2.fill(), t2.globalAlpha = n2;
    } else
      t2.fill();
  }
  function tv(t2, e2) {
    if (null != e2.strokeOpacity && 1 !== e2.strokeOpacity) {
      var n2 = t2.globalAlpha;
      t2.globalAlpha = e2.strokeOpacity * e2.opacity, t2.stroke(), t2.globalAlpha = n2;
    } else
      t2.stroke();
  }
  function ev(t2, e2, n2) {
    var i2 = na(e2.image, e2.__image, n2);
    if (ra(i2)) {
      var r2 = t2.createPattern(i2, e2.repeat || "repeat");
      if ("function" == typeof DOMMatrix && r2 && r2.setTransform) {
        var o2 = new DOMMatrix();
        o2.translateSelf(e2.x || 0, e2.y || 0), o2.rotateSelf(0, 0, (e2.rotation || 0) * bt), o2.scaleSelf(e2.scaleX || 1, e2.scaleY || 1), r2.setTransform(o2);
      }
      return r2;
    }
  }
  var nv = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"];
  var iv = [["lineCap", "butt"], ["lineJoin", "miter"], ["miterLimit", 10]];
  function rv(t2, e2, n2, i2, r2) {
    var o2 = false;
    if (!i2 && e2 === (n2 = n2 || {}))
      return false;
    if (i2 || e2.opacity !== n2.opacity) {
      sv(t2, r2), o2 = true;
      var a2 = Math.max(Math.min(e2.opacity, 1), 0);
      t2.globalAlpha = isNaN(a2) ? ma.opacity : a2;
    }
    (i2 || e2.blend !== n2.blend) && (o2 || (sv(t2, r2), o2 = true), t2.globalCompositeOperation = e2.blend || ma.blend);
    for (var s2 = 0; s2 < nv.length; s2++) {
      var l2 = nv[s2];
      (i2 || e2[l2] !== n2[l2]) && (o2 || (sv(t2, r2), o2 = true), t2[l2] = t2.dpr * (e2[l2] || 0));
    }
    return (i2 || e2.shadowColor !== n2.shadowColor) && (o2 || (sv(t2, r2), o2 = true), t2.shadowColor = e2.shadowColor || ma.shadowColor), o2;
  }
  function ov(t2, e2, n2, i2, r2) {
    var o2 = lv(e2, r2.inHover), a2 = i2 ? null : n2 && lv(n2, r2.inHover) || {};
    if (o2 === a2)
      return false;
    var s2 = rv(t2, o2, a2, i2, r2);
    if ((i2 || o2.fill !== a2.fill) && (s2 || (sv(t2, r2), s2 = true), $y(o2.fill) && (t2.fillStyle = o2.fill)), (i2 || o2.stroke !== a2.stroke) && (s2 || (sv(t2, r2), s2 = true), $y(o2.stroke) && (t2.strokeStyle = o2.stroke)), (i2 || o2.opacity !== a2.opacity) && (s2 || (sv(t2, r2), s2 = true), t2.globalAlpha = null == o2.opacity ? 1 : o2.opacity), e2.hasStroke()) {
      var l2 = o2.lineWidth / (o2.strokeNoScale && e2.getLineScale ? e2.getLineScale() : 1);
      t2.lineWidth !== l2 && (s2 || (sv(t2, r2), s2 = true), t2.lineWidth = l2);
    }
    for (var u2 = 0; u2 < iv.length; u2++) {
      var h2 = iv[u2], c2 = h2[0];
      (i2 || o2[c2] !== a2[c2]) && (s2 || (sv(t2, r2), s2 = true), t2[c2] = o2[c2] || h2[1]);
    }
    return s2;
  }
  function av(t2, e2) {
    var n2 = e2.transform, i2 = t2.dpr || 1;
    n2 ? t2.setTransform(i2 * n2[0], i2 * n2[1], i2 * n2[2], i2 * n2[3], i2 * n2[4], i2 * n2[5]) : t2.setTransform(i2, 0, 0, i2, 0, 0);
  }
  function sv(t2, e2) {
    e2.batchFill && t2.fill(), e2.batchStroke && t2.stroke(), e2.batchFill = "", e2.batchStroke = "";
  }
  function lv(t2, e2) {
    return e2 && t2.__hoverStyle || t2.style;
  }
  function uv(t2, e2) {
    hv(t2, e2, { inHover: false, viewWidth: 0, viewHeight: 0 }, true);
  }
  function hv(t2, e2, n2, i2) {
    var r2 = e2.transform;
    if (!e2.shouldBePainted(n2.viewWidth, n2.viewHeight, false, false))
      return e2.__dirty &= -2, void (e2.__isRendered = false);
    var a2 = e2.__clipPaths, s2 = n2.prevElClipPaths, l2 = false, u2 = false;
    if (s2 && !function(t3, e3) {
      if (t3 === e3 || !t3 && !e3)
        return false;
      if (!t3 || !e3 || t3.length !== e3.length)
        return true;
      for (var n3 = 0; n3 < t3.length; n3++)
        if (t3[n3] !== e3[n3])
          return true;
      return false;
    }(a2, s2) || (s2 && s2.length && (sv(t2, n2), t2.restore(), u2 = l2 = true, n2.prevElClipPaths = null, n2.allClipped = false, n2.prevEl = null), a2 && a2.length && (sv(t2, n2), t2.save(), function(t3, e3, n3) {
      for (var i3 = false, r3 = 0; r3 < t3.length; r3++) {
        var o2 = t3[r3];
        i3 = i3 || o2.isZeroArea(), av(e3, o2), e3.beginPath(), o2.buildPath(e3, o2.shape), e3.clip();
      }
      n3.allClipped = i3;
    }(a2, t2, n2), l2 = true), n2.prevElClipPaths = a2), n2.allClipped)
      e2.__isRendered = false;
    else {
      e2.beforeBrush && e2.beforeBrush(), e2.innerBeforeBrush();
      var h2 = n2.prevEl;
      h2 || (u2 = l2 = true);
      var c2, p2, d2 = e2 instanceof Ms && e2.autoBatch && function(t3) {
        var e3 = Jy(t3), n3 = Ky(t3);
        return !(t3.lineDash || !(+e3 ^ +n3) || e3 && "string" != typeof t3.fill || n3 && "string" != typeof t3.stroke || t3.strokePercent < 1 || t3.strokeOpacity < 1 || t3.fillOpacity < 1);
      }(e2.style);
      l2 || (c2 = r2, p2 = h2.transform, c2 && p2 ? c2[0] !== p2[0] || c2[1] !== p2[1] || c2[2] !== p2[2] || c2[3] !== p2[3] || c2[4] !== p2[4] || c2[5] !== p2[5] : c2 || p2) ? (sv(t2, n2), av(t2, e2)) : d2 || sv(t2, n2);
      var f2 = lv(e2, n2.inHover);
      e2 instanceof Ms ? (1 !== n2.lastDrawType && (u2 = true, n2.lastDrawType = 1), ov(t2, e2, h2, u2, n2), d2 && (n2.batchFill || n2.batchStroke) || t2.beginPath(), function(t3, e3, n3, i3) {
        var r3, o2 = Ky(n3), a3 = Jy(n3), s3 = n3.strokePercent, l3 = s3 < 1, u3 = !e3.path;
        e3.silent && !l3 || !u3 || e3.createPathProxy();
        var h3 = e3.path || qy, c3 = e3.__dirty;
        if (!i3) {
          var p3 = n3.fill, d3 = n3.stroke, f3 = a3 && !!p3.colorStops, g2 = o2 && !!d3.colorStops, y2 = a3 && !!p3.image, v2 = o2 && !!d3.image, m2 = void 0, x2 = void 0, _2 = void 0, b2 = void 0, w2 = void 0;
          (f3 || g2) && (w2 = e3.getBoundingRect()), f3 && (m2 = c3 ? Xy(t3, p3, w2) : e3.__canvasFillGradient, e3.__canvasFillGradient = m2), g2 && (x2 = c3 ? Xy(t3, d3, w2) : e3.__canvasStrokeGradient, e3.__canvasStrokeGradient = x2), y2 && (_2 = c3 || !e3.__canvasFillPattern ? ev(t3, p3, e3) : e3.__canvasFillPattern, e3.__canvasFillPattern = _2), v2 && (b2 = c3 || !e3.__canvasStrokePattern ? ev(t3, d3, e3) : e3.__canvasStrokePattern, e3.__canvasStrokePattern = _2), f3 ? t3.fillStyle = m2 : y2 && (_2 ? t3.fillStyle = _2 : a3 = false), g2 ? t3.strokeStyle = x2 : v2 && (b2 ? t3.strokeStyle = b2 : o2 = false);
        }
        var S2, M2, I2 = e3.getGlobalScale();
        h3.setScale(I2[0], I2[1], e3.segmentIgnoreThreshold), t3.setLineDash && n3.lineDash && (S2 = (r3 = jy(e3))[0], M2 = r3[1]);
        var T2 = true;
        (u3 || 4 & c3) && (h3.setDPR(t3.dpr), l3 ? h3.setContext(null) : (h3.setContext(t3), T2 = false), h3.reset(), e3.buildPath(h3, e3.shape, i3), h3.toStatic(), e3.pathUpdated()), T2 && h3.rebuildPath(t3, l3 ? s3 : 1), S2 && (t3.setLineDash(S2), t3.lineDashOffset = M2), i3 || (n3.strokeFirst ? (o2 && tv(t3, n3), a3 && Qy(t3, n3)) : (a3 && Qy(t3, n3), o2 && tv(t3, n3))), S2 && t3.setLineDash([]);
      }(t2, e2, f2, d2), d2 && (n2.batchFill = f2.fill || "", n2.batchStroke = f2.stroke || "")) : e2 instanceof Ts ? (3 !== n2.lastDrawType && (u2 = true, n2.lastDrawType = 3), ov(t2, e2, h2, u2, n2), function(t3, e3, n3) {
        var i3, r3 = n3.text;
        if (null != r3 && (r3 += ""), r3) {
          t3.font = n3.font || o, t3.textAlign = n3.textAlign, t3.textBaseline = n3.textBaseline;
          var a3 = void 0, s3 = void 0;
          t3.setLineDash && n3.lineDash && (a3 = (i3 = jy(e3))[0], s3 = i3[1]), a3 && (t3.setLineDash(a3), t3.lineDashOffset = s3), n3.strokeFirst ? (Ky(n3) && t3.strokeText(r3, n3.x, n3.y), Jy(n3) && t3.fillText(r3, n3.x, n3.y)) : (Jy(n3) && t3.fillText(r3, n3.x, n3.y), Ky(n3) && t3.strokeText(r3, n3.x, n3.y)), a3 && t3.setLineDash([]);
        }
      }(t2, e2, f2)) : e2 instanceof As ? (2 !== n2.lastDrawType && (u2 = true, n2.lastDrawType = 2), function(t3, e3, n3, i3, r3) {
        rv(t3, lv(e3, r3.inHover), n3 && lv(n3, r3.inHover), i3, r3);
      }(t2, e2, h2, u2, n2), function(t3, e3, n3) {
        var i3 = e3.__image = na(n3.image, e3.__image, e3, e3.onload);
        if (i3 && ra(i3)) {
          var r3 = n3.x || 0, o2 = n3.y || 0, a3 = e3.getWidth(), s3 = e3.getHeight(), l3 = i3.width / i3.height;
          if (null == a3 && null != s3 ? a3 = s3 * l3 : null == s3 && null != a3 ? s3 = a3 / l3 : null == a3 && null == s3 && (a3 = i3.width, s3 = i3.height), n3.sWidth && n3.sHeight) {
            var u3 = n3.sx || 0, h3 = n3.sy || 0;
            t3.drawImage(i3, u3, h3, n3.sWidth, n3.sHeight, r3, o2, a3, s3);
          } else if (n3.sx && n3.sy) {
            var c3 = a3 - (u3 = n3.sx), p3 = s3 - (h3 = n3.sy);
            t3.drawImage(i3, u3, h3, c3, p3, r3, o2, a3, s3);
          } else
            t3.drawImage(i3, r3, o2, a3, s3);
        }
      }(t2, e2, f2)) : e2.getTemporalDisplayables && (4 !== n2.lastDrawType && (u2 = true, n2.lastDrawType = 4), function(t3, e3, n3) {
        var i3 = e3.getDisplayables(), r3 = e3.getTemporalDisplayables();
        t3.save();
        var o2, a3, s3 = { prevElClipPaths: null, prevEl: null, allClipped: false, viewWidth: n3.viewWidth, viewHeight: n3.viewHeight, inHover: n3.inHover };
        for (o2 = e3.getCursor(), a3 = i3.length; o2 < a3; o2++) {
          (h3 = i3[o2]).beforeBrush && h3.beforeBrush(), h3.innerBeforeBrush(), hv(t3, h3, s3, o2 === a3 - 1), h3.innerAfterBrush(), h3.afterBrush && h3.afterBrush(), s3.prevEl = h3;
        }
        for (var l3 = 0, u3 = r3.length; l3 < u3; l3++) {
          var h3;
          (h3 = r3[l3]).beforeBrush && h3.beforeBrush(), h3.innerBeforeBrush(), hv(t3, h3, s3, l3 === u3 - 1), h3.innerAfterBrush(), h3.afterBrush && h3.afterBrush(), s3.prevEl = h3;
        }
        e3.clearTemporalDisplayables(), e3.notClear = true, t3.restore();
      }(t2, e2, n2)), d2 && i2 && sv(t2, n2), e2.innerAfterBrush(), e2.afterBrush && e2.afterBrush(), n2.prevEl = e2, e2.__dirty = 0, e2.__isRendered = true;
    }
  }
  var cv = new Py();
  var pv = new Nn(100);
  var dv = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
  function fv(t2, e2) {
    if ("none" === t2)
      return null;
    var n2 = e2.getDevicePixelRatio(), i2 = e2.getZr(), r2 = "svg" === i2.painter.type;
    t2.dirty && cv.delete(t2);
    var o2 = cv.get(t2);
    if (o2)
      return o2;
    var a2 = A(t2, { symbol: "rect", symbolSize: 1, symbolKeepAspect: true, color: "rgba(0, 0, 0, 0.2)", backgroundColor: null, dashArrayX: 5, dashArrayY: 5, rotation: 0, maxTileWidth: 512, maxTileHeight: 512 });
    "none" === a2.backgroundColor && (a2.backgroundColor = null);
    var s2 = { repeat: "repeat" };
    return function(t3) {
      for (var e3, o3 = [n2], s3 = true, l2 = 0; l2 < dv.length; ++l2) {
        var h2 = a2[dv[l2]];
        if (null != h2 && !H(h2) && !X(h2) && !Z(h2) && "boolean" != typeof h2) {
          s3 = false;
          break;
        }
        o3.push(h2);
      }
      if (s3) {
        e3 = o3.join(",") + (r2 ? "-svg" : "");
        var c2 = pv.get(e3);
        c2 && (r2 ? t3.svgElement = c2 : t3.image = c2);
      }
      var p2, d2 = yv(a2.dashArrayX), f2 = function(t4) {
        if (!t4 || "object" == typeof t4 && 0 === t4.length)
          return [0, 0];
        if (Z(t4)) {
          var e4 = Math.ceil(t4);
          return [e4, e4];
        }
        var n3 = E(t4, function(t5) {
          return Math.ceil(t5);
        });
        return t4.length % 2 ? n3.concat(n3) : n3;
      }(a2.dashArrayY), g2 = gv(a2.symbol), y2 = (b2 = d2, E(b2, function(t4) {
        return vv(t4);
      })), v2 = vv(f2), m2 = !r2 && u.createCanvas(), x2 = r2 && { tag: "g", attrs: {}, key: "dcl", children: [] }, _2 = function() {
        for (var t4 = 1, e4 = 0, n3 = y2.length; e4 < n3; ++e4)
          t4 = fo(t4, y2[e4]);
        var i3 = 1;
        for (e4 = 0, n3 = g2.length; e4 < n3; ++e4)
          i3 = fo(i3, g2[e4].length);
        t4 *= i3;
        var r3 = v2 * y2.length * g2.length;
        return { width: Math.max(1, Math.min(t4, a2.maxTileWidth)), height: Math.max(1, Math.min(r3, a2.maxTileHeight)) };
      }();
      var b2;
      m2 && (m2.width = _2.width * n2, m2.height = _2.height * n2, p2 = m2.getContext("2d"));
      (function() {
        p2 && (p2.clearRect(0, 0, m2.width, m2.height), a2.backgroundColor && (p2.fillStyle = a2.backgroundColor, p2.fillRect(0, 0, m2.width, m2.height)));
        for (var t4 = 0, e4 = 0; e4 < f2.length; ++e4)
          t4 += f2[e4];
        if (t4 <= 0)
          return;
        var o4 = -v2, s4 = 0, l3 = 0, u2 = 0;
        for (; o4 < _2.height; ) {
          if (s4 % 2 == 0) {
            for (var h3 = l3 / 2 % g2.length, c3 = 0, y3 = 0, b3 = 0; c3 < 2 * _2.width; ) {
              var w2 = 0;
              for (e4 = 0; e4 < d2[u2].length; ++e4)
                w2 += d2[u2][e4];
              if (w2 <= 0)
                break;
              if (y3 % 2 == 0) {
                var S2 = 0.5 * (1 - a2.symbolSize), M2 = c3 + d2[u2][y3] * S2, I2 = o4 + f2[s4] * S2, T2 = d2[u2][y3] * a2.symbolSize, C2 = f2[s4] * a2.symbolSize, D2 = b3 / 2 % g2[h3].length;
                A2(M2, I2, T2, C2, g2[h3][D2]);
              }
              c3 += d2[u2][y3], ++b3, ++y3 === d2[u2].length && (y3 = 0);
            }
            ++u2 === d2.length && (u2 = 0);
          }
          o4 += f2[s4], ++l3, ++s4 === f2.length && (s4 = 0);
        }
        function A2(t5, e5, o5, s5, l4) {
          var u3 = r2 ? 1 : n2, h4 = Gy(l4, t5 * u3, e5 * u3, o5 * u3, s5 * u3, a2.color, a2.symbolKeepAspect);
          if (r2) {
            var c4 = i2.painter.renderOneToVNode(h4);
            c4 && x2.children.push(c4);
          } else
            uv(p2, h4);
        }
      })(), s3 && pv.put(e3, m2 || x2);
      t3.image = m2, t3.svgElement = x2, t3.svgWidth = _2.width, t3.svgHeight = _2.height;
    }(s2), s2.rotation = a2.rotation, s2.scaleX = s2.scaleY = r2 ? 1 : 1 / n2, cv.set(t2, s2), t2.dirty = false, s2;
  }
  function gv(t2) {
    if (!t2 || 0 === t2.length)
      return [["rect"]];
    if (X(t2))
      return [[t2]];
    for (var e2 = true, n2 = 0; n2 < t2.length; ++n2)
      if (!X(t2[n2])) {
        e2 = false;
        break;
      }
    if (e2)
      return gv([t2]);
    var i2 = [];
    for (n2 = 0; n2 < t2.length; ++n2)
      X(t2[n2]) ? i2.push([t2[n2]]) : i2.push(t2[n2]);
    return i2;
  }
  function yv(t2) {
    if (!t2 || 0 === t2.length)
      return [[0, 0]];
    if (Z(t2))
      return [[r2 = Math.ceil(t2), r2]];
    for (var e2 = true, n2 = 0; n2 < t2.length; ++n2)
      if (!Z(t2[n2])) {
        e2 = false;
        break;
      }
    if (e2)
      return yv([t2]);
    var i2 = [];
    for (n2 = 0; n2 < t2.length; ++n2)
      if (Z(t2[n2])) {
        var r2 = Math.ceil(t2[n2]);
        i2.push([r2, r2]);
      } else {
        (r2 = E(t2[n2], function(t3) {
          return Math.ceil(t3);
        })).length % 2 == 1 ? i2.push(r2.concat(r2)) : i2.push(r2);
      }
    return i2;
  }
  function vv(t2) {
    for (var e2 = 0, n2 = 0; n2 < t2.length; ++n2)
      e2 += t2[n2];
    return t2.length % 2 == 1 ? 2 * e2 : e2;
  }
  var mv = new Zt();
  var xv = {};
  function _v(t2) {
    return xv[t2];
  }
  var bv = "5.4.3";
  var wv = { zrender: "5.4.4" };
  var Sv = 2e3;
  var Mv = 4500;
  var Iv = { PROCESSOR: { FILTER: 1e3, SERIES_FILTER: 800, STATISTIC: 5e3 }, VISUAL: { LAYOUT: 1e3, PROGRESSIVE_LAYOUT: 1100, GLOBAL: Sv, CHART: 3e3, POST_CHART_LAYOUT: 4600, COMPONENT: 4e3, BRUSH: 5e3, CHART_ITEM: Mv, ARIA: 6e3, DECAL: 7e3 } };
  var Tv = "__flagInMainProcess";
  var Cv = "__pendingUpdate";
  var Dv = "__needsUpdateStatus";
  var Av = /^[a-zA-Z0-9_]+$/;
  var kv = "__connectUpdateStatus";
  function Lv(t2) {
    return function() {
      for (var e2 = [], n2 = 0; n2 < arguments.length; n2++)
        e2[n2] = arguments[n2];
      if (!this.isDisposed())
        return Ov(this, t2, e2);
      im(this.id);
    };
  }
  function Pv(t2) {
    return function() {
      for (var e2 = [], n2 = 0; n2 < arguments.length; n2++)
        e2[n2] = arguments[n2];
      return Ov(this, t2, e2);
    };
  }
  function Ov(t2, e2, n2) {
    return n2[0] = n2[0] && n2[0].toLowerCase(), Zt.prototype[e2].apply(t2, n2);
  }
  var Rv;
  var Nv;
  var Ev;
  var zv;
  var Vv;
  var Bv;
  var Fv;
  var Gv;
  var Wv;
  var Hv;
  var Yv;
  var Xv;
  var Uv;
  var Zv;
  var jv;
  var qv;
  var Kv;
  var $v;
  var Jv = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2;
  }(Zt);
  var Qv = Jv.prototype;
  Qv.on = Pv("on"), Qv.off = Pv("off");
  var tm = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this, new xy()) || this;
      r2._chartsViews = [], r2._chartsMap = {}, r2._componentsViews = [], r2._componentsMap = {}, r2._pendingActions = [], i2 = i2 || {}, X(n3) && (n3 = um[n3]), r2._dom = e2;
      var o2 = "canvas", a2 = "auto", s2 = false, l2 = r2._zr = Fr(e2, { renderer: i2.renderer || o2, devicePixelRatio: i2.devicePixelRatio, width: i2.width, height: i2.height, ssr: i2.ssr, useDirtyRect: it(i2.useDirtyRect, s2), useCoarsePointer: it(i2.useCoarsePointer, a2), pointerSize: i2.pointerSize });
      r2._ssr = i2.ssr, r2._throttledZrFlush = Vg(G(l2.flush, l2), 17), (n3 = I(n3)) && Gd(n3, true), r2._theme = n3, r2._locale = function(t3) {
        if (X(t3)) {
          var e3 = kc[t3.toUpperCase()] || {};
          return t3 === Cc || t3 === Dc ? I(e3) : T(I(e3), I(kc[Ac]), false);
        }
        return T(I(t3), I(kc[Ac]), false);
      }(i2.locale || Pc), r2._coordSysMgr = new md();
      var u2 = r2._api = jv(r2);
      function h2(t3, e3) {
        return t3.__prio - e3.__prio;
      }
      return Je(lm, h2), Je(am, h2), r2._scheduler = new $g(r2, u2, am, lm), r2._messageCenter = new Jv(), r2._initEvents(), r2.resize = G(r2.resize, r2), l2.animation.on("frame", r2._onframe, r2), Hv(l2, r2), Yv(l2, r2), ht(r2), r2;
    }
    return e(n2, t2), n2.prototype._onframe = function() {
      if (!this._disposed) {
        $v(this);
        var t3 = this._scheduler;
        if (this[Cv]) {
          var e2 = this[Cv].silent;
          this[Tv] = true;
          try {
            Rv(this), zv.update.call(this, null, this[Cv].updateParams);
          } catch (t4) {
            throw this[Tv] = false, this[Cv] = null, t4;
          }
          this._zr.flush(), this[Tv] = false, this[Cv] = null, Gv.call(this, e2), Wv.call(this, e2);
        } else if (t3.unfinished) {
          var n3 = 1, i2 = this._model, r2 = this._api;
          t3.unfinished = false;
          do {
            var o2 = +/* @__PURE__ */ new Date();
            t3.performSeriesTasks(i2), t3.performDataProcessorTasks(i2), Bv(this, i2), t3.performVisualTasks(i2), Zv(this, this._model, r2, "remain", {}), n3 -= +/* @__PURE__ */ new Date() - o2;
          } while (n3 > 0 && t3.unfinished);
          t3.unfinished || this._zr.flush();
        }
      }
    }, n2.prototype.getDom = function() {
      return this._dom;
    }, n2.prototype.getId = function() {
      return this.id;
    }, n2.prototype.getZr = function() {
      return this._zr;
    }, n2.prototype.isSSR = function() {
      return this._ssr;
    }, n2.prototype.setOption = function(t3, e2, n3) {
      if (!this[Tv])
        if (this._disposed)
          im(this.id);
        else {
          var i2, r2, o2;
          if (j(e2) && (n3 = e2.lazyUpdate, i2 = e2.silent, r2 = e2.replaceMerge, o2 = e2.transition, e2 = e2.notMerge), this[Tv] = true, !this._model || e2) {
            var a2 = new _d(this._api), s2 = this._theme, l2 = this._model = new cd();
            l2.scheduler = this._scheduler, l2.ssr = this._ssr, l2.init(null, null, null, s2, this._locale, a2);
          }
          this._model.setOption(t3, { replaceMerge: r2 }, sm);
          var u2 = { seriesTransition: o2, optionChanged: true };
          if (n3)
            this[Cv] = { silent: i2, updateParams: u2 }, this[Tv] = false, this.getZr().wakeUp();
          else {
            try {
              Rv(this), zv.update.call(this, null, u2);
            } catch (t4) {
              throw this[Cv] = null, this[Tv] = false, t4;
            }
            this._ssr || this._zr.flush(), this[Cv] = null, this[Tv] = false, Gv.call(this, i2), Wv.call(this, i2);
          }
        }
    }, n2.prototype.setTheme = function() {
    }, n2.prototype.getModel = function() {
      return this._model;
    }, n2.prototype.getOption = function() {
      return this._model && this._model.getOption();
    }, n2.prototype.getWidth = function() {
      return this._zr.getWidth();
    }, n2.prototype.getHeight = function() {
      return this._zr.getHeight();
    }, n2.prototype.getDevicePixelRatio = function() {
      return this._zr.painter.dpr || i.hasGlobalWindow && window.devicePixelRatio || 1;
    }, n2.prototype.getRenderedCanvas = function(t3) {
      return this.renderToCanvas(t3);
    }, n2.prototype.renderToCanvas = function(t3) {
      t3 = t3 || {};
      var e2 = this._zr.painter;
      return e2.getRenderedCanvas({ backgroundColor: t3.backgroundColor || this._model.get("backgroundColor"), pixelRatio: t3.pixelRatio || this.getDevicePixelRatio() });
    }, n2.prototype.renderToSVGString = function(t3) {
      t3 = t3 || {};
      var e2 = this._zr.painter;
      return e2.renderToString({ useViewBox: t3.useViewBox });
    }, n2.prototype.getSvgDataURL = function() {
      if (i.svgSupported) {
        var t3 = this._zr;
        return N(t3.storage.getDisplayList(), function(t4) {
          t4.stopAnimation(null, true);
        }), t3.painter.toDataURL();
      }
    }, n2.prototype.getDataURL = function(t3) {
      if (!this._disposed) {
        var e2 = (t3 = t3 || {}).excludeComponents, n3 = this._model, i2 = [], r2 = this;
        N(e2, function(t4) {
          n3.eachComponent({ mainType: t4 }, function(t5) {
            var e3 = r2._componentsMap[t5.__viewId];
            e3.group.ignore || (i2.push(e3), e3.group.ignore = true);
          });
        });
        var o2 = "svg" === this._zr.painter.getType() ? this.getSvgDataURL() : this.renderToCanvas(t3).toDataURL("image/" + (t3 && t3.type || "png"));
        return N(i2, function(t4) {
          t4.group.ignore = false;
        }), o2;
      }
      im(this.id);
    }, n2.prototype.getConnectedDataURL = function(t3) {
      if (!this._disposed) {
        var e2 = "svg" === t3.type, n3 = this.group, i2 = Math.min, r2 = Math.max, o2 = 1 / 0;
        if (pm[n3]) {
          var a2 = o2, s2 = o2, l2 = -1 / 0, h2 = -1 / 0, c2 = [], p2 = t3 && t3.pixelRatio || this.getDevicePixelRatio();
          N(cm, function(o3, u2) {
            if (o3.group === n3) {
              var p3 = e2 ? o3.getZr().painter.getSvgDom().innerHTML : o3.renderToCanvas(I(t3)), d3 = o3.getDom().getBoundingClientRect();
              a2 = i2(d3.left, a2), s2 = i2(d3.top, s2), l2 = r2(d3.right, l2), h2 = r2(d3.bottom, h2), c2.push({ dom: p3, left: d3.left, top: d3.top });
            }
          });
          var d2 = (l2 *= p2) - (a2 *= p2), f2 = (h2 *= p2) - (s2 *= p2), g2 = u.createCanvas(), y2 = Fr(g2, { renderer: e2 ? "svg" : "canvas" });
          if (y2.resize({ width: d2, height: f2 }), e2) {
            var v2 = "";
            return N(c2, function(t4) {
              var e3 = t4.left - a2, n4 = t4.top - s2;
              v2 += '<g transform="translate(' + e3 + "," + n4 + ')">' + t4.dom + "</g>";
            }), y2.painter.getSvgRoot().innerHTML = v2, t3.connectedBackgroundColor && y2.painter.setBackgroundColor(t3.connectedBackgroundColor), y2.refreshImmediately(), y2.painter.toDataURL();
          }
          return t3.connectedBackgroundColor && y2.add(new Es({ shape: { x: 0, y: 0, width: d2, height: f2 }, style: { fill: t3.connectedBackgroundColor } })), N(c2, function(t4) {
            var e3 = new As({ style: { x: t4.left * p2 - a2, y: t4.top * p2 - s2, image: t4.dom } });
            y2.add(e3);
          }), y2.refreshImmediately(), g2.toDataURL("image/" + (t3 && t3.type || "png"));
        }
        return this.getDataURL(t3);
      }
      im(this.id);
    }, n2.prototype.convertToPixel = function(t3, e2) {
      return Vv(this, "convertToPixel", t3, e2);
    }, n2.prototype.convertFromPixel = function(t3, e2) {
      return Vv(this, "convertFromPixel", t3, e2);
    }, n2.prototype.containPixel = function(t3, e2) {
      var n3;
      if (!this._disposed)
        return N(Ro(this._model, t3), function(t4, i2) {
          i2.indexOf("Models") >= 0 && N(t4, function(t5) {
            var r2 = t5.coordinateSystem;
            if (r2 && r2.containPoint)
              n3 = n3 || !!r2.containPoint(e2);
            else if ("seriesModels" === i2) {
              var o2 = this._chartsMap[t5.__viewId];
              o2 && o2.containPoint && (n3 = n3 || o2.containPoint(e2, t5));
            } else
              ;
          }, this);
        }, this), !!n3;
      im(this.id);
    }, n2.prototype.getVisual = function(t3, e2) {
      var n3 = Ro(this._model, t3, { defaultMainType: "series" }), i2 = n3.seriesModel;
      var r2 = i2.getData(), o2 = n3.hasOwnProperty("dataIndexInside") ? n3.dataIndexInside : n3.hasOwnProperty("dataIndex") ? r2.indexOfRawIndex(n3.dataIndex) : null;
      return null != o2 ? My(r2, o2, e2) : Iy(r2, e2);
    }, n2.prototype.getViewOfComponentModel = function(t3) {
      return this._componentsMap[t3.__viewId];
    }, n2.prototype.getViewOfSeriesModel = function(t3) {
      return this._chartsMap[t3.__viewId];
    }, n2.prototype._initEvents = function() {
      var t3, e2, n3, i2 = this;
      N(nm, function(t4) {
        var e3 = function(e4) {
          var n4, r2 = i2.getModel(), o2 = e4.target, a2 = "globalout" === t4;
          if (a2 ? n4 = {} : o2 && Ay(o2, function(t5) {
            var e5 = Js(t5);
            if (e5 && null != e5.dataIndex) {
              var i3 = e5.dataModel || r2.getSeriesByIndex(e5.seriesIndex);
              return n4 = i3 && i3.getDataParams(e5.dataIndex, e5.dataType, o2) || {}, true;
            }
            if (e5.eventData)
              return n4 = D({}, e5.eventData), true;
          }, true), n4) {
            var s2 = n4.componentType, l2 = n4.componentIndex;
            "markLine" !== s2 && "markPoint" !== s2 && "markArea" !== s2 || (s2 = "series", l2 = n4.seriesIndex);
            var u2 = s2 && null != l2 && r2.getComponent(s2, l2), h2 = u2 && i2["series" === u2.mainType ? "_chartsMap" : "_componentsMap"][u2.__viewId];
            n4.event = e4, n4.type = t4, i2._$eventProcessor.eventInfo = { targetEl: o2, packedEvent: n4, model: u2, view: h2 }, i2.trigger(t4, n4);
          }
        };
        e3.zrEventfulCallAtLast = true, i2._zr.on(t4, e3, i2);
      }), N(om, function(t4, e3) {
        i2._messageCenter.on(e3, function(t5) {
          this.trigger(e3, t5);
        }, i2);
      }), N(["selectchanged"], function(t4) {
        i2._messageCenter.on(t4, function(e3) {
          this.trigger(t4, e3);
        }, i2);
      }), t3 = this._messageCenter, e2 = this, n3 = this._api, t3.on("selectchanged", function(t4) {
        var i3 = n3.getModel();
        t4.isFromClick ? (Dy("map", "selectchanged", e2, i3, t4), Dy("pie", "selectchanged", e2, i3, t4)) : "select" === t4.fromAction ? (Dy("map", "selected", e2, i3, t4), Dy("pie", "selected", e2, i3, t4)) : "unselect" === t4.fromAction && (Dy("map", "unselected", e2, i3, t4), Dy("pie", "unselected", e2, i3, t4));
      });
    }, n2.prototype.isDisposed = function() {
      return this._disposed;
    }, n2.prototype.clear = function() {
      this._disposed ? im(this.id) : this.setOption({ series: [] }, true);
    }, n2.prototype.dispose = function() {
      if (this._disposed)
        im(this.id);
      else {
        this._disposed = true, this.getDom() && Bo(this.getDom(), gm, "");
        var t3 = this, e2 = t3._api, n3 = t3._model;
        N(t3._componentsViews, function(t4) {
          t4.dispose(n3, e2);
        }), N(t3._chartsViews, function(t4) {
          t4.dispose(n3, e2);
        }), t3._zr.dispose(), t3._dom = t3._model = t3._chartsMap = t3._componentsMap = t3._chartsViews = t3._componentsViews = t3._scheduler = t3._api = t3._zr = t3._throttledZrFlush = t3._theme = t3._coordSysMgr = t3._messageCenter = null, delete cm[t3.id];
      }
    }, n2.prototype.resize = function(t3) {
      if (!this[Tv])
        if (this._disposed)
          im(this.id);
        else {
          this._zr.resize(t3);
          var e2 = this._model;
          if (this._loadingFX && this._loadingFX.resize(), e2) {
            var n3 = e2.resetOption("media"), i2 = t3 && t3.silent;
            this[Cv] && (null == i2 && (i2 = this[Cv].silent), n3 = true, this[Cv] = null), this[Tv] = true;
            try {
              n3 && Rv(this), zv.update.call(this, { type: "resize", animation: D({ duration: 0 }, t3 && t3.animation) });
            } catch (t4) {
              throw this[Tv] = false, t4;
            }
            this[Tv] = false, Gv.call(this, i2), Wv.call(this, i2);
          }
        }
    }, n2.prototype.showLoading = function(t3, e2) {
      if (this._disposed)
        im(this.id);
      else if (j(t3) && (e2 = t3, t3 = ""), t3 = t3 || "default", this.hideLoading(), hm[t3]) {
        var n3 = hm[t3](this._api, e2), i2 = this._zr;
        this._loadingFX = n3, i2.add(n3);
      }
    }, n2.prototype.hideLoading = function() {
      this._disposed ? im(this.id) : (this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null);
    }, n2.prototype.makeActionFromEvent = function(t3) {
      var e2 = D({}, t3);
      return e2.type = om[t3.type], e2;
    }, n2.prototype.dispatchAction = function(t3, e2) {
      if (this._disposed)
        im(this.id);
      else if (j(e2) || (e2 = { silent: !!e2 }), rm[t3.type] && this._model)
        if (this[Tv])
          this._pendingActions.push(t3);
        else {
          var n3 = e2.silent;
          Fv.call(this, t3, n3);
          var r2 = e2.flush;
          r2 ? this._zr.flush() : false !== r2 && i.browser.weChat && this._throttledZrFlush(), Gv.call(this, n3), Wv.call(this, n3);
        }
    }, n2.prototype.updateLabelLayout = function() {
      mv.trigger("series:layoutlabels", this._model, this._api, { updatedSeries: [] });
    }, n2.prototype.appendData = function(t3) {
      if (this._disposed)
        im(this.id);
      else {
        var e2 = t3.seriesIndex, n3 = this.getModel().getSeriesByIndex(e2);
        n3.appendData(t3), this._scheduler.unfinished = true, this.getZr().wakeUp();
      }
    }, n2.internalField = function() {
      function t3(t4) {
        t4.clearColorPalette(), t4.eachSeries(function(t5) {
          t5.clearColorPalette();
        });
      }
      function n3(t4) {
        for (var e2 = [], n4 = t4.currentStates, i2 = 0; i2 < n4.length; i2++) {
          var r3 = n4[i2];
          "emphasis" !== r3 && "blur" !== r3 && "select" !== r3 && e2.push(r3);
        }
        t4.selected && t4.states.select && e2.push("select"), 2 === t4.hoverState && t4.states.emphasis ? e2.push("emphasis") : 1 === t4.hoverState && t4.states.blur && e2.push("blur"), t4.useStates(e2);
      }
      function r2(t4, e2) {
        if (!t4.preventAutoZ) {
          var n4 = t4.get("z") || 0, i2 = t4.get("zlevel") || 0;
          e2.eachRendered(function(t5) {
            return o2(t5, n4, i2, -1 / 0), true;
          });
        }
      }
      function o2(t4, e2, n4, i2) {
        var r3 = t4.getTextContent(), a3 = t4.getTextGuideLine();
        if (t4.isGroup)
          for (var s3 = t4.childrenRef(), l2 = 0; l2 < s3.length; l2++)
            i2 = Math.max(o2(s3[l2], e2, n4, i2), i2);
        else
          t4.z = e2, t4.zlevel = n4, i2 = Math.max(t4.z2, i2);
        if (r3 && (r3.z = e2, r3.zlevel = n4, isFinite(i2) && (r3.z2 = i2 + 2)), a3) {
          var u2 = t4.textGuideLineConfig;
          a3.z = e2, a3.zlevel = n4, isFinite(i2) && (a3.z2 = i2 + (u2 && u2.showAbove ? 1 : -1));
        }
        return i2;
      }
      function a2(t4, e2) {
        e2.eachRendered(function(t5) {
          if (!gh(t5)) {
            var e3 = t5.getTextContent(), n4 = t5.getTextGuideLine();
            t5.stateTransition && (t5.stateTransition = null), e3 && e3.stateTransition && (e3.stateTransition = null), n4 && n4.stateTransition && (n4.stateTransition = null), t5.hasState() ? (t5.prevStates = t5.currentStates, t5.clearStates()) : t5.prevStates && (t5.prevStates = null);
          }
        });
      }
      function s2(t4, e2) {
        var i2 = t4.getModel("stateAnimation"), r3 = t4.isAnimationEnabled(), o3 = i2.get("duration"), a3 = o3 > 0 ? { duration: o3, delay: i2.get("delay"), easing: i2.get("easing") } : null;
        e2.eachRendered(function(t5) {
          if (t5.states && t5.states.emphasis) {
            if (gh(t5))
              return;
            if (t5 instanceof Ms && function(t6) {
              var e4 = nl(t6);
              e4.normalFill = t6.style.fill, e4.normalStroke = t6.style.stroke;
              var n4 = t6.states.select || {};
              e4.selectFill = n4.style && n4.style.fill || null, e4.selectStroke = n4.style && n4.style.stroke || null;
            }(t5), t5.__dirty) {
              var e3 = t5.prevStates;
              e3 && t5.useStates(e3);
            }
            if (r3) {
              t5.stateTransition = a3;
              var i3 = t5.getTextContent(), o4 = t5.getTextGuideLine();
              i3 && (i3.stateTransition = a3), o4 && (o4.stateTransition = a3);
            }
            t5.__dirty && n3(t5);
          }
        });
      }
      Rv = function(t4) {
        var e2 = t4._scheduler;
        e2.restorePipelines(t4._model), e2.prepareStageTasks(), Nv(t4, true), Nv(t4, false), e2.plan();
      }, Nv = function(t4, e2) {
        for (var n4 = t4._model, i2 = t4._scheduler, r3 = e2 ? t4._componentsViews : t4._chartsViews, o3 = e2 ? t4._componentsMap : t4._chartsMap, a3 = t4._zr, s3 = t4._api, l2 = 0; l2 < r3.length; l2++)
          r3[l2].__alive = false;
        function u2(t5) {
          var l3 = t5.__requireNewView;
          t5.__requireNewView = false;
          var u3 = "_ec_" + t5.id + "_" + t5.type, h3 = !l3 && o3[u3];
          if (!h3) {
            var c2 = Yo(t5.type), p2 = e2 ? Ig.getClass(c2.main, c2.sub) : Ag.getClass(c2.sub);
            (h3 = new p2()).init(n4, s3), o3[u3] = h3, r3.push(h3), a3.add(h3.group);
          }
          t5.__viewId = h3.__id = u3, h3.__alive = true, h3.__model = t5, h3.group.__ecComponentInfo = { mainType: t5.mainType, index: t5.componentIndex }, !e2 && i2.prepareView(h3, t5, n4, s3);
        }
        e2 ? n4.eachComponent(function(t5, e3) {
          "series" !== t5 && u2(e3);
        }) : n4.eachSeries(u2);
        for (l2 = 0; l2 < r3.length; ) {
          var h2 = r3[l2];
          h2.__alive ? l2++ : (!e2 && h2.renderTask.dispose(), a3.remove(h2.group), h2.dispose(n4, s3), r3.splice(l2, 1), o3[h2.__id] === h2 && delete o3[h2.__id], h2.__id = h2.group.__ecComponentInfo = null);
        }
      }, Ev = function(t4, e2, n4, i2, r3) {
        var o3 = t4._model;
        if (o3.setUpdatePayload(n4), i2) {
          var a3 = {};
          a3[i2 + "Id"] = n4[i2 + "Id"], a3[i2 + "Index"] = n4[i2 + "Index"], a3[i2 + "Name"] = n4[i2 + "Name"];
          var s3 = { mainType: i2, query: a3 };
          r3 && (s3.subType = r3);
          var l2, u2 = n4.excludeSeriesId;
          null != u2 && (l2 = gt(), N(_o(u2), function(t5) {
            var e3 = Do(t5, null);
            null != e3 && l2.set(e3, true);
          })), o3 && o3.eachComponent(s3, function(e3) {
            if (!(l2 && null != l2.get(e3.id)))
              if ($l(n4))
                if (e3 instanceof vg)
                  n4.type !== sl || n4.notBlur || e3.get(["emphasis", "disabled"]) || function(t5, e4, n5) {
                    var i4 = t5.seriesIndex, r5 = t5.getData(e4.dataType);
                    if (r5) {
                      var o5 = Lo(r5, e4);
                      o5 = (H(o5) ? o5[0] : o5) || 0;
                      var a4 = r5.getItemGraphicEl(o5);
                      if (!a4)
                        for (var s4 = r5.count(), l3 = 0; !a4 && l3 < s4; )
                          a4 = r5.getItemGraphicEl(l3++);
                      if (a4) {
                        var u3 = Js(a4);
                        zl(i4, u3.focus, u3.blurScope, n5);
                      } else {
                        var h3 = t5.get(["emphasis", "focus"]), c2 = t5.get(["emphasis", "blurScope"]);
                        null != h3 && zl(i4, h3, c2, n5);
                      }
                    }
                  }(e3, n4, t4._api);
                else {
                  var i3 = Bl(e3.mainType, e3.componentIndex, n4.name, t4._api), r4 = i3.focusSelf, o4 = i3.dispatchers;
                  n4.type === sl && r4 && !n4.notBlur && Vl(e3.mainType, e3.componentIndex, t4._api), o4 && N(o4, function(t5) {
                    n4.type === sl ? Al(t5) : kl(t5);
                  });
                }
              else
                Kl(n4) && e3 instanceof vg && (!function(t5, e4, n5) {
                  if (Kl(e4)) {
                    var i4 = e4.dataType, r5 = Lo(t5.getData(i4), e4);
                    H(r5) || (r5 = [r5]), t5[e4.type === cl ? "toggleSelect" : e4.type === ul ? "select" : "unselect"](r5, i4);
                  }
                }(e3, n4, t4._api), Fl(e3), Kv(t4));
          }, t4), o3 && o3.eachComponent(s3, function(e3) {
            l2 && null != l2.get(e3.id) || h2(t4["series" === i2 ? "_chartsMap" : "_componentsMap"][e3.__viewId]);
          }, t4);
        } else
          N([].concat(t4._componentsViews).concat(t4._chartsViews), h2);
        function h2(i3) {
          i3 && i3.__alive && i3[e2] && i3[e2](i3.__model, o3, t4._api, n4);
        }
      }, zv = { prepareAndUpdate: function(t4) {
        Rv(this), zv.update.call(this, t4, { optionChanged: null != t4.newOption });
      }, update: function(e2, n4) {
        var i2 = this._model, r3 = this._api, o3 = this._zr, a3 = this._coordSysMgr, s3 = this._scheduler;
        if (i2) {
          i2.setUpdatePayload(e2), s3.restoreData(i2, e2), s3.performSeriesTasks(i2), a3.create(i2, r3), s3.performDataProcessorTasks(i2, e2), Bv(this, i2), a3.update(i2, r3), t3(i2), s3.performVisualTasks(i2, e2), Xv(this, i2, r3, e2, n4);
          var l2 = i2.get("backgroundColor") || "transparent", u2 = i2.get("darkMode");
          o3.setBackgroundColor(l2), null != u2 && "auto" !== u2 && o3.setDarkMode(u2), mv.trigger("afterupdate", i2, r3);
        }
      }, updateTransform: function(e2) {
        var n4 = this, i2 = this._model, r3 = this._api;
        if (i2) {
          i2.setUpdatePayload(e2);
          var o3 = [];
          i2.eachComponent(function(t4, a4) {
            if ("series" !== t4) {
              var s3 = n4.getViewOfComponentModel(a4);
              if (s3 && s3.__alive)
                if (s3.updateTransform) {
                  var l2 = s3.updateTransform(a4, i2, r3, e2);
                  l2 && l2.update && o3.push(s3);
                } else
                  o3.push(s3);
            }
          });
          var a3 = gt();
          i2.eachSeries(function(t4) {
            var o4 = n4._chartsMap[t4.__viewId];
            if (o4.updateTransform) {
              var s3 = o4.updateTransform(t4, i2, r3, e2);
              s3 && s3.update && a3.set(t4.uid, 1);
            } else
              a3.set(t4.uid, 1);
          }), t3(i2), this._scheduler.performVisualTasks(i2, e2, { setDirty: true, dirtyMap: a3 }), Zv(this, i2, r3, e2, {}, a3), mv.trigger("afterupdate", i2, r3);
        }
      }, updateView: function(e2) {
        var n4 = this._model;
        n4 && (n4.setUpdatePayload(e2), Ag.markUpdateMethod(e2, "updateView"), t3(n4), this._scheduler.performVisualTasks(n4, e2, { setDirty: true }), Xv(this, n4, this._api, e2, {}), mv.trigger("afterupdate", n4, this._api));
      }, updateVisual: function(e2) {
        var n4 = this, i2 = this._model;
        i2 && (i2.setUpdatePayload(e2), i2.eachSeries(function(t4) {
          t4.getData().clearAllVisual();
        }), Ag.markUpdateMethod(e2, "updateVisual"), t3(i2), this._scheduler.performVisualTasks(i2, e2, { visualType: "visual", setDirty: true }), i2.eachComponent(function(t4, r3) {
          if ("series" !== t4) {
            var o3 = n4.getViewOfComponentModel(r3);
            o3 && o3.__alive && o3.updateVisual(r3, i2, n4._api, e2);
          }
        }), i2.eachSeries(function(t4) {
          n4._chartsMap[t4.__viewId].updateVisual(t4, i2, n4._api, e2);
        }), mv.trigger("afterupdate", i2, this._api));
      }, updateLayout: function(t4) {
        zv.update.call(this, t4);
      } }, Vv = function(t4, e2, n4, i2) {
        if (t4._disposed)
          im(t4.id);
        else {
          for (var r3, o3 = t4._model, a3 = t4._coordSysMgr.getCoordinateSystems(), s3 = Ro(o3, n4), l2 = 0; l2 < a3.length; l2++) {
            var u2 = a3[l2];
            if (u2[e2] && null != (r3 = u2[e2](o3, s3, i2)))
              return r3;
          }
        }
      }, Bv = function(t4, e2) {
        var n4 = t4._chartsMap, i2 = t4._scheduler;
        e2.eachSeries(function(t5) {
          i2.updateStreamModes(t5, n4[t5.__viewId]);
        });
      }, Fv = function(t4, e2) {
        var n4 = this, i2 = this.getModel(), r3 = t4.type, o3 = t4.escapeConnect, a3 = rm[r3], s3 = a3.actionInfo, l2 = (s3.update || "update").split(":"), u2 = l2.pop(), h2 = null != l2[0] && Yo(l2[0]);
        this[Tv] = true;
        var c2 = [t4], p2 = false;
        t4.batch && (p2 = true, c2 = E(t4.batch, function(e3) {
          return (e3 = A(D({}, e3), t4)).batch = null, e3;
        }));
        var d2, f2 = [], g2 = Kl(t4), y2 = $l(t4);
        if (y2 && El(this._api), N(c2, function(e3) {
          if ((d2 = (d2 = a3.action(e3, n4._model, n4._api)) || D({}, e3)).type = s3.event || d2.type, f2.push(d2), y2) {
            var i3 = No(t4), r4 = i3.queryOptionMap, o4 = i3.mainTypeSpecified ? r4.keys()[0] : "series";
            Ev(n4, u2, e3, o4), Kv(n4);
          } else
            g2 ? (Ev(n4, u2, e3, "series"), Kv(n4)) : h2 && Ev(n4, u2, e3, h2.main, h2.sub);
        }), "none" !== u2 && !y2 && !g2 && !h2)
          try {
            this[Cv] ? (Rv(this), zv.update.call(this, t4), this[Cv] = null) : zv[u2].call(this, t4);
          } catch (t5) {
            throw this[Tv] = false, t5;
          }
        if (d2 = p2 ? { type: s3.event || r3, escapeConnect: o3, batch: f2 } : f2[0], this[Tv] = false, !e2) {
          var v2 = this._messageCenter;
          if (v2.trigger(d2.type, d2), g2) {
            var m2 = { type: "selectchanged", escapeConnect: o3, selected: Gl(i2), isFromClick: t4.isFromClick || false, fromAction: t4.type, fromActionPayload: t4 };
            v2.trigger(m2.type, m2);
          }
        }
      }, Gv = function(t4) {
        for (var e2 = this._pendingActions; e2.length; ) {
          var n4 = e2.shift();
          Fv.call(this, n4, t4);
        }
      }, Wv = function(t4) {
        !t4 && this.trigger("updated");
      }, Hv = function(t4, e2) {
        t4.on("rendered", function(n4) {
          e2.trigger("rendered", n4), !t4.animation.isFinished() || e2[Cv] || e2._scheduler.unfinished || e2._pendingActions.length || e2.trigger("finished");
        });
      }, Yv = function(t4, e2) {
        t4.on("mouseover", function(t5) {
          var n4 = Ay(t5.target, ql);
          n4 && (!function(t6, e3, n5) {
            var i2 = Js(t6), r3 = Bl(i2.componentMainType, i2.componentIndex, i2.componentHighDownName, n5), o3 = r3.dispatchers, a3 = r3.focusSelf;
            o3 ? (a3 && Vl(i2.componentMainType, i2.componentIndex, n5), N(o3, function(t7) {
              return Cl(t7, e3);
            })) : (zl(i2.seriesIndex, i2.focus, i2.blurScope, n5), "self" === i2.focus && Vl(i2.componentMainType, i2.componentIndex, n5), Cl(t6, e3));
          }(n4, t5, e2._api), Kv(e2));
        }).on("mouseout", function(t5) {
          var n4 = Ay(t5.target, ql);
          n4 && (!function(t6, e3, n5) {
            El(n5);
            var i2 = Js(t6), r3 = Bl(i2.componentMainType, i2.componentIndex, i2.componentHighDownName, n5).dispatchers;
            r3 ? N(r3, function(t7) {
              return Dl(t7, e3);
            }) : Dl(t6, e3);
          }(n4, t5, e2._api), Kv(e2));
        }).on("click", function(t5) {
          var n4 = Ay(t5.target, function(t6) {
            return null != Js(t6).dataIndex;
          }, true);
          if (n4) {
            var i2 = n4.selected ? "unselect" : "select", r3 = Js(n4);
            e2._api.dispatchAction({ type: i2, dataType: r3.dataType, dataIndexInside: r3.dataIndex, seriesIndex: r3.seriesIndex, isFromClick: true });
          }
        });
      }, Xv = function(t4, e2, n4, i2, r3) {
        !function(t5) {
          var e3 = [], n5 = [], i3 = false;
          if (t5.eachComponent(function(t6, r5) {
            var o4 = r5.get("zlevel") || 0, a4 = r5.get("z") || 0, s3 = r5.getZLevelKey();
            i3 = i3 || !!s3, ("series" === t6 ? n5 : e3).push({ zlevel: o4, z: a4, idx: r5.componentIndex, type: t6, key: s3 });
          }), i3) {
            var r4, o3, a3 = e3.concat(n5);
            Je(a3, function(t6, e4) {
              return t6.zlevel === e4.zlevel ? t6.z - e4.z : t6.zlevel - e4.zlevel;
            }), N(a3, function(e4) {
              var n6 = t5.getComponent(e4.type, e4.idx), i4 = e4.zlevel, a4 = e4.key;
              null != r4 && (i4 = Math.max(r4, i4)), a4 ? (i4 === r4 && a4 !== o3 && i4++, o3 = a4) : o3 && (i4 === r4 && i4++, o3 = ""), r4 = i4, n6.setZLevel(i4);
            });
          }
        }(e2), Uv(t4, e2, n4, i2, r3), N(t4._chartsViews, function(t5) {
          t5.__alive = false;
        }), Zv(t4, e2, n4, i2, r3), N(t4._chartsViews, function(t5) {
          t5.__alive || t5.remove(e2, n4);
        });
      }, Uv = function(t4, e2, n4, i2, o3, l2) {
        N(l2 || t4._componentsViews, function(t5) {
          var o4 = t5.__model;
          a2(o4, t5), t5.render(o4, e2, n4, i2), r2(o4, t5), s2(o4, t5);
        });
      }, Zv = function(t4, e2, n4, o3, l2, u2) {
        var h2 = t4._scheduler;
        l2 = D(l2 || {}, { updatedSeries: e2.getSeries() }), mv.trigger("series:beforeupdate", e2, n4, l2);
        var c2 = false;
        e2.eachSeries(function(e3) {
          var n5 = t4._chartsMap[e3.__viewId];
          n5.__alive = true;
          var i2 = n5.renderTask;
          h2.updatePayload(i2, o3), a2(e3, n5), u2 && u2.get(e3.uid) && i2.dirty(), i2.perform(h2.getPerformArgs(i2)) && (c2 = true), n5.group.silent = !!e3.get("silent"), function(t5, e4) {
            var n6 = t5.get("blendMode") || null;
            e4.eachRendered(function(t6) {
              t6.isGroup || (t6.style.blend = n6);
            });
          }(e3, n5), Fl(e3);
        }), h2.unfinished = c2 || h2.unfinished, mv.trigger("series:layoutlabels", e2, n4, l2), mv.trigger("series:transition", e2, n4, l2), e2.eachSeries(function(e3) {
          var n5 = t4._chartsMap[e3.__viewId];
          r2(e3, n5), s2(e3, n5);
        }), function(t5, e3) {
          var n5 = t5._zr, r3 = n5.storage, o4 = 0;
          r3.traverse(function(t6) {
            t6.isGroup || o4++;
          }), o4 > e3.get("hoverLayerThreshold") && !i.node && !i.worker && e3.eachSeries(function(e4) {
            if (!e4.preventUsingHoverLayer) {
              var n6 = t5._chartsMap[e4.__viewId];
              n6.__alive && n6.eachRendered(function(t6) {
                t6.states.emphasis && (t6.states.emphasis.hoverLayer = true);
              });
            }
          });
        }(t4, e2), mv.trigger("series:afterupdate", e2, n4, l2);
      }, Kv = function(t4) {
        t4[Dv] = true, t4.getZr().wakeUp();
      }, $v = function(t4) {
        t4[Dv] && (t4.getZr().storage.traverse(function(t5) {
          gh(t5) || n3(t5);
        }), t4[Dv] = false);
      }, jv = function(t4) {
        return new (function(n4) {
          function i2() {
            return null !== n4 && n4.apply(this, arguments) || this;
          }
          return e(i2, n4), i2.prototype.getCoordinateSystems = function() {
            return t4._coordSysMgr.getCoordinateSystems();
          }, i2.prototype.getComponentByElement = function(e2) {
            for (; e2; ) {
              var n5 = e2.__ecComponentInfo;
              if (null != n5)
                return t4._model.getComponent(n5.mainType, n5.index);
              e2 = e2.parent;
            }
          }, i2.prototype.enterEmphasis = function(e2, n5) {
            Al(e2, n5), Kv(t4);
          }, i2.prototype.leaveEmphasis = function(e2, n5) {
            kl(e2, n5), Kv(t4);
          }, i2.prototype.enterBlur = function(e2) {
            Ll(e2), Kv(t4);
          }, i2.prototype.leaveBlur = function(e2) {
            Pl(e2), Kv(t4);
          }, i2.prototype.enterSelect = function(e2) {
            Ol(e2), Kv(t4);
          }, i2.prototype.leaveSelect = function(e2) {
            Rl(e2), Kv(t4);
          }, i2.prototype.getModel = function() {
            return t4.getModel();
          }, i2.prototype.getViewOfComponentModel = function(e2) {
            return t4.getViewOfComponentModel(e2);
          }, i2.prototype.getViewOfSeriesModel = function(e2) {
            return t4.getViewOfSeriesModel(e2);
          }, i2;
        }(yd))(t4);
      }, qv = function(t4) {
        function e2(t5, e3) {
          for (var n4 = 0; n4 < t5.length; n4++) {
            t5[n4][kv] = e3;
          }
        }
        N(om, function(n4, i2) {
          t4._messageCenter.on(i2, function(n5) {
            if (pm[t4.group] && 0 !== t4[kv]) {
              if (n5 && n5.escapeConnect)
                return;
              var i3 = t4.makeActionFromEvent(n5), r3 = [];
              N(cm, function(e3) {
                e3 !== t4 && e3.group === t4.group && r3.push(e3);
              }), e2(r3, 0), N(r3, function(t5) {
                1 !== t5[kv] && t5.dispatchAction(i3);
              }), e2(r3, 2);
            }
          });
        });
      };
    }(), n2;
  }(Zt);
  var em = tm.prototype;
  em.on = Lv("on"), em.off = Lv("off"), em.one = function(t2, e2, n2) {
    var i2 = this;
    this.on.call(this, t2, function n3() {
      for (var r2 = [], o2 = 0; o2 < arguments.length; o2++)
        r2[o2] = arguments[o2];
      e2 && e2.apply && e2.apply(this, r2), i2.off(t2, n3);
    }, n2);
  };
  var nm = ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"];
  function im(t2) {
  }
  var rm = {};
  var om = {};
  var am = [];
  var sm = [];
  var lm = [];
  var um = {};
  var hm = {};
  var cm = {};
  var pm = {};
  var dm = +/* @__PURE__ */ new Date() - 0;
  var fm = +/* @__PURE__ */ new Date() - 0;
  var gm = "_echarts_instance_";
  function ym(t2, e2, n2) {
    var i2 = !(n2 && n2.ssr);
    if (i2) {
      var r2 = bm(t2);
      if (r2)
        return r2;
    }
    var o2 = new tm(t2, e2, n2);
    return o2.id = "ec_" + dm++, cm[o2.id] = o2, i2 && Bo(t2, gm, o2.id), qv(o2), mv.trigger("afterinit", o2), o2;
  }
  function vm(t2) {
    if (H(t2)) {
      var e2 = t2;
      t2 = null, N(e2, function(e3) {
        null != e3.group && (t2 = e3.group);
      }), t2 = t2 || "g_" + fm++, N(e2, function(e3) {
        e3.group = t2;
      });
    }
    return pm[t2] = true, t2;
  }
  function mm(t2) {
    pm[t2] = false;
  }
  var xm = mm;
  function _m(t2) {
    X(t2) ? t2 = cm[t2] : t2 instanceof tm || (t2 = bm(t2)), t2 instanceof tm && !t2.isDisposed() && t2.dispose();
  }
  function bm(t2) {
    return cm[function(t3, e2) {
      return t3.getAttribute ? t3.getAttribute(e2) : t3[e2];
    }(t2, gm)];
  }
  function wm(t2) {
    return cm[t2];
  }
  function Sm(t2, e2) {
    um[t2] = e2;
  }
  function Mm(t2) {
    L(sm, t2) < 0 && sm.push(t2);
  }
  function Im(t2, e2) {
    Nm(am, t2, e2, 2e3);
  }
  function Tm(t2) {
    Dm("afterinit", t2);
  }
  function Cm(t2) {
    Dm("afterupdate", t2);
  }
  function Dm(t2, e2) {
    mv.on(t2, e2);
  }
  function Am(t2, e2, n2) {
    Y(e2) && (n2 = e2, e2 = "");
    var i2 = j(t2) ? t2.type : [t2, t2 = { event: e2 }][0];
    t2.event = (t2.event || i2).toLowerCase(), e2 = t2.event, om[e2] || (st(Av.test(i2) && Av.test(e2)), rm[i2] || (rm[i2] = { action: n2, actionInfo: t2 }), om[e2] = i2);
  }
  function km(t2, e2) {
    md.register(t2, e2);
  }
  function Lm(t2) {
    var e2 = md.get(t2);
    if (e2)
      return e2.getDimensionsInfo ? e2.getDimensionsInfo() : e2.dimensions.slice();
  }
  function Pm(t2, e2) {
    Nm(lm, t2, e2, 1e3, "layout");
  }
  function Om(t2, e2) {
    Nm(lm, t2, e2, 3e3, "visual");
  }
  var Rm = [];
  function Nm(t2, e2, n2, i2, r2) {
    if ((Y(e2) || j(e2)) && (n2 = e2, e2 = i2), !(L(Rm, n2) >= 0)) {
      Rm.push(n2);
      var o2 = $g.wrapStageHandler(n2, r2);
      o2.__prio = e2, o2.__raw = n2, t2.push(o2);
    }
  }
  function Em(t2, e2) {
    hm[t2] = e2;
  }
  function zm(t2) {
    h({ createCanvas: t2 });
  }
  function Vm(t2, e2, n2) {
    var i2 = _v("registerMap");
    i2 && i2(t2, e2, n2);
  }
  function Bm(t2) {
    var e2 = _v("getMap");
    return e2 && e2(t2);
  }
  var Fm = function(t2) {
    var e2 = (t2 = I(t2)).type, n2 = "";
    e2 || yo(n2);
    var i2 = e2.split(":");
    2 !== i2.length && yo(n2);
    var r2 = false;
    "echarts" === i2[0] && (e2 = i2[1], r2 = true), t2.__isBuiltIn = r2, Rf.set(e2, t2);
  };
  Om(Sv, Ug), Om(Mv, jg), Om(Mv, qg), Om(Sv, wy), Om(Mv, Sy), Om(7e3, function(t2, e2) {
    t2.eachRawSeries(function(n2) {
      if (!t2.isSeriesFiltered(n2)) {
        var i2 = n2.getData();
        i2.hasItemVisual() && i2.each(function(t3) {
          var n3 = i2.getItemVisual(t3, "decal");
          n3 && (i2.ensureUniqueItemVisual(t3, "style").decal = fv(n3, e2));
        });
        var r2 = i2.getVisual("decal");
        if (r2)
          i2.getVisual("style").decal = fv(r2, e2);
      }
    });
  }), Mm(Gd), Im(900, function(t2) {
    var e2 = gt();
    t2.eachSeries(function(t3) {
      var n2 = t3.get("stack");
      if (n2) {
        var i2 = e2.get(n2) || e2.set(n2, []), r2 = t3.getData(), o2 = { stackResultDimension: r2.getCalculationInfo("stackResultDimension"), stackedOverDimension: r2.getCalculationInfo("stackedOverDimension"), stackedDimension: r2.getCalculationInfo("stackedDimension"), stackedByDimension: r2.getCalculationInfo("stackedByDimension"), isStackedByIndex: r2.getCalculationInfo("isStackedByIndex"), data: r2, seriesModel: t3 };
        if (!o2.stackedDimension || !o2.isStackedByIndex && !o2.stackedByDimension)
          return;
        i2.length && r2.setCalculationInfo("stackedOnSeries", i2[i2.length - 1].seriesModel), i2.push(o2);
      }
    }), e2.each(Wd);
  }), Em("default", function(t2, e2) {
    A(e2 = e2 || {}, { text: "loading", textColor: "#000", fontSize: 12, fontWeight: "normal", fontStyle: "normal", fontFamily: "sans-serif", maskColor: "rgba(255, 255, 255, 0.8)", showSpinner: true, color: "#5470c6", spinnerRadius: 10, lineWidth: 5, zlevel: 0 });
    var n2 = new Er(), i2 = new Es({ style: { fill: e2.maskColor }, zlevel: e2.zlevel, z: 1e4 });
    n2.add(i2);
    var r2, o2 = new Bs({ style: { text: e2.text, fill: e2.textColor, fontSize: e2.fontSize, fontWeight: e2.fontWeight, fontStyle: e2.fontStyle, fontFamily: e2.fontFamily }, zlevel: e2.zlevel, z: 10001 }), a2 = new Es({ style: { fill: "none" }, textContent: o2, textConfig: { position: "right", distance: 10 }, zlevel: e2.zlevel, z: 10001 });
    return n2.add(a2), e2.showSpinner && ((r2 = new Ju({ shape: { startAngle: -Kg / 2, endAngle: -Kg / 2 + 0.1, r: e2.spinnerRadius }, style: { stroke: e2.color, lineCap: "round", lineWidth: e2.lineWidth }, zlevel: e2.zlevel, z: 10001 })).animateShape(true).when(1e3, { endAngle: 3 * Kg / 2 }).start("circularInOut"), r2.animateShape(true).when(1e3, { startAngle: 3 * Kg / 2 }).delay(300).start("circularInOut"), n2.add(r2)), n2.resize = function() {
      var n3 = o2.getBoundingRect().width, s2 = e2.showSpinner ? e2.spinnerRadius : 0, l2 = (t2.getWidth() - 2 * s2 - (e2.showSpinner && n3 ? 10 : 0) - n3) / 2 - (e2.showSpinner && n3 ? 0 : 5 + n3 / 2) + (e2.showSpinner ? 0 : n3 / 2) + (n3 ? 0 : s2), u2 = t2.getHeight() / 2;
      e2.showSpinner && r2.setShape({ cx: l2, cy: u2 }), a2.setShape({ x: l2 - s2, y: u2 - s2, width: 2 * s2, height: 2 * s2 }), i2.setShape({ x: 0, y: 0, width: t2.getWidth(), height: t2.getHeight() });
    }, n2.resize(), n2;
  }), Am({ type: sl, event: sl, update: sl }, _t), Am({ type: ll, event: ll, update: ll }, _t), Am({ type: ul, event: ul, update: ul }, _t), Am({ type: hl, event: hl, update: hl }, _t), Am({ type: cl, event: cl, update: cl }, _t), Sm("light", dy), Sm("dark", my);
  var Gm = {};
  var Wm = [];
  var Hm = { registerPreprocessor: Mm, registerProcessor: Im, registerPostInit: Tm, registerPostUpdate: Cm, registerUpdateLifecycle: Dm, registerAction: Am, registerCoordinateSystem: km, registerLayout: Pm, registerVisual: Om, registerTransform: Fm, registerLoading: Em, registerMap: Vm, registerImpl: function(t2, e2) {
    xv[t2] = e2;
  }, PRIORITY: Iv, ComponentModel: Op, ComponentView: Ig, SeriesModel: vg, ChartView: Ag, registerComponentModel: function(t2) {
    Op.registerClass(t2);
  }, registerComponentView: function(t2) {
    Ig.registerClass(t2);
  }, registerSeriesModel: function(t2) {
    vg.registerClass(t2);
  }, registerChartView: function(t2) {
    Ag.registerClass(t2);
  }, registerSubTypeDefaulter: function(t2, e2) {
    Op.registerSubTypeDefaulter(t2, e2);
  }, registerPainter: function(t2, e2) {
    Gr(t2, e2);
  } };
  function Ym(t2) {
    H(t2) ? N(t2, function(t3) {
      Ym(t3);
    }) : L(Wm, t2) >= 0 || (Wm.push(t2), Y(t2) && (t2 = { install: t2 }), t2.install(Hm));
  }
  function Xm(t2) {
    return null == t2 ? 0 : t2.length || 1;
  }
  function Um(t2) {
    return t2;
  }
  var Zm = function() {
    function t2(t3, e2, n2, i2, r2, o2) {
      this._old = t3, this._new = e2, this._oldKeyGetter = n2 || Um, this._newKeyGetter = i2 || Um, this.context = r2, this._diffModeMultiple = "multiple" === o2;
    }
    return t2.prototype.add = function(t3) {
      return this._add = t3, this;
    }, t2.prototype.update = function(t3) {
      return this._update = t3, this;
    }, t2.prototype.updateManyToOne = function(t3) {
      return this._updateManyToOne = t3, this;
    }, t2.prototype.updateOneToMany = function(t3) {
      return this._updateOneToMany = t3, this;
    }, t2.prototype.updateManyToMany = function(t3) {
      return this._updateManyToMany = t3, this;
    }, t2.prototype.remove = function(t3) {
      return this._remove = t3, this;
    }, t2.prototype.execute = function() {
      this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
    }, t2.prototype._executeOneToOne = function() {
      var t3 = this._old, e2 = this._new, n2 = {}, i2 = new Array(t3.length), r2 = new Array(e2.length);
      this._initIndexMap(t3, null, i2, "_oldKeyGetter"), this._initIndexMap(e2, n2, r2, "_newKeyGetter");
      for (var o2 = 0; o2 < t3.length; o2++) {
        var a2 = i2[o2], s2 = n2[a2], l2 = Xm(s2);
        if (l2 > 1) {
          var u2 = s2.shift();
          1 === s2.length && (n2[a2] = s2[0]), this._update && this._update(u2, o2);
        } else
          1 === l2 ? (n2[a2] = null, this._update && this._update(s2, o2)) : this._remove && this._remove(o2);
      }
      this._performRestAdd(r2, n2);
    }, t2.prototype._executeMultiple = function() {
      var t3 = this._old, e2 = this._new, n2 = {}, i2 = {}, r2 = [], o2 = [];
      this._initIndexMap(t3, n2, r2, "_oldKeyGetter"), this._initIndexMap(e2, i2, o2, "_newKeyGetter");
      for (var a2 = 0; a2 < r2.length; a2++) {
        var s2 = r2[a2], l2 = n2[s2], u2 = i2[s2], h2 = Xm(l2), c2 = Xm(u2);
        if (h2 > 1 && 1 === c2)
          this._updateManyToOne && this._updateManyToOne(u2, l2), i2[s2] = null;
        else if (1 === h2 && c2 > 1)
          this._updateOneToMany && this._updateOneToMany(u2, l2), i2[s2] = null;
        else if (1 === h2 && 1 === c2)
          this._update && this._update(u2, l2), i2[s2] = null;
        else if (h2 > 1 && c2 > 1)
          this._updateManyToMany && this._updateManyToMany(u2, l2), i2[s2] = null;
        else if (h2 > 1)
          for (var p2 = 0; p2 < h2; p2++)
            this._remove && this._remove(l2[p2]);
        else
          this._remove && this._remove(l2);
      }
      this._performRestAdd(o2, i2);
    }, t2.prototype._performRestAdd = function(t3, e2) {
      for (var n2 = 0; n2 < t3.length; n2++) {
        var i2 = t3[n2], r2 = e2[i2], o2 = Xm(r2);
        if (o2 > 1)
          for (var a2 = 0; a2 < o2; a2++)
            this._add && this._add(r2[a2]);
        else
          1 === o2 && this._add && this._add(r2);
        e2[i2] = null;
      }
    }, t2.prototype._initIndexMap = function(t3, e2, n2, i2) {
      for (var r2 = this._diffModeMultiple, o2 = 0; o2 < t3.length; o2++) {
        var a2 = "_ec_" + this[i2](t3[o2], o2);
        if (r2 || (n2[o2] = a2), e2) {
          var s2 = e2[a2], l2 = Xm(s2);
          0 === l2 ? (e2[a2] = o2, r2 && n2.push(a2)) : 1 === l2 ? e2[a2] = [s2, o2] : s2.push(o2);
        }
      }
    }, t2;
  }();
  var jm = function() {
    function t2(t3, e2) {
      this._encode = t3, this._schema = e2;
    }
    return t2.prototype.get = function() {
      return { fullDimensions: this._getFullDimensionNames(), encode: this._encode };
    }, t2.prototype._getFullDimensionNames = function() {
      return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
    }, t2;
  }();
  function qm(t2, e2) {
    return t2.hasOwnProperty(e2) || (t2[e2] = []), t2[e2];
  }
  function Km(t2) {
    return "category" === t2 ? "ordinal" : "time" === t2 ? "time" : "float";
  }
  var $m = function(t2) {
    this.otherDims = {}, null != t2 && D(this, t2);
  };
  var Jm = Po();
  var Qm = { float: "f", int: "i", ordinal: "o", number: "n", time: "t" };
  var tx = function() {
    function t2(t3) {
      this.dimensions = t3.dimensions, this._dimOmitted = t3.dimensionOmitted, this.source = t3.source, this._fullDimCount = t3.fullDimensionCount, this._updateDimOmitted(t3.dimensionOmitted);
    }
    return t2.prototype.isDimensionOmitted = function() {
      return this._dimOmitted;
    }, t2.prototype._updateDimOmitted = function(t3) {
      this._dimOmitted = t3, t3 && (this._dimNameMap || (this._dimNameMap = ix(this.source)));
    }, t2.prototype.getSourceDimensionIndex = function(t3) {
      return it(this._dimNameMap.get(t3), -1);
    }, t2.prototype.getSourceDimension = function(t3) {
      var e2 = this.source.dimensionsDefine;
      if (e2)
        return e2[t3];
    }, t2.prototype.makeStoreSchema = function() {
      for (var t3 = this._fullDimCount, e2 = ef(this.source), n2 = !rx(t3), i2 = "", r2 = [], o2 = 0, a2 = 0; o2 < t3; o2++) {
        var s2 = void 0, l2 = void 0, u2 = void 0, h2 = this.dimensions[a2];
        if (h2 && h2.storeDimIndex === o2)
          s2 = e2 ? h2.name : null, l2 = h2.type, u2 = h2.ordinalMeta, a2++;
        else {
          var c2 = this.getSourceDimension(o2);
          c2 && (s2 = e2 ? c2.name : null, l2 = c2.type);
        }
        r2.push({ property: s2, type: l2, ordinalMeta: u2 }), !e2 || null == s2 || h2 && h2.isCalculationCoord || (i2 += n2 ? s2.replace(/\`/g, "`1").replace(/\$/g, "`2") : s2), i2 += "$", i2 += Qm[l2] || "f", u2 && (i2 += u2.uid), i2 += "$";
      }
      var p2 = this.source;
      return { dimensions: r2, hash: [p2.seriesLayoutBy, p2.startIndex, i2].join("$$") };
    }, t2.prototype.makeOutputDimensionNames = function() {
      for (var t3 = [], e2 = 0, n2 = 0; e2 < this._fullDimCount; e2++) {
        var i2 = void 0, r2 = this.dimensions[n2];
        if (r2 && r2.storeDimIndex === e2)
          r2.isCalculationCoord || (i2 = r2.name), n2++;
        else {
          var o2 = this.getSourceDimension(e2);
          o2 && (i2 = o2.name);
        }
        t3.push(i2);
      }
      return t3;
    }, t2.prototype.appendCalculationDimension = function(t3) {
      this.dimensions.push(t3), t3.isCalculationCoord = true, this._fullDimCount++, this._updateDimOmitted(true);
    }, t2;
  }();
  function ex(t2) {
    return t2 instanceof tx;
  }
  function nx(t2) {
    for (var e2 = gt(), n2 = 0; n2 < (t2 || []).length; n2++) {
      var i2 = t2[n2], r2 = j(i2) ? i2.name : i2;
      null != r2 && null == e2.get(r2) && e2.set(r2, n2);
    }
    return e2;
  }
  function ix(t2) {
    var e2 = Jm(t2);
    return e2.dimNameMap || (e2.dimNameMap = nx(t2.dimensionsDefine));
  }
  function rx(t2) {
    return t2 > 30;
  }
  var ox;
  var ax;
  var sx;
  var lx;
  var ux;
  var hx;
  var cx;
  var px = j;
  var dx = E;
  var fx = "undefined" == typeof Int32Array ? Array : Int32Array;
  var gx = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"];
  var yx = ["_approximateExtent"];
  var vx = function() {
    function t2(t3, e2) {
      var n2;
      this.type = "list", this._dimOmitted = false, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = false, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"], this.DOWNSAMPLE_METHODS = ["downSample", "lttbDownSample"];
      var i2 = false;
      ex(t3) ? (n2 = t3.dimensions, this._dimOmitted = t3.isDimensionOmitted(), this._schema = t3) : (i2 = true, n2 = t3), n2 = n2 || ["x", "y"];
      for (var r2 = {}, o2 = [], a2 = {}, s2 = false, l2 = {}, u2 = 0; u2 < n2.length; u2++) {
        var h2 = n2[u2], c2 = X(h2) ? new $m({ name: h2 }) : h2 instanceof $m ? h2 : new $m(h2), p2 = c2.name;
        c2.type = c2.type || "float", c2.coordDim || (c2.coordDim = p2, c2.coordDimIndex = 0);
        var d2 = c2.otherDims = c2.otherDims || {};
        o2.push(p2), r2[p2] = c2, null != l2[p2] && (s2 = true), c2.createInvertedIndices && (a2[p2] = []), 0 === d2.itemName && (this._nameDimIdx = u2), 0 === d2.itemId && (this._idDimIdx = u2), i2 && (c2.storeDimIndex = u2);
      }
      if (this.dimensions = o2, this._dimInfos = r2, this._initGetDimensionInfo(s2), this.hostModel = e2, this._invertedIndicesMap = a2, this._dimOmitted) {
        var f2 = this._dimIdxToName = gt();
        N(o2, function(t4) {
          f2.set(r2[t4].storeDimIndex, t4);
        });
      }
    }
    return t2.prototype.getDimension = function(t3) {
      var e2 = this._recognizeDimIndex(t3);
      if (null == e2)
        return t3;
      if (e2 = t3, !this._dimOmitted)
        return this.dimensions[e2];
      var n2 = this._dimIdxToName.get(e2);
      if (null != n2)
        return n2;
      var i2 = this._schema.getSourceDimension(e2);
      return i2 ? i2.name : void 0;
    }, t2.prototype.getDimensionIndex = function(t3) {
      var e2 = this._recognizeDimIndex(t3);
      if (null != e2)
        return e2;
      if (null == t3)
        return -1;
      var n2 = this._getDimInfo(t3);
      return n2 ? n2.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(t3) : -1;
    }, t2.prototype._recognizeDimIndex = function(t3) {
      if (Z(t3) || null != t3 && !isNaN(t3) && !this._getDimInfo(t3) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(t3) < 0))
        return +t3;
    }, t2.prototype._getStoreDimIndex = function(t3) {
      var e2 = this.getDimensionIndex(t3);
      return e2;
    }, t2.prototype.getDimensionInfo = function(t3) {
      return this._getDimInfo(this.getDimension(t3));
    }, t2.prototype._initGetDimensionInfo = function(t3) {
      var e2 = this._dimInfos;
      this._getDimInfo = t3 ? function(t4) {
        return e2.hasOwnProperty(t4) ? e2[t4] : void 0;
      } : function(t4) {
        return e2[t4];
      };
    }, t2.prototype.getDimensionsOnCoord = function() {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, t2.prototype.mapDimension = function(t3, e2) {
      var n2 = this._dimSummary;
      if (null == e2)
        return n2.encodeFirstDimNotExtra[t3];
      var i2 = n2.encode[t3];
      return i2 ? i2[e2] : null;
    }, t2.prototype.mapDimensionsAll = function(t3) {
      return (this._dimSummary.encode[t3] || []).slice();
    }, t2.prototype.getStore = function() {
      return this._store;
    }, t2.prototype.initData = function(t3, e2, n2) {
      var i2, r2 = this;
      if (t3 instanceof Uf && (i2 = t3), !i2) {
        var o2 = this.dimensions, a2 = qd(t3) || R(t3) ? new nf(t3, o2.length) : t3;
        i2 = new Uf();
        var s2 = dx(o2, function(t4) {
          return { type: r2._dimInfos[t4].type, property: t4 };
        });
        i2.initData(a2, s2, n2);
      }
      this._store = i2, this._nameList = (e2 || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i2.count()), this._dimSummary = function(t4, e3) {
        var n3 = {}, i3 = n3.encode = {}, r3 = gt(), o3 = [], a3 = [], s3 = {};
        N(t4.dimensions, function(e4) {
          var n4, l3 = t4.getDimensionInfo(e4), u3 = l3.coordDim;
          if (u3) {
            var h3 = l3.coordDimIndex;
            qm(i3, u3)[h3] = e4, l3.isExtraCoord || (r3.set(u3, 1), "ordinal" !== (n4 = l3.type) && "time" !== n4 && (o3[0] = e4), qm(s3, u3)[h3] = t4.getDimensionIndex(l3.name)), l3.defaultTooltip && a3.push(e4);
          }
          zp.each(function(t5, e5) {
            var n5 = qm(i3, e5), r4 = l3.otherDims[e5];
            null != r4 && false !== r4 && (n5[r4] = l3.name);
          });
        });
        var l2 = [], u2 = {};
        r3.each(function(t5, e4) {
          var n4 = i3[e4];
          u2[e4] = n4[0], l2 = l2.concat(n4);
        }), n3.dataDimsOnCoord = l2, n3.dataDimIndicesOnCoord = E(l2, function(e4) {
          return t4.getDimensionInfo(e4).storeDimIndex;
        }), n3.encodeFirstDimNotExtra = u2;
        var h2 = i3.label;
        h2 && h2.length && (o3 = h2.slice());
        var c2 = i3.tooltip;
        return c2 && c2.length ? a3 = c2.slice() : a3.length || (a3 = o3.slice()), i3.defaultedLabel = o3, i3.defaultedTooltip = a3, n3.userOutput = new jm(s3, e3), n3;
      }(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, t2.prototype.appendData = function(t3) {
      var e2 = this._store.appendData(t3);
      this._doInit(e2[0], e2[1]);
    }, t2.prototype.appendValues = function(t3, e2) {
      var n2 = this._store.appendValues(t3, e2.length), i2 = n2.start, r2 = n2.end, o2 = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), e2)
        for (var a2 = i2; a2 < r2; a2++) {
          var s2 = a2 - i2;
          this._nameList[a2] = e2[s2], o2 && cx(this, a2);
        }
    }, t2.prototype._updateOrdinalMeta = function() {
      for (var t3 = this._store, e2 = this.dimensions, n2 = 0; n2 < e2.length; n2++) {
        var i2 = this._dimInfos[e2[n2]];
        i2.ordinalMeta && t3.collectOrdinalMeta(i2.storeDimIndex, i2.ordinalMeta);
      }
    }, t2.prototype._shouldMakeIdFromName = function() {
      var t3 = this._store.getProvider();
      return null == this._idDimIdx && t3.getSource().sourceFormat !== Wp && !t3.fillStorage;
    }, t2.prototype._doInit = function(t3, e2) {
      if (!(t3 >= e2)) {
        var n2 = this._store.getProvider();
        this._updateOrdinalMeta();
        var i2 = this._nameList, r2 = this._idList;
        if (n2.getSource().sourceFormat === Vp && !n2.pure)
          for (var o2 = [], a2 = t3; a2 < e2; a2++) {
            var s2 = n2.getItem(a2, o2);
            if (!this.hasItemOption && Mo(s2) && (this.hasItemOption = true), s2) {
              var l2 = s2.name;
              null == i2[a2] && null != l2 && (i2[a2] = Do(l2, null));
              var u2 = s2.id;
              null == r2[a2] && null != u2 && (r2[a2] = Do(u2, null));
            }
          }
        if (this._shouldMakeIdFromName())
          for (a2 = t3; a2 < e2; a2++)
            cx(this, a2);
        ox(this);
      }
    }, t2.prototype.getApproximateExtent = function(t3) {
      return this._approximateExtent[t3] || this._store.getDataExtent(this._getStoreDimIndex(t3));
    }, t2.prototype.setApproximateExtent = function(t3, e2) {
      e2 = this.getDimension(e2), this._approximateExtent[e2] = t3.slice();
    }, t2.prototype.getCalculationInfo = function(t3) {
      return this._calculationInfo[t3];
    }, t2.prototype.setCalculationInfo = function(t3, e2) {
      px(t3) ? D(this._calculationInfo, t3) : this._calculationInfo[t3] = e2;
    }, t2.prototype.getName = function(t3) {
      var e2 = this.getRawIndex(t3), n2 = this._nameList[e2];
      return null == n2 && null != this._nameDimIdx && (n2 = sx(this, this._nameDimIdx, e2)), null == n2 && (n2 = ""), n2;
    }, t2.prototype._getCategory = function(t3, e2) {
      var n2 = this._store.get(t3, e2), i2 = this._store.getOrdinalMeta(t3);
      return i2 ? i2.categories[n2] : n2;
    }, t2.prototype.getId = function(t3) {
      return ax(this, this.getRawIndex(t3));
    }, t2.prototype.count = function() {
      return this._store.count();
    }, t2.prototype.get = function(t3, e2) {
      var n2 = this._store, i2 = this._dimInfos[t3];
      if (i2)
        return n2.get(i2.storeDimIndex, e2);
    }, t2.prototype.getByRawIndex = function(t3, e2) {
      var n2 = this._store, i2 = this._dimInfos[t3];
      if (i2)
        return n2.getByRawIndex(i2.storeDimIndex, e2);
    }, t2.prototype.getIndices = function() {
      return this._store.getIndices();
    }, t2.prototype.getDataExtent = function(t3) {
      return this._store.getDataExtent(this._getStoreDimIndex(t3));
    }, t2.prototype.getSum = function(t3) {
      return this._store.getSum(this._getStoreDimIndex(t3));
    }, t2.prototype.getMedian = function(t3) {
      return this._store.getMedian(this._getStoreDimIndex(t3));
    }, t2.prototype.getValues = function(t3, e2) {
      var n2 = this, i2 = this._store;
      return H(t3) ? i2.getValues(dx(t3, function(t4) {
        return n2._getStoreDimIndex(t4);
      }), e2) : i2.getValues(t3);
    }, t2.prototype.hasValue = function(t3) {
      for (var e2 = this._dimSummary.dataDimIndicesOnCoord, n2 = 0, i2 = e2.length; n2 < i2; n2++)
        if (isNaN(this._store.get(e2[n2], t3)))
          return false;
      return true;
    }, t2.prototype.indexOfName = function(t3) {
      for (var e2 = 0, n2 = this._store.count(); e2 < n2; e2++)
        if (this.getName(e2) === t3)
          return e2;
      return -1;
    }, t2.prototype.getRawIndex = function(t3) {
      return this._store.getRawIndex(t3);
    }, t2.prototype.indexOfRawIndex = function(t3) {
      return this._store.indexOfRawIndex(t3);
    }, t2.prototype.rawIndexOf = function(t3, e2) {
      var n2 = t3 && this._invertedIndicesMap[t3];
      var i2 = n2[e2];
      return null == i2 || isNaN(i2) ? -1 : i2;
    }, t2.prototype.indicesOfNearest = function(t3, e2, n2) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(t3), e2, n2);
    }, t2.prototype.each = function(t3, e2, n2) {
      Y(t3) && (n2 = e2, e2 = t3, t3 = []);
      var i2 = n2 || this, r2 = dx(lx(t3), this._getStoreDimIndex, this);
      this._store.each(r2, i2 ? G(e2, i2) : e2);
    }, t2.prototype.filterSelf = function(t3, e2, n2) {
      Y(t3) && (n2 = e2, e2 = t3, t3 = []);
      var i2 = n2 || this, r2 = dx(lx(t3), this._getStoreDimIndex, this);
      return this._store = this._store.filter(r2, i2 ? G(e2, i2) : e2), this;
    }, t2.prototype.selectRange = function(t3) {
      var e2 = this, n2 = {};
      return N(F(t3), function(i2) {
        var r2 = e2._getStoreDimIndex(i2);
        n2[r2] = t3[i2];
      }), this._store = this._store.selectRange(n2), this;
    }, t2.prototype.mapArray = function(t3, e2, n2) {
      Y(t3) && (n2 = e2, e2 = t3, t3 = []), n2 = n2 || this;
      var i2 = [];
      return this.each(t3, function() {
        i2.push(e2 && e2.apply(this, arguments));
      }, n2), i2;
    }, t2.prototype.map = function(t3, e2, n2, i2) {
      var r2 = n2 || i2 || this, o2 = dx(lx(t3), this._getStoreDimIndex, this), a2 = hx(this);
      return a2._store = this._store.map(o2, r2 ? G(e2, r2) : e2), a2;
    }, t2.prototype.modify = function(t3, e2, n2, i2) {
      var r2 = n2 || i2 || this;
      var o2 = dx(lx(t3), this._getStoreDimIndex, this);
      this._store.modify(o2, r2 ? G(e2, r2) : e2);
    }, t2.prototype.downSample = function(t3, e2, n2, i2) {
      var r2 = hx(this);
      return r2._store = this._store.downSample(this._getStoreDimIndex(t3), e2, n2, i2), r2;
    }, t2.prototype.lttbDownSample = function(t3, e2) {
      var n2 = hx(this);
      return n2._store = this._store.lttbDownSample(this._getStoreDimIndex(t3), e2), n2;
    }, t2.prototype.getRawDataItem = function(t3) {
      return this._store.getRawDataItem(t3);
    }, t2.prototype.getItemModel = function(t3) {
      var e2 = this.hostModel, n2 = this.getRawDataItem(t3);
      return new Sc(n2, e2, e2 && e2.ecModel);
    }, t2.prototype.diff = function(t3) {
      var e2 = this;
      return new Zm(t3 ? t3.getStore().getIndices() : [], this.getStore().getIndices(), function(e3) {
        return ax(t3, e3);
      }, function(t4) {
        return ax(e2, t4);
      });
    }, t2.prototype.getVisual = function(t3) {
      var e2 = this._visual;
      return e2 && e2[t3];
    }, t2.prototype.setVisual = function(t3, e2) {
      this._visual = this._visual || {}, px(t3) ? D(this._visual, t3) : this._visual[t3] = e2;
    }, t2.prototype.getItemVisual = function(t3, e2) {
      var n2 = this._itemVisuals[t3], i2 = n2 && n2[e2];
      return null == i2 ? this.getVisual(e2) : i2;
    }, t2.prototype.hasItemVisual = function() {
      return this._itemVisuals.length > 0;
    }, t2.prototype.ensureUniqueItemVisual = function(t3, e2) {
      var n2 = this._itemVisuals, i2 = n2[t3];
      i2 || (i2 = n2[t3] = {});
      var r2 = i2[e2];
      return null == r2 && (H(r2 = this.getVisual(e2)) ? r2 = r2.slice() : px(r2) && (r2 = D({}, r2)), i2[e2] = r2), r2;
    }, t2.prototype.setItemVisual = function(t3, e2, n2) {
      var i2 = this._itemVisuals[t3] || {};
      this._itemVisuals[t3] = i2, px(e2) ? D(i2, e2) : i2[e2] = n2;
    }, t2.prototype.clearAllVisual = function() {
      this._visual = {}, this._itemVisuals = [];
    }, t2.prototype.setLayout = function(t3, e2) {
      px(t3) ? D(this._layout, t3) : this._layout[t3] = e2;
    }, t2.prototype.getLayout = function(t3) {
      return this._layout[t3];
    }, t2.prototype.getItemLayout = function(t3) {
      return this._itemLayouts[t3];
    }, t2.prototype.setItemLayout = function(t3, e2, n2) {
      this._itemLayouts[t3] = n2 ? D(this._itemLayouts[t3] || {}, e2) : e2;
    }, t2.prototype.clearItemLayouts = function() {
      this._itemLayouts.length = 0;
    }, t2.prototype.setItemGraphicEl = function(t3, e2) {
      var n2 = this.hostModel && this.hostModel.seriesIndex;
      Qs(n2, this.dataType, t3, e2), this._graphicEls[t3] = e2;
    }, t2.prototype.getItemGraphicEl = function(t3) {
      return this._graphicEls[t3];
    }, t2.prototype.eachItemGraphicEl = function(t3, e2) {
      N(this._graphicEls, function(n2, i2) {
        n2 && t3 && t3.call(e2, n2, i2);
      });
    }, t2.prototype.cloneShallow = function(e2) {
      return e2 || (e2 = new t2(this._schema ? this._schema : dx(this.dimensions, this._getDimInfo, this), this.hostModel)), ux(e2, this), e2._store = this._store, e2;
    }, t2.prototype.wrapMethod = function(t3, e2) {
      var n2 = this[t3];
      Y(n2) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(t3), this[t3] = function() {
        var t4 = n2.apply(this, arguments);
        return e2.apply(this, [t4].concat(ot(arguments)));
      });
    }, t2.internalField = (ox = function(t3) {
      var e2 = t3._invertedIndicesMap;
      N(e2, function(n2, i2) {
        var r2 = t3._dimInfos[i2], o2 = r2.ordinalMeta, a2 = t3._store;
        if (o2) {
          n2 = e2[i2] = new fx(o2.categories.length);
          for (var s2 = 0; s2 < n2.length; s2++)
            n2[s2] = -1;
          for (s2 = 0; s2 < a2.count(); s2++)
            n2[a2.get(r2.storeDimIndex, s2)] = s2;
        }
      });
    }, sx = function(t3, e2, n2) {
      return Do(t3._getCategory(e2, n2), null);
    }, ax = function(t3, e2) {
      var n2 = t3._idList[e2];
      return null == n2 && null != t3._idDimIdx && (n2 = sx(t3, t3._idDimIdx, e2)), null == n2 && (n2 = "e\0\0" + e2), n2;
    }, lx = function(t3) {
      return H(t3) || (t3 = null != t3 ? [t3] : []), t3;
    }, hx = function(e2) {
      var n2 = new t2(e2._schema ? e2._schema : dx(e2.dimensions, e2._getDimInfo, e2), e2.hostModel);
      return ux(n2, e2), n2;
    }, ux = function(t3, e2) {
      N(gx.concat(e2.__wrappedMethods || []), function(n2) {
        e2.hasOwnProperty(n2) && (t3[n2] = e2[n2]);
      }), t3.__wrappedMethods = e2.__wrappedMethods, N(yx, function(n2) {
        t3[n2] = I(e2[n2]);
      }), t3._calculationInfo = D({}, e2._calculationInfo);
    }, void (cx = function(t3, e2) {
      var n2 = t3._nameList, i2 = t3._idList, r2 = t3._nameDimIdx, o2 = t3._idDimIdx, a2 = n2[e2], s2 = i2[e2];
      if (null == a2 && null != r2 && (n2[e2] = a2 = sx(t3, r2, e2)), null == s2 && null != o2 && (i2[e2] = s2 = sx(t3, o2, e2)), null == s2 && null != a2) {
        var l2 = t3._nameRepeatCount, u2 = l2[a2] = (l2[a2] || 0) + 1;
        s2 = a2, u2 > 1 && (s2 += "__ec__" + u2), i2[e2] = s2;
      }
    })), t2;
  }();
  function mx(t2, e2) {
    qd(t2) || (t2 = $d(t2));
    var n2 = (e2 = e2 || {}).coordDimensions || [], i2 = e2.dimensionsDefine || t2.dimensionsDefine || [], r2 = gt(), o2 = [], a2 = function(t3, e3, n3, i3) {
      var r3 = Math.max(t3.dimensionsDetectedCount || 1, e3.length, n3.length, i3 || 0);
      return N(e3, function(t4) {
        var e4;
        j(t4) && (e4 = t4.dimsDef) && (r3 = Math.max(r3, e4.length));
      }), r3;
    }(t2, n2, i2, e2.dimensionsCount), s2 = e2.canOmitUnusedDimensions && rx(a2), l2 = i2 === t2.dimensionsDefine, u2 = l2 ? ix(t2) : nx(i2), h2 = e2.encodeDefine;
    !h2 && e2.encodeDefaulter && (h2 = e2.encodeDefaulter(t2, a2));
    for (var c2 = gt(h2), p2 = new Gf(a2), d2 = 0; d2 < p2.length; d2++)
      p2[d2] = -1;
    function f2(t3) {
      var e3 = p2[t3];
      if (e3 < 0) {
        var n3 = i2[t3], r3 = j(n3) ? n3 : { name: n3 }, a3 = new $m(), s3 = r3.name;
        null != s3 && null != u2.get(s3) && (a3.name = a3.displayName = s3), null != r3.type && (a3.type = r3.type), null != r3.displayName && (a3.displayName = r3.displayName);
        var l3 = o2.length;
        return p2[t3] = l3, a3.storeDimIndex = t3, o2.push(a3), a3;
      }
      return o2[e3];
    }
    if (!s2)
      for (d2 = 0; d2 < a2; d2++)
        f2(d2);
    c2.each(function(t3, e3) {
      var n3 = _o(t3).slice();
      if (1 === n3.length && !X(n3[0]) && n3[0] < 0)
        c2.set(e3, false);
      else {
        var i3 = c2.set(e3, []);
        N(n3, function(t4, n4) {
          var r3 = X(t4) ? u2.get(t4) : t4;
          null != r3 && r3 < a2 && (i3[n4] = r3, y2(f2(r3), e3, n4));
        });
      }
    });
    var g2 = 0;
    function y2(t3, e3, n3) {
      null != zp.get(e3) ? t3.otherDims[e3] = n3 : (t3.coordDim = e3, t3.coordDimIndex = n3, r2.set(e3, true));
    }
    N(n2, function(t3) {
      var e3, n3, i3, r3;
      if (X(t3))
        e3 = t3, r3 = {};
      else {
        e3 = (r3 = t3).name;
        var o3 = r3.ordinalMeta;
        r3.ordinalMeta = null, (r3 = D({}, r3)).ordinalMeta = o3, n3 = r3.dimsDef, i3 = r3.otherDims, r3.name = r3.coordDim = r3.coordDimIndex = r3.dimsDef = r3.otherDims = null;
      }
      var s3 = c2.get(e3);
      if (false !== s3) {
        if (!(s3 = _o(s3)).length)
          for (var u3 = 0; u3 < (n3 && n3.length || 1); u3++) {
            for (; g2 < a2 && null != f2(g2).coordDim; )
              g2++;
            g2 < a2 && s3.push(g2++);
          }
        N(s3, function(t4, o4) {
          var a3 = f2(t4);
          if (l2 && null != r3.type && (a3.type = r3.type), y2(A(a3, r3), e3, o4), null == a3.name && n3) {
            var s4 = n3[o4];
            !j(s4) && (s4 = { name: s4 }), a3.name = a3.displayName = s4.name, a3.defaultTooltip = s4.defaultTooltip;
          }
          i3 && A(a3.otherDims, i3);
        });
      }
    });
    var v2 = e2.generateCoord, m2 = e2.generateCoordCount, x2 = null != m2;
    m2 = v2 ? m2 || 1 : 0;
    var _2 = v2 || "value";
    function b2(t3) {
      null == t3.name && (t3.name = t3.coordDim);
    }
    if (s2)
      N(o2, function(t3) {
        b2(t3);
      }), o2.sort(function(t3, e3) {
        return t3.storeDimIndex - e3.storeDimIndex;
      });
    else
      for (var w2 = 0; w2 < a2; w2++) {
        var S2 = f2(w2);
        null == S2.coordDim && (S2.coordDim = xx(_2, r2, x2), S2.coordDimIndex = 0, (!v2 || m2 <= 0) && (S2.isExtraCoord = true), m2--), b2(S2), null != S2.type || Qp(t2, w2) !== Up && (!S2.isExtraCoord || null == S2.otherDims.itemName && null == S2.otherDims.seriesName) || (S2.type = "ordinal");
      }
    return function(t3) {
      for (var e3 = gt(), n3 = 0; n3 < t3.length; n3++) {
        var i3 = t3[n3], r3 = i3.name, o3 = e3.get(r3) || 0;
        o3 > 0 && (i3.name = r3 + (o3 - 1)), o3++, e3.set(r3, o3);
      }
    }(o2), new tx({ source: t2, dimensions: o2, fullDimensionCount: a2, dimensionOmitted: s2 });
  }
  function xx(t2, e2, n2) {
    if (n2 || e2.hasKey(t2)) {
      for (var i2 = 0; e2.hasKey(t2 + i2); )
        i2++;
      t2 += i2;
    }
    return e2.set(t2, true), t2;
  }
  var _x = function(t2) {
    this.coordSysDims = [], this.axisMap = gt(), this.categoryAxisMap = gt(), this.coordSysName = t2;
  };
  var bx = { cartesian2d: function(t2, e2, n2, i2) {
    var r2 = t2.getReferringComponents("xAxis", Eo).models[0], o2 = t2.getReferringComponents("yAxis", Eo).models[0];
    e2.coordSysDims = ["x", "y"], n2.set("x", r2), n2.set("y", o2), Sx(r2) && (i2.set("x", r2), e2.firstCategoryDimIndex = 0), Sx(o2) && (i2.set("y", o2), null == e2.firstCategoryDimIndex && (e2.firstCategoryDimIndex = 1));
  }, singleAxis: function(t2, e2, n2, i2) {
    var r2 = t2.getReferringComponents("singleAxis", Eo).models[0];
    e2.coordSysDims = ["single"], n2.set("single", r2), Sx(r2) && (i2.set("single", r2), e2.firstCategoryDimIndex = 0);
  }, polar: function(t2, e2, n2, i2) {
    var r2 = t2.getReferringComponents("polar", Eo).models[0], o2 = r2.findAxisModel("radiusAxis"), a2 = r2.findAxisModel("angleAxis");
    e2.coordSysDims = ["radius", "angle"], n2.set("radius", o2), n2.set("angle", a2), Sx(o2) && (i2.set("radius", o2), e2.firstCategoryDimIndex = 0), Sx(a2) && (i2.set("angle", a2), null == e2.firstCategoryDimIndex && (e2.firstCategoryDimIndex = 1));
  }, geo: function(t2, e2, n2, i2) {
    e2.coordSysDims = ["lng", "lat"];
  }, parallel: function(t2, e2, n2, i2) {
    var r2 = t2.ecModel, o2 = r2.getComponent("parallel", t2.get("parallelIndex")), a2 = e2.coordSysDims = o2.dimensions.slice();
    N(o2.parallelAxisIndex, function(t3, o3) {
      var s2 = r2.getComponent("parallelAxis", t3), l2 = a2[o3];
      n2.set(l2, s2), Sx(s2) && (i2.set(l2, s2), null == e2.firstCategoryDimIndex && (e2.firstCategoryDimIndex = o3));
    });
  } };
  function Sx(t2) {
    return "category" === t2.get("type");
  }
  function Mx(t2, e2, n2) {
    var i2, r2, o2, a2 = (n2 = n2 || {}).byIndex, s2 = n2.stackedCoordDimension;
    !function(t3) {
      return !ex(t3.schema);
    }(e2) ? (r2 = e2.schema, i2 = r2.dimensions, o2 = e2.store) : i2 = e2;
    var l2, u2, h2, c2, p2 = !(!t2 || !t2.get("stack"));
    if (N(i2, function(t3, e3) {
      X(t3) && (i2[e3] = t3 = { name: t3 }), p2 && !t3.isExtraCoord && (a2 || l2 || !t3.ordinalMeta || (l2 = t3), u2 || "ordinal" === t3.type || "time" === t3.type || s2 && s2 !== t3.coordDim || (u2 = t3));
    }), !u2 || a2 || l2 || (a2 = true), u2) {
      h2 = "__\0ecstackresult_" + t2.id, c2 = "__\0ecstackedover_" + t2.id, l2 && (l2.createInvertedIndices = true);
      var d2 = u2.coordDim, f2 = u2.type, g2 = 0;
      N(i2, function(t3) {
        t3.coordDim === d2 && g2++;
      });
      var y2 = { name: h2, coordDim: d2, coordDimIndex: g2, type: f2, isExtraCoord: true, isCalculationCoord: true, storeDimIndex: i2.length }, v2 = { name: c2, coordDim: c2, coordDimIndex: g2 + 1, type: f2, isExtraCoord: true, isCalculationCoord: true, storeDimIndex: i2.length + 1 };
      r2 ? (o2 && (y2.storeDimIndex = o2.ensureCalculationDimension(c2, f2), v2.storeDimIndex = o2.ensureCalculationDimension(h2, f2)), r2.appendCalculationDimension(y2), r2.appendCalculationDimension(v2)) : (i2.push(y2), i2.push(v2));
    }
    return { stackedDimension: u2 && u2.name, stackedByDimension: l2 && l2.name, isStackedByIndex: a2, stackedOverDimension: c2, stackResultDimension: h2 };
  }
  function Ix(t2, e2) {
    return !!e2 && e2 === t2.getCalculationInfo("stackedDimension");
  }
  function Tx(t2, e2) {
    return Ix(t2, e2) ? t2.getCalculationInfo("stackResultDimension") : e2;
  }
  function Cx(t2, e2, n2) {
    n2 = n2 || {};
    var i2, r2 = e2.getSourceManager(), o2 = false;
    t2 ? (o2 = true, i2 = $d(t2)) : o2 = (i2 = r2.getSource()).sourceFormat === Vp;
    var a2 = function(t3) {
      var e3 = t3.get("coordinateSystem"), n3 = new _x(e3), i3 = bx[e3];
      if (i3)
        return i3(t3, n3, n3.axisMap, n3.categoryAxisMap), n3;
    }(e2), s2 = function(t3, e3) {
      var n3, i3 = t3.get("coordinateSystem"), r3 = md.get(i3);
      return e3 && e3.coordSysDims && (n3 = E(e3.coordSysDims, function(t4) {
        var n4 = { name: t4 }, i4 = e3.axisMap.get(t4);
        if (i4) {
          var r4 = i4.get("type");
          n4.type = Km(r4);
        }
        return n4;
      })), n3 || (n3 = r3 && (r3.getDimensionsInfo ? r3.getDimensionsInfo() : r3.dimensions.slice()) || ["x", "y"]), n3;
    }(e2, a2), l2 = n2.useEncodeDefaulter, u2 = Y(l2) ? l2 : l2 ? W(Kp, s2, e2) : null, h2 = mx(i2, { coordDimensions: s2, generateCoord: n2.generateCoord, encodeDefine: e2.getEncode(), encodeDefaulter: u2, canOmitUnusedDimensions: !o2 }), c2 = function(t3, e3, n3) {
      var i3, r3;
      return n3 && N(t3, function(t4, o3) {
        var a3 = t4.coordDim, s3 = n3.categoryAxisMap.get(a3);
        s3 && (null == i3 && (i3 = o3), t4.ordinalMeta = s3.getOrdinalMeta(), e3 && (t4.createInvertedIndices = true)), null != t4.otherDims.itemName && (r3 = true);
      }), r3 || null == i3 || (t3[i3].otherDims.itemName = 0), i3;
    }(h2.dimensions, n2.createInvertedIndices, a2), p2 = o2 ? null : r2.getSharedDataStore(h2), d2 = Mx(e2, { schema: h2, store: p2 }), f2 = new vx(h2, e2);
    f2.setCalculationInfo(d2);
    var g2 = null != c2 && function(t3) {
      if (t3.sourceFormat === Vp) {
        var e3 = function(t4) {
          var e4 = 0;
          for (; e4 < t4.length && null == t4[e4]; )
            e4++;
          return t4[e4];
        }(t3.data || []);
        return !H(So(e3));
      }
    }(i2) ? function(t3, e3, n3, i3) {
      return i3 === c2 ? n3 : this.defaultDimValueGetter(t3, e3, n3, i3);
    } : null;
    return f2.hasItemOption = false, f2.initData(o2 ? i2 : p2, null, g2), f2;
  }
  var Dx = function() {
    function t2(t3) {
      this._setting = t3 || {}, this._extent = [1 / 0, -1 / 0];
    }
    return t2.prototype.getSetting = function(t3) {
      return this._setting[t3];
    }, t2.prototype.unionExtent = function(t3) {
      var e2 = this._extent;
      t3[0] < e2[0] && (e2[0] = t3[0]), t3[1] > e2[1] && (e2[1] = t3[1]);
    }, t2.prototype.unionExtentFromData = function(t3, e2) {
      this.unionExtent(t3.getApproximateExtent(e2));
    }, t2.prototype.getExtent = function() {
      return this._extent.slice();
    }, t2.prototype.setExtent = function(t3, e2) {
      var n2 = this._extent;
      isNaN(t3) || (n2[0] = t3), isNaN(e2) || (n2[1] = e2);
    }, t2.prototype.isInExtentRange = function(t3) {
      return this._extent[0] <= t3 && this._extent[1] >= t3;
    }, t2.prototype.isBlank = function() {
      return this._isBlank;
    }, t2.prototype.setBlank = function(t3) {
      this._isBlank = t3;
    }, t2;
  }();
  Ko(Dx);
  var Ax = 0;
  var kx = function() {
    function t2(t3) {
      this.categories = t3.categories || [], this._needCollect = t3.needCollect, this._deduplication = t3.deduplication, this.uid = ++Ax;
    }
    return t2.createByAxisModel = function(e2) {
      var n2 = e2.option, i2 = n2.data, r2 = i2 && E(i2, Lx);
      return new t2({ categories: r2, needCollect: !r2, deduplication: false !== n2.dedplication });
    }, t2.prototype.getOrdinal = function(t3) {
      return this._getOrCreateMap().get(t3);
    }, t2.prototype.parseAndCollect = function(t3) {
      var e2, n2 = this._needCollect;
      if (!X(t3) && !n2)
        return t3;
      if (n2 && !this._deduplication)
        return e2 = this.categories.length, this.categories[e2] = t3, e2;
      var i2 = this._getOrCreateMap();
      return null == (e2 = i2.get(t3)) && (n2 ? (e2 = this.categories.length, this.categories[e2] = t3, i2.set(t3, e2)) : e2 = NaN), e2;
    }, t2.prototype._getOrCreateMap = function() {
      return this._map || (this._map = gt(this.categories));
    }, t2;
  }();
  function Lx(t2) {
    return j(t2) && null != t2.value ? t2.value : t2 + "";
  }
  function Px(t2) {
    return "interval" === t2.type || "log" === t2.type;
  }
  function Ox(t2, e2, n2, i2) {
    var r2 = {}, o2 = t2[1] - t2[0], a2 = r2.interval = ao(o2 / e2, true);
    null != n2 && a2 < n2 && (a2 = r2.interval = n2), null != i2 && a2 > i2 && (a2 = r2.interval = i2);
    var s2 = r2.intervalPrecision = Nx(a2);
    return function(t3, e3) {
      !isFinite(t3[0]) && (t3[0] = e3[0]), !isFinite(t3[1]) && (t3[1] = e3[1]), Ex(t3, 0, e3), Ex(t3, 1, e3), t3[0] > t3[1] && (t3[0] = t3[1]);
    }(r2.niceTickExtent = [Ur(Math.ceil(t2[0] / a2) * a2, s2), Ur(Math.floor(t2[1] / a2) * a2, s2)], t2), r2;
  }
  function Rx(t2) {
    var e2 = Math.pow(10, oo(t2)), n2 = t2 / e2;
    return n2 ? 2 === n2 ? n2 = 3 : 3 === n2 ? n2 = 5 : n2 *= 2 : n2 = 1, Ur(n2 * e2);
  }
  function Nx(t2) {
    return jr(t2) + 2;
  }
  function Ex(t2, e2, n2) {
    t2[e2] = Math.max(Math.min(t2[e2], n2[1]), n2[0]);
  }
  function zx(t2, e2) {
    return t2 >= e2[0] && t2 <= e2[1];
  }
  function Vx(t2, e2) {
    return e2[1] === e2[0] ? 0.5 : (t2 - e2[0]) / (e2[1] - e2[0]);
  }
  function Bx(t2, e2) {
    return t2 * (e2[1] - e2[0]) + e2[0];
  }
  var Fx = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      n3.type = "ordinal";
      var i2 = n3.getSetting("ordinalMeta");
      return i2 || (i2 = new kx({})), H(i2) && (i2 = new kx({ categories: E(i2, function(t3) {
        return j(t3) ? t3.value : t3;
      }) })), n3._ordinalMeta = i2, n3._extent = n3.getSetting("extent") || [0, i2.categories.length - 1], n3;
    }
    return e(n2, t2), n2.prototype.parse = function(t3) {
      return null == t3 ? NaN : X(t3) ? this._ordinalMeta.getOrdinal(t3) : Math.round(t3);
    }, n2.prototype.contain = function(t3) {
      return zx(t3 = this.parse(t3), this._extent) && null != this._ordinalMeta.categories[t3];
    }, n2.prototype.normalize = function(t3) {
      return Vx(t3 = this._getTickNumber(this.parse(t3)), this._extent);
    }, n2.prototype.scale = function(t3) {
      return t3 = Math.round(Bx(t3, this._extent)), this.getRawOrdinalNumber(t3);
    }, n2.prototype.getTicks = function() {
      for (var t3 = [], e2 = this._extent, n3 = e2[0]; n3 <= e2[1]; )
        t3.push({ value: n3 }), n3++;
      return t3;
    }, n2.prototype.getMinorTicks = function(t3) {
    }, n2.prototype.setSortInfo = function(t3) {
      if (null != t3) {
        for (var e2 = t3.ordinalNumbers, n3 = this._ordinalNumbersByTick = [], i2 = this._ticksByOrdinalNumber = [], r2 = 0, o2 = this._ordinalMeta.categories.length, a2 = Math.min(o2, e2.length); r2 < a2; ++r2) {
          var s2 = e2[r2];
          n3[r2] = s2, i2[s2] = r2;
        }
        for (var l2 = 0; r2 < o2; ++r2) {
          for (; null != i2[l2]; )
            l2++;
          n3.push(l2), i2[l2] = r2;
        }
      } else
        this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;
    }, n2.prototype._getTickNumber = function(t3) {
      var e2 = this._ticksByOrdinalNumber;
      return e2 && t3 >= 0 && t3 < e2.length ? e2[t3] : t3;
    }, n2.prototype.getRawOrdinalNumber = function(t3) {
      var e2 = this._ordinalNumbersByTick;
      return e2 && t3 >= 0 && t3 < e2.length ? e2[t3] : t3;
    }, n2.prototype.getLabel = function(t3) {
      if (!this.isBlank()) {
        var e2 = this.getRawOrdinalNumber(t3.value), n3 = this._ordinalMeta.categories[e2];
        return null == n3 ? "" : n3 + "";
      }
    }, n2.prototype.count = function() {
      return this._extent[1] - this._extent[0] + 1;
    }, n2.prototype.unionExtentFromData = function(t3, e2) {
      this.unionExtent(t3.getApproximateExtent(e2));
    }, n2.prototype.isInExtentRange = function(t3) {
      return t3 = this._getTickNumber(t3), this._extent[0] <= t3 && this._extent[1] >= t3;
    }, n2.prototype.getOrdinalMeta = function() {
      return this._ordinalMeta;
    }, n2.prototype.calcNiceTicks = function() {
    }, n2.prototype.calcNiceExtent = function() {
    }, n2.type = "ordinal", n2;
  }(Dx);
  Dx.registerClass(Fx);
  var Gx = Ur;
  var Wx = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "interval", e2._interval = 0, e2._intervalPrecision = 2, e2;
    }
    return e(n2, t2), n2.prototype.parse = function(t3) {
      return t3;
    }, n2.prototype.contain = function(t3) {
      return zx(t3, this._extent);
    }, n2.prototype.normalize = function(t3) {
      return Vx(t3, this._extent);
    }, n2.prototype.scale = function(t3) {
      return Bx(t3, this._extent);
    }, n2.prototype.setExtent = function(t3, e2) {
      var n3 = this._extent;
      isNaN(t3) || (n3[0] = parseFloat(t3)), isNaN(e2) || (n3[1] = parseFloat(e2));
    }, n2.prototype.unionExtent = function(t3) {
      var e2 = this._extent;
      t3[0] < e2[0] && (e2[0] = t3[0]), t3[1] > e2[1] && (e2[1] = t3[1]), this.setExtent(e2[0], e2[1]);
    }, n2.prototype.getInterval = function() {
      return this._interval;
    }, n2.prototype.setInterval = function(t3) {
      this._interval = t3, this._niceExtent = this._extent.slice(), this._intervalPrecision = Nx(t3);
    }, n2.prototype.getTicks = function(t3) {
      var e2 = this._interval, n3 = this._extent, i2 = this._niceExtent, r2 = this._intervalPrecision, o2 = [];
      if (!e2)
        return o2;
      n3[0] < i2[0] && (t3 ? o2.push({ value: Gx(i2[0] - e2, r2) }) : o2.push({ value: n3[0] }));
      for (var a2 = i2[0]; a2 <= i2[1] && (o2.push({ value: a2 }), (a2 = Gx(a2 + e2, r2)) !== o2[o2.length - 1].value); )
        if (o2.length > 1e4)
          return [];
      var s2 = o2.length ? o2[o2.length - 1].value : i2[1];
      return n3[1] > s2 && (t3 ? o2.push({ value: Gx(s2 + e2, r2) }) : o2.push({ value: n3[1] })), o2;
    }, n2.prototype.getMinorTicks = function(t3) {
      for (var e2 = this.getTicks(true), n3 = [], i2 = this.getExtent(), r2 = 1; r2 < e2.length; r2++) {
        for (var o2 = e2[r2], a2 = e2[r2 - 1], s2 = 0, l2 = [], u2 = (o2.value - a2.value) / t3; s2 < t3 - 1; ) {
          var h2 = Gx(a2.value + (s2 + 1) * u2);
          h2 > i2[0] && h2 < i2[1] && l2.push(h2), s2++;
        }
        n3.push(l2);
      }
      return n3;
    }, n2.prototype.getLabel = function(t3, e2) {
      if (null == t3)
        return "";
      var n3 = e2 && e2.precision;
      return null == n3 ? n3 = jr(t3.value) || 0 : "auto" === n3 && (n3 = this._intervalPrecision), cp(Gx(t3.value, n3, true));
    }, n2.prototype.calcNiceTicks = function(t3, e2, n3) {
      t3 = t3 || 5;
      var i2 = this._extent, r2 = i2[1] - i2[0];
      if (isFinite(r2)) {
        r2 < 0 && (r2 = -r2, i2.reverse());
        var o2 = Ox(i2, t3, e2, n3);
        this._intervalPrecision = o2.intervalPrecision, this._interval = o2.interval, this._niceExtent = o2.niceTickExtent;
      }
    }, n2.prototype.calcNiceExtent = function(t3) {
      var e2 = this._extent;
      if (e2[0] === e2[1])
        if (0 !== e2[0]) {
          var n3 = Math.abs(e2[0]);
          t3.fixMax || (e2[1] += n3 / 2), e2[0] -= n3 / 2;
        } else
          e2[1] = 1;
      var i2 = e2[1] - e2[0];
      isFinite(i2) || (e2[0] = 0, e2[1] = 1), this.calcNiceTicks(t3.splitNumber, t3.minInterval, t3.maxInterval);
      var r2 = this._interval;
      t3.fixMin || (e2[0] = Gx(Math.floor(e2[0] / r2) * r2)), t3.fixMax || (e2[1] = Gx(Math.ceil(e2[1] / r2) * r2));
    }, n2.prototype.setNiceExtent = function(t3, e2) {
      this._niceExtent = [t3, e2];
    }, n2.type = "interval", n2;
  }(Dx);
  Dx.registerClass(Wx);
  var Hx = "undefined" != typeof Float32Array;
  var Yx = Hx ? Float32Array : Array;
  function Xx(t2) {
    return H(t2) ? Hx ? new Float32Array(t2) : t2 : new Yx(t2);
  }
  var Ux = "__ec_stack_";
  function Zx(t2) {
    return t2.get("stack") || Ux + t2.seriesIndex;
  }
  function jx(t2) {
    return t2.dim + t2.index;
  }
  function qx(t2, e2) {
    var n2 = [];
    return e2.eachSeriesByType(t2, function(t3) {
      t_(t3) && n2.push(t3);
    }), n2;
  }
  function Kx(t2) {
    var e2 = function(t3) {
      var e3 = {};
      N(t3, function(t4) {
        var n4 = t4.coordinateSystem.getBaseAxis();
        if ("time" === n4.type || "value" === n4.type)
          for (var i3 = t4.getData(), r3 = n4.dim + "_" + n4.index, o3 = i3.getDimensionIndex(i3.mapDimension(n4.dim)), a3 = i3.getStore(), s3 = 0, l2 = a3.count(); s3 < l2; ++s3) {
            var u2 = a3.get(o3, s3);
            e3[r3] ? e3[r3].push(u2) : e3[r3] = [u2];
          }
      });
      var n3 = {};
      for (var i2 in e3)
        if (e3.hasOwnProperty(i2)) {
          var r2 = e3[i2];
          if (r2) {
            r2.sort(function(t4, e4) {
              return t4 - e4;
            });
            for (var o2 = null, a2 = 1; a2 < r2.length; ++a2) {
              var s2 = r2[a2] - r2[a2 - 1];
              s2 > 0 && (o2 = null === o2 ? s2 : Math.min(o2, s2));
            }
            n3[i2] = o2;
          }
        }
      return n3;
    }(t2), n2 = [];
    return N(t2, function(t3) {
      var i2, r2 = t3.coordinateSystem.getBaseAxis(), o2 = r2.getExtent();
      if ("category" === r2.type)
        i2 = r2.getBandWidth();
      else if ("value" === r2.type || "time" === r2.type) {
        var a2 = r2.dim + "_" + r2.index, s2 = e2[a2], l2 = Math.abs(o2[1] - o2[0]), u2 = r2.scale.getExtent(), h2 = Math.abs(u2[1] - u2[0]);
        i2 = s2 ? l2 / h2 * s2 : l2;
      } else {
        var c2 = t3.getData();
        i2 = Math.abs(o2[1] - o2[0]) / c2.count();
      }
      var p2 = Xr(t3.get("barWidth"), i2), d2 = Xr(t3.get("barMaxWidth"), i2), f2 = Xr(t3.get("barMinWidth") || (e_(t3) ? 0.5 : 1), i2), g2 = t3.get("barGap"), y2 = t3.get("barCategoryGap");
      n2.push({ bandWidth: i2, barWidth: p2, barMaxWidth: d2, barMinWidth: f2, barGap: g2, barCategoryGap: y2, axisKey: jx(r2), stackId: Zx(t3) });
    }), $x(n2);
  }
  function $x(t2) {
    var e2 = {};
    N(t2, function(t3, n3) {
      var i2 = t3.axisKey, r2 = t3.bandWidth, o2 = e2[i2] || { bandWidth: r2, remainedWidth: r2, autoWidthCount: 0, categoryGap: null, gap: "20%", stacks: {} }, a2 = o2.stacks;
      e2[i2] = o2;
      var s2 = t3.stackId;
      a2[s2] || o2.autoWidthCount++, a2[s2] = a2[s2] || { width: 0, maxWidth: 0 };
      var l2 = t3.barWidth;
      l2 && !a2[s2].width && (a2[s2].width = l2, l2 = Math.min(o2.remainedWidth, l2), o2.remainedWidth -= l2);
      var u2 = t3.barMaxWidth;
      u2 && (a2[s2].maxWidth = u2);
      var h2 = t3.barMinWidth;
      h2 && (a2[s2].minWidth = h2);
      var c2 = t3.barGap;
      null != c2 && (o2.gap = c2);
      var p2 = t3.barCategoryGap;
      null != p2 && (o2.categoryGap = p2);
    });
    var n2 = {};
    return N(e2, function(t3, e3) {
      n2[e3] = {};
      var i2 = t3.stacks, r2 = t3.bandWidth, o2 = t3.categoryGap;
      if (null == o2) {
        var a2 = F(i2).length;
        o2 = Math.max(35 - 4 * a2, 15) + "%";
      }
      var s2 = Xr(o2, r2), l2 = Xr(t3.gap, 1), u2 = t3.remainedWidth, h2 = t3.autoWidthCount, c2 = (u2 - s2) / (h2 + (h2 - 1) * l2);
      c2 = Math.max(c2, 0), N(i2, function(t4) {
        var e4 = t4.maxWidth, n3 = t4.minWidth;
        if (t4.width) {
          i3 = t4.width;
          e4 && (i3 = Math.min(i3, e4)), n3 && (i3 = Math.max(i3, n3)), t4.width = i3, u2 -= i3 + l2 * i3, h2--;
        } else {
          var i3 = c2;
          e4 && e4 < i3 && (i3 = Math.min(e4, u2)), n3 && n3 > i3 && (i3 = n3), i3 !== c2 && (t4.width = i3, u2 -= i3 + l2 * i3, h2--);
        }
      }), c2 = (u2 - s2) / (h2 + (h2 - 1) * l2), c2 = Math.max(c2, 0);
      var p2, d2 = 0;
      N(i2, function(t4, e4) {
        t4.width || (t4.width = c2), p2 = t4, d2 += t4.width * (1 + l2);
      }), p2 && (d2 -= p2.width * l2);
      var f2 = -d2 / 2;
      N(i2, function(t4, i3) {
        n2[e3][i3] = n2[e3][i3] || { bandWidth: r2, offset: f2, width: t4.width }, f2 += t4.width * (1 + l2);
      });
    }), n2;
  }
  function Jx(t2, e2) {
    var n2 = qx(t2, e2), i2 = Kx(n2);
    N(n2, function(t3) {
      var e3 = t3.getData(), n3 = t3.coordinateSystem.getBaseAxis(), r2 = Zx(t3), o2 = i2[jx(n3)][r2], a2 = o2.offset, s2 = o2.width;
      e3.setLayout({ bandWidth: o2.bandWidth, offset: a2, size: s2 });
    });
  }
  function Qx(t2) {
    return { seriesType: t2, plan: Tg(), reset: function(t3) {
      if (t_(t3)) {
        var e2 = t3.getData(), n2 = t3.coordinateSystem, i2 = n2.getBaseAxis(), r2 = n2.getOtherAxis(i2), o2 = e2.getDimensionIndex(e2.mapDimension(r2.dim)), a2 = e2.getDimensionIndex(e2.mapDimension(i2.dim)), s2 = t3.get("showBackground", true), l2 = e2.mapDimension(r2.dim), u2 = e2.getCalculationInfo("stackResultDimension"), h2 = Ix(e2, l2) && !!e2.getCalculationInfo("stackedOnSeries"), c2 = r2.isHorizontal(), p2 = function(t4, e3) {
          return e3.toGlobalCoord(e3.dataToCoord("log" === e3.type ? 1 : 0));
        }(0, r2), d2 = e_(t3), f2 = t3.get("barMinHeight") || 0, g2 = u2 && e2.getDimensionIndex(u2), y2 = e2.getLayout("size"), v2 = e2.getLayout("offset");
        return { progress: function(t4, e3) {
          for (var i3, r3 = t4.count, l3 = d2 && Xx(3 * r3), u3 = d2 && s2 && Xx(3 * r3), m2 = d2 && Xx(r3), x2 = n2.master.getRect(), _2 = c2 ? x2.width : x2.height, b2 = e3.getStore(), w2 = 0; null != (i3 = t4.next()); ) {
            var S2 = b2.get(h2 ? g2 : o2, i3), M2 = b2.get(a2, i3), I2 = p2, T2 = void 0;
            h2 && (T2 = +S2 - b2.get(o2, i3));
            var C2 = void 0, D2 = void 0, A2 = void 0, k2 = void 0;
            if (c2) {
              var L2 = n2.dataToPoint([S2, M2]);
              if (h2)
                I2 = n2.dataToPoint([T2, M2])[0];
              C2 = I2, D2 = L2[1] + v2, A2 = L2[0] - I2, k2 = y2, Math.abs(A2) < f2 && (A2 = (A2 < 0 ? -1 : 1) * f2);
            } else {
              L2 = n2.dataToPoint([M2, S2]);
              if (h2)
                I2 = n2.dataToPoint([M2, T2])[1];
              C2 = L2[0] + v2, D2 = I2, A2 = y2, k2 = L2[1] - I2, Math.abs(k2) < f2 && (k2 = (k2 <= 0 ? -1 : 1) * f2);
            }
            d2 ? (l3[w2] = C2, l3[w2 + 1] = D2, l3[w2 + 2] = c2 ? A2 : k2, u3 && (u3[w2] = c2 ? x2.x : C2, u3[w2 + 1] = c2 ? D2 : x2.y, u3[w2 + 2] = _2), m2[i3] = i3) : e3.setItemLayout(i3, { x: C2, y: D2, width: A2, height: k2 }), w2 += 3;
          }
          d2 && e3.setLayout({ largePoints: l3, largeDataIndices: m2, largeBackgroundPoints: u3, valueAxisHorizontal: c2 });
        } };
      }
    } };
  }
  function t_(t2) {
    return t2.coordinateSystem && "cartesian2d" === t2.coordinateSystem.type;
  }
  function e_(t2) {
    return t2.pipelineContext && t2.pipelineContext.large;
  }
  var n_ = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "time", n3;
    }
    return e(n2, t2), n2.prototype.getLabel = function(t3) {
      var e2 = this.getSetting("useUTC");
      return jc(t3.value, Wc[function(t4) {
        switch (t4) {
          case "year":
          case "month":
            return "day";
          case "millisecond":
            return "millisecond";
          default:
            return "second";
        }
      }(Uc(this._minLevelUnit))] || Wc.second, e2, this.getSetting("locale"));
    }, n2.prototype.getFormattedLabel = function(t3, e2, n3) {
      var i2 = this.getSetting("useUTC");
      return function(t4, e3, n4, i3, r2) {
        var o2 = null;
        if (X(n4))
          o2 = n4;
        else if (Y(n4))
          o2 = n4(t4.value, e3, { level: t4.level });
        else {
          var a2 = D({}, Fc);
          if (t4.level > 0)
            for (var s2 = 0; s2 < Hc.length; ++s2)
              a2[Hc[s2]] = "{primary|" + a2[Hc[s2]] + "}";
          var l2 = n4 ? false === n4.inherit ? n4 : A(n4, a2) : a2, u2 = qc(t4.value, r2);
          if (l2[u2])
            o2 = l2[u2];
          else if (l2.inherit) {
            for (s2 = Yc.indexOf(u2) - 1; s2 >= 0; --s2)
              if (l2[u2]) {
                o2 = l2[u2];
                break;
              }
            o2 = o2 || a2.none;
          }
          if (H(o2)) {
            var h2 = null == t4.level ? 0 : t4.level >= 0 ? t4.level : o2.length + t4.level;
            o2 = o2[h2 = Math.min(h2, o2.length - 1)];
          }
        }
        return jc(new Date(t4.value), o2, r2, i3);
      }(t3, e2, n3, this.getSetting("locale"), i2);
    }, n2.prototype.getTicks = function() {
      var t3 = this._interval, e2 = this._extent, n3 = [];
      if (!t3)
        return n3;
      n3.push({ value: e2[0], level: 0 });
      var i2 = this.getSetting("useUTC"), r2 = function(t4, e3, n4, i3) {
        var r3 = 1e4, o2 = Yc, a2 = 0;
        function s2(t5, e4, n5, r4, o3, a3, s3) {
          for (var l3 = new Date(e4), u3 = e4, h3 = l3[r4](); u3 < n5 && u3 <= i3[1]; )
            s3.push({ value: u3 }), h3 += t5, l3[o3](h3), u3 = l3.getTime();
          s3.push({ value: u3, notAdd: true });
        }
        function l2(t5, r4, o3) {
          var a3 = [], l3 = !r4.length;
          if (!function(t6, e4, n5, i4) {
            var r5 = io(e4), o4 = io(n5), a4 = function(t7) {
              return Kc(r5, t7, i4) === Kc(o4, t7, i4);
            }, s3 = function() {
              return a4("year");
            }, l4 = function() {
              return s3() && a4("month");
            }, u4 = function() {
              return l4() && a4("day");
            }, h4 = function() {
              return u4() && a4("hour");
            }, c4 = function() {
              return h4() && a4("minute");
            }, p4 = function() {
              return c4() && a4("second");
            }, d4 = function() {
              return p4() && a4("millisecond");
            };
            switch (t6) {
              case "year":
                return s3();
              case "month":
                return l4();
              case "day":
                return u4();
              case "hour":
                return h4();
              case "minute":
                return c4();
              case "second":
                return p4();
              case "millisecond":
                return d4();
            }
          }(Uc(t5), i3[0], i3[1], n4)) {
            l3 && (r4 = [{ value: u_(new Date(i3[0]), t5, n4) }, { value: i3[1] }]);
            for (var u3 = 0; u3 < r4.length - 1; u3++) {
              var h3 = r4[u3].value, c3 = r4[u3 + 1].value;
              if (h3 !== c3) {
                var p3 = void 0, d3 = void 0, f3 = void 0, g3 = false;
                switch (t5) {
                  case "year":
                    p3 = Math.max(1, Math.round(e3 / Vc / 365)), d3 = $c(n4), f3 = rp(n4);
                    break;
                  case "half-year":
                  case "quarter":
                  case "month":
                    p3 = o_(e3), d3 = Jc(n4), f3 = op(n4);
                    break;
                  case "week":
                  case "half-week":
                  case "day":
                    p3 = r_(e3), d3 = Qc(n4), f3 = ap(n4), g3 = true;
                    break;
                  case "half-day":
                  case "quarter-day":
                  case "hour":
                    p3 = a_(e3), d3 = tp(n4), f3 = sp(n4);
                    break;
                  case "minute":
                    p3 = s_(e3, true), d3 = ep(n4), f3 = lp(n4);
                    break;
                  case "second":
                    p3 = s_(e3, false), d3 = np(n4), f3 = up(n4);
                    break;
                  case "millisecond":
                    p3 = l_(e3), d3 = ip(n4), f3 = hp(n4);
                }
                s2(p3, h3, c3, d3, f3, g3, a3), "year" === t5 && o3.length > 1 && 0 === u3 && o3.unshift({ value: o3[0].value - p3 });
              }
            }
            for (u3 = 0; u3 < a3.length; u3++)
              o3.push(a3[u3]);
            return a3;
          }
        }
        for (var u2 = [], h2 = [], c2 = 0, p2 = 0, d2 = 0; d2 < o2.length && a2++ < r3; ++d2) {
          var f2 = Uc(o2[d2]);
          if (Zc(o2[d2])) {
            if (l2(o2[d2], u2[u2.length - 1] || [], h2), f2 !== (o2[d2 + 1] ? Uc(o2[d2 + 1]) : null)) {
              if (h2.length) {
                p2 = c2, h2.sort(function(t5, e4) {
                  return t5.value - e4.value;
                });
                for (var g2 = [], y2 = 0; y2 < h2.length; ++y2) {
                  var v2 = h2[y2].value;
                  0 !== y2 && h2[y2 - 1].value === v2 || (g2.push(h2[y2]), v2 >= i3[0] && v2 <= i3[1] && c2++);
                }
                var m2 = (i3[1] - i3[0]) / e3;
                if (c2 > 1.5 * m2 && p2 > m2 / 1.5)
                  break;
                if (u2.push(g2), c2 > m2 || t4 === o2[d2])
                  break;
              }
              h2 = [];
            }
          }
        }
        var x2 = V(E(u2, function(t5) {
          return V(t5, function(t6) {
            return t6.value >= i3[0] && t6.value <= i3[1] && !t6.notAdd;
          });
        }), function(t5) {
          return t5.length > 0;
        }), _2 = [], b2 = x2.length - 1;
        for (d2 = 0; d2 < x2.length; ++d2)
          for (var w2 = x2[d2], S2 = 0; S2 < w2.length; ++S2)
            _2.push({ value: w2[S2].value, level: b2 - d2 });
        _2.sort(function(t5, e4) {
          return t5.value - e4.value;
        });
        var M2 = [];
        for (d2 = 0; d2 < _2.length; ++d2)
          0 !== d2 && _2[d2].value === _2[d2 - 1].value || M2.push(_2[d2]);
        return M2;
      }(this._minLevelUnit, this._approxInterval, i2, e2);
      return (n3 = n3.concat(r2)).push({ value: e2[1], level: 0 }), n3;
    }, n2.prototype.calcNiceExtent = function(t3) {
      var e2 = this._extent;
      if (e2[0] === e2[1] && (e2[0] -= Vc, e2[1] += Vc), e2[1] === -1 / 0 && e2[0] === 1 / 0) {
        var n3 = /* @__PURE__ */ new Date();
        e2[1] = +new Date(n3.getFullYear(), n3.getMonth(), n3.getDate()), e2[0] = e2[1] - Vc;
      }
      this.calcNiceTicks(t3.splitNumber, t3.minInterval, t3.maxInterval);
    }, n2.prototype.calcNiceTicks = function(t3, e2, n3) {
      t3 = t3 || 10;
      var i2 = this._extent, r2 = i2[1] - i2[0];
      this._approxInterval = r2 / t3, null != e2 && this._approxInterval < e2 && (this._approxInterval = e2), null != n3 && this._approxInterval > n3 && (this._approxInterval = n3);
      var o2 = i_.length, a2 = Math.min(function(t4, e3, n4, i3) {
        for (; n4 < i3; ) {
          var r3 = n4 + i3 >>> 1;
          t4[r3][1] < e3 ? n4 = r3 + 1 : i3 = r3;
        }
        return n4;
      }(i_, this._approxInterval, 0, o2), o2 - 1);
      this._interval = i_[a2][1], this._minLevelUnit = i_[Math.max(a2 - 1, 0)][0];
    }, n2.prototype.parse = function(t3) {
      return Z(t3) ? t3 : +io(t3);
    }, n2.prototype.contain = function(t3) {
      return zx(this.parse(t3), this._extent);
    }, n2.prototype.normalize = function(t3) {
      return Vx(this.parse(t3), this._extent);
    }, n2.prototype.scale = function(t3) {
      return Bx(t3, this._extent);
    }, n2.type = "time", n2;
  }(Wx);
  var i_ = [["second", Nc], ["minute", Ec], ["hour", zc], ["quarter-day", 216e5], ["half-day", 432e5], ["day", 10368e4], ["half-week", 3024e5], ["week", 6048e5], ["month", 26784e5], ["quarter", 8208e6], ["half-year", Bc / 2], ["year", Bc]];
  function r_(t2, e2) {
    return (t2 /= Vc) > 16 ? 16 : t2 > 7.5 ? 7 : t2 > 3.5 ? 4 : t2 > 1.5 ? 2 : 1;
  }
  function o_(t2) {
    return (t2 /= 2592e6) > 6 ? 6 : t2 > 3 ? 3 : t2 > 2 ? 2 : 1;
  }
  function a_(t2) {
    return (t2 /= zc) > 12 ? 12 : t2 > 6 ? 6 : t2 > 3.5 ? 4 : t2 > 2 ? 2 : 1;
  }
  function s_(t2, e2) {
    return (t2 /= e2 ? Ec : Nc) > 30 ? 30 : t2 > 20 ? 20 : t2 > 15 ? 15 : t2 > 10 ? 10 : t2 > 5 ? 5 : t2 > 2 ? 2 : 1;
  }
  function l_(t2) {
    return ao(t2, true);
  }
  function u_(t2, e2, n2) {
    var i2 = new Date(t2);
    switch (Uc(e2)) {
      case "year":
      case "month":
        i2[op(n2)](0);
      case "day":
        i2[ap(n2)](1);
      case "hour":
        i2[sp(n2)](0);
      case "minute":
        i2[lp(n2)](0);
      case "second":
        i2[up(n2)](0), i2[hp(n2)](0);
    }
    return i2.getTime();
  }
  Dx.registerClass(n_);
  var h_ = Dx.prototype;
  var c_ = Wx.prototype;
  var p_ = Ur;
  var d_ = Math.floor;
  var f_ = Math.ceil;
  var g_ = Math.pow;
  var y_ = Math.log;
  var v_ = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "log", e2.base = 10, e2._originalScale = new Wx(), e2._interval = 0, e2;
    }
    return e(n2, t2), n2.prototype.getTicks = function(t3) {
      var e2 = this._originalScale, n3 = this._extent, i2 = e2.getExtent();
      return E(c_.getTicks.call(this, t3), function(t4) {
        var e3 = t4.value, r2 = Ur(g_(this.base, e3));
        return r2 = e3 === n3[0] && this._fixMin ? x_(r2, i2[0]) : r2, { value: r2 = e3 === n3[1] && this._fixMax ? x_(r2, i2[1]) : r2 };
      }, this);
    }, n2.prototype.setExtent = function(t3, e2) {
      var n3 = y_(this.base);
      t3 = y_(Math.max(0, t3)) / n3, e2 = y_(Math.max(0, e2)) / n3, c_.setExtent.call(this, t3, e2);
    }, n2.prototype.getExtent = function() {
      var t3 = this.base, e2 = h_.getExtent.call(this);
      e2[0] = g_(t3, e2[0]), e2[1] = g_(t3, e2[1]);
      var n3 = this._originalScale.getExtent();
      return this._fixMin && (e2[0] = x_(e2[0], n3[0])), this._fixMax && (e2[1] = x_(e2[1], n3[1])), e2;
    }, n2.prototype.unionExtent = function(t3) {
      this._originalScale.unionExtent(t3);
      var e2 = this.base;
      t3[0] = y_(t3[0]) / y_(e2), t3[1] = y_(t3[1]) / y_(e2), h_.unionExtent.call(this, t3);
    }, n2.prototype.unionExtentFromData = function(t3, e2) {
      this.unionExtent(t3.getApproximateExtent(e2));
    }, n2.prototype.calcNiceTicks = function(t3) {
      t3 = t3 || 10;
      var e2 = this._extent, n3 = e2[1] - e2[0];
      if (!(n3 === 1 / 0 || n3 <= 0)) {
        var i2 = ro(n3);
        for (t3 / n3 * i2 <= 0.5 && (i2 *= 10); !isNaN(i2) && Math.abs(i2) < 1 && Math.abs(i2) > 0; )
          i2 *= 10;
        var r2 = [Ur(f_(e2[0] / i2) * i2), Ur(d_(e2[1] / i2) * i2)];
        this._interval = i2, this._niceExtent = r2;
      }
    }, n2.prototype.calcNiceExtent = function(t3) {
      c_.calcNiceExtent.call(this, t3), this._fixMin = t3.fixMin, this._fixMax = t3.fixMax;
    }, n2.prototype.parse = function(t3) {
      return t3;
    }, n2.prototype.contain = function(t3) {
      return zx(t3 = y_(t3) / y_(this.base), this._extent);
    }, n2.prototype.normalize = function(t3) {
      return Vx(t3 = y_(t3) / y_(this.base), this._extent);
    }, n2.prototype.scale = function(t3) {
      return t3 = Bx(t3, this._extent), g_(this.base, t3);
    }, n2.type = "log", n2;
  }(Dx);
  var m_ = v_.prototype;
  function x_(t2, e2) {
    return p_(t2, jr(e2));
  }
  m_.getMinorTicks = c_.getMinorTicks, m_.getLabel = c_.getLabel, Dx.registerClass(v_);
  var __ = function() {
    function t2(t3, e2, n2) {
      this._prepareParams(t3, e2, n2);
    }
    return t2.prototype._prepareParams = function(t3, e2, n2) {
      n2[1] < n2[0] && (n2 = [NaN, NaN]), this._dataMin = n2[0], this._dataMax = n2[1];
      var i2 = this._isOrdinal = "ordinal" === t3.type;
      this._needCrossZero = "interval" === t3.type && e2.getNeedCrossZero && e2.getNeedCrossZero();
      var r2 = this._modelMinRaw = e2.get("min", true);
      Y(r2) ? this._modelMinNum = M_(t3, r2({ min: n2[0], max: n2[1] })) : "dataMin" !== r2 && (this._modelMinNum = M_(t3, r2));
      var o2 = this._modelMaxRaw = e2.get("max", true);
      if (Y(o2) ? this._modelMaxNum = M_(t3, o2({ min: n2[0], max: n2[1] })) : "dataMax" !== o2 && (this._modelMaxNum = M_(t3, o2)), i2)
        this._axisDataLen = e2.getCategories().length;
      else {
        var a2 = e2.get("boundaryGap"), s2 = H(a2) ? a2 : [a2 || 0, a2 || 0];
        "boolean" == typeof s2[0] || "boolean" == typeof s2[1] ? this._boundaryGapInner = [0, 0] : this._boundaryGapInner = [Mr(s2[0], 1), Mr(s2[1], 1)];
      }
    }, t2.prototype.calculate = function() {
      var t3 = this._isOrdinal, e2 = this._dataMin, n2 = this._dataMax, i2 = this._axisDataLen, r2 = this._boundaryGapInner, o2 = t3 ? null : n2 - e2 || Math.abs(e2), a2 = "dataMin" === this._modelMinRaw ? e2 : this._modelMinNum, s2 = "dataMax" === this._modelMaxRaw ? n2 : this._modelMaxNum, l2 = null != a2, u2 = null != s2;
      null == a2 && (a2 = t3 ? i2 ? 0 : NaN : e2 - r2[0] * o2), null == s2 && (s2 = t3 ? i2 ? i2 - 1 : NaN : n2 + r2[1] * o2), (null == a2 || !isFinite(a2)) && (a2 = NaN), (null == s2 || !isFinite(s2)) && (s2 = NaN);
      var h2 = et(a2) || et(s2) || t3 && !i2;
      this._needCrossZero && (a2 > 0 && s2 > 0 && !l2 && (a2 = 0), a2 < 0 && s2 < 0 && !u2 && (s2 = 0));
      var c2 = this._determinedMin, p2 = this._determinedMax;
      return null != c2 && (a2 = c2, l2 = true), null != p2 && (s2 = p2, u2 = true), { min: a2, max: s2, minFixed: l2, maxFixed: u2, isBlank: h2 };
    }, t2.prototype.modifyDataMinMax = function(t3, e2) {
      this[w_[t3]] = e2;
    }, t2.prototype.setDeterminedMinMax = function(t3, e2) {
      var n2 = b_[t3];
      this[n2] = e2;
    }, t2.prototype.freeze = function() {
      this.frozen = true;
    }, t2;
  }();
  var b_ = { min: "_determinedMin", max: "_determinedMax" };
  var w_ = { min: "_dataMin", max: "_dataMax" };
  function S_(t2, e2, n2) {
    var i2 = t2.rawExtentInfo;
    return i2 || (i2 = new __(t2, e2, n2), t2.rawExtentInfo = i2, i2);
  }
  function M_(t2, e2) {
    return null == e2 ? null : et(e2) ? NaN : t2.parse(e2);
  }
  function I_(t2, e2) {
    var n2 = t2.type, i2 = S_(t2, e2, t2.getExtent()).calculate();
    t2.setBlank(i2.isBlank);
    var r2 = i2.min, o2 = i2.max, a2 = e2.ecModel;
    if (a2 && "time" === n2) {
      var s2 = qx("bar", a2), l2 = false;
      if (N(s2, function(t3) {
        l2 = l2 || t3.getBaseAxis() === e2.axis;
      }), l2) {
        var u2 = Kx(s2), h2 = function(t3, e3, n3, i3) {
          var r3 = n3.axis.getExtent(), o3 = r3[1] - r3[0], a3 = function(t4, e4, n4) {
            if (t4 && e4) {
              var i4 = t4[jx(e4)];
              return null != i4 && null != n4 ? i4[Zx(n4)] : i4;
            }
          }(i3, n3.axis);
          if (void 0 === a3)
            return { min: t3, max: e3 };
          var s3 = 1 / 0;
          N(a3, function(t4) {
            s3 = Math.min(t4.offset, s3);
          });
          var l3 = -1 / 0;
          N(a3, function(t4) {
            l3 = Math.max(t4.offset + t4.width, l3);
          }), s3 = Math.abs(s3), l3 = Math.abs(l3);
          var u3 = s3 + l3, h3 = e3 - t3, c2 = h3 / (1 - (s3 + l3) / o3) - h3;
          return e3 += c2 * (l3 / u3), t3 -= c2 * (s3 / u3), { min: t3, max: e3 };
        }(r2, o2, e2, u2);
        r2 = h2.min, o2 = h2.max;
      }
    }
    return { extent: [r2, o2], fixMin: i2.minFixed, fixMax: i2.maxFixed };
  }
  function T_(t2, e2) {
    var n2 = e2, i2 = I_(t2, n2), r2 = i2.extent, o2 = n2.get("splitNumber");
    t2 instanceof v_ && (t2.base = n2.get("logBase"));
    var a2 = t2.type, s2 = n2.get("interval"), l2 = "interval" === a2 || "time" === a2;
    t2.setExtent(r2[0], r2[1]), t2.calcNiceExtent({ splitNumber: o2, fixMin: i2.fixMin, fixMax: i2.fixMax, minInterval: l2 ? n2.get("minInterval") : null, maxInterval: l2 ? n2.get("maxInterval") : null }), null != s2 && t2.setInterval && t2.setInterval(s2);
  }
  function C_(t2, e2) {
    if (e2 = e2 || t2.get("type"))
      switch (e2) {
        case "category":
          return new Fx({ ordinalMeta: t2.getOrdinalMeta ? t2.getOrdinalMeta() : t2.getCategories(), extent: [1 / 0, -1 / 0] });
        case "time":
          return new n_({ locale: t2.ecModel.getLocaleModel(), useUTC: t2.ecModel.get("useUTC") });
        default:
          return new (Dx.getClass(e2) || Wx)();
      }
  }
  function D_(t2) {
    var e2, n2, i2 = t2.getLabelModel().get("formatter"), r2 = "category" === t2.type ? t2.scale.getExtent()[0] : null;
    return "time" === t2.scale.type ? (n2 = i2, function(e3, i3) {
      return t2.scale.getFormattedLabel(e3, i3, n2);
    }) : X(i2) ? function(e3) {
      return function(n3) {
        var i3 = t2.scale.getLabel(n3);
        return e3.replace("{value}", null != i3 ? i3 : "");
      };
    }(i2) : Y(i2) ? (e2 = i2, function(n3, i3) {
      return null != r2 && (i3 = n3.value - r2), e2(A_(t2, n3), i3, null != n3.level ? { level: n3.level } : null);
    }) : function(e3) {
      return t2.scale.getLabel(e3);
    };
  }
  function A_(t2, e2) {
    return "category" === t2.type ? t2.scale.getLabel(e2) : e2.value;
  }
  function k_(t2, e2) {
    var n2 = e2 * Math.PI / 180, i2 = t2.width, r2 = t2.height, o2 = i2 * Math.abs(Math.cos(n2)) + Math.abs(r2 * Math.sin(n2)), a2 = i2 * Math.abs(Math.sin(n2)) + Math.abs(r2 * Math.cos(n2));
    return new Ee(t2.x, t2.y, o2, a2);
  }
  function L_(t2) {
    var e2 = t2.get("interval");
    return null == e2 ? "auto" : e2;
  }
  function P_(t2) {
    return "category" === t2.type && 0 === L_(t2.getLabelModel());
  }
  function O_(t2, e2) {
    var n2 = {};
    return N(t2.mapDimensionsAll(e2), function(e3) {
      n2[Tx(t2, e3)] = true;
    }), F(n2);
  }
  var R_ = function() {
    function t2() {
    }
    return t2.prototype.getNeedCrossZero = function() {
      return !this.option.scale;
    }, t2.prototype.getCoordSysModel = function() {
    }, t2;
  }();
  var N_ = { isDimensionStacked: Ix, enableDataStack: Mx, getStackedDimension: Tx };
  var E_ = Object.freeze({ __proto__: null, createList: function(t2) {
    return Cx(null, t2);
  }, getLayoutRect: Tp, dataStack: N_, createScale: function(t2, e2) {
    var n2 = e2;
    e2 instanceof Sc || (n2 = new Sc(e2));
    var i2 = C_(n2);
    return i2.setExtent(t2[0], t2[1]), T_(i2, n2), i2;
  }, mixinAxisModelCommonMethods: function(t2) {
    O(t2, R_);
  }, getECData: Js, createTextStyle: function(t2, e2) {
    return ec(t2, null, null, "normal" !== (e2 = e2 || {}).state);
  }, createDimensions: function(t2, e2) {
    return mx(t2, e2).dimensions;
  }, createSymbol: Gy, enableHoverEmphasis: Wl });
  function z_(t2, e2) {
    return Math.abs(t2 - e2) < 1e-8;
  }
  function V_(t2, e2, n2) {
    var i2 = 0, r2 = t2[0];
    if (!r2)
      return false;
    for (var o2 = 1; o2 < t2.length; o2++) {
      var a2 = t2[o2];
      i2 += ps(r2[0], r2[1], a2[0], a2[1], e2, n2), r2 = a2;
    }
    var s2 = t2[0];
    return z_(r2[0], s2[0]) && z_(r2[1], s2[1]) || (i2 += ps(r2[0], r2[1], s2[0], s2[1], e2, n2)), 0 !== i2;
  }
  var B_ = [];
  function F_(t2, e2) {
    for (var n2 = 0; n2 < t2.length; n2++)
      Gt(t2[n2], t2[n2], e2);
  }
  function G_(t2, e2, n2, i2) {
    for (var r2 = 0; r2 < t2.length; r2++) {
      var o2 = t2[r2];
      i2 && (o2 = i2.project(o2)), o2 && isFinite(o2[0]) && isFinite(o2[1]) && (Wt(e2, e2, o2), Ht(n2, n2, o2));
    }
  }
  var W_ = function() {
    function t2(t3) {
      this.name = t3;
    }
    return t2.prototype.setCenter = function(t3) {
      this._center = t3;
    }, t2.prototype.getCenter = function() {
      var t3 = this._center;
      return t3 || (t3 = this._center = this.calcCenter()), t3;
    }, t2;
  }();
  var H_ = function(t2, e2) {
    this.type = "polygon", this.exterior = t2, this.interiors = e2;
  };
  var Y_ = function(t2) {
    this.type = "linestring", this.points = t2;
  };
  var X_ = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this, e2) || this;
      return r2.type = "geoJSON", r2.geometries = n3, r2._center = i2 && [i2[0], i2[1]], r2;
    }
    return e(n2, t2), n2.prototype.calcCenter = function() {
      for (var t3, e2 = this.geometries, n3 = 0, i2 = 0; i2 < e2.length; i2++) {
        var r2 = e2[i2], o2 = r2.exterior, a2 = o2 && o2.length;
        a2 > n3 && (t3 = r2, n3 = a2);
      }
      if (t3)
        return function(t4) {
          for (var e3 = 0, n4 = 0, i3 = 0, r3 = t4.length, o3 = t4[r3 - 1][0], a3 = t4[r3 - 1][1], s3 = 0; s3 < r3; s3++) {
            var l2 = t4[s3][0], u2 = t4[s3][1], h2 = o3 * u2 - l2 * a3;
            e3 += h2, n4 += (o3 + l2) * h2, i3 += (a3 + u2) * h2, o3 = l2, a3 = u2;
          }
          return e3 ? [n4 / e3 / 3, i3 / e3 / 3, e3] : [t4[0][0] || 0, t4[0][1] || 0];
        }(t3.exterior);
      var s2 = this.getBoundingRect();
      return [s2.x + s2.width / 2, s2.y + s2.height / 2];
    }, n2.prototype.getBoundingRect = function(t3) {
      var e2 = this._rect;
      if (e2 && !t3)
        return e2;
      var n3 = [1 / 0, 1 / 0], i2 = [-1 / 0, -1 / 0];
      return N(this.geometries, function(e3) {
        "polygon" === e3.type ? G_(e3.exterior, n3, i2, t3) : N(e3.points, function(e4) {
          G_(e4, n3, i2, t3);
        });
      }), isFinite(n3[0]) && isFinite(n3[1]) && isFinite(i2[0]) && isFinite(i2[1]) || (n3[0] = n3[1] = i2[0] = i2[1] = 0), e2 = new Ee(n3[0], n3[1], i2[0] - n3[0], i2[1] - n3[1]), t3 || (this._rect = e2), e2;
    }, n2.prototype.contain = function(t3) {
      var e2 = this.getBoundingRect(), n3 = this.geometries;
      if (!e2.contain(t3[0], t3[1]))
        return false;
      t:
        for (var i2 = 0, r2 = n3.length; i2 < r2; i2++) {
          var o2 = n3[i2];
          if ("polygon" === o2.type) {
            var a2 = o2.exterior, s2 = o2.interiors;
            if (V_(a2, t3[0], t3[1])) {
              for (var l2 = 0; l2 < (s2 ? s2.length : 0); l2++)
                if (V_(s2[l2], t3[0], t3[1]))
                  continue t;
              return true;
            }
          }
        }
      return false;
    }, n2.prototype.transformTo = function(t3, e2, n3, i2) {
      var r2 = this.getBoundingRect(), o2 = r2.width / r2.height;
      n3 ? i2 || (i2 = n3 / o2) : n3 = o2 * i2;
      for (var a2 = new Ee(t3, e2, n3, i2), s2 = r2.calculateTransform(a2), l2 = this.geometries, u2 = 0; u2 < l2.length; u2++) {
        var h2 = l2[u2];
        "polygon" === h2.type ? (F_(h2.exterior, s2), N(h2.interiors, function(t4) {
          F_(t4, s2);
        })) : N(h2.points, function(t4) {
          F_(t4, s2);
        });
      }
      (r2 = this._rect).copy(a2), this._center = [r2.x + r2.width / 2, r2.y + r2.height / 2];
    }, n2.prototype.cloneShallow = function(t3) {
      null == t3 && (t3 = this.name);
      var e2 = new n2(t3, this.geometries, this._center);
      return e2._rect = this._rect, e2.transformTo = null, e2;
    }, n2;
  }(W_);
  var U_ = function(t2) {
    function n2(e2, n3) {
      var i2 = t2.call(this, e2) || this;
      return i2.type = "geoSVG", i2._elOnlyForCalculate = n3, i2;
    }
    return e(n2, t2), n2.prototype.calcCenter = function() {
      for (var t3 = this._elOnlyForCalculate, e2 = t3.getBoundingRect(), n3 = [e2.x + e2.width / 2, e2.y + e2.height / 2], i2 = me(B_), r2 = t3; r2 && !r2.isGeoSVGGraphicRoot; )
        _e(i2, r2.getLocalTransform(), i2), r2 = r2.parent;
      return Me(i2, i2), Gt(n3, n3, i2), n3;
    }, n2;
  }(W_);
  function Z_(t2, e2, n2) {
    for (var i2 = 0; i2 < t2.length; i2++)
      t2[i2] = j_(t2[i2], e2[i2], n2);
  }
  function j_(t2, e2, n2) {
    for (var i2 = [], r2 = e2[0], o2 = e2[1], a2 = 0; a2 < t2.length; a2 += 2) {
      var s2 = t2.charCodeAt(a2) - 64, l2 = t2.charCodeAt(a2 + 1) - 64;
      s2 = s2 >> 1 ^ -(1 & s2), l2 = l2 >> 1 ^ -(1 & l2), r2 = s2 += r2, o2 = l2 += o2, i2.push([s2 / n2, l2 / n2]);
    }
    return i2;
  }
  function q_(t2, e2) {
    return E(V((t2 = function(t3) {
      if (!t3.UTF8Encoding)
        return t3;
      var e3 = t3, n2 = e3.UTF8Scale;
      return null == n2 && (n2 = 1024), N(e3.features, function(t4) {
        var e4 = t4.geometry, i2 = e4.encodeOffsets, r2 = e4.coordinates;
        if (i2)
          switch (e4.type) {
            case "LineString":
              e4.coordinates = j_(r2, i2, n2);
              break;
            case "Polygon":
            case "MultiLineString":
              Z_(r2, i2, n2);
              break;
            case "MultiPolygon":
              N(r2, function(t5, e5) {
                return Z_(t5, i2[e5], n2);
              });
          }
      }), e3.UTF8Encoding = false, e3;
    }(t2)).features, function(t3) {
      return t3.geometry && t3.properties && t3.geometry.coordinates.length > 0;
    }), function(t3) {
      var n2 = t3.properties, i2 = t3.geometry, r2 = [];
      switch (i2.type) {
        case "Polygon":
          var o2 = i2.coordinates;
          r2.push(new H_(o2[0], o2.slice(1)));
          break;
        case "MultiPolygon":
          N(i2.coordinates, function(t4) {
            t4[0] && r2.push(new H_(t4[0], t4.slice(1)));
          });
          break;
        case "LineString":
          r2.push(new Y_([i2.coordinates]));
          break;
        case "MultiLineString":
          r2.push(new Y_(i2.coordinates));
      }
      var a2 = new X_(n2[e2 || "name"], r2, n2.cp);
      return a2.properties = n2, a2;
    });
  }
  var K_ = Object.freeze({ __proto__: null, linearMap: Yr, round: Ur, asc: Zr, getPrecision: jr, getPrecisionSafe: qr, getPixelPrecision: Kr, getPercentWithPrecision: function(t2, e2, n2) {
    return t2[e2] && $r(t2, n2)[e2] || 0;
  }, MAX_SAFE_INTEGER: Qr, remRadian: to, isRadianAroundZero: eo, parseDate: io, quantity: ro, quantityExponent: oo, nice: ao, quantile: so, reformIntervals: lo, isNumeric: ho, numericToNumber: uo });
  var $_ = Object.freeze({ __proto__: null, parse: io, format: jc });
  var J_ = Object.freeze({ __proto__: null, extendShape: Sh, extendPath: Ih, makePath: Dh, makeImage: Ah, mergePath: Lh, resizePath: Ph, createIcon: Wh, updateProps: dh, initProps: fh, getTransform: Nh, clipPointsByRect: Fh, clipRectByRect: Gh, registerShape: Th, getShapeClass: Ch, Group: Er, Image: As, Text: Bs, Circle: xu, Ellipse: bu, Sector: Eu, Ring: Vu, Polygon: Gu, Polyline: Hu, Rect: Es, Line: Uu, BezierCurve: Ku, Arc: Ju, IncrementalDisplayable: uh, CompoundPath: Qu, LinearGradient: eh, RadialGradient: nh, BoundingRect: Ee });
  var Q_ = Object.freeze({ __proto__: null, addCommas: cp, toCamelCase: pp, normalizeCssArray: dp, encodeHTML: ie, formatTpl: vp, getTooltipMarker: mp, formatTime: function(t2, e2, n2) {
    "week" !== t2 && "month" !== t2 && "quarter" !== t2 && "half-year" !== t2 && "year" !== t2 || (t2 = "MM-dd\nyyyy");
    var i2 = io(e2), r2 = n2 ? "getUTC" : "get", o2 = i2[r2 + "FullYear"](), a2 = i2[r2 + "Month"]() + 1, s2 = i2[r2 + "Date"](), l2 = i2[r2 + "Hours"](), u2 = i2[r2 + "Minutes"](), h2 = i2[r2 + "Seconds"](), c2 = i2[r2 + "Milliseconds"]();
    return t2 = t2.replace("MM", Xc(a2, 2)).replace("M", a2).replace("yyyy", o2).replace("yy", Xc(o2 % 100 + "", 2)).replace("dd", Xc(s2, 2)).replace("d", s2).replace("hh", Xc(l2, 2)).replace("h", l2).replace("mm", Xc(u2, 2)).replace("m", u2).replace("ss", Xc(h2, 2)).replace("s", h2).replace("SSS", Xc(c2, 3));
  }, capitalFirst: function(t2) {
    return t2 ? t2.charAt(0).toUpperCase() + t2.substr(1) : t2;
  }, truncateText: aa, getTextRect: function(t2, e2, n2, i2, r2, o2, a2, s2) {
    return new Bs({ style: { text: t2, font: e2, align: n2, verticalAlign: i2, padding: r2, rich: o2, overflow: a2 ? "truncate" : null, lineHeight: s2 } }).getBoundingRect();
  } });
  var tb = Object.freeze({ __proto__: null, map: E, each: N, indexOf: L, inherits: P, reduce: z, filter: V, bind: G, curry: W, isArray: H, isString: X, isObject: j, isFunction: Y, extend: D, defaults: A, clone: I, merge: T });
  var eb = Po();
  function nb(t2) {
    return "category" === t2.type ? function(t3) {
      var e2 = t3.getLabelModel(), n2 = rb(t3, e2);
      return !e2.get("show") || t3.scale.isBlank() ? { labels: [], labelCategoryInterval: n2.labelCategoryInterval } : n2;
    }(t2) : function(t3) {
      var e2 = t3.scale.getTicks(), n2 = D_(t3);
      return { labels: E(e2, function(e3, i2) {
        return { level: e3.level, formattedLabel: n2(e3, i2), rawLabel: t3.scale.getLabel(e3), tickValue: e3.value };
      }) };
    }(t2);
  }
  function ib(t2, e2) {
    return "category" === t2.type ? function(t3, e3) {
      var n2, i2, r2 = ob(t3, "ticks"), o2 = L_(e3), a2 = ab(r2, o2);
      if (a2)
        return a2;
      e3.get("show") && !t3.scale.isBlank() || (n2 = []);
      if (Y(o2))
        n2 = ub(t3, o2, true);
      else if ("auto" === o2) {
        var s2 = rb(t3, t3.getLabelModel());
        i2 = s2.labelCategoryInterval, n2 = E(s2.labels, function(t4) {
          return t4.tickValue;
        });
      } else
        n2 = lb(t3, i2 = o2, true);
      return sb(r2, o2, { ticks: n2, tickCategoryInterval: i2 });
    }(t2, e2) : { ticks: E(t2.scale.getTicks(), function(t3) {
      return t3.value;
    }) };
  }
  function rb(t2, e2) {
    var n2, i2, r2 = ob(t2, "labels"), o2 = L_(e2), a2 = ab(r2, o2);
    return a2 || (Y(o2) ? n2 = ub(t2, o2) : (i2 = "auto" === o2 ? function(t3) {
      var e3 = eb(t3).autoInterval;
      return null != e3 ? e3 : eb(t3).autoInterval = t3.calculateCategoryInterval();
    }(t2) : o2, n2 = lb(t2, i2)), sb(r2, o2, { labels: n2, labelCategoryInterval: i2 }));
  }
  function ob(t2, e2) {
    return eb(t2)[e2] || (eb(t2)[e2] = []);
  }
  function ab(t2, e2) {
    for (var n2 = 0; n2 < t2.length; n2++)
      if (t2[n2].key === e2)
        return t2[n2].value;
  }
  function sb(t2, e2, n2) {
    return t2.push({ key: e2, value: n2 }), n2;
  }
  function lb(t2, e2, n2) {
    var i2 = D_(t2), r2 = t2.scale, o2 = r2.getExtent(), a2 = t2.getLabelModel(), s2 = [], l2 = Math.max((e2 || 0) + 1, 1), u2 = o2[0], h2 = r2.count();
    0 !== u2 && l2 > 1 && h2 / l2 > 2 && (u2 = Math.round(Math.ceil(u2 / l2) * l2));
    var c2 = P_(t2), p2 = a2.get("showMinLabel") || c2, d2 = a2.get("showMaxLabel") || c2;
    p2 && u2 !== o2[0] && g2(o2[0]);
    for (var f2 = u2; f2 <= o2[1]; f2 += l2)
      g2(f2);
    function g2(t3) {
      var e3 = { value: t3 };
      s2.push(n2 ? t3 : { formattedLabel: i2(e3), rawLabel: r2.getLabel(e3), tickValue: t3 });
    }
    return d2 && f2 - l2 !== o2[1] && g2(o2[1]), s2;
  }
  function ub(t2, e2, n2) {
    var i2 = t2.scale, r2 = D_(t2), o2 = [];
    return N(i2.getTicks(), function(t3) {
      var a2 = i2.getLabel(t3), s2 = t3.value;
      e2(t3.value, a2) && o2.push(n2 ? s2 : { formattedLabel: r2(t3), rawLabel: a2, tickValue: s2 });
    }), o2;
  }
  var hb = [0, 1];
  var cb = function() {
    function t2(t3, e2, n2) {
      this.onBand = false, this.inverse = false, this.dim = t3, this.scale = e2, this._extent = n2 || [0, 0];
    }
    return t2.prototype.contain = function(t3) {
      var e2 = this._extent, n2 = Math.min(e2[0], e2[1]), i2 = Math.max(e2[0], e2[1]);
      return t3 >= n2 && t3 <= i2;
    }, t2.prototype.containData = function(t3) {
      return this.scale.contain(t3);
    }, t2.prototype.getExtent = function() {
      return this._extent.slice();
    }, t2.prototype.getPixelPrecision = function(t3) {
      return Kr(t3 || this.scale.getExtent(), this._extent);
    }, t2.prototype.setExtent = function(t3, e2) {
      var n2 = this._extent;
      n2[0] = t3, n2[1] = e2;
    }, t2.prototype.dataToCoord = function(t3, e2) {
      var n2 = this._extent, i2 = this.scale;
      return t3 = i2.normalize(t3), this.onBand && "ordinal" === i2.type && pb(n2 = n2.slice(), i2.count()), Yr(t3, hb, n2, e2);
    }, t2.prototype.coordToData = function(t3, e2) {
      var n2 = this._extent, i2 = this.scale;
      this.onBand && "ordinal" === i2.type && pb(n2 = n2.slice(), i2.count());
      var r2 = Yr(t3, n2, hb, e2);
      return this.scale.scale(r2);
    }, t2.prototype.pointToData = function(t3, e2) {
    }, t2.prototype.getTicksCoords = function(t3) {
      var e2 = (t3 = t3 || {}).tickModel || this.getTickModel(), n2 = E(ib(this, e2).ticks, function(t4) {
        return { coord: this.dataToCoord("ordinal" === this.scale.type ? this.scale.getRawOrdinalNumber(t4) : t4), tickValue: t4 };
      }, this);
      return function(t4, e3, n3, i2) {
        var r2 = e3.length;
        if (!t4.onBand || n3 || !r2)
          return;
        var o2, a2, s2 = t4.getExtent();
        if (1 === r2)
          e3[0].coord = s2[0], o2 = e3[1] = { coord: s2[1] };
        else {
          var l2 = e3[r2 - 1].tickValue - e3[0].tickValue, u2 = (e3[r2 - 1].coord - e3[0].coord) / l2;
          N(e3, function(t5) {
            t5.coord -= u2 / 2;
          }), a2 = 1 + t4.scale.getExtent()[1] - e3[r2 - 1].tickValue, o2 = { coord: e3[r2 - 1].coord + u2 * a2 }, e3.push(o2);
        }
        var h2 = s2[0] > s2[1];
        c2(e3[0].coord, s2[0]) && (i2 ? e3[0].coord = s2[0] : e3.shift());
        i2 && c2(s2[0], e3[0].coord) && e3.unshift({ coord: s2[0] });
        c2(s2[1], o2.coord) && (i2 ? o2.coord = s2[1] : e3.pop());
        i2 && c2(o2.coord, s2[1]) && e3.push({ coord: s2[1] });
        function c2(t5, e4) {
          return t5 = Ur(t5), e4 = Ur(e4), h2 ? t5 > e4 : t5 < e4;
        }
      }(this, n2, e2.get("alignWithLabel"), t3.clamp), n2;
    }, t2.prototype.getMinorTicksCoords = function() {
      if ("ordinal" === this.scale.type)
        return [];
      var t3 = this.model.getModel("minorTick").get("splitNumber");
      return t3 > 0 && t3 < 100 || (t3 = 5), E(this.scale.getMinorTicks(t3), function(t4) {
        return E(t4, function(t5) {
          return { coord: this.dataToCoord(t5), tickValue: t5 };
        }, this);
      }, this);
    }, t2.prototype.getViewLabels = function() {
      return nb(this).labels;
    }, t2.prototype.getLabelModel = function() {
      return this.model.getModel("axisLabel");
    }, t2.prototype.getTickModel = function() {
      return this.model.getModel("axisTick");
    }, t2.prototype.getBandWidth = function() {
      var t3 = this._extent, e2 = this.scale.getExtent(), n2 = e2[1] - e2[0] + (this.onBand ? 1 : 0);
      0 === n2 && (n2 = 1);
      var i2 = Math.abs(t3[1] - t3[0]);
      return Math.abs(i2) / n2;
    }, t2.prototype.calculateCategoryInterval = function() {
      return function(t3) {
        var e2 = function(t4) {
          var e3 = t4.getLabelModel();
          return { axisRotate: t4.getRotate ? t4.getRotate() : t4.isHorizontal && !t4.isHorizontal() ? 90 : 0, labelRotate: e3.get("rotate") || 0, font: e3.getFont() };
        }(t3), n2 = D_(t3), i2 = (e2.axisRotate - e2.labelRotate) / 180 * Math.PI, r2 = t3.scale, o2 = r2.getExtent(), a2 = r2.count();
        if (o2[1] - o2[0] < 1)
          return 0;
        var s2 = 1;
        a2 > 40 && (s2 = Math.max(1, Math.floor(a2 / 40)));
        for (var l2 = o2[0], u2 = t3.dataToCoord(l2 + 1) - t3.dataToCoord(l2), h2 = Math.abs(u2 * Math.cos(i2)), c2 = Math.abs(u2 * Math.sin(i2)), p2 = 0, d2 = 0; l2 <= o2[1]; l2 += s2) {
          var f2, g2, y2 = _r(n2({ value: l2 }), e2.font, "center", "top");
          f2 = 1.3 * y2.width, g2 = 1.3 * y2.height, p2 = Math.max(p2, f2, 7), d2 = Math.max(d2, g2, 7);
        }
        var v2 = p2 / h2, m2 = d2 / c2;
        isNaN(v2) && (v2 = 1 / 0), isNaN(m2) && (m2 = 1 / 0);
        var x2 = Math.max(0, Math.floor(Math.min(v2, m2))), _2 = eb(t3.model), b2 = t3.getExtent(), w2 = _2.lastAutoInterval, S2 = _2.lastTickCount;
        return null != w2 && null != S2 && Math.abs(w2 - x2) <= 1 && Math.abs(S2 - a2) <= 1 && w2 > x2 && _2.axisExtent0 === b2[0] && _2.axisExtent1 === b2[1] ? x2 = w2 : (_2.lastTickCount = a2, _2.lastAutoInterval = x2, _2.axisExtent0 = b2[0], _2.axisExtent1 = b2[1]), x2;
      }(this);
    }, t2;
  }();
  function pb(t2, e2) {
    var n2 = (t2[1] - t2[0]) / e2 / 2;
    t2[0] += n2, t2[1] -= n2;
  }
  function db(t2) {
    var e2 = Op.extend(t2);
    return Op.registerClass(e2), e2;
  }
  function fb(t2) {
    var e2 = Ig.extend(t2);
    return Ig.registerClass(e2), e2;
  }
  function gb(t2) {
    var e2 = vg.extend(t2);
    return vg.registerClass(e2), e2;
  }
  function yb(t2) {
    var e2 = Ag.extend(t2);
    return Ag.registerClass(e2), e2;
  }
  var vb = 2 * Math.PI;
  var mb = rs.CMD;
  var xb = ["top", "right", "bottom", "left"];
  function _b(t2, e2, n2, i2, r2) {
    var o2 = n2.width, a2 = n2.height;
    switch (t2) {
      case "top":
        i2.set(n2.x + o2 / 2, n2.y - e2), r2.set(0, -1);
        break;
      case "bottom":
        i2.set(n2.x + o2 / 2, n2.y + a2 + e2), r2.set(0, 1);
        break;
      case "left":
        i2.set(n2.x - e2, n2.y + a2 / 2), r2.set(-1, 0);
        break;
      case "right":
        i2.set(n2.x + o2 + e2, n2.y + a2 / 2), r2.set(1, 0);
    }
  }
  function bb(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    a2 -= t2, s2 -= e2;
    var u2 = Math.sqrt(a2 * a2 + s2 * s2), h2 = (a2 /= u2) * n2 + t2, c2 = (s2 /= u2) * n2 + e2;
    if (Math.abs(i2 - r2) % vb < 1e-4)
      return l2[0] = h2, l2[1] = c2, u2 - n2;
    if (o2) {
      var p2 = i2;
      i2 = us(r2), r2 = us(p2);
    } else
      i2 = us(i2), r2 = us(r2);
    i2 > r2 && (r2 += vb);
    var d2 = Math.atan2(s2, a2);
    if (d2 < 0 && (d2 += vb), d2 >= i2 && d2 <= r2 || d2 + vb >= i2 && d2 + vb <= r2)
      return l2[0] = h2, l2[1] = c2, u2 - n2;
    var f2 = n2 * Math.cos(i2) + t2, g2 = n2 * Math.sin(i2) + e2, y2 = n2 * Math.cos(r2) + t2, v2 = n2 * Math.sin(r2) + e2, m2 = (f2 - a2) * (f2 - a2) + (g2 - s2) * (g2 - s2), x2 = (y2 - a2) * (y2 - a2) + (v2 - s2) * (v2 - s2);
    return m2 < x2 ? (l2[0] = f2, l2[1] = g2, Math.sqrt(m2)) : (l2[0] = y2, l2[1] = v2, Math.sqrt(x2));
  }
  function wb(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2 = r2 - t2, u2 = o2 - e2, h2 = n2 - t2, c2 = i2 - e2, p2 = Math.sqrt(h2 * h2 + c2 * c2), d2 = (l2 * (h2 /= p2) + u2 * (c2 /= p2)) / p2;
    s2 && (d2 = Math.min(Math.max(d2, 0), 1)), d2 *= p2;
    var f2 = a2[0] = t2 + d2 * h2, g2 = a2[1] = e2 + d2 * c2;
    return Math.sqrt((f2 - r2) * (f2 - r2) + (g2 - o2) * (g2 - o2));
  }
  function Sb(t2, e2, n2, i2, r2, o2, a2) {
    n2 < 0 && (t2 += n2, n2 = -n2), i2 < 0 && (e2 += i2, i2 = -i2);
    var s2 = t2 + n2, l2 = e2 + i2, u2 = a2[0] = Math.min(Math.max(r2, t2), s2), h2 = a2[1] = Math.min(Math.max(o2, e2), l2);
    return Math.sqrt((u2 - r2) * (u2 - r2) + (h2 - o2) * (h2 - o2));
  }
  var Mb = [];
  function Ib(t2, e2, n2) {
    var i2 = Sb(e2.x, e2.y, e2.width, e2.height, t2.x, t2.y, Mb);
    return n2.set(Mb[0], Mb[1]), i2;
  }
  function Tb(t2, e2, n2) {
    for (var i2, r2, o2 = 0, a2 = 0, s2 = 0, l2 = 0, u2 = 1 / 0, h2 = e2.data, c2 = t2.x, p2 = t2.y, d2 = 0; d2 < h2.length; ) {
      var f2 = h2[d2++];
      1 === d2 && (s2 = o2 = h2[d2], l2 = a2 = h2[d2 + 1]);
      var g2 = u2;
      switch (f2) {
        case mb.M:
          o2 = s2 = h2[d2++], a2 = l2 = h2[d2++];
          break;
        case mb.L:
          g2 = wb(o2, a2, h2[d2], h2[d2 + 1], c2, p2, Mb, true), o2 = h2[d2++], a2 = h2[d2++];
          break;
        case mb.C:
          g2 = wn(o2, a2, h2[d2++], h2[d2++], h2[d2++], h2[d2++], h2[d2], h2[d2 + 1], c2, p2, Mb), o2 = h2[d2++], a2 = h2[d2++];
          break;
        case mb.Q:
          g2 = Dn(o2, a2, h2[d2++], h2[d2++], h2[d2], h2[d2 + 1], c2, p2, Mb), o2 = h2[d2++], a2 = h2[d2++];
          break;
        case mb.A:
          var y2 = h2[d2++], v2 = h2[d2++], m2 = h2[d2++], x2 = h2[d2++], _2 = h2[d2++], b2 = h2[d2++];
          d2 += 1;
          var w2 = !!(1 - h2[d2++]);
          i2 = Math.cos(_2) * m2 + y2, r2 = Math.sin(_2) * x2 + v2, d2 <= 1 && (s2 = i2, l2 = r2), g2 = bb(y2, v2, x2, _2, _2 + b2, w2, (c2 - y2) * x2 / m2 + y2, p2, Mb), o2 = Math.cos(_2 + b2) * m2 + y2, a2 = Math.sin(_2 + b2) * x2 + v2;
          break;
        case mb.R:
          g2 = Sb(s2 = o2 = h2[d2++], l2 = a2 = h2[d2++], h2[d2++], h2[d2++], c2, p2, Mb);
          break;
        case mb.Z:
          g2 = wb(o2, a2, s2, l2, c2, p2, Mb, true), o2 = s2, a2 = l2;
      }
      g2 < u2 && (u2 = g2, n2.set(Mb[0], Mb[1]));
    }
    return u2;
  }
  var Cb = new Ce();
  var Db = new Ce();
  var Ab = new Ce();
  var kb = new Ce();
  var Lb = new Ce();
  function Pb(t2, e2) {
    if (t2) {
      var n2 = t2.getTextGuideLine(), i2 = t2.getTextContent();
      if (i2 && n2) {
        var r2 = t2.textGuideLineConfig || {}, o2 = [[0, 0], [0, 0], [0, 0]], a2 = r2.candidates || xb, s2 = i2.getBoundingRect().clone();
        s2.applyTransform(i2.getComputedTransform());
        var l2 = 1 / 0, u2 = r2.anchor, h2 = t2.getComputedTransform(), c2 = h2 && Me([], h2), p2 = e2.get("length2") || 0;
        u2 && Ab.copy(u2);
        for (var d2 = 0; d2 < a2.length; d2++) {
          _b(a2[d2], 0, s2, Cb, kb), Ce.scaleAndAdd(Db, Cb, kb, p2), Db.transform(c2);
          var f2 = t2.getBoundingRect(), g2 = u2 ? u2.distance(Db) : t2 instanceof Ms ? Tb(Db, t2.path, Ab) : Ib(Db, f2, Ab);
          g2 < l2 && (l2 = g2, Db.transform(h2), Ab.transform(h2), Ab.toArray(o2[0]), Db.toArray(o2[1]), Cb.toArray(o2[2]));
        }
        Nb(o2, e2.get("minTurnAngle")), n2.setShape({ points: o2 });
      }
    }
  }
  var Ob = [];
  var Rb = new Ce();
  function Nb(t2, e2) {
    if (e2 <= 180 && e2 > 0) {
      e2 = e2 / 180 * Math.PI, Cb.fromArray(t2[0]), Db.fromArray(t2[1]), Ab.fromArray(t2[2]), Ce.sub(kb, Cb, Db), Ce.sub(Lb, Ab, Db);
      var n2 = kb.len(), i2 = Lb.len();
      if (!(n2 < 1e-3 || i2 < 1e-3)) {
        kb.scale(1 / n2), Lb.scale(1 / i2);
        var r2 = kb.dot(Lb);
        if (Math.cos(e2) < r2) {
          var o2 = wb(Db.x, Db.y, Ab.x, Ab.y, Cb.x, Cb.y, Ob, false);
          Rb.fromArray(Ob), Rb.scaleAndAdd(Lb, o2 / Math.tan(Math.PI - e2));
          var a2 = Ab.x !== Db.x ? (Rb.x - Db.x) / (Ab.x - Db.x) : (Rb.y - Db.y) / (Ab.y - Db.y);
          if (isNaN(a2))
            return;
          a2 < 0 ? Ce.copy(Rb, Db) : a2 > 1 && Ce.copy(Rb, Ab), Rb.toArray(t2[1]);
        }
      }
    }
  }
  function Eb(t2, e2, n2) {
    if (n2 <= 180 && n2 > 0) {
      n2 = n2 / 180 * Math.PI, Cb.fromArray(t2[0]), Db.fromArray(t2[1]), Ab.fromArray(t2[2]), Ce.sub(kb, Db, Cb), Ce.sub(Lb, Ab, Db);
      var i2 = kb.len(), r2 = Lb.len();
      if (!(i2 < 1e-3 || r2 < 1e-3)) {
        if (kb.scale(1 / i2), Lb.scale(1 / r2), kb.dot(e2) < Math.cos(n2)) {
          var o2 = wb(Db.x, Db.y, Ab.x, Ab.y, Cb.x, Cb.y, Ob, false);
          Rb.fromArray(Ob);
          var a2 = Math.PI / 2, s2 = a2 + Math.acos(Lb.dot(e2)) - n2;
          if (s2 >= a2)
            Ce.copy(Rb, Ab);
          else {
            Rb.scaleAndAdd(Lb, o2 / Math.tan(Math.PI / 2 - s2));
            var l2 = Ab.x !== Db.x ? (Rb.x - Db.x) / (Ab.x - Db.x) : (Rb.y - Db.y) / (Ab.y - Db.y);
            if (isNaN(l2))
              return;
            l2 < 0 ? Ce.copy(Rb, Db) : l2 > 1 && Ce.copy(Rb, Ab);
          }
          Rb.toArray(t2[1]);
        }
      }
    }
  }
  function zb(t2, e2, n2, i2) {
    var r2 = "normal" === n2, o2 = r2 ? t2 : t2.ensureState(n2);
    o2.ignore = e2;
    var a2 = i2.get("smooth");
    a2 && true === a2 && (a2 = 0.3), o2.shape = o2.shape || {}, a2 > 0 && (o2.shape.smooth = a2);
    var s2 = i2.getModel("lineStyle").getLineStyle();
    r2 ? t2.useStyle(s2) : o2.style = s2;
  }
  function Vb(t2, e2) {
    var n2 = e2.smooth, i2 = e2.points;
    if (i2)
      if (t2.moveTo(i2[0][0], i2[0][1]), n2 > 0 && i2.length >= 3) {
        var r2 = zt(i2[0], i2[1]), o2 = zt(i2[1], i2[2]);
        if (!r2 || !o2)
          return t2.lineTo(i2[1][0], i2[1][1]), void t2.lineTo(i2[2][0], i2[2][1]);
        var a2 = Math.min(r2, o2) * n2, s2 = Ft([], i2[1], i2[0], a2 / r2), l2 = Ft([], i2[1], i2[2], a2 / o2), u2 = Ft([], s2, l2, 0.5);
        t2.bezierCurveTo(s2[0], s2[1], s2[0], s2[1], u2[0], u2[1]), t2.bezierCurveTo(l2[0], l2[1], l2[0], l2[1], i2[2][0], i2[2][1]);
      } else
        for (var h2 = 1; h2 < i2.length; h2++)
          t2.lineTo(i2[h2][0], i2[h2][1]);
  }
  function Bb(t2, e2, n2) {
    var i2 = t2.getTextGuideLine(), r2 = t2.getTextContent();
    if (r2) {
      for (var o2 = e2.normal, a2 = o2.get("show"), s2 = r2.ignore, l2 = 0; l2 < ol.length; l2++) {
        var u2 = ol[l2], h2 = e2[u2], c2 = "normal" === u2;
        if (h2) {
          var p2 = h2.get("show");
          if ((c2 ? s2 : it(r2.states[u2] && r2.states[u2].ignore, s2)) || !it(p2, a2)) {
            var d2 = c2 ? i2 : i2 && i2.states[u2];
            d2 && (d2.ignore = true);
            continue;
          }
          i2 || (i2 = new Hu(), t2.setTextGuideLine(i2), c2 || !s2 && a2 || zb(i2, true, "normal", e2.normal), t2.stateProxy && (i2.stateProxy = t2.stateProxy)), zb(i2, false, u2, h2);
        }
      }
      if (i2) {
        A(i2.style, n2), i2.style.fill = null;
        var f2 = o2.get("showAbove");
        (t2.textGuideLineConfig = t2.textGuideLineConfig || {}).showAbove = f2 || false, i2.buildPath = Vb;
      }
    } else
      i2 && t2.removeTextGuideLine();
  }
  function Fb(t2, e2) {
    e2 = e2 || "labelLine";
    for (var n2 = { normal: t2.getModel(e2) }, i2 = 0; i2 < rl.length; i2++) {
      var r2 = rl[i2];
      n2[r2] = t2.getModel([r2, e2]);
    }
    return n2;
  }
  function Gb(t2) {
    for (var e2 = [], n2 = 0; n2 < t2.length; n2++) {
      var i2 = t2[n2];
      if (!i2.defaultAttr.ignore) {
        var r2 = i2.label, o2 = r2.getComputedTransform(), a2 = r2.getBoundingRect(), s2 = !o2 || o2[1] < 1e-5 && o2[2] < 1e-5, l2 = r2.style.margin || 0, u2 = a2.clone();
        u2.applyTransform(o2), u2.x -= l2 / 2, u2.y -= l2 / 2, u2.width += l2, u2.height += l2;
        var h2 = s2 ? new sh(a2, o2) : null;
        e2.push({ label: r2, labelLine: i2.labelLine, rect: u2, localRect: a2, obb: h2, priority: i2.priority, defaultAttr: i2.defaultAttr, layoutOption: i2.computedLayoutOption, axisAligned: s2, transform: o2 });
      }
    }
    return e2;
  }
  function Wb(t2, e2, n2, i2, r2, o2) {
    var a2 = t2.length;
    if (!(a2 < 2)) {
      t2.sort(function(t3, n3) {
        return t3.rect[e2] - n3.rect[e2];
      });
      for (var s2, l2 = 0, u2 = false, h2 = 0, c2 = 0; c2 < a2; c2++) {
        var p2 = t2[c2], d2 = p2.rect;
        (s2 = d2[e2] - l2) < 0 && (d2[e2] -= s2, p2.label[e2] -= s2, u2 = true), h2 += Math.max(-s2, 0), l2 = d2[e2] + d2[n2];
      }
      h2 > 0 && o2 && _2(-h2 / a2, 0, a2);
      var f2, g2, y2 = t2[0], v2 = t2[a2 - 1];
      return m2(), f2 < 0 && b2(-f2, 0.8), g2 < 0 && b2(g2, 0.8), m2(), x2(f2, g2, 1), x2(g2, f2, -1), m2(), f2 < 0 && w2(-f2), g2 < 0 && w2(g2), u2;
    }
    function m2() {
      f2 = y2.rect[e2] - i2, g2 = r2 - v2.rect[e2] - v2.rect[n2];
    }
    function x2(t3, e3, n3) {
      if (t3 < 0) {
        var i3 = Math.min(e3, -t3);
        if (i3 > 0) {
          _2(i3 * n3, 0, a2);
          var r3 = i3 + t3;
          r3 < 0 && b2(-r3 * n3, 1);
        } else
          b2(-t3 * n3, 1);
      }
    }
    function _2(n3, i3, r3) {
      0 !== n3 && (u2 = true);
      for (var o3 = i3; o3 < r3; o3++) {
        var a3 = t2[o3];
        a3.rect[e2] += n3, a3.label[e2] += n3;
      }
    }
    function b2(i3, r3) {
      for (var o3 = [], s3 = 0, l3 = 1; l3 < a2; l3++) {
        var u3 = t2[l3 - 1].rect, h3 = Math.max(t2[l3].rect[e2] - u3[e2] - u3[n2], 0);
        o3.push(h3), s3 += h3;
      }
      if (s3) {
        var c3 = Math.min(Math.abs(i3) / s3, r3);
        if (i3 > 0)
          for (l3 = 0; l3 < a2 - 1; l3++) {
            _2(o3[l3] * c3, 0, l3 + 1);
          }
        else
          for (l3 = a2 - 1; l3 > 0; l3--) {
            _2(-(o3[l3 - 1] * c3), l3, a2);
          }
      }
    }
    function w2(t3) {
      var e3 = t3 < 0 ? -1 : 1;
      t3 = Math.abs(t3);
      for (var n3 = Math.ceil(t3 / (a2 - 1)), i3 = 0; i3 < a2 - 1; i3++)
        if (e3 > 0 ? _2(n3, 0, i3 + 1) : _2(-n3, a2 - i3 - 1, a2), (t3 -= n3) <= 0)
          return;
    }
  }
  function Hb(t2, e2, n2, i2) {
    return Wb(t2, "y", "height", e2, n2, i2);
  }
  function Yb(t2) {
    var e2 = [];
    t2.sort(function(t3, e3) {
      return e3.priority - t3.priority;
    });
    var n2 = new Ee(0, 0, 0, 0);
    function i2(t3) {
      if (!t3.ignore) {
        var e3 = t3.ensureState("emphasis");
        null == e3.ignore && (e3.ignore = false);
      }
      t3.ignore = true;
    }
    for (var r2 = 0; r2 < t2.length; r2++) {
      var o2 = t2[r2], a2 = o2.axisAligned, s2 = o2.localRect, l2 = o2.transform, u2 = o2.label, h2 = o2.labelLine;
      n2.copy(o2.rect), n2.width -= 0.1, n2.height -= 0.1, n2.x += 0.05, n2.y += 0.05;
      for (var c2 = o2.obb, p2 = false, d2 = 0; d2 < e2.length; d2++) {
        var f2 = e2[d2];
        if (n2.intersect(f2.rect)) {
          if (a2 && f2.axisAligned) {
            p2 = true;
            break;
          }
          if (f2.obb || (f2.obb = new sh(f2.localRect, f2.transform)), c2 || (c2 = new sh(s2, l2)), c2.intersect(f2.obb)) {
            p2 = true;
            break;
          }
        }
      }
      p2 ? (i2(u2), h2 && i2(h2)) : (u2.attr("ignore", o2.defaultAttr.ignore), h2 && h2.attr("ignore", o2.defaultAttr.labelGuideIgnore), e2.push(o2));
    }
  }
  function Xb(t2) {
    if (t2) {
      for (var e2 = [], n2 = 0; n2 < t2.length; n2++)
        e2.push(t2[n2].slice());
      return e2;
    }
  }
  function Ub(t2, e2) {
    var n2 = t2.label, i2 = e2 && e2.getTextGuideLine();
    return { dataIndex: t2.dataIndex, dataType: t2.dataType, seriesIndex: t2.seriesModel.seriesIndex, text: t2.label.style.text, rect: t2.hostRect, labelRect: t2.rect, align: n2.style.align, verticalAlign: n2.style.verticalAlign, labelLinePoints: Xb(i2 && i2.shape.points) };
  }
  var Zb = ["align", "verticalAlign", "width", "height", "fontSize"];
  var jb = new fr();
  var qb = Po();
  var Kb = Po();
  function $b(t2, e2, n2) {
    for (var i2 = 0; i2 < n2.length; i2++) {
      var r2 = n2[i2];
      null != e2[r2] && (t2[r2] = e2[r2]);
    }
  }
  var Jb = ["x", "y", "rotation"];
  var Qb = function() {
    function t2() {
      this._labelList = [], this._chartViewList = [];
    }
    return t2.prototype.clearLabels = function() {
      this._labelList = [], this._chartViewList = [];
    }, t2.prototype._addLabel = function(t3, e2, n2, i2, r2) {
      var o2 = i2.style, a2 = i2.__hostTarget.textConfig || {}, s2 = i2.getComputedTransform(), l2 = i2.getBoundingRect().plain();
      Ee.applyTransform(l2, l2, s2), s2 ? jb.setLocalTransform(s2) : (jb.x = jb.y = jb.rotation = jb.originX = jb.originY = 0, jb.scaleX = jb.scaleY = 1), jb.rotation = us(jb.rotation);
      var u2, h2 = i2.__hostTarget;
      if (h2) {
        u2 = h2.getBoundingRect().plain();
        var c2 = h2.getComputedTransform();
        Ee.applyTransform(u2, u2, c2);
      }
      var p2 = u2 && h2.getTextGuideLine();
      this._labelList.push({ label: i2, labelLine: p2, seriesModel: n2, dataIndex: t3, dataType: e2, layoutOption: r2, computedLayoutOption: null, rect: l2, hostRect: u2, priority: u2 ? u2.width * u2.height : 0, defaultAttr: { ignore: i2.ignore, labelGuideIgnore: p2 && p2.ignore, x: jb.x, y: jb.y, scaleX: jb.scaleX, scaleY: jb.scaleY, rotation: jb.rotation, style: { x: o2.x, y: o2.y, align: o2.align, verticalAlign: o2.verticalAlign, width: o2.width, height: o2.height, fontSize: o2.fontSize }, cursor: i2.cursor, attachedPos: a2.position, attachedRot: a2.rotation } });
    }, t2.prototype.addLabelsOfSeries = function(t3) {
      var e2 = this;
      this._chartViewList.push(t3);
      var n2 = t3.__model, i2 = n2.get("labelLayout");
      (Y(i2) || F(i2).length) && t3.group.traverse(function(t4) {
        if (t4.ignore)
          return true;
        var r2 = t4.getTextContent(), o2 = Js(t4);
        r2 && !r2.disableLabelLayout && e2._addLabel(o2.dataIndex, o2.dataType, n2, r2, i2);
      });
    }, t2.prototype.updateLayoutConfig = function(t3) {
      var e2 = t3.getWidth(), n2 = t3.getHeight();
      function i2(t4, e3) {
        return function() {
          Pb(t4, e3);
        };
      }
      for (var r2 = 0; r2 < this._labelList.length; r2++) {
        var o2 = this._labelList[r2], a2 = o2.label, s2 = a2.__hostTarget, l2 = o2.defaultAttr, u2 = void 0;
        u2 = (u2 = Y(o2.layoutOption) ? o2.layoutOption(Ub(o2, s2)) : o2.layoutOption) || {}, o2.computedLayoutOption = u2;
        var h2 = Math.PI / 180;
        s2 && s2.setTextConfig({ local: false, position: null != u2.x || null != u2.y ? null : l2.attachedPos, rotation: null != u2.rotate ? u2.rotate * h2 : l2.attachedRot, offset: [u2.dx || 0, u2.dy || 0] });
        var c2 = false;
        if (null != u2.x ? (a2.x = Xr(u2.x, e2), a2.setStyle("x", 0), c2 = true) : (a2.x = l2.x, a2.setStyle("x", l2.style.x)), null != u2.y ? (a2.y = Xr(u2.y, n2), a2.setStyle("y", 0), c2 = true) : (a2.y = l2.y, a2.setStyle("y", l2.style.y)), u2.labelLinePoints) {
          var p2 = s2.getTextGuideLine();
          p2 && (p2.setShape({ points: u2.labelLinePoints }), c2 = false);
        }
        qb(a2).needsUpdateLabelLine = c2, a2.rotation = null != u2.rotate ? u2.rotate * h2 : l2.rotation, a2.scaleX = l2.scaleX, a2.scaleY = l2.scaleY;
        for (var d2 = 0; d2 < Zb.length; d2++) {
          var f2 = Zb[d2];
          a2.setStyle(f2, null != u2[f2] ? u2[f2] : l2.style[f2]);
        }
        if (u2.draggable) {
          if (a2.draggable = true, a2.cursor = "move", s2) {
            var g2 = o2.seriesModel;
            if (null != o2.dataIndex)
              g2 = o2.seriesModel.getData(o2.dataType).getItemModel(o2.dataIndex);
            a2.on("drag", i2(s2, g2.getModel("labelLine")));
          }
        } else
          a2.off("drag"), a2.cursor = l2.cursor;
      }
    }, t2.prototype.layout = function(t3) {
      var e2, n2 = t3.getWidth(), i2 = t3.getHeight(), r2 = Gb(this._labelList), o2 = V(r2, function(t4) {
        return "shiftX" === t4.layoutOption.moveOverlap;
      }), a2 = V(r2, function(t4) {
        return "shiftY" === t4.layoutOption.moveOverlap;
      });
      Wb(o2, "x", "width", 0, n2, e2), Hb(a2, 0, i2), Yb(V(r2, function(t4) {
        return t4.layoutOption.hideOverlap;
      }));
    }, t2.prototype.processLabelsOverall = function() {
      var t3 = this;
      N(this._chartViewList, function(e2) {
        var n2 = e2.__model, i2 = e2.ignoreLabelLineUpdate, r2 = n2.isAnimationEnabled();
        e2.group.traverse(function(e3) {
          if (e3.ignore && !e3.forceLabelAnimation)
            return true;
          var o2 = !i2, a2 = e3.getTextContent();
          !o2 && a2 && (o2 = qb(a2).needsUpdateLabelLine), o2 && t3._updateLabelLine(e3, n2), r2 && t3._animateLabels(e3, n2);
        });
      });
    }, t2.prototype._updateLabelLine = function(t3, e2) {
      var n2 = t3.getTextContent(), i2 = Js(t3), r2 = i2.dataIndex;
      if (n2 && null != r2) {
        var o2 = e2.getData(i2.dataType), a2 = o2.getItemModel(r2), s2 = {}, l2 = o2.getItemVisual(r2, "style");
        if (l2) {
          var u2 = o2.getVisual("drawType");
          s2.stroke = l2[u2];
        }
        var h2 = a2.getModel("labelLine");
        Bb(t3, Fb(a2), s2), Pb(t3, h2);
      }
    }, t2.prototype._animateLabels = function(t3, e2) {
      var n2 = t3.getTextContent(), i2 = t3.getTextGuideLine();
      if (n2 && (t3.forceLabelAnimation || !n2.ignore && !n2.invisible && !t3.disableLabelAnimation && !gh(t3))) {
        var r2 = (d2 = qb(n2)).oldLayout, o2 = Js(t3), a2 = o2.dataIndex, s2 = { x: n2.x, y: n2.y, rotation: n2.rotation }, l2 = e2.getData(o2.dataType);
        if (r2) {
          n2.attr(r2);
          var u2 = t3.prevStates;
          u2 && (L(u2, "select") >= 0 && n2.attr(d2.oldLayoutSelect), L(u2, "emphasis") >= 0 && n2.attr(d2.oldLayoutEmphasis)), dh(n2, s2, e2, a2);
        } else if (n2.attr(s2), !lc(n2).valueAnimation) {
          var h2 = it(n2.style.opacity, 1);
          n2.style.opacity = 0, fh(n2, { style: { opacity: h2 } }, e2, a2);
        }
        if (d2.oldLayout = s2, n2.states.select) {
          var c2 = d2.oldLayoutSelect = {};
          $b(c2, s2, Jb), $b(c2, n2.states.select, Jb);
        }
        if (n2.states.emphasis) {
          var p2 = d2.oldLayoutEmphasis = {};
          $b(p2, s2, Jb), $b(p2, n2.states.emphasis, Jb);
        }
        hc(n2, a2, l2, e2, e2);
      }
      if (i2 && !i2.ignore && !i2.invisible) {
        r2 = (d2 = Kb(i2)).oldLayout;
        var d2, f2 = { points: i2.shape.points };
        r2 ? (i2.attr({ shape: r2 }), dh(i2, { shape: f2 }, e2)) : (i2.setShape(f2), i2.style.strokePercent = 0, fh(i2, { style: { strokePercent: 1 } }, e2)), d2.oldLayout = f2;
      }
    }, t2;
  }();
  var tw = Po();
  var ew = Math.sin;
  var nw = Math.cos;
  var iw = Math.PI;
  var rw = 2 * Math.PI;
  var ow = 180 / iw;
  var aw = function() {
    function t2() {
    }
    return t2.prototype.reset = function(t3) {
      this._start = true, this._d = [], this._str = "", this._p = Math.pow(10, t3 || 4);
    }, t2.prototype.moveTo = function(t3, e2) {
      this._add("M", t3, e2);
    }, t2.prototype.lineTo = function(t3, e2) {
      this._add("L", t3, e2);
    }, t2.prototype.bezierCurveTo = function(t3, e2, n2, i2, r2, o2) {
      this._add("C", t3, e2, n2, i2, r2, o2);
    }, t2.prototype.quadraticCurveTo = function(t3, e2, n2, i2) {
      this._add("Q", t3, e2, n2, i2);
    }, t2.prototype.arc = function(t3, e2, n2, i2, r2, o2) {
      this.ellipse(t3, e2, n2, n2, 0, i2, r2, o2);
    }, t2.prototype.ellipse = function(t3, e2, n2, i2, r2, o2, a2, s2) {
      var l2 = a2 - o2, u2 = !s2, h2 = Math.abs(l2), c2 = ui(h2 - rw) || (u2 ? l2 >= rw : -l2 >= rw), p2 = l2 > 0 ? l2 % rw : l2 % rw + rw, d2 = false;
      d2 = !!c2 || !ui(h2) && p2 >= iw == !!u2;
      var f2 = t3 + n2 * nw(o2), g2 = e2 + i2 * ew(o2);
      this._start && this._add("M", f2, g2);
      var y2 = Math.round(r2 * ow);
      if (c2) {
        var v2 = 1 / this._p, m2 = (u2 ? 1 : -1) * (rw - v2);
        this._add("A", n2, i2, y2, 1, +u2, t3 + n2 * nw(o2 + m2), e2 + i2 * ew(o2 + m2)), v2 > 0.01 && this._add("A", n2, i2, y2, 0, +u2, f2, g2);
      } else {
        var x2 = t3 + n2 * nw(a2), _2 = e2 + i2 * ew(a2);
        this._add("A", n2, i2, y2, +d2, +u2, x2, _2);
      }
    }, t2.prototype.rect = function(t3, e2, n2, i2) {
      this._add("M", t3, e2), this._add("l", n2, 0), this._add("l", 0, i2), this._add("l", -n2, 0), this._add("Z");
    }, t2.prototype.closePath = function() {
      this._d.length > 0 && this._add("Z");
    }, t2.prototype._add = function(t3, e2, n2, i2, r2, o2, a2, s2, l2) {
      for (var u2 = [], h2 = this._p, c2 = 1; c2 < arguments.length; c2++) {
        var p2 = arguments[c2];
        if (isNaN(p2))
          return void (this._invalid = true);
        u2.push(Math.round(p2 * h2) / h2);
      }
      this._d.push(t3 + u2.join(" ")), this._start = "Z" === t3;
    }, t2.prototype.generateStr = function() {
      this._str = this._invalid ? "" : this._d.join(""), this._d = [];
    }, t2.prototype.getStr = function() {
      return this._str;
    }, t2;
  }();
  var sw = "none";
  var lw = Math.round;
  var uw = ["lineCap", "miterLimit", "lineJoin"];
  var hw = E(uw, function(t2) {
    return "stroke-" + t2.toLowerCase();
  });
  function cw(t2, e2, n2, i2) {
    var r2 = null == e2.opacity ? 1 : e2.opacity;
    if (n2 instanceof As)
      t2("opacity", r2);
    else {
      if (function(t3) {
        var e3 = t3.fill;
        return null != e3 && e3 !== sw;
      }(e2)) {
        var o2 = si(e2.fill);
        t2("fill", o2.color);
        var a2 = null != e2.fillOpacity ? e2.fillOpacity * o2.opacity * r2 : o2.opacity * r2;
        (i2 || a2 < 1) && t2("fill-opacity", a2);
      } else
        t2("fill", sw);
      if (function(t3) {
        var e3 = t3.stroke;
        return null != e3 && e3 !== sw;
      }(e2)) {
        var s2 = si(e2.stroke);
        t2("stroke", s2.color);
        var l2 = e2.strokeNoScale ? n2.getLineScale() : 1, u2 = l2 ? (e2.lineWidth || 0) / l2 : 0, h2 = null != e2.strokeOpacity ? e2.strokeOpacity * s2.opacity * r2 : s2.opacity * r2, c2 = e2.strokeFirst;
        if ((i2 || 1 !== u2) && t2("stroke-width", u2), (i2 || c2) && t2("paint-order", c2 ? "stroke" : "fill"), (i2 || h2 < 1) && t2("stroke-opacity", h2), e2.lineDash) {
          var p2 = jy(n2), d2 = p2[0], f2 = p2[1];
          d2 && (f2 = lw(f2 || 0), t2("stroke-dasharray", d2.join(",")), (f2 || i2) && t2("stroke-dashoffset", f2));
        } else
          i2 && t2("stroke-dasharray", sw);
        for (var g2 = 0; g2 < uw.length; g2++) {
          var y2 = uw[g2];
          if (i2 || e2[y2] !== bs[y2]) {
            var v2 = e2[y2] || bs[y2];
            v2 && t2(hw[g2], v2);
          }
        }
      } else
        i2 && t2("stroke", sw);
    }
  }
  var pw = "http://www.w3.org/2000/svg";
  var dw = "http://www.w3.org/1999/xlink";
  function fw(t2) {
    return document.createElementNS(pw, t2);
  }
  function gw(t2, e2, n2, i2, r2) {
    return { tag: t2, attrs: n2 || {}, children: i2, text: r2, key: e2 };
  }
  function yw(t2, e2) {
    var n2 = (e2 = e2 || {}).newline ? "\n" : "";
    return function t3(e3) {
      var i2 = e3.children, r2 = e3.tag, o2 = e3.attrs, a2 = e3.text;
      return function(t4, e4) {
        var n3 = [];
        if (e4)
          for (var i3 in e4) {
            var r3 = e4[i3], o3 = i3;
            false !== r3 && (true !== r3 && null != r3 && (o3 += '="' + r3 + '"'), n3.push(o3));
          }
        return "<" + t4 + " " + n3.join(" ") + ">";
      }(r2, o2) + ("style" !== r2 ? ie(a2) : a2 || "") + (i2 ? "" + n2 + E(i2, function(e4) {
        return t3(e4);
      }).join(n2) + n2 : "") + ("</" + r2 + ">");
    }(t2);
  }
  function vw(t2) {
    return { zrId: t2, shadowCache: {}, patternCache: {}, gradientCache: {}, clipPathCache: {}, defs: {}, cssNodes: {}, cssAnims: {}, cssClassIdx: 0, cssAnimIdx: 0, shadowIdx: 0, gradientIdx: 0, patternIdx: 0, clipPathIdx: 0 };
  }
  function mw(t2, e2, n2, i2) {
    return gw("svg", "root", { width: t2, height: e2, xmlns: pw, "xmlns:xlink": dw, version: "1.1", baseProfile: "full", viewBox: !!i2 && "0 0 " + t2 + " " + e2 }, n2);
  }
  var xw = { cubicIn: "0.32,0,0.67,0", cubicOut: "0.33,1,0.68,1", cubicInOut: "0.65,0,0.35,1", quadraticIn: "0.11,0,0.5,0", quadraticOut: "0.5,1,0.89,1", quadraticInOut: "0.45,0,0.55,1", quarticIn: "0.5,0,0.75,0", quarticOut: "0.25,1,0.5,1", quarticInOut: "0.76,0,0.24,1", quinticIn: "0.64,0,0.78,0", quinticOut: "0.22,1,0.36,1", quinticInOut: "0.83,0,0.17,1", sinusoidalIn: "0.12,0,0.39,0", sinusoidalOut: "0.61,1,0.88,1", sinusoidalInOut: "0.37,0,0.63,1", exponentialIn: "0.7,0,0.84,0", exponentialOut: "0.16,1,0.3,1", exponentialInOut: "0.87,0,0.13,1", circularIn: "0.55,0,1,0.45", circularOut: "0,0.55,0.45,1", circularInOut: "0.85,0,0.15,1" };
  var _w = "transform-origin";
  function bw(t2, e2, n2) {
    var i2 = D({}, t2.shape);
    D(i2, e2), t2.buildPath(n2, i2);
    var r2 = new aw();
    return r2.reset(xi(t2)), n2.rebuildPath(r2, 1), r2.generateStr(), r2.getStr();
  }
  function ww(t2, e2) {
    var n2 = e2.originX, i2 = e2.originY;
    (n2 || i2) && (t2[_w] = n2 + "px " + i2 + "px");
  }
  var Sw = { fill: "fill", opacity: "opacity", lineWidth: "stroke-width", lineDashOffset: "stroke-dashoffset" };
  function Mw(t2, e2) {
    var n2 = e2.zrId + "-ani-" + e2.cssAnimIdx++;
    return e2.cssAnims[n2] = t2, n2;
  }
  function Iw(t2) {
    return X(t2) ? xw[t2] ? "cubic-bezier(" + xw[t2] + ")" : Ln(t2) ? t2 : "" : "";
  }
  function Tw(t2, e2, n2, i2) {
    var r2 = t2.animators, o2 = r2.length, a2 = [];
    if (t2 instanceof Qu) {
      var s2 = function(t3, e3, n3) {
        var i3, r3, o3 = t3.shape.paths, a3 = {};
        if (N(o3, function(t4) {
          var e4 = vw(n3.zrId);
          e4.animation = true, Tw(t4, {}, e4, true);
          var o4 = e4.cssAnims, s4 = e4.cssNodes, l3 = F(o4), u3 = l3.length;
          if (u3) {
            var h3 = o4[r3 = l3[u3 - 1]];
            for (var c3 in h3) {
              var p3 = h3[c3];
              a3[c3] = a3[c3] || { d: "" }, a3[c3].d += p3.d || "";
            }
            for (var d3 in s4) {
              var f3 = s4[d3].animation;
              f3.indexOf(r3) >= 0 && (i3 = f3);
            }
          }
        }), i3) {
          e3.d = false;
          var s3 = Mw(a3, n3);
          return i3.replace(r3, s3);
        }
      }(t2, e2, n2);
      if (s2)
        a2.push(s2);
      else if (!o2)
        return;
    } else if (!o2)
      return;
    for (var l2 = {}, u2 = 0; u2 < o2; u2++) {
      var h2 = r2[u2], c2 = [h2.getMaxTime() / 1e3 + "s"], p2 = Iw(h2.getClip().easing), d2 = h2.getDelay();
      p2 ? c2.push(p2) : c2.push("linear"), d2 && c2.push(d2 / 1e3 + "s"), h2.getLoop() && c2.push("infinite");
      var f2 = c2.join(" ");
      l2[f2] = l2[f2] || [f2, []], l2[f2][1].push(h2);
    }
    function g2(r3) {
      var o3, a3 = r3[1], s3 = a3.length, l3 = {}, u3 = {}, h3 = {}, c3 = "animation-timing-function";
      function p3(t3, e3, n3) {
        for (var i3 = t3.getTracks(), r4 = t3.getMaxTime(), o4 = 0; o4 < i3.length; o4++) {
          var a4 = i3[o4];
          if (a4.needsAnimate()) {
            var s4 = a4.keyframes, l4 = a4.propName;
            if (n3 && (l4 = n3(l4)), l4)
              for (var u4 = 0; u4 < s4.length; u4++) {
                var h4 = s4[u4], p4 = Math.round(h4.time / r4 * 100) + "%", d4 = Iw(h4.easing), f4 = h4.rawValue;
                (X(f4) || Z(f4)) && (e3[p4] = e3[p4] || {}, e3[p4][l4] = h4.rawValue, d4 && (e3[p4][c3] = d4));
              }
          }
        }
      }
      for (var d3 = 0; d3 < s3; d3++) {
        (S2 = (w2 = a3[d3]).targetName) ? "shape" === S2 && p3(w2, u3) : !i2 && p3(w2, l3);
      }
      for (var f3 in l3) {
        var g3 = {};
        yr(g3, t2), D(g3, l3[f3]);
        var y3 = _i(g3), v3 = l3[f3][c3];
        h3[f3] = y3 ? { transform: y3 } : {}, ww(h3[f3], g3), v3 && (h3[f3][c3] = v3);
      }
      var m2 = true;
      for (var f3 in u3) {
        h3[f3] = h3[f3] || {};
        var x2 = !o3;
        v3 = u3[f3][c3];
        x2 && (o3 = new rs());
        var _2 = o3.len();
        o3.reset(), h3[f3].d = bw(t2, u3[f3], o3);
        var b2 = o3.len();
        if (!x2 && _2 !== b2) {
          m2 = false;
          break;
        }
        v3 && (h3[f3][c3] = v3);
      }
      if (!m2)
        for (var f3 in h3)
          delete h3[f3].d;
      if (!i2)
        for (d3 = 0; d3 < s3; d3++) {
          var w2, S2;
          "style" === (S2 = (w2 = a3[d3]).targetName) && p3(w2, h3, function(t3) {
            return Sw[t3];
          });
        }
      var M2, I2 = F(h3), T2 = true;
      for (d3 = 1; d3 < I2.length; d3++) {
        var C2 = I2[d3 - 1], A2 = I2[d3];
        if (h3[C2][_w] !== h3[A2][_w]) {
          T2 = false;
          break;
        }
        M2 = h3[C2][_w];
      }
      if (T2 && M2) {
        for (var f3 in h3)
          h3[f3][_w] && delete h3[f3][_w];
        e2[_w] = M2;
      }
      if (V(I2, function(t3) {
        return F(h3[t3]).length > 0;
      }).length)
        return Mw(h3, n2) + " " + r3[0] + " both";
    }
    for (var y2 in l2) {
      (s2 = g2(l2[y2])) && a2.push(s2);
    }
    if (a2.length) {
      var v2 = n2.zrId + "-cls-" + n2.cssClassIdx++;
      n2.cssNodes["." + v2] = { animation: a2.join(",") }, e2.class = v2;
    }
  }
  var Cw = Math.round;
  function Dw(t2) {
    return t2 && X(t2.src);
  }
  function Aw(t2) {
    return t2 && Y(t2.toDataURL);
  }
  function kw(t2, e2, n2, i2) {
    cw(function(r2, o2) {
      var a2 = "fill" === r2 || "stroke" === r2;
      a2 && vi(o2) ? Fw(e2, t2, r2, i2) : a2 && fi(o2) ? Gw(n2, t2, r2, i2) : t2[r2] = o2;
    }, e2, n2, false), function(t3, e3, n3) {
      var i3 = t3.style;
      if (function(t4) {
        return t4 && (t4.shadowBlur || t4.shadowOffsetX || t4.shadowOffsetY);
      }(i3)) {
        var r2 = function(t4) {
          var e4 = t4.style, n4 = t4.getGlobalScale();
          return [e4.shadowColor, (e4.shadowBlur || 0).toFixed(2), (e4.shadowOffsetX || 0).toFixed(2), (e4.shadowOffsetY || 0).toFixed(2), n4[0], n4[1]].join(",");
        }(t3), o2 = n3.shadowCache, a2 = o2[r2];
        if (!a2) {
          var s2 = t3.getGlobalScale(), l2 = s2[0], u2 = s2[1];
          if (!l2 || !u2)
            return;
          var h2 = i3.shadowOffsetX || 0, c2 = i3.shadowOffsetY || 0, p2 = i3.shadowBlur, d2 = si(i3.shadowColor), f2 = d2.opacity, g2 = d2.color, y2 = p2 / 2 / l2 + " " + p2 / 2 / u2;
          a2 = n3.zrId + "-s" + n3.shadowIdx++, n3.defs[a2] = gw("filter", a2, { id: a2, x: "-100%", y: "-100%", width: "300%", height: "300%" }, [gw("feDropShadow", "", { dx: h2 / l2, dy: c2 / u2, stdDeviation: y2, "flood-color": g2, "flood-opacity": f2 })]), o2[r2] = a2;
        }
        e3.filter = mi(a2);
      }
    }(n2, t2, i2);
  }
  function Lw(t2) {
    return ui(t2[0] - 1) && ui(t2[1]) && ui(t2[2]) && ui(t2[3] - 1);
  }
  function Pw(t2, e2, n2) {
    if (e2 && (!function(t3) {
      return ui(t3[4]) && ui(t3[5]);
    }(e2) || !Lw(e2))) {
      var i2 = n2 ? 10 : 1e4;
      t2.transform = Lw(e2) ? "translate(" + Cw(e2[4] * i2) / i2 + " " + Cw(e2[5] * i2) / i2 + ")" : function(t3) {
        return "matrix(" + hi(t3[0]) + "," + hi(t3[1]) + "," + hi(t3[2]) + "," + hi(t3[3]) + "," + ci(t3[4]) + "," + ci(t3[5]) + ")";
      }(e2);
    }
  }
  function Ow(t2, e2, n2) {
    for (var i2 = t2.points, r2 = [], o2 = 0; o2 < i2.length; o2++)
      r2.push(Cw(i2[o2][0] * n2) / n2), r2.push(Cw(i2[o2][1] * n2) / n2);
    e2.points = r2.join(" ");
  }
  function Rw(t2) {
    return !t2.smooth;
  }
  var Nw;
  var Ew;
  var zw = { circle: [(Nw = ["cx", "cy", "r"], Ew = E(Nw, function(t2) {
    return "string" == typeof t2 ? [t2, t2] : t2;
  }), function(t2, e2, n2) {
    for (var i2 = 0; i2 < Ew.length; i2++) {
      var r2 = Ew[i2], o2 = t2[r2[0]];
      null != o2 && (e2[r2[1]] = Cw(o2 * n2) / n2);
    }
  })], polyline: [Ow, Rw], polygon: [Ow, Rw] };
  function Vw(t2, e2) {
    var n2 = t2.style, i2 = t2.shape, r2 = zw[t2.type], o2 = {}, a2 = e2.animation, s2 = "path", l2 = t2.style.strokePercent, u2 = e2.compress && xi(t2) || 4;
    if (!r2 || e2.willUpdate || r2[1] && !r2[1](i2) || a2 && function(t3) {
      for (var e3 = t3.animators, n3 = 0; n3 < e3.length; n3++)
        if ("shape" === e3[n3].targetName)
          return true;
      return false;
    }(t2) || l2 < 1) {
      var h2 = !t2.path || t2.shapeChanged();
      t2.path || t2.createPathProxy();
      var c2 = t2.path;
      h2 && (c2.beginPath(), t2.buildPath(c2, t2.shape), t2.pathUpdated());
      var p2 = c2.getVersion(), d2 = t2, f2 = d2.__svgPathBuilder;
      d2.__svgPathVersion === p2 && f2 && l2 === d2.__svgPathStrokePercent || (f2 || (f2 = d2.__svgPathBuilder = new aw()), f2.reset(u2), c2.rebuildPath(f2, l2), f2.generateStr(), d2.__svgPathVersion = p2, d2.__svgPathStrokePercent = l2), o2.d = f2.getStr();
    } else {
      s2 = t2.type;
      var g2 = Math.pow(10, u2);
      r2[0](i2, o2, g2);
    }
    return Pw(o2, t2.transform), kw(o2, n2, t2, e2), e2.animation && Tw(t2, o2, e2), gw(s2, t2.id + "", o2);
  }
  function Bw(t2, e2) {
    return t2 instanceof Ms ? Vw(t2, e2) : t2 instanceof As ? function(t3, e3) {
      var n2 = t3.style, i2 = n2.image;
      if (i2 && !X(i2) && (Dw(i2) ? i2 = i2.src : Aw(i2) && (i2 = i2.toDataURL())), i2) {
        var r2 = n2.x || 0, o2 = n2.y || 0, a2 = { href: i2, width: n2.width, height: n2.height };
        return r2 && (a2.x = r2), o2 && (a2.y = o2), Pw(a2, t3.transform), kw(a2, n2, t3, e3), e3.animation && Tw(t3, a2, e3), gw("image", t3.id + "", a2);
      }
    }(t2, e2) : t2 instanceof Ts ? function(t3, e3) {
      var n2 = t3.style, i2 = n2.text;
      if (null != i2 && (i2 += ""), i2 && !isNaN(n2.x) && !isNaN(n2.y)) {
        var a2 = n2.font || o, s2 = n2.x || 0, l2 = function(t4, e4, n3) {
          return "top" === n3 ? t4 += e4 / 2 : "bottom" === n3 && (t4 -= e4 / 2), t4;
        }(n2.y || 0, Sr(a2), n2.textBaseline), u2 = { "dominant-baseline": "central", "text-anchor": pi[n2.textAlign] || n2.textAlign };
        if (Xs(n2)) {
          var h2 = "", c2 = n2.fontStyle, p2 = Hs(n2.fontSize);
          if (!parseFloat(p2))
            return;
          var d2 = n2.fontFamily || r, f2 = n2.fontWeight;
          h2 += "font-size:" + p2 + ";font-family:" + d2 + ";", c2 && "normal" !== c2 && (h2 += "font-style:" + c2 + ";"), f2 && "normal" !== f2 && (h2 += "font-weight:" + f2 + ";"), u2.style = h2;
        } else
          u2.style = "font: " + a2;
        return i2.match(/\s/) && (u2["xml:space"] = "preserve"), s2 && (u2.x = s2), l2 && (u2.y = l2), Pw(u2, t3.transform), kw(u2, n2, t3, e3), e3.animation && Tw(t3, u2, e3), gw("text", t3.id + "", u2, void 0, i2);
      }
    }(t2, e2) : void 0;
  }
  function Fw(t2, e2, n2, i2) {
    var r2, o2 = t2[n2], a2 = { gradientUnits: o2.global ? "userSpaceOnUse" : "objectBoundingBox" };
    if (gi(o2))
      r2 = "linearGradient", a2.x1 = o2.x, a2.y1 = o2.y, a2.x2 = o2.x2, a2.y2 = o2.y2;
    else {
      if (!yi(o2))
        return void 0;
      r2 = "radialGradient", a2.cx = it(o2.x, 0.5), a2.cy = it(o2.y, 0.5), a2.r = it(o2.r, 0.5);
    }
    for (var s2 = o2.colorStops, l2 = [], u2 = 0, h2 = s2.length; u2 < h2; ++u2) {
      var c2 = 100 * ci(s2[u2].offset) + "%", p2 = si(s2[u2].color), d2 = p2.color, f2 = p2.opacity, g2 = { offset: c2 };
      g2["stop-color"] = d2, f2 < 1 && (g2["stop-opacity"] = f2), l2.push(gw("stop", u2 + "", g2));
    }
    var y2 = yw(gw(r2, "", a2, l2)), v2 = i2.gradientCache, m2 = v2[y2];
    m2 || (m2 = i2.zrId + "-g" + i2.gradientIdx++, v2[y2] = m2, a2.id = m2, i2.defs[m2] = gw(r2, m2, a2, l2)), e2[n2] = mi(m2);
  }
  function Gw(t2, e2, n2, i2) {
    var r2, o2 = t2.style[n2], a2 = t2.getBoundingRect(), s2 = {}, l2 = o2.repeat, u2 = "no-repeat" === l2, h2 = "repeat-x" === l2, c2 = "repeat-y" === l2;
    if (di(o2)) {
      var p2 = o2.imageWidth, d2 = o2.imageHeight, f2 = void 0, g2 = o2.image;
      if (X(g2) ? f2 = g2 : Dw(g2) ? f2 = g2.src : Aw(g2) && (f2 = g2.toDataURL()), "undefined" == typeof Image) {
        var y2 = "Image width/height must been given explictly in svg-ssr renderer.";
        st(p2, y2), st(d2, y2);
      } else if (null == p2 || null == d2) {
        var v2 = function(t3, e3) {
          if (t3) {
            var n3 = t3.elm, i3 = p2 || e3.width, r3 = d2 || e3.height;
            "pattern" === t3.tag && (h2 ? (r3 = 1, i3 /= a2.width) : c2 && (i3 = 1, r3 /= a2.height)), t3.attrs.width = i3, t3.attrs.height = r3, n3 && (n3.setAttribute("width", i3), n3.setAttribute("height", r3));
          }
        }, m2 = na(f2, null, t2, function(t3) {
          u2 || v2(w2, t3), v2(r2, t3);
        });
        m2 && m2.width && m2.height && (p2 = p2 || m2.width, d2 = d2 || m2.height);
      }
      r2 = gw("image", "img", { href: f2, width: p2, height: d2 }), s2.width = p2, s2.height = d2;
    } else
      o2.svgElement && (r2 = I(o2.svgElement), s2.width = o2.svgWidth, s2.height = o2.svgHeight);
    if (r2) {
      var x2, _2;
      u2 ? x2 = _2 = 1 : h2 ? (_2 = 1, x2 = s2.width / a2.width) : c2 ? (x2 = 1, _2 = s2.height / a2.height) : s2.patternUnits = "userSpaceOnUse", null == x2 || isNaN(x2) || (s2.width = x2), null == _2 || isNaN(_2) || (s2.height = _2);
      var b2 = _i(o2);
      b2 && (s2.patternTransform = b2);
      var w2 = gw("pattern", "", s2, [r2]), S2 = yw(w2), M2 = i2.patternCache, T2 = M2[S2];
      T2 || (T2 = i2.zrId + "-p" + i2.patternIdx++, M2[S2] = T2, s2.id = T2, w2 = i2.defs[T2] = gw("pattern", T2, s2, [r2])), e2[n2] = mi(T2);
    }
  }
  function Ww(t2, e2, n2) {
    var i2 = n2.clipPathCache, r2 = n2.defs, o2 = i2[t2.id];
    if (!o2) {
      var a2 = { id: o2 = n2.zrId + "-c" + n2.clipPathIdx++ };
      i2[t2.id] = o2, r2[o2] = gw("clipPath", o2, a2, [Vw(t2, n2)]);
    }
    e2["clip-path"] = mi(o2);
  }
  function Hw(t2) {
    return document.createTextNode(t2);
  }
  function Yw(t2, e2, n2) {
    t2.insertBefore(e2, n2);
  }
  function Xw(t2, e2) {
    t2.removeChild(e2);
  }
  function Uw(t2, e2) {
    t2.appendChild(e2);
  }
  function Zw(t2) {
    return t2.parentNode;
  }
  function jw(t2) {
    return t2.nextSibling;
  }
  function qw(t2, e2) {
    t2.textContent = e2;
  }
  var Kw = gw("", "");
  function $w(t2) {
    return void 0 === t2;
  }
  function Jw(t2) {
    return void 0 !== t2;
  }
  function Qw(t2, e2, n2) {
    for (var i2 = {}, r2 = e2; r2 <= n2; ++r2) {
      var o2 = t2[r2].key;
      void 0 !== o2 && (i2[o2] = r2);
    }
    return i2;
  }
  function tS(t2, e2) {
    var n2 = t2.key === e2.key;
    return t2.tag === e2.tag && n2;
  }
  function eS(t2) {
    var e2, n2 = t2.children, i2 = t2.tag;
    if (Jw(i2)) {
      var r2 = t2.elm = fw(i2);
      if (rS(Kw, t2), H(n2))
        for (e2 = 0; e2 < n2.length; ++e2) {
          var o2 = n2[e2];
          null != o2 && Uw(r2, eS(o2));
        }
      else
        Jw(t2.text) && !j(t2.text) && Uw(r2, Hw(t2.text));
    } else
      t2.elm = Hw(t2.text);
    return t2.elm;
  }
  function nS(t2, e2, n2, i2, r2) {
    for (; i2 <= r2; ++i2) {
      var o2 = n2[i2];
      null != o2 && Yw(t2, eS(o2), e2);
    }
  }
  function iS(t2, e2, n2, i2) {
    for (; n2 <= i2; ++n2) {
      var r2 = e2[n2];
      if (null != r2)
        if (Jw(r2.tag))
          Xw(Zw(r2.elm), r2.elm);
        else
          Xw(t2, r2.elm);
    }
  }
  function rS(t2, e2) {
    var n2, i2 = e2.elm, r2 = t2 && t2.attrs || {}, o2 = e2.attrs || {};
    if (r2 !== o2) {
      for (n2 in o2) {
        var a2 = o2[n2];
        r2[n2] !== a2 && (true === a2 ? i2.setAttribute(n2, "") : false === a2 ? i2.removeAttribute(n2) : 120 !== n2.charCodeAt(0) ? i2.setAttribute(n2, a2) : "xmlns:xlink" === n2 || "xmlns" === n2 ? i2.setAttributeNS("http://www.w3.org/2000/xmlns/", n2, a2) : 58 === n2.charCodeAt(3) ? i2.setAttributeNS("http://www.w3.org/XML/1998/namespace", n2, a2) : 58 === n2.charCodeAt(5) ? i2.setAttributeNS(dw, n2, a2) : i2.setAttribute(n2, a2));
      }
      for (n2 in r2)
        n2 in o2 || i2.removeAttribute(n2);
    }
  }
  function oS(t2, e2) {
    var n2 = e2.elm = t2.elm, i2 = t2.children, r2 = e2.children;
    t2 !== e2 && (rS(t2, e2), $w(e2.text) ? Jw(i2) && Jw(r2) ? i2 !== r2 && function(t3, e3, n3) {
      for (var i3, r3, o2, a2 = 0, s2 = 0, l2 = e3.length - 1, u2 = e3[0], h2 = e3[l2], c2 = n3.length - 1, p2 = n3[0], d2 = n3[c2]; a2 <= l2 && s2 <= c2; )
        null == u2 ? u2 = e3[++a2] : null == h2 ? h2 = e3[--l2] : null == p2 ? p2 = n3[++s2] : null == d2 ? d2 = n3[--c2] : tS(u2, p2) ? (oS(u2, p2), u2 = e3[++a2], p2 = n3[++s2]) : tS(h2, d2) ? (oS(h2, d2), h2 = e3[--l2], d2 = n3[--c2]) : tS(u2, d2) ? (oS(u2, d2), Yw(t3, u2.elm, jw(h2.elm)), u2 = e3[++a2], d2 = n3[--c2]) : tS(h2, p2) ? (oS(h2, p2), Yw(t3, h2.elm, u2.elm), h2 = e3[--l2], p2 = n3[++s2]) : ($w(i3) && (i3 = Qw(e3, a2, l2)), $w(r3 = i3[p2.key]) || (o2 = e3[r3]).tag !== p2.tag ? Yw(t3, eS(p2), u2.elm) : (oS(o2, p2), e3[r3] = void 0, Yw(t3, o2.elm, u2.elm)), p2 = n3[++s2]);
      (a2 <= l2 || s2 <= c2) && (a2 > l2 ? nS(t3, null == n3[c2 + 1] ? null : n3[c2 + 1].elm, n3, s2, c2) : iS(t3, e3, a2, l2));
    }(n2, i2, r2) : Jw(r2) ? (Jw(t2.text) && qw(n2, ""), nS(n2, null, r2, 0, r2.length - 1)) : Jw(i2) ? iS(n2, i2, 0, i2.length - 1) : Jw(t2.text) && qw(n2, "") : t2.text !== e2.text && (Jw(i2) && iS(n2, i2, 0, i2.length - 1), qw(n2, e2.text)));
  }
  var aS = 0;
  var sS = function() {
    function t2(t3, e2, n2) {
      if (this.type = "svg", this.refreshHover = lS(), this.configLayer = lS(), this.storage = e2, this._opts = n2 = D({}, n2), this.root = t3, this._id = "zr" + aS++, this._oldVNode = mw(n2.width, n2.height), t3 && !n2.ssr) {
        var i2 = this._viewport = document.createElement("div");
        i2.style.cssText = "position:relative;overflow:hidden";
        var r2 = this._svgDom = this._oldVNode.elm = fw("svg");
        rS(null, this._oldVNode), i2.appendChild(r2), t3.appendChild(i2);
      }
      this.resize(n2.width, n2.height);
    }
    return t2.prototype.getType = function() {
      return this.type;
    }, t2.prototype.getViewportRoot = function() {
      return this._viewport;
    }, t2.prototype.getViewportRootOffset = function() {
      var t3 = this.getViewportRoot();
      if (t3)
        return { offsetLeft: t3.offsetLeft || 0, offsetTop: t3.offsetTop || 0 };
    }, t2.prototype.getSvgDom = function() {
      return this._svgDom;
    }, t2.prototype.refresh = function() {
      if (this.root) {
        var t3 = this.renderToVNode({ willUpdate: true });
        t3.attrs.style = "position:absolute;left:0;top:0;user-select:none", function(t4, e2) {
          if (tS(t4, e2))
            oS(t4, e2);
          else {
            var n2 = t4.elm, i2 = Zw(n2);
            eS(e2), null !== i2 && (Yw(i2, e2.elm, jw(n2)), iS(i2, [t4], 0, 0));
          }
        }(this._oldVNode, t3), this._oldVNode = t3;
      }
    }, t2.prototype.renderOneToVNode = function(t3) {
      return Bw(t3, vw(this._id));
    }, t2.prototype.renderToVNode = function(t3) {
      t3 = t3 || {};
      var e2 = this.storage.getDisplayList(true), n2 = this._width, i2 = this._height, r2 = vw(this._id);
      r2.animation = t3.animation, r2.willUpdate = t3.willUpdate, r2.compress = t3.compress;
      var o2 = [], a2 = this._bgVNode = function(t4, e3, n3, i3) {
        var r3;
        if (n3 && "none" !== n3)
          if (r3 = gw("rect", "bg", { width: t4, height: e3, x: "0", y: "0", id: "0" }), vi(n3))
            Fw({ fill: n3 }, r3.attrs, "fill", i3);
          else if (fi(n3))
            Gw({ style: { fill: n3 }, dirty: _t, getBoundingRect: function() {
              return { width: t4, height: e3 };
            } }, r3.attrs, "fill", i3);
          else {
            var o3 = si(n3), a3 = o3.color, s3 = o3.opacity;
            r3.attrs.fill = a3, s3 < 1 && (r3.attrs["fill-opacity"] = s3);
          }
        return r3;
      }(n2, i2, this._backgroundColor, r2);
      a2 && o2.push(a2);
      var s2 = t3.compress ? null : this._mainVNode = gw("g", "main", {}, []);
      this._paintList(e2, r2, s2 ? s2.children : o2), s2 && o2.push(s2);
      var l2 = E(F(r2.defs), function(t4) {
        return r2.defs[t4];
      });
      if (l2.length && o2.push(gw("defs", "defs", {}, l2)), t3.animation) {
        var u2 = function(t4, e3, n3) {
          var i3 = (n3 = n3 || {}).newline ? "\n" : "", r3 = " {" + i3, o3 = i3 + "}", a3 = E(F(t4), function(e4) {
            return e4 + r3 + E(F(t4[e4]), function(n4) {
              return n4 + ":" + t4[e4][n4] + ";";
            }).join(i3) + o3;
          }).join(i3), s3 = E(F(e3), function(t5) {
            return "@keyframes " + t5 + r3 + E(F(e3[t5]), function(n4) {
              return n4 + r3 + E(F(e3[t5][n4]), function(i4) {
                var r4 = e3[t5][n4][i4];
                return "d" === i4 && (r4 = 'path("' + r4 + '")'), i4 + ":" + r4 + ";";
              }).join(i3) + o3;
            }).join(i3) + o3;
          }).join(i3);
          return a3 || s3 ? ["<![CDATA[", a3, s3, "]]>"].join(i3) : "";
        }(r2.cssNodes, r2.cssAnims, { newline: true });
        if (u2) {
          var h2 = gw("style", "stl", {}, [], u2);
          o2.push(h2);
        }
      }
      return mw(n2, i2, o2, t3.useViewBox);
    }, t2.prototype.renderToString = function(t3) {
      return t3 = t3 || {}, yw(this.renderToVNode({ animation: it(t3.cssAnimation, true), willUpdate: false, compress: true, useViewBox: it(t3.useViewBox, true) }), { newline: true });
    }, t2.prototype.setBackgroundColor = function(t3) {
      this._backgroundColor = t3;
    }, t2.prototype.getSvgRoot = function() {
      return this._mainVNode && this._mainVNode.elm;
    }, t2.prototype._paintList = function(t3, e2, n2) {
      for (var i2, r2, o2 = t3.length, a2 = [], s2 = 0, l2 = 0, u2 = 0; u2 < o2; u2++) {
        var h2 = t3[u2];
        if (!h2.invisible) {
          var c2 = h2.__clipPaths, p2 = c2 && c2.length || 0, d2 = r2 && r2.length || 0, f2 = void 0;
          for (f2 = Math.max(p2 - 1, d2 - 1); f2 >= 0 && (!c2 || !r2 || c2[f2] !== r2[f2]); f2--)
            ;
          for (var g2 = d2 - 1; g2 > f2; g2--)
            i2 = a2[--s2 - 1];
          for (var y2 = f2 + 1; y2 < p2; y2++) {
            var v2 = {};
            Ww(c2[y2], v2, e2);
            var m2 = gw("g", "clip-g-" + l2++, v2, []);
            (i2 ? i2.children : n2).push(m2), a2[s2++] = m2, i2 = m2;
          }
          r2 = c2;
          var x2 = Bw(h2, e2);
          x2 && (i2 ? i2.children : n2).push(x2);
        }
      }
    }, t2.prototype.resize = function(t3, e2) {
      var n2 = this._opts, i2 = this.root, r2 = this._viewport;
      if (null != t3 && (n2.width = t3), null != e2 && (n2.height = e2), i2 && r2 && (r2.style.display = "none", t3 = Zy(i2, 0, n2), e2 = Zy(i2, 1, n2), r2.style.display = ""), this._width !== t3 || this._height !== e2) {
        if (this._width = t3, this._height = e2, r2) {
          var o2 = r2.style;
          o2.width = t3 + "px", o2.height = e2 + "px";
        }
        if (fi(this._backgroundColor))
          this.refresh();
        else {
          var a2 = this._svgDom;
          a2 && (a2.setAttribute("width", t3), a2.setAttribute("height", e2));
          var s2 = this._bgVNode && this._bgVNode.elm;
          s2 && (s2.setAttribute("width", t3), s2.setAttribute("height", e2));
        }
      }
    }, t2.prototype.getWidth = function() {
      return this._width;
    }, t2.prototype.getHeight = function() {
      return this._height;
    }, t2.prototype.dispose = function() {
      this.root && (this.root.innerHTML = ""), this._svgDom = this._viewport = this.storage = this._oldVNode = this._bgVNode = this._mainVNode = null;
    }, t2.prototype.clear = function() {
      this._svgDom && (this._svgDom.innerHTML = null), this._oldVNode = null;
    }, t2.prototype.toDataURL = function(t3) {
      var e2 = this.renderToString(), n2 = "data:image/svg+xml;";
      return t3 ? (e2 = bi(e2)) && n2 + "base64," + e2 : n2 + "charset=UTF-8," + encodeURIComponent(e2);
    }, t2;
  }();
  function lS(t2) {
    return function() {
    };
  }
  function uS(t2, e2, n2) {
    var i2 = u.createCanvas(), r2 = e2.getWidth(), o2 = e2.getHeight(), a2 = i2.style;
    return a2 && (a2.position = "absolute", a2.left = "0", a2.top = "0", a2.width = r2 + "px", a2.height = o2 + "px", i2.setAttribute("data-zr-dom-id", t2)), i2.width = r2 * n2, i2.height = o2 * n2, i2;
  }
  var hS = function(t2) {
    function n2(e2, n3, i2) {
      var r2, o2 = t2.call(this) || this;
      o2.motionBlur = false, o2.lastFrameAlpha = 0.7, o2.dpr = 1, o2.virtual = false, o2.config = {}, o2.incremental = false, o2.zlevel = 0, o2.maxRepaintRectCount = 5, o2.__dirty = true, o2.__firstTimePaint = true, o2.__used = false, o2.__drawIndex = 0, o2.__startIndex = 0, o2.__endIndex = 0, o2.__prevStartIndex = null, o2.__prevEndIndex = null, i2 = i2 || rr, "string" == typeof e2 ? r2 = uS(e2, n3, i2) : j(e2) && (e2 = (r2 = e2).id), o2.id = e2, o2.dom = r2;
      var a2 = r2.style;
      return a2 && (mt(r2), r2.onselectstart = function() {
        return false;
      }, a2.padding = "0", a2.margin = "0", a2.borderWidth = "0"), o2.painter = n3, o2.dpr = i2, o2;
    }
    return e(n2, t2), n2.prototype.getElementCount = function() {
      return this.__endIndex - this.__startIndex;
    }, n2.prototype.afterBrush = function() {
      this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
    }, n2.prototype.initContext = function() {
      this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
    }, n2.prototype.setUnpainted = function() {
      this.__firstTimePaint = true;
    }, n2.prototype.createBackBuffer = function() {
      var t3 = this.dpr;
      this.domBack = uS("back-" + this.id, this.painter, t3), this.ctxBack = this.domBack.getContext("2d"), 1 !== t3 && this.ctxBack.scale(t3, t3);
    }, n2.prototype.createRepaintRects = function(t3, e2, n3, i2) {
      if (this.__firstTimePaint)
        return this.__firstTimePaint = false, null;
      var r2, o2 = [], a2 = this.maxRepaintRectCount, s2 = false, l2 = new Ee(0, 0, 0, 0);
      function u2(t4) {
        if (t4.isFinite() && !t4.isZero())
          if (0 === o2.length) {
            (e3 = new Ee(0, 0, 0, 0)).copy(t4), o2.push(e3);
          } else {
            for (var e3, n4 = false, i3 = 1 / 0, r3 = 0, u3 = 0; u3 < o2.length; ++u3) {
              var h3 = o2[u3];
              if (h3.intersect(t4)) {
                var c3 = new Ee(0, 0, 0, 0);
                c3.copy(h3), c3.union(t4), o2[u3] = c3, n4 = true;
                break;
              }
              if (s2) {
                l2.copy(t4), l2.union(h3);
                var p3 = t4.width * t4.height, d3 = h3.width * h3.height, f3 = l2.width * l2.height - p3 - d3;
                f3 < i3 && (i3 = f3, r3 = u3);
              }
            }
            if (s2 && (o2[r3].union(t4), n4 = true), !n4)
              (e3 = new Ee(0, 0, 0, 0)).copy(t4), o2.push(e3);
            s2 || (s2 = o2.length >= a2);
          }
      }
      for (var h2 = this.__startIndex; h2 < this.__endIndex; ++h2) {
        if (d2 = t3[h2]) {
          var c2 = d2.shouldBePainted(n3, i2, true, true);
          (f2 = d2.__isRendered && (1 & d2.__dirty || !c2) ? d2.getPrevPaintRect() : null) && u2(f2);
          var p2 = c2 && (1 & d2.__dirty || !d2.__isRendered) ? d2.getPaintRect() : null;
          p2 && u2(p2);
        }
      }
      for (h2 = this.__prevStartIndex; h2 < this.__prevEndIndex; ++h2) {
        var d2, f2;
        c2 = (d2 = e2[h2]).shouldBePainted(n3, i2, true, true);
        if (d2 && (!c2 || !d2.__zr) && d2.__isRendered)
          (f2 = d2.getPrevPaintRect()) && u2(f2);
      }
      do {
        r2 = false;
        for (h2 = 0; h2 < o2.length; )
          if (o2[h2].isZero())
            o2.splice(h2, 1);
          else {
            for (var g2 = h2 + 1; g2 < o2.length; )
              o2[h2].intersect(o2[g2]) ? (r2 = true, o2[h2].union(o2[g2]), o2.splice(g2, 1)) : g2++;
            h2++;
          }
      } while (r2);
      return this._paintRects = o2, o2;
    }, n2.prototype.debugGetPaintRects = function() {
      return (this._paintRects || []).slice();
    }, n2.prototype.resize = function(t3, e2) {
      var n3 = this.dpr, i2 = this.dom, r2 = i2.style, o2 = this.domBack;
      r2 && (r2.width = t3 + "px", r2.height = e2 + "px"), i2.width = t3 * n3, i2.height = e2 * n3, o2 && (o2.width = t3 * n3, o2.height = e2 * n3, 1 !== n3 && this.ctxBack.scale(n3, n3));
    }, n2.prototype.clear = function(t3, e2, n3) {
      var i2 = this.dom, r2 = this.ctx, o2 = i2.width, a2 = i2.height;
      e2 = e2 || this.clearColor;
      var s2 = this.motionBlur && !t3, l2 = this.lastFrameAlpha, u2 = this.dpr, h2 = this;
      s2 && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(i2, 0, 0, o2 / u2, a2 / u2));
      var c2 = this.domBack;
      function p2(t4, n4, i3, o3) {
        if (r2.clearRect(t4, n4, i3, o3), e2 && "transparent" !== e2) {
          var a3 = void 0;
          if (J(e2))
            a3 = (e2.global || e2.__width === i3 && e2.__height === o3) && e2.__canvasGradient || Xy(r2, e2, { x: 0, y: 0, width: i3, height: o3 }), e2.__canvasGradient = a3, e2.__width = i3, e2.__height = o3;
          else
            Q(e2) && (e2.scaleX = e2.scaleX || u2, e2.scaleY = e2.scaleY || u2, a3 = ev(r2, e2, { dirty: function() {
              h2.setUnpainted(), h2.__painter.refresh();
            } }));
          r2.save(), r2.fillStyle = a3 || e2, r2.fillRect(t4, n4, i3, o3), r2.restore();
        }
        s2 && (r2.save(), r2.globalAlpha = l2, r2.drawImage(c2, t4, n4, i3, o3), r2.restore());
      }
      !n3 || s2 ? p2(0, 0, o2, a2) : n3.length && N(n3, function(t4) {
        p2(t4.x * u2, t4.y * u2, t4.width * u2, t4.height * u2);
      });
    }, n2;
  }(Zt);
  var cS = 1e5;
  var pS = 314159;
  var dS = 0.01;
  var fS = function() {
    function t2(t3, e2, n2, i2) {
      this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = false, this.type = "canvas";
      var r2 = !t3.nodeName || "CANVAS" === t3.nodeName.toUpperCase();
      this._opts = n2 = D({}, n2 || {}), this.dpr = n2.devicePixelRatio || rr, this._singleCanvas = r2, this.root = t3, t3.style && (mt(t3), t3.innerHTML = ""), this.storage = e2;
      var o2 = this._zlevelList;
      this._prevDisplayList = [];
      var a2 = this._layers;
      if (r2) {
        var s2 = t3, l2 = s2.width, u2 = s2.height;
        null != n2.width && (l2 = n2.width), null != n2.height && (u2 = n2.height), this.dpr = n2.devicePixelRatio || 1, s2.width = l2 * this.dpr, s2.height = u2 * this.dpr, this._width = l2, this._height = u2;
        var h2 = new hS(s2, this, this.dpr);
        h2.__builtin__ = true, h2.initContext(), a2[314159] = h2, h2.zlevel = pS, o2.push(pS), this._domRoot = t3;
      } else {
        this._width = Zy(t3, 0, n2), this._height = Zy(t3, 1, n2);
        var c2 = this._domRoot = function(t4, e3) {
          var n3 = document.createElement("div");
          return n3.style.cssText = ["position:relative", "width:" + t4 + "px", "height:" + e3 + "px", "padding:0", "margin:0", "border-width:0"].join(";") + ";", n3;
        }(this._width, this._height);
        t3.appendChild(c2);
      }
    }
    return t2.prototype.getType = function() {
      return "canvas";
    }, t2.prototype.isSingleCanvas = function() {
      return this._singleCanvas;
    }, t2.prototype.getViewportRoot = function() {
      return this._domRoot;
    }, t2.prototype.getViewportRootOffset = function() {
      var t3 = this.getViewportRoot();
      if (t3)
        return { offsetLeft: t3.offsetLeft || 0, offsetTop: t3.offsetTop || 0 };
    }, t2.prototype.refresh = function(t3) {
      var e2 = this.storage.getDisplayList(true), n2 = this._prevDisplayList, i2 = this._zlevelList;
      this._redrawId = Math.random(), this._paintList(e2, n2, t3, this._redrawId);
      for (var r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2], a2 = this._layers[o2];
        if (!a2.__builtin__ && a2.refresh) {
          var s2 = 0 === r2 ? this._backgroundColor : null;
          a2.refresh(s2);
        }
      }
      return this._opts.useDirtyRect && (this._prevDisplayList = e2.slice()), this;
    }, t2.prototype.refreshHover = function() {
      this._paintHoverList(this.storage.getDisplayList(false));
    }, t2.prototype._paintHoverList = function(t3) {
      var e2 = t3.length, n2 = this._hoverlayer;
      if (n2 && n2.clear(), e2) {
        for (var i2, r2 = { inHover: true, viewWidth: this._width, viewHeight: this._height }, o2 = 0; o2 < e2; o2++) {
          var a2 = t3[o2];
          a2.__inHover && (n2 || (n2 = this._hoverlayer = this.getLayer(cS)), i2 || (i2 = n2.ctx).save(), hv(i2, a2, r2, o2 === e2 - 1));
        }
        i2 && i2.restore();
      }
    }, t2.prototype.getHoverLayer = function() {
      return this.getLayer(cS);
    }, t2.prototype.paintOne = function(t3, e2) {
      uv(t3, e2);
    }, t2.prototype._paintList = function(t3, e2, n2, i2) {
      if (this._redrawId === i2) {
        n2 = n2 || false, this._updateLayerStatus(t3);
        var r2 = this._doPaintList(t3, e2, n2), o2 = r2.finished, a2 = r2.needsRefreshHover;
        if (this._needsManuallyCompositing && this._compositeManually(), a2 && this._paintHoverList(t3), o2)
          this.eachLayer(function(t4) {
            t4.afterBrush && t4.afterBrush();
          });
        else {
          var s2 = this;
          rn(function() {
            s2._paintList(t3, e2, n2, i2);
          });
        }
      }
    }, t2.prototype._compositeManually = function() {
      var t3 = this.getLayer(pS).ctx, e2 = this._domRoot.width, n2 = this._domRoot.height;
      t3.clearRect(0, 0, e2, n2), this.eachBuiltinLayer(function(i2) {
        i2.virtual && t3.drawImage(i2.dom, 0, 0, e2, n2);
      });
    }, t2.prototype._doPaintList = function(t3, e2, n2) {
      for (var r2 = this, o2 = [], a2 = this._opts.useDirtyRect, s2 = 0; s2 < this._zlevelList.length; s2++) {
        var l2 = this._zlevelList[s2], u2 = this._layers[l2];
        u2.__builtin__ && u2 !== this._hoverlayer && (u2.__dirty || n2) && o2.push(u2);
      }
      for (var h2 = true, c2 = false, p2 = function(i2) {
        var s3, l3 = o2[i2], u3 = l3.ctx, p3 = a2 && l3.createRepaintRects(t3, e2, d2._width, d2._height), f3 = n2 ? l3.__startIndex : l3.__drawIndex, g2 = !n2 && l3.incremental && Date.now, y2 = g2 && Date.now(), v2 = l3.zlevel === d2._zlevelList[0] ? d2._backgroundColor : null;
        if (l3.__startIndex === l3.__endIndex)
          l3.clear(false, v2, p3);
        else if (f3 === l3.__startIndex) {
          var m2 = t3[f3];
          m2.incremental && m2.notClear && !n2 || l3.clear(false, v2, p3);
        }
        -1 === f3 && (formatAppLog("error", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "For some unknown reason. drawIndex is -1"), f3 = l3.__startIndex);
        var x2 = function(e3) {
          var n3 = { inHover: false, allClipped: false, prevEl: null, viewWidth: r2._width, viewHeight: r2._height };
          for (s3 = f3; s3 < l3.__endIndex; s3++) {
            var i3 = t3[s3];
            if (i3.__inHover && (c2 = true), r2._doPaintEl(i3, l3, a2, e3, n3, s3 === l3.__endIndex - 1), g2) {
              if (Date.now() - y2 > 15)
                break;
            }
          }
          n3.prevElClipPaths && u3.restore();
        };
        if (p3)
          if (0 === p3.length)
            s3 = l3.__endIndex;
          else
            for (var _2 = d2.dpr, b2 = 0; b2 < p3.length; ++b2) {
              var w2 = p3[b2];
              u3.save(), u3.beginPath(), u3.rect(w2.x * _2, w2.y * _2, w2.width * _2, w2.height * _2), u3.clip(), x2(w2), u3.restore();
            }
        else
          u3.save(), x2(), u3.restore();
        l3.__drawIndex = s3, l3.__drawIndex < l3.__endIndex && (h2 = false);
      }, d2 = this, f2 = 0; f2 < o2.length; f2++)
        p2(f2);
      return i.wxa && N(this._layers, function(t4) {
        t4 && t4.ctx && t4.ctx.draw && t4.ctx.draw();
      }), { finished: h2, needsRefreshHover: c2 };
    }, t2.prototype._doPaintEl = function(t3, e2, n2, i2, r2, o2) {
      var a2 = e2.ctx;
      if (n2) {
        var s2 = t3.getPaintRect();
        (!i2 || s2 && s2.intersect(i2)) && (hv(a2, t3, r2, o2), t3.setPrevPaintRect(s2));
      } else
        hv(a2, t3, r2, o2);
    }, t2.prototype.getLayer = function(t3, e2) {
      this._singleCanvas && !this._needsManuallyCompositing && (t3 = pS);
      var n2 = this._layers[t3];
      return n2 || ((n2 = new hS("zr_" + t3, this, this.dpr)).zlevel = t3, n2.__builtin__ = true, this._layerConfig[t3] ? T(n2, this._layerConfig[t3], true) : this._layerConfig[t3 - dS] && T(n2, this._layerConfig[t3 - dS], true), e2 && (n2.virtual = e2), this.insertLayer(t3, n2), n2.initContext()), n2;
    }, t2.prototype.insertLayer = function(t3, e2) {
      var n2 = this._layers, i2 = this._zlevelList, r2 = i2.length, o2 = this._domRoot, a2 = null, s2 = -1;
      if (!n2[t3] && function(t4) {
        return !!t4 && (!!t4.__builtin__ || "function" == typeof t4.resize && "function" == typeof t4.refresh);
      }(e2)) {
        if (r2 > 0 && t3 > i2[0]) {
          for (s2 = 0; s2 < r2 - 1 && !(i2[s2] < t3 && i2[s2 + 1] > t3); s2++)
            ;
          a2 = n2[i2[s2]];
        }
        if (i2.splice(s2 + 1, 0, t3), n2[t3] = e2, !e2.virtual)
          if (a2) {
            var l2 = a2.dom;
            l2.nextSibling ? o2.insertBefore(e2.dom, l2.nextSibling) : o2.appendChild(e2.dom);
          } else
            o2.firstChild ? o2.insertBefore(e2.dom, o2.firstChild) : o2.appendChild(e2.dom);
        e2.__painter = this;
      }
    }, t2.prototype.eachLayer = function(t3, e2) {
      for (var n2 = this._zlevelList, i2 = 0; i2 < n2.length; i2++) {
        var r2 = n2[i2];
        t3.call(e2, this._layers[r2], r2);
      }
    }, t2.prototype.eachBuiltinLayer = function(t3, e2) {
      for (var n2 = this._zlevelList, i2 = 0; i2 < n2.length; i2++) {
        var r2 = n2[i2], o2 = this._layers[r2];
        o2.__builtin__ && t3.call(e2, o2, r2);
      }
    }, t2.prototype.eachOtherLayer = function(t3, e2) {
      for (var n2 = this._zlevelList, i2 = 0; i2 < n2.length; i2++) {
        var r2 = n2[i2], o2 = this._layers[r2];
        o2.__builtin__ || t3.call(e2, o2, r2);
      }
    }, t2.prototype.getLayers = function() {
      return this._layers;
    }, t2.prototype._updateLayerStatus = function(t3) {
      function e2(t4) {
        o2 && (o2.__endIndex !== t4 && (o2.__dirty = true), o2.__endIndex = t4);
      }
      if (this.eachBuiltinLayer(function(t4, e3) {
        t4.__dirty = t4.__used = false;
      }), this._singleCanvas)
        for (var n2 = 1; n2 < t3.length; n2++) {
          if ((s2 = t3[n2]).zlevel !== t3[n2 - 1].zlevel || s2.incremental) {
            this._needsManuallyCompositing = true;
            break;
          }
        }
      var i2, r2, o2 = null, a2 = 0;
      for (r2 = 0; r2 < t3.length; r2++) {
        var s2, l2 = (s2 = t3[r2]).zlevel, u2 = void 0;
        i2 !== l2 && (i2 = l2, a2 = 0), s2.incremental ? ((u2 = this.getLayer(l2 + 1e-3, this._needsManuallyCompositing)).incremental = true, a2 = 1) : u2 = this.getLayer(l2 + (a2 > 0 ? dS : 0), this._needsManuallyCompositing), u2.__builtin__ || M("ZLevel " + l2 + " has been used by unkown layer " + u2.id), u2 !== o2 && (u2.__used = true, u2.__startIndex !== r2 && (u2.__dirty = true), u2.__startIndex = r2, u2.incremental ? u2.__drawIndex = -1 : u2.__drawIndex = r2, e2(r2), o2 = u2), 1 & s2.__dirty && !s2.__inHover && (u2.__dirty = true, u2.incremental && u2.__drawIndex < 0 && (u2.__drawIndex = r2));
      }
      e2(r2), this.eachBuiltinLayer(function(t4, e3) {
        !t4.__used && t4.getElementCount() > 0 && (t4.__dirty = true, t4.__startIndex = t4.__endIndex = t4.__drawIndex = 0), t4.__dirty && t4.__drawIndex < 0 && (t4.__drawIndex = t4.__startIndex);
      });
    }, t2.prototype.clear = function() {
      return this.eachBuiltinLayer(this._clearLayer), this;
    }, t2.prototype._clearLayer = function(t3) {
      t3.clear();
    }, t2.prototype.setBackgroundColor = function(t3) {
      this._backgroundColor = t3, N(this._layers, function(t4) {
        t4.setUnpainted();
      });
    }, t2.prototype.configLayer = function(t3, e2) {
      if (e2) {
        var n2 = this._layerConfig;
        n2[t3] ? T(n2[t3], e2, true) : n2[t3] = e2;
        for (var i2 = 0; i2 < this._zlevelList.length; i2++) {
          var r2 = this._zlevelList[i2];
          if (r2 === t3 || r2 === t3 + dS)
            T(this._layers[r2], n2[t3], true);
        }
      }
    }, t2.prototype.delLayer = function(t3) {
      var e2 = this._layers, n2 = this._zlevelList, i2 = e2[t3];
      i2 && (i2.dom.parentNode.removeChild(i2.dom), delete e2[t3], n2.splice(L(n2, t3), 1));
    }, t2.prototype.resize = function(t3, e2) {
      if (this._domRoot.style) {
        var n2 = this._domRoot;
        n2.style.display = "none";
        var i2 = this._opts, r2 = this.root;
        if (null != t3 && (i2.width = t3), null != e2 && (i2.height = e2), t3 = Zy(r2, 0, i2), e2 = Zy(r2, 1, i2), n2.style.display = "", this._width !== t3 || e2 !== this._height) {
          for (var o2 in n2.style.width = t3 + "px", n2.style.height = e2 + "px", this._layers)
            this._layers.hasOwnProperty(o2) && this._layers[o2].resize(t3, e2);
          this.refresh(true);
        }
        this._width = t3, this._height = e2;
      } else {
        if (null == t3 || null == e2)
          return;
        this._width = t3, this._height = e2, this.getLayer(pS).resize(t3, e2);
      }
      return this;
    }, t2.prototype.clearLayer = function(t3) {
      var e2 = this._layers[t3];
      e2 && e2.clear();
    }, t2.prototype.dispose = function() {
      this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
    }, t2.prototype.getRenderedCanvas = function(t3) {
      if (t3 = t3 || {}, this._singleCanvas && !this._compositeManually)
        return this._layers[314159].dom;
      var e2 = new hS("image", this, t3.pixelRatio || this.dpr);
      e2.initContext(), e2.clear(false, t3.backgroundColor || this._backgroundColor);
      var n2 = e2.ctx;
      if (t3.pixelRatio <= this.dpr) {
        this.refresh();
        var i2 = e2.dom.width, r2 = e2.dom.height;
        this.eachLayer(function(t4) {
          t4.__builtin__ ? n2.drawImage(t4.dom, 0, 0, i2, r2) : t4.renderToCanvas && (n2.save(), t4.renderToCanvas(n2), n2.restore());
        });
      } else
        for (var o2 = { inHover: false, viewWidth: this._width, viewHeight: this._height }, a2 = this.storage.getDisplayList(true), s2 = 0, l2 = a2.length; s2 < l2; s2++) {
          var u2 = a2[s2];
          hv(n2, u2, o2, s2 === l2 - 1);
        }
      return e2.dom;
    }, t2.prototype.getWidth = function() {
      return this._width;
    }, t2.prototype.getHeight = function() {
      return this._height;
    }, t2;
  }();
  var gS = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3) {
      return Cx(null, this, { useEncodeDefaulter: true });
    }, n2.prototype.getLegendIcon = function(t3) {
      var e2 = new Er(), n3 = Gy("line", 0, t3.itemHeight / 2, t3.itemWidth, 0, t3.lineStyle.stroke, false);
      e2.add(n3), n3.setStyle(t3.lineStyle);
      var i2 = this.getData().getVisual("symbol"), r2 = this.getData().getVisual("symbolRotate"), o2 = "none" === i2 ? "circle" : i2, a2 = 0.8 * t3.itemHeight, s2 = Gy(o2, (t3.itemWidth - a2) / 2, (t3.itemHeight - a2) / 2, a2, a2, t3.itemStyle.fill);
      e2.add(s2), s2.setStyle(t3.itemStyle);
      var l2 = "inherit" === t3.iconRotate ? r2 : t3.iconRotate || 0;
      return s2.rotation = l2 * Math.PI / 180, s2.setOrigin([t3.itemWidth / 2, t3.itemHeight / 2]), o2.indexOf("empty") > -1 && (s2.style.stroke = s2.style.fill, s2.style.fill = "#fff", s2.style.lineWidth = 2), e2;
    }, n2.type = "series.line", n2.dependencies = ["grid", "polar"], n2.defaultOption = { z: 3, coordinateSystem: "cartesian2d", legendHoverLink: true, clip: true, label: { position: "top" }, endLabel: { show: false, valueAnimation: true, distance: 8 }, lineStyle: { width: 2, type: "solid" }, emphasis: { scale: true }, step: false, smooth: false, smoothMonotone: null, symbol: "emptyCircle", symbolSize: 4, symbolRotate: null, showSymbol: true, showAllSymbol: "auto", connectNulls: false, sampling: "none", animationEasing: "linear", progressive: 0, hoverLayerThreshold: 1 / 0, universalTransition: { divideShape: "clone" }, triggerLineEvent: false }, n2;
  }(vg);
  function yS(t2, e2) {
    var n2 = t2.mapDimensionsAll("defaultedLabel"), i2 = n2.length;
    if (1 === i2) {
      var r2 = ff(t2, e2, n2[0]);
      return null != r2 ? r2 + "" : null;
    }
    if (i2) {
      for (var o2 = [], a2 = 0; a2 < n2.length; a2++)
        o2.push(ff(t2, e2, n2[a2]));
      return o2.join(" ");
    }
  }
  function vS(t2, e2) {
    var n2 = t2.mapDimensionsAll("defaultedLabel");
    if (!H(e2))
      return e2 + "";
    for (var i2 = [], r2 = 0; r2 < n2.length; r2++) {
      var o2 = t2.getDimensionIndex(n2[r2]);
      o2 >= 0 && i2.push(e2[o2]);
    }
    return i2.join(" ");
  }
  var mS = function(t2) {
    function n2(e2, n3, i2, r2) {
      var o2 = t2.call(this) || this;
      return o2.updateData(e2, n3, i2, r2), o2;
    }
    return e(n2, t2), n2.prototype._createSymbol = function(t3, e2, n3, i2, r2) {
      this.removeAll();
      var o2 = Gy(t3, -1, -1, 2, 2, null, r2);
      o2.attr({ z2: 100, culling: true, scaleX: i2[0] / 2, scaleY: i2[1] / 2 }), o2.drift = xS, this._symbolType = t3, this.add(o2);
    }, n2.prototype.stopSymbolAnimation = function(t3) {
      this.childAt(0).stopAnimation(null, t3);
    }, n2.prototype.getSymbolType = function() {
      return this._symbolType;
    }, n2.prototype.getSymbolPath = function() {
      return this.childAt(0);
    }, n2.prototype.highlight = function() {
      Al(this.childAt(0));
    }, n2.prototype.downplay = function() {
      kl(this.childAt(0));
    }, n2.prototype.setZ = function(t3, e2) {
      var n3 = this.childAt(0);
      n3.zlevel = t3, n3.z = e2;
    }, n2.prototype.setDraggable = function(t3, e2) {
      var n3 = this.childAt(0);
      n3.draggable = t3, n3.cursor = !e2 && t3 ? "move" : n3.cursor;
    }, n2.prototype.updateData = function(t3, e2, i2, r2) {
      this.silent = false;
      var o2 = t3.getItemVisual(e2, "symbol") || "circle", a2 = t3.hostModel, s2 = n2.getSymbolSize(t3, e2), l2 = o2 !== this._symbolType, u2 = r2 && r2.disableAnimation;
      if (l2) {
        var h2 = t3.getItemVisual(e2, "symbolKeepAspect");
        this._createSymbol(o2, t3, e2, s2, h2);
      } else {
        (p2 = this.childAt(0)).silent = false;
        var c2 = { scaleX: s2[0] / 2, scaleY: s2[1] / 2 };
        u2 ? p2.attr(c2) : dh(p2, c2, a2, e2), xh(p2);
      }
      if (this._updateCommon(t3, e2, s2, i2, r2), l2) {
        var p2 = this.childAt(0);
        if (!u2) {
          c2 = { scaleX: this._sizeX, scaleY: this._sizeY, style: { opacity: p2.style.opacity } };
          p2.scaleX = p2.scaleY = 0, p2.style.opacity = 0, fh(p2, c2, a2, e2);
        }
      }
      u2 && this.childAt(0).stopAnimation("leave");
    }, n2.prototype._updateCommon = function(t3, e2, n3, i2, r2) {
      var o2, a2, s2, l2, u2, h2, c2, p2, d2, f2 = this.childAt(0), g2 = t3.hostModel;
      if (i2 && (o2 = i2.emphasisItemStyle, a2 = i2.blurItemStyle, s2 = i2.selectItemStyle, l2 = i2.focus, u2 = i2.blurScope, c2 = i2.labelStatesModels, p2 = i2.hoverScale, d2 = i2.cursorStyle, h2 = i2.emphasisDisabled), !i2 || t3.hasItemOption) {
        var y2 = i2 && i2.itemModel ? i2.itemModel : t3.getItemModel(e2), v2 = y2.getModel("emphasis");
        o2 = v2.getModel("itemStyle").getItemStyle(), s2 = y2.getModel(["select", "itemStyle"]).getItemStyle(), a2 = y2.getModel(["blur", "itemStyle"]).getItemStyle(), l2 = v2.get("focus"), u2 = v2.get("blurScope"), h2 = v2.get("disabled"), c2 = tc(y2), p2 = v2.getShallow("scale"), d2 = y2.getShallow("cursor");
      }
      var m2 = t3.getItemVisual(e2, "symbolRotate");
      f2.attr("rotation", (m2 || 0) * Math.PI / 180 || 0);
      var x2 = Hy(t3.getItemVisual(e2, "symbolOffset"), n3);
      x2 && (f2.x = x2[0], f2.y = x2[1]), d2 && f2.attr("cursor", d2);
      var _2 = t3.getItemVisual(e2, "style"), b2 = _2.fill;
      if (f2 instanceof As) {
        var w2 = f2.style;
        f2.useStyle(D({ image: w2.image, x: w2.x, y: w2.y, width: w2.width, height: w2.height }, _2));
      } else
        f2.__isEmptyBrush ? f2.useStyle(D({}, _2)) : f2.useStyle(_2), f2.style.decal = null, f2.setColor(b2, r2 && r2.symbolInnerColor), f2.style.strokeNoScale = true;
      var S2 = t3.getItemVisual(e2, "liftZ"), M2 = this._z2;
      null != S2 ? null == M2 && (this._z2 = f2.z2, f2.z2 += S2) : null != M2 && (f2.z2 = M2, this._z2 = null);
      var I2 = r2 && r2.useNameLabel;
      Qh(f2, c2, { labelFetcher: g2, labelDataIndex: e2, defaultText: function(e3) {
        return I2 ? t3.getName(e3) : yS(t3, e3);
      }, inheritColor: b2, defaultOpacity: _2.opacity }), this._sizeX = n3[0] / 2, this._sizeY = n3[1] / 2;
      var T2 = f2.ensureState("emphasis");
      T2.style = o2, f2.ensureState("select").style = s2, f2.ensureState("blur").style = a2;
      var C2 = null == p2 || true === p2 ? Math.max(1.1, 3 / this._sizeY) : isFinite(p2) && p2 > 0 ? +p2 : 1;
      T2.scaleX = this._sizeX * C2, T2.scaleY = this._sizeY * C2, this.setSymbolScale(1), Hl(this, l2, u2, h2);
    }, n2.prototype.setSymbolScale = function(t3) {
      this.scaleX = this.scaleY = t3;
    }, n2.prototype.fadeOut = function(t3, e2, n3) {
      var i2 = this.childAt(0), r2 = Js(this).dataIndex, o2 = n3 && n3.animation;
      if (this.silent = i2.silent = true, n3 && n3.fadeLabel) {
        var a2 = i2.getTextContent();
        a2 && yh(a2, { style: { opacity: 0 } }, e2, { dataIndex: r2, removeOpt: o2, cb: function() {
          i2.removeTextContent();
        } });
      } else
        i2.removeTextContent();
      yh(i2, { style: { opacity: 0 }, scaleX: 0, scaleY: 0 }, e2, { dataIndex: r2, cb: t3, removeOpt: o2 });
    }, n2.getSymbolSize = function(t3, e2) {
      return Wy(t3.getItemVisual(e2, "symbolSize"));
    }, n2;
  }(Er);
  function xS(t2, e2) {
    this.parent.drift(t2, e2);
  }
  function _S(t2, e2, n2, i2) {
    return e2 && !isNaN(e2[0]) && !isNaN(e2[1]) && !(i2.isIgnore && i2.isIgnore(n2)) && !(i2.clipShape && !i2.clipShape.contain(e2[0], e2[1])) && "none" !== t2.getItemVisual(n2, "symbol");
  }
  function bS(t2) {
    return null == t2 || j(t2) || (t2 = { isIgnore: t2 }), t2 || {};
  }
  function wS(t2) {
    var e2 = t2.hostModel, n2 = e2.getModel("emphasis");
    return { emphasisItemStyle: n2.getModel("itemStyle").getItemStyle(), blurItemStyle: e2.getModel(["blur", "itemStyle"]).getItemStyle(), selectItemStyle: e2.getModel(["select", "itemStyle"]).getItemStyle(), focus: n2.get("focus"), blurScope: n2.get("blurScope"), emphasisDisabled: n2.get("disabled"), hoverScale: n2.get("scale"), labelStatesModels: tc(e2), cursorStyle: e2.get("cursor") };
  }
  var SS = function() {
    function t2(t3) {
      this.group = new Er(), this._SymbolCtor = t3 || mS;
    }
    return t2.prototype.updateData = function(t3, e2) {
      this._progressiveEls = null, e2 = bS(e2);
      var n2 = this.group, i2 = t3.hostModel, r2 = this._data, o2 = this._SymbolCtor, a2 = e2.disableAnimation, s2 = wS(t3), l2 = { disableAnimation: a2 }, u2 = e2.getSymbolPoint || function(e3) {
        return t3.getItemLayout(e3);
      };
      r2 || n2.removeAll(), t3.diff(r2).add(function(i3) {
        var r3 = u2(i3);
        if (_S(t3, r3, i3, e2)) {
          var a3 = new o2(t3, i3, s2, l2);
          a3.setPosition(r3), t3.setItemGraphicEl(i3, a3), n2.add(a3);
        }
      }).update(function(h2, c2) {
        var p2 = r2.getItemGraphicEl(c2), d2 = u2(h2);
        if (_S(t3, d2, h2, e2)) {
          var f2 = t3.getItemVisual(h2, "symbol") || "circle", g2 = p2 && p2.getSymbolType && p2.getSymbolType();
          if (!p2 || g2 && g2 !== f2)
            n2.remove(p2), (p2 = new o2(t3, h2, s2, l2)).setPosition(d2);
          else {
            p2.updateData(t3, h2, s2, l2);
            var y2 = { x: d2[0], y: d2[1] };
            a2 ? p2.attr(y2) : dh(p2, y2, i2);
          }
          n2.add(p2), t3.setItemGraphicEl(h2, p2);
        } else
          n2.remove(p2);
      }).remove(function(t4) {
        var e3 = r2.getItemGraphicEl(t4);
        e3 && e3.fadeOut(function() {
          n2.remove(e3);
        }, i2);
      }).execute(), this._getSymbolPoint = u2, this._data = t3;
    }, t2.prototype.updateLayout = function() {
      var t3 = this, e2 = this._data;
      e2 && e2.eachItemGraphicEl(function(e3, n2) {
        var i2 = t3._getSymbolPoint(n2);
        e3.setPosition(i2), e3.markRedraw();
      });
    }, t2.prototype.incrementalPrepareUpdate = function(t3) {
      this._seriesScope = wS(t3), this._data = null, this.group.removeAll();
    }, t2.prototype.incrementalUpdate = function(t3, e2, n2) {
      function i2(t4) {
        t4.isGroup || (t4.incremental = true, t4.ensureState("emphasis").hoverLayer = true);
      }
      this._progressiveEls = [], n2 = bS(n2);
      for (var r2 = t3.start; r2 < t3.end; r2++) {
        var o2 = e2.getItemLayout(r2);
        if (_S(e2, o2, r2, n2)) {
          var a2 = new this._SymbolCtor(e2, r2, this._seriesScope);
          a2.traverse(i2), a2.setPosition(o2), this.group.add(a2), e2.setItemGraphicEl(r2, a2), this._progressiveEls.push(a2);
        }
      }
    }, t2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, t2.prototype.remove = function(t3) {
      var e2 = this.group, n2 = this._data;
      n2 && t3 ? n2.eachItemGraphicEl(function(t4) {
        t4.fadeOut(function() {
          e2.remove(t4);
        }, n2.hostModel);
      }) : e2.removeAll();
    }, t2;
  }();
  function MS(t2, e2, n2) {
    var i2 = t2.getBaseAxis(), r2 = t2.getOtherAxis(i2), o2 = function(t3, e3) {
      var n3 = 0, i3 = t3.scale.getExtent();
      "start" === e3 ? n3 = i3[0] : "end" === e3 ? n3 = i3[1] : Z(e3) && !isNaN(e3) ? n3 = e3 : i3[0] > 0 ? n3 = i3[0] : i3[1] < 0 && (n3 = i3[1]);
      return n3;
    }(r2, n2), a2 = i2.dim, s2 = r2.dim, l2 = e2.mapDimension(s2), u2 = e2.mapDimension(a2), h2 = "x" === s2 || "radius" === s2 ? 1 : 0, c2 = E(t2.dimensions, function(t3) {
      return e2.mapDimension(t3);
    }), p2 = false, d2 = e2.getCalculationInfo("stackResultDimension");
    return Ix(e2, c2[0]) && (p2 = true, c2[0] = d2), Ix(e2, c2[1]) && (p2 = true, c2[1] = d2), { dataDimsForPoint: c2, valueStart: o2, valueAxisDim: s2, baseAxisDim: a2, stacked: !!p2, valueDim: l2, baseDim: u2, baseDataOffset: h2, stackedOverDimension: e2.getCalculationInfo("stackedOverDimension") };
  }
  function IS(t2, e2, n2, i2) {
    var r2 = NaN;
    t2.stacked && (r2 = n2.get(n2.getCalculationInfo("stackedOverDimension"), i2)), isNaN(r2) && (r2 = t2.valueStart);
    var o2 = t2.baseDataOffset, a2 = [];
    return a2[o2] = n2.get(t2.baseDim, i2), a2[1 - o2] = r2, e2.dataToPoint(a2);
  }
  var TS = Math.min;
  var CS = Math.max;
  function DS(t2, e2) {
    return isNaN(t2) || isNaN(e2);
  }
  function AS(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    for (var u2, h2, c2, p2, d2, f2, g2 = n2, y2 = 0; y2 < i2; y2++) {
      var v2 = e2[2 * g2], m2 = e2[2 * g2 + 1];
      if (g2 >= r2 || g2 < 0)
        break;
      if (DS(v2, m2)) {
        if (l2) {
          g2 += o2;
          continue;
        }
        break;
      }
      if (g2 === n2)
        t2[o2 > 0 ? "moveTo" : "lineTo"](v2, m2), c2 = v2, p2 = m2;
      else {
        var x2 = v2 - u2, _2 = m2 - h2;
        if (x2 * x2 + _2 * _2 < 0.5) {
          g2 += o2;
          continue;
        }
        if (a2 > 0) {
          for (var b2 = g2 + o2, w2 = e2[2 * b2], S2 = e2[2 * b2 + 1]; w2 === v2 && S2 === m2 && y2 < i2; )
            y2++, g2 += o2, w2 = e2[2 * (b2 += o2)], S2 = e2[2 * b2 + 1], x2 = (v2 = e2[2 * g2]) - u2, _2 = (m2 = e2[2 * g2 + 1]) - h2;
          var M2 = y2 + 1;
          if (l2)
            for (; DS(w2, S2) && M2 < i2; )
              M2++, w2 = e2[2 * (b2 += o2)], S2 = e2[2 * b2 + 1];
          var I2 = 0.5, T2 = 0, C2 = 0, D2 = void 0, A2 = void 0;
          if (M2 >= i2 || DS(w2, S2))
            d2 = v2, f2 = m2;
          else {
            T2 = w2 - u2, C2 = S2 - h2;
            var k2 = v2 - u2, L2 = w2 - v2, P2 = m2 - h2, O2 = S2 - m2, R2 = void 0, N2 = void 0;
            if ("x" === s2) {
              var E2 = T2 > 0 ? 1 : -1;
              d2 = v2 - E2 * (R2 = Math.abs(k2)) * a2, f2 = m2, D2 = v2 + E2 * (N2 = Math.abs(L2)) * a2, A2 = m2;
            } else if ("y" === s2) {
              var z2 = C2 > 0 ? 1 : -1;
              d2 = v2, f2 = m2 - z2 * (R2 = Math.abs(P2)) * a2, D2 = v2, A2 = m2 + z2 * (N2 = Math.abs(O2)) * a2;
            } else
              R2 = Math.sqrt(k2 * k2 + P2 * P2), d2 = v2 - T2 * a2 * (1 - (I2 = (N2 = Math.sqrt(L2 * L2 + O2 * O2)) / (N2 + R2))), f2 = m2 - C2 * a2 * (1 - I2), A2 = m2 + C2 * a2 * I2, D2 = TS(D2 = v2 + T2 * a2 * I2, CS(w2, v2)), A2 = TS(A2, CS(S2, m2)), D2 = CS(D2, TS(w2, v2)), f2 = m2 - (C2 = (A2 = CS(A2, TS(S2, m2))) - m2) * R2 / N2, d2 = TS(d2 = v2 - (T2 = D2 - v2) * R2 / N2, CS(u2, v2)), f2 = TS(f2, CS(h2, m2)), D2 = v2 + (T2 = v2 - (d2 = CS(d2, TS(u2, v2)))) * N2 / R2, A2 = m2 + (C2 = m2 - (f2 = CS(f2, TS(h2, m2)))) * N2 / R2;
          }
          t2.bezierCurveTo(c2, p2, d2, f2, v2, m2), c2 = D2, p2 = A2;
        } else
          t2.lineTo(v2, m2);
      }
      u2 = v2, h2 = m2, g2 += o2;
    }
    return y2;
  }
  var kS = function() {
    this.smooth = 0, this.smoothConstraint = true;
  };
  var LS = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "ec-polyline", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new kS();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.points, i2 = 0, r2 = n3.length / 2;
      if (e2.connectNulls) {
        for (; r2 > 0 && DS(n3[2 * r2 - 2], n3[2 * r2 - 1]); r2--)
          ;
        for (; i2 < r2 && DS(n3[2 * i2], n3[2 * i2 + 1]); i2++)
          ;
      }
      for (; i2 < r2; )
        i2 += AS(t3, n3, i2, r2, r2, 1, e2.smooth, e2.smoothMonotone, e2.connectNulls) + 1;
    }, n2.prototype.getPointOn = function(t3, e2) {
      this.path || (this.createPathProxy(), this.buildPath(this.path, this.shape));
      for (var n3, i2, r2 = this.path.data, o2 = rs.CMD, a2 = "x" === e2, s2 = [], l2 = 0; l2 < r2.length; ) {
        var u2 = void 0, h2 = void 0, c2 = void 0, p2 = void 0, d2 = void 0, f2 = void 0, g2 = void 0;
        switch (r2[l2++]) {
          case o2.M:
            n3 = r2[l2++], i2 = r2[l2++];
            break;
          case o2.L:
            if (u2 = r2[l2++], h2 = r2[l2++], (g2 = a2 ? (t3 - n3) / (u2 - n3) : (t3 - i2) / (h2 - i2)) <= 1 && g2 >= 0) {
              var y2 = a2 ? (h2 - i2) * g2 + i2 : (u2 - n3) * g2 + n3;
              return a2 ? [t3, y2] : [y2, t3];
            }
            n3 = u2, i2 = h2;
            break;
          case o2.C:
            u2 = r2[l2++], h2 = r2[l2++], c2 = r2[l2++], p2 = r2[l2++], d2 = r2[l2++], f2 = r2[l2++];
            var v2 = a2 ? xn(n3, u2, c2, d2, t3, s2) : xn(i2, h2, p2, f2, t3, s2);
            if (v2 > 0)
              for (var m2 = 0; m2 < v2; m2++) {
                var x2 = s2[m2];
                if (x2 <= 1 && x2 >= 0) {
                  y2 = a2 ? vn(i2, h2, p2, f2, x2) : vn(n3, u2, c2, d2, x2);
                  return a2 ? [t3, y2] : [y2, t3];
                }
              }
            n3 = d2, i2 = f2;
        }
      }
    }, n2;
  }(Ms);
  var PS = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2;
  }(kS);
  var OS = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "ec-polygon", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new PS();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.points, i2 = e2.stackedOnPoints, r2 = 0, o2 = n3.length / 2, a2 = e2.smoothMonotone;
      if (e2.connectNulls) {
        for (; o2 > 0 && DS(n3[2 * o2 - 2], n3[2 * o2 - 1]); o2--)
          ;
        for (; r2 < o2 && DS(n3[2 * r2], n3[2 * r2 + 1]); r2++)
          ;
      }
      for (; r2 < o2; ) {
        var s2 = AS(t3, n3, r2, o2, o2, 1, e2.smooth, a2, e2.connectNulls);
        AS(t3, i2, r2 + s2 - 1, s2, o2, -1, e2.stackedOnSmooth, a2, e2.connectNulls), r2 += s2 + 1, t3.closePath();
      }
    }, n2;
  }(Ms);
  function RS(t2, e2, n2, i2, r2) {
    var o2 = t2.getArea(), a2 = o2.x, s2 = o2.y, l2 = o2.width, u2 = o2.height, h2 = n2.get(["lineStyle", "width"]) || 2;
    a2 -= h2 / 2, s2 -= h2 / 2, l2 += h2, u2 += h2, a2 = Math.floor(a2), l2 = Math.round(l2);
    var c2 = new Es({ shape: { x: a2, y: s2, width: l2, height: u2 } });
    if (e2) {
      var p2 = t2.getBaseAxis(), d2 = p2.isHorizontal(), f2 = p2.inverse;
      d2 ? (f2 && (c2.shape.x += l2), c2.shape.width = 0) : (f2 || (c2.shape.y += u2), c2.shape.height = 0);
      var g2 = Y(r2) ? function(t3) {
        r2(t3, c2);
      } : null;
      fh(c2, { shape: { width: l2, height: u2, x: a2, y: s2 } }, n2, null, i2, g2);
    }
    return c2;
  }
  function NS(t2, e2, n2) {
    var i2 = t2.getArea(), r2 = Ur(i2.r0, 1), o2 = Ur(i2.r, 1), a2 = new Eu({ shape: { cx: Ur(t2.cx, 1), cy: Ur(t2.cy, 1), r0: r2, r: o2, startAngle: i2.startAngle, endAngle: i2.endAngle, clockwise: i2.clockwise } });
    e2 && ("angle" === t2.getBaseAxis().dim ? a2.shape.endAngle = i2.startAngle : a2.shape.r = r2, fh(a2, { shape: { endAngle: i2.endAngle, r: o2 } }, n2));
    return a2;
  }
  function ES(t2, e2, n2, i2, r2) {
    return t2 ? "polar" === t2.type ? NS(t2, e2, n2) : "cartesian2d" === t2.type ? RS(t2, e2, n2, i2, r2) : null : null;
  }
  function zS(t2, e2) {
    return t2.type === e2;
  }
  function VS(t2, e2) {
    if (t2.length === e2.length) {
      for (var n2 = 0; n2 < t2.length; n2++)
        if (t2[n2] !== e2[n2])
          return;
      return true;
    }
  }
  function BS(t2) {
    for (var e2 = 1 / 0, n2 = 1 / 0, i2 = -1 / 0, r2 = -1 / 0, o2 = 0; o2 < t2.length; ) {
      var a2 = t2[o2++], s2 = t2[o2++];
      isNaN(a2) || (e2 = Math.min(a2, e2), i2 = Math.max(a2, i2)), isNaN(s2) || (n2 = Math.min(s2, n2), r2 = Math.max(s2, r2));
    }
    return [[e2, n2], [i2, r2]];
  }
  function FS(t2, e2) {
    var n2 = BS(t2), i2 = n2[0], r2 = n2[1], o2 = BS(e2), a2 = o2[0], s2 = o2[1];
    return Math.max(Math.abs(i2[0] - a2[0]), Math.abs(i2[1] - a2[1]), Math.abs(r2[0] - s2[0]), Math.abs(r2[1] - s2[1]));
  }
  function GS(t2) {
    return Z(t2) ? t2 : t2 ? 0.5 : 0;
  }
  function WS(t2, e2, n2, i2) {
    var r2 = e2.getBaseAxis(), o2 = "x" === r2.dim || "radius" === r2.dim ? 0 : 1, a2 = [], s2 = 0, l2 = [], u2 = [], h2 = [], c2 = [];
    if (i2) {
      for (s2 = 0; s2 < t2.length; s2 += 2)
        isNaN(t2[s2]) || isNaN(t2[s2 + 1]) || c2.push(t2[s2], t2[s2 + 1]);
      t2 = c2;
    }
    for (s2 = 0; s2 < t2.length - 2; s2 += 2)
      switch (h2[0] = t2[s2 + 2], h2[1] = t2[s2 + 3], u2[0] = t2[s2], u2[1] = t2[s2 + 1], a2.push(u2[0], u2[1]), n2) {
        case "end":
          l2[o2] = h2[o2], l2[1 - o2] = u2[1 - o2], a2.push(l2[0], l2[1]);
          break;
        case "middle":
          var p2 = (u2[o2] + h2[o2]) / 2, d2 = [];
          l2[o2] = d2[o2] = p2, l2[1 - o2] = u2[1 - o2], d2[1 - o2] = h2[1 - o2], a2.push(l2[0], l2[1]), a2.push(d2[0], d2[1]);
          break;
        default:
          l2[o2] = u2[o2], l2[1 - o2] = h2[1 - o2], a2.push(l2[0], l2[1]);
      }
    return a2.push(t2[s2++], t2[s2++]), a2;
  }
  function HS(t2, e2, n2) {
    var i2 = t2.getVisual("visualMeta");
    if (i2 && i2.length && t2.count() && "cartesian2d" === e2.type) {
      for (var r2, o2, a2 = i2.length - 1; a2 >= 0; a2--) {
        var s2 = t2.getDimensionInfo(i2[a2].dimension);
        if ("x" === (r2 = s2 && s2.coordDim) || "y" === r2) {
          o2 = i2[a2];
          break;
        }
      }
      if (o2) {
        var l2 = e2.getAxis(r2), u2 = E(o2.stops, function(t3) {
          return { coord: l2.toGlobalCoord(l2.dataToCoord(t3.value)), color: t3.color };
        }), h2 = u2.length, c2 = o2.outerColors.slice();
        h2 && u2[0].coord > u2[h2 - 1].coord && (u2.reverse(), c2.reverse());
        var p2 = function(t3, e3) {
          var n3, i3, r3 = [], o3 = t3.length;
          function a3(t4, e4, n4) {
            var i4 = t4.coord;
            return { coord: n4, color: Qn((n4 - i4) / (e4.coord - i4), [t4.color, e4.color]) };
          }
          for (var s3 = 0; s3 < o3; s3++) {
            var l3 = t3[s3], u3 = l3.coord;
            if (u3 < 0)
              n3 = l3;
            else {
              if (u3 > e3) {
                i3 ? r3.push(a3(i3, l3, e3)) : n3 && r3.push(a3(n3, l3, 0), a3(n3, l3, e3));
                break;
              }
              n3 && (r3.push(a3(n3, l3, 0)), n3 = null), r3.push(l3), i3 = l3;
            }
          }
          return r3;
        }(u2, "x" === r2 ? n2.getWidth() : n2.getHeight()), d2 = p2.length;
        if (!d2 && h2)
          return u2[0].coord < 0 ? c2[1] ? c2[1] : u2[h2 - 1].color : c2[0] ? c2[0] : u2[0].color;
        var f2 = p2[0].coord - 10, g2 = p2[d2 - 1].coord + 10, y2 = g2 - f2;
        if (y2 < 1e-3)
          return "transparent";
        N(p2, function(t3) {
          t3.offset = (t3.coord - f2) / y2;
        }), p2.push({ offset: d2 ? p2[d2 - 1].offset : 0.5, color: c2[1] || "transparent" }), p2.unshift({ offset: d2 ? p2[0].offset : 0.5, color: c2[0] || "transparent" });
        var v2 = new eh(0, 0, 0, 0, p2, true);
        return v2[r2] = f2, v2[r2 + "2"] = g2, v2;
      }
    }
  }
  function YS(t2, e2, n2) {
    var i2 = t2.get("showAllSymbol"), r2 = "auto" === i2;
    if (!i2 || r2) {
      var o2 = n2.getAxesByScale("ordinal")[0];
      if (o2 && (!r2 || !function(t3, e3) {
        var n3 = t3.getExtent(), i3 = Math.abs(n3[1] - n3[0]) / t3.scale.count();
        isNaN(i3) && (i3 = 0);
        for (var r3 = e3.count(), o3 = Math.max(1, Math.round(r3 / 5)), a3 = 0; a3 < r3; a3 += o3)
          if (1.5 * mS.getSymbolSize(e3, a3)[t3.isHorizontal() ? 1 : 0] > i3)
            return false;
        return true;
      }(o2, e2))) {
        var a2 = e2.mapDimension(o2.dim), s2 = {};
        return N(o2.getViewLabels(), function(t3) {
          var e3 = o2.scale.getRawOrdinalNumber(t3.tickValue);
          s2[e3] = 1;
        }), function(t3) {
          return !s2.hasOwnProperty(e2.get(a2, t3));
        };
      }
    }
  }
  function XS(t2, e2) {
    return [t2[2 * e2], t2[2 * e2 + 1]];
  }
  function US(t2) {
    if (t2.get(["endLabel", "show"]))
      return true;
    for (var e2 = 0; e2 < rl.length; e2++)
      if (t2.get([rl[e2], "endLabel", "show"]))
        return true;
    return false;
  }
  function ZS(t2, e2, n2, i2) {
    if (zS(e2, "cartesian2d")) {
      var r2 = i2.getModel("endLabel"), o2 = r2.get("valueAnimation"), a2 = i2.getData(), s2 = { lastFrameIndex: 0 }, l2 = US(i2) ? function(n3, i3) {
        t2._endLabelOnDuring(n3, i3, a2, s2, o2, r2, e2);
      } : null, u2 = e2.getBaseAxis().isHorizontal(), h2 = RS(e2, n2, i2, function() {
        var e3 = t2._endLabel;
        e3 && n2 && null != s2.originalX && e3.attr({ x: s2.originalX, y: s2.originalY });
      }, l2);
      if (!i2.get("clip", true)) {
        var c2 = h2.shape, p2 = Math.max(c2.width, c2.height);
        u2 ? (c2.y -= p2, c2.height += 2 * p2) : (c2.x -= p2, c2.width += 2 * p2);
      }
      return l2 && l2(1, h2), h2;
    }
    return NS(e2, n2, i2);
  }
  var jS = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.init = function() {
      var t3 = new Er(), e2 = new SS();
      this.group.add(e2.group), this._symbolDraw = e2, this._lineGroup = t3;
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = this, r2 = t3.coordinateSystem, o2 = this.group, a2 = t3.getData(), s2 = t3.getModel("lineStyle"), l2 = t3.getModel("areaStyle"), u2 = a2.getLayout("points") || [], h2 = "polar" === r2.type, c2 = this._coordSys, p2 = this._symbolDraw, d2 = this._polyline, f2 = this._polygon, g2 = this._lineGroup, y2 = !e2.ssr && t3.isAnimationEnabled(), v2 = !l2.isEmpty(), m2 = l2.get("origin"), x2 = MS(r2, a2, m2), _2 = v2 && function(t4, e3, n4) {
        if (!n4.valueDim)
          return [];
        for (var i3 = e3.count(), r3 = Xx(2 * i3), o3 = 0; o3 < i3; o3++) {
          var a3 = IS(n4, t4, e3, o3);
          r3[2 * o3] = a3[0], r3[2 * o3 + 1] = a3[1];
        }
        return r3;
      }(r2, a2, x2), b2 = t3.get("showSymbol"), w2 = t3.get("connectNulls"), S2 = b2 && !h2 && YS(t3, a2, r2), M2 = this._data;
      M2 && M2.eachItemGraphicEl(function(t4, e3) {
        t4.__temp && (o2.remove(t4), M2.setItemGraphicEl(e3, null));
      }), b2 || p2.remove(), o2.add(g2);
      var I2, T2 = !h2 && t3.get("step");
      r2 && r2.getArea && t3.get("clip", true) && (null != (I2 = r2.getArea()).width ? (I2.x -= 0.1, I2.y -= 0.1, I2.width += 0.2, I2.height += 0.2) : I2.r0 && (I2.r0 -= 0.5, I2.r += 0.5)), this._clipShapeForSymbol = I2;
      var C2 = HS(a2, r2, n3) || a2.getVisual("style")[a2.getVisual("drawType")];
      if (d2 && c2.type === r2.type && T2 === this._step) {
        v2 && !f2 ? f2 = this._newPolygon(u2, _2) : f2 && !v2 && (g2.remove(f2), f2 = this._polygon = null), h2 || this._initOrUpdateEndLabel(t3, r2, xp(C2));
        var D2 = g2.getClipPath();
        if (D2)
          fh(D2, { shape: ZS(this, r2, false, t3).shape }, t3);
        else
          g2.setClipPath(ZS(this, r2, true, t3));
        b2 && p2.updateData(a2, { isIgnore: S2, clipShape: I2, disableAnimation: true, getSymbolPoint: function(t4) {
          return [u2[2 * t4], u2[2 * t4 + 1]];
        } }), VS(this._stackedOnPoints, _2) && VS(this._points, u2) || (y2 ? this._doUpdateAnimation(a2, _2, r2, n3, T2, m2, w2) : (T2 && (u2 = WS(u2, r2, T2, w2), _2 && (_2 = WS(_2, r2, T2, w2))), d2.setShape({ points: u2 }), f2 && f2.setShape({ points: u2, stackedOnPoints: _2 })));
      } else
        b2 && p2.updateData(a2, { isIgnore: S2, clipShape: I2, disableAnimation: true, getSymbolPoint: function(t4) {
          return [u2[2 * t4], u2[2 * t4 + 1]];
        } }), y2 && this._initSymbolLabelAnimation(a2, r2, I2), T2 && (u2 = WS(u2, r2, T2, w2), _2 && (_2 = WS(_2, r2, T2, w2))), d2 = this._newPolyline(u2), v2 ? f2 = this._newPolygon(u2, _2) : f2 && (g2.remove(f2), f2 = this._polygon = null), h2 || this._initOrUpdateEndLabel(t3, r2, xp(C2)), g2.setClipPath(ZS(this, r2, true, t3));
      var k2 = t3.getModel("emphasis"), L2 = k2.get("focus"), P2 = k2.get("blurScope"), O2 = k2.get("disabled");
      (d2.useStyle(A(s2.getLineStyle(), { fill: "none", stroke: C2, lineJoin: "bevel" })), Zl(d2, t3, "lineStyle"), d2.style.lineWidth > 0 && "bolder" === t3.get(["emphasis", "lineStyle", "width"])) && (d2.getState("emphasis").style.lineWidth = +d2.style.lineWidth + 1);
      Js(d2).seriesIndex = t3.seriesIndex, Hl(d2, L2, P2, O2);
      var R2 = GS(t3.get("smooth")), N2 = t3.get("smoothMonotone");
      if (d2.setShape({ smooth: R2, smoothMonotone: N2, connectNulls: w2 }), f2) {
        var E2 = a2.getCalculationInfo("stackedOnSeries"), z2 = 0;
        f2.useStyle(A(l2.getAreaStyle(), { fill: C2, opacity: 0.7, lineJoin: "bevel", decal: a2.getVisual("style").decal })), E2 && (z2 = GS(E2.get("smooth"))), f2.setShape({ smooth: R2, stackedOnSmooth: z2, smoothMonotone: N2, connectNulls: w2 }), Zl(f2, t3, "areaStyle"), Js(f2).seriesIndex = t3.seriesIndex, Hl(f2, L2, P2, O2);
      }
      var V2 = function(t4) {
        i2._changePolyState(t4);
      };
      a2.eachItemGraphicEl(function(t4) {
        t4 && (t4.onHoverStateChange = V2);
      }), this._polyline.onHoverStateChange = V2, this._data = a2, this._coordSys = r2, this._stackedOnPoints = _2, this._points = u2, this._step = T2, this._valueOrigin = m2, t3.get("triggerLineEvent") && (this.packEventData(t3, d2), f2 && this.packEventData(t3, f2));
    }, n2.prototype.packEventData = function(t3, e2) {
      Js(e2).eventData = { componentType: "series", componentSubType: "line", componentIndex: t3.componentIndex, seriesIndex: t3.seriesIndex, seriesName: t3.name, seriesType: "line" };
    }, n2.prototype.highlight = function(t3, e2, n3, i2) {
      var r2 = t3.getData(), o2 = Lo(r2, i2);
      if (this._changePolyState("emphasis"), !(o2 instanceof Array) && null != o2 && o2 >= 0) {
        var a2 = r2.getLayout("points"), s2 = r2.getItemGraphicEl(o2);
        if (!s2) {
          var l2 = a2[2 * o2], u2 = a2[2 * o2 + 1];
          if (isNaN(l2) || isNaN(u2))
            return;
          if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(l2, u2))
            return;
          var h2 = t3.get("zlevel") || 0, c2 = t3.get("z") || 0;
          (s2 = new mS(r2, o2)).x = l2, s2.y = u2, s2.setZ(h2, c2);
          var p2 = s2.getSymbolPath().getTextContent();
          p2 && (p2.zlevel = h2, p2.z = c2, p2.z2 = this._polyline.z2 + 1), s2.__temp = true, r2.setItemGraphicEl(o2, s2), s2.stopSymbolAnimation(true), this.group.add(s2);
        }
        s2.highlight();
      } else
        Ag.prototype.highlight.call(this, t3, e2, n3, i2);
    }, n2.prototype.downplay = function(t3, e2, n3, i2) {
      var r2 = t3.getData(), o2 = Lo(r2, i2);
      if (this._changePolyState("normal"), null != o2 && o2 >= 0) {
        var a2 = r2.getItemGraphicEl(o2);
        a2 && (a2.__temp ? (r2.setItemGraphicEl(o2, null), this.group.remove(a2)) : a2.downplay());
      } else
        Ag.prototype.downplay.call(this, t3, e2, n3, i2);
    }, n2.prototype._changePolyState = function(t3) {
      var e2 = this._polygon;
      Ml(this._polyline, t3), e2 && Ml(e2, t3);
    }, n2.prototype._newPolyline = function(t3) {
      var e2 = this._polyline;
      return e2 && this._lineGroup.remove(e2), e2 = new LS({ shape: { points: t3 }, segmentIgnoreThreshold: 2, z2: 10 }), this._lineGroup.add(e2), this._polyline = e2, e2;
    }, n2.prototype._newPolygon = function(t3, e2) {
      var n3 = this._polygon;
      return n3 && this._lineGroup.remove(n3), n3 = new OS({ shape: { points: t3, stackedOnPoints: e2 }, segmentIgnoreThreshold: 2 }), this._lineGroup.add(n3), this._polygon = n3, n3;
    }, n2.prototype._initSymbolLabelAnimation = function(t3, e2, n3) {
      var i2, r2, o2 = e2.getBaseAxis(), a2 = o2.inverse;
      "cartesian2d" === e2.type ? (i2 = o2.isHorizontal(), r2 = false) : "polar" === e2.type && (i2 = "angle" === o2.dim, r2 = true);
      var s2 = t3.hostModel, l2 = s2.get("animationDuration");
      Y(l2) && (l2 = l2(null));
      var u2 = s2.get("animationDelay") || 0, h2 = Y(u2) ? u2(null) : u2;
      t3.eachItemGraphicEl(function(t4, o3) {
        var s3 = t4;
        if (s3) {
          var c2 = [t4.x, t4.y], p2 = void 0, d2 = void 0, f2 = void 0;
          if (n3)
            if (r2) {
              var g2 = n3, y2 = e2.pointToCoord(c2);
              i2 ? (p2 = g2.startAngle, d2 = g2.endAngle, f2 = -y2[1] / 180 * Math.PI) : (p2 = g2.r0, d2 = g2.r, f2 = y2[0]);
            } else {
              var v2 = n3;
              i2 ? (p2 = v2.x, d2 = v2.x + v2.width, f2 = t4.x) : (p2 = v2.y + v2.height, d2 = v2.y, f2 = t4.y);
            }
          var m2 = d2 === p2 ? 0 : (f2 - p2) / (d2 - p2);
          a2 && (m2 = 1 - m2);
          var x2 = Y(u2) ? u2(o3) : l2 * m2 + h2, _2 = s3.getSymbolPath(), b2 = _2.getTextContent();
          s3.attr({ scaleX: 0, scaleY: 0 }), s3.animateTo({ scaleX: 1, scaleY: 1 }, { duration: 200, setToFinal: true, delay: x2 }), b2 && b2.animateFrom({ style: { opacity: 0 } }, { duration: 300, delay: x2 }), _2.disableLabelAnimation = true;
        }
      });
    }, n2.prototype._initOrUpdateEndLabel = function(t3, e2, n3) {
      var i2 = t3.getModel("endLabel");
      if (US(t3)) {
        var r2 = t3.getData(), o2 = this._polyline, a2 = r2.getLayout("points");
        if (!a2)
          return o2.removeTextContent(), void (this._endLabel = null);
        var s2 = this._endLabel;
        s2 || ((s2 = this._endLabel = new Bs({ z2: 200 })).ignoreClip = true, o2.setTextContent(this._endLabel), o2.disableLabelAnimation = true);
        var l2 = function(t4) {
          for (var e3, n4, i3 = t4.length / 2; i3 > 0 && (e3 = t4[2 * i3 - 2], n4 = t4[2 * i3 - 1], isNaN(e3) || isNaN(n4)); i3--)
            ;
          return i3 - 1;
        }(a2);
        l2 >= 0 && (Qh(o2, tc(t3, "endLabel"), { inheritColor: n3, labelFetcher: t3, labelDataIndex: l2, defaultText: function(t4, e3, n4) {
          return null != n4 ? vS(r2, n4) : yS(r2, t4);
        }, enableTextSetter: true }, function(t4, e3) {
          var n4 = e3.getBaseAxis(), i3 = n4.isHorizontal(), r3 = n4.inverse, o3 = i3 ? r3 ? "right" : "left" : "center", a3 = i3 ? "middle" : r3 ? "top" : "bottom";
          return { normal: { align: t4.get("align") || o3, verticalAlign: t4.get("verticalAlign") || a3 } };
        }(i2, e2)), o2.textConfig.position = null);
      } else
        this._endLabel && (this._polyline.removeTextContent(), this._endLabel = null);
    }, n2.prototype._endLabelOnDuring = function(t3, e2, n3, i2, r2, o2, a2) {
      var s2 = this._endLabel, l2 = this._polyline;
      if (s2) {
        t3 < 1 && null == i2.originalX && (i2.originalX = s2.x, i2.originalY = s2.y);
        var u2 = n3.getLayout("points"), h2 = n3.hostModel, c2 = h2.get("connectNulls"), p2 = o2.get("precision"), d2 = o2.get("distance") || 0, f2 = a2.getBaseAxis(), g2 = f2.isHorizontal(), y2 = f2.inverse, v2 = e2.shape, m2 = y2 ? g2 ? v2.x : v2.y + v2.height : g2 ? v2.x + v2.width : v2.y, x2 = (g2 ? d2 : 0) * (y2 ? -1 : 1), _2 = (g2 ? 0 : -d2) * (y2 ? -1 : 1), b2 = g2 ? "x" : "y", w2 = function(t4, e3, n4) {
          for (var i3, r3, o3 = t4.length / 2, a3 = "x" === n4 ? 0 : 1, s3 = 0, l3 = -1, u3 = 0; u3 < o3; u3++)
            if (r3 = t4[2 * u3 + a3], !isNaN(r3) && !isNaN(t4[2 * u3 + 1 - a3]))
              if (0 !== u3) {
                if (i3 <= e3 && r3 >= e3 || i3 >= e3 && r3 <= e3) {
                  l3 = u3;
                  break;
                }
                s3 = u3, i3 = r3;
              } else
                i3 = r3;
          return { range: [s3, l3], t: (e3 - i3) / (r3 - i3) };
        }(u2, m2, b2), S2 = w2.range, M2 = S2[1] - S2[0], I2 = void 0;
        if (M2 >= 1) {
          if (M2 > 1 && !c2) {
            var T2 = XS(u2, S2[0]);
            s2.attr({ x: T2[0] + x2, y: T2[1] + _2 }), r2 && (I2 = h2.getRawValue(S2[0]));
          } else {
            (T2 = l2.getPointOn(m2, b2)) && s2.attr({ x: T2[0] + x2, y: T2[1] + _2 });
            var C2 = h2.getRawValue(S2[0]), D2 = h2.getRawValue(S2[1]);
            r2 && (I2 = Go(n3, p2, C2, D2, w2.t));
          }
          i2.lastFrameIndex = S2[0];
        } else {
          var A2 = 1 === t3 || i2.lastFrameIndex > 0 ? S2[0] : 0;
          T2 = XS(u2, A2);
          r2 && (I2 = h2.getRawValue(A2)), s2.attr({ x: T2[0] + x2, y: T2[1] + _2 });
        }
        if (r2) {
          var k2 = lc(s2);
          "function" == typeof k2.setLabelText && k2.setLabelText(I2);
        }
      }
    }, n2.prototype._doUpdateAnimation = function(t3, e2, n3, i2, r2, o2, a2) {
      var s2 = this._polyline, l2 = this._polygon, u2 = t3.hostModel, h2 = function(t4, e3, n4, i3, r3, o3, a3, s3) {
        for (var l3 = function(t5, e4) {
          var n5 = [];
          return e4.diff(t5).add(function(t6) {
            n5.push({ cmd: "+", idx: t6 });
          }).update(function(t6, e5) {
            n5.push({ cmd: "=", idx: e5, idx1: t6 });
          }).remove(function(t6) {
            n5.push({ cmd: "-", idx: t6 });
          }).execute(), n5;
        }(t4, e3), u3 = [], h3 = [], c3 = [], p3 = [], d3 = [], f3 = [], g3 = [], y3 = MS(r3, e3, a3), v3 = t4.getLayout("points") || [], m3 = e3.getLayout("points") || [], x3 = 0; x3 < l3.length; x3++) {
          var _2 = l3[x3], b2 = true, w2 = void 0, S2 = void 0;
          switch (_2.cmd) {
            case "=":
              w2 = 2 * _2.idx, S2 = 2 * _2.idx1;
              var M2 = v3[w2], I2 = v3[w2 + 1], T2 = m3[S2], C2 = m3[S2 + 1];
              (isNaN(M2) || isNaN(I2)) && (M2 = T2, I2 = C2), u3.push(M2, I2), h3.push(T2, C2), c3.push(n4[w2], n4[w2 + 1]), p3.push(i3[S2], i3[S2 + 1]), g3.push(e3.getRawIndex(_2.idx1));
              break;
            case "+":
              var D2 = _2.idx, A2 = y3.dataDimsForPoint, k2 = r3.dataToPoint([e3.get(A2[0], D2), e3.get(A2[1], D2)]);
              S2 = 2 * D2, u3.push(k2[0], k2[1]), h3.push(m3[S2], m3[S2 + 1]);
              var L2 = IS(y3, r3, e3, D2);
              c3.push(L2[0], L2[1]), p3.push(i3[S2], i3[S2 + 1]), g3.push(e3.getRawIndex(D2));
              break;
            case "-":
              b2 = false;
          }
          b2 && (d3.push(_2), f3.push(f3.length));
        }
        f3.sort(function(t5, e4) {
          return g3[t5] - g3[e4];
        });
        var P2 = u3.length, O2 = Xx(P2), R2 = Xx(P2), N2 = Xx(P2), E2 = Xx(P2), z2 = [];
        for (x3 = 0; x3 < f3.length; x3++) {
          var V2 = f3[x3], B2 = 2 * x3, F2 = 2 * V2;
          O2[B2] = u3[F2], O2[B2 + 1] = u3[F2 + 1], R2[B2] = h3[F2], R2[B2 + 1] = h3[F2 + 1], N2[B2] = c3[F2], N2[B2 + 1] = c3[F2 + 1], E2[B2] = p3[F2], E2[B2 + 1] = p3[F2 + 1], z2[x3] = d3[V2];
        }
        return { current: O2, next: R2, stackedOnCurrent: N2, stackedOnNext: E2, status: z2 };
      }(this._data, t3, this._stackedOnPoints, e2, this._coordSys, 0, this._valueOrigin), c2 = h2.current, p2 = h2.stackedOnCurrent, d2 = h2.next, f2 = h2.stackedOnNext;
      if (r2 && (c2 = WS(h2.current, n3, r2, a2), p2 = WS(h2.stackedOnCurrent, n3, r2, a2), d2 = WS(h2.next, n3, r2, a2), f2 = WS(h2.stackedOnNext, n3, r2, a2)), FS(c2, d2) > 3e3 || l2 && FS(p2, f2) > 3e3)
        return s2.stopAnimation(), s2.setShape({ points: d2 }), void (l2 && (l2.stopAnimation(), l2.setShape({ points: d2, stackedOnPoints: f2 })));
      s2.shape.__points = h2.current, s2.shape.points = c2;
      var g2 = { shape: { points: d2 } };
      h2.current !== c2 && (g2.shape.__points = h2.next), s2.stopAnimation(), dh(s2, g2, u2), l2 && (l2.setShape({ points: c2, stackedOnPoints: p2 }), l2.stopAnimation(), dh(l2, { shape: { stackedOnPoints: f2 } }, u2), s2.shape.points !== l2.shape.points && (l2.shape.points = s2.shape.points));
      for (var y2 = [], v2 = h2.status, m2 = 0; m2 < v2.length; m2++) {
        if ("=" === v2[m2].cmd) {
          var x2 = t3.getItemGraphicEl(v2[m2].idx1);
          x2 && y2.push({ el: x2, ptIdx: m2 });
        }
      }
      s2.animators && s2.animators.length && s2.animators[0].during(function() {
        l2 && l2.dirtyShape();
        for (var t4 = s2.shape.__points, e3 = 0; e3 < y2.length; e3++) {
          var n4 = y2[e3].el, i3 = 2 * y2[e3].ptIdx;
          n4.x = t4[i3], n4.y = t4[i3 + 1], n4.markRedraw();
        }
      });
    }, n2.prototype.remove = function(t3) {
      var e2 = this.group, n3 = this._data;
      this._lineGroup.removeAll(), this._symbolDraw.remove(true), n3 && n3.eachItemGraphicEl(function(t4, i2) {
        t4.__temp && (e2.remove(t4), n3.setItemGraphicEl(i2, null));
      }), this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._endLabel = this._data = null;
    }, n2.type = "line", n2;
  }(Ag);
  function qS(t2, e2) {
    return { seriesType: t2, plan: Tg(), reset: function(t3) {
      var n2 = t3.getData(), i2 = t3.coordinateSystem, r2 = t3.pipelineContext, o2 = e2 || r2.large;
      if (i2) {
        var a2 = E(i2.dimensions, function(t4) {
          return n2.mapDimension(t4);
        }).slice(0, 2), s2 = a2.length, l2 = n2.getCalculationInfo("stackResultDimension");
        Ix(n2, a2[0]) && (a2[0] = l2), Ix(n2, a2[1]) && (a2[1] = l2);
        var u2 = n2.getStore(), h2 = n2.getDimensionIndex(a2[0]), c2 = n2.getDimensionIndex(a2[1]);
        return s2 && { progress: function(t4, e3) {
          for (var n3 = t4.end - t4.start, r3 = o2 && Xx(n3 * s2), a3 = [], l3 = [], p2 = t4.start, d2 = 0; p2 < t4.end; p2++) {
            var f2 = void 0;
            if (1 === s2) {
              var g2 = u2.get(h2, p2);
              f2 = i2.dataToPoint(g2, null, l3);
            } else
              a3[0] = u2.get(h2, p2), a3[1] = u2.get(c2, p2), f2 = i2.dataToPoint(a3, null, l3);
            o2 ? (r3[d2++] = f2[0], r3[d2++] = f2[1]) : e3.setItemLayout(p2, f2.slice());
          }
          o2 && e3.setLayout("points", r3);
        } };
      }
    } };
  }
  var KS = { average: function(t2) {
    for (var e2 = 0, n2 = 0, i2 = 0; i2 < t2.length; i2++)
      isNaN(t2[i2]) || (e2 += t2[i2], n2++);
    return 0 === n2 ? NaN : e2 / n2;
  }, sum: function(t2) {
    for (var e2 = 0, n2 = 0; n2 < t2.length; n2++)
      e2 += t2[n2] || 0;
    return e2;
  }, max: function(t2) {
    for (var e2 = -1 / 0, n2 = 0; n2 < t2.length; n2++)
      t2[n2] > e2 && (e2 = t2[n2]);
    return isFinite(e2) ? e2 : NaN;
  }, min: function(t2) {
    for (var e2 = 1 / 0, n2 = 0; n2 < t2.length; n2++)
      t2[n2] < e2 && (e2 = t2[n2]);
    return isFinite(e2) ? e2 : NaN;
  }, nearest: function(t2) {
    return t2[0];
  } };
  var $S = function(t2) {
    return Math.round(t2.length / 2);
  };
  function JS(t2) {
    return { seriesType: t2, reset: function(t3, e2, n2) {
      var i2 = t3.getData(), r2 = t3.get("sampling"), o2 = t3.coordinateSystem, a2 = i2.count();
      if (a2 > 10 && "cartesian2d" === o2.type && r2) {
        var s2 = o2.getBaseAxis(), l2 = o2.getOtherAxis(s2), u2 = s2.getExtent(), h2 = n2.getDevicePixelRatio(), c2 = Math.abs(u2[1] - u2[0]) * (h2 || 1), p2 = Math.round(a2 / c2);
        if (isFinite(p2) && p2 > 1) {
          "lttb" === r2 && t3.setData(i2.lttbDownSample(i2.mapDimension(l2.dim), 1 / p2));
          var d2 = void 0;
          X(r2) ? d2 = KS[r2] : Y(r2) && (d2 = r2), d2 && t3.setData(i2.downSample(i2.mapDimension(l2.dim), 1 / p2, d2, $S));
        }
      }
    } };
  }
  var QS = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this, { useEncodeDefaulter: true });
    }, n2.prototype.getMarkerPosition = function(t3, e2, n3) {
      var i2 = this.coordinateSystem;
      if (i2 && i2.clampData) {
        var r2 = i2.clampData(t3), o2 = i2.dataToPoint(r2);
        if (n3)
          N(i2.getAxes(), function(t4, n4) {
            if ("category" === t4.type && null != e2) {
              var i3 = t4.getTicksCoords(), a3 = r2[n4], s3 = "x1" === e2[n4] || "y1" === e2[n4];
              if (s3 && (a3 += 1), i3.length < 2)
                return;
              if (2 === i3.length)
                return void (o2[n4] = t4.toGlobalCoord(t4.getExtent()[s3 ? 1 : 0]));
              for (var l3 = void 0, u3 = void 0, h2 = 1, c2 = 0; c2 < i3.length; c2++) {
                var p2 = i3[c2].coord, d2 = c2 === i3.length - 1 ? i3[c2 - 1].tickValue + h2 : i3[c2].tickValue;
                if (d2 === a3) {
                  u3 = p2;
                  break;
                }
                if (d2 < a3)
                  l3 = p2;
                else if (null != l3 && d2 > a3) {
                  u3 = (p2 + l3) / 2;
                  break;
                }
                1 === c2 && (h2 = d2 - i3[0].tickValue);
              }
              null == u3 && (l3 ? l3 && (u3 = i3[i3.length - 1].coord) : u3 = i3[0].coord), o2[n4] = t4.toGlobalCoord(u3);
            }
          });
        else {
          var a2 = this.getData(), s2 = a2.getLayout("offset"), l2 = a2.getLayout("size"), u2 = i2.getBaseAxis().isHorizontal() ? 0 : 1;
          o2[u2] += s2 + l2 / 2;
        }
        return o2;
      }
      return [NaN, NaN];
    }, n2.type = "series.__base_bar__", n2.defaultOption = { z: 2, coordinateSystem: "cartesian2d", legendHoverLink: true, barMinHeight: 0, barMinAngle: 0, large: false, largeThreshold: 400, progressive: 3e3, progressiveChunkMode: "mod" }, n2;
  }(vg);
  vg.registerClass(QS);
  var tM = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function() {
      return Cx(null, this, { useEncodeDefaulter: true, createInvertedIndices: !!this.get("realtimeSort", true) || null });
    }, n2.prototype.getProgressive = function() {
      return !!this.get("large") && this.get("progressive");
    }, n2.prototype.getProgressiveThreshold = function() {
      var t3 = this.get("progressiveThreshold"), e2 = this.get("largeThreshold");
      return e2 > t3 && (t3 = e2), t3;
    }, n2.prototype.brushSelector = function(t3, e2, n3) {
      return n3.rect(e2.getItemLayout(t3));
    }, n2.type = "series.bar", n2.dependencies = ["grid", "polar"], n2.defaultOption = Tc(QS.defaultOption, { clip: true, roundCap: false, showBackground: false, backgroundStyle: { color: "rgba(180, 180, 180, 0.2)", borderColor: null, borderWidth: 0, borderType: "solid", borderRadius: 0, shadowBlur: 0, shadowColor: null, shadowOffsetX: 0, shadowOffsetY: 0, opacity: 1 }, select: { itemStyle: { borderColor: "#212121" } }, realtimeSort: false }), n2;
  }(QS);
  var eM = function() {
    this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = true;
  };
  var nM = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "sausage", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new eM();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.cx, i2 = e2.cy, r2 = Math.max(e2.r0 || 0, 0), o2 = Math.max(e2.r, 0), a2 = 0.5 * (o2 - r2), s2 = r2 + a2, l2 = e2.startAngle, u2 = e2.endAngle, h2 = e2.clockwise, c2 = 2 * Math.PI, p2 = h2 ? u2 - l2 < c2 : l2 - u2 < c2;
      p2 || (l2 = u2 - (h2 ? c2 : -c2));
      var d2 = Math.cos(l2), f2 = Math.sin(l2), g2 = Math.cos(u2), y2 = Math.sin(u2);
      p2 ? (t3.moveTo(d2 * r2 + n3, f2 * r2 + i2), t3.arc(d2 * s2 + n3, f2 * s2 + i2, a2, -Math.PI + l2, l2, !h2)) : t3.moveTo(d2 * o2 + n3, f2 * o2 + i2), t3.arc(n3, i2, o2, l2, u2, !h2), t3.arc(g2 * s2 + n3, y2 * s2 + i2, a2, u2 - 2 * Math.PI, u2 - Math.PI, !h2), 0 !== r2 && t3.arc(n3, i2, r2, u2, l2, h2);
    }, n2;
  }(Ms);
  function iM(t2, e2, n2) {
    return e2 * Math.sin(t2) * (n2 ? -1 : 1);
  }
  function rM(t2, e2, n2) {
    return e2 * Math.cos(t2) * (n2 ? 1 : -1);
  }
  function oM(t2, e2, n2) {
    var i2 = t2.get("borderRadius");
    if (null == i2)
      return n2 ? { cornerRadius: 0 } : null;
    H(i2) || (i2 = [i2, i2, i2, i2]);
    var r2 = Math.abs(e2.r || 0 - e2.r0 || 0);
    return { cornerRadius: E(i2, function(t3) {
      return Mr(t3, r2);
    }) };
  }
  var aM = Math.max;
  var sM = Math.min;
  var lM = function(t2) {
    function n2() {
      var e2 = t2.call(this) || this;
      return e2.type = n2.type, e2._isFirstFrame = true, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      this._model = t3, this._removeOnRenderedListener(n3), this._updateDrawMode(t3);
      var r2 = t3.get("coordinateSystem");
      ("cartesian2d" === r2 || "polar" === r2) && (this._progressiveEls = null, this._isLargeDraw ? this._renderLarge(t3, e2, n3) : this._renderNormal(t3, e2, n3, i2));
    }, n2.prototype.incrementalPrepareRender = function(t3) {
      this._clear(), this._updateDrawMode(t3), this._updateLargeClip(t3);
    }, n2.prototype.incrementalRender = function(t3, e2) {
      this._progressiveEls = [], this._incrementalRenderLarge(t3, e2);
    }, n2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, n2.prototype._updateDrawMode = function(t3) {
      var e2 = t3.pipelineContext.large;
      null != this._isLargeDraw && e2 === this._isLargeDraw || (this._isLargeDraw = e2, this._clear());
    }, n2.prototype._renderNormal = function(t3, e2, n3, i2) {
      var r2, o2 = this.group, a2 = t3.getData(), s2 = this._data, l2 = t3.coordinateSystem, u2 = l2.getBaseAxis();
      "cartesian2d" === l2.type ? r2 = u2.isHorizontal() : "polar" === l2.type && (r2 = "angle" === u2.dim);
      var h2 = t3.isAnimationEnabled() ? t3 : null, c2 = function(t4, e3) {
        var n4 = t4.get("realtimeSort", true), i3 = e3.getBaseAxis();
        if (n4 && "category" === i3.type && "cartesian2d" === e3.type)
          return { baseAxis: i3, otherAxis: e3.getOtherAxis(i3) };
      }(t3, l2);
      c2 && this._enableRealtimeSort(c2, a2, n3);
      var p2 = t3.get("clip", true) || c2, d2 = function(t4, e3) {
        var n4 = t4.getArea && t4.getArea();
        if (zS(t4, "cartesian2d")) {
          var i3 = t4.getBaseAxis();
          if ("category" !== i3.type || !i3.onBand) {
            var r3 = e3.getLayout("bandWidth");
            i3.isHorizontal() ? (n4.x -= r3, n4.width += 2 * r3) : (n4.y -= r3, n4.height += 2 * r3);
          }
        }
        return n4;
      }(l2, a2);
      o2.removeClipPath();
      var f2 = t3.get("roundCap", true), g2 = t3.get("showBackground", true), y2 = t3.getModel("backgroundStyle"), v2 = y2.get("borderRadius") || 0, m2 = [], x2 = this._backgroundEls, _2 = i2 && i2.isInitSort, b2 = i2 && "changeAxisOrder" === i2.type;
      function w2(t4) {
        var e3 = yM[l2.type](a2, t4), n4 = function(t5, e4, n5) {
          var i3 = "polar" === t5.type ? Eu : Es;
          return new i3({ shape: SM(e4, n5, t5), silent: true, z2: 0 });
        }(l2, r2, e3);
        return n4.useStyle(y2.getItemStyle()), "cartesian2d" === l2.type ? n4.setShape("r", v2) : n4.setShape("cornerRadius", v2), m2[t4] = n4, n4;
      }
      a2.diff(s2).add(function(e3) {
        var n4 = a2.getItemModel(e3), i3 = yM[l2.type](a2, e3, n4);
        if (g2 && w2(e3), a2.hasValue(e3) && gM[l2.type](i3)) {
          var s3 = false;
          p2 && (s3 = uM[l2.type](d2, i3));
          var y3 = hM[l2.type](t3, a2, e3, i3, r2, h2, u2.model, false, f2);
          c2 && (y3.forceLabelAnimation = true), mM(y3, a2, e3, n4, i3, t3, r2, "polar" === l2.type), _2 ? y3.attr({ shape: i3 }) : c2 ? cM(c2, h2, y3, i3, e3, r2, false, false) : fh(y3, { shape: i3 }, t3, e3), a2.setItemGraphicEl(e3, y3), o2.add(y3), y3.ignore = s3;
        }
      }).update(function(e3, n4) {
        var i3 = a2.getItemModel(e3), S3 = yM[l2.type](a2, e3, i3);
        if (g2) {
          var M3 = void 0;
          0 === x2.length ? M3 = w2(n4) : ((M3 = x2[n4]).useStyle(y2.getItemStyle()), "cartesian2d" === l2.type ? M3.setShape("r", v2) : M3.setShape("cornerRadius", v2), m2[e3] = M3);
          var I2 = yM[l2.type](a2, e3);
          dh(M3, { shape: SM(r2, I2, l2) }, h2, e3);
        }
        var T2 = s2.getItemGraphicEl(n4);
        if (a2.hasValue(e3) && gM[l2.type](S3)) {
          var C2 = false;
          if (p2 && (C2 = uM[l2.type](d2, S3)) && o2.remove(T2), T2 ? xh(T2) : T2 = hM[l2.type](t3, a2, e3, S3, r2, h2, u2.model, !!T2, f2), c2 && (T2.forceLabelAnimation = true), b2) {
            var D2 = T2.getTextContent();
            if (D2) {
              var A2 = lc(D2);
              null != A2.prevValue && (A2.prevValue = A2.value);
            }
          } else
            mM(T2, a2, e3, i3, S3, t3, r2, "polar" === l2.type);
          _2 ? T2.attr({ shape: S3 }) : c2 ? cM(c2, h2, T2, S3, e3, r2, true, b2) : dh(T2, { shape: S3 }, t3, e3, null), a2.setItemGraphicEl(e3, T2), T2.ignore = C2, o2.add(T2);
        } else
          o2.remove(T2);
      }).remove(function(e3) {
        var n4 = s2.getItemGraphicEl(e3);
        n4 && mh(n4, t3, e3);
      }).execute();
      var S2 = this._backgroundGroup || (this._backgroundGroup = new Er());
      S2.removeAll();
      for (var M2 = 0; M2 < m2.length; ++M2)
        S2.add(m2[M2]);
      o2.add(S2), this._backgroundEls = m2, this._data = a2;
    }, n2.prototype._renderLarge = function(t3, e2, n3) {
      this._clear(), bM(t3, this.group), this._updateLargeClip(t3);
    }, n2.prototype._incrementalRenderLarge = function(t3, e2) {
      this._removeBackground(), bM(e2, this.group, this._progressiveEls, true);
    }, n2.prototype._updateLargeClip = function(t3) {
      var e2 = t3.get("clip", true) && ES(t3.coordinateSystem, false, t3), n3 = this.group;
      e2 ? n3.setClipPath(e2) : n3.removeClipPath();
    }, n2.prototype._enableRealtimeSort = function(t3, e2, n3) {
      var i2 = this;
      if (e2.count()) {
        var r2 = t3.baseAxis;
        if (this._isFirstFrame)
          this._dispatchInitSort(e2, t3, n3), this._isFirstFrame = false;
        else {
          var o2 = function(t4) {
            var n4 = e2.getItemGraphicEl(t4), i3 = n4 && n4.shape;
            return i3 && Math.abs(r2.isHorizontal() ? i3.height : i3.width) || 0;
          };
          this._onRendered = function() {
            i2._updateSortWithinSameData(e2, o2, r2, n3);
          }, n3.getZr().on("rendered", this._onRendered);
        }
      }
    }, n2.prototype._dataSort = function(t3, e2, n3) {
      var i2 = [];
      return t3.each(t3.mapDimension(e2.dim), function(t4, e3) {
        var r2 = n3(e3);
        r2 = null == r2 ? NaN : r2, i2.push({ dataIndex: e3, mappedValue: r2, ordinalNumber: t4 });
      }), i2.sort(function(t4, e3) {
        return e3.mappedValue - t4.mappedValue;
      }), { ordinalNumbers: E(i2, function(t4) {
        return t4.ordinalNumber;
      }) };
    }, n2.prototype._isOrderChangedWithinSameData = function(t3, e2, n3) {
      for (var i2 = n3.scale, r2 = t3.mapDimension(n3.dim), o2 = Number.MAX_VALUE, a2 = 0, s2 = i2.getOrdinalMeta().categories.length; a2 < s2; ++a2) {
        var l2 = t3.rawIndexOf(r2, i2.getRawOrdinalNumber(a2)), u2 = l2 < 0 ? Number.MIN_VALUE : e2(t3.indexOfRawIndex(l2));
        if (u2 > o2)
          return true;
        o2 = u2;
      }
      return false;
    }, n2.prototype._isOrderDifferentInView = function(t3, e2) {
      for (var n3 = e2.scale, i2 = n3.getExtent(), r2 = Math.max(0, i2[0]), o2 = Math.min(i2[1], n3.getOrdinalMeta().categories.length - 1); r2 <= o2; ++r2)
        if (t3.ordinalNumbers[r2] !== n3.getRawOrdinalNumber(r2))
          return true;
    }, n2.prototype._updateSortWithinSameData = function(t3, e2, n3, i2) {
      if (this._isOrderChangedWithinSameData(t3, e2, n3)) {
        var r2 = this._dataSort(t3, n3, e2);
        this._isOrderDifferentInView(r2, n3) && (this._removeOnRenderedListener(i2), i2.dispatchAction({ type: "changeAxisOrder", componentType: n3.dim + "Axis", axisId: n3.index, sortInfo: r2 }));
      }
    }, n2.prototype._dispatchInitSort = function(t3, e2, n3) {
      var i2 = e2.baseAxis, r2 = this._dataSort(t3, i2, function(n4) {
        return t3.get(t3.mapDimension(e2.otherAxis.dim), n4);
      });
      n3.dispatchAction({ type: "changeAxisOrder", componentType: i2.dim + "Axis", isInitSort: true, axisId: i2.index, sortInfo: r2 });
    }, n2.prototype.remove = function(t3, e2) {
      this._clear(this._model), this._removeOnRenderedListener(e2);
    }, n2.prototype.dispose = function(t3, e2) {
      this._removeOnRenderedListener(e2);
    }, n2.prototype._removeOnRenderedListener = function(t3) {
      this._onRendered && (t3.getZr().off("rendered", this._onRendered), this._onRendered = null);
    }, n2.prototype._clear = function(t3) {
      var e2 = this.group, n3 = this._data;
      t3 && t3.isAnimationEnabled() && n3 && !this._isLargeDraw ? (this._removeBackground(), this._backgroundEls = [], n3.eachItemGraphicEl(function(e3) {
        mh(e3, t3, Js(e3).dataIndex);
      })) : e2.removeAll(), this._data = null, this._isFirstFrame = true;
    }, n2.prototype._removeBackground = function() {
      this.group.remove(this._backgroundGroup), this._backgroundGroup = null;
    }, n2.type = "bar", n2;
  }(Ag);
  var uM = { cartesian2d: function(t2, e2) {
    var n2 = e2.width < 0 ? -1 : 1, i2 = e2.height < 0 ? -1 : 1;
    n2 < 0 && (e2.x += e2.width, e2.width = -e2.width), i2 < 0 && (e2.y += e2.height, e2.height = -e2.height);
    var r2 = t2.x + t2.width, o2 = t2.y + t2.height, a2 = aM(e2.x, t2.x), s2 = sM(e2.x + e2.width, r2), l2 = aM(e2.y, t2.y), u2 = sM(e2.y + e2.height, o2), h2 = s2 < a2, c2 = u2 < l2;
    return e2.x = h2 && a2 > r2 ? s2 : a2, e2.y = c2 && l2 > o2 ? u2 : l2, e2.width = h2 ? 0 : s2 - a2, e2.height = c2 ? 0 : u2 - l2, n2 < 0 && (e2.x += e2.width, e2.width = -e2.width), i2 < 0 && (e2.y += e2.height, e2.height = -e2.height), h2 || c2;
  }, polar: function(t2, e2) {
    var n2 = e2.r0 <= e2.r ? 1 : -1;
    if (n2 < 0) {
      var i2 = e2.r;
      e2.r = e2.r0, e2.r0 = i2;
    }
    var r2 = sM(e2.r, t2.r), o2 = aM(e2.r0, t2.r0);
    e2.r = r2, e2.r0 = o2;
    var a2 = r2 - o2 < 0;
    if (n2 < 0) {
      i2 = e2.r;
      e2.r = e2.r0, e2.r0 = i2;
    }
    return a2;
  } };
  var hM = { cartesian2d: function(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    var u2 = new Es({ shape: D({}, i2), z2: 1 });
    (u2.__dataIndex = n2, u2.name = "item", o2) && (u2.shape[r2 ? "height" : "width"] = 0);
    return u2;
  }, polar: function(t2, e2, n2, i2, r2, o2, a2, s2, l2) {
    var u2 = !r2 && l2 ? nM : Eu, h2 = new u2({ shape: i2, z2: 1 });
    h2.name = "item";
    var c2, p2, d2 = vM(r2);
    if (h2.calculateTextPosition = (c2 = d2, p2 = { isRoundCap: u2 === nM }.isRoundCap, function(t3, e3, n3) {
      var i3 = e3.position;
      if (!i3 || i3 instanceof Array)
        return Ir(t3, e3, n3);
      var r3 = c2(i3), o3 = null != e3.distance ? e3.distance : 5, a3 = this.shape, s3 = a3.cx, l3 = a3.cy, u3 = a3.r, h3 = a3.r0, d3 = (u3 + h3) / 2, f3 = a3.startAngle, g3 = a3.endAngle, y2 = (f3 + g3) / 2, v2 = p2 ? Math.abs(u3 - h3) / 2 : 0, m2 = Math.cos, x2 = Math.sin, _2 = s3 + u3 * m2(f3), b2 = l3 + u3 * x2(f3), w2 = "left", S2 = "top";
      switch (r3) {
        case "startArc":
          _2 = s3 + (h3 - o3) * m2(y2), b2 = l3 + (h3 - o3) * x2(y2), w2 = "center", S2 = "top";
          break;
        case "insideStartArc":
          _2 = s3 + (h3 + o3) * m2(y2), b2 = l3 + (h3 + o3) * x2(y2), w2 = "center", S2 = "bottom";
          break;
        case "startAngle":
          _2 = s3 + d3 * m2(f3) + iM(f3, o3 + v2, false), b2 = l3 + d3 * x2(f3) + rM(f3, o3 + v2, false), w2 = "right", S2 = "middle";
          break;
        case "insideStartAngle":
          _2 = s3 + d3 * m2(f3) + iM(f3, -o3 + v2, false), b2 = l3 + d3 * x2(f3) + rM(f3, -o3 + v2, false), w2 = "left", S2 = "middle";
          break;
        case "middle":
          _2 = s3 + d3 * m2(y2), b2 = l3 + d3 * x2(y2), w2 = "center", S2 = "middle";
          break;
        case "endArc":
          _2 = s3 + (u3 + o3) * m2(y2), b2 = l3 + (u3 + o3) * x2(y2), w2 = "center", S2 = "bottom";
          break;
        case "insideEndArc":
          _2 = s3 + (u3 - o3) * m2(y2), b2 = l3 + (u3 - o3) * x2(y2), w2 = "center", S2 = "top";
          break;
        case "endAngle":
          _2 = s3 + d3 * m2(g3) + iM(g3, o3 + v2, true), b2 = l3 + d3 * x2(g3) + rM(g3, o3 + v2, true), w2 = "left", S2 = "middle";
          break;
        case "insideEndAngle":
          _2 = s3 + d3 * m2(g3) + iM(g3, -o3 + v2, true), b2 = l3 + d3 * x2(g3) + rM(g3, -o3 + v2, true), w2 = "right", S2 = "middle";
          break;
        default:
          return Ir(t3, e3, n3);
      }
      return (t3 = t3 || {}).x = _2, t3.y = b2, t3.align = w2, t3.verticalAlign = S2, t3;
    }), o2) {
      var f2 = r2 ? "r" : "endAngle", g2 = {};
      h2.shape[f2] = r2 ? i2.r0 : i2.startAngle, g2[f2] = i2[f2], (s2 ? dh : fh)(h2, { shape: g2 }, o2);
    }
    return h2;
  } };
  function cM(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2, u2;
    o2 ? (u2 = { x: i2.x, width: i2.width }, l2 = { y: i2.y, height: i2.height }) : (u2 = { y: i2.y, height: i2.height }, l2 = { x: i2.x, width: i2.width }), s2 || (a2 ? dh : fh)(n2, { shape: l2 }, e2, r2, null), (a2 ? dh : fh)(n2, { shape: u2 }, e2 ? t2.baseAxis.model : null, r2);
  }
  function pM(t2, e2) {
    for (var n2 = 0; n2 < e2.length; n2++)
      if (!isFinite(t2[e2[n2]]))
        return true;
    return false;
  }
  var dM = ["x", "y", "width", "height"];
  var fM = ["cx", "cy", "r", "startAngle", "endAngle"];
  var gM = { cartesian2d: function(t2) {
    return !pM(t2, dM);
  }, polar: function(t2) {
    return !pM(t2, fM);
  } };
  var yM = { cartesian2d: function(t2, e2, n2) {
    var i2 = t2.getItemLayout(e2), r2 = n2 ? function(t3, e3) {
      var n3 = t3.get(["itemStyle", "borderColor"]);
      if (!n3 || "none" === n3)
        return 0;
      var i3 = t3.get(["itemStyle", "borderWidth"]) || 0, r3 = isNaN(e3.width) ? Number.MAX_VALUE : Math.abs(e3.width), o3 = isNaN(e3.height) ? Number.MAX_VALUE : Math.abs(e3.height);
      return Math.min(i3, r3, o3);
    }(n2, i2) : 0, o2 = i2.width > 0 ? 1 : -1, a2 = i2.height > 0 ? 1 : -1;
    return { x: i2.x + o2 * r2 / 2, y: i2.y + a2 * r2 / 2, width: i2.width - o2 * r2, height: i2.height - a2 * r2 };
  }, polar: function(t2, e2, n2) {
    var i2 = t2.getItemLayout(e2);
    return { cx: i2.cx, cy: i2.cy, r0: i2.r0, r: i2.r, startAngle: i2.startAngle, endAngle: i2.endAngle, clockwise: i2.clockwise };
  } };
  function vM(t2) {
    return function(t3) {
      var e2 = t3 ? "Arc" : "Angle";
      return function(t4) {
        switch (t4) {
          case "start":
          case "insideStart":
          case "end":
          case "insideEnd":
            return t4 + e2;
          default:
            return t4;
        }
      };
    }(t2);
  }
  function mM(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2 = e2.getItemVisual(n2, "style");
    if (s2) {
      if (!o2.get("roundCap")) {
        var u2 = t2.shape;
        D(u2, oM(i2.getModel("itemStyle"), u2, true)), t2.setShape(u2);
      }
    } else {
      var h2 = i2.get(["itemStyle", "borderRadius"]) || 0;
      t2.setShape("r", h2);
    }
    t2.useStyle(l2);
    var c2 = i2.getShallow("cursor");
    c2 && t2.attr("cursor", c2);
    var p2 = s2 ? a2 ? r2.r >= r2.r0 ? "endArc" : "startArc" : r2.endAngle >= r2.startAngle ? "endAngle" : "startAngle" : a2 ? r2.height >= 0 ? "bottom" : "top" : r2.width >= 0 ? "right" : "left", d2 = tc(i2);
    Qh(t2, d2, { labelFetcher: o2, labelDataIndex: n2, defaultText: yS(o2.getData(), n2), inheritColor: l2.fill, defaultOpacity: l2.opacity, defaultOutsidePosition: p2 });
    var f2 = t2.getTextContent();
    if (s2 && f2) {
      var g2 = i2.get(["label", "position"]);
      t2.textConfig.inside = "middle" === g2 || null, function(t3, e3, n3, i3) {
        if (Z(i3))
          t3.setTextConfig({ rotation: i3 });
        else if (H(e3))
          t3.setTextConfig({ rotation: 0 });
        else {
          var r3, o3 = t3.shape, a3 = o3.clockwise ? o3.startAngle : o3.endAngle, s3 = o3.clockwise ? o3.endAngle : o3.startAngle, l3 = (a3 + s3) / 2, u3 = n3(e3);
          switch (u3) {
            case "startArc":
            case "insideStartArc":
            case "middle":
            case "insideEndArc":
            case "endArc":
              r3 = l3;
              break;
            case "startAngle":
            case "insideStartAngle":
              r3 = a3;
              break;
            case "endAngle":
            case "insideEndAngle":
              r3 = s3;
              break;
            default:
              return void t3.setTextConfig({ rotation: 0 });
          }
          var h3 = 1.5 * Math.PI - r3;
          "middle" === u3 && h3 > Math.PI / 2 && h3 < 1.5 * Math.PI && (h3 -= Math.PI), t3.setTextConfig({ rotation: h3 });
        }
      }(t2, "outside" === g2 ? p2 : g2, vM(a2), i2.get(["label", "rotate"]));
    }
    uc(f2, d2, o2.getRawValue(n2), function(t3) {
      return vS(e2, t3);
    });
    var y2 = i2.getModel(["emphasis"]);
    Hl(t2, y2.get("focus"), y2.get("blurScope"), y2.get("disabled")), Zl(t2, i2), function(t3) {
      return null != t3.startAngle && null != t3.endAngle && t3.startAngle === t3.endAngle;
    }(r2) && (t2.style.fill = "none", t2.style.stroke = "none", N(t2.states, function(t3) {
      t3.style && (t3.style.fill = t3.style.stroke = "none");
    }));
  }
  var xM = function() {
  };
  var _M = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "largeBar", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new xM();
    }, n2.prototype.buildPath = function(t3, e2) {
      for (var n3 = e2.points, i2 = this.baseDimIdx, r2 = 1 - this.baseDimIdx, o2 = [], a2 = [], s2 = this.barWidth, l2 = 0; l2 < n3.length; l2 += 3)
        a2[i2] = s2, a2[r2] = n3[l2 + 2], o2[i2] = n3[l2 + i2], o2[r2] = n3[l2 + r2], t3.rect(o2[0], o2[1], a2[0], a2[1]);
    }, n2;
  }(Ms);
  function bM(t2, e2, n2, i2) {
    var r2 = t2.getData(), o2 = r2.getLayout("valueAxisHorizontal") ? 1 : 0, a2 = r2.getLayout("largeDataIndices"), s2 = r2.getLayout("size"), l2 = t2.getModel("backgroundStyle"), u2 = r2.getLayout("largeBackgroundPoints");
    if (u2) {
      var h2 = new _M({ shape: { points: u2 }, incremental: !!i2, silent: true, z2: 0 });
      h2.baseDimIdx = o2, h2.largeDataIndices = a2, h2.barWidth = s2, h2.useStyle(l2.getItemStyle()), e2.add(h2), n2 && n2.push(h2);
    }
    var c2 = new _M({ shape: { points: r2.getLayout("largePoints") }, incremental: !!i2, ignoreCoarsePointer: true, z2: 1 });
    c2.baseDimIdx = o2, c2.largeDataIndices = a2, c2.barWidth = s2, e2.add(c2), c2.useStyle(r2.getVisual("style")), Js(c2).seriesIndex = t2.seriesIndex, t2.get("silent") || (c2.on("mousedown", wM), c2.on("mousemove", wM)), n2 && n2.push(c2);
  }
  var wM = Vg(function(t2) {
    var e2 = function(t3, e3, n2) {
      for (var i2 = t3.baseDimIdx, r2 = 1 - i2, o2 = t3.shape.points, a2 = t3.largeDataIndices, s2 = [], l2 = [], u2 = t3.barWidth, h2 = 0, c2 = o2.length / 3; h2 < c2; h2++) {
        var p2 = 3 * h2;
        if (l2[i2] = u2, l2[r2] = o2[p2 + 2], s2[i2] = o2[p2 + i2], s2[r2] = o2[p2 + r2], l2[r2] < 0 && (s2[r2] += l2[r2], l2[r2] = -l2[r2]), e3 >= s2[0] && e3 <= s2[0] + l2[0] && n2 >= s2[1] && n2 <= s2[1] + l2[1])
          return a2[h2];
      }
      return -1;
    }(this, t2.offsetX, t2.offsetY);
    Js(this).dataIndex = e2 >= 0 ? e2 : null;
  }, 30, false);
  function SM(t2, e2, n2) {
    if (zS(n2, "cartesian2d")) {
      var i2 = e2, r2 = n2.getArea();
      return { x: t2 ? i2.x : r2.x, y: t2 ? r2.y : i2.y, width: t2 ? i2.width : r2.width, height: t2 ? r2.height : i2.height };
    }
    var o2 = e2;
    return { cx: (r2 = n2.getArea()).cx, cy: r2.cy, r0: t2 ? r2.r0 : o2.r0, r: t2 ? r2.r : o2.r, startAngle: t2 ? o2.startAngle : 0, endAngle: t2 ? o2.endAngle : 2 * Math.PI };
  }
  var MM = 2 * Math.PI;
  var IM = Math.PI / 180;
  function TM(t2, e2) {
    return Tp(t2.getBoxLayoutParams(), { width: e2.getWidth(), height: e2.getHeight() });
  }
  function CM(t2, e2) {
    var n2 = TM(t2, e2), i2 = t2.get("center"), r2 = t2.get("radius");
    H(r2) || (r2 = [0, r2]);
    var o2, a2, s2 = Xr(n2.width, e2.getWidth()), l2 = Xr(n2.height, e2.getHeight()), u2 = Math.min(s2, l2), h2 = Xr(r2[0], u2 / 2), c2 = Xr(r2[1], u2 / 2), p2 = t2.coordinateSystem;
    if (p2) {
      var d2 = p2.dataToPoint(i2);
      o2 = d2[0] || 0, a2 = d2[1] || 0;
    } else
      H(i2) || (i2 = [i2, i2]), o2 = Xr(i2[0], s2) + n2.x, a2 = Xr(i2[1], l2) + n2.y;
    return { cx: o2, cy: a2, r0: h2, r: c2 };
  }
  function DM(t2, e2, n2) {
    e2.eachSeriesByType(t2, function(t3) {
      var e3 = t3.getData(), i2 = e3.mapDimension("value"), r2 = TM(t3, n2), o2 = CM(t3, n2), a2 = o2.cx, s2 = o2.cy, l2 = o2.r, u2 = o2.r0, h2 = -t3.get("startAngle") * IM, c2 = t3.get("minAngle") * IM, p2 = 0;
      e3.each(i2, function(t4) {
        !isNaN(t4) && p2++;
      });
      var d2 = e3.getSum(i2), f2 = Math.PI / (d2 || p2) * 2, g2 = t3.get("clockwise"), y2 = t3.get("roseType"), v2 = t3.get("stillShowZeroSum"), m2 = e3.getDataExtent(i2);
      m2[0] = 0;
      var x2 = MM, _2 = 0, b2 = h2, w2 = g2 ? 1 : -1;
      if (e3.setLayout({ viewRect: r2, r: l2 }), e3.each(i2, function(t4, n3) {
        var i3;
        if (isNaN(t4))
          e3.setItemLayout(n3, { angle: NaN, startAngle: NaN, endAngle: NaN, clockwise: g2, cx: a2, cy: s2, r0: u2, r: y2 ? NaN : l2 });
        else {
          (i3 = "area" !== y2 ? 0 === d2 && v2 ? f2 : t4 * f2 : MM / p2) < c2 ? (i3 = c2, x2 -= c2) : _2 += t4;
          var r3 = b2 + w2 * i3;
          e3.setItemLayout(n3, { angle: i3, startAngle: b2, endAngle: r3, clockwise: g2, cx: a2, cy: s2, r0: u2, r: y2 ? Yr(t4, m2, [u2, l2]) : l2 }), b2 = r3;
        }
      }), x2 < MM && p2)
        if (x2 <= 1e-3) {
          var S2 = MM / p2;
          e3.each(i2, function(t4, n3) {
            if (!isNaN(t4)) {
              var i3 = e3.getItemLayout(n3);
              i3.angle = S2, i3.startAngle = h2 + w2 * n3 * S2, i3.endAngle = h2 + w2 * (n3 + 1) * S2;
            }
          });
        } else
          f2 = x2 / _2, b2 = h2, e3.each(i2, function(t4, n3) {
            if (!isNaN(t4)) {
              var i3 = e3.getItemLayout(n3), r3 = i3.angle === c2 ? c2 : t4 * f2;
              i3.startAngle = b2, i3.endAngle = b2 + w2 * r3, b2 += w2 * r3;
            }
          });
    });
  }
  function AM(t2) {
    return { seriesType: t2, reset: function(t3, e2) {
      var n2 = e2.findComponents({ mainType: "legend" });
      if (n2 && n2.length) {
        var i2 = t3.getData();
        i2.filterSelf(function(t4) {
          for (var e3 = i2.getName(t4), r2 = 0; r2 < n2.length; r2++)
            if (!n2[r2].isSelected(e3))
              return false;
          return true;
        });
      }
    } };
  }
  var kM = Math.PI / 180;
  function LM(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2) {
    if (!(t2.length < 2)) {
      for (var h2 = t2.length, c2 = 0; c2 < h2; c2++)
        if ("outer" === t2[c2].position && "labelLine" === t2[c2].labelAlignTo) {
          var p2 = t2[c2].label.x - u2;
          t2[c2].linePoints[1][0] += p2, t2[c2].label.x = u2;
        }
      Hb(t2, l2, l2 + a2) && function(t3) {
        for (var o3 = { list: [], maxY: 0 }, a3 = { list: [], maxY: 0 }, s3 = 0; s3 < t3.length; s3++)
          if ("none" === t3[s3].labelAlignTo) {
            var l3 = t3[s3], u3 = l3.label.y > n2 ? a3 : o3, h3 = Math.abs(l3.label.y - n2);
            if (h3 >= u3.maxY) {
              var c3 = l3.label.x - e2 - l3.len2 * r2, p3 = i2 + l3.len, f2 = Math.abs(c3) < p3 ? Math.sqrt(h3 * h3 / (1 - c3 * c3 / p3 / p3)) : p3;
              u3.rB = f2, u3.maxY = h3;
            }
            u3.list.push(l3);
          }
        d2(o3), d2(a3);
      }(t2);
    }
    function d2(t3) {
      for (var o3 = t3.rB, a3 = o3 * o3, s3 = 0; s3 < t3.list.length; s3++) {
        var l3 = t3.list[s3], u3 = Math.abs(l3.label.y - n2), h3 = i2 + l3.len, c3 = h3 * h3, p3 = Math.sqrt((1 - Math.abs(u3 * u3 / a3)) * c3), d3 = e2 + (p3 + l3.len2) * r2, f2 = d3 - l3.label.x;
        PM(l3, l3.targetTextWidth - f2 * r2, true), l3.label.x = d3;
      }
    }
  }
  function PM(t2, e2, n2) {
    if (void 0 === n2 && (n2 = false), null == t2.labelStyleWidth) {
      var i2 = t2.label, r2 = i2.style, o2 = t2.rect, a2 = r2.backgroundColor, s2 = r2.padding, l2 = s2 ? s2[1] + s2[3] : 0, u2 = r2.overflow, h2 = o2.width + (a2 ? 0 : l2);
      if (e2 < h2 || n2) {
        var c2 = o2.height;
        if (u2 && u2.match("break")) {
          i2.setStyle("backgroundColor", null), i2.setStyle("width", e2 - l2);
          var p2 = i2.getBoundingRect();
          i2.setStyle("width", Math.ceil(p2.width)), i2.setStyle("backgroundColor", a2);
        } else {
          var d2 = e2 - l2, f2 = e2 < h2 ? d2 : n2 ? d2 > t2.unconstrainedWidth ? null : d2 : null;
          i2.setStyle("width", f2);
        }
        var g2 = i2.getBoundingRect();
        o2.width = g2.width;
        var y2 = (i2.style.margin || 0) + 2.1;
        o2.height = g2.height + y2, o2.y -= (o2.height - c2) / 2;
      }
    }
  }
  function OM(t2) {
    return "center" === t2.position;
  }
  function RM(t2) {
    var e2, n2, i2 = t2.getData(), r2 = [], o2 = false, a2 = (t2.get("minShowLabelAngle") || 0) * kM, s2 = i2.getLayout("viewRect"), l2 = i2.getLayout("r"), u2 = s2.width, h2 = s2.x, c2 = s2.y, p2 = s2.height;
    function d2(t3) {
      t3.ignore = true;
    }
    i2.each(function(t3) {
      var s3 = i2.getItemGraphicEl(t3), c3 = s3.shape, p3 = s3.getTextContent(), f3 = s3.getTextGuideLine(), g3 = i2.getItemModel(t3), y3 = g3.getModel("label"), v3 = y3.get("position") || g3.get(["emphasis", "label", "position"]), m3 = y3.get("distanceToLabelLine"), x3 = y3.get("alignTo"), _3 = Xr(y3.get("edgeDistance"), u2), b2 = y3.get("bleedMargin"), w2 = g3.getModel("labelLine"), S2 = w2.get("length");
      S2 = Xr(S2, u2);
      var M2 = w2.get("length2");
      if (M2 = Xr(M2, u2), Math.abs(c3.endAngle - c3.startAngle) < a2)
        return N(p3.states, d2), p3.ignore = true, void (f3 && (N(f3.states, d2), f3.ignore = true));
      if (function(t4) {
        if (!t4.ignore)
          return true;
        for (var e3 in t4.states)
          if (false === t4.states[e3].ignore)
            return true;
        return false;
      }(p3)) {
        var I2, T2, C2, D2, A2 = (c3.startAngle + c3.endAngle) / 2, k2 = Math.cos(A2), L2 = Math.sin(A2);
        e2 = c3.cx, n2 = c3.cy;
        var P2 = "inside" === v3 || "inner" === v3;
        if ("center" === v3)
          I2 = c3.cx, T2 = c3.cy, D2 = "center";
        else {
          var O2 = (P2 ? (c3.r + c3.r0) / 2 * k2 : c3.r * k2) + e2, R2 = (P2 ? (c3.r + c3.r0) / 2 * L2 : c3.r * L2) + n2;
          if (I2 = O2 + 3 * k2, T2 = R2 + 3 * L2, !P2) {
            var E2 = O2 + k2 * (S2 + l2 - c3.r), z2 = R2 + L2 * (S2 + l2 - c3.r), V2 = E2 + (k2 < 0 ? -1 : 1) * M2;
            I2 = "edge" === x3 ? k2 < 0 ? h2 + _3 : h2 + u2 - _3 : V2 + (k2 < 0 ? -m3 : m3), T2 = z2, C2 = [[O2, R2], [E2, z2], [V2, z2]];
          }
          D2 = P2 ? "center" : "edge" === x3 ? k2 > 0 ? "right" : "left" : k2 > 0 ? "left" : "right";
        }
        var B2 = Math.PI, F2 = 0, G2 = y3.get("rotate");
        if (Z(G2))
          F2 = G2 * (B2 / 180);
        else if ("center" === v3)
          F2 = 0;
        else if ("radial" === G2 || true === G2) {
          F2 = k2 < 0 ? -A2 + B2 : -A2;
        } else if ("tangential" === G2 && "outside" !== v3 && "outer" !== v3) {
          var W2 = Math.atan2(k2, L2);
          W2 < 0 && (W2 = 2 * B2 + W2), L2 > 0 && (W2 = B2 + W2), F2 = W2 - B2;
        }
        if (o2 = !!F2, p3.x = I2, p3.y = T2, p3.rotation = F2, p3.setStyle({ verticalAlign: "middle" }), P2) {
          p3.setStyle({ align: D2 });
          var H2 = p3.states.select;
          H2 && (H2.x += p3.x, H2.y += p3.y);
        } else {
          var Y2 = p3.getBoundingRect().clone();
          Y2.applyTransform(p3.getComputedTransform());
          var X2 = (p3.style.margin || 0) + 2.1;
          Y2.y -= X2 / 2, Y2.height += X2, r2.push({ label: p3, labelLine: f3, position: v3, len: S2, len2: M2, minTurnAngle: w2.get("minTurnAngle"), maxSurfaceAngle: w2.get("maxSurfaceAngle"), surfaceNormal: new Ce(k2, L2), linePoints: C2, textAlign: D2, labelDistance: m3, labelAlignTo: x3, edgeDistance: _3, bleedMargin: b2, rect: Y2, unconstrainedWidth: Y2.width, labelStyleWidth: p3.style.width });
        }
        s3.setTextConfig({ inside: P2 });
      }
    }), !o2 && t2.get("avoidLabelOverlap") && function(t3, e3, n3, i3, r3, o3, a3, s3) {
      for (var l3 = [], u3 = [], h3 = Number.MAX_VALUE, c3 = -Number.MAX_VALUE, p3 = 0; p3 < t3.length; p3++) {
        var d3 = t3[p3].label;
        OM(t3[p3]) || (d3.x < e3 ? (h3 = Math.min(h3, d3.x), l3.push(t3[p3])) : (c3 = Math.max(c3, d3.x), u3.push(t3[p3])));
      }
      for (p3 = 0; p3 < t3.length; p3++)
        if (!OM(y3 = t3[p3]) && y3.linePoints) {
          if (null != y3.labelStyleWidth)
            continue;
          d3 = y3.label;
          var f3 = y3.linePoints, g3 = void 0;
          g3 = "edge" === y3.labelAlignTo ? d3.x < e3 ? f3[2][0] - y3.labelDistance - a3 - y3.edgeDistance : a3 + r3 - y3.edgeDistance - f3[2][0] - y3.labelDistance : "labelLine" === y3.labelAlignTo ? d3.x < e3 ? h3 - a3 - y3.bleedMargin : a3 + r3 - c3 - y3.bleedMargin : d3.x < e3 ? d3.x - a3 - y3.bleedMargin : a3 + r3 - d3.x - y3.bleedMargin, y3.targetTextWidth = g3, PM(y3, g3);
        }
      for (LM(u3, e3, n3, i3, 1, 0, o3, 0, s3, c3), LM(l3, e3, n3, i3, -1, 0, o3, 0, s3, h3), p3 = 0; p3 < t3.length; p3++) {
        var y3;
        if (!OM(y3 = t3[p3]) && y3.linePoints) {
          d3 = y3.label, f3 = y3.linePoints;
          var v3 = "edge" === y3.labelAlignTo, m3 = d3.style.padding, x3 = m3 ? m3[1] + m3[3] : 0, _3 = d3.style.backgroundColor ? 0 : x3, b2 = y3.rect.width + _3, w2 = f3[1][0] - f3[2][0];
          v3 ? d3.x < e3 ? f3[2][0] = a3 + y3.edgeDistance + b2 + y3.labelDistance : f3[2][0] = a3 + r3 - y3.edgeDistance - b2 - y3.labelDistance : (d3.x < e3 ? f3[2][0] = d3.x + y3.labelDistance : f3[2][0] = d3.x - y3.labelDistance, f3[1][0] = f3[2][0] + w2), f3[1][1] = f3[2][1] = d3.y;
        }
      }
    }(r2, e2, n2, l2, u2, p2, h2, c2);
    for (var f2 = 0; f2 < r2.length; f2++) {
      var g2 = r2[f2], y2 = g2.label, v2 = g2.labelLine, m2 = isNaN(y2.x) || isNaN(y2.y);
      if (y2) {
        y2.setStyle({ align: g2.textAlign }), m2 && (N(y2.states, d2), y2.ignore = true);
        var x2 = y2.states.select;
        x2 && (x2.x += y2.x, x2.y += y2.y);
      }
      if (v2) {
        var _2 = g2.linePoints;
        m2 || !_2 ? (N(v2.states, d2), v2.ignore = true) : (Nb(_2, g2.minTurnAngle), Eb(_2, g2.surfaceNormal, g2.maxSurfaceAngle), v2.setShape({ points: _2 }), y2.__hostTarget.textGuideLineConfig = { anchor: new Ce(_2[0][0], _2[0][1]) });
      }
    }
  }
  var NM = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this) || this;
      r2.z2 = 2;
      var o2 = new Bs();
      return r2.setTextContent(o2), r2.updateData(e2, n3, i2, true), r2;
    }
    return e(n2, t2), n2.prototype.updateData = function(t3, e2, n3, i2) {
      var r2 = this, o2 = t3.hostModel, a2 = t3.getItemModel(e2), s2 = a2.getModel("emphasis"), l2 = t3.getItemLayout(e2), u2 = D(oM(a2.getModel("itemStyle"), l2, true), l2);
      if (isNaN(u2.startAngle))
        r2.setShape(u2);
      else {
        if (i2) {
          r2.setShape(u2);
          var h2 = o2.getShallow("animationType");
          o2.ecModel.ssr ? (fh(r2, { scaleX: 0, scaleY: 0 }, o2, { dataIndex: e2, isFrom: true }), r2.originX = u2.cx, r2.originY = u2.cy) : "scale" === h2 ? (r2.shape.r = l2.r0, fh(r2, { shape: { r: l2.r } }, o2, e2)) : null != n3 ? (r2.setShape({ startAngle: n3, endAngle: n3 }), fh(r2, { shape: { startAngle: l2.startAngle, endAngle: l2.endAngle } }, o2, e2)) : (r2.shape.endAngle = l2.startAngle, dh(r2, { shape: { endAngle: l2.endAngle } }, o2, e2));
        } else
          xh(r2), dh(r2, { shape: u2 }, o2, e2);
        r2.useStyle(t3.getItemVisual(e2, "style")), Zl(r2, a2);
        var c2 = (l2.startAngle + l2.endAngle) / 2, p2 = o2.get("selectedOffset"), d2 = Math.cos(c2) * p2, f2 = Math.sin(c2) * p2, g2 = a2.getShallow("cursor");
        g2 && r2.attr("cursor", g2), this._updateLabel(o2, t3, e2), r2.ensureState("emphasis").shape = D({ r: l2.r + (s2.get("scale") && s2.get("scaleSize") || 0) }, oM(s2.getModel("itemStyle"), l2)), D(r2.ensureState("select"), { x: d2, y: f2, shape: oM(a2.getModel(["select", "itemStyle"]), l2) }), D(r2.ensureState("blur"), { shape: oM(a2.getModel(["blur", "itemStyle"]), l2) });
        var y2 = r2.getTextGuideLine(), v2 = r2.getTextContent();
        y2 && D(y2.ensureState("select"), { x: d2, y: f2 }), D(v2.ensureState("select"), { x: d2, y: f2 }), Hl(this, s2.get("focus"), s2.get("blurScope"), s2.get("disabled"));
      }
    }, n2.prototype._updateLabel = function(t3, e2, n3) {
      var i2 = this, r2 = e2.getItemModel(n3), o2 = r2.getModel("labelLine"), a2 = e2.getItemVisual(n3, "style"), s2 = a2 && a2.fill, l2 = a2 && a2.opacity;
      Qh(i2, tc(r2), { labelFetcher: e2.hostModel, labelDataIndex: n3, inheritColor: s2, defaultOpacity: l2, defaultText: t3.getFormattedLabel(n3, "normal") || e2.getName(n3) });
      var u2 = i2.getTextContent();
      i2.setTextConfig({ position: null, rotation: null }), u2.attr({ z2: 10 });
      var h2 = t3.get(["label", "position"]);
      if ("outside" !== h2 && "outer" !== h2)
        i2.removeTextGuideLine();
      else {
        var c2 = this.getTextGuideLine();
        c2 || (c2 = new Hu(), this.setTextGuideLine(c2)), Bb(this, Fb(r2), { stroke: s2, opacity: rt(o2.get(["lineStyle", "opacity"]), l2, 1) });
      }
    }, n2;
  }(Eu);
  var EM = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.ignoreLabelLineUpdate = true, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      var r2, o2 = t3.getData(), a2 = this._data, s2 = this.group;
      if (!a2 && o2.count() > 0) {
        for (var l2 = o2.getItemLayout(0), u2 = 1; isNaN(l2 && l2.startAngle) && u2 < o2.count(); ++u2)
          l2 = o2.getItemLayout(u2);
        l2 && (r2 = l2.startAngle);
      }
      if (this._emptyCircleSector && s2.remove(this._emptyCircleSector), 0 === o2.count() && t3.get("showEmptyCircle")) {
        var h2 = new Eu({ shape: CM(t3, n3) });
        h2.useStyle(t3.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = h2, s2.add(h2);
      }
      o2.diff(a2).add(function(t4) {
        var e3 = new NM(o2, t4, r2);
        o2.setItemGraphicEl(t4, e3), s2.add(e3);
      }).update(function(t4, e3) {
        var n4 = a2.getItemGraphicEl(e3);
        n4.updateData(o2, t4, r2), n4.off("click"), s2.add(n4), o2.setItemGraphicEl(t4, n4);
      }).remove(function(e3) {
        mh(a2.getItemGraphicEl(e3), t3, e3);
      }).execute(), RM(t3), "expansion" !== t3.get("animationTypeUpdate") && (this._data = o2);
    }, n2.prototype.dispose = function() {
    }, n2.prototype.containPoint = function(t3, e2) {
      var n3 = e2.getData().getItemLayout(0);
      if (n3) {
        var i2 = t3[0] - n3.cx, r2 = t3[1] - n3.cy, o2 = Math.sqrt(i2 * i2 + r2 * r2);
        return o2 <= n3.r && o2 >= n3.r0;
      }
    }, n2.type = "pie", n2;
  }(Ag);
  function zM(t2, e2, n2) {
    e2 = H(e2) && { coordDimensions: e2 } || D({ encodeDefine: t2.getEncode() }, e2);
    var i2 = t2.getSource(), r2 = mx(i2, e2).dimensions, o2 = new vx(r2, t2);
    return o2.initData(i2, n2), o2;
  }
  var VM = function() {
    function t2(t3, e2) {
      this._getDataWithEncodedVisual = t3, this._getRawData = e2;
    }
    return t2.prototype.getAllNames = function() {
      var t3 = this._getRawData();
      return t3.mapArray(t3.getName);
    }, t2.prototype.containName = function(t3) {
      return this._getRawData().indexOfName(t3) >= 0;
    }, t2.prototype.indexOfName = function(t3) {
      return this._getDataWithEncodedVisual().indexOfName(t3);
    }, t2.prototype.getItemVisual = function(t3, e2) {
      return this._getDataWithEncodedVisual().getItemVisual(t3, e2);
    }, t2;
  }();
  var BM = Po();
  var FM = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      t2.prototype.init.apply(this, arguments), this.legendVisualProvider = new VM(G(this.getData, this), G(this.getRawData, this)), this._defaultLabelLine(e2);
    }, n2.prototype.mergeOption = function() {
      t2.prototype.mergeOption.apply(this, arguments);
    }, n2.prototype.getInitialData = function() {
      return zM(this, { coordDimensions: ["value"], encodeDefaulter: W($p, this) });
    }, n2.prototype.getDataParams = function(e2) {
      var n3 = this.getData(), i2 = BM(n3), r2 = i2.seats;
      if (!r2) {
        var o2 = [];
        n3.each(n3.mapDimension("value"), function(t3) {
          o2.push(t3);
        }), r2 = i2.seats = $r(o2, n3.hostModel.get("percentPrecision"));
      }
      var a2 = t2.prototype.getDataParams.call(this, e2);
      return a2.percent = r2[e2] || 0, a2.$vars.push("percent"), a2;
    }, n2.prototype._defaultLabelLine = function(t3) {
      bo(t3, "labelLine", ["show"]);
      var e2 = t3.labelLine, n3 = t3.emphasis.labelLine;
      e2.show = e2.show && t3.label.show, n3.show = n3.show && t3.emphasis.label.show;
    }, n2.type = "series.pie", n2.defaultOption = { z: 2, legendHoverLink: true, colorBy: "data", center: ["50%", "50%"], radius: [0, "75%"], clockwise: true, startAngle: 90, minAngle: 0, minShowLabelAngle: 0, selectedOffset: 10, percentPrecision: 2, stillShowZeroSum: true, left: 0, top: 0, right: 0, bottom: 0, width: null, height: null, label: { rotate: 0, show: true, overflow: "truncate", position: "outer", alignTo: "none", edgeDistance: "25%", bleedMargin: 10, distanceToLabelLine: 5 }, labelLine: { show: true, length: 15, length2: 15, smooth: false, minTurnAngle: 90, maxSurfaceAngle: 90, lineStyle: { width: 1, type: "solid" } }, itemStyle: { borderWidth: 1, borderJoin: "round" }, showEmptyCircle: true, emptyCircleStyle: { color: "lightgray", opacity: 1 }, labelLayout: { hideOverlap: true }, emphasis: { scale: true, scaleSize: 5 }, avoidLabelOverlap: true, animationType: "expansion", animationDuration: 1e3, animationTypeUpdate: "transition", animationEasingUpdate: "cubicInOut", animationDurationUpdate: 500, animationEasing: "cubicInOut" }, n2;
  }(vg);
  var GM = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this, { useEncodeDefaulter: true });
    }, n2.prototype.getProgressive = function() {
      var t3 = this.option.progressive;
      return null == t3 ? this.option.large ? 5e3 : this.get("progressive") : t3;
    }, n2.prototype.getProgressiveThreshold = function() {
      var t3 = this.option.progressiveThreshold;
      return null == t3 ? this.option.large ? 1e4 : this.get("progressiveThreshold") : t3;
    }, n2.prototype.brushSelector = function(t3, e2, n3) {
      return n3.point(e2.getItemLayout(t3));
    }, n2.prototype.getZLevelKey = function() {
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : "";
    }, n2.type = "series.scatter", n2.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], n2.defaultOption = { coordinateSystem: "cartesian2d", z: 2, legendHoverLink: true, symbolSize: 10, large: false, largeThreshold: 2e3, itemStyle: { opacity: 0.8 }, emphasis: { scale: true }, clip: true, select: { itemStyle: { borderColor: "#212121" } }, universalTransition: { divideShape: "clone" } }, n2;
  }(vg);
  var WM = function() {
  };
  var HM = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3._off = 0, n3.hoverDataIdx = -1, n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new WM();
    }, n2.prototype.reset = function() {
      this.notClear = false, this._off = 0;
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3, i2 = e2.points, r2 = e2.size, o2 = this.symbolProxy, a2 = o2.shape, s2 = t3.getContext ? t3.getContext() : t3, l2 = s2 && r2[0] < 4, u2 = this.softClipShape;
      if (l2)
        this._ctx = s2;
      else {
        for (this._ctx = null, n3 = this._off; n3 < i2.length; ) {
          var h2 = i2[n3++], c2 = i2[n3++];
          isNaN(h2) || isNaN(c2) || (u2 && !u2.contain(h2, c2) || (a2.x = h2 - r2[0] / 2, a2.y = c2 - r2[1] / 2, a2.width = r2[0], a2.height = r2[1], o2.buildPath(t3, a2, true)));
        }
        this.incremental && (this._off = n3, this.notClear = true);
      }
    }, n2.prototype.afterBrush = function() {
      var t3, e2 = this.shape, n3 = e2.points, i2 = e2.size, r2 = this._ctx, o2 = this.softClipShape;
      if (r2) {
        for (t3 = this._off; t3 < n3.length; ) {
          var a2 = n3[t3++], s2 = n3[t3++];
          isNaN(a2) || isNaN(s2) || (o2 && !o2.contain(a2, s2) || r2.fillRect(a2 - i2[0] / 2, s2 - i2[1] / 2, i2[0], i2[1]));
        }
        this.incremental && (this._off = t3, this.notClear = true);
      }
    }, n2.prototype.findDataIndex = function(t3, e2) {
      for (var n3 = this.shape, i2 = n3.points, r2 = n3.size, o2 = Math.max(r2[0], 4), a2 = Math.max(r2[1], 4), s2 = i2.length / 2 - 1; s2 >= 0; s2--) {
        var l2 = 2 * s2, u2 = i2[l2] - o2 / 2, h2 = i2[l2 + 1] - a2 / 2;
        if (t3 >= u2 && e2 >= h2 && t3 <= u2 + o2 && e2 <= h2 + a2)
          return s2;
      }
      return -1;
    }, n2.prototype.contain = function(t3, e2) {
      var n3 = this.transformCoordToLocal(t3, e2), i2 = this.getBoundingRect();
      return t3 = n3[0], e2 = n3[1], i2.contain(t3, e2) ? (this.hoverDataIdx = this.findDataIndex(t3, e2)) >= 0 : (this.hoverDataIdx = -1, false);
    }, n2.prototype.getBoundingRect = function() {
      var t3 = this._rect;
      if (!t3) {
        for (var e2 = this.shape, n3 = e2.points, i2 = e2.size, r2 = i2[0], o2 = i2[1], a2 = 1 / 0, s2 = 1 / 0, l2 = -1 / 0, u2 = -1 / 0, h2 = 0; h2 < n3.length; ) {
          var c2 = n3[h2++], p2 = n3[h2++];
          a2 = Math.min(c2, a2), l2 = Math.max(c2, l2), s2 = Math.min(p2, s2), u2 = Math.max(p2, u2);
        }
        t3 = this._rect = new Ee(a2 - r2 / 2, s2 - o2 / 2, l2 - a2 + r2, u2 - s2 + o2);
      }
      return t3;
    }, n2;
  }(Ms);
  var YM = function() {
    function t2() {
      this.group = new Er();
    }
    return t2.prototype.updateData = function(t3, e2) {
      this._clear();
      var n2 = this._create();
      n2.setShape({ points: t3.getLayout("points") }), this._setCommon(n2, t3, e2);
    }, t2.prototype.updateLayout = function(t3) {
      var e2 = t3.getLayout("points");
      this.group.eachChild(function(t4) {
        if (null != t4.startIndex) {
          var n2 = 2 * (t4.endIndex - t4.startIndex), i2 = 4 * t4.startIndex * 2;
          e2 = new Float32Array(e2.buffer, i2, n2);
        }
        t4.setShape("points", e2), t4.reset();
      });
    }, t2.prototype.incrementalPrepareUpdate = function(t3) {
      this._clear();
    }, t2.prototype.incrementalUpdate = function(t3, e2, n2) {
      var i2 = this._newAdded[0], r2 = e2.getLayout("points"), o2 = i2 && i2.shape.points;
      if (o2 && o2.length < 2e4) {
        var a2 = o2.length, s2 = new Float32Array(a2 + r2.length);
        s2.set(o2), s2.set(r2, a2), i2.endIndex = t3.end, i2.setShape({ points: s2 });
      } else {
        this._newAdded = [];
        var l2 = this._create();
        l2.startIndex = t3.start, l2.endIndex = t3.end, l2.incremental = true, l2.setShape({ points: r2 }), this._setCommon(l2, e2, n2);
      }
    }, t2.prototype.eachRendered = function(t3) {
      this._newAdded[0] && t3(this._newAdded[0]);
    }, t2.prototype._create = function() {
      var t3 = new HM({ cursor: "default" });
      return t3.ignoreCoarsePointer = true, this.group.add(t3), this._newAdded.push(t3), t3;
    }, t2.prototype._setCommon = function(t3, e2, n2) {
      var i2 = e2.hostModel;
      n2 = n2 || {};
      var r2 = e2.getVisual("symbolSize");
      t3.setShape("size", r2 instanceof Array ? r2 : [r2, r2]), t3.softClipShape = n2.clipShape || null, t3.symbolProxy = Gy(e2.getVisual("symbol"), 0, 0, 0, 0), t3.setColor = t3.symbolProxy.setColor;
      var o2 = t3.shape.size[0] < 4;
      t3.useStyle(i2.getModel("itemStyle").getItemStyle(o2 ? ["color", "shadowBlur", "shadowColor"] : ["color"]));
      var a2 = e2.getVisual("style"), s2 = a2 && a2.fill;
      s2 && t3.setColor(s2);
      var l2 = Js(t3);
      l2.seriesIndex = i2.seriesIndex, t3.on("mousemove", function(e3) {
        l2.dataIndex = null;
        var n3 = t3.hoverDataIdx;
        n3 >= 0 && (l2.dataIndex = n3 + (t3.startIndex || 0));
      });
    }, t2.prototype.remove = function() {
      this._clear();
    }, t2.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, t2;
  }();
  var XM = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData();
      this._updateSymbolDraw(i2, t3).updateData(i2, { clipShape: this._getClipShape(t3) }), this._finished = true;
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      var i2 = t3.getData();
      this._updateSymbolDraw(i2, t3).incrementalPrepareUpdate(i2), this._finished = false;
    }, n2.prototype.incrementalRender = function(t3, e2, n3) {
      this._symbolDraw.incrementalUpdate(t3, e2.getData(), { clipShape: this._getClipShape(e2) }), this._finished = t3.end === e2.getData().count();
    }, n2.prototype.updateTransform = function(t3, e2, n3) {
      var i2 = t3.getData();
      if (this.group.dirty(), !this._finished || i2.count() > 1e4)
        return { update: true };
      var r2 = qS("").reset(t3, e2, n3);
      r2.progress && r2.progress({ start: 0, end: i2.count(), count: i2.count() }, i2), this._symbolDraw.updateLayout(i2);
    }, n2.prototype.eachRendered = function(t3) {
      this._symbolDraw && this._symbolDraw.eachRendered(t3);
    }, n2.prototype._getClipShape = function(t3) {
      var e2 = t3.coordinateSystem, n3 = e2 && e2.getArea && e2.getArea();
      return t3.get("clip", true) ? n3 : null;
    }, n2.prototype._updateSymbolDraw = function(t3, e2) {
      var n3 = this._symbolDraw, i2 = e2.pipelineContext.large;
      return n3 && i2 === this._isLargeDraw || (n3 && n3.remove(), n3 = this._symbolDraw = i2 ? new YM() : new SS(), this._isLargeDraw = i2, this.group.removeAll()), this.group.add(n3.group), n3;
    }, n2.prototype.remove = function(t3, e2) {
      this._symbolDraw && this._symbolDraw.remove(true), this._symbolDraw = null;
    }, n2.prototype.dispose = function() {
    }, n2.type = "scatter", n2;
  }(Ag);
  var UM = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.type = "grid", n2.dependencies = ["xAxis", "yAxis"], n2.layoutMode = "box", n2.defaultOption = { show: false, z: 0, left: "10%", top: 60, right: "10%", bottom: 70, containLabel: false, backgroundColor: "rgba(0,0,0,0)", borderWidth: 1, borderColor: "#ccc" }, n2;
  }(Op);
  var ZM = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("grid", Eo).models[0];
    }, n2.type = "cartesian2dAxis", n2;
  }(Op);
  O(ZM, R_);
  var jM = { show: true, z: 0, inverse: false, name: "", nameLocation: "end", nameRotate: null, nameTruncate: { maxWidth: null, ellipsis: "...", placeholder: "." }, nameTextStyle: {}, nameGap: 15, silent: false, triggerEvent: false, tooltip: { show: false }, axisPointer: {}, axisLine: { show: true, onZero: true, onZeroAxisIndex: null, lineStyle: { color: "#6E7079", width: 1, type: "solid" }, symbol: ["none", "none"], symbolSize: [10, 15] }, axisTick: { show: true, inside: false, length: 5, lineStyle: { width: 1 } }, axisLabel: { show: true, inside: false, rotate: 0, showMinLabel: null, showMaxLabel: null, margin: 8, fontSize: 12 }, splitLine: { show: true, lineStyle: { color: ["#E0E6F1"], width: 1, type: "solid" } }, splitArea: { show: false, areaStyle: { color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"] } } };
  var qM = T({ boundaryGap: true, deduplication: null, splitLine: { show: false }, axisTick: { alignWithLabel: false, interval: "auto" }, axisLabel: { interval: "auto" } }, jM);
  var KM = T({ boundaryGap: [0, 0], axisLine: { show: "auto" }, axisTick: { show: "auto" }, splitNumber: 5, minorTick: { show: false, splitNumber: 5, length: 3, lineStyle: {} }, minorSplitLine: { show: false, lineStyle: { color: "#F4F7FD", width: 1 } } }, jM);
  var $M = { category: qM, value: KM, time: T({ splitNumber: 6, axisLabel: { showMinLabel: false, showMaxLabel: false, rich: { primary: { fontWeight: "bold" } } }, splitLine: { show: false } }, KM), log: A({ logBase: 10 }, KM) };
  var JM = { value: 1, category: 1, time: 1, log: 1 };
  function QM(t2, n2, i2, r2) {
    N(JM, function(o2, a2) {
      var s2 = T(T({}, $M[a2], true), r2, true), l2 = function(t3) {
        function i3() {
          var e2 = null !== t3 && t3.apply(this, arguments) || this;
          return e2.type = n2 + "Axis." + a2, e2;
        }
        return e(i3, t3), i3.prototype.mergeDefaultAndTheme = function(t4, e2) {
          var n3 = Dp(this), i4 = n3 ? kp(t4) : {};
          T(t4, e2.getTheme().get(a2 + "Axis")), T(t4, this.getDefaultOption()), t4.type = tI(t4), n3 && Ap(t4, i4, n3);
        }, i3.prototype.optionUpdated = function() {
          "category" === this.option.type && (this.__ordinalMeta = kx.createByAxisModel(this));
        }, i3.prototype.getCategories = function(t4) {
          var e2 = this.option;
          if ("category" === e2.type)
            return t4 ? e2.data : this.__ordinalMeta.categories;
        }, i3.prototype.getOrdinalMeta = function() {
          return this.__ordinalMeta;
        }, i3.type = n2 + "Axis." + a2, i3.defaultOption = s2, i3;
      }(i2);
      t2.registerComponentModel(l2);
    }), t2.registerSubTypeDefaulter(n2 + "Axis", tI);
  }
  function tI(t2) {
    return t2.type || (t2.data ? "category" : "value");
  }
  var eI = function() {
    function t2(t3) {
      this.type = "cartesian", this._dimList = [], this._axes = {}, this.name = t3 || "";
    }
    return t2.prototype.getAxis = function(t3) {
      return this._axes[t3];
    }, t2.prototype.getAxes = function() {
      return E(this._dimList, function(t3) {
        return this._axes[t3];
      }, this);
    }, t2.prototype.getAxesByScale = function(t3) {
      return t3 = t3.toLowerCase(), V(this.getAxes(), function(e2) {
        return e2.scale.type === t3;
      });
    }, t2.prototype.addAxis = function(t3) {
      var e2 = t3.dim;
      this._axes[e2] = t3, this._dimList.push(e2);
    }, t2;
  }();
  var nI = ["x", "y"];
  function iI(t2) {
    return "interval" === t2.type || "time" === t2.type;
  }
  var rI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "cartesian2d", e2.dimensions = nI, e2;
    }
    return e(n2, t2), n2.prototype.calcAffineTransform = function() {
      this._transform = this._invTransform = null;
      var t3 = this.getAxis("x").scale, e2 = this.getAxis("y").scale;
      if (iI(t3) && iI(e2)) {
        var n3 = t3.getExtent(), i2 = e2.getExtent(), r2 = this.dataToPoint([n3[0], i2[0]]), o2 = this.dataToPoint([n3[1], i2[1]]), a2 = n3[1] - n3[0], s2 = i2[1] - i2[0];
        if (a2 && s2) {
          var l2 = (o2[0] - r2[0]) / a2, u2 = (o2[1] - r2[1]) / s2, h2 = r2[0] - n3[0] * l2, c2 = r2[1] - i2[0] * u2, p2 = this._transform = [l2, 0, 0, u2, h2, c2];
          this._invTransform = Me([], p2);
        }
      }
    }, n2.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAxis("x");
    }, n2.prototype.containPoint = function(t3) {
      var e2 = this.getAxis("x"), n3 = this.getAxis("y");
      return e2.contain(e2.toLocalCoord(t3[0])) && n3.contain(n3.toLocalCoord(t3[1]));
    }, n2.prototype.containData = function(t3) {
      return this.getAxis("x").containData(t3[0]) && this.getAxis("y").containData(t3[1]);
    }, n2.prototype.containZone = function(t3, e2) {
      var n3 = this.dataToPoint(t3), i2 = this.dataToPoint(e2), r2 = this.getArea(), o2 = new Ee(n3[0], n3[1], i2[0] - n3[0], i2[1] - n3[1]);
      return r2.intersect(o2);
    }, n2.prototype.dataToPoint = function(t3, e2, n3) {
      n3 = n3 || [];
      var i2 = t3[0], r2 = t3[1];
      if (this._transform && null != i2 && isFinite(i2) && null != r2 && isFinite(r2))
        return Gt(n3, t3, this._transform);
      var o2 = this.getAxis("x"), a2 = this.getAxis("y");
      return n3[0] = o2.toGlobalCoord(o2.dataToCoord(i2, e2)), n3[1] = a2.toGlobalCoord(a2.dataToCoord(r2, e2)), n3;
    }, n2.prototype.clampData = function(t3, e2) {
      var n3 = this.getAxis("x").scale, i2 = this.getAxis("y").scale, r2 = n3.getExtent(), o2 = i2.getExtent(), a2 = n3.parse(t3[0]), s2 = i2.parse(t3[1]);
      return (e2 = e2 || [])[0] = Math.min(Math.max(Math.min(r2[0], r2[1]), a2), Math.max(r2[0], r2[1])), e2[1] = Math.min(Math.max(Math.min(o2[0], o2[1]), s2), Math.max(o2[0], o2[1])), e2;
    }, n2.prototype.pointToData = function(t3, e2) {
      var n3 = [];
      if (this._invTransform)
        return Gt(n3, t3, this._invTransform);
      var i2 = this.getAxis("x"), r2 = this.getAxis("y");
      return n3[0] = i2.coordToData(i2.toLocalCoord(t3[0]), e2), n3[1] = r2.coordToData(r2.toLocalCoord(t3[1]), e2), n3;
    }, n2.prototype.getOtherAxis = function(t3) {
      return this.getAxis("x" === t3.dim ? "y" : "x");
    }, n2.prototype.getArea = function() {
      var t3 = this.getAxis("x").getGlobalExtent(), e2 = this.getAxis("y").getGlobalExtent(), n3 = Math.min(t3[0], t3[1]), i2 = Math.min(e2[0], e2[1]), r2 = Math.max(t3[0], t3[1]) - n3, o2 = Math.max(e2[0], e2[1]) - i2;
      return new Ee(n3, i2, r2, o2);
    }, n2;
  }(eI);
  var oI = function(t2) {
    function n2(e2, n3, i2, r2, o2) {
      var a2 = t2.call(this, e2, n3, i2) || this;
      return a2.index = 0, a2.type = r2 || "value", a2.position = o2 || "bottom", a2;
    }
    return e(n2, t2), n2.prototype.isHorizontal = function() {
      var t3 = this.position;
      return "top" === t3 || "bottom" === t3;
    }, n2.prototype.getGlobalExtent = function(t3) {
      var e2 = this.getExtent();
      return e2[0] = this.toGlobalCoord(e2[0]), e2[1] = this.toGlobalCoord(e2[1]), t3 && e2[0] > e2[1] && e2.reverse(), e2;
    }, n2.prototype.pointToData = function(t3, e2) {
      return this.coordToData(this.toLocalCoord(t3["x" === this.dim ? 0 : 1]), e2);
    }, n2.prototype.setCategorySortInfo = function(t3) {
      if ("category" !== this.type)
        return false;
      this.model.option.categorySortInfo = t3, this.scale.setSortInfo(t3);
    }, n2;
  }(cb);
  function aI(t2, e2, n2) {
    n2 = n2 || {};
    var i2 = t2.coordinateSystem, r2 = e2.axis, o2 = {}, a2 = r2.getAxesOnZeroOf()[0], s2 = r2.position, l2 = a2 ? "onZero" : s2, u2 = r2.dim, h2 = i2.getRect(), c2 = [h2.x, h2.x + h2.width, h2.y, h2.y + h2.height], p2 = { left: 0, right: 1, top: 0, bottom: 1, onZero: 2 }, d2 = e2.get("offset") || 0, f2 = "x" === u2 ? [c2[2] - d2, c2[3] + d2] : [c2[0] - d2, c2[1] + d2];
    if (a2) {
      var g2 = a2.toGlobalCoord(a2.dataToCoord(0));
      f2[p2.onZero] = Math.max(Math.min(g2, f2[1]), f2[0]);
    }
    o2.position = ["y" === u2 ? f2[p2[l2]] : c2[0], "x" === u2 ? f2[p2[l2]] : c2[3]], o2.rotation = Math.PI / 2 * ("x" === u2 ? 0 : 1);
    o2.labelDirection = o2.tickDirection = o2.nameDirection = { top: -1, bottom: 1, left: -1, right: 1 }[s2], o2.labelOffset = a2 ? f2[p2[s2]] - f2[p2.onZero] : 0, e2.get(["axisTick", "inside"]) && (o2.tickDirection = -o2.tickDirection), nt(n2.labelInside, e2.get(["axisLabel", "inside"])) && (o2.labelDirection = -o2.labelDirection);
    var y2 = e2.get(["axisLabel", "rotate"]);
    return o2.labelRotate = "top" === l2 ? -y2 : y2, o2.z2 = 1, o2;
  }
  function sI(t2) {
    return "cartesian2d" === t2.get("coordinateSystem");
  }
  function lI(t2) {
    var e2 = { xAxisModel: null, yAxisModel: null };
    return N(e2, function(n2, i2) {
      var r2 = i2.replace(/Model$/, ""), o2 = t2.getReferringComponents(r2, Eo).models[0];
      e2[i2] = o2;
    }), e2;
  }
  var uI = Math.log;
  function hI(t2, e2, n2) {
    var i2 = Wx.prototype, r2 = i2.getTicks.call(n2), o2 = i2.getTicks.call(n2, true), a2 = r2.length - 1, s2 = i2.getInterval.call(n2), l2 = I_(t2, e2), u2 = l2.extent, h2 = l2.fixMin, c2 = l2.fixMax;
    if ("log" === t2.type) {
      var p2 = uI(t2.base);
      u2 = [uI(u2[0]) / p2, uI(u2[1]) / p2];
    }
    t2.setExtent(u2[0], u2[1]), t2.calcNiceExtent({ splitNumber: a2, fixMin: h2, fixMax: c2 });
    var d2 = i2.getExtent.call(t2);
    h2 && (u2[0] = d2[0]), c2 && (u2[1] = d2[1]);
    var f2 = i2.getInterval.call(t2), g2 = u2[0], y2 = u2[1];
    if (h2 && c2)
      f2 = (y2 - g2) / a2;
    else if (h2)
      for (y2 = u2[0] + f2 * a2; y2 < u2[1] && isFinite(y2) && isFinite(u2[1]); )
        f2 = Rx(f2), y2 = u2[0] + f2 * a2;
    else if (c2)
      for (g2 = u2[1] - f2 * a2; g2 > u2[0] && isFinite(g2) && isFinite(u2[0]); )
        f2 = Rx(f2), g2 = u2[1] - f2 * a2;
    else {
      t2.getTicks().length - 1 > a2 && (f2 = Rx(f2));
      var v2 = f2 * a2;
      (g2 = Ur((y2 = Math.ceil(u2[1] / f2) * f2) - v2)) < 0 && u2[0] >= 0 ? (g2 = 0, y2 = Ur(v2)) : y2 > 0 && u2[1] <= 0 && (y2 = 0, g2 = -Ur(v2));
    }
    var m2 = (r2[0].value - o2[0].value) / s2, x2 = (r2[a2].value - o2[a2].value) / s2;
    i2.setExtent.call(t2, g2 + f2 * m2, y2 + f2 * x2), i2.setInterval.call(t2, f2), (m2 || x2) && i2.setNiceExtent.call(t2, g2 + f2, y2 - f2);
  }
  var cI = function() {
    function t2(t3, e2, n2) {
      this.type = "grid", this._coordsMap = {}, this._coordsList = [], this._axesMap = {}, this._axesList = [], this.axisPointerEnabled = true, this.dimensions = nI, this._initCartesian(t3, e2, n2), this.model = t3;
    }
    return t2.prototype.getRect = function() {
      return this._rect;
    }, t2.prototype.update = function(t3, e2) {
      var n2 = this._axesMap;
      function i2(t4) {
        var e3, n3 = F(t4), i3 = n3.length;
        if (i3) {
          for (var r3 = [], o2 = i3 - 1; o2 >= 0; o2--) {
            var a2 = t4[+n3[o2]], s2 = a2.model, l2 = a2.scale;
            Px(l2) && s2.get("alignTicks") && null == s2.get("interval") ? r3.push(a2) : (T_(l2, s2), Px(l2) && (e3 = a2));
          }
          r3.length && (e3 || T_((e3 = r3.pop()).scale, e3.model), N(r3, function(t5) {
            hI(t5.scale, t5.model, e3.scale);
          }));
        }
      }
      this._updateScale(t3, this.model), i2(n2.x), i2(n2.y);
      var r2 = {};
      N(n2.x, function(t4) {
        dI(n2, "y", t4, r2);
      }), N(n2.y, function(t4) {
        dI(n2, "x", t4, r2);
      }), this.resize(this.model, e2);
    }, t2.prototype.resize = function(t3, e2, n2) {
      var i2 = t3.getBoxLayoutParams(), r2 = !n2 && t3.get("containLabel"), o2 = Tp(i2, { width: e2.getWidth(), height: e2.getHeight() });
      this._rect = o2;
      var a2 = this._axesList;
      function s2() {
        N(a2, function(t4) {
          var e3 = t4.isHorizontal(), n3 = e3 ? [0, o2.width] : [0, o2.height], i3 = t4.inverse ? 1 : 0;
          t4.setExtent(n3[i3], n3[1 - i3]), function(t5, e4) {
            var n4 = t5.getExtent(), i4 = n4[0] + n4[1];
            t5.toGlobalCoord = "x" === t5.dim ? function(t6) {
              return t6 + e4;
            } : function(t6) {
              return i4 - t6 + e4;
            }, t5.toLocalCoord = "x" === t5.dim ? function(t6) {
              return t6 - e4;
            } : function(t6) {
              return i4 - t6 + e4;
            };
          }(t4, e3 ? o2.x : o2.y);
        });
      }
      s2(), r2 && (N(a2, function(t4) {
        if (!t4.model.get(["axisLabel", "inside"])) {
          var e3 = function(t5) {
            var e4 = t5.model, n4 = t5.scale;
            if (e4.get(["axisLabel", "show"]) && !n4.isBlank()) {
              var i4, r3, o3 = n4.getExtent();
              r3 = n4 instanceof Fx ? n4.count() : (i4 = n4.getTicks()).length;
              var a3, s3 = t5.getLabelModel(), l2 = D_(t5), u2 = 1;
              r3 > 40 && (u2 = Math.ceil(r3 / 40));
              for (var h2 = 0; h2 < r3; h2 += u2) {
                var c2 = l2(i4 ? i4[h2] : { value: o3[0] + h2 }, h2), p2 = k_(s3.getTextRect(c2), s3.get("rotate") || 0);
                a3 ? a3.union(p2) : a3 = p2;
              }
              return a3;
            }
          }(t4);
          if (e3) {
            var n3 = t4.isHorizontal() ? "height" : "width", i3 = t4.model.get(["axisLabel", "margin"]);
            o2[n3] -= e3[n3] + i3, "top" === t4.position ? o2.y += e3.height + i3 : "left" === t4.position && (o2.x += e3.width + i3);
          }
        }
      }), s2()), N(this._coordsList, function(t4) {
        t4.calcAffineTransform();
      });
    }, t2.prototype.getAxis = function(t3, e2) {
      var n2 = this._axesMap[t3];
      if (null != n2)
        return n2[e2 || 0];
    }, t2.prototype.getAxes = function() {
      return this._axesList.slice();
    }, t2.prototype.getCartesian = function(t3, e2) {
      if (null != t3 && null != e2) {
        var n2 = "x" + t3 + "y" + e2;
        return this._coordsMap[n2];
      }
      j(t3) && (e2 = t3.yAxisIndex, t3 = t3.xAxisIndex);
      for (var i2 = 0, r2 = this._coordsList; i2 < r2.length; i2++)
        if (r2[i2].getAxis("x").index === t3 || r2[i2].getAxis("y").index === e2)
          return r2[i2];
    }, t2.prototype.getCartesians = function() {
      return this._coordsList.slice();
    }, t2.prototype.convertToPixel = function(t3, e2, n2) {
      var i2 = this._findConvertTarget(e2);
      return i2.cartesian ? i2.cartesian.dataToPoint(n2) : i2.axis ? i2.axis.toGlobalCoord(i2.axis.dataToCoord(n2)) : null;
    }, t2.prototype.convertFromPixel = function(t3, e2, n2) {
      var i2 = this._findConvertTarget(e2);
      return i2.cartesian ? i2.cartesian.pointToData(n2) : i2.axis ? i2.axis.coordToData(i2.axis.toLocalCoord(n2)) : null;
    }, t2.prototype._findConvertTarget = function(t3) {
      var e2, n2, i2 = t3.seriesModel, r2 = t3.xAxisModel || i2 && i2.getReferringComponents("xAxis", Eo).models[0], o2 = t3.yAxisModel || i2 && i2.getReferringComponents("yAxis", Eo).models[0], a2 = t3.gridModel, s2 = this._coordsList;
      if (i2)
        L(s2, e2 = i2.coordinateSystem) < 0 && (e2 = null);
      else if (r2 && o2)
        e2 = this.getCartesian(r2.componentIndex, o2.componentIndex);
      else if (r2)
        n2 = this.getAxis("x", r2.componentIndex);
      else if (o2)
        n2 = this.getAxis("y", o2.componentIndex);
      else if (a2) {
        a2.coordinateSystem === this && (e2 = this._coordsList[0]);
      }
      return { cartesian: e2, axis: n2 };
    }, t2.prototype.containPoint = function(t3) {
      var e2 = this._coordsList[0];
      if (e2)
        return e2.containPoint(t3);
    }, t2.prototype._initCartesian = function(t3, e2, n2) {
      var i2 = this, r2 = this, o2 = { left: false, right: false, top: false, bottom: false }, a2 = { x: {}, y: {} }, s2 = { x: 0, y: 0 };
      if (e2.eachComponent("xAxis", l2("x"), this), e2.eachComponent("yAxis", l2("y"), this), !s2.x || !s2.y)
        return this._axesMap = {}, void (this._axesList = []);
      function l2(e3) {
        return function(n3, i3) {
          if (pI(n3, t3)) {
            var l3 = n3.get("position");
            "x" === e3 ? "top" !== l3 && "bottom" !== l3 && (l3 = o2.bottom ? "top" : "bottom") : "left" !== l3 && "right" !== l3 && (l3 = o2.left ? "right" : "left"), o2[l3] = true;
            var u2 = new oI(e3, C_(n3), [0, 0], n3.get("type"), l3), h2 = "category" === u2.type;
            u2.onBand = h2 && n3.get("boundaryGap"), u2.inverse = n3.get("inverse"), n3.axis = u2, u2.model = n3, u2.grid = r2, u2.index = i3, r2._axesList.push(u2), a2[e3][i3] = u2, s2[e3]++;
          }
        };
      }
      this._axesMap = a2, N(a2.x, function(e3, n3) {
        N(a2.y, function(r3, o3) {
          var a3 = "x" + n3 + "y" + o3, s3 = new rI(a3);
          s3.master = i2, s3.model = t3, i2._coordsMap[a3] = s3, i2._coordsList.push(s3), s3.addAxis(e3), s3.addAxis(r3);
        });
      });
    }, t2.prototype._updateScale = function(t3, e2) {
      function n2(t4, e3) {
        N(O_(t4, e3.dim), function(n3) {
          e3.scale.unionExtentFromData(t4, n3);
        });
      }
      N(this._axesList, function(t4) {
        if (t4.scale.setExtent(1 / 0, -1 / 0), "category" === t4.type) {
          var e3 = t4.model.get("categorySortInfo");
          t4.scale.setSortInfo(e3);
        }
      }), t3.eachSeries(function(t4) {
        if (sI(t4)) {
          var i2 = lI(t4), r2 = i2.xAxisModel, o2 = i2.yAxisModel;
          if (!pI(r2, e2) || !pI(o2, e2))
            return;
          var a2 = this.getCartesian(r2.componentIndex, o2.componentIndex), s2 = t4.getData(), l2 = a2.getAxis("x"), u2 = a2.getAxis("y");
          n2(s2, l2), n2(s2, u2);
        }
      }, this);
    }, t2.prototype.getTooltipAxes = function(t3) {
      var e2 = [], n2 = [];
      return N(this.getCartesians(), function(i2) {
        var r2 = null != t3 && "auto" !== t3 ? i2.getAxis(t3) : i2.getBaseAxis(), o2 = i2.getOtherAxis(r2);
        L(e2, r2) < 0 && e2.push(r2), L(n2, o2) < 0 && n2.push(o2);
      }), { baseAxes: e2, otherAxes: n2 };
    }, t2.create = function(e2, n2) {
      var i2 = [];
      return e2.eachComponent("grid", function(r2, o2) {
        var a2 = new t2(r2, e2, n2);
        a2.name = "grid_" + o2, a2.resize(r2, n2, true), r2.coordinateSystem = a2, i2.push(a2);
      }), e2.eachSeries(function(t3) {
        if (sI(t3)) {
          var e3 = lI(t3), n3 = e3.xAxisModel, i3 = e3.yAxisModel, r2 = n3.getCoordSysModel();
          var o2 = r2.coordinateSystem;
          t3.coordinateSystem = o2.getCartesian(n3.componentIndex, i3.componentIndex);
        }
      }), i2;
    }, t2.dimensions = nI, t2;
  }();
  function pI(t2, e2) {
    return t2.getCoordSysModel() === e2;
  }
  function dI(t2, e2, n2, i2) {
    n2.getAxesOnZeroOf = function() {
      return r2 ? [r2] : [];
    };
    var r2, o2 = t2[e2], a2 = n2.model, s2 = a2.get(["axisLine", "onZero"]), l2 = a2.get(["axisLine", "onZeroAxisIndex"]);
    if (s2) {
      if (null != l2)
        fI(o2[l2]) && (r2 = o2[l2]);
      else
        for (var u2 in o2)
          if (o2.hasOwnProperty(u2) && fI(o2[u2]) && !i2[h2(o2[u2])]) {
            r2 = o2[u2];
            break;
          }
      r2 && (i2[h2(r2)] = true);
    }
    function h2(t3) {
      return t3.dim + "_" + t3.index;
    }
  }
  function fI(t2) {
    return t2 && "category" !== t2.type && "time" !== t2.type && function(t3) {
      var e2 = t3.scale.getExtent(), n2 = e2[0], i2 = e2[1];
      return !(n2 > 0 && i2 > 0 || n2 < 0 && i2 < 0);
    }(t2);
  }
  var gI = Math.PI;
  var yI = function() {
    function t2(t3, e2) {
      this.group = new Er(), this.opt = e2, this.axisModel = t3, A(e2, { labelOffset: 0, nameDirection: 1, tickDirection: 1, labelDirection: 1, silent: true, handleAutoShown: function() {
        return true;
      } });
      var n2 = new Er({ x: e2.position[0], y: e2.position[1], rotation: e2.rotation });
      n2.updateTransform(), this._transformGroup = n2;
    }
    return t2.prototype.hasBuilder = function(t3) {
      return !!vI[t3];
    }, t2.prototype.add = function(t3) {
      vI[t3](this.opt, this.axisModel, this.group, this._transformGroup);
    }, t2.prototype.getGroup = function() {
      return this.group;
    }, t2.innerTextLayout = function(t3, e2, n2) {
      var i2, r2, o2 = to(e2 - t3);
      return eo(o2) ? (r2 = n2 > 0 ? "top" : "bottom", i2 = "center") : eo(o2 - gI) ? (r2 = n2 > 0 ? "bottom" : "top", i2 = "center") : (r2 = "middle", i2 = o2 > 0 && o2 < gI ? n2 > 0 ? "right" : "left" : n2 > 0 ? "left" : "right"), { rotation: o2, textAlign: i2, textVerticalAlign: r2 };
    }, t2.makeAxisEventDataBase = function(t3) {
      var e2 = { componentType: t3.mainType, componentIndex: t3.componentIndex };
      return e2[t3.mainType + "Index"] = t3.componentIndex, e2;
    }, t2.isLabelSilent = function(t3) {
      var e2 = t3.get("tooltip");
      return t3.get("silent") || !(t3.get("triggerEvent") || e2 && e2.show);
    }, t2;
  }();
  var vI = { axisLine: function(t2, e2, n2, i2) {
    var r2 = e2.get(["axisLine", "show"]);
    if ("auto" === r2 && t2.handleAutoShown && (r2 = t2.handleAutoShown("axisLine")), r2) {
      var o2 = e2.axis.getExtent(), a2 = i2.transform, s2 = [o2[0], 0], l2 = [o2[1], 0], u2 = s2[0] > l2[0];
      a2 && (Gt(s2, s2, a2), Gt(l2, l2, a2));
      var h2 = D({ lineCap: "round" }, e2.getModel(["axisLine", "lineStyle"]).getLineStyle()), c2 = new Uu({ shape: { x1: s2[0], y1: s2[1], x2: l2[0], y2: l2[1] }, style: h2, strokeContainThreshold: t2.strokeContainThreshold || 5, silent: true, z2: 1 });
      Oh(c2.shape, c2.style.lineWidth), c2.anid = "line", n2.add(c2);
      var p2 = e2.get(["axisLine", "symbol"]);
      if (null != p2) {
        var d2 = e2.get(["axisLine", "symbolSize"]);
        X(p2) && (p2 = [p2, p2]), (X(d2) || Z(d2)) && (d2 = [d2, d2]);
        var f2 = Hy(e2.get(["axisLine", "symbolOffset"]) || 0, d2), g2 = d2[0], y2 = d2[1];
        N([{ rotate: t2.rotation + Math.PI / 2, offset: f2[0], r: 0 }, { rotate: t2.rotation - Math.PI / 2, offset: f2[1], r: Math.sqrt((s2[0] - l2[0]) * (s2[0] - l2[0]) + (s2[1] - l2[1]) * (s2[1] - l2[1])) }], function(e3, i3) {
          if ("none" !== p2[i3] && null != p2[i3]) {
            var r3 = Gy(p2[i3], -g2 / 2, -y2 / 2, g2, y2, h2.stroke, true), o3 = e3.r + e3.offset, a3 = u2 ? l2 : s2;
            r3.attr({ rotation: e3.rotate, x: a3[0] + o3 * Math.cos(t2.rotation), y: a3[1] - o3 * Math.sin(t2.rotation), silent: true, z2: 11 }), n2.add(r3);
          }
        });
      }
    }
  }, axisTickLabel: function(t2, e2, n2, i2) {
    var r2 = function(t3, e3, n3, i3) {
      var r3 = n3.axis, o3 = n3.getModel("axisTick"), a2 = o3.get("show");
      "auto" === a2 && i3.handleAutoShown && (a2 = i3.handleAutoShown("axisTick"));
      if (!a2 || r3.scale.isBlank())
        return;
      for (var s2 = o3.getModel("lineStyle"), l2 = i3.tickDirection * o3.get("length"), u2 = bI(r3.getTicksCoords(), e3.transform, l2, A(s2.getLineStyle(), { stroke: n3.get(["axisLine", "lineStyle", "color"]) }), "ticks"), h2 = 0; h2 < u2.length; h2++)
        t3.add(u2[h2]);
      return u2;
    }(n2, i2, e2, t2), o2 = function(t3, e3, n3, i3) {
      var r3 = n3.axis, o3 = nt(i3.axisLabelShow, n3.get(["axisLabel", "show"]));
      if (!o3 || r3.scale.isBlank())
        return;
      var a2 = n3.getModel("axisLabel"), s2 = a2.get("margin"), l2 = r3.getViewLabels(), u2 = (nt(i3.labelRotate, a2.get("rotate")) || 0) * gI / 180, h2 = yI.innerTextLayout(i3.rotation, u2, i3.labelDirection), c2 = n3.getCategories && n3.getCategories(true), p2 = [], d2 = yI.isLabelSilent(n3), f2 = n3.get("triggerEvent");
      return N(l2, function(o4, l3) {
        var u3 = "ordinal" === r3.scale.type ? r3.scale.getRawOrdinalNumber(o4.tickValue) : o4.tickValue, g2 = o4.formattedLabel, y2 = o4.rawLabel, v2 = a2;
        if (c2 && c2[u3]) {
          var m2 = c2[u3];
          j(m2) && m2.textStyle && (v2 = new Sc(m2.textStyle, a2, n3.ecModel));
        }
        var x2 = v2.getTextColor() || n3.get(["axisLine", "lineStyle", "color"]), _2 = r3.dataToCoord(u3), b2 = new Bs({ x: _2, y: i3.labelOffset + i3.labelDirection * s2, rotation: h2.rotation, silent: d2, z2: 10 + (o4.level || 0), style: ec(v2, { text: g2, align: v2.getShallow("align", true) || h2.textAlign, verticalAlign: v2.getShallow("verticalAlign", true) || v2.getShallow("baseline", true) || h2.textVerticalAlign, fill: Y(x2) ? x2("category" === r3.type ? y2 : "value" === r3.type ? u3 + "" : u3, l3) : x2 }) });
        if (b2.anid = "label_" + u3, f2) {
          var w2 = yI.makeAxisEventDataBase(n3);
          w2.targetType = "axisLabel", w2.value = y2, w2.tickIndex = l3, "category" === r3.type && (w2.dataIndex = u3), Js(b2).eventData = w2;
        }
        e3.add(b2), b2.updateTransform(), p2.push(b2), t3.add(b2), b2.decomposeTransform();
      }), p2;
    }(n2, i2, e2, t2);
    (function(t3, e3, n3) {
      if (P_(t3.axis))
        return;
      var i3 = t3.get(["axisLabel", "showMinLabel"]), r3 = t3.get(["axisLabel", "showMaxLabel"]);
      e3 = e3 || [], n3 = n3 || [];
      var o3 = e3[0], a2 = e3[1], s2 = e3[e3.length - 1], l2 = e3[e3.length - 2], u2 = n3[0], h2 = n3[1], c2 = n3[n3.length - 1], p2 = n3[n3.length - 2];
      false === i3 ? (mI(o3), mI(u2)) : xI(o3, a2) && (i3 ? (mI(a2), mI(h2)) : (mI(o3), mI(u2)));
      false === r3 ? (mI(s2), mI(c2)) : xI(l2, s2) && (r3 ? (mI(l2), mI(p2)) : (mI(s2), mI(c2)));
    }(e2, o2, r2), function(t3, e3, n3, i3) {
      var r3 = n3.axis, o3 = n3.getModel("minorTick");
      if (!o3.get("show") || r3.scale.isBlank())
        return;
      var a2 = r3.getMinorTicksCoords();
      if (!a2.length)
        return;
      for (var s2 = o3.getModel("lineStyle"), l2 = i3 * o3.get("length"), u2 = A(s2.getLineStyle(), A(n3.getModel("axisTick").getLineStyle(), { stroke: n3.get(["axisLine", "lineStyle", "color"]) })), h2 = 0; h2 < a2.length; h2++)
        for (var c2 = bI(a2[h2], e3.transform, l2, u2, "minorticks_" + h2), p2 = 0; p2 < c2.length; p2++)
          t3.add(c2[p2]);
    }(n2, i2, e2, t2.tickDirection), e2.get(["axisLabel", "hideOverlap"])) && Yb(Gb(E(o2, function(t3) {
      return { label: t3, priority: t3.z2, defaultAttr: { ignore: t3.ignore } };
    })));
  }, axisName: function(t2, e2, n2, i2) {
    var r2 = nt(t2.axisName, e2.get("name"));
    if (r2) {
      var o2, a2, s2 = e2.get("nameLocation"), l2 = t2.nameDirection, u2 = e2.getModel("nameTextStyle"), h2 = e2.get("nameGap") || 0, c2 = e2.axis.getExtent(), p2 = c2[0] > c2[1] ? -1 : 1, d2 = ["start" === s2 ? c2[0] - p2 * h2 : "end" === s2 ? c2[1] + p2 * h2 : (c2[0] + c2[1]) / 2, _I(s2) ? t2.labelOffset + l2 * h2 : 0], f2 = e2.get("nameRotate");
      null != f2 && (f2 = f2 * gI / 180), _I(s2) ? o2 = yI.innerTextLayout(t2.rotation, null != f2 ? f2 : t2.rotation, l2) : (o2 = function(t3, e3, n3, i3) {
        var r3, o3, a3 = to(n3 - t3), s3 = i3[0] > i3[1], l3 = "start" === e3 && !s3 || "start" !== e3 && s3;
        eo(a3 - gI / 2) ? (o3 = l3 ? "bottom" : "top", r3 = "center") : eo(a3 - 1.5 * gI) ? (o3 = l3 ? "top" : "bottom", r3 = "center") : (o3 = "middle", r3 = a3 < 1.5 * gI && a3 > gI / 2 ? l3 ? "left" : "right" : l3 ? "right" : "left");
        return { rotation: a3, textAlign: r3, textVerticalAlign: o3 };
      }(t2.rotation, s2, f2 || 0, c2), null != (a2 = t2.axisNameAvailableWidth) && (a2 = Math.abs(a2 / Math.sin(o2.rotation)), !isFinite(a2) && (a2 = null)));
      var g2 = u2.getFont(), y2 = e2.get("nameTruncate", true) || {}, v2 = y2.ellipsis, m2 = nt(t2.nameTruncateMaxWidth, y2.maxWidth, a2), x2 = new Bs({ x: d2[0], y: d2[1], rotation: o2.rotation, silent: yI.isLabelSilent(e2), style: ec(u2, { text: r2, font: g2, overflow: "truncate", width: m2, ellipsis: v2, fill: u2.getTextColor() || e2.get(["axisLine", "lineStyle", "color"]), align: u2.get("align") || o2.textAlign, verticalAlign: u2.get("verticalAlign") || o2.textVerticalAlign }), z2: 1 });
      if (Uh({ el: x2, componentModel: e2, itemName: r2 }), x2.__fullText = r2, x2.anid = "name", e2.get("triggerEvent")) {
        var _2 = yI.makeAxisEventDataBase(e2);
        _2.targetType = "axisName", _2.name = r2, Js(x2).eventData = _2;
      }
      i2.add(x2), x2.updateTransform(), n2.add(x2), x2.decomposeTransform();
    }
  } };
  function mI(t2) {
    t2 && (t2.ignore = true);
  }
  function xI(t2, e2) {
    var n2 = t2 && t2.getBoundingRect().clone(), i2 = e2 && e2.getBoundingRect().clone();
    if (n2 && i2) {
      var r2 = me([]);
      return we(r2, r2, -t2.rotation), n2.applyTransform(_e([], r2, t2.getLocalTransform())), i2.applyTransform(_e([], r2, e2.getLocalTransform())), n2.intersect(i2);
    }
  }
  function _I(t2) {
    return "middle" === t2 || "center" === t2;
  }
  function bI(t2, e2, n2, i2, r2) {
    for (var o2 = [], a2 = [], s2 = [], l2 = 0; l2 < t2.length; l2++) {
      var u2 = t2[l2].coord;
      a2[0] = u2, a2[1] = 0, s2[0] = u2, s2[1] = n2, e2 && (Gt(a2, a2, e2), Gt(s2, s2, e2));
      var h2 = new Uu({ shape: { x1: a2[0], y1: a2[1], x2: s2[0], y2: s2[1] }, style: i2, z2: 2, autoBatch: true, silent: true });
      Oh(h2.shape, h2.style.lineWidth), h2.anid = r2 + "_" + t2[l2].tickValue, o2.push(h2);
    }
    return o2;
  }
  function wI(t2, e2) {
    var n2 = { axesInfo: {}, seriesInvolved: false, coordSysAxesInfo: {}, coordSysMap: {} };
    return function(t3, e3, n3) {
      var i2 = e3.getComponent("tooltip"), r2 = e3.getComponent("axisPointer"), o2 = r2.get("link", true) || [], a2 = [];
      N(n3.getCoordinateSystems(), function(n4) {
        if (n4.axisPointerEnabled) {
          var s2 = CI(n4.model), l2 = t3.coordSysAxesInfo[s2] = {};
          t3.coordSysMap[s2] = n4;
          var u2 = n4.model.getModel("tooltip", i2);
          if (N(n4.getAxes(), W(d2, false, null)), n4.getTooltipAxes && i2 && u2.get("show")) {
            var h2 = "axis" === u2.get("trigger"), c2 = "cross" === u2.get(["axisPointer", "type"]), p2 = n4.getTooltipAxes(u2.get(["axisPointer", "axis"]));
            (h2 || c2) && N(p2.baseAxes, W(d2, !c2 || "cross", h2)), c2 && N(p2.otherAxes, W(d2, "cross", false));
          }
        }
        function d2(i3, s3, h3) {
          var c3 = h3.model.getModel("axisPointer", r2), p3 = c3.get("show");
          if (p3 && ("auto" !== p3 || i3 || TI(c3))) {
            null == s3 && (s3 = c3.get("triggerTooltip")), c3 = i3 ? function(t4, e4, n5, i4, r3, o3) {
              var a3 = e4.getModel("axisPointer"), s4 = {};
              N(["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], function(t5) {
                s4[t5] = I(a3.get(t5));
              }), s4.snap = "category" !== t4.type && !!o3, "cross" === a3.get("type") && (s4.type = "line");
              var l3 = s4.label || (s4.label = {});
              if (null == l3.show && (l3.show = false), "cross" === r3) {
                var u3 = a3.get(["label", "show"]);
                if (l3.show = null == u3 || u3, !o3) {
                  var h4 = s4.lineStyle = a3.get("crossStyle");
                  h4 && A(l3, h4.textStyle);
                }
              }
              return t4.model.getModel("axisPointer", new Sc(s4, n5, i4));
            }(h3, u2, r2, e3, i3, s3) : c3;
            var d3 = c3.get("snap"), f2 = c3.get("triggerEmphasis"), g2 = CI(h3.model), y2 = s3 || d3 || "category" === h3.type, v2 = t3.axesInfo[g2] = { key: g2, axis: h3, coordSys: n4, axisPointerModel: c3, triggerTooltip: s3, triggerEmphasis: f2, involveSeries: y2, snap: d3, useHandle: TI(c3), seriesModels: [], linkGroup: null };
            l2[g2] = v2, t3.seriesInvolved = t3.seriesInvolved || y2;
            var m2 = function(t4, e4) {
              for (var n5 = e4.model, i4 = e4.dim, r3 = 0; r3 < t4.length; r3++) {
                var o3 = t4[r3] || {};
                if (SI(o3[i4 + "AxisId"], n5.id) || SI(o3[i4 + "AxisIndex"], n5.componentIndex) || SI(o3[i4 + "AxisName"], n5.name))
                  return r3;
              }
            }(o2, h3);
            if (null != m2) {
              var x2 = a2[m2] || (a2[m2] = { axesInfo: {} });
              x2.axesInfo[g2] = v2, x2.mapper = o2[m2].mapper, v2.linkGroup = x2;
            }
          }
        }
      });
    }(n2, t2, e2), n2.seriesInvolved && function(t3, e3) {
      e3.eachSeries(function(e4) {
        var n3 = e4.coordinateSystem, i2 = e4.get(["tooltip", "trigger"], true), r2 = e4.get(["tooltip", "show"], true);
        n3 && "none" !== i2 && false !== i2 && "item" !== i2 && false !== r2 && false !== e4.get(["axisPointer", "show"], true) && N(t3.coordSysAxesInfo[CI(n3.model)], function(t4) {
          var i3 = t4.axis;
          n3.getAxis(i3.dim) === i3 && (t4.seriesModels.push(e4), null == t4.seriesDataCount && (t4.seriesDataCount = 0), t4.seriesDataCount += e4.getData().count());
        });
      });
    }(n2, t2), n2;
  }
  function SI(t2, e2) {
    return "all" === t2 || H(t2) && L(t2, e2) >= 0 || t2 === e2;
  }
  function MI(t2) {
    var e2 = II(t2);
    if (e2) {
      var n2 = e2.axisPointerModel, i2 = e2.axis.scale, r2 = n2.option, o2 = n2.get("status"), a2 = n2.get("value");
      null != a2 && (a2 = i2.parse(a2));
      var s2 = TI(n2);
      null == o2 && (r2.status = s2 ? "show" : "hide");
      var l2 = i2.getExtent().slice();
      l2[0] > l2[1] && l2.reverse(), (null == a2 || a2 > l2[1]) && (a2 = l2[1]), a2 < l2[0] && (a2 = l2[0]), r2.value = a2, s2 && (r2.status = e2.axis.scale.isBlank() ? "hide" : "show");
    }
  }
  function II(t2) {
    var e2 = (t2.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
    return e2 && e2.axesInfo[CI(t2)];
  }
  function TI(t2) {
    return !!t2.get(["handle", "show"]);
  }
  function CI(t2) {
    return t2.type + "||" + t2.id;
  }
  var DI = {};
  var AI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(e2, n3, i2, r2) {
      this.axisPointerClass && MI(e2), t2.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(e2, i2, true);
    }, n2.prototype.updateAxisPointer = function(t3, e2, n3, i2) {
      this._doUpdateAxisPointerClass(t3, n3, false);
    }, n2.prototype.remove = function(t3, e2) {
      var n3 = this._axisPointer;
      n3 && n3.remove(e2);
    }, n2.prototype.dispose = function(e2, n3) {
      this._disposeAxisPointer(n3), t2.prototype.dispose.apply(this, arguments);
    }, n2.prototype._doUpdateAxisPointerClass = function(t3, e2, i2) {
      var r2 = n2.getAxisPointerClass(this.axisPointerClass);
      if (r2) {
        var o2 = function(t4) {
          var e3 = II(t4);
          return e3 && e3.axisPointerModel;
        }(t3);
        o2 ? (this._axisPointer || (this._axisPointer = new r2())).render(t3, o2, e2, i2) : this._disposeAxisPointer(e2);
      }
    }, n2.prototype._disposeAxisPointer = function(t3) {
      this._axisPointer && this._axisPointer.dispose(t3), this._axisPointer = null;
    }, n2.registerAxisPointerClass = function(t3, e2) {
      DI[t3] = e2;
    }, n2.getAxisPointerClass = function(t3) {
      return t3 && DI[t3];
    }, n2.type = "axis", n2;
  }(Ig);
  var kI = Po();
  function LI(t2, e2, n2, i2) {
    var r2 = n2.axis;
    if (!r2.scale.isBlank()) {
      var o2 = n2.getModel("splitArea"), a2 = o2.getModel("areaStyle"), s2 = a2.get("color"), l2 = i2.coordinateSystem.getRect(), u2 = r2.getTicksCoords({ tickModel: o2, clamp: true });
      if (u2.length) {
        var h2 = s2.length, c2 = kI(t2).splitAreaColors, p2 = gt(), d2 = 0;
        if (c2)
          for (var f2 = 0; f2 < u2.length; f2++) {
            var g2 = c2.get(u2[f2].tickValue);
            if (null != g2) {
              d2 = (g2 + (h2 - 1) * f2) % h2;
              break;
            }
          }
        var y2 = r2.toGlobalCoord(u2[0].coord), v2 = a2.getAreaStyle();
        s2 = H(s2) ? s2 : [s2];
        for (f2 = 1; f2 < u2.length; f2++) {
          var m2 = r2.toGlobalCoord(u2[f2].coord), x2 = void 0, _2 = void 0, b2 = void 0, w2 = void 0;
          r2.isHorizontal() ? (x2 = y2, _2 = l2.y, b2 = m2 - x2, w2 = l2.height, y2 = x2 + b2) : (x2 = l2.x, _2 = y2, b2 = l2.width, y2 = _2 + (w2 = m2 - _2));
          var S2 = u2[f2 - 1].tickValue;
          null != S2 && p2.set(S2, d2), e2.add(new Es({ anid: null != S2 ? "area_" + S2 : null, shape: { x: x2, y: _2, width: b2, height: w2 }, style: A({ fill: s2[d2] }, v2), autoBatch: true, silent: true })), d2 = (d2 + 1) % h2;
        }
        kI(t2).splitAreaColors = p2;
      }
    }
  }
  function PI(t2) {
    kI(t2).splitAreaColors = null;
  }
  var OI = ["axisLine", "axisTickLabel", "axisName"];
  var RI = ["splitArea", "splitLine", "minorSplitLine"];
  var NI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.axisPointerClass = "CartesianAxisPointer", e2;
    }
    return e(n2, t2), n2.prototype.render = function(e2, n3, i2, r2) {
      this.group.removeAll();
      var o2 = this._axisGroup;
      if (this._axisGroup = new Er(), this.group.add(this._axisGroup), e2.get("show")) {
        var a2 = e2.getCoordSysModel(), s2 = aI(a2, e2), l2 = new yI(e2, D({ handleAutoShown: function(t3) {
          for (var n4 = a2.coordinateSystem.getCartesians(), i3 = 0; i3 < n4.length; i3++)
            if (Px(n4[i3].getOtherAxis(e2.axis).scale))
              return true;
          return false;
        } }, s2));
        N(OI, l2.add, l2), this._axisGroup.add(l2.getGroup()), N(RI, function(t3) {
          e2.get([t3, "show"]) && EI[t3](this, this._axisGroup, e2, a2);
        }, this), r2 && "changeAxisOrder" === r2.type && r2.isInitSort || Bh(o2, this._axisGroup, e2), t2.prototype.render.call(this, e2, n3, i2, r2);
      }
    }, n2.prototype.remove = function() {
      PI(this);
    }, n2.type = "cartesianAxis", n2;
  }(AI);
  var EI = { splitLine: function(t2, e2, n2, i2) {
    var r2 = n2.axis;
    if (!r2.scale.isBlank()) {
      var o2 = n2.getModel("splitLine"), a2 = o2.getModel("lineStyle"), s2 = a2.get("color");
      s2 = H(s2) ? s2 : [s2];
      for (var l2 = i2.coordinateSystem.getRect(), u2 = r2.isHorizontal(), h2 = 0, c2 = r2.getTicksCoords({ tickModel: o2 }), p2 = [], d2 = [], f2 = a2.getLineStyle(), g2 = 0; g2 < c2.length; g2++) {
        var y2 = r2.toGlobalCoord(c2[g2].coord);
        u2 ? (p2[0] = y2, p2[1] = l2.y, d2[0] = y2, d2[1] = l2.y + l2.height) : (p2[0] = l2.x, p2[1] = y2, d2[0] = l2.x + l2.width, d2[1] = y2);
        var v2 = h2++ % s2.length, m2 = c2[g2].tickValue, x2 = new Uu({ anid: null != m2 ? "line_" + c2[g2].tickValue : null, autoBatch: true, shape: { x1: p2[0], y1: p2[1], x2: d2[0], y2: d2[1] }, style: A({ stroke: s2[v2] }, f2), silent: true });
        Oh(x2.shape, f2.lineWidth), e2.add(x2);
      }
    }
  }, minorSplitLine: function(t2, e2, n2, i2) {
    var r2 = n2.axis, o2 = n2.getModel("minorSplitLine").getModel("lineStyle"), a2 = i2.coordinateSystem.getRect(), s2 = r2.isHorizontal(), l2 = r2.getMinorTicksCoords();
    if (l2.length)
      for (var u2 = [], h2 = [], c2 = o2.getLineStyle(), p2 = 0; p2 < l2.length; p2++)
        for (var d2 = 0; d2 < l2[p2].length; d2++) {
          var f2 = r2.toGlobalCoord(l2[p2][d2].coord);
          s2 ? (u2[0] = f2, u2[1] = a2.y, h2[0] = f2, h2[1] = a2.y + a2.height) : (u2[0] = a2.x, u2[1] = f2, h2[0] = a2.x + a2.width, h2[1] = f2);
          var g2 = new Uu({ anid: "minor_line_" + l2[p2][d2].tickValue, autoBatch: true, shape: { x1: u2[0], y1: u2[1], x2: h2[0], y2: h2[1] }, style: c2, silent: true });
          Oh(g2.shape, c2.lineWidth), e2.add(g2);
        }
  }, splitArea: function(t2, e2, n2, i2) {
    LI(t2, e2, n2, i2);
  } };
  var zI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "xAxis", n2;
  }(NI);
  var VI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = zI.type, e2;
    }
    return e(n2, t2), n2.type = "yAxis", n2;
  }(NI);
  var BI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "grid", e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2) {
      this.group.removeAll(), t3.get("show") && this.group.add(new Es({ shape: t3.coordinateSystem.getRect(), style: A({ fill: t3.get("backgroundColor") }, t3.getItemStyle()), silent: true, z2: -1 }));
    }, n2.type = "grid", n2;
  }(Ig);
  var FI = { offset: 0 };
  function GI(t2) {
    t2.registerComponentView(BI), t2.registerComponentModel(UM), t2.registerCoordinateSystem("cartesian2d", cI), QM(t2, "x", ZM, FI), QM(t2, "y", ZM, FI), t2.registerComponentView(zI), t2.registerComponentView(VI), t2.registerPreprocessor(function(t3) {
      t3.xAxis && t3.yAxis && !t3.grid && (t3.grid = {});
    });
  }
  function WI(t2) {
    t2.eachSeriesByType("radar", function(t3) {
      var e2 = t3.getData(), n2 = [], i2 = t3.coordinateSystem;
      if (i2) {
        var r2 = i2.getIndicatorAxes();
        N(r2, function(t4, o2) {
          e2.each(e2.mapDimension(r2[o2].dim), function(t5, e3) {
            n2[e3] = n2[e3] || [];
            var r3 = i2.dataToPoint(t5, o2);
            n2[e3][o2] = HI(r3) ? r3 : YI(i2);
          });
        }), e2.each(function(t4) {
          var r3 = B(n2[t4], function(t5) {
            return HI(t5);
          }) || YI(i2);
          n2[t4].push(r3.slice()), e2.setItemLayout(t4, n2[t4]);
        });
      }
    });
  }
  function HI(t2) {
    return !isNaN(t2[0]) && !isNaN(t2[1]);
  }
  function YI(t2) {
    return [t2.cx, t2.cy];
  }
  function XI(t2) {
    var e2 = t2.polar;
    if (e2) {
      H(e2) || (e2 = [e2]);
      var n2 = [];
      N(e2, function(e3, i2) {
        e3.indicator ? (e3.type && !e3.shape && (e3.shape = e3.type), t2.radar = t2.radar || [], H(t2.radar) || (t2.radar = [t2.radar]), t2.radar.push(e3)) : n2.push(e3);
      }), t2.polar = n2;
    }
    N(t2.series, function(t3) {
      t3 && "radar" === t3.type && t3.polarIndex && (t3.radarIndex = t3.polarIndex);
    });
  }
  var UI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.coordinateSystem, r2 = this.group, o2 = t3.getData(), a2 = this._data;
      function s2(t4, e3) {
        var n4 = t4.getItemVisual(e3, "symbol") || "circle";
        if ("none" !== n4) {
          var i3 = Wy(t4.getItemVisual(e3, "symbolSize")), r3 = Gy(n4, -1, -1, 2, 2), o3 = t4.getItemVisual(e3, "symbolRotate") || 0;
          return r3.attr({ style: { strokeNoScale: true }, z2: 100, scaleX: i3[0] / 2, scaleY: i3[1] / 2, rotation: o3 * Math.PI / 180 || 0 }), r3;
        }
      }
      function l2(e3, n4, i3, r3, o3, a3) {
        i3.removeAll();
        for (var l3 = 0; l3 < n4.length - 1; l3++) {
          var u3 = s2(r3, o3);
          u3 && (u3.__dimIdx = l3, e3[l3] ? (u3.setPosition(e3[l3]), qh[a3 ? "initProps" : "updateProps"](u3, { x: n4[l3][0], y: n4[l3][1] }, t3, o3)) : u3.setPosition(n4[l3]), i3.add(u3));
        }
      }
      function u2(t4) {
        return E(t4, function(t5) {
          return [i2.cx, i2.cy];
        });
      }
      o2.diff(a2).add(function(e3) {
        var n4 = o2.getItemLayout(e3);
        if (n4) {
          var i3 = new Gu(), r3 = new Hu(), a3 = { shape: { points: n4 } };
          i3.shape.points = u2(n4), r3.shape.points = u2(n4), fh(i3, a3, t3, e3), fh(r3, a3, t3, e3);
          var s3 = new Er(), h2 = new Er();
          s3.add(r3), s3.add(i3), s3.add(h2), l2(r3.shape.points, n4, h2, o2, e3, true), o2.setItemGraphicEl(e3, s3);
        }
      }).update(function(e3, n4) {
        var i3 = a2.getItemGraphicEl(n4), r3 = i3.childAt(0), s3 = i3.childAt(1), u3 = i3.childAt(2), h2 = { shape: { points: o2.getItemLayout(e3) } };
        h2.shape.points && (l2(r3.shape.points, h2.shape.points, u3, o2, e3, false), xh(s3), xh(r3), dh(r3, h2, t3), dh(s3, h2, t3), o2.setItemGraphicEl(e3, i3));
      }).remove(function(t4) {
        r2.remove(a2.getItemGraphicEl(t4));
      }).execute(), o2.eachItemGraphicEl(function(t4, e3) {
        var n4 = o2.getItemModel(e3), i3 = t4.childAt(0), a3 = t4.childAt(1), s3 = t4.childAt(2), l3 = o2.getItemVisual(e3, "style"), u3 = l3.fill;
        r2.add(t4), i3.useStyle(A(n4.getModel("lineStyle").getLineStyle(), { fill: "none", stroke: u3 })), Zl(i3, n4, "lineStyle"), Zl(a3, n4, "areaStyle");
        var h2 = n4.getModel("areaStyle"), c2 = h2.isEmpty() && h2.parentModel.isEmpty();
        a3.ignore = c2, N(["emphasis", "select", "blur"], function(t5) {
          var e4 = n4.getModel([t5, "areaStyle"]), i4 = e4.isEmpty() && e4.parentModel.isEmpty();
          a3.ensureState(t5).ignore = i4 && c2;
        }), a3.useStyle(A(h2.getAreaStyle(), { fill: u3, opacity: 0.7, decal: l3.decal }));
        var p2 = n4.getModel("emphasis"), d2 = p2.getModel("itemStyle").getItemStyle();
        s3.eachChild(function(t5) {
          if (t5 instanceof As) {
            var i4 = t5.style;
            t5.useStyle(D({ image: i4.image, x: i4.x, y: i4.y, width: i4.width, height: i4.height }, l3));
          } else
            t5.useStyle(l3), t5.setColor(u3), t5.style.strokeNoScale = true;
          t5.ensureState("emphasis").style = I(d2);
          var r3 = o2.getStore().get(o2.getDimensionIndex(t5.__dimIdx), e3);
          (null == r3 || isNaN(r3)) && (r3 = ""), Qh(t5, tc(n4), { labelFetcher: o2.hostModel, labelDataIndex: e3, labelDimIndex: t5.__dimIdx, defaultText: r3, inheritColor: u3, defaultOpacity: l3.opacity });
        }), Hl(t4, p2.get("focus"), p2.get("blurScope"), p2.get("disabled"));
      }), this._data = o2;
    }, n2.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, n2.type = "radar", n2;
  }(Ag);
  var ZI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      t2.prototype.init.apply(this, arguments), this.legendVisualProvider = new VM(G(this.getData, this), G(this.getRawData, this));
    }, n2.prototype.getInitialData = function(t3, e2) {
      return zM(this, { generateCoord: "indicator_", generateCoordCount: 1 / 0 });
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      var i2 = this.getData(), r2 = this.coordinateSystem.getIndicatorAxes(), o2 = this.getData().getName(t3), a2 = "" === o2 ? this.name : o2, s2 = hg(this, t3);
      return eg("section", { header: a2, sortBlocks: true, blocks: E(r2, function(e3) {
        var n4 = i2.get(i2.mapDimension(e3.dim), t3);
        return eg("nameValue", { markerType: "subItem", markerColor: s2, name: e3.name, value: n4, sortParam: n4 });
      }) });
    }, n2.prototype.getTooltipPosition = function(t3) {
      if (null != t3) {
        for (var e2 = this.getData(), n3 = this.coordinateSystem, i2 = e2.getValues(E(n3.dimensions, function(t4) {
          return e2.mapDimension(t4);
        }), t3), r2 = 0, o2 = i2.length; r2 < o2; r2++)
          if (!isNaN(i2[r2])) {
            var a2 = n3.getIndicatorAxes();
            return n3.coordToPoint(a2[r2].dataToCoord(i2[r2]), r2);
          }
      }
    }, n2.type = "series.radar", n2.dependencies = ["radar"], n2.defaultOption = { z: 2, colorBy: "data", coordinateSystem: "radar", legendHoverLink: true, radarIndex: 0, lineStyle: { width: 2, type: "solid", join: "round" }, label: { position: "top" }, symbolSize: 8 }, n2;
  }(vg);
  var jI = $M.value;
  function qI(t2, e2) {
    return A({ show: e2 }, t2);
  }
  var KI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function() {
      var t3 = this.get("boundaryGap"), e2 = this.get("splitNumber"), n3 = this.get("scale"), i2 = this.get("axisLine"), r2 = this.get("axisTick"), o2 = this.get("axisLabel"), a2 = this.get("axisName"), s2 = this.get(["axisName", "show"]), l2 = this.get(["axisName", "formatter"]), u2 = this.get("axisNameGap"), h2 = this.get("triggerEvent"), c2 = E(this.get("indicator") || [], function(c3) {
        null != c3.max && c3.max > 0 && !c3.min ? c3.min = 0 : null != c3.min && c3.min < 0 && !c3.max && (c3.max = 0);
        var p2 = a2;
        null != c3.color && (p2 = A({ color: c3.color }, a2));
        var d2 = T(I(c3), { boundaryGap: t3, splitNumber: e2, scale: n3, axisLine: i2, axisTick: r2, axisLabel: o2, name: c3.text, showName: s2, nameLocation: "end", nameGap: u2, nameTextStyle: p2, triggerEvent: h2 }, false);
        if (X(l2)) {
          var f2 = d2.name;
          d2.name = l2.replace("{value}", null != f2 ? f2 : "");
        } else
          Y(l2) && (d2.name = l2(d2.name, d2));
        var g2 = new Sc(d2, null, this.ecModel);
        return O(g2, R_.prototype), g2.mainType = "radar", g2.componentIndex = this.componentIndex, g2;
      }, this);
      this._indicatorModels = c2;
    }, n2.prototype.getIndicatorModels = function() {
      return this._indicatorModels;
    }, n2.type = "radar", n2.defaultOption = { z: 0, center: ["50%", "50%"], radius: "75%", startAngle: 90, axisName: { show: true }, boundaryGap: [0, 0], splitNumber: 5, axisNameGap: 15, scale: false, shape: "polygon", axisLine: T({ lineStyle: { color: "#bbb" } }, jI.axisLine), axisLabel: qI(jI.axisLabel, false), axisTick: qI(jI.axisTick, false), splitLine: qI(jI.splitLine, true), splitArea: qI(jI.splitArea, true), indicator: [] }, n2;
  }(Op);
  var $I = ["axisLine", "axisTickLabel", "axisName"];
  var JI = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      this.group.removeAll(), this._buildAxes(t3), this._buildSplitLineAndArea(t3);
    }, n2.prototype._buildAxes = function(t3) {
      var e2 = t3.coordinateSystem;
      N(E(e2.getIndicatorAxes(), function(t4) {
        var n3 = t4.model.get("showName") ? t4.name : "";
        return new yI(t4.model, { axisName: n3, position: [e2.cx, e2.cy], rotation: t4.angle, labelDirection: -1, tickDirection: -1, nameDirection: 1 });
      }), function(t4) {
        N($I, t4.add, t4), this.group.add(t4.getGroup());
      }, this);
    }, n2.prototype._buildSplitLineAndArea = function(t3) {
      var e2 = t3.coordinateSystem, n3 = e2.getIndicatorAxes();
      if (n3.length) {
        var i2 = t3.get("shape"), r2 = t3.getModel("splitLine"), o2 = t3.getModel("splitArea"), a2 = r2.getModel("lineStyle"), s2 = o2.getModel("areaStyle"), l2 = r2.get("show"), u2 = o2.get("show"), h2 = a2.get("color"), c2 = s2.get("color"), p2 = H(h2) ? h2 : [h2], d2 = H(c2) ? c2 : [c2], f2 = [], g2 = [];
        if ("circle" === i2)
          for (var y2 = n3[0].getTicksCoords(), v2 = e2.cx, m2 = e2.cy, x2 = 0; x2 < y2.length; x2++) {
            if (l2)
              f2[C2(f2, p2, x2)].push(new xu({ shape: { cx: v2, cy: m2, r: y2[x2].coord } }));
            if (u2 && x2 < y2.length - 1)
              g2[C2(g2, d2, x2)].push(new Vu({ shape: { cx: v2, cy: m2, r0: y2[x2].coord, r: y2[x2 + 1].coord } }));
          }
        else {
          var _2, b2 = E(n3, function(t4, n4) {
            var i3 = t4.getTicksCoords();
            return _2 = null == _2 ? i3.length - 1 : Math.min(i3.length - 1, _2), E(i3, function(t5) {
              return e2.coordToPoint(t5.coord, n4);
            });
          }), w2 = [];
          for (x2 = 0; x2 <= _2; x2++) {
            for (var S2 = [], M2 = 0; M2 < n3.length; M2++)
              S2.push(b2[M2][x2]);
            if (S2[0] && S2.push(S2[0].slice()), l2)
              f2[C2(f2, p2, x2)].push(new Hu({ shape: { points: S2 } }));
            if (u2 && w2)
              g2[C2(g2, d2, x2 - 1)].push(new Gu({ shape: { points: S2.concat(w2) } }));
            w2 = S2.slice().reverse();
          }
        }
        var I2 = a2.getLineStyle(), T2 = s2.getAreaStyle();
        N(g2, function(t4, e3) {
          this.group.add(Lh(t4, { style: A({ stroke: "none", fill: d2[e3 % d2.length] }, T2), silent: true }));
        }, this), N(f2, function(t4, e3) {
          this.group.add(Lh(t4, { style: A({ fill: "none", stroke: p2[e3 % p2.length] }, I2), silent: true }));
        }, this);
      }
      function C2(t4, e3, n4) {
        var i3 = n4 % e3.length;
        return t4[i3] = t4[i3] || [], i3;
      }
    }, n2.type = "radar", n2;
  }(Ig);
  var QI = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this, e2, n3, i2) || this;
      return r2.type = "value", r2.angle = 0, r2.name = "", r2;
    }
    return e(n2, t2), n2;
  }(cb);
  var tT = function() {
    function t2(t3, e2, n2) {
      this.dimensions = [], this._model = t3, this._indicatorAxes = E(t3.getIndicatorModels(), function(t4, e3) {
        var n3 = "indicator_" + e3, i2 = new QI(n3, new Wx());
        return i2.name = t4.get("name"), i2.model = t4, t4.axis = i2, this.dimensions.push(n3), i2;
      }, this), this.resize(t3, n2);
    }
    return t2.prototype.getIndicatorAxes = function() {
      return this._indicatorAxes;
    }, t2.prototype.dataToPoint = function(t3, e2) {
      var n2 = this._indicatorAxes[e2];
      return this.coordToPoint(n2.dataToCoord(t3), e2);
    }, t2.prototype.coordToPoint = function(t3, e2) {
      var n2 = this._indicatorAxes[e2].angle;
      return [this.cx + t3 * Math.cos(n2), this.cy - t3 * Math.sin(n2)];
    }, t2.prototype.pointToData = function(t3) {
      var e2 = t3[0] - this.cx, n2 = t3[1] - this.cy, i2 = Math.sqrt(e2 * e2 + n2 * n2);
      e2 /= i2, n2 /= i2;
      for (var r2, o2 = Math.atan2(-n2, e2), a2 = 1 / 0, s2 = -1, l2 = 0; l2 < this._indicatorAxes.length; l2++) {
        var u2 = this._indicatorAxes[l2], h2 = Math.abs(o2 - u2.angle);
        h2 < a2 && (r2 = u2, s2 = l2, a2 = h2);
      }
      return [s2, +(r2 && r2.coordToData(i2))];
    }, t2.prototype.resize = function(t3, e2) {
      var n2 = t3.get("center"), i2 = e2.getWidth(), r2 = e2.getHeight(), o2 = Math.min(i2, r2) / 2;
      this.cx = Xr(n2[0], i2), this.cy = Xr(n2[1], r2), this.startAngle = t3.get("startAngle") * Math.PI / 180;
      var a2 = t3.get("radius");
      (X(a2) || Z(a2)) && (a2 = [0, a2]), this.r0 = Xr(a2[0], o2), this.r = Xr(a2[1], o2), N(this._indicatorAxes, function(t4, e3) {
        t4.setExtent(this.r0, this.r);
        var n3 = this.startAngle + e3 * Math.PI * 2 / this._indicatorAxes.length;
        n3 = Math.atan2(Math.sin(n3), Math.cos(n3)), t4.angle = n3;
      }, this);
    }, t2.prototype.update = function(t3, e2) {
      var n2 = this._indicatorAxes, i2 = this._model;
      N(n2, function(t4) {
        t4.scale.setExtent(1 / 0, -1 / 0);
      }), t3.eachSeriesByType("radar", function(e3, r3) {
        if ("radar" === e3.get("coordinateSystem") && t3.getComponent("radar", e3.get("radarIndex")) === i2) {
          var o3 = e3.getData();
          N(n2, function(t4) {
            t4.scale.unionExtentFromData(o3, o3.mapDimension(t4.dim));
          });
        }
      }, this);
      var r2 = i2.get("splitNumber"), o2 = new Wx();
      o2.setExtent(0, r2), o2.setInterval(1), N(n2, function(t4, e3) {
        hI(t4.scale, t4.model, o2);
      });
    }, t2.prototype.convertToPixel = function(t3, e2, n2) {
      return formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Not implemented."), null;
    }, t2.prototype.convertFromPixel = function(t3, e2, n2) {
      return formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Not implemented."), null;
    }, t2.prototype.containPoint = function(t3) {
      return formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Not implemented."), false;
    }, t2.create = function(e2, n2) {
      var i2 = [];
      return e2.eachComponent("radar", function(r2) {
        var o2 = new t2(r2, e2, n2);
        i2.push(o2), r2.coordinateSystem = o2;
      }), e2.eachSeriesByType("radar", function(t3) {
        "radar" === t3.get("coordinateSystem") && (t3.coordinateSystem = i2[t3.get("radarIndex") || 0]);
      }), i2;
    }, t2.dimensions = [], t2;
  }();
  function eT(t2) {
    t2.registerCoordinateSystem("radar", tT), t2.registerComponentModel(KI), t2.registerComponentView(JI), t2.registerVisual({ seriesType: "radar", reset: function(t3) {
      var e2 = t3.getData();
      e2.each(function(t4) {
        e2.setItemVisual(t4, "legendIcon", "roundRect");
      }), e2.setVisual("legendIcon", "roundRect");
    } });
  }
  var nT = "\0_ec_interaction_mutex";
  function iT(t2, e2) {
    return !!rT(t2)[e2];
  }
  function rT(t2) {
    return t2[nT] || (t2[nT] = {});
  }
  Am({ type: "takeGlobalCursor", event: "globalCursorTaken", update: "update" }, _t);
  var oT = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      n3._zr = e2;
      var i2 = G(n3._mousedownHandler, n3), r2 = G(n3._mousemoveHandler, n3), o2 = G(n3._mouseupHandler, n3), a2 = G(n3._mousewheelHandler, n3), s2 = G(n3._pinchHandler, n3);
      return n3.enable = function(t3, n4) {
        this.disable(), this._opt = A(I(n4) || {}, { zoomOnMouseWheel: true, moveOnMouseMove: true, moveOnMouseWheel: false, preventDefaultMouseMove: true }), null == t3 && (t3 = true), true !== t3 && "move" !== t3 && "pan" !== t3 || (e2.on("mousedown", i2), e2.on("mousemove", r2), e2.on("mouseup", o2)), true !== t3 && "scale" !== t3 && "zoom" !== t3 || (e2.on("mousewheel", a2), e2.on("pinch", s2));
      }, n3.disable = function() {
        e2.off("mousedown", i2), e2.off("mousemove", r2), e2.off("mouseup", o2), e2.off("mousewheel", a2), e2.off("pinch", s2);
      }, n3;
    }
    return e(n2, t2), n2.prototype.isDragging = function() {
      return this._dragging;
    }, n2.prototype.isPinching = function() {
      return this._pinching;
    }, n2.prototype.setPointerChecker = function(t3) {
      this.pointerChecker = t3;
    }, n2.prototype.dispose = function() {
      this.disable();
    }, n2.prototype._mousedownHandler = function(t3) {
      if (!de(t3)) {
        for (var e2 = t3.target; e2; ) {
          if (e2.draggable)
            return;
          e2 = e2.__hostTarget || e2.parent;
        }
        var n3 = t3.offsetX, i2 = t3.offsetY;
        this.pointerChecker && this.pointerChecker(t3, n3, i2) && (this._x = n3, this._y = i2, this._dragging = true);
      }
    }, n2.prototype._mousemoveHandler = function(t3) {
      if (this._dragging && lT("moveOnMouseMove", t3, this._opt) && "pinch" !== t3.gestureEvent && !iT(this._zr, "globalPan")) {
        var e2 = t3.offsetX, n3 = t3.offsetY, i2 = this._x, r2 = this._y, o2 = e2 - i2, a2 = n3 - r2;
        this._x = e2, this._y = n3, this._opt.preventDefaultMouseMove && pe(t3.event), sT(this, "pan", "moveOnMouseMove", t3, { dx: o2, dy: a2, oldX: i2, oldY: r2, newX: e2, newY: n3, isAvailableBehavior: null });
      }
    }, n2.prototype._mouseupHandler = function(t3) {
      de(t3) || (this._dragging = false);
    }, n2.prototype._mousewheelHandler = function(t3) {
      var e2 = lT("zoomOnMouseWheel", t3, this._opt), n3 = lT("moveOnMouseWheel", t3, this._opt), i2 = t3.wheelDelta, r2 = Math.abs(i2), o2 = t3.offsetX, a2 = t3.offsetY;
      if (0 !== i2 && (e2 || n3)) {
        if (e2) {
          var s2 = r2 > 3 ? 1.4 : r2 > 1 ? 1.2 : 1.1;
          aT(this, "zoom", "zoomOnMouseWheel", t3, { scale: i2 > 0 ? s2 : 1 / s2, originX: o2, originY: a2, isAvailableBehavior: null });
        }
        if (n3) {
          var l2 = Math.abs(i2);
          aT(this, "scrollMove", "moveOnMouseWheel", t3, { scrollDelta: (i2 > 0 ? 1 : -1) * (l2 > 3 ? 0.4 : l2 > 1 ? 0.15 : 0.05), originX: o2, originY: a2, isAvailableBehavior: null });
        }
      }
    }, n2.prototype._pinchHandler = function(t3) {
      iT(this._zr, "globalPan") || aT(this, "zoom", null, t3, { scale: t3.pinchScale > 1 ? 1.1 : 1 / 1.1, originX: t3.pinchX, originY: t3.pinchY, isAvailableBehavior: null });
    }, n2;
  }(Zt);
  function aT(t2, e2, n2, i2, r2) {
    t2.pointerChecker && t2.pointerChecker(i2, r2.originX, r2.originY) && (pe(i2.event), sT(t2, e2, n2, i2, r2));
  }
  function sT(t2, e2, n2, i2, r2) {
    r2.isAvailableBehavior = G(lT, null, n2, i2), t2.trigger(e2, r2);
  }
  function lT(t2, e2, n2) {
    var i2 = n2[t2];
    return !t2 || i2 && (!X(i2) || e2.event[i2 + "Key"]);
  }
  function uT(t2, e2, n2) {
    var i2 = t2.target;
    i2.x += e2, i2.y += n2, i2.dirty();
  }
  function hT(t2, e2, n2, i2) {
    var r2 = t2.target, o2 = t2.zoomLimit, a2 = t2.zoom = t2.zoom || 1;
    if (a2 *= e2, o2) {
      var s2 = o2.min || 0, l2 = o2.max || 1 / 0;
      a2 = Math.max(Math.min(l2, a2), s2);
    }
    var u2 = a2 / t2.zoom;
    t2.zoom = a2, r2.x -= (n2 - r2.x) * (u2 - 1), r2.y -= (i2 - r2.y) * (u2 - 1), r2.scaleX *= u2, r2.scaleY *= u2, r2.dirty();
  }
  var cT;
  var pT = { axisPointer: 1, tooltip: 1, brush: 1 };
  function dT(t2, e2, n2) {
    var i2 = e2.getComponentByElement(t2.topTarget), r2 = i2 && i2.coordinateSystem;
    return i2 && i2 !== n2 && !pT.hasOwnProperty(i2.mainType) && r2 && r2.model !== n2;
  }
  function fT(t2) {
    X(t2) && (t2 = new DOMParser().parseFromString(t2, "text/xml"));
    var e2 = t2;
    for (9 === e2.nodeType && (e2 = e2.firstChild); "svg" !== e2.nodeName.toLowerCase() || 1 !== e2.nodeType; )
      e2 = e2.nextSibling;
    return e2;
  }
  var gT = { fill: "fill", stroke: "stroke", "stroke-width": "lineWidth", opacity: "opacity", "fill-opacity": "fillOpacity", "stroke-opacity": "strokeOpacity", "stroke-dasharray": "lineDash", "stroke-dashoffset": "lineDashOffset", "stroke-linecap": "lineCap", "stroke-linejoin": "lineJoin", "stroke-miterlimit": "miterLimit", "font-family": "fontFamily", "font-size": "fontSize", "font-style": "fontStyle", "font-weight": "fontWeight", "text-anchor": "textAlign", visibility: "visibility", display: "display" };
  var yT = F(gT);
  var vT = { "alignment-baseline": "textBaseline", "stop-color": "stopColor" };
  var mT = F(vT);
  var xT = function() {
    function t2() {
      this._defs = {}, this._root = null;
    }
    return t2.prototype.parse = function(t3, e2) {
      e2 = e2 || {};
      var n2 = fT(t3);
      this._defsUsePending = [];
      var i2 = new Er();
      this._root = i2;
      var r2 = [], o2 = n2.getAttribute("viewBox") || "", a2 = parseFloat(n2.getAttribute("width") || e2.width), s2 = parseFloat(n2.getAttribute("height") || e2.height);
      isNaN(a2) && (a2 = null), isNaN(s2) && (s2 = null), IT(n2, i2, null, true, false);
      for (var l2, u2, h2 = n2.firstChild; h2; )
        this._parseNode(h2, i2, r2, null, false, false), h2 = h2.nextSibling;
      if (function(t4, e3) {
        for (var n3 = 0; n3 < e3.length; n3++) {
          var i3 = e3[n3];
          i3[0].style[i3[1]] = t4[i3[2]];
        }
      }(this._defs, this._defsUsePending), this._defsUsePending = [], o2) {
        var c2 = AT(o2);
        c2.length >= 4 && (l2 = { x: parseFloat(c2[0] || 0), y: parseFloat(c2[1] || 0), width: parseFloat(c2[2]), height: parseFloat(c2[3]) });
      }
      if (l2 && null != a2 && null != s2 && (u2 = RT(l2, { x: 0, y: 0, width: a2, height: s2 }), !e2.ignoreViewBox)) {
        var p2 = i2;
        (i2 = new Er()).add(p2), p2.scaleX = p2.scaleY = u2.scale, p2.x = u2.x, p2.y = u2.y;
      }
      return e2.ignoreRootClip || null == a2 || null == s2 || i2.setClipPath(new Es({ shape: { x: 0, y: 0, width: a2, height: s2 } })), { root: i2, width: a2, height: s2, viewBoxRect: l2, viewBoxTransform: u2, named: r2 };
    }, t2.prototype._parseNode = function(t3, e2, n2, i2, r2, o2) {
      var a2, s2 = t3.nodeName.toLowerCase(), l2 = i2;
      if ("defs" === s2 && (r2 = true), "text" === s2 && (o2 = true), "defs" === s2 || "switch" === s2)
        a2 = e2;
      else {
        if (!r2) {
          var u2 = cT[s2];
          if (u2 && xt(cT, s2)) {
            a2 = u2.call(this, t3, e2);
            var h2 = t3.getAttribute("name");
            if (h2) {
              var c2 = { name: h2, namedFrom: null, svgNodeTagLower: s2, el: a2 };
              n2.push(c2), "g" === s2 && (l2 = c2);
            } else
              i2 && n2.push({ name: i2.name, namedFrom: i2, svgNodeTagLower: s2, el: a2 });
            e2.add(a2);
          }
        }
        var p2 = _T[s2];
        if (p2 && xt(_T, s2)) {
          var d2 = p2.call(this, t3), f2 = t3.getAttribute("id");
          f2 && (this._defs[f2] = d2);
        }
      }
      if (a2 && a2.isGroup)
        for (var g2 = t3.firstChild; g2; )
          1 === g2.nodeType ? this._parseNode(g2, a2, n2, l2, r2, o2) : 3 === g2.nodeType && o2 && this._parseText(g2, a2), g2 = g2.nextSibling;
    }, t2.prototype._parseText = function(t3, e2) {
      var n2 = new Ts({ style: { text: t3.textContent }, silent: true, x: this._textX || 0, y: this._textY || 0 });
      ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), function(t4, e3) {
        var n3 = e3.__selfStyle;
        if (n3) {
          var i3 = n3.textBaseline, r3 = i3;
          i3 && "auto" !== i3 ? "baseline" === i3 ? r3 = "alphabetic" : "before-edge" === i3 || "text-before-edge" === i3 ? r3 = "top" : "after-edge" === i3 || "text-after-edge" === i3 ? r3 = "bottom" : "central" !== i3 && "mathematical" !== i3 || (r3 = "middle") : r3 = "alphabetic", t4.style.textBaseline = r3;
        }
        var o3 = e3.__inheritedStyle;
        if (o3) {
          var a3 = o3.textAlign, s2 = a3;
          a3 && ("middle" === a3 && (s2 = "center"), t4.style.textAlign = s2);
        }
      }(n2, e2);
      var i2 = n2.style, r2 = i2.fontSize;
      r2 && r2 < 9 && (i2.fontSize = 9, n2.scaleX *= r2 / 9, n2.scaleY *= r2 / 9);
      var o2 = (i2.fontSize || i2.fontFamily) && [i2.fontStyle, i2.fontWeight, (i2.fontSize || 12) + "px", i2.fontFamily || "sans-serif"].join(" ");
      i2.font = o2;
      var a2 = n2.getBoundingRect();
      return this._textX += a2.width, e2.add(n2), n2;
    }, t2.internalField = void (cT = { g: function(t3, e2) {
      var n2 = new Er();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2;
    }, rect: function(t3, e2) {
      var n2 = new Es();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.setShape({ x: parseFloat(t3.getAttribute("x") || "0"), y: parseFloat(t3.getAttribute("y") || "0"), width: parseFloat(t3.getAttribute("width") || "0"), height: parseFloat(t3.getAttribute("height") || "0") }), n2.silent = true, n2;
    }, circle: function(t3, e2) {
      var n2 = new xu();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.setShape({ cx: parseFloat(t3.getAttribute("cx") || "0"), cy: parseFloat(t3.getAttribute("cy") || "0"), r: parseFloat(t3.getAttribute("r") || "0") }), n2.silent = true, n2;
    }, line: function(t3, e2) {
      var n2 = new Uu();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.setShape({ x1: parseFloat(t3.getAttribute("x1") || "0"), y1: parseFloat(t3.getAttribute("y1") || "0"), x2: parseFloat(t3.getAttribute("x2") || "0"), y2: parseFloat(t3.getAttribute("y2") || "0") }), n2.silent = true, n2;
    }, ellipse: function(t3, e2) {
      var n2 = new bu();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.setShape({ cx: parseFloat(t3.getAttribute("cx") || "0"), cy: parseFloat(t3.getAttribute("cy") || "0"), rx: parseFloat(t3.getAttribute("rx") || "0"), ry: parseFloat(t3.getAttribute("ry") || "0") }), n2.silent = true, n2;
    }, polygon: function(t3, e2) {
      var n2, i2 = t3.getAttribute("points");
      i2 && (n2 = MT(i2));
      var r2 = new Gu({ shape: { points: n2 || [] }, silent: true });
      return ST(e2, r2), IT(t3, r2, this._defsUsePending, false, false), r2;
    }, polyline: function(t3, e2) {
      var n2, i2 = t3.getAttribute("points");
      i2 && (n2 = MT(i2));
      var r2 = new Hu({ shape: { points: n2 || [] }, silent: true });
      return ST(e2, r2), IT(t3, r2, this._defsUsePending, false, false), r2;
    }, image: function(t3, e2) {
      var n2 = new As();
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.setStyle({ image: t3.getAttribute("xlink:href") || t3.getAttribute("href"), x: +t3.getAttribute("x"), y: +t3.getAttribute("y"), width: +t3.getAttribute("width"), height: +t3.getAttribute("height") }), n2.silent = true, n2;
    }, text: function(t3, e2) {
      var n2 = t3.getAttribute("x") || "0", i2 = t3.getAttribute("y") || "0", r2 = t3.getAttribute("dx") || "0", o2 = t3.getAttribute("dy") || "0";
      this._textX = parseFloat(n2) + parseFloat(r2), this._textY = parseFloat(i2) + parseFloat(o2);
      var a2 = new Er();
      return ST(e2, a2), IT(t3, a2, this._defsUsePending, false, true), a2;
    }, tspan: function(t3, e2) {
      var n2 = t3.getAttribute("x"), i2 = t3.getAttribute("y");
      null != n2 && (this._textX = parseFloat(n2)), null != i2 && (this._textY = parseFloat(i2));
      var r2 = t3.getAttribute("dx") || "0", o2 = t3.getAttribute("dy") || "0", a2 = new Er();
      return ST(e2, a2), IT(t3, a2, this._defsUsePending, false, true), this._textX += parseFloat(r2), this._textY += parseFloat(o2), a2;
    }, path: function(t3, e2) {
      var n2 = yu(t3.getAttribute("d") || "");
      return ST(e2, n2), IT(t3, n2, this._defsUsePending, false, false), n2.silent = true, n2;
    } }), t2;
  }();
  var _T = { lineargradient: function(t2) {
    var e2 = parseInt(t2.getAttribute("x1") || "0", 10), n2 = parseInt(t2.getAttribute("y1") || "0", 10), i2 = parseInt(t2.getAttribute("x2") || "10", 10), r2 = parseInt(t2.getAttribute("y2") || "0", 10), o2 = new eh(e2, n2, i2, r2);
    return bT(t2, o2), wT(t2, o2), o2;
  }, radialgradient: function(t2) {
    var e2 = parseInt(t2.getAttribute("cx") || "0", 10), n2 = parseInt(t2.getAttribute("cy") || "0", 10), i2 = parseInt(t2.getAttribute("r") || "0", 10), r2 = new nh(e2, n2, i2);
    return bT(t2, r2), wT(t2, r2), r2;
  } };
  function bT(t2, e2) {
    "userSpaceOnUse" === t2.getAttribute("gradientUnits") && (e2.global = true);
  }
  function wT(t2, e2) {
    for (var n2 = t2.firstChild; n2; ) {
      if (1 === n2.nodeType && "stop" === n2.nodeName.toLocaleLowerCase()) {
        var i2 = n2.getAttribute("offset"), r2 = void 0;
        r2 = i2 && i2.indexOf("%") > 0 ? parseInt(i2, 10) / 100 : i2 ? parseFloat(i2) : 0;
        var o2 = {};
        OT(n2, o2, o2);
        var a2 = o2.stopColor || n2.getAttribute("stop-color") || "#000000";
        e2.colorStops.push({ offset: r2, color: a2 });
      }
      n2 = n2.nextSibling;
    }
  }
  function ST(t2, e2) {
    t2 && t2.__inheritedStyle && (e2.__inheritedStyle || (e2.__inheritedStyle = {}), A(e2.__inheritedStyle, t2.__inheritedStyle));
  }
  function MT(t2) {
    for (var e2 = AT(t2), n2 = [], i2 = 0; i2 < e2.length; i2 += 2) {
      var r2 = parseFloat(e2[i2]), o2 = parseFloat(e2[i2 + 1]);
      n2.push([r2, o2]);
    }
    return n2;
  }
  function IT(t2, e2, n2, i2, r2) {
    var o2 = e2, a2 = o2.__inheritedStyle = o2.__inheritedStyle || {}, s2 = {};
    1 === t2.nodeType && (function(t3, e3) {
      var n3 = t3.getAttribute("transform");
      if (n3) {
        n3 = n3.replace(/,/g, " ");
        var i3 = [], r3 = null;
        n3.replace(kT, function(t4, e4, n4) {
          return i3.push(e4, n4), "";
        });
        for (var o3 = i3.length - 1; o3 > 0; o3 -= 2) {
          var a3 = i3[o3], s3 = i3[o3 - 1], l2 = AT(a3);
          switch (r3 = r3 || [1, 0, 0, 1, 0, 0], s3) {
            case "translate":
              be(r3, r3, [parseFloat(l2[0]), parseFloat(l2[1] || "0")]);
              break;
            case "scale":
              Se(r3, r3, [parseFloat(l2[0]), parseFloat(l2[1] || l2[0])]);
              break;
            case "rotate":
              we(r3, r3, -parseFloat(l2[0]) * LT);
              break;
            case "skewX":
              _e(r3, [1, 0, Math.tan(parseFloat(l2[0]) * LT), 1, 0, 0], r3);
              break;
            case "skewY":
              _e(r3, [1, Math.tan(parseFloat(l2[0]) * LT), 0, 1, 0, 0], r3);
              break;
            case "matrix":
              r3[0] = parseFloat(l2[0]), r3[1] = parseFloat(l2[1]), r3[2] = parseFloat(l2[2]), r3[3] = parseFloat(l2[3]), r3[4] = parseFloat(l2[4]), r3[5] = parseFloat(l2[5]);
          }
        }
        e3.setLocalTransform(r3);
      }
    }(t2, e2), OT(t2, a2, s2), i2 || function(t3, e3, n3) {
      for (var i3 = 0; i3 < yT.length; i3++) {
        var r3 = yT[i3];
        null != (o3 = t3.getAttribute(r3)) && (e3[gT[r3]] = o3);
      }
      for (i3 = 0; i3 < mT.length; i3++) {
        var o3;
        r3 = mT[i3];
        null != (o3 = t3.getAttribute(r3)) && (n3[vT[r3]] = o3);
      }
    }(t2, a2, s2)), o2.style = o2.style || {}, null != a2.fill && (o2.style.fill = CT(o2, "fill", a2.fill, n2)), null != a2.stroke && (o2.style.stroke = CT(o2, "stroke", a2.stroke, n2)), N(["lineWidth", "opacity", "fillOpacity", "strokeOpacity", "miterLimit", "fontSize"], function(t3) {
      null != a2[t3] && (o2.style[t3] = parseFloat(a2[t3]));
    }), N(["lineDashOffset", "lineCap", "lineJoin", "fontWeight", "fontFamily", "fontStyle", "textAlign"], function(t3) {
      null != a2[t3] && (o2.style[t3] = a2[t3]);
    }), r2 && (o2.__selfStyle = s2), a2.lineDash && (o2.style.lineDash = E(AT(a2.lineDash), function(t3) {
      return parseFloat(t3);
    })), "hidden" !== a2.visibility && "collapse" !== a2.visibility || (o2.invisible = true), "none" === a2.display && (o2.ignore = true);
  }
  var TT = /^url\(\s*#(.*?)\)/;
  function CT(t2, e2, n2, i2) {
    var r2 = n2 && n2.match(TT);
    if (!r2)
      return "none" === n2 && (n2 = null), n2;
    var o2 = lt(r2[1]);
    i2.push([t2, e2, o2]);
  }
  var DT = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  function AT(t2) {
    return t2.match(DT) || [];
  }
  var kT = /(translate|scale|rotate|skewX|skewY|matrix)\(([\-\s0-9\.eE,]*)\)/g;
  var LT = Math.PI / 180;
  var PT = /([^\s:;]+)\s*:\s*([^:;]+)/g;
  function OT(t2, e2, n2) {
    var i2, r2 = t2.getAttribute("style");
    if (r2)
      for (PT.lastIndex = 0; null != (i2 = PT.exec(r2)); ) {
        var o2 = i2[1], a2 = xt(gT, o2) ? gT[o2] : null;
        a2 && (e2[a2] = i2[2]);
        var s2 = xt(vT, o2) ? vT[o2] : null;
        s2 && (n2[s2] = i2[2]);
      }
  }
  function RT(t2, e2) {
    var n2 = e2.width / t2.width, i2 = e2.height / t2.height, r2 = Math.min(n2, i2);
    return { scale: r2, x: -(t2.x + t2.width / 2) * r2 + (e2.x + e2.width / 2), y: -(t2.y + t2.height / 2) * r2 + (e2.y + e2.height / 2) };
  }
  var NT = gt(["rect", "circle", "line", "ellipse", "polygon", "polyline", "path", "text", "tspan", "g"]);
  var ET = function() {
    function t2(t3, e2) {
      this.type = "geoSVG", this._usedGraphicMap = gt(), this._freedGraphics = [], this._mapName = t3, this._parsedXML = fT(e2);
    }
    return t2.prototype.load = function() {
      var t3 = this._firstGraphic;
      if (!t3) {
        t3 = this._firstGraphic = this._buildGraphic(this._parsedXML), this._freedGraphics.push(t3), this._boundingRect = this._firstGraphic.boundingRect.clone();
        var e2 = function(t4) {
          var e3 = [], n3 = gt();
          return N(t4, function(t5) {
            if (null == t5.namedFrom) {
              var i3 = new U_(t5.name, t5.el);
              e3.push(i3), n3.set(t5.name, i3);
            }
          }), { regions: e3, regionsMap: n3 };
        }(t3.named), n2 = e2.regions, i2 = e2.regionsMap;
        this._regions = n2, this._regionsMap = i2;
      }
      return { boundingRect: this._boundingRect, regions: this._regions, regionsMap: this._regionsMap };
    }, t2.prototype._buildGraphic = function(t3) {
      var e2, n2, i2, r2;
      try {
        st(null != (n2 = (e2 = t3 && (i2 = t3, r2 = { ignoreViewBox: true, ignoreRootClip: true }, new xT().parse(i2, r2)) || {}).root));
      } catch (t4) {
        throw new Error("Invalid svg format\n" + t4.message);
      }
      var o2 = new Er();
      o2.add(n2), o2.isGeoSVGGraphicRoot = true;
      var a2 = e2.width, s2 = e2.height, l2 = e2.viewBoxRect, u2 = this._boundingRect;
      if (!u2) {
        var h2 = void 0, c2 = void 0, p2 = void 0, d2 = void 0;
        if (null != a2 ? (h2 = 0, p2 = a2) : l2 && (h2 = l2.x, p2 = l2.width), null != s2 ? (c2 = 0, d2 = s2) : l2 && (c2 = l2.y, d2 = l2.height), null == h2 || null == c2) {
          var f2 = n2.getBoundingRect();
          null == h2 && (h2 = f2.x, p2 = f2.width), null == c2 && (c2 = f2.y, d2 = f2.height);
        }
        u2 = this._boundingRect = new Ee(h2, c2, p2, d2);
      }
      if (l2) {
        var g2 = RT(l2, u2);
        n2.scaleX = n2.scaleY = g2.scale, n2.x = g2.x, n2.y = g2.y;
      }
      o2.setClipPath(new Es({ shape: u2.plain() }));
      var y2 = [];
      return N(e2.named, function(t4) {
        var e3;
        null != NT.get(t4.svgNodeTagLower) && (y2.push(t4), (e3 = t4.el).silent = false, e3.isGroup && e3.traverse(function(t5) {
          t5.silent = false;
        }));
      }), { root: o2, boundingRect: u2, named: y2 };
    }, t2.prototype.useGraphic = function(t3) {
      var e2 = this._usedGraphicMap, n2 = e2.get(t3);
      return n2 || (n2 = this._freedGraphics.pop() || this._buildGraphic(this._parsedXML), e2.set(t3, n2), n2);
    }, t2.prototype.freeGraphic = function(t3) {
      var e2 = this._usedGraphicMap, n2 = e2.get(t3);
      n2 && (e2.removeKey(t3), this._freedGraphics.push(n2));
    }, t2;
  }();
  for (zT = [126, 25], VT = "\u5357\u6D77\u8BF8\u5C9B", BT = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]], FT = 0; FT < BT.length; FT++)
    for (GT = 0; GT < BT[FT].length; GT++)
      BT[FT][GT][0] /= 10.5, BT[FT][GT][1] /= -14, BT[FT][GT][0] += zT[0], BT[FT][GT][1] += zT[1];
  var GT;
  var zT;
  var VT;
  var BT;
  var FT;
  var WT = { "\u5357\u6D77\u8BF8\u5C9B": [32, 80], "\u5E7F\u4E1C": [0, -10], "\u9999\u6E2F": [10, 5], "\u6FB3\u95E8": [-10, 10], "\u5929\u6D25": [5, 5] };
  var HT = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];
  var YT = function() {
    function t2(t3, e2, n2) {
      var i2;
      this.type = "geoJSON", this._parsedMap = gt(), this._mapName = t3, this._specialAreas = n2, this._geoJSON = X(i2 = e2) ? "undefined" != typeof JSON && JSON.parse ? JSON.parse(i2) : new Function("return (" + i2 + ");")() : i2;
    }
    return t2.prototype.load = function(t3, e2) {
      e2 = e2 || "name";
      var n2 = this._parsedMap.get(e2);
      if (!n2) {
        var i2 = this._parseToRegions(e2);
        n2 = this._parsedMap.set(e2, { regions: i2, boundingRect: XT(i2) });
      }
      var r2 = gt(), o2 = [];
      return N(n2.regions, function(e3) {
        var n3 = e3.name;
        t3 && xt(t3, n3) && (e3 = e3.cloneShallow(n3 = t3[n3])), o2.push(e3), r2.set(n3, e3);
      }), { regions: o2, boundingRect: n2.boundingRect || new Ee(0, 0, 0, 0), regionsMap: r2 };
    }, t2.prototype._parseToRegions = function(t3) {
      var e2, n2 = this._mapName, i2 = this._geoJSON;
      try {
        e2 = i2 ? q_(i2, t3) : [];
      } catch (t4) {
        throw new Error("Invalid geoJson format\n" + t4.message);
      }
      return function(t4, e3) {
        if ("china" === t4) {
          for (var n3 = 0; n3 < e3.length; n3++)
            if (e3[n3].name === VT)
              return;
          e3.push(new X_(VT, E(BT, function(t5) {
            return { type: "polygon", exterior: t5 };
          }), zT));
        }
      }(n2, e2), N(e2, function(t4) {
        var e3 = t4.name;
        !function(t5, e4) {
          if ("china" === t5) {
            var n3 = WT[e4.name];
            if (n3) {
              var i4 = e4.getCenter();
              i4[0] += n3[0] / 10.5, i4[1] += -n3[1] / 14, e4.setCenter(i4);
            }
          }
        }(n2, t4), function(t5, e4) {
          "china" === t5 && "\u53F0\u6E7E" === e4.name && e4.geometries.push({ type: "polygon", exterior: HT[0] });
        }(n2, t4);
        var i3 = this._specialAreas && this._specialAreas[e3];
        i3 && t4.transformTo(i3.left, i3.top, i3.width, i3.height);
      }, this), e2;
    }, t2.prototype.getMapForUser = function() {
      return { geoJson: this._geoJSON, geoJSON: this._geoJSON, specialAreas: this._specialAreas };
    }, t2;
  }();
  function XT(t2) {
    for (var e2, n2 = 0; n2 < t2.length; n2++) {
      var i2 = t2[n2].getBoundingRect();
      (e2 = e2 || i2.clone()).union(i2);
    }
    return e2;
  }
  var UT = gt();
  var ZT = function(t2, e2, n2) {
    if (e2.svg) {
      var i2 = new ET(t2, e2.svg);
      UT.set(t2, i2);
    } else {
      var r2 = e2.geoJson || e2.geoJSON;
      r2 && !e2.features ? n2 = e2.specialAreas : r2 = e2;
      i2 = new YT(t2, r2, n2);
      UT.set(t2, i2);
    }
  };
  var jT = function(t2) {
    return UT.get(t2);
  };
  var qT = function(t2) {
    var e2 = UT.get(t2);
    return e2 && "geoJSON" === e2.type && e2.getMapForUser();
  };
  var KT = function(t2, e2, n2) {
    var i2 = UT.get(t2);
    if (i2)
      return i2.load(e2, n2);
  };
  var $T = ["rect", "circle", "line", "ellipse", "polygon", "polyline", "path"];
  var JT = gt($T);
  var QT = gt($T.concat(["g"]));
  var tC = gt($T.concat(["g"]));
  var eC = Po();
  function nC(t2) {
    var e2 = t2.getItemStyle(), n2 = t2.get("areaColor");
    return null != n2 && (e2.fill = n2), e2;
  }
  function iC(t2) {
    var e2 = t2.style;
    e2 && (e2.stroke = e2.stroke || e2.fill, e2.fill = null);
  }
  var rC = function() {
    function t2(t3) {
      var e2 = new Er();
      this.uid = Ic("ec_map_draw"), this._controller = new oT(t3.getZr()), this._controllerHost = { target: e2 }, this.group = e2, e2.add(this._regionsGroup = new Er()), e2.add(this._svgGroup = new Er());
    }
    return t2.prototype.draw = function(t3, e2, n2, i2, r2) {
      var o2 = "geo" === t3.mainType, a2 = t3.getData && t3.getData();
      o2 && e2.eachComponent({ mainType: "series", subType: "map" }, function(e3) {
        a2 || e3.getHostGeoModel() !== t3 || (a2 = e3.getData());
      });
      var s2 = t3.coordinateSystem, l2 = this._regionsGroup, u2 = this.group, h2 = s2.getTransformInfo(), c2 = h2.raw, p2 = h2.roam;
      !l2.childAt(0) || r2 ? (u2.x = p2.x, u2.y = p2.y, u2.scaleX = p2.scaleX, u2.scaleY = p2.scaleY, u2.dirty()) : dh(u2, p2, t3);
      var d2 = a2 && a2.getVisual("visualMeta") && a2.getVisual("visualMeta").length > 0, f2 = { api: n2, geo: s2, mapOrGeoModel: t3, data: a2, isVisualEncodedByVisualMap: d2, isGeo: o2, transformInfoRaw: c2 };
      "geoJSON" === s2.resourceType ? this._buildGeoJSON(f2) : "geoSVG" === s2.resourceType && this._buildSVG(f2), this._updateController(t3, e2, n2), this._updateMapSelectHandler(t3, l2, n2, i2);
    }, t2.prototype._buildGeoJSON = function(t3) {
      var e2 = this._regionsGroupByName = gt(), n2 = gt(), i2 = this._regionsGroup, r2 = t3.transformInfoRaw, o2 = t3.mapOrGeoModel, a2 = t3.data, s2 = t3.geo.projection, l2 = s2 && s2.stream;
      function u2(t4, e3) {
        return e3 && (t4 = e3(t4)), t4 && [t4[0] * r2.scaleX + r2.x, t4[1] * r2.scaleY + r2.y];
      }
      function h2(t4) {
        for (var e3 = [], n3 = !l2 && s2 && s2.project, i3 = 0; i3 < t4.length; ++i3) {
          var r3 = u2(t4[i3], n3);
          r3 && e3.push(r3);
        }
        return e3;
      }
      function c2(t4) {
        return { shape: { points: h2(t4) } };
      }
      i2.removeAll(), N(t3.geo.regions, function(r3) {
        var h3 = r3.name, p2 = e2.get(h3), d2 = n2.get(h3) || {}, f2 = d2.dataIdx, g2 = d2.regionModel;
        p2 || (p2 = e2.set(h3, new Er()), i2.add(p2), f2 = a2 ? a2.indexOfName(h3) : null, g2 = t3.isGeo ? o2.getRegionModel(h3) : a2 ? a2.getItemModel(f2) : null, n2.set(h3, { dataIdx: f2, regionModel: g2 }));
        var y2 = [], v2 = [];
        N(r3.geometries, function(t4) {
          if ("polygon" === t4.type) {
            var e3 = [t4.exterior].concat(t4.interiors || []);
            l2 && (e3 = hC(e3, l2)), N(e3, function(t5) {
              y2.push(new Gu(c2(t5)));
            });
          } else {
            var n3 = t4.points;
            l2 && (n3 = hC(n3, l2, true)), N(n3, function(t5) {
              v2.push(new Hu(c2(t5)));
            });
          }
        });
        var m2 = u2(r3.getCenter(), s2 && s2.project);
        function x2(e3, n3) {
          if (e3.length) {
            var i3 = new Qu({ culling: true, segmentIgnoreThreshold: 1, shape: { paths: e3 } });
            p2.add(i3), oC(t3, i3, f2, g2), aC(t3, i3, h3, g2, o2, f2, m2), n3 && (iC(i3), N(i3.states, iC));
          }
        }
        x2(y2), x2(v2, true);
      }), e2.each(function(e3, i3) {
        var r3 = n2.get(i3), a3 = r3.dataIdx, s3 = r3.regionModel;
        sC(t3, e3, i3, s3, o2, a3), lC(t3, e3, i3, s3, o2), uC(t3, e3, i3, s3, o2);
      }, this);
    }, t2.prototype._buildSVG = function(t3) {
      var e2 = t3.geo.map, n2 = t3.transformInfoRaw;
      this._svgGroup.x = n2.x, this._svgGroup.y = n2.y, this._svgGroup.scaleX = n2.scaleX, this._svgGroup.scaleY = n2.scaleY, this._svgResourceChanged(e2) && (this._freeSVG(), this._useSVG(e2));
      var i2 = this._svgDispatcherMap = gt(), r2 = false;
      N(this._svgGraphicRecord.named, function(e3) {
        var n3 = e3.name, o2 = t3.mapOrGeoModel, a2 = t3.data, s2 = e3.svgNodeTagLower, l2 = e3.el, u2 = a2 ? a2.indexOfName(n3) : null, h2 = o2.getRegionModel(n3);
        (null != JT.get(s2) && l2 instanceof wa && oC(t3, l2, u2, h2), l2 instanceof wa && (l2.culling = true), l2.z2EmphasisLift = 0, e3.namedFrom) || (null != tC.get(s2) && aC(t3, l2, n3, h2, o2, u2, null), sC(t3, l2, n3, h2, o2, u2), lC(t3, l2, n3, h2, o2), null != QT.get(s2) && ("self" === uC(t3, l2, n3, h2, o2) && (r2 = true), (i2.get(n3) || i2.set(n3, [])).push(l2)));
      }, this), this._enableBlurEntireSVG(r2, t3);
    }, t2.prototype._enableBlurEntireSVG = function(t3, e2) {
      if (t3 && e2.isGeo) {
        var n2 = e2.mapOrGeoModel.getModel(["blur", "itemStyle"]).getItemStyle().opacity;
        this._svgGraphicRecord.root.traverse(function(t4) {
          if (!t4.isGroup) {
            Tl(t4);
            var e3 = t4.ensureState("blur").style || {};
            null == e3.opacity && null != n2 && (e3.opacity = n2), t4.ensureState("emphasis");
          }
        });
      }
    }, t2.prototype.remove = function() {
      this._regionsGroup.removeAll(), this._regionsGroupByName = null, this._svgGroup.removeAll(), this._freeSVG(), this._controller.dispose(), this._controllerHost = null;
    }, t2.prototype.findHighDownDispatchers = function(t3, e2) {
      if (null == t3)
        return [];
      var n2 = e2.coordinateSystem;
      if ("geoJSON" === n2.resourceType) {
        var i2 = this._regionsGroupByName;
        if (i2) {
          var r2 = i2.get(t3);
          return r2 ? [r2] : [];
        }
      } else if ("geoSVG" === n2.resourceType)
        return this._svgDispatcherMap && this._svgDispatcherMap.get(t3) || [];
    }, t2.prototype._svgResourceChanged = function(t3) {
      return this._svgMapName !== t3;
    }, t2.prototype._useSVG = function(t3) {
      var e2 = jT(t3);
      if (e2 && "geoSVG" === e2.type) {
        var n2 = e2.useGraphic(this.uid);
        this._svgGroup.add(n2.root), this._svgGraphicRecord = n2, this._svgMapName = t3;
      }
    }, t2.prototype._freeSVG = function() {
      var t3 = this._svgMapName;
      if (null != t3) {
        var e2 = jT(t3);
        e2 && "geoSVG" === e2.type && e2.freeGraphic(this.uid), this._svgGraphicRecord = null, this._svgDispatcherMap = null, this._svgGroup.removeAll(), this._svgMapName = null;
      }
    }, t2.prototype._updateController = function(t3, e2, n2) {
      var i2 = t3.coordinateSystem, r2 = this._controller, o2 = this._controllerHost;
      o2.zoomLimit = t3.get("scaleLimit"), o2.zoom = i2.getZoom(), r2.enable(t3.get("roam") || false);
      var a2 = t3.mainType;
      function s2() {
        var e3 = { type: "geoRoam", componentType: a2 };
        return e3[a2 + "Id"] = t3.id, e3;
      }
      r2.off("pan").on("pan", function(t4) {
        this._mouseDownFlag = false, uT(o2, t4.dx, t4.dy), n2.dispatchAction(D(s2(), { dx: t4.dx, dy: t4.dy, animation: { duration: 0 } }));
      }, this), r2.off("zoom").on("zoom", function(t4) {
        this._mouseDownFlag = false, hT(o2, t4.scale, t4.originX, t4.originY), n2.dispatchAction(D(s2(), { zoom: t4.scale, originX: t4.originX, originY: t4.originY, animation: { duration: 0 } }));
      }, this), r2.setPointerChecker(function(e3, r3, o3) {
        return i2.containPoint([r3, o3]) && !dT(e3, n2, t3);
      });
    }, t2.prototype.resetForLabelLayout = function() {
      this.group.traverse(function(t3) {
        var e2 = t3.getTextContent();
        e2 && (e2.ignore = eC(e2).ignore);
      });
    }, t2.prototype._updateMapSelectHandler = function(t3, e2, n2, i2) {
      var r2 = this;
      e2.off("mousedown"), e2.off("click"), t3.get("selectedMode") && (e2.on("mousedown", function() {
        r2._mouseDownFlag = true;
      }), e2.on("click", function(t4) {
        r2._mouseDownFlag && (r2._mouseDownFlag = false);
      }));
    }, t2;
  }();
  function oC(t2, e2, n2, i2) {
    var r2 = i2.getModel("itemStyle"), o2 = i2.getModel(["emphasis", "itemStyle"]), a2 = i2.getModel(["blur", "itemStyle"]), s2 = i2.getModel(["select", "itemStyle"]), l2 = nC(r2), u2 = nC(o2), h2 = nC(s2), c2 = nC(a2), p2 = t2.data;
    if (p2) {
      var d2 = p2.getItemVisual(n2, "style"), f2 = p2.getItemVisual(n2, "decal");
      t2.isVisualEncodedByVisualMap && d2.fill && (l2.fill = d2.fill), f2 && (l2.decal = fv(f2, t2.api));
    }
    e2.setStyle(l2), e2.style.strokeNoScale = true, e2.ensureState("emphasis").style = u2, e2.ensureState("select").style = h2, e2.ensureState("blur").style = c2, Tl(e2);
  }
  function aC(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = t2.data, l2 = t2.isGeo, u2 = s2 && isNaN(s2.get(s2.mapDimension("value"), o2)), h2 = s2 && s2.getItemLayout(o2);
    if (l2 || u2 || h2 && h2.showLabel) {
      var c2 = l2 ? n2 : o2, p2 = void 0;
      (!s2 || o2 >= 0) && (p2 = r2);
      var d2 = a2 ? { normal: { align: "center", verticalAlign: "middle" } } : null;
      Qh(e2, tc(i2), { labelFetcher: p2, labelDataIndex: c2, defaultText: n2 }, d2);
      var f2 = e2.getTextContent();
      if (f2 && (eC(f2).ignore = f2.ignore, e2.textConfig && a2)) {
        var g2 = e2.getBoundingRect().clone();
        e2.textConfig.layoutRect = g2, e2.textConfig.position = [(a2[0] - g2.x) / g2.width * 100 + "%", (a2[1] - g2.y) / g2.height * 100 + "%"];
      }
      e2.disableLabelAnimation = true;
    } else
      e2.removeTextContent(), e2.removeTextConfig(), e2.disableLabelAnimation = null;
  }
  function sC(t2, e2, n2, i2, r2, o2) {
    t2.data ? t2.data.setItemGraphicEl(o2, e2) : Js(e2).eventData = { componentType: "geo", componentIndex: r2.componentIndex, geoIndex: r2.componentIndex, name: n2, region: i2 && i2.option || {} };
  }
  function lC(t2, e2, n2, i2, r2) {
    t2.data || Uh({ el: e2, componentModel: r2, itemName: n2, itemTooltipOption: i2.get("tooltip") });
  }
  function uC(t2, e2, n2, i2, r2) {
    e2.highDownSilentOnTouch = !!r2.get("selectedMode");
    var o2 = i2.getModel("emphasis"), a2 = o2.get("focus");
    return Hl(e2, a2, o2.get("blurScope"), o2.get("disabled")), t2.isGeo && function(t3, e3, n3) {
      var i3 = Js(t3);
      i3.componentMainType = e3.mainType, i3.componentIndex = e3.componentIndex, i3.componentHighDownName = n3;
    }(e2, r2, n2), a2;
  }
  function hC(t2, e2, n2) {
    var i2, r2 = [];
    function o2() {
      i2 = [];
    }
    function a2() {
      i2.length && (r2.push(i2), i2 = []);
    }
    var s2 = e2({ polygonStart: o2, polygonEnd: a2, lineStart: o2, lineEnd: a2, point: function(t3, e3) {
      isFinite(t3) && isFinite(e3) && i2.push([t3, e3]);
    }, sphere: function() {
    } });
    return !n2 && s2.polygonStart(), N(t2, function(t3) {
      s2.lineStart();
      for (var e3 = 0; e3 < t3.length; e3++)
        s2.point(t3[e3][0], t3[e3][1]);
      s2.lineEnd();
    }), !n2 && s2.polygonEnd(), r2;
  }
  var cC = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      if (!i2 || "mapToggleSelect" !== i2.type || i2.from !== this.uid) {
        var r2 = this.group;
        if (r2.removeAll(), !t3.getHostGeoModel()) {
          if (this._mapDraw && i2 && "geoRoam" === i2.type && this._mapDraw.resetForLabelLayout(), i2 && "geoRoam" === i2.type && "series" === i2.componentType && i2.seriesId === t3.id)
            (o2 = this._mapDraw) && r2.add(o2.group);
          else if (t3.needsDrawMap) {
            var o2 = this._mapDraw || new rC(n3);
            r2.add(o2.group), o2.draw(t3, e2, n3, this, i2), this._mapDraw = o2;
          } else
            this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
          t3.get("showLegendSymbol") && e2.getComponent("legend") && this._renderSymbols(t3, e2, n3);
        }
      }
    }, n2.prototype.remove = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null, this.group.removeAll();
    }, n2.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove(), this._mapDraw = null;
    }, n2.prototype._renderSymbols = function(t3, e2, n3) {
      var i2 = t3.originalData, r2 = this.group;
      i2.each(i2.mapDimension("value"), function(e3, n4) {
        if (!isNaN(e3)) {
          var o2 = i2.getItemLayout(n4);
          if (o2 && o2.point) {
            var a2 = o2.point, s2 = o2.offset, l2 = new xu({ style: { fill: t3.getData().getVisual("style").fill }, shape: { cx: a2[0] + 9 * s2, cy: a2[1], r: 3 }, silent: true, z2: 8 + (s2 ? 0 : 11) });
            if (!s2) {
              var u2 = t3.mainSeries.getData(), h2 = i2.getName(n4), c2 = u2.indexOfName(h2), p2 = i2.getItemModel(n4), d2 = p2.getModel("label"), f2 = u2.getItemGraphicEl(c2);
              Qh(l2, tc(p2), { labelFetcher: { getFormattedLabel: function(e4, n5) {
                return t3.getFormattedLabel(c2, n5);
              } }, defaultText: h2 }), l2.disableLabelAnimation = true, d2.get("position") || l2.setTextConfig({ position: "bottom" }), f2.onHoverStateChange = function(t4) {
                Ml(l2, t4);
              };
            }
            r2.add(l2);
          }
        }
      });
    }, n2.type = "map", n2;
  }(Ag);
  var pC = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.needsDrawMap = false, e2.seriesGroup = [], e2.getTooltipPosition = function(t3) {
        if (null != t3) {
          var e3 = this.getData().getName(t3), n3 = this.coordinateSystem, i2 = n3.getRegion(e3);
          return i2 && n3.dataToPoint(i2.getCenter());
        }
      }, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3) {
      for (var e2 = zM(this, { coordDimensions: ["value"], encodeDefaulter: W($p, this) }), n3 = gt(), i2 = [], r2 = 0, o2 = e2.count(); r2 < o2; r2++) {
        var a2 = e2.getName(r2);
        n3.set(a2, true);
      }
      return N(KT(this.getMapType(), this.option.nameMap, this.option.nameProperty).regions, function(t4) {
        var e3 = t4.name;
        n3.get(e3) || i2.push(e3);
      }), e2.appendValues([], i2), e2;
    }, n2.prototype.getHostGeoModel = function() {
      var t3 = this.option.geoIndex;
      return null != t3 ? this.ecModel.getComponent("geo", t3) : null;
    }, n2.prototype.getMapType = function() {
      return (this.getHostGeoModel() || this).option.map;
    }, n2.prototype.getRawValue = function(t3) {
      var e2 = this.getData();
      return e2.get(e2.mapDimension("value"), t3);
    }, n2.prototype.getRegionModel = function(t3) {
      var e2 = this.getData();
      return e2.getItemModel(e2.indexOfName(t3));
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      for (var i2 = this.getData(), r2 = this.getRawValue(t3), o2 = i2.getName(t3), a2 = this.seriesGroup, s2 = [], l2 = 0; l2 < a2.length; l2++) {
        var u2 = a2[l2].originalData.indexOfName(o2), h2 = i2.mapDimension("value");
        isNaN(a2[l2].originalData.get(h2, u2)) || s2.push(a2[l2].name);
      }
      return eg("section", { header: s2.join(", "), noHeader: !s2.length, blocks: [eg("nameValue", { name: o2, value: r2 })] });
    }, n2.prototype.setZoom = function(t3) {
      this.option.zoom = t3;
    }, n2.prototype.setCenter = function(t3) {
      this.option.center = t3;
    }, n2.prototype.getLegendIcon = function(t3) {
      var e2 = t3.icon || "roundRect", n3 = Gy(e2, 0, 0, t3.itemWidth, t3.itemHeight, t3.itemStyle.fill);
      return n3.setStyle(t3.itemStyle), n3.style.stroke = "none", e2.indexOf("empty") > -1 && (n3.style.stroke = n3.style.fill, n3.style.fill = "#fff", n3.style.lineWidth = 2), n3;
    }, n2.type = "series.map", n2.dependencies = ["geo"], n2.layoutMode = "box", n2.defaultOption = { z: 2, coordinateSystem: "geo", map: "", left: "center", top: "center", aspectScale: null, showLegendSymbol: true, boundingCoords: null, center: null, zoom: 1, scaleLimit: null, selectedMode: true, label: { show: false, color: "#000" }, itemStyle: { borderWidth: 0.5, borderColor: "#444", areaColor: "#eee" }, emphasis: { label: { show: true, color: "rgb(100,0,0)" }, itemStyle: { areaColor: "rgba(255,215,0,0.8)" } }, select: { label: { show: true, color: "rgb(100,0,0)" }, itemStyle: { color: "rgba(255,215,0,0.8)" } }, nameProperty: "name" }, n2;
  }(vg);
  function dC(t2) {
    var e2 = {};
    t2.eachSeriesByType("map", function(t3) {
      var n2 = t3.getHostGeoModel(), i2 = n2 ? "o" + n2.id : "i" + t3.getMapType();
      (e2[i2] = e2[i2] || []).push(t3);
    }), N(e2, function(t3, e3) {
      for (var n2, i2, r2, o2 = (n2 = E(t3, function(t4) {
        return t4.getData();
      }), i2 = t3[0].get("mapValueCalculation"), r2 = {}, N(n2, function(t4) {
        t4.each(t4.mapDimension("value"), function(e4, n3) {
          var i3 = "ec-" + t4.getName(n3);
          r2[i3] = r2[i3] || [], isNaN(e4) || r2[i3].push(e4);
        });
      }), n2[0].map(n2[0].mapDimension("value"), function(t4, e4) {
        for (var o3 = "ec-" + n2[0].getName(e4), a3 = 0, s2 = 1 / 0, l2 = -1 / 0, u2 = r2[o3].length, h2 = 0; h2 < u2; h2++)
          s2 = Math.min(s2, r2[o3][h2]), l2 = Math.max(l2, r2[o3][h2]), a3 += r2[o3][h2];
        return 0 === u2 ? NaN : "min" === i2 ? s2 : "max" === i2 ? l2 : "average" === i2 ? a3 / u2 : a3;
      })), a2 = 0; a2 < t3.length; a2++)
        t3[a2].originalData = t3[a2].getData();
      for (a2 = 0; a2 < t3.length; a2++)
        t3[a2].seriesGroup = t3, t3[a2].needsDrawMap = 0 === a2 && !t3[a2].getHostGeoModel(), t3[a2].setData(o2.cloneShallow()), t3[a2].mainSeries = t3[0];
    });
  }
  function fC(t2) {
    var e2 = {};
    t2.eachSeriesByType("map", function(n2) {
      var i2 = n2.getMapType();
      if (!n2.getHostGeoModel() && !e2[i2]) {
        var r2 = {};
        N(n2.seriesGroup, function(e3) {
          var n3 = e3.coordinateSystem, i3 = e3.originalData;
          e3.get("showLegendSymbol") && t2.getComponent("legend") && i3.each(i3.mapDimension("value"), function(t3, e4) {
            var o3 = i3.getName(e4), a2 = n3.getRegion(o3);
            if (a2 && !isNaN(t3)) {
              var s2 = r2[o3] || 0, l2 = n3.dataToPoint(a2.getCenter());
              r2[o3] = s2 + 1, i3.setItemLayout(e4, { point: l2, offset: s2 });
            }
          });
        });
        var o2 = n2.getData();
        o2.each(function(t3) {
          var e3 = o2.getName(t3), n3 = o2.getItemLayout(t3) || {};
          n3.showLabel = !r2[e3], o2.setItemLayout(t3, n3);
        }), e2[i2] = true;
      }
    });
  }
  var gC = Gt;
  var yC = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      return n3.type = "view", n3.dimensions = ["x", "y"], n3._roamTransformable = new fr(), n3._rawTransformable = new fr(), n3.name = e2, n3;
    }
    return e(n2, t2), n2.prototype.setBoundingRect = function(t3, e2, n3, i2) {
      return this._rect = new Ee(t3, e2, n3, i2), this._rect;
    }, n2.prototype.getBoundingRect = function() {
      return this._rect;
    }, n2.prototype.setViewRect = function(t3, e2, n3, i2) {
      this._transformTo(t3, e2, n3, i2), this._viewRect = new Ee(t3, e2, n3, i2);
    }, n2.prototype._transformTo = function(t3, e2, n3, i2) {
      var r2 = this.getBoundingRect(), o2 = this._rawTransformable;
      o2.transform = r2.calculateTransform(new Ee(t3, e2, n3, i2));
      var a2 = o2.parent;
      o2.parent = null, o2.decomposeTransform(), o2.parent = a2, this._updateTransform();
    }, n2.prototype.setCenter = function(t3, e2) {
      t3 && (this._center = [Xr(t3[0], e2.getWidth()), Xr(t3[1], e2.getHeight())], this._updateCenterAndZoom());
    }, n2.prototype.setZoom = function(t3) {
      t3 = t3 || 1;
      var e2 = this.zoomLimit;
      e2 && (null != e2.max && (t3 = Math.min(e2.max, t3)), null != e2.min && (t3 = Math.max(e2.min, t3))), this._zoom = t3, this._updateCenterAndZoom();
    }, n2.prototype.getDefaultCenter = function() {
      var t3 = this.getBoundingRect();
      return [t3.x + t3.width / 2, t3.y + t3.height / 2];
    }, n2.prototype.getCenter = function() {
      return this._center || this.getDefaultCenter();
    }, n2.prototype.getZoom = function() {
      return this._zoom || 1;
    }, n2.prototype.getRoamTransform = function() {
      return this._roamTransformable.getLocalTransform();
    }, n2.prototype._updateCenterAndZoom = function() {
      var t3 = this._rawTransformable.getLocalTransform(), e2 = this._roamTransformable, n3 = this.getDefaultCenter(), i2 = this.getCenter(), r2 = this.getZoom();
      i2 = Gt([], i2, t3), n3 = Gt([], n3, t3), e2.originX = i2[0], e2.originY = i2[1], e2.x = n3[0] - i2[0], e2.y = n3[1] - i2[1], e2.scaleX = e2.scaleY = r2, this._updateTransform();
    }, n2.prototype._updateTransform = function() {
      var t3 = this._roamTransformable, e2 = this._rawTransformable;
      e2.parent = t3, t3.updateTransform(), e2.updateTransform(), xe(this.transform || (this.transform = []), e2.transform || [1, 0, 0, 1, 0, 0]), this._rawTransform = e2.getLocalTransform(), this.invTransform = this.invTransform || [], Me(this.invTransform, this.transform), this.decomposeTransform();
    }, n2.prototype.getTransformInfo = function() {
      var t3 = this._rawTransformable, e2 = this._roamTransformable, n3 = new fr();
      return n3.transform = e2.transform, n3.decomposeTransform(), { roam: { x: n3.x, y: n3.y, scaleX: n3.scaleX, scaleY: n3.scaleY }, raw: { x: t3.x, y: t3.y, scaleX: t3.scaleX, scaleY: t3.scaleY } };
    }, n2.prototype.getViewRect = function() {
      return this._viewRect;
    }, n2.prototype.getViewRectAfterRoam = function() {
      var t3 = this.getBoundingRect().clone();
      return t3.applyTransform(this.transform), t3;
    }, n2.prototype.dataToPoint = function(t3, e2, n3) {
      var i2 = e2 ? this._rawTransform : this.transform;
      return n3 = n3 || [], i2 ? gC(n3, t3, i2) : Mt(n3, t3);
    }, n2.prototype.pointToData = function(t3) {
      var e2 = this.invTransform;
      return e2 ? gC([], t3, e2) : [t3[0], t3[1]];
    }, n2.prototype.convertToPixel = function(t3, e2, n3) {
      var i2 = vC(e2);
      return i2 === this ? i2.dataToPoint(n3) : null;
    }, n2.prototype.convertFromPixel = function(t3, e2, n3) {
      var i2 = vC(e2);
      return i2 === this ? i2.pointToData(n3) : null;
    }, n2.prototype.containPoint = function(t3) {
      return this.getViewRectAfterRoam().contain(t3[0], t3[1]);
    }, n2.dimensions = ["x", "y"], n2;
  }(fr);
  function vC(t2) {
    var e2 = t2.seriesModel;
    return e2 ? e2.coordinateSystem : null;
  }
  var mC = { geoJSON: { aspectScale: 0.75, invertLongitute: true }, geoSVG: { aspectScale: 1, invertLongitute: false } };
  var xC = ["lng", "lat"];
  var _C = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this, e2) || this;
      r2.dimensions = xC, r2.type = "geo", r2._nameCoordMap = gt(), r2.map = n3;
      var o2, a2 = i2.projection, s2 = KT(n3, i2.nameMap, i2.nameProperty), l2 = jT(n3), u2 = (r2.resourceType = l2 ? l2.type : null, r2.regions = s2.regions), h2 = mC[l2.type];
      if (r2._regionsMap = s2.regionsMap, r2.regions = s2.regions, r2.projection = a2, a2)
        for (var c2 = 0; c2 < u2.length; c2++) {
          var p2 = u2[c2].getBoundingRect(a2);
          (o2 = o2 || p2.clone()).union(p2);
        }
      else
        o2 = s2.boundingRect;
      return r2.setBoundingRect(o2.x, o2.y, o2.width, o2.height), r2.aspectScale = a2 ? 1 : it(i2.aspectScale, h2.aspectScale), r2._invertLongitute = !a2 && h2.invertLongitute, r2;
    }
    return e(n2, t2), n2.prototype._transformTo = function(t3, e2, n3, i2) {
      var r2 = this.getBoundingRect(), o2 = this._invertLongitute;
      r2 = r2.clone(), o2 && (r2.y = -r2.y - r2.height);
      var a2 = this._rawTransformable;
      a2.transform = r2.calculateTransform(new Ee(t3, e2, n3, i2));
      var s2 = a2.parent;
      a2.parent = null, a2.decomposeTransform(), a2.parent = s2, o2 && (a2.scaleY = -a2.scaleY), this._updateTransform();
    }, n2.prototype.getRegion = function(t3) {
      return this._regionsMap.get(t3);
    }, n2.prototype.getRegionByCoord = function(t3) {
      for (var e2 = this.regions, n3 = 0; n3 < e2.length; n3++) {
        var i2 = e2[n3];
        if ("geoJSON" === i2.type && i2.contain(t3))
          return e2[n3];
      }
    }, n2.prototype.addGeoCoord = function(t3, e2) {
      this._nameCoordMap.set(t3, e2);
    }, n2.prototype.getGeoCoord = function(t3) {
      var e2 = this._regionsMap.get(t3);
      return this._nameCoordMap.get(t3) || e2 && e2.getCenter();
    }, n2.prototype.dataToPoint = function(t3, e2, n3) {
      if (X(t3) && (t3 = this.getGeoCoord(t3)), t3) {
        var i2 = this.projection;
        return i2 && (t3 = i2.project(t3)), t3 && this.projectedToPoint(t3, e2, n3);
      }
    }, n2.prototype.pointToData = function(t3) {
      var e2 = this.projection;
      return e2 && (t3 = e2.unproject(t3)), t3 && this.pointToProjected(t3);
    }, n2.prototype.pointToProjected = function(e2) {
      return t2.prototype.pointToData.call(this, e2);
    }, n2.prototype.projectedToPoint = function(e2, n3, i2) {
      return t2.prototype.dataToPoint.call(this, e2, n3, i2);
    }, n2.prototype.convertToPixel = function(t3, e2, n3) {
      var i2 = bC(e2);
      return i2 === this ? i2.dataToPoint(n3) : null;
    }, n2.prototype.convertFromPixel = function(t3, e2, n3) {
      var i2 = bC(e2);
      return i2 === this ? i2.pointToData(n3) : null;
    }, n2;
  }(yC);
  function bC(t2) {
    var e2 = t2.geoModel, n2 = t2.seriesModel;
    return e2 ? e2.coordinateSystem : n2 ? n2.coordinateSystem || (n2.getReferringComponents("geo", Eo).models[0] || {}).coordinateSystem : null;
  }
  function wC(t2, e2) {
    var n2 = t2.get("boundingCoords");
    if (null != n2) {
      var i2 = n2[0], r2 = n2[1];
      if (isFinite(i2[0]) && isFinite(i2[1]) && isFinite(r2[0]) && isFinite(r2[1])) {
        var o2 = this.projection;
        if (o2) {
          var a2 = i2[0], s2 = i2[1], l2 = r2[0], u2 = r2[1];
          i2 = [1 / 0, 1 / 0], r2 = [-1 / 0, -1 / 0];
          var h2 = function(t3, e3, n3, a3) {
            for (var s3 = n3 - t3, l3 = a3 - e3, u3 = 0; u3 <= 100; u3++) {
              var h3 = u3 / 100, c3 = o2.project([t3 + s3 * h3, e3 + l3 * h3]);
              Wt(i2, i2, c3), Ht(r2, r2, c3);
            }
          };
          h2(a2, s2, l2, s2), h2(l2, s2, l2, u2), h2(l2, u2, a2, u2), h2(a2, u2, l2, s2);
        }
        this.setBoundingRect(i2[0], i2[1], r2[0] - i2[0], r2[1] - i2[1]);
      }
    }
    var c2, p2, d2, f2 = this.getBoundingRect(), g2 = t2.get("layoutCenter"), y2 = t2.get("layoutSize"), v2 = e2.getWidth(), m2 = e2.getHeight(), x2 = f2.width / f2.height * this.aspectScale, _2 = false;
    if (g2 && y2 && (c2 = [Xr(g2[0], v2), Xr(g2[1], m2)], p2 = Xr(y2, Math.min(v2, m2)), isNaN(c2[0]) || isNaN(c2[1]) || isNaN(p2) || (_2 = true)), _2)
      d2 = {}, x2 > 1 ? (d2.width = p2, d2.height = p2 / x2) : (d2.height = p2, d2.width = p2 * x2), d2.y = c2[1] - d2.height / 2, d2.x = c2[0] - d2.width / 2;
    else {
      var b2 = t2.getBoxLayoutParams();
      b2.aspect = x2, d2 = Tp(b2, { width: v2, height: m2 });
    }
    this.setViewRect(d2.x, d2.y, d2.width, d2.height), this.setCenter(t2.get("center"), e2), this.setZoom(t2.get("zoom"));
  }
  O(_C, yC);
  var SC = function() {
    function t2() {
      this.dimensions = xC;
    }
    return t2.prototype.create = function(t3, e2) {
      var n2 = [];
      function i2(t4) {
        return { nameProperty: t4.get("nameProperty"), aspectScale: t4.get("aspectScale"), projection: t4.get("projection") };
      }
      t3.eachComponent("geo", function(t4, r3) {
        var o2 = t4.get("map"), a2 = new _C(o2 + r3, o2, D({ nameMap: t4.get("nameMap") }, i2(t4)));
        a2.zoomLimit = t4.get("scaleLimit"), n2.push(a2), t4.coordinateSystem = a2, a2.model = t4, a2.resize = wC, a2.resize(t4, e2);
      }), t3.eachSeries(function(t4) {
        if ("geo" === t4.get("coordinateSystem")) {
          var e3 = t4.get("geoIndex") || 0;
          t4.coordinateSystem = n2[e3];
        }
      });
      var r2 = {};
      return t3.eachSeriesByType("map", function(t4) {
        if (!t4.getHostGeoModel()) {
          var e3 = t4.getMapType();
          r2[e3] = r2[e3] || [], r2[e3].push(t4);
        }
      }), N(r2, function(t4, r3) {
        var o2 = E(t4, function(t5) {
          return t5.get("nameMap");
        }), a2 = new _C(r3, r3, D({ nameMap: C(o2) }, i2(t4[0])));
        a2.zoomLimit = nt.apply(null, E(t4, function(t5) {
          return t5.get("scaleLimit");
        })), n2.push(a2), a2.resize = wC, a2.resize(t4[0], e2), N(t4, function(t5) {
          t5.coordinateSystem = a2, function(t6, e3) {
            N(e3.get("geoCoord"), function(e4, n3) {
              t6.addGeoCoord(n3, e4);
            });
          }(a2, t5);
        });
      }), n2;
    }, t2.prototype.getFilledRegions = function(t3, e2, n2, i2) {
      for (var r2 = (t3 || []).slice(), o2 = gt(), a2 = 0; a2 < r2.length; a2++)
        o2.set(r2[a2].name, r2[a2]);
      return N(KT(e2, n2, i2).regions, function(t4) {
        var e3 = t4.name;
        !o2.get(e3) && r2.push({ name: e3 });
      }), r2;
    }, t2;
  }();
  var MC = new SC();
  var IC = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      var i2 = jT(t3.map);
      if (i2 && "geoJSON" === i2.type) {
        var r2 = t3.itemStyle = t3.itemStyle || {};
        "color" in r2 || (r2.color = "#eee");
      }
      this.mergeDefaultAndTheme(t3, n3), bo(t3, "label", ["show"]);
    }, n2.prototype.optionUpdated = function() {
      var t3 = this, e2 = this.option;
      e2.regions = MC.getFilledRegions(e2.regions, e2.map, e2.nameMap, e2.nameProperty);
      var n3 = {};
      this._optionModelMap = z(e2.regions || [], function(e3, i2) {
        var r2 = i2.name;
        return r2 && (e3.set(r2, new Sc(i2, t3, t3.ecModel)), i2.selected && (n3[r2] = true)), e3;
      }, gt()), e2.selectedMap || (e2.selectedMap = n3);
    }, n2.prototype.getRegionModel = function(t3) {
      return this._optionModelMap.get(t3) || new Sc(null, this, this.ecModel);
    }, n2.prototype.getFormattedLabel = function(t3, e2) {
      var n3 = this.getRegionModel(t3), i2 = "normal" === e2 ? n3.get(["label", "formatter"]) : n3.get(["emphasis", "label", "formatter"]), r2 = { name: t3 };
      return Y(i2) ? (r2.status = e2, i2(r2)) : X(i2) ? i2.replace("{a}", null != t3 ? t3 : "") : void 0;
    }, n2.prototype.setZoom = function(t3) {
      this.option.zoom = t3;
    }, n2.prototype.setCenter = function(t3) {
      this.option.center = t3;
    }, n2.prototype.select = function(t3) {
      var e2 = this.option, n3 = e2.selectedMode;
      n3 && ("multiple" !== n3 && (e2.selectedMap = null), (e2.selectedMap || (e2.selectedMap = {}))[t3] = true);
    }, n2.prototype.unSelect = function(t3) {
      var e2 = this.option.selectedMap;
      e2 && (e2[t3] = false);
    }, n2.prototype.toggleSelected = function(t3) {
      this[this.isSelected(t3) ? "unSelect" : "select"](t3);
    }, n2.prototype.isSelected = function(t3) {
      var e2 = this.option.selectedMap;
      return !(!e2 || !e2[t3]);
    }, n2.type = "geo", n2.layoutMode = "box", n2.defaultOption = { z: 0, show: true, left: "center", top: "center", aspectScale: null, silent: false, map: "", boundingCoords: null, center: null, zoom: 1, scaleLimit: null, label: { show: false, color: "#000" }, itemStyle: { borderWidth: 0.5, borderColor: "#444" }, emphasis: { label: { show: true, color: "rgb(100,0,0)" }, itemStyle: { color: "rgba(255,215,0,0.8)" } }, select: { label: { show: true, color: "rgb(100,0,0)" }, itemStyle: { color: "rgba(255,215,0,0.8)" } }, regions: [] }, n2;
  }(Op);
  function TC(t2, e2) {
    return t2.pointToProjected ? t2.pointToProjected(e2) : t2.pointToData(e2);
  }
  function CC(t2, e2, n2, i2) {
    var r2 = t2.getZoom(), o2 = t2.getCenter(), a2 = e2.zoom, s2 = t2.projectedToPoint ? t2.projectedToPoint(o2) : t2.dataToPoint(o2);
    if (null != e2.dx && null != e2.dy && (s2[0] -= e2.dx, s2[1] -= e2.dy, t2.setCenter(TC(t2, s2), i2)), null != a2) {
      if (n2) {
        var l2 = n2.min || 0, u2 = n2.max || 1 / 0;
        a2 = Math.max(Math.min(r2 * a2, u2), l2) / r2;
      }
      t2.scaleX *= a2, t2.scaleY *= a2;
      var h2 = (e2.originX - t2.x) * (a2 - 1), c2 = (e2.originY - t2.y) * (a2 - 1);
      t2.x -= h2, t2.y -= c2, t2.updateTransform(), t2.setCenter(TC(t2, s2), i2), t2.setZoom(a2 * r2);
    }
    return { center: t2.getCenter(), zoom: t2.getZoom() };
  }
  var DC = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.focusBlurEnabled = true, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this._api = e2;
    }, n2.prototype.render = function(t3, e2, n3, i2) {
      if (this._model = t3, !t3.get("show"))
        return this._mapDraw && this._mapDraw.remove(), void (this._mapDraw = null);
      this._mapDraw || (this._mapDraw = new rC(n3));
      var r2 = this._mapDraw;
      r2.draw(t3, e2, n3, this, i2), r2.group.on("click", this._handleRegionClick, this), r2.group.silent = t3.get("silent"), this.group.add(r2.group), this.updateSelectStatus(t3, e2, n3);
    }, n2.prototype._handleRegionClick = function(t3) {
      var e2;
      Ay(t3.target, function(t4) {
        return null != (e2 = Js(t4).eventData);
      }, true), e2 && this._api.dispatchAction({ type: "geoToggleSelect", geoId: this._model.id, name: e2.name });
    }, n2.prototype.updateSelectStatus = function(t3, e2, n3) {
      var i2 = this;
      this._mapDraw.group.traverse(function(t4) {
        var e3 = Js(t4).eventData;
        if (e3)
          return i2._model.isSelected(e3.name) ? n3.enterSelect(t4) : n3.leaveSelect(t4), true;
      });
    }, n2.prototype.findHighDownDispatchers = function(t3) {
      return this._mapDraw && this._mapDraw.findHighDownDispatchers(t3, this._model);
    }, n2.prototype.dispose = function() {
      this._mapDraw && this._mapDraw.remove();
    }, n2.type = "geo", n2;
  }(Ig);
  function AC(t2, e2, n2) {
    ZT(t2, e2, n2);
  }
  function kC(t2) {
    function e2(e3, n2) {
      n2.update = "geo:updateSelectStatus", t2.registerAction(n2, function(t3, n3) {
        var i2 = {}, r2 = [];
        return n3.eachComponent({ mainType: "geo", query: t3 }, function(n4) {
          n4[e3](t3.name), N(n4.coordinateSystem.regions, function(t4) {
            i2[t4.name] = n4.isSelected(t4.name) || false;
          });
          var o2 = [];
          N(i2, function(t4, e4) {
            i2[e4] && o2.push(e4);
          }), r2.push({ geoIndex: n4.componentIndex, name: o2 });
        }), { selected: i2, allSelected: r2, name: t3.name };
      });
    }
    t2.registerCoordinateSystem("geo", MC), t2.registerComponentModel(IC), t2.registerComponentView(DC), t2.registerImpl("registerMap", AC), t2.registerImpl("getMap", function(t3) {
      return qT(t3);
    }), e2("toggleSelected", { type: "geoToggleSelect", event: "geoselectchanged" }), e2("select", { type: "geoSelect", event: "geoselected" }), e2("unSelect", { type: "geoUnSelect", event: "geounselected" }), t2.registerAction({ type: "geoRoam", event: "geoRoam", update: "updateTransform" }, function(t3, e3, n2) {
      var i2 = t3.componentType || "series";
      e3.eachComponent({ mainType: i2, query: t3 }, function(e4) {
        var r2 = e4.coordinateSystem;
        if ("geo" === r2.type) {
          var o2 = CC(r2, t3, e4.get("scaleLimit"), n2);
          e4.setCenter && e4.setCenter(o2.center), e4.setZoom && e4.setZoom(o2.zoom), "series" === i2 && N(e4.seriesGroup, function(t4) {
            t4.setCenter(o2.center), t4.setZoom(o2.zoom);
          });
        }
      });
    });
  }
  function LC(t2, e2) {
    var n2 = t2.isExpand ? t2.children : [], i2 = t2.parentNode.children, r2 = t2.hierNode.i ? i2[t2.hierNode.i - 1] : null;
    if (n2.length) {
      !function(t3) {
        var e3 = t3.children, n3 = e3.length, i3 = 0, r3 = 0;
        for (; --n3 >= 0; ) {
          var o3 = e3[n3];
          o3.hierNode.prelim += i3, o3.hierNode.modifier += i3, r3 += o3.hierNode.change, i3 += o3.hierNode.shift + r3;
        }
      }(t2);
      var o2 = (n2[0].hierNode.prelim + n2[n2.length - 1].hierNode.prelim) / 2;
      r2 ? (t2.hierNode.prelim = r2.hierNode.prelim + e2(t2, r2), t2.hierNode.modifier = t2.hierNode.prelim - o2) : t2.hierNode.prelim = o2;
    } else
      r2 && (t2.hierNode.prelim = r2.hierNode.prelim + e2(t2, r2));
    t2.parentNode.hierNode.defaultAncestor = function(t3, e3, n3, i3) {
      if (e3) {
        for (var r3 = t3, o3 = t3, a2 = o3.parentNode.children[0], s2 = e3, l2 = r3.hierNode.modifier, u2 = o3.hierNode.modifier, h2 = a2.hierNode.modifier, c2 = s2.hierNode.modifier; s2 = NC(s2), o3 = EC(o3), s2 && o3; ) {
          r3 = NC(r3), a2 = EC(a2), r3.hierNode.ancestor = t3;
          var p2 = s2.hierNode.prelim + c2 - o3.hierNode.prelim - u2 + i3(s2, o3);
          p2 > 0 && (VC(zC(s2, t3, n3), t3, p2), u2 += p2, l2 += p2), c2 += s2.hierNode.modifier, u2 += o3.hierNode.modifier, l2 += r3.hierNode.modifier, h2 += a2.hierNode.modifier;
        }
        s2 && !NC(r3) && (r3.hierNode.thread = s2, r3.hierNode.modifier += c2 - l2), o3 && !EC(a2) && (a2.hierNode.thread = o3, a2.hierNode.modifier += u2 - h2, n3 = t3);
      }
      return n3;
    }(t2, r2, t2.parentNode.hierNode.defaultAncestor || i2[0], e2);
  }
  function PC(t2) {
    var e2 = t2.hierNode.prelim + t2.parentNode.hierNode.modifier;
    t2.setLayout({ x: e2 }, true), t2.hierNode.modifier += t2.parentNode.hierNode.modifier;
  }
  function OC(t2) {
    return arguments.length ? t2 : BC;
  }
  function RC(t2, e2) {
    return t2 -= Math.PI / 2, { x: e2 * Math.cos(t2), y: e2 * Math.sin(t2) };
  }
  function NC(t2) {
    var e2 = t2.children;
    return e2.length && t2.isExpand ? e2[e2.length - 1] : t2.hierNode.thread;
  }
  function EC(t2) {
    var e2 = t2.children;
    return e2.length && t2.isExpand ? e2[0] : t2.hierNode.thread;
  }
  function zC(t2, e2, n2) {
    return t2.hierNode.ancestor.parentNode === e2.parentNode ? t2.hierNode.ancestor : n2;
  }
  function VC(t2, e2, n2) {
    var i2 = n2 / (e2.hierNode.i - t2.hierNode.i);
    e2.hierNode.change -= i2, e2.hierNode.shift += n2, e2.hierNode.modifier += n2, e2.hierNode.prelim += n2, t2.hierNode.change += i2;
  }
  function BC(t2, e2) {
    return t2.parentNode === e2.parentNode ? 1 : 2;
  }
  var FC = function() {
    this.parentPoint = [], this.childPoints = [];
  };
  var GC = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new FC();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.childPoints, i2 = n3.length, r2 = e2.parentPoint, o2 = n3[0], a2 = n3[i2 - 1];
      if (1 === i2)
        return t3.moveTo(r2[0], r2[1]), void t3.lineTo(o2[0], o2[1]);
      var s2 = e2.orient, l2 = "TB" === s2 || "BT" === s2 ? 0 : 1, u2 = 1 - l2, h2 = Xr(e2.forkPosition, 1), c2 = [];
      c2[l2] = r2[l2], c2[u2] = r2[u2] + (a2[u2] - r2[u2]) * h2, t3.moveTo(r2[0], r2[1]), t3.lineTo(c2[0], c2[1]), t3.moveTo(o2[0], o2[1]), c2[l2] = o2[l2], t3.lineTo(c2[0], c2[1]), c2[l2] = a2[l2], t3.lineTo(c2[0], c2[1]), t3.lineTo(a2[0], a2[1]);
      for (var p2 = 1; p2 < i2 - 1; p2++) {
        var d2 = n3[p2];
        t3.moveTo(d2[0], d2[1]), c2[l2] = d2[l2], t3.lineTo(c2[0], c2[1]);
      }
    }, n2;
  }(Ms);
  var WC = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._mainGroup = new Er(), e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this._controller = new oT(e2.getZr()), this._controllerHost = { target: this.group }, this.group.add(this._mainGroup);
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = t3.layoutInfo, o2 = this._mainGroup;
      "radial" === t3.get("layout") ? (o2.x = r2.x + r2.width / 2, o2.y = r2.y + r2.height / 2) : (o2.x = r2.x, o2.y = r2.y), this._updateViewCoordSys(t3, n3), this._updateController(t3, e2, n3);
      var a2 = this._data;
      i2.diff(a2).add(function(e3) {
        HC(i2, e3) && YC(i2, e3, null, o2, t3);
      }).update(function(e3, n4) {
        var r3 = a2.getItemGraphicEl(n4);
        HC(i2, e3) ? YC(i2, e3, r3, o2, t3) : r3 && ZC(a2, n4, r3, o2, t3);
      }).remove(function(e3) {
        var n4 = a2.getItemGraphicEl(e3);
        n4 && ZC(a2, e3, n4, o2, t3);
      }).execute(), this._nodeScaleRatio = t3.get("nodeScaleRatio"), this._updateNodeAndLinkScale(t3), true === t3.get("expandAndCollapse") && i2.eachItemGraphicEl(function(e3, i3) {
        e3.off("click").on("click", function() {
          n3.dispatchAction({ type: "treeExpandAndCollapse", seriesId: t3.id, dataIndex: i3 });
        });
      }), this._data = i2;
    }, n2.prototype._updateViewCoordSys = function(t3, e2) {
      var n3 = t3.getData(), i2 = [];
      n3.each(function(t4) {
        var e3 = n3.getItemLayout(t4);
        !e3 || isNaN(e3.x) || isNaN(e3.y) || i2.push([+e3.x, +e3.y]);
      });
      var r2 = [], o2 = [];
      Oa(i2, r2, o2);
      var a2 = this._min, s2 = this._max;
      o2[0] - r2[0] == 0 && (r2[0] = a2 ? a2[0] : r2[0] - 1, o2[0] = s2 ? s2[0] : o2[0] + 1), o2[1] - r2[1] == 0 && (r2[1] = a2 ? a2[1] : r2[1] - 1, o2[1] = s2 ? s2[1] : o2[1] + 1);
      var l2 = t3.coordinateSystem = new yC();
      l2.zoomLimit = t3.get("scaleLimit"), l2.setBoundingRect(r2[0], r2[1], o2[0] - r2[0], o2[1] - r2[1]), l2.setCenter(t3.get("center"), e2), l2.setZoom(t3.get("zoom")), this.group.attr({ x: l2.x, y: l2.y, scaleX: l2.scaleX, scaleY: l2.scaleY }), this._min = r2, this._max = o2;
    }, n2.prototype._updateController = function(t3, e2, n3) {
      var i2 = this, r2 = this._controller, o2 = this._controllerHost, a2 = this.group;
      r2.setPointerChecker(function(e3, i3, r3) {
        var o3 = a2.getBoundingRect();
        return o3.applyTransform(a2.transform), o3.contain(i3, r3) && !dT(e3, n3, t3);
      }), r2.enable(t3.get("roam")), o2.zoomLimit = t3.get("scaleLimit"), o2.zoom = t3.coordinateSystem.getZoom(), r2.off("pan").off("zoom").on("pan", function(e3) {
        uT(o2, e3.dx, e3.dy), n3.dispatchAction({ seriesId: t3.id, type: "treeRoam", dx: e3.dx, dy: e3.dy });
      }).on("zoom", function(e3) {
        hT(o2, e3.scale, e3.originX, e3.originY), n3.dispatchAction({ seriesId: t3.id, type: "treeRoam", zoom: e3.scale, originX: e3.originX, originY: e3.originY }), i2._updateNodeAndLinkScale(t3), n3.updateLabelLayout();
      });
    }, n2.prototype._updateNodeAndLinkScale = function(t3) {
      var e2 = t3.getData(), n3 = this._getNodeGlobalScale(t3);
      e2.eachItemGraphicEl(function(t4, e3) {
        t4.setSymbolScale(n3);
      });
    }, n2.prototype._getNodeGlobalScale = function(t3) {
      var e2 = t3.coordinateSystem;
      if ("view" !== e2.type)
        return 1;
      var n3 = this._nodeScaleRatio, i2 = e2.scaleX || 1;
      return ((e2.getZoom() - 1) * n3 + 1) / i2;
    }, n2.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, n2.prototype.remove = function() {
      this._mainGroup.removeAll(), this._data = null;
    }, n2.type = "tree", n2;
  }(Ag);
  function HC(t2, e2) {
    var n2 = t2.getItemLayout(e2);
    return n2 && !isNaN(n2.x) && !isNaN(n2.y);
  }
  function YC(t2, e2, n2, i2, r2) {
    var o2 = !n2, a2 = t2.tree.getNodeByDataIndex(e2), s2 = a2.getModel(), l2 = a2.getVisual("style").fill, u2 = false === a2.isExpand && 0 !== a2.children.length ? l2 : "#fff", h2 = t2.tree.root, c2 = a2.parentNode === h2 ? a2 : a2.parentNode || a2, p2 = t2.getItemGraphicEl(c2.dataIndex), d2 = c2.getLayout(), f2 = p2 ? { x: p2.__oldX, y: p2.__oldY, rawX: p2.__radialOldRawX, rawY: p2.__radialOldRawY } : d2, g2 = a2.getLayout();
    o2 ? ((n2 = new mS(t2, e2, null, { symbolInnerColor: u2, useNameLabel: true })).x = f2.x, n2.y = f2.y) : n2.updateData(t2, e2, null, { symbolInnerColor: u2, useNameLabel: true }), n2.__radialOldRawX = n2.__radialRawX, n2.__radialOldRawY = n2.__radialRawY, n2.__radialRawX = g2.rawX, n2.__radialRawY = g2.rawY, i2.add(n2), t2.setItemGraphicEl(e2, n2), n2.__oldX = n2.x, n2.__oldY = n2.y, dh(n2, { x: g2.x, y: g2.y }, r2);
    var y2 = n2.getSymbolPath();
    if ("radial" === r2.get("layout")) {
      var v2 = h2.children[0], m2 = v2.getLayout(), x2 = v2.children.length, _2 = void 0, b2 = void 0;
      if (g2.x === m2.x && true === a2.isExpand && v2.children.length) {
        var w2 = { x: (v2.children[0].getLayout().x + v2.children[x2 - 1].getLayout().x) / 2, y: (v2.children[0].getLayout().y + v2.children[x2 - 1].getLayout().y) / 2 };
        (_2 = Math.atan2(w2.y - m2.y, w2.x - m2.x)) < 0 && (_2 = 2 * Math.PI + _2), (b2 = w2.x < m2.x) && (_2 -= Math.PI);
      } else
        (_2 = Math.atan2(g2.y - m2.y, g2.x - m2.x)) < 0 && (_2 = 2 * Math.PI + _2), 0 === a2.children.length || 0 !== a2.children.length && false === a2.isExpand ? (b2 = g2.x < m2.x) && (_2 -= Math.PI) : (b2 = g2.x > m2.x) || (_2 -= Math.PI);
      var S2 = b2 ? "left" : "right", M2 = s2.getModel("label"), I2 = M2.get("rotate"), T2 = I2 * (Math.PI / 180), C2 = y2.getTextContent();
      C2 && (y2.setTextConfig({ position: M2.get("position") || S2, rotation: null == I2 ? -_2 : T2, origin: "center" }), C2.setStyle("verticalAlign", "middle"));
    }
    var D2 = s2.get(["emphasis", "focus"]), k2 = "relative" === D2 ? yt(a2.getAncestorsIndices(), a2.getDescendantIndices()) : "ancestor" === D2 ? a2.getAncestorsIndices() : "descendant" === D2 ? a2.getDescendantIndices() : null;
    k2 && (Js(n2).focus = k2), function(t3, e3, n3, i3, r3, o3, a3, s3) {
      var l3 = e3.getModel(), u3 = t3.get("edgeShape"), h3 = t3.get("layout"), c3 = t3.getOrient(), p3 = t3.get(["lineStyle", "curveness"]), d3 = t3.get("edgeForkPosition"), f3 = l3.getModel("lineStyle").getLineStyle(), g3 = i3.__edge;
      if ("curve" === u3)
        e3.parentNode && e3.parentNode !== n3 && (g3 || (g3 = i3.__edge = new Ku({ shape: jC(h3, c3, p3, r3, r3) })), dh(g3, { shape: jC(h3, c3, p3, o3, a3) }, t3));
      else if ("polyline" === u3)
        if ("orthogonal" === h3) {
          if (e3 !== n3 && e3.children && 0 !== e3.children.length && true === e3.isExpand) {
            for (var y3 = e3.children, v3 = [], m3 = 0; m3 < y3.length; m3++) {
              var x3 = y3[m3].getLayout();
              v3.push([x3.x, x3.y]);
            }
            g3 || (g3 = i3.__edge = new GC({ shape: { parentPoint: [a3.x, a3.y], childPoints: [[a3.x, a3.y]], orient: c3, forkPosition: d3 } })), dh(g3, { shape: { parentPoint: [a3.x, a3.y], childPoints: v3 } }, t3);
          }
        } else
          ;
      g3 && ("polyline" !== u3 || e3.isExpand) && (g3.useStyle(A({ strokeNoScale: true, fill: null }, f3)), Zl(g3, l3, "lineStyle"), Tl(g3), s3.add(g3));
    }(r2, a2, h2, n2, f2, d2, g2, i2), n2.__edge && (n2.onHoverStateChange = function(e3) {
      if ("blur" !== e3) {
        var i3 = a2.parentNode && t2.getItemGraphicEl(a2.parentNode.dataIndex);
        i3 && 1 === i3.hoverState || Ml(n2.__edge, e3);
      }
    });
  }
  function XC(t2, e2, n2, i2, r2) {
    var o2 = UC(e2.tree.root, t2), a2 = o2.source, s2 = o2.sourceLayout, l2 = e2.getItemGraphicEl(t2.dataIndex);
    if (l2) {
      var u2 = e2.getItemGraphicEl(a2.dataIndex).__edge, h2 = l2.__edge || (false === a2.isExpand || 1 === a2.children.length ? u2 : void 0), c2 = i2.get("edgeShape"), p2 = i2.get("layout"), d2 = i2.get("orient"), f2 = i2.get(["lineStyle", "curveness"]);
      h2 && ("curve" === c2 ? yh(h2, { shape: jC(p2, d2, f2, s2, s2), style: { opacity: 0 } }, i2, { cb: function() {
        n2.remove(h2);
      }, removeOpt: r2 }) : "polyline" === c2 && "orthogonal" === i2.get("layout") && yh(h2, { shape: { parentPoint: [s2.x, s2.y], childPoints: [[s2.x, s2.y]] }, style: { opacity: 0 } }, i2, { cb: function() {
        n2.remove(h2);
      }, removeOpt: r2 }));
    }
  }
  function UC(t2, e2) {
    for (var n2, i2 = e2.parentNode === t2 ? e2 : e2.parentNode || e2; null == (n2 = i2.getLayout()); )
      i2 = i2.parentNode === t2 ? i2 : i2.parentNode || i2;
    return { source: i2, sourceLayout: n2 };
  }
  function ZC(t2, e2, n2, i2, r2) {
    var o2 = t2.tree.getNodeByDataIndex(e2), a2 = UC(t2.tree.root, o2).sourceLayout, s2 = { duration: r2.get("animationDurationUpdate"), easing: r2.get("animationEasingUpdate") };
    yh(n2, { x: a2.x + 1, y: a2.y + 1 }, r2, { cb: function() {
      i2.remove(n2), t2.setItemGraphicEl(e2, null);
    }, removeOpt: s2 }), n2.fadeOut(null, t2.hostModel, { fadeLabel: true, animation: s2 }), o2.children.forEach(function(e3) {
      XC(e3, t2, i2, r2, s2);
    }), XC(o2, t2, i2, r2, s2);
  }
  function jC(t2, e2, n2, i2, r2) {
    var o2, a2, s2, l2, u2, h2, c2, p2;
    if ("radial" === t2) {
      u2 = i2.rawX, c2 = i2.rawY, h2 = r2.rawX, p2 = r2.rawY;
      var d2 = RC(u2, c2), f2 = RC(u2, c2 + (p2 - c2) * n2), g2 = RC(h2, p2 + (c2 - p2) * n2), y2 = RC(h2, p2);
      return { x1: d2.x || 0, y1: d2.y || 0, x2: y2.x || 0, y2: y2.y || 0, cpx1: f2.x || 0, cpy1: f2.y || 0, cpx2: g2.x || 0, cpy2: g2.y || 0 };
    }
    return u2 = i2.x, c2 = i2.y, h2 = r2.x, p2 = r2.y, "LR" !== e2 && "RL" !== e2 || (o2 = u2 + (h2 - u2) * n2, a2 = c2, s2 = h2 + (u2 - h2) * n2, l2 = p2), "TB" !== e2 && "BT" !== e2 || (o2 = u2, a2 = c2 + (p2 - c2) * n2, s2 = h2, l2 = p2 + (c2 - p2) * n2), { x1: u2, y1: c2, x2: h2, y2: p2, cpx1: o2, cpy1: a2, cpx2: s2, cpy2: l2 };
  }
  var qC = Po();
  function KC(t2) {
    var e2 = t2.mainData, n2 = t2.datas;
    n2 || (n2 = { main: e2 }, t2.datasAttr = { main: "data" }), t2.datas = t2.mainData = null, nD(e2, n2, t2), N(n2, function(n3) {
      N(e2.TRANSFERABLE_METHODS, function(e3) {
        n3.wrapMethod(e3, W($C, t2));
      });
    }), e2.wrapMethod("cloneShallow", W(QC, t2)), N(e2.CHANGABLE_METHODS, function(n3) {
      e2.wrapMethod(n3, W(JC, t2));
    }), st(n2[e2.dataType] === e2);
  }
  function $C(t2, e2) {
    if (qC(i2 = this).mainData === i2) {
      var n2 = D({}, qC(this).datas);
      n2[this.dataType] = e2, nD(e2, n2, t2);
    } else
      iD(e2, this.dataType, qC(this).mainData, t2);
    var i2;
    return e2;
  }
  function JC(t2, e2) {
    return t2.struct && t2.struct.update(), e2;
  }
  function QC(t2, e2) {
    return N(qC(e2).datas, function(n2, i2) {
      n2 !== e2 && iD(n2.cloneShallow(), i2, e2, t2);
    }), e2;
  }
  function tD(t2) {
    var e2 = qC(this).mainData;
    return null == t2 || null == e2 ? e2 : qC(e2).datas[t2];
  }
  function eD() {
    var t2 = qC(this).mainData;
    return null == t2 ? [{ data: t2 }] : E(F(qC(t2).datas), function(e2) {
      return { type: e2, data: qC(t2).datas[e2] };
    });
  }
  function nD(t2, e2, n2) {
    qC(t2).datas = {}, N(e2, function(e3, i2) {
      iD(e3, i2, t2, n2);
    });
  }
  function iD(t2, e2, n2, i2) {
    qC(n2).datas[e2] = t2, qC(t2).mainData = n2, t2.dataType = e2, i2.struct && (t2[i2.structAttr] = i2.struct, i2.struct[i2.datasAttr[e2]] = t2), t2.getLinkedData = tD, t2.getLinkedDataAll = eD;
  }
  var rD = function() {
    function t2(t3, e2) {
      this.depth = 0, this.height = 0, this.dataIndex = -1, this.children = [], this.viewChildren = [], this.isExpand = false, this.name = t3 || "", this.hostTree = e2;
    }
    return t2.prototype.isRemoved = function() {
      return this.dataIndex < 0;
    }, t2.prototype.eachNode = function(t3, e2, n2) {
      Y(t3) && (n2 = e2, e2 = t3, t3 = null), X(t3 = t3 || {}) && (t3 = { order: t3 });
      var i2, r2 = t3.order || "preorder", o2 = this[t3.attr || "children"];
      "preorder" === r2 && (i2 = e2.call(n2, this));
      for (var a2 = 0; !i2 && a2 < o2.length; a2++)
        o2[a2].eachNode(t3, e2, n2);
      "postorder" === r2 && e2.call(n2, this);
    }, t2.prototype.updateDepthAndHeight = function(t3) {
      var e2 = 0;
      this.depth = t3;
      for (var n2 = 0; n2 < this.children.length; n2++) {
        var i2 = this.children[n2];
        i2.updateDepthAndHeight(t3 + 1), i2.height > e2 && (e2 = i2.height);
      }
      this.height = e2 + 1;
    }, t2.prototype.getNodeById = function(t3) {
      if (this.getId() === t3)
        return this;
      for (var e2 = 0, n2 = this.children, i2 = n2.length; e2 < i2; e2++) {
        var r2 = n2[e2].getNodeById(t3);
        if (r2)
          return r2;
      }
    }, t2.prototype.contains = function(t3) {
      if (t3 === this)
        return true;
      for (var e2 = 0, n2 = this.children, i2 = n2.length; e2 < i2; e2++) {
        var r2 = n2[e2].contains(t3);
        if (r2)
          return r2;
      }
    }, t2.prototype.getAncestors = function(t3) {
      for (var e2 = [], n2 = t3 ? this : this.parentNode; n2; )
        e2.push(n2), n2 = n2.parentNode;
      return e2.reverse(), e2;
    }, t2.prototype.getAncestorsIndices = function() {
      for (var t3 = [], e2 = this; e2; )
        t3.push(e2.dataIndex), e2 = e2.parentNode;
      return t3.reverse(), t3;
    }, t2.prototype.getDescendantIndices = function() {
      var t3 = [];
      return this.eachNode(function(e2) {
        t3.push(e2.dataIndex);
      }), t3;
    }, t2.prototype.getValue = function(t3) {
      var e2 = this.hostTree.data;
      return e2.getStore().get(e2.getDimensionIndex(t3 || "value"), this.dataIndex);
    }, t2.prototype.setLayout = function(t3, e2) {
      this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, t3, e2);
    }, t2.prototype.getLayout = function() {
      return this.hostTree.data.getItemLayout(this.dataIndex);
    }, t2.prototype.getModel = function(t3) {
      if (!(this.dataIndex < 0))
        return this.hostTree.data.getItemModel(this.dataIndex).getModel(t3);
    }, t2.prototype.getLevelModel = function() {
      return (this.hostTree.levelModels || [])[this.depth];
    }, t2.prototype.setVisual = function(t3, e2) {
      this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, t3, e2);
    }, t2.prototype.getVisual = function(t3) {
      return this.hostTree.data.getItemVisual(this.dataIndex, t3);
    }, t2.prototype.getRawIndex = function() {
      return this.hostTree.data.getRawIndex(this.dataIndex);
    }, t2.prototype.getId = function() {
      return this.hostTree.data.getId(this.dataIndex);
    }, t2.prototype.getChildIndex = function() {
      if (this.parentNode) {
        for (var t3 = this.parentNode.children, e2 = 0; e2 < t3.length; ++e2)
          if (t3[e2] === this)
            return e2;
        return -1;
      }
      return -1;
    }, t2.prototype.isAncestorOf = function(t3) {
      for (var e2 = t3.parentNode; e2; ) {
        if (e2 === this)
          return true;
        e2 = e2.parentNode;
      }
      return false;
    }, t2.prototype.isDescendantOf = function(t3) {
      return t3 !== this && t3.isAncestorOf(this);
    }, t2;
  }();
  var oD = function() {
    function t2(t3) {
      this.type = "tree", this._nodes = [], this.hostModel = t3;
    }
    return t2.prototype.eachNode = function(t3, e2, n2) {
      this.root.eachNode(t3, e2, n2);
    }, t2.prototype.getNodeByDataIndex = function(t3) {
      var e2 = this.data.getRawIndex(t3);
      return this._nodes[e2];
    }, t2.prototype.getNodeById = function(t3) {
      return this.root.getNodeById(t3);
    }, t2.prototype.update = function() {
      for (var t3 = this.data, e2 = this._nodes, n2 = 0, i2 = e2.length; n2 < i2; n2++)
        e2[n2].dataIndex = -1;
      for (n2 = 0, i2 = t3.count(); n2 < i2; n2++)
        e2[t3.getRawIndex(n2)].dataIndex = n2;
    }, t2.prototype.clearLayouts = function() {
      this.data.clearItemLayouts();
    }, t2.createTree = function(e2, n2, i2) {
      var r2 = new t2(n2), o2 = [], a2 = 1;
      !function t3(e3, n3) {
        var i3 = e3.value;
        a2 = Math.max(a2, H(i3) ? i3.length : 1), o2.push(e3);
        var s3 = new rD(Do(e3.name, ""), r2);
        n3 ? function(t4, e4) {
          var n4 = e4.children;
          if (t4.parentNode === e4)
            return;
          n4.push(t4), t4.parentNode = e4;
        }(s3, n3) : r2.root = s3, r2._nodes.push(s3);
        var l3 = e3.children;
        if (l3)
          for (var u2 = 0; u2 < l3.length; u2++)
            t3(l3[u2], s3);
      }(e2), r2.root.updateDepthAndHeight(0);
      var s2 = mx(o2, { coordDimensions: ["value"], dimensionsCount: a2 }).dimensions, l2 = new vx(s2, n2);
      return l2.initData(o2), i2 && i2(l2), KC({ mainData: l2, struct: r2, structAttr: "tree" }), r2.update(), r2;
    }, t2;
  }();
  function aD(t2, e2, n2) {
    if (t2 && L(e2, t2.type) >= 0) {
      var i2 = n2.getData().tree.root, r2 = t2.targetNode;
      if (X(r2) && (r2 = i2.getNodeById(r2)), r2 && i2.contains(r2))
        return { node: r2 };
      var o2 = t2.targetNodeId;
      if (null != o2 && (r2 = i2.getNodeById(o2)))
        return { node: r2 };
    }
  }
  function sD(t2) {
    for (var e2 = []; t2; )
      (t2 = t2.parentNode) && e2.push(t2);
    return e2.reverse();
  }
  function lD(t2, e2) {
    return L(sD(t2), e2) >= 0;
  }
  function uD(t2, e2) {
    for (var n2 = []; t2; ) {
      var i2 = t2.dataIndex;
      n2.push({ name: t2.name, dataIndex: i2, value: e2.getRawValue(i2) }), t2 = t2.parentNode;
    }
    return n2.reverse(), n2;
  }
  var hD = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.hasSymbolVisual = true, e2.ignoreStyleOnData = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3) {
      var e2 = { name: t3.name, children: t3.data }, n3 = t3.leaves || {}, i2 = new Sc(n3, this, this.ecModel), r2 = oD.createTree(e2, this, function(t4) {
        t4.wrapMethod("getItemModel", function(t5, e3) {
          var n4 = r2.getNodeByDataIndex(e3);
          return n4 && n4.children.length && n4.isExpand || (t5.parentModel = i2), t5;
        });
      });
      var o2 = 0;
      r2.eachNode("preorder", function(t4) {
        t4.depth > o2 && (o2 = t4.depth);
      });
      var a2 = t3.expandAndCollapse && t3.initialTreeDepth >= 0 ? t3.initialTreeDepth : o2;
      return r2.root.eachNode("preorder", function(t4) {
        var e3 = t4.hostTree.data.getRawDataItem(t4.dataIndex);
        t4.isExpand = e3 && null != e3.collapsed ? !e3.collapsed : t4.depth <= a2;
      }), r2.data;
    }, n2.prototype.getOrient = function() {
      var t3 = this.get("orient");
      return "horizontal" === t3 ? t3 = "LR" : "vertical" === t3 && (t3 = "TB"), t3;
    }, n2.prototype.setZoom = function(t3) {
      this.option.zoom = t3;
    }, n2.prototype.setCenter = function(t3) {
      this.option.center = t3;
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      for (var i2 = this.getData().tree, r2 = i2.root.children[0], o2 = i2.getNodeByDataIndex(t3), a2 = o2.getValue(), s2 = o2.name; o2 && o2 !== r2; )
        s2 = o2.parentNode.name + "." + s2, o2 = o2.parentNode;
      return eg("nameValue", { name: s2, value: a2, noValue: isNaN(a2) || null == a2 });
    }, n2.prototype.getDataParams = function(e2) {
      var n3 = t2.prototype.getDataParams.apply(this, arguments), i2 = this.getData().tree.getNodeByDataIndex(e2);
      return n3.treeAncestors = uD(i2, this), n3.collapsed = !i2.isExpand, n3;
    }, n2.type = "series.tree", n2.layoutMode = "box", n2.defaultOption = { z: 2, coordinateSystem: "view", left: "12%", top: "12%", right: "12%", bottom: "12%", layout: "orthogonal", edgeShape: "curve", edgeForkPosition: "50%", roam: false, nodeScaleRatio: 0.4, center: null, zoom: 1, orient: "LR", symbol: "emptyCircle", symbolSize: 7, expandAndCollapse: true, initialTreeDepth: 2, lineStyle: { color: "#ccc", width: 1.5, curveness: 0.5 }, itemStyle: { color: "lightsteelblue", borderWidth: 1.5 }, label: { show: true }, animationEasing: "linear", animationDuration: 700, animationDurationUpdate: 500 }, n2;
  }(vg);
  function cD(t2, e2) {
    for (var n2, i2 = [t2]; n2 = i2.pop(); )
      if (e2(n2), n2.isExpand) {
        var r2 = n2.children;
        if (r2.length)
          for (var o2 = r2.length - 1; o2 >= 0; o2--)
            i2.push(r2[o2]);
      }
  }
  function pD(t2, e2) {
    t2.eachSeriesByType("tree", function(t3) {
      !function(t4, e3) {
        var n2 = function(t5, e4) {
          return Tp(t5.getBoxLayoutParams(), { width: e4.getWidth(), height: e4.getHeight() });
        }(t4, e3);
        t4.layoutInfo = n2;
        var i2 = t4.get("layout"), r2 = 0, o2 = 0, a2 = null;
        "radial" === i2 ? (r2 = 2 * Math.PI, o2 = Math.min(n2.height, n2.width) / 2, a2 = OC(function(t5, e4) {
          return (t5.parentNode === e4.parentNode ? 1 : 2) / t5.depth;
        })) : (r2 = n2.width, o2 = n2.height, a2 = OC());
        var s2 = t4.getData().tree.root, l2 = s2.children[0];
        if (l2) {
          !function(t5) {
            var e4 = t5;
            e4.hierNode = { defaultAncestor: null, ancestor: e4, prelim: 0, modifier: 0, change: 0, shift: 0, i: 0, thread: null };
            for (var n3, i3, r3 = [e4]; n3 = r3.pop(); )
              if (i3 = n3.children, n3.isExpand && i3.length)
                for (var o3 = i3.length - 1; o3 >= 0; o3--) {
                  var a3 = i3[o3];
                  a3.hierNode = { defaultAncestor: null, ancestor: a3, prelim: 0, modifier: 0, change: 0, shift: 0, i: o3, thread: null }, r3.push(a3);
                }
          }(s2), function(t5, e4, n3) {
            for (var i3, r3 = [t5], o3 = []; i3 = r3.pop(); )
              if (o3.push(i3), i3.isExpand) {
                var a3 = i3.children;
                if (a3.length)
                  for (var s3 = 0; s3 < a3.length; s3++)
                    r3.push(a3[s3]);
              }
            for (; i3 = o3.pop(); )
              e4(i3, n3);
          }(l2, LC, a2), s2.hierNode.modifier = -l2.hierNode.prelim, cD(l2, PC);
          var u2 = l2, h2 = l2, c2 = l2;
          cD(l2, function(t5) {
            var e4 = t5.getLayout().x;
            e4 < u2.getLayout().x && (u2 = t5), e4 > h2.getLayout().x && (h2 = t5), t5.depth > c2.depth && (c2 = t5);
          });
          var p2 = u2 === h2 ? 1 : a2(u2, h2) / 2, d2 = p2 - u2.getLayout().x, f2 = 0, g2 = 0, y2 = 0, v2 = 0;
          if ("radial" === i2)
            f2 = r2 / (h2.getLayout().x + p2 + d2), g2 = o2 / (c2.depth - 1 || 1), cD(l2, function(t5) {
              y2 = (t5.getLayout().x + d2) * f2, v2 = (t5.depth - 1) * g2;
              var e4 = RC(y2, v2);
              t5.setLayout({ x: e4.x, y: e4.y, rawX: y2, rawY: v2 }, true);
            });
          else {
            var m2 = t4.getOrient();
            "RL" === m2 || "LR" === m2 ? (g2 = o2 / (h2.getLayout().x + p2 + d2), f2 = r2 / (c2.depth - 1 || 1), cD(l2, function(t5) {
              v2 = (t5.getLayout().x + d2) * g2, y2 = "LR" === m2 ? (t5.depth - 1) * f2 : r2 - (t5.depth - 1) * f2, t5.setLayout({ x: y2, y: v2 }, true);
            })) : "TB" !== m2 && "BT" !== m2 || (f2 = r2 / (h2.getLayout().x + p2 + d2), g2 = o2 / (c2.depth - 1 || 1), cD(l2, function(t5) {
              y2 = (t5.getLayout().x + d2) * f2, v2 = "TB" === m2 ? (t5.depth - 1) * g2 : o2 - (t5.depth - 1) * g2, t5.setLayout({ x: y2, y: v2 }, true);
            }));
          }
        }
      }(t3, e2);
    });
  }
  function dD(t2) {
    t2.eachSeriesByType("tree", function(t3) {
      var e2 = t3.getData();
      e2.tree.eachNode(function(t4) {
        var n2 = t4.getModel().getModel("itemStyle").getItemStyle();
        D(e2.ensureUniqueItemVisual(t4.dataIndex, "style"), n2);
      });
    });
  }
  var fD = ["treemapZoomToNode", "treemapRender", "treemapMove"];
  function gD(t2) {
    var e2 = t2.getData().tree, n2 = {};
    e2.eachNode(function(e3) {
      for (var i2 = e3; i2 && i2.depth > 1; )
        i2 = i2.parentNode;
      var r2 = ld(t2.ecModel, i2.name || i2.dataIndex + "", n2);
      e3.setVisual("decal", r2);
    });
  }
  var yD = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.preventUsingHoverLayer = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      var n3 = { name: t3.name, children: t3.data };
      vD(n3);
      var i2 = t3.levels || [], r2 = this.designatedVisualItemStyle = {}, o2 = new Sc({ itemStyle: r2 }, this, e2);
      i2 = t3.levels = function(t4, e3) {
        var n4, i3, r3 = _o(e3.get("color")), o3 = _o(e3.get(["aria", "decal", "decals"]));
        if (!r3)
          return;
        t4 = t4 || [], N(t4, function(t5) {
          var e4 = new Sc(t5), r4 = e4.get("color"), o4 = e4.get("decal");
          (e4.get(["itemStyle", "color"]) || r4 && "none" !== r4) && (n4 = true), (e4.get(["itemStyle", "decal"]) || o4 && "none" !== o4) && (i3 = true);
        });
        var a3 = t4[0] || (t4[0] = {});
        n4 || (a3.color = r3.slice());
        !i3 && o3 && (a3.decal = o3.slice());
        return t4;
      }(i2, e2);
      var a2 = E(i2 || [], function(t4) {
        return new Sc(t4, o2, e2);
      }, this), s2 = oD.createTree(n3, this, function(t4) {
        t4.wrapMethod("getItemModel", function(t5, e3) {
          var n4 = s2.getNodeByDataIndex(e3), i3 = n4 ? a2[n4.depth] : null;
          return t5.parentModel = i3 || o2, t5;
        });
      });
      return s2.data;
    }, n2.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      var i2 = this.getData(), r2 = this.getRawValue(t3);
      return eg("nameValue", { name: i2.getName(t3), value: r2 });
    }, n2.prototype.getDataParams = function(e2) {
      var n3 = t2.prototype.getDataParams.apply(this, arguments), i2 = this.getData().tree.getNodeByDataIndex(e2);
      return n3.treeAncestors = uD(i2, this), n3.treePathInfo = n3.treeAncestors, n3;
    }, n2.prototype.setLayoutInfo = function(t3) {
      this.layoutInfo = this.layoutInfo || {}, D(this.layoutInfo, t3);
    }, n2.prototype.mapIdToIndex = function(t3) {
      var e2 = this._idIndexMap;
      e2 || (e2 = this._idIndexMap = gt(), this._idIndexMapCount = 0);
      var n3 = e2.get(t3);
      return null == n3 && e2.set(t3, n3 = this._idIndexMapCount++), n3;
    }, n2.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, n2.prototype.resetViewRoot = function(t3) {
      t3 ? this._viewRoot = t3 : t3 = this._viewRoot;
      var e2 = this.getRawData().tree.root;
      t3 && (t3 === e2 || e2.contains(t3)) || (this._viewRoot = e2);
    }, n2.prototype.enableAriaDecal = function() {
      gD(this);
    }, n2.type = "series.treemap", n2.layoutMode = "box", n2.defaultOption = { progressive: 0, left: "center", top: "middle", width: "80%", height: "80%", sort: true, clipWindow: "origin", squareRatio: 0.5 * (1 + Math.sqrt(5)), leafDepth: null, drillDownIcon: "\u25B6", zoomToNodeRatio: 0.1024, roam: true, nodeClick: "zoomToNode", animation: true, animationDurationUpdate: 900, animationEasing: "quinticInOut", breadcrumb: { show: true, height: 22, left: "center", top: "bottom", emptyItemWidth: 25, itemStyle: { color: "rgba(0,0,0,0.7)", textStyle: { color: "#fff" } }, emphasis: { itemStyle: { color: "rgba(0,0,0,0.9)" } } }, label: { show: true, distance: 0, padding: 5, position: "inside", color: "#fff", overflow: "truncate" }, upperLabel: { show: false, position: [0, "50%"], height: 20, overflow: "truncate", verticalAlign: "middle" }, itemStyle: { color: null, colorAlpha: null, colorSaturation: null, borderWidth: 0, gapWidth: 0, borderColor: "#fff", borderColorSaturation: null }, emphasis: { upperLabel: { show: true, position: [0, "50%"], overflow: "truncate", verticalAlign: "middle" } }, visualDimension: 0, visualMin: null, visualMax: null, color: [], colorAlpha: null, colorSaturation: null, colorMappingBy: "index", visibleMin: 10, childrenVisibleMin: null, levels: [] }, n2;
  }(vg);
  function vD(t2) {
    var e2 = 0;
    N(t2.children, function(t3) {
      vD(t3);
      var n3 = t3.value;
      H(n3) && (n3 = n3[0]), e2 += n3;
    });
    var n2 = t2.value;
    H(n2) && (n2 = n2[0]), (null == n2 || isNaN(n2)) && (n2 = e2), n2 < 0 && (n2 = 0), H(t2.value) ? t2.value[0] = n2 : t2.value = n2;
  }
  var mD = function() {
    function t2(t3) {
      this.group = new Er(), t3.add(this.group);
    }
    return t2.prototype.render = function(t3, e2, n2, i2) {
      var r2 = t3.getModel("breadcrumb"), o2 = this.group;
      if (o2.removeAll(), r2.get("show") && n2) {
        var a2 = r2.getModel("itemStyle"), s2 = r2.getModel("emphasis"), l2 = a2.getModel("textStyle"), u2 = s2.getModel(["itemStyle", "textStyle"]), h2 = { pos: { left: r2.get("left"), right: r2.get("right"), top: r2.get("top"), bottom: r2.get("bottom") }, box: { width: e2.getWidth(), height: e2.getHeight() }, emptyItemWidth: r2.get("emptyItemWidth"), totalWidth: 0, renderList: [] };
        this._prepare(n2, h2, l2), this._renderContent(t3, h2, a2, s2, l2, u2, i2), Cp(o2, h2.pos, h2.box);
      }
    }, t2.prototype._prepare = function(t3, e2, n2) {
      for (var i2 = t3; i2; i2 = i2.parentNode) {
        var r2 = Do(i2.getModel().get("name"), ""), o2 = n2.getTextRect(r2), a2 = Math.max(o2.width + 16, e2.emptyItemWidth);
        e2.totalWidth += a2 + 8, e2.renderList.push({ node: i2, text: r2, width: a2 });
      }
    }, t2.prototype._renderContent = function(t3, e2, n2, i2, r2, o2, a2) {
      for (var s2, l2, u2, h2, c2, p2, d2, f2, g2, y2 = 0, v2 = e2.emptyItemWidth, m2 = t3.get(["breadcrumb", "height"]), x2 = (s2 = e2.pos, l2 = e2.box, h2 = l2.width, c2 = l2.height, p2 = Xr(s2.left, h2), d2 = Xr(s2.top, c2), f2 = Xr(s2.right, h2), g2 = Xr(s2.bottom, c2), (isNaN(p2) || isNaN(parseFloat(s2.left))) && (p2 = 0), (isNaN(f2) || isNaN(parseFloat(s2.right))) && (f2 = h2), (isNaN(d2) || isNaN(parseFloat(s2.top))) && (d2 = 0), (isNaN(g2) || isNaN(parseFloat(s2.bottom))) && (g2 = c2), u2 = dp(u2 || 0), { width: Math.max(f2 - p2 - u2[1] - u2[3], 0), height: Math.max(g2 - d2 - u2[0] - u2[2], 0) }), _2 = e2.totalWidth, b2 = e2.renderList, w2 = i2.getModel("itemStyle").getItemStyle(), S2 = b2.length - 1; S2 >= 0; S2--) {
        var M2 = b2[S2], I2 = M2.node, T2 = M2.width, C2 = M2.text;
        _2 > x2.width && (_2 -= T2 - v2, T2 = v2, C2 = null);
        var D2 = new Gu({ shape: { points: xD(y2, 0, T2, m2, S2 === b2.length - 1, 0 === S2) }, style: A(n2.getItemStyle(), { lineJoin: "bevel" }), textContent: new Bs({ style: ec(r2, { text: C2 }) }), textConfig: { position: "inside" }, z2: 1e5, onclick: W(a2, I2) });
        D2.disableLabelAnimation = true, D2.getTextContent().ensureState("emphasis").style = ec(o2, { text: C2 }), D2.ensureState("emphasis").style = w2, Hl(D2, i2.get("focus"), i2.get("blurScope"), i2.get("disabled")), this.group.add(D2), _D(D2, t3, I2), y2 += T2 + 8;
      }
    }, t2.prototype.remove = function() {
      this.group.removeAll();
    }, t2;
  }();
  function xD(t2, e2, n2, i2, r2, o2) {
    var a2 = [[r2 ? t2 : t2 - 5, e2], [t2 + n2, e2], [t2 + n2, e2 + i2], [r2 ? t2 : t2 - 5, e2 + i2]];
    return !o2 && a2.splice(2, 0, [t2 + n2 + 5, e2 + i2 / 2]), !r2 && a2.push([t2, e2 + i2 / 2]), a2;
  }
  function _D(t2, e2, n2) {
    Js(t2).eventData = { componentType: "series", componentSubType: "treemap", componentIndex: e2.componentIndex, seriesIndex: e2.seriesIndex, seriesName: e2.name, seriesType: "treemap", selfType: "breadcrumb", nodeData: { dataIndex: n2 && n2.dataIndex, name: n2 && n2.name }, treePathInfo: n2 && uD(n2, e2) };
  }
  var bD = function() {
    function t2() {
      this._storage = [], this._elExistsMap = {};
    }
    return t2.prototype.add = function(t3, e2, n2, i2, r2) {
      return !this._elExistsMap[t3.id] && (this._elExistsMap[t3.id] = true, this._storage.push({ el: t3, target: e2, duration: n2, delay: i2, easing: r2 }), true);
    }, t2.prototype.finished = function(t3) {
      return this._finishedCallback = t3, this;
    }, t2.prototype.start = function() {
      for (var t3 = this, e2 = this._storage.length, n2 = function() {
        --e2 <= 0 && (t3._storage.length = 0, t3._elExistsMap = {}, t3._finishedCallback && t3._finishedCallback());
      }, i2 = 0, r2 = this._storage.length; i2 < r2; i2++) {
        var o2 = this._storage[i2];
        o2.el.animateTo(o2.target, { duration: o2.duration, delay: o2.delay, easing: o2.easing, setToFinal: true, done: n2, aborted: n2 });
      }
      return this;
    }, t2;
  }();
  var wD = Er;
  var SD = Es;
  var MD = "label";
  var ID = "upperLabel";
  var TD = $o([["fill", "color"], ["stroke", "strokeColor"], ["lineWidth", "strokeWidth"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["shadowColor"]]);
  var CD = function(t2) {
    var e2 = TD(t2);
    return e2.stroke = e2.fill = e2.lineWidth = null, e2;
  };
  var DD = Po();
  var AD = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._state = "ready", e2._storage = { nodeGroup: [], background: [], content: [] }, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      if (!(L(e2.findComponents({ mainType: "series", subType: "treemap", query: i2 }), t3) < 0)) {
        this.seriesModel = t3, this.api = n3, this.ecModel = e2;
        var r2 = aD(i2, ["treemapZoomToNode", "treemapRootToNode"], t3), o2 = i2 && i2.type, a2 = t3.layoutInfo, s2 = !this._oldTree, l2 = this._storage, u2 = "treemapRootToNode" === o2 && r2 && l2 ? { rootNodeGroup: l2.nodeGroup[r2.node.getRawIndex()], direction: i2.direction } : null, h2 = this._giveContainerGroup(a2), c2 = t3.get("animation"), p2 = this._doRender(h2, t3, u2);
        !c2 || s2 || o2 && "treemapZoomToNode" !== o2 && "treemapRootToNode" !== o2 ? p2.renderFinally() : this._doAnimation(h2, p2, t3, u2), this._resetController(n3), this._renderBreadcrumb(t3, n3, r2);
      }
    }, n2.prototype._giveContainerGroup = function(t3) {
      var e2 = this._containerGroup;
      return e2 || (e2 = this._containerGroup = new wD(), this._initEvents(e2), this.group.add(e2)), e2.x = t3.x, e2.y = t3.y, e2;
    }, n2.prototype._doRender = function(t3, e2, n3) {
      var i2 = e2.getData().tree, r2 = this._oldTree, o2 = { nodeGroup: [], background: [], content: [] }, a2 = { nodeGroup: [], background: [], content: [] }, s2 = this._storage, l2 = [];
      function u2(t4, i3, r3, u3) {
        return function(t5, e3, n4, i4, r4, o3, a3, s3, l3, u4) {
          if (!a3)
            return;
          var h3 = a3.getLayout(), c2 = t5.getData(), p2 = a3.getModel();
          if (c2.setItemGraphicEl(a3.dataIndex, null), !h3 || !h3.isInView)
            return;
          var d2 = h3.width, f2 = h3.height, g2 = h3.borderWidth, y2 = h3.invisible, v2 = a3.getRawIndex(), m2 = s3 && s3.getRawIndex(), x2 = a3.viewChildren, _2 = h3.upperHeight, b2 = x2 && x2.length, w2 = p2.getModel("itemStyle"), S2 = p2.getModel(["emphasis", "itemStyle"]), M2 = p2.getModel(["blur", "itemStyle"]), I2 = p2.getModel(["select", "itemStyle"]), T2 = w2.get("borderRadius") || 0, C2 = G2("nodeGroup", wD);
          if (!C2)
            return;
          if (l3.add(C2), C2.x = h3.x || 0, C2.y = h3.y || 0, C2.markRedraw(), DD(C2).nodeWidth = d2, DD(C2).nodeHeight = f2, h3.isAboveViewRoot)
            return C2;
          var A2 = G2("background", SD, u4, 20);
          A2 && E2(C2, A2, b2 && h3.upperLabelHeight);
          var k2 = p2.getModel("emphasis"), L2 = k2.get("focus"), P2 = k2.get("blurScope"), O2 = k2.get("disabled"), R2 = "ancestor" === L2 ? a3.getAncestorsIndices() : "descendant" === L2 ? a3.getDescendantIndices() : L2;
          if (b2)
            ql(C2) && jl(C2, false), A2 && (jl(A2, !O2), c2.setItemGraphicEl(a3.dataIndex, A2), Yl(A2, R2, P2));
          else {
            var N2 = G2("content", SD, u4, 30);
            N2 && z2(C2, N2), A2.disableMorphing = true, A2 && ql(A2) && jl(A2, false), jl(C2, !O2), c2.setItemGraphicEl(a3.dataIndex, C2), Yl(C2, R2, P2);
          }
          return C2;
          function E2(e4, n5, i5) {
            var r5 = Js(n5);
            if (r5.dataIndex = a3.dataIndex, r5.seriesIndex = t5.seriesIndex, n5.setShape({ x: 0, y: 0, width: d2, height: f2, r: T2 }), y2)
              V2(n5);
            else {
              n5.invisible = false;
              var o4 = a3.getVisual("style"), s4 = o4.stroke, l4 = CD(w2);
              l4.fill = s4;
              var u5 = TD(S2);
              u5.fill = S2.get("borderColor");
              var h4 = TD(M2);
              h4.fill = M2.get("borderColor");
              var c3 = TD(I2);
              if (c3.fill = I2.get("borderColor"), i5) {
                var p3 = d2 - 2 * g2;
                B2(n5, s4, o4.opacity, { x: g2, y: 0, width: p3, height: _2 });
              } else
                n5.removeTextContent();
              n5.setStyle(l4), n5.ensureState("emphasis").style = u5, n5.ensureState("blur").style = h4, n5.ensureState("select").style = c3, Tl(n5);
            }
            e4.add(n5);
          }
          function z2(e4, n5) {
            var i5 = Js(n5);
            i5.dataIndex = a3.dataIndex, i5.seriesIndex = t5.seriesIndex;
            var r5 = Math.max(d2 - 2 * g2, 0), o4 = Math.max(f2 - 2 * g2, 0);
            if (n5.culling = true, n5.setShape({ x: g2, y: g2, width: r5, height: o4, r: T2 }), y2)
              V2(n5);
            else {
              n5.invisible = false;
              var s4 = a3.getVisual("style"), l4 = s4.fill, u5 = CD(w2);
              u5.fill = l4, u5.decal = s4.decal;
              var h4 = TD(S2), c3 = TD(M2), p3 = TD(I2);
              B2(n5, l4, s4.opacity, null), n5.setStyle(u5), n5.ensureState("emphasis").style = h4, n5.ensureState("blur").style = c3, n5.ensureState("select").style = p3, Tl(n5);
            }
            e4.add(n5);
          }
          function V2(t6) {
            !t6.invisible && o3.push(t6);
          }
          function B2(e4, n5, i5, r5) {
            var o4 = p2.getModel(r5 ? ID : MD), s4 = Do(p2.get("name"), null), l4 = o4.getShallow("show");
            Qh(e4, tc(p2, r5 ? ID : MD), { defaultText: l4 ? s4 : null, inheritColor: n5, defaultOpacity: i5, labelFetcher: t5, labelDataIndex: a3.dataIndex });
            var u5 = e4.getTextContent();
            if (u5) {
              var c3 = u5.style, d3 = at(c3.padding || 0);
              r5 && (e4.setTextConfig({ layoutRect: r5 }), u5.disableLabelLayout = true), u5.beforeUpdate = function() {
                var t6 = Math.max((r5 ? r5.width : e4.shape.width) - d3[1] - d3[3], 0), n6 = Math.max((r5 ? r5.height : e4.shape.height) - d3[0] - d3[2], 0);
                c3.width === t6 && c3.height === n6 || u5.setStyle({ width: t6, height: n6 });
              }, c3.truncateMinChar = 2, c3.lineOverflow = "truncate", F2(c3, r5, h3);
              var f3 = u5.getState("emphasis");
              F2(f3 ? f3.style : null, r5, h3);
            }
          }
          function F2(e4, n5, i5) {
            var r5 = e4 ? e4.text : null;
            if (!n5 && i5.isLeafRoot && null != r5) {
              var o4 = t5.get("drillDownIcon", true);
              e4.text = o4 ? o4 + " " + r5 : r5;
            }
          }
          function G2(t6, i5, o4, a4) {
            var s4 = null != m2 && n4[t6][m2], l4 = r4[t6];
            return s4 ? (n4[t6][m2] = null, W2(l4, s4)) : y2 || ((s4 = new i5()) instanceof wa && (s4.z2 = function(t7, e4) {
              return 100 * t7 + e4;
            }(o4, a4)), H2(l4, s4)), e3[t6][v2] = s4;
          }
          function W2(t6, e4) {
            var n5 = t6[v2] = {};
            e4 instanceof wD ? (n5.oldX = e4.x, n5.oldY = e4.y) : n5.oldShape = D({}, e4.shape);
          }
          function H2(t6, e4) {
            var n5 = t6[v2] = {}, o4 = a3.parentNode, s4 = e4 instanceof Er;
            if (o4 && (!i4 || "drillDown" === i4.direction)) {
              var l4 = 0, u5 = 0, h4 = r4.background[o4.getRawIndex()];
              !i4 && h4 && h4.oldShape && (l4 = h4.oldShape.width, u5 = h4.oldShape.height), s4 ? (n5.oldX = 0, n5.oldY = u5) : n5.oldShape = { x: l4, y: u5, width: 0, height: 0 };
            }
            n5.fadein = !s4;
          }
        }(e2, a2, s2, n3, o2, l2, t4, i3, r3, u3);
      }
      !function t4(e3, n4, i3, r3, o3) {
        r3 ? (n4 = e3, N(e3, function(t5, e4) {
          !t5.isRemoved() && s3(e4, e4);
        })) : new Zm(n4, e3, a3, a3).add(s3).update(s3).remove(W(s3, null)).execute();
        function a3(t5) {
          return t5.getId();
        }
        function s3(a4, s4) {
          var l3 = null != a4 ? e3[a4] : null, h3 = null != s4 ? n4[s4] : null, c2 = u2(l3, h3, i3, o3);
          c2 && t4(l3 && l3.viewChildren || [], h3 && h3.viewChildren || [], c2, r3, o3 + 1);
        }
      }(i2.root ? [i2.root] : [], r2 && r2.root ? [r2.root] : [], t3, i2 === r2 || !r2, 0);
      var h2 = function(t4) {
        var e3 = { nodeGroup: [], background: [], content: [] };
        return t4 && N(t4, function(t5, n4) {
          var i3 = e3[n4];
          N(t5, function(t6) {
            t6 && (i3.push(t6), DD(t6).willDelete = true);
          });
        }), e3;
      }(s2);
      return this._oldTree = i2, this._storage = a2, { lastsForAnimation: o2, willDeleteEls: h2, renderFinally: function() {
        N(h2, function(t4) {
          N(t4, function(t5) {
            t5.parent && t5.parent.remove(t5);
          });
        }), N(l2, function(t4) {
          t4.invisible = true, t4.dirty();
        });
      } };
    }, n2.prototype._doAnimation = function(t3, e2, n3, i2) {
      var r2 = n3.get("animationDurationUpdate"), o2 = n3.get("animationEasing"), a2 = (Y(r2) ? 0 : r2) || 0, s2 = (Y(o2) ? null : o2) || "cubicOut", l2 = new bD();
      N(e2.willDeleteEls, function(t4, e3) {
        N(t4, function(t5, n4) {
          if (!t5.invisible) {
            var r3, o3 = t5.parent, u2 = DD(o3);
            if (i2 && "drillDown" === i2.direction)
              r3 = o3 === i2.rootNodeGroup ? { shape: { x: 0, y: 0, width: u2.nodeWidth, height: u2.nodeHeight }, style: { opacity: 0 } } : { style: { opacity: 0 } };
            else {
              var h2 = 0, c2 = 0;
              u2.willDelete || (h2 = u2.nodeWidth / 2, c2 = u2.nodeHeight / 2), r3 = "nodeGroup" === e3 ? { x: h2, y: c2, style: { opacity: 0 } } : { shape: { x: h2, y: c2, width: 0, height: 0 }, style: { opacity: 0 } };
            }
            r3 && l2.add(t5, r3, a2, 0, s2);
          }
        });
      }), N(this._storage, function(t4, n4) {
        N(t4, function(t5, i3) {
          var r3 = e2.lastsForAnimation[n4][i3], o3 = {};
          r3 && (t5 instanceof Er ? null != r3.oldX && (o3.x = t5.x, o3.y = t5.y, t5.x = r3.oldX, t5.y = r3.oldY) : (r3.oldShape && (o3.shape = D({}, t5.shape), t5.setShape(r3.oldShape)), r3.fadein ? (t5.setStyle("opacity", 0), o3.style = { opacity: 1 }) : 1 !== t5.style.opacity && (o3.style = { opacity: 1 })), l2.add(t5, o3, a2, 0, s2));
        });
      }, this), this._state = "animating", l2.finished(G(function() {
        this._state = "ready", e2.renderFinally();
      }, this)).start();
    }, n2.prototype._resetController = function(t3) {
      var e2 = this._controller;
      e2 || ((e2 = this._controller = new oT(t3.getZr())).enable(this.seriesModel.get("roam")), e2.on("pan", G(this._onPan, this)), e2.on("zoom", G(this._onZoom, this)));
      var n3 = new Ee(0, 0, t3.getWidth(), t3.getHeight());
      e2.setPointerChecker(function(t4, e3, i2) {
        return n3.contain(e3, i2);
      });
    }, n2.prototype._clearController = function() {
      var t3 = this._controller;
      t3 && (t3.dispose(), t3 = null);
    }, n2.prototype._onPan = function(t3) {
      if ("animating" !== this._state && (Math.abs(t3.dx) > 3 || Math.abs(t3.dy) > 3)) {
        var e2 = this.seriesModel.getData().tree.root;
        if (!e2)
          return;
        var n3 = e2.getLayout();
        if (!n3)
          return;
        this.api.dispatchAction({ type: "treemapMove", from: this.uid, seriesId: this.seriesModel.id, rootRect: { x: n3.x + t3.dx, y: n3.y + t3.dy, width: n3.width, height: n3.height } });
      }
    }, n2.prototype._onZoom = function(t3) {
      var e2 = t3.originX, n3 = t3.originY;
      if ("animating" !== this._state) {
        var i2 = this.seriesModel.getData().tree.root;
        if (!i2)
          return;
        var r2 = i2.getLayout();
        if (!r2)
          return;
        var o2 = new Ee(r2.x, r2.y, r2.width, r2.height), a2 = this.seriesModel.layoutInfo, s2 = [1, 0, 0, 1, 0, 0];
        be(s2, s2, [-(e2 -= a2.x), -(n3 -= a2.y)]), Se(s2, s2, [t3.scale, t3.scale]), be(s2, s2, [e2, n3]), o2.applyTransform(s2), this.api.dispatchAction({ type: "treemapRender", from: this.uid, seriesId: this.seriesModel.id, rootRect: { x: o2.x, y: o2.y, width: o2.width, height: o2.height } });
      }
    }, n2.prototype._initEvents = function(t3) {
      var e2 = this;
      t3.on("click", function(t4) {
        if ("ready" === e2._state) {
          var n3 = e2.seriesModel.get("nodeClick", true);
          if (n3) {
            var i2 = e2.findTarget(t4.offsetX, t4.offsetY);
            if (i2) {
              var r2 = i2.node;
              if (r2.getLayout().isLeafRoot)
                e2._rootToNode(i2);
              else if ("zoomToNode" === n3)
                e2._zoomToNode(i2);
              else if ("link" === n3) {
                var o2 = r2.hostTree.data.getItemModel(r2.dataIndex), a2 = o2.get("link", true), s2 = o2.get("target", true) || "blank";
                a2 && _p(a2, s2);
              }
            }
          }
        }
      }, this);
    }, n2.prototype._renderBreadcrumb = function(t3, e2, n3) {
      var i2 = this;
      n3 || (n3 = null != t3.get("leafDepth", true) ? { node: t3.getViewRoot() } : this.findTarget(e2.getWidth() / 2, e2.getHeight() / 2)) || (n3 = { node: t3.getData().tree.root }), (this._breadcrumb || (this._breadcrumb = new mD(this.group))).render(t3, e2, n3.node, function(e3) {
        "animating" !== i2._state && (lD(t3.getViewRoot(), e3) ? i2._rootToNode({ node: e3 }) : i2._zoomToNode({ node: e3 }));
      });
    }, n2.prototype.remove = function() {
      this._clearController(), this._containerGroup && this._containerGroup.removeAll(), this._storage = { nodeGroup: [], background: [], content: [] }, this._state = "ready", this._breadcrumb && this._breadcrumb.remove();
    }, n2.prototype.dispose = function() {
      this._clearController();
    }, n2.prototype._zoomToNode = function(t3) {
      this.api.dispatchAction({ type: "treemapZoomToNode", from: this.uid, seriesId: this.seriesModel.id, targetNode: t3.node });
    }, n2.prototype._rootToNode = function(t3) {
      this.api.dispatchAction({ type: "treemapRootToNode", from: this.uid, seriesId: this.seriesModel.id, targetNode: t3.node });
    }, n2.prototype.findTarget = function(t3, e2) {
      var n3;
      return this.seriesModel.getViewRoot().eachNode({ attr: "viewChildren", order: "preorder" }, function(i2) {
        var r2 = this._storage.background[i2.getRawIndex()];
        if (r2) {
          var o2 = r2.transformCoordToLocal(t3, e2), a2 = r2.shape;
          if (!(a2.x <= o2[0] && o2[0] <= a2.x + a2.width && a2.y <= o2[1] && o2[1] <= a2.y + a2.height))
            return false;
          n3 = { node: i2, offsetX: o2[0], offsetY: o2[1] };
        }
      }, this), n3;
    }, n2.type = "treemap", n2;
  }(Ag);
  var kD = N;
  var LD = j;
  var PD = -1;
  var OD = function() {
    function t2(e2) {
      var n2 = e2.mappingMethod, i2 = e2.type, r2 = this.option = I(e2);
      this.type = i2, this.mappingMethod = n2, this._normalizeData = HD[n2];
      var o2 = t2.visualHandlers[i2];
      this.applyVisual = o2.applyVisual, this.getColorMapper = o2.getColorMapper, this._normalizedToVisual = o2._normalizedToVisual[n2], "piecewise" === n2 ? (RD(r2), function(t3) {
        var e3 = t3.pieceList;
        t3.hasSpecialVisual = false, N(e3, function(e4, n3) {
          e4.originIndex = n3, null != e4.visual && (t3.hasSpecialVisual = true);
        });
      }(r2)) : "category" === n2 ? r2.categories ? function(t3) {
        var e3 = t3.categories, n3 = t3.categoryMap = {}, i3 = t3.visual;
        if (kD(e3, function(t4, e4) {
          n3[t4] = e4;
        }), !H(i3)) {
          var r3 = [];
          j(i3) ? kD(i3, function(t4, e4) {
            var i4 = n3[e4];
            r3[null != i4 ? i4 : PD] = t4;
          }) : r3[-1] = i3, i3 = WD(t3, r3);
        }
        for (var o3 = e3.length - 1; o3 >= 0; o3--)
          null == i3[o3] && (delete n3[e3[o3]], e3.pop());
      }(r2) : RD(r2, true) : (st("linear" !== n2 || r2.dataExtent), RD(r2));
    }
    return t2.prototype.mapValueToVisual = function(t3) {
      var e2 = this._normalizeData(t3);
      return this._normalizedToVisual(e2, t3);
    }, t2.prototype.getNormalizer = function() {
      return G(this._normalizeData, this);
    }, t2.listVisualTypes = function() {
      return F(t2.visualHandlers);
    }, t2.isValidType = function(e2) {
      return t2.visualHandlers.hasOwnProperty(e2);
    }, t2.eachVisual = function(t3, e2, n2) {
      j(t3) ? N(t3, e2, n2) : e2.call(n2, t3);
    }, t2.mapVisual = function(e2, n2, i2) {
      var r2, o2 = H(e2) ? [] : j(e2) ? {} : (r2 = true, null);
      return t2.eachVisual(e2, function(t3, e3) {
        var a2 = n2.call(i2, t3, e3);
        r2 ? o2 = a2 : o2[e3] = a2;
      }), o2;
    }, t2.retrieveVisuals = function(e2) {
      var n2, i2 = {};
      return e2 && kD(t2.visualHandlers, function(t3, r2) {
        e2.hasOwnProperty(r2) && (i2[r2] = e2[r2], n2 = true);
      }), n2 ? i2 : null;
    }, t2.prepareVisualTypes = function(t3) {
      if (H(t3))
        t3 = t3.slice();
      else {
        if (!LD(t3))
          return [];
        var e2 = [];
        kD(t3, function(t4, n2) {
          e2.push(n2);
        }), t3 = e2;
      }
      return t3.sort(function(t4, e3) {
        return "color" === e3 && "color" !== t4 && 0 === t4.indexOf("color") ? 1 : -1;
      }), t3;
    }, t2.dependsOn = function(t3, e2) {
      return "color" === e2 ? !(!t3 || 0 !== t3.indexOf(e2)) : t3 === e2;
    }, t2.findPieceIndex = function(t3, e2, n2) {
      for (var i2, r2 = 1 / 0, o2 = 0, a2 = e2.length; o2 < a2; o2++) {
        var s2 = e2[o2].value;
        if (null != s2) {
          if (s2 === t3 || X(s2) && s2 === t3 + "")
            return o2;
          n2 && c2(s2, o2);
        }
      }
      for (o2 = 0, a2 = e2.length; o2 < a2; o2++) {
        var l2 = e2[o2], u2 = l2.interval, h2 = l2.close;
        if (u2) {
          if (u2[0] === -1 / 0) {
            if (YD(h2[1], t3, u2[1]))
              return o2;
          } else if (u2[1] === 1 / 0) {
            if (YD(h2[0], u2[0], t3))
              return o2;
          } else if (YD(h2[0], u2[0], t3) && YD(h2[1], t3, u2[1]))
            return o2;
          n2 && c2(u2[0], o2), n2 && c2(u2[1], o2);
        }
      }
      if (n2)
        return t3 === 1 / 0 ? e2.length - 1 : t3 === -1 / 0 ? 0 : i2;
      function c2(e3, n3) {
        var o3 = Math.abs(e3 - t3);
        o3 < r2 && (r2 = o3, i2 = n3);
      }
    }, t2.visualHandlers = { color: { applyVisual: zD("color"), getColorMapper: function() {
      var t3 = this.option;
      return G("category" === t3.mappingMethod ? function(t4, e2) {
        return !e2 && (t4 = this._normalizeData(t4)), VD.call(this, t4);
      } : function(e2, n2, i2) {
        var r2 = !!i2;
        return !n2 && (e2 = this._normalizeData(e2)), i2 = $n(e2, t3.parsedVisual, i2), r2 ? i2 : ii(i2, "rgba");
      }, this);
    }, _normalizedToVisual: { linear: function(t3) {
      return ii($n(t3, this.option.parsedVisual), "rgba");
    }, category: VD, piecewise: function(t3, e2) {
      var n2 = GD.call(this, e2);
      return null == n2 && (n2 = ii($n(t3, this.option.parsedVisual), "rgba")), n2;
    }, fixed: BD } }, colorHue: ND(function(t3, e2) {
      return ei(t3, e2);
    }), colorSaturation: ND(function(t3, e2) {
      return ei(t3, null, e2);
    }), colorLightness: ND(function(t3, e2) {
      return ei(t3, null, null, e2);
    }), colorAlpha: ND(function(t3, e2) {
      return ni(t3, e2);
    }), decal: { applyVisual: zD("decal"), _normalizedToVisual: { linear: null, category: VD, piecewise: null, fixed: null } }, opacity: { applyVisual: zD("opacity"), _normalizedToVisual: FD([0, 1]) }, liftZ: { applyVisual: zD("liftZ"), _normalizedToVisual: { linear: BD, category: BD, piecewise: BD, fixed: BD } }, symbol: { applyVisual: function(t3, e2, n2) {
      n2("symbol", this.mapValueToVisual(t3));
    }, _normalizedToVisual: { linear: ED, category: VD, piecewise: function(t3, e2) {
      var n2 = GD.call(this, e2);
      return null == n2 && (n2 = ED.call(this, t3)), n2;
    }, fixed: BD } }, symbolSize: { applyVisual: zD("symbolSize"), _normalizedToVisual: FD([0, 1]) } }, t2;
  }();
  function RD(t2, e2) {
    var n2 = t2.visual, i2 = [];
    j(n2) ? kD(n2, function(t3) {
      i2.push(t3);
    }) : null != n2 && i2.push(n2);
    e2 || 1 !== i2.length || { color: 1, symbol: 1 }.hasOwnProperty(t2.type) || (i2[1] = i2[0]), WD(t2, i2);
  }
  function ND(t2) {
    return { applyVisual: function(e2, n2, i2) {
      var r2 = this.mapValueToVisual(e2);
      i2("color", t2(n2("color"), r2));
    }, _normalizedToVisual: FD([0, 1]) };
  }
  function ED(t2) {
    var e2 = this.option.visual;
    return e2[Math.round(Yr(t2, [0, 1], [0, e2.length - 1], true))] || {};
  }
  function zD(t2) {
    return function(e2, n2, i2) {
      i2(t2, this.mapValueToVisual(e2));
    };
  }
  function VD(t2) {
    var e2 = this.option.visual;
    return e2[this.option.loop && t2 !== PD ? t2 % e2.length : t2];
  }
  function BD() {
    return this.option.visual[0];
  }
  function FD(t2) {
    return { linear: function(e2) {
      return Yr(e2, t2, this.option.visual, true);
    }, category: VD, piecewise: function(e2, n2) {
      var i2 = GD.call(this, n2);
      return null == i2 && (i2 = Yr(e2, t2, this.option.visual, true)), i2;
    }, fixed: BD };
  }
  function GD(t2) {
    var e2 = this.option, n2 = e2.pieceList;
    if (e2.hasSpecialVisual) {
      var i2 = n2[OD.findPieceIndex(t2, n2)];
      if (i2 && i2.visual)
        return i2.visual[this.type];
    }
  }
  function WD(t2, e2) {
    return t2.visual = e2, "color" === t2.type && (t2.parsedVisual = E(e2, function(t3) {
      var e3 = jn(t3);
      return e3 || [0, 0, 0, 1];
    })), e2;
  }
  var HD = { linear: function(t2) {
    return Yr(t2, this.option.dataExtent, [0, 1], true);
  }, piecewise: function(t2) {
    var e2 = this.option.pieceList, n2 = OD.findPieceIndex(t2, e2, true);
    if (null != n2)
      return Yr(n2, [0, e2.length - 1], [0, 1], true);
  }, category: function(t2) {
    var e2 = this.option.categories ? this.option.categoryMap[t2] : t2;
    return null == e2 ? PD : e2;
  }, fixed: _t };
  function YD(t2, e2, n2) {
    return t2 ? e2 <= n2 : e2 < n2;
  }
  var XD = Po();
  var UD = { seriesType: "treemap", reset: function(t2) {
    var e2 = t2.getData().tree.root;
    e2.isRemoved() || ZD(e2, {}, t2.getViewRoot().getAncestors(), t2);
  } };
  function ZD(t2, e2, n2, i2) {
    var r2 = t2.getModel(), o2 = t2.getLayout(), a2 = t2.hostTree.data;
    if (o2 && !o2.invisible && o2.isInView) {
      var s2, l2 = r2.getModel("itemStyle"), u2 = function(t3, e3, n3) {
        var i3 = D({}, e3), r3 = n3.designatedVisualItemStyle;
        return N(["color", "colorAlpha", "colorSaturation"], function(n4) {
          r3[n4] = e3[n4];
          var o3 = t3.get(n4);
          r3[n4] = null, null != o3 && (i3[n4] = o3);
        }), i3;
      }(l2, e2, i2), h2 = a2.ensureUniqueItemVisual(t2.dataIndex, "style"), c2 = l2.get("borderColor"), p2 = l2.get("borderColorSaturation");
      null != p2 && (c2 = function(t3, e3) {
        return null != e3 ? ei(e3, null, null, t3) : null;
      }(p2, s2 = jD(u2))), h2.stroke = c2;
      var d2 = t2.viewChildren;
      if (d2 && d2.length) {
        var f2 = function(t3, e3, n3, i3, r3, o3) {
          if (!o3 || !o3.length)
            return;
          var a3 = KD(e3, "color") || null != r3.color && "none" !== r3.color && (KD(e3, "colorAlpha") || KD(e3, "colorSaturation"));
          if (!a3)
            return;
          var s3 = e3.get("visualMin"), l3 = e3.get("visualMax"), u3 = n3.dataExtent.slice();
          null != s3 && s3 < u3[0] && (u3[0] = s3), null != l3 && l3 > u3[1] && (u3[1] = l3);
          var h3 = e3.get("colorMappingBy"), c3 = { type: a3.name, dataExtent: u3, visual: a3.range };
          "color" !== c3.type || "index" !== h3 && "id" !== h3 ? c3.mappingMethod = "linear" : (c3.mappingMethod = "category", c3.loop = true);
          var p3 = new OD(c3);
          return XD(p3).drColorMappingBy = h3, p3;
        }(0, r2, o2, 0, u2, d2);
        N(d2, function(t3, e3) {
          if (t3.depth >= n2.length || t3 === n2[t3.depth]) {
            var o3 = function(t4, e4, n3, i3, r3, o4) {
              var a3 = D({}, e4);
              if (r3) {
                var s3 = r3.type, l3 = "color" === s3 && XD(r3).drColorMappingBy, u3 = "index" === l3 ? i3 : "id" === l3 ? o4.mapIdToIndex(n3.getId()) : n3.getValue(t4.get("visualDimension"));
                a3[s3] = r3.mapValueToVisual(u3);
              }
              return a3;
            }(r2, u2, t3, e3, f2, i2);
            ZD(t3, o3, n2, i2);
          }
        });
      } else
        s2 = jD(u2), h2.fill = s2;
    }
  }
  function jD(t2) {
    var e2 = qD(t2, "color");
    if (e2) {
      var n2 = qD(t2, "colorAlpha"), i2 = qD(t2, "colorSaturation");
      return i2 && (e2 = ei(e2, null, null, i2)), n2 && (e2 = ni(e2, n2)), e2;
    }
  }
  function qD(t2, e2) {
    var n2 = t2[e2];
    if (null != n2 && "none" !== n2)
      return n2;
  }
  function KD(t2, e2) {
    var n2 = t2.get(e2);
    return H(n2) && n2.length ? { name: e2, range: n2 } : null;
  }
  var $D = Math.max;
  var JD = Math.min;
  var QD = nt;
  var tA = N;
  var eA = ["itemStyle", "borderWidth"];
  var nA = ["itemStyle", "gapWidth"];
  var iA = ["upperLabel", "show"];
  var rA = ["upperLabel", "height"];
  var oA = { seriesType: "treemap", reset: function(t2, e2, n2, i2) {
    var r2 = n2.getWidth(), o2 = n2.getHeight(), a2 = t2.option, s2 = Tp(t2.getBoxLayoutParams(), { width: n2.getWidth(), height: n2.getHeight() }), l2 = a2.size || [], u2 = Xr(QD(s2.width, l2[0]), r2), h2 = Xr(QD(s2.height, l2[1]), o2), c2 = i2 && i2.type, p2 = aD(i2, ["treemapZoomToNode", "treemapRootToNode"], t2), d2 = "treemapRender" === c2 || "treemapMove" === c2 ? i2.rootRect : null, f2 = t2.getViewRoot(), g2 = sD(f2);
    if ("treemapMove" !== c2) {
      var y2 = "treemapZoomToNode" === c2 ? function(t3, e3, n3, i3, r3) {
        var o3, a3 = (e3 || {}).node, s3 = [i3, r3];
        if (!a3 || a3 === n3)
          return s3;
        var l3 = i3 * r3, u3 = l3 * t3.option.zoomToNodeRatio;
        for (; o3 = a3.parentNode; ) {
          for (var h3 = 0, c3 = o3.children, p3 = 0, d3 = c3.length; p3 < d3; p3++)
            h3 += c3[p3].getValue();
          var f3 = a3.getValue();
          if (0 === f3)
            return s3;
          u3 *= h3 / f3;
          var g3 = o3.getModel(), y3 = g3.get(eA);
          (u3 += 4 * y3 * y3 + (3 * y3 + Math.max(y3, hA(g3))) * Math.pow(u3, 0.5)) > Qr && (u3 = Qr), a3 = o3;
        }
        u3 < l3 && (u3 = l3);
        var v3 = Math.pow(u3 / l3, 0.5);
        return [i3 * v3, r3 * v3];
      }(t2, p2, f2, u2, h2) : d2 ? [d2.width, d2.height] : [u2, h2], v2 = a2.sort;
      v2 && "asc" !== v2 && "desc" !== v2 && (v2 = "desc");
      var m2 = { squareRatio: a2.squareRatio, sort: v2, leafDepth: a2.leafDepth };
      f2.hostTree.clearLayouts();
      var x2 = { x: 0, y: 0, width: y2[0], height: y2[1], area: y2[0] * y2[1] };
      f2.setLayout(x2), aA(f2, m2, false, 0), x2 = f2.getLayout(), tA(g2, function(t3, e3) {
        var n3 = (g2[e3 + 1] || f2).getValue();
        t3.setLayout(D({ dataExtent: [n3, n3], borderWidth: 0, upperHeight: 0 }, x2));
      });
    }
    var _2 = t2.getData().tree.root;
    _2.setLayout(function(t3, e3, n3) {
      if (e3)
        return { x: e3.x, y: e3.y };
      var i3 = { x: 0, y: 0 };
      if (!n3)
        return i3;
      var r3 = n3.node, o3 = r3.getLayout();
      if (!o3)
        return i3;
      var a3 = [o3.width / 2, o3.height / 2], s3 = r3;
      for (; s3; ) {
        var l3 = s3.getLayout();
        a3[0] += l3.x, a3[1] += l3.y, s3 = s3.parentNode;
      }
      return { x: t3.width / 2 - a3[0], y: t3.height / 2 - a3[1] };
    }(s2, d2, p2), true), t2.setLayoutInfo(s2), uA(_2, new Ee(-s2.x, -s2.y, r2, o2), g2, f2, 0);
  } };
  function aA(t2, e2, n2, i2) {
    var r2, o2;
    if (!t2.isRemoved()) {
      var a2 = t2.getLayout();
      r2 = a2.width, o2 = a2.height;
      var s2 = t2.getModel(), l2 = s2.get(eA), u2 = s2.get(nA) / 2, h2 = hA(s2), c2 = Math.max(l2, h2), p2 = l2 - u2, d2 = c2 - u2;
      t2.setLayout({ borderWidth: l2, upperHeight: c2, upperLabelHeight: h2 }, true);
      var f2 = (r2 = $D(r2 - 2 * p2, 0)) * (o2 = $D(o2 - p2 - d2, 0)), g2 = function(t3, e3, n3, i3, r3, o3) {
        var a3 = t3.children || [], s3 = i3.sort;
        "asc" !== s3 && "desc" !== s3 && (s3 = null);
        var l3 = null != i3.leafDepth && i3.leafDepth <= o3;
        if (r3 && !l3)
          return t3.viewChildren = [];
        a3 = V(a3, function(t4) {
          return !t4.isRemoved();
        }), function(t4, e4) {
          e4 && t4.sort(function(t5, n4) {
            var i4 = "asc" === e4 ? t5.getValue() - n4.getValue() : n4.getValue() - t5.getValue();
            return 0 === i4 ? "asc" === e4 ? t5.dataIndex - n4.dataIndex : n4.dataIndex - t5.dataIndex : i4;
          });
        }(a3, s3);
        var u3 = function(t4, e4, n4) {
          for (var i4 = 0, r4 = 0, o4 = e4.length; r4 < o4; r4++)
            i4 += e4[r4].getValue();
          var a4, s4 = t4.get("visualDimension");
          e4 && e4.length ? "value" === s4 && n4 ? (a4 = [e4[e4.length - 1].getValue(), e4[0].getValue()], "asc" === n4 && a4.reverse()) : (a4 = [1 / 0, -1 / 0], tA(e4, function(t5) {
            var e5 = t5.getValue(s4);
            e5 < a4[0] && (a4[0] = e5), e5 > a4[1] && (a4[1] = e5);
          })) : a4 = [NaN, NaN];
          return { sum: i4, dataExtent: a4 };
        }(e3, a3, s3);
        if (0 === u3.sum)
          return t3.viewChildren = [];
        if (u3.sum = function(t4, e4, n4, i4, r4) {
          if (!i4)
            return n4;
          for (var o4 = t4.get("visibleMin"), a4 = r4.length, s4 = a4, l4 = a4 - 1; l4 >= 0; l4--) {
            var u4 = r4["asc" === i4 ? a4 - l4 - 1 : l4].getValue();
            u4 / n4 * e4 < o4 && (s4 = l4, n4 -= u4);
          }
          return "asc" === i4 ? r4.splice(0, a4 - s4) : r4.splice(s4, a4 - s4), n4;
        }(e3, n3, u3.sum, s3, a3), 0 === u3.sum)
          return t3.viewChildren = [];
        for (var h3 = 0, c3 = a3.length; h3 < c3; h3++) {
          var p3 = a3[h3].getValue() / u3.sum * n3;
          a3[h3].setLayout({ area: p3 });
        }
        l3 && (a3.length && t3.setLayout({ isLeafRoot: true }, true), a3.length = 0);
        return t3.viewChildren = a3, t3.setLayout({ dataExtent: u3.dataExtent }, true), a3;
      }(t2, s2, f2, e2, n2, i2);
      if (g2.length) {
        var y2 = { x: p2, y: d2, width: r2, height: o2 }, v2 = JD(r2, o2), m2 = 1 / 0, x2 = [];
        x2.area = 0;
        for (var _2 = 0, b2 = g2.length; _2 < b2; ) {
          var w2 = g2[_2];
          x2.push(w2), x2.area += w2.getLayout().area;
          var S2 = sA(x2, v2, e2.squareRatio);
          S2 <= m2 ? (_2++, m2 = S2) : (x2.area -= x2.pop().getLayout().area, lA(x2, v2, y2, u2, false), v2 = JD(y2.width, y2.height), x2.length = x2.area = 0, m2 = 1 / 0);
        }
        if (x2.length && lA(x2, v2, y2, u2, true), !n2) {
          var M2 = s2.get("childrenVisibleMin");
          null != M2 && f2 < M2 && (n2 = true);
        }
        for (_2 = 0, b2 = g2.length; _2 < b2; _2++)
          aA(g2[_2], e2, n2, i2 + 1);
      }
    }
  }
  function sA(t2, e2, n2) {
    for (var i2 = 0, r2 = 1 / 0, o2 = 0, a2 = void 0, s2 = t2.length; o2 < s2; o2++)
      (a2 = t2[o2].getLayout().area) && (a2 < r2 && (r2 = a2), a2 > i2 && (i2 = a2));
    var l2 = t2.area * t2.area, u2 = e2 * e2 * n2;
    return l2 ? $D(u2 * i2 / l2, l2 / (u2 * r2)) : 1 / 0;
  }
  function lA(t2, e2, n2, i2, r2) {
    var o2 = e2 === n2.width ? 0 : 1, a2 = 1 - o2, s2 = ["x", "y"], l2 = ["width", "height"], u2 = n2[s2[o2]], h2 = e2 ? t2.area / e2 : 0;
    (r2 || h2 > n2[l2[a2]]) && (h2 = n2[l2[a2]]);
    for (var c2 = 0, p2 = t2.length; c2 < p2; c2++) {
      var d2 = t2[c2], f2 = {}, g2 = h2 ? d2.getLayout().area / h2 : 0, y2 = f2[l2[a2]] = $D(h2 - 2 * i2, 0), v2 = n2[s2[o2]] + n2[l2[o2]] - u2, m2 = c2 === p2 - 1 || v2 < g2 ? v2 : g2, x2 = f2[l2[o2]] = $D(m2 - 2 * i2, 0);
      f2[s2[a2]] = n2[s2[a2]] + JD(i2, y2 / 2), f2[s2[o2]] = u2 + JD(i2, x2 / 2), u2 += m2, d2.setLayout(f2, true);
    }
    n2[s2[a2]] += h2, n2[l2[a2]] -= h2;
  }
  function uA(t2, e2, n2, i2, r2) {
    var o2 = t2.getLayout(), a2 = n2[r2], s2 = a2 && a2 === t2;
    if (!(a2 && !s2 || r2 === n2.length && t2 !== i2)) {
      t2.setLayout({ isInView: true, invisible: !s2 && !e2.intersect(o2), isAboveViewRoot: s2 }, true);
      var l2 = new Ee(e2.x - o2.x, e2.y - o2.y, e2.width, e2.height);
      tA(t2.viewChildren || [], function(t3) {
        uA(t3, l2, n2, i2, r2 + 1);
      });
    }
  }
  function hA(t2) {
    return t2.get(iA) ? t2.get(rA) : 0;
  }
  function cA(t2) {
    var e2 = t2.findComponents({ mainType: "legend" });
    e2 && e2.length && t2.eachSeriesByType("graph", function(t3) {
      var n2 = t3.getCategoriesData(), i2 = t3.getGraph().data, r2 = n2.mapArray(n2.getName);
      i2.filterSelf(function(t4) {
        var n3 = i2.getItemModel(t4).getShallow("category");
        if (null != n3) {
          Z(n3) && (n3 = r2[n3]);
          for (var o2 = 0; o2 < e2.length; o2++)
            if (!e2[o2].isSelected(n3))
              return false;
        }
        return true;
      });
    });
  }
  function pA(t2) {
    var e2 = {};
    t2.eachSeriesByType("graph", function(t3) {
      var n2 = t3.getCategoriesData(), i2 = t3.getData(), r2 = {};
      n2.each(function(i3) {
        var o2 = n2.getName(i3);
        r2["ec-" + o2] = i3;
        var a2 = n2.getItemModel(i3), s2 = a2.getModel("itemStyle").getItemStyle();
        s2.fill || (s2.fill = t3.getColorFromPalette(o2, e2)), n2.setItemVisual(i3, "style", s2);
        for (var l2 = ["symbol", "symbolSize", "symbolKeepAspect"], u2 = 0; u2 < l2.length; u2++) {
          var h2 = a2.getShallow(l2[u2], true);
          null != h2 && n2.setItemVisual(i3, l2[u2], h2);
        }
      }), n2.count() && i2.each(function(t4) {
        var e3 = i2.getItemModel(t4).getShallow("category");
        if (null != e3) {
          X(e3) && (e3 = r2["ec-" + e3]);
          var o2 = n2.getItemVisual(e3, "style");
          D(i2.ensureUniqueItemVisual(t4, "style"), o2);
          for (var a2 = ["symbol", "symbolSize", "symbolKeepAspect"], s2 = 0; s2 < a2.length; s2++)
            i2.setItemVisual(t4, a2[s2], n2.getItemVisual(e3, a2[s2]));
        }
      });
    });
  }
  function dA(t2) {
    return t2 instanceof Array || (t2 = [t2, t2]), t2;
  }
  function fA(t2) {
    t2.eachSeriesByType("graph", function(t3) {
      var e2 = t3.getGraph(), n2 = t3.getEdgeData(), i2 = dA(t3.get("edgeSymbol")), r2 = dA(t3.get("edgeSymbolSize"));
      n2.setVisual("fromSymbol", i2 && i2[0]), n2.setVisual("toSymbol", i2 && i2[1]), n2.setVisual("fromSymbolSize", r2 && r2[0]), n2.setVisual("toSymbolSize", r2 && r2[1]), n2.setVisual("style", t3.getModel("lineStyle").getLineStyle()), n2.each(function(t4) {
        var i3 = n2.getItemModel(t4), r3 = e2.getEdgeByIndex(t4), o2 = dA(i3.getShallow("symbol", true)), a2 = dA(i3.getShallow("symbolSize", true)), s2 = i3.getModel("lineStyle").getLineStyle(), l2 = n2.ensureUniqueItemVisual(t4, "style");
        switch (D(l2, s2), l2.stroke) {
          case "source":
            var u2 = r3.node1.getVisual("style");
            l2.stroke = u2 && u2.fill;
            break;
          case "target":
            u2 = r3.node2.getVisual("style");
            l2.stroke = u2 && u2.fill;
        }
        o2[0] && r3.setVisual("fromSymbol", o2[0]), o2[1] && r3.setVisual("toSymbol", o2[1]), a2[0] && r3.setVisual("fromSymbolSize", a2[0]), a2[1] && r3.setVisual("toSymbolSize", a2[1]);
      });
    });
  }
  var gA = "-->";
  var yA = function(t2) {
    return t2.get("autoCurveness") || null;
  };
  var vA = function(t2, e2) {
    var n2 = yA(t2), i2 = 20, r2 = [];
    if (Z(n2))
      i2 = n2;
    else if (H(n2))
      return void (t2.__curvenessList = n2);
    e2 > i2 && (i2 = e2);
    var o2 = i2 % 2 ? i2 + 2 : i2 + 3;
    r2 = [];
    for (var a2 = 0; a2 < o2; a2++)
      r2.push((a2 % 2 ? a2 + 1 : a2) / 10 * (a2 % 2 ? -1 : 1));
    t2.__curvenessList = r2;
  };
  var mA = function(t2, e2, n2) {
    var i2 = [t2.id, t2.dataIndex].join("."), r2 = [e2.id, e2.dataIndex].join(".");
    return [n2.uid, i2, r2].join(gA);
  };
  var xA = function(t2) {
    var e2 = t2.split(gA);
    return [e2[0], e2[2], e2[1]].join(gA);
  };
  var _A = function(t2, e2) {
    var n2 = e2.__edgeMap;
    return n2[t2] ? n2[t2].length : 0;
  };
  function bA(t2, e2, n2, i2) {
    var r2 = yA(e2), o2 = H(r2);
    if (!r2)
      return null;
    var a2 = function(t3, e3) {
      var n3 = mA(t3.node1, t3.node2, e3);
      return e3.__edgeMap[n3];
    }(t2, e2);
    if (!a2)
      return null;
    for (var s2 = -1, l2 = 0; l2 < a2.length; l2++)
      if (a2[l2] === n2) {
        s2 = l2;
        break;
      }
    var u2 = function(t3, e3) {
      return _A(mA(t3.node1, t3.node2, e3), e3) + _A(mA(t3.node2, t3.node1, e3), e3);
    }(t2, e2);
    vA(e2, u2), t2.lineStyle = t2.lineStyle || {};
    var h2 = mA(t2.node1, t2.node2, e2), c2 = e2.__curvenessList, p2 = o2 || u2 % 2 ? 0 : 1;
    if (a2.isForward)
      return c2[p2 + s2];
    var d2 = xA(h2), f2 = _A(d2, e2), g2 = c2[s2 + f2 + p2];
    return i2 ? o2 ? r2 && 0 === r2[0] ? (f2 + p2) % 2 ? g2 : -g2 : ((f2 % 2 ? 0 : 1) + p2) % 2 ? g2 : -g2 : (f2 + p2) % 2 ? g2 : -g2 : c2[s2 + f2 + p2];
  }
  function wA(t2) {
    var e2 = t2.coordinateSystem;
    if (!e2 || "view" === e2.type) {
      var n2 = t2.getGraph();
      n2.eachNode(function(t3) {
        var e3 = t3.getModel();
        t3.setLayout([+e3.get("x"), +e3.get("y")]);
      }), SA(n2, t2);
    }
  }
  function SA(t2, e2) {
    t2.eachEdge(function(t3, n2) {
      var i2 = rt(t3.getModel().get(["lineStyle", "curveness"]), -bA(t3, e2, n2, true), 0), r2 = It(t3.node1.getLayout()), o2 = It(t3.node2.getLayout()), a2 = [r2, o2];
      +i2 && a2.push([(r2[0] + o2[0]) / 2 - (r2[1] - o2[1]) * i2, (r2[1] + o2[1]) / 2 - (o2[0] - r2[0]) * i2]), t3.setLayout(a2);
    });
  }
  function MA(t2, e2) {
    t2.eachSeriesByType("graph", function(t3) {
      var e3 = t3.get("layout"), n2 = t3.coordinateSystem;
      if (n2 && "view" !== n2.type) {
        var i2 = t3.getData(), r2 = [];
        N(n2.dimensions, function(t4) {
          r2 = r2.concat(i2.mapDimensionsAll(t4));
        });
        for (var o2 = 0; o2 < i2.count(); o2++) {
          for (var a2 = [], s2 = false, l2 = 0; l2 < r2.length; l2++) {
            var u2 = i2.get(r2[l2], o2);
            isNaN(u2) || (s2 = true), a2.push(u2);
          }
          s2 ? i2.setItemLayout(o2, n2.dataToPoint(a2)) : i2.setItemLayout(o2, [NaN, NaN]);
        }
        SA(i2.graph, t3);
      } else
        e3 && "none" !== e3 || wA(t3);
    });
  }
  function IA(t2) {
    var e2 = t2.coordinateSystem;
    if ("view" !== e2.type)
      return 1;
    var n2 = t2.option.nodeScaleRatio, i2 = e2.scaleX;
    return ((e2.getZoom() - 1) * n2 + 1) / i2;
  }
  function TA(t2) {
    var e2 = t2.getVisual("symbolSize");
    return e2 instanceof Array && (e2 = (e2[0] + e2[1]) / 2), +e2;
  }
  var CA = Math.PI;
  var DA = [];
  function AA(t2, e2, n2, i2) {
    var r2 = t2.coordinateSystem;
    if (!r2 || "view" === r2.type) {
      var o2 = r2.getBoundingRect(), a2 = t2.getData(), s2 = a2.graph, l2 = o2.width / 2 + o2.x, u2 = o2.height / 2 + o2.y, h2 = Math.min(o2.width, o2.height) / 2, c2 = a2.count();
      if (a2.setLayout({ cx: l2, cy: u2 }), c2) {
        if (n2) {
          var p2 = r2.pointToData(i2), d2 = p2[0], f2 = p2[1], g2 = [d2 - l2, f2 - u2];
          Nt(g2, g2), Rt(g2, g2, h2), n2.setLayout([l2 + g2[0], u2 + g2[1]], true), LA(n2, t2.get(["circular", "rotateLabel"]), l2, u2);
        }
        kA[e2](t2, s2, a2, h2, l2, u2, c2), s2.eachEdge(function(e3, n3) {
          var i3, r3 = rt(e3.getModel().get(["lineStyle", "curveness"]), bA(e3, t2, n3), 0), o3 = It(e3.node1.getLayout()), a3 = It(e3.node2.getLayout()), s3 = (o3[0] + a3[0]) / 2, h3 = (o3[1] + a3[1]) / 2;
          +r3 && (i3 = [l2 * (r3 *= 3) + s3 * (1 - r3), u2 * r3 + h3 * (1 - r3)]), e3.setLayout([o3, a3, i3]);
        });
      }
    }
  }
  var kA = { value: function(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = 0, l2 = n2.getSum("value"), u2 = 2 * Math.PI / (l2 || a2);
    e2.eachNode(function(t3) {
      var e3 = t3.getValue("value"), n3 = u2 * (l2 ? e3 : 1) / 2;
      s2 += n3, t3.setLayout([i2 * Math.cos(s2) + r2, i2 * Math.sin(s2) + o2]), s2 += n3;
    });
  }, symbolSize: function(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = 0;
    DA.length = a2;
    var l2 = IA(t2);
    e2.eachNode(function(t3) {
      var e3 = TA(t3);
      isNaN(e3) && (e3 = 2), e3 < 0 && (e3 = 0), e3 *= l2;
      var n3 = Math.asin(e3 / 2 / i2);
      isNaN(n3) && (n3 = CA / 2), DA[t3.dataIndex] = n3, s2 += 2 * n3;
    });
    var u2 = (2 * CA - s2) / a2 / 2, h2 = 0;
    e2.eachNode(function(t3) {
      var e3 = u2 + DA[t3.dataIndex];
      h2 += e3, (!t3.getLayout() || !t3.getLayout().fixed) && t3.setLayout([i2 * Math.cos(h2) + r2, i2 * Math.sin(h2) + o2]), h2 += e3;
    });
  } };
  function LA(t2, e2, n2, i2) {
    var r2 = t2.getGraphicEl();
    if (r2) {
      var o2 = t2.getModel().get(["label", "rotate"]) || 0, a2 = r2.getSymbolPath();
      if (e2) {
        var s2 = t2.getLayout(), l2 = Math.atan2(s2[1] - i2, s2[0] - n2);
        l2 < 0 && (l2 = 2 * Math.PI + l2);
        var u2 = s2[0] < n2;
        u2 && (l2 -= Math.PI);
        var h2 = u2 ? "left" : "right";
        a2.setTextConfig({ rotation: -l2, position: h2, origin: "center" });
        var c2 = a2.ensureState("emphasis");
        D(c2.textConfig || (c2.textConfig = {}), { position: h2 });
      } else
        a2.setTextConfig({ rotation: o2 *= Math.PI / 180 });
    }
  }
  function PA(t2) {
    t2.eachSeriesByType("graph", function(t3) {
      "circular" === t3.get("layout") && AA(t3, "symbolSize");
    });
  }
  var OA = Dt;
  function RA(t2) {
    t2.eachSeriesByType("graph", function(t3) {
      var e2 = t3.coordinateSystem;
      if (!e2 || "view" === e2.type)
        if ("force" === t3.get("layout")) {
          var n2 = t3.preservedPoints || {}, i2 = t3.getGraph(), r2 = i2.data, o2 = i2.edgeData, a2 = t3.getModel("force"), s2 = a2.get("initLayout");
          t3.preservedPoints ? r2.each(function(t4) {
            var e3 = r2.getId(t4);
            r2.setItemLayout(t4, n2[e3] || [NaN, NaN]);
          }) : s2 && "none" !== s2 ? "circular" === s2 && AA(t3, "value") : wA(t3);
          var l2 = r2.getDataExtent("value"), u2 = o2.getDataExtent("value"), h2 = a2.get("repulsion"), c2 = a2.get("edgeLength"), p2 = H(h2) ? h2 : [h2, h2], d2 = H(c2) ? c2 : [c2, c2];
          d2 = [d2[1], d2[0]];
          var f2 = r2.mapArray("value", function(t4, e3) {
            var n3 = r2.getItemLayout(e3), i3 = Yr(t4, l2, p2);
            return isNaN(i3) && (i3 = (p2[0] + p2[1]) / 2), { w: i3, rep: i3, fixed: r2.getItemModel(e3).get("fixed"), p: !n3 || isNaN(n3[0]) || isNaN(n3[1]) ? null : n3 };
          }), g2 = o2.mapArray("value", function(e3, n3) {
            var r3 = i2.getEdgeByIndex(n3), o3 = Yr(e3, u2, d2);
            isNaN(o3) && (o3 = (d2[0] + d2[1]) / 2);
            var a3 = r3.getModel(), s3 = rt(r3.getModel().get(["lineStyle", "curveness"]), -bA(r3, t3, n3, true), 0);
            return { n1: f2[r3.node1.dataIndex], n2: f2[r3.node2.dataIndex], d: o3, curveness: s3, ignoreForceLayout: a3.get("ignoreForceLayout") };
          }), y2 = e2.getBoundingRect(), v2 = function(t4, e3, n3) {
            for (var i3 = t4, r3 = e3, o3 = n3.rect, a3 = o3.width, s3 = o3.height, l3 = [o3.x + a3 / 2, o3.y + s3 / 2], u3 = null == n3.gravity ? 0.1 : n3.gravity, h3 = 0; h3 < i3.length; h3++) {
              var c3 = i3[h3];
              c3.p || (c3.p = St(a3 * (Math.random() - 0.5) + l3[0], s3 * (Math.random() - 0.5) + l3[1])), c3.pp = It(c3.p), c3.edges = null;
            }
            var p3, d3, f3 = null == n3.friction ? 0.6 : n3.friction, g3 = f3;
            return { warmUp: function() {
              g3 = 0.8 * f3;
            }, setFixed: function(t5) {
              i3[t5].fixed = true;
            }, setUnfixed: function(t5) {
              i3[t5].fixed = false;
            }, beforeStep: function(t5) {
              p3 = t5;
            }, afterStep: function(t5) {
              d3 = t5;
            }, step: function(t5) {
              p3 && p3(i3, r3);
              for (var e4 = [], n4 = i3.length, o4 = 0; o4 < r3.length; o4++) {
                var a4 = r3[o4];
                if (!a4.ignoreForceLayout) {
                  var s4 = a4.n1;
                  At(e4, (y3 = a4.n2).p, s4.p);
                  var h4 = kt(e4) - a4.d, c4 = y3.w / (s4.w + y3.w);
                  isNaN(c4) && (c4 = 0), Nt(e4, e4), !s4.fixed && OA(s4.p, s4.p, e4, c4 * h4 * g3), !y3.fixed && OA(y3.p, y3.p, e4, -(1 - c4) * h4 * g3);
                }
              }
              for (o4 = 0; o4 < n4; o4++)
                (x2 = i3[o4]).fixed || (At(e4, l3, x2.p), OA(x2.p, x2.p, e4, u3 * g3));
              for (o4 = 0; o4 < n4; o4++) {
                s4 = i3[o4];
                for (var f4 = o4 + 1; f4 < n4; f4++) {
                  var y3;
                  At(e4, (y3 = i3[f4]).p, s4.p), 0 === (h4 = kt(e4)) && (Tt(e4, Math.random() - 0.5, Math.random() - 0.5), h4 = 1);
                  var v3 = (s4.rep + y3.rep) / h4 / h4;
                  !s4.fixed && OA(s4.pp, s4.pp, e4, v3), !y3.fixed && OA(y3.pp, y3.pp, e4, -v3);
                }
              }
              var m2 = [];
              for (o4 = 0; o4 < n4; o4++) {
                var x2;
                (x2 = i3[o4]).fixed || (At(m2, x2.p, x2.pp), OA(x2.p, x2.p, m2, g3), Mt(x2.pp, x2.p));
              }
              var _2 = (g3 *= 0.992) < 0.01;
              d3 && d3(i3, r3, _2), t5 && t5(_2);
            } };
          }(f2, g2, { rect: y2, gravity: a2.get("gravity"), friction: a2.get("friction") });
          v2.beforeStep(function(t4, e3) {
            for (var n3 = 0, r3 = t4.length; n3 < r3; n3++)
              t4[n3].fixed && Mt(t4[n3].p, i2.getNodeByIndex(n3).getLayout());
          }), v2.afterStep(function(t4, e3, o3) {
            for (var a3 = 0, s3 = t4.length; a3 < s3; a3++)
              t4[a3].fixed || i2.getNodeByIndex(a3).setLayout(t4[a3].p), n2[r2.getId(a3)] = t4[a3].p;
            for (a3 = 0, s3 = e3.length; a3 < s3; a3++) {
              var l3 = e3[a3], u3 = i2.getEdgeByIndex(a3), h3 = l3.n1.p, c3 = l3.n2.p, p3 = u3.getLayout();
              (p3 = p3 ? p3.slice() : [])[0] = p3[0] || [], p3[1] = p3[1] || [], Mt(p3[0], h3), Mt(p3[1], c3), +l3.curveness && (p3[2] = [(h3[0] + c3[0]) / 2 - (h3[1] - c3[1]) * l3.curveness, (h3[1] + c3[1]) / 2 - (c3[0] - h3[0]) * l3.curveness]), u3.setLayout(p3);
            }
          }), t3.forceLayout = v2, t3.preservedPoints = n2, v2.step();
        } else
          t3.forceLayout = null;
    });
  }
  function NA(t2, e2) {
    var n2 = [];
    return t2.eachSeriesByType("graph", function(t3) {
      var i2 = t3.get("coordinateSystem");
      if (!i2 || "view" === i2) {
        var r2 = t3.getData(), o2 = [], a2 = [];
        Oa(r2.mapArray(function(t4) {
          var e3 = r2.getItemModel(t4);
          return [+e3.get("x"), +e3.get("y")];
        }), o2, a2), a2[0] - o2[0] == 0 && (a2[0] += 1, o2[0] -= 1), a2[1] - o2[1] == 0 && (a2[1] += 1, o2[1] -= 1);
        var s2 = (a2[0] - o2[0]) / (a2[1] - o2[1]), l2 = function(t4, e3, n3) {
          return Tp(D(t4.getBoxLayoutParams(), { aspect: n3 }), { width: e3.getWidth(), height: e3.getHeight() });
        }(t3, e2, s2);
        isNaN(s2) && (o2 = [l2.x, l2.y], a2 = [l2.x + l2.width, l2.y + l2.height]);
        var u2 = a2[0] - o2[0], h2 = a2[1] - o2[1], c2 = l2.width, p2 = l2.height, d2 = t3.coordinateSystem = new yC();
        d2.zoomLimit = t3.get("scaleLimit"), d2.setBoundingRect(o2[0], o2[1], u2, h2), d2.setViewRect(l2.x, l2.y, c2, p2), d2.setCenter(t3.get("center"), e2), d2.setZoom(t3.get("zoom")), n2.push(d2);
      }
    }), n2;
  }
  var EA = Uu.prototype;
  var zA = Ku.prototype;
  var VA = function() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
  };
  !function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    e(n2, t2);
  }(VA);
  function BA(t2) {
    return isNaN(+t2.cpx1) || isNaN(+t2.cpy1);
  }
  var FA = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "ec-line", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new VA();
    }, n2.prototype.buildPath = function(t3, e2) {
      BA(e2) ? EA.buildPath.call(this, t3, e2) : zA.buildPath.call(this, t3, e2);
    }, n2.prototype.pointAt = function(t3) {
      return BA(this.shape) ? EA.pointAt.call(this, t3) : zA.pointAt.call(this, t3);
    }, n2.prototype.tangentAt = function(t3) {
      var e2 = this.shape, n3 = BA(e2) ? [e2.x2 - e2.x1, e2.y2 - e2.y1] : zA.tangentAt.call(this, t3);
      return Nt(n3, n3);
    }, n2;
  }(Ms);
  var GA = ["fromSymbol", "toSymbol"];
  function WA(t2) {
    return "_" + t2 + "Type";
  }
  function HA(t2, e2, n2) {
    var i2 = e2.getItemVisual(n2, t2);
    if (!i2 || "none" === i2)
      return i2;
    var r2 = e2.getItemVisual(n2, t2 + "Size"), o2 = e2.getItemVisual(n2, t2 + "Rotate"), a2 = e2.getItemVisual(n2, t2 + "Offset"), s2 = e2.getItemVisual(n2, t2 + "KeepAspect"), l2 = Wy(r2);
    return i2 + l2 + Hy(a2 || 0, l2) + (o2 || "") + (s2 || "");
  }
  function YA(t2, e2, n2) {
    var i2 = e2.getItemVisual(n2, t2);
    if (i2 && "none" !== i2) {
      var r2 = e2.getItemVisual(n2, t2 + "Size"), o2 = e2.getItemVisual(n2, t2 + "Rotate"), a2 = e2.getItemVisual(n2, t2 + "Offset"), s2 = e2.getItemVisual(n2, t2 + "KeepAspect"), l2 = Wy(r2), u2 = Hy(a2 || 0, l2), h2 = Gy(i2, -l2[0] / 2 + u2[0], -l2[1] / 2 + u2[1], l2[0], l2[1], null, s2);
      return h2.__specifiedRotation = null == o2 || isNaN(o2) ? void 0 : +o2 * Math.PI / 180 || 0, h2.name = t2, h2;
    }
  }
  function XA(t2, e2) {
    t2.x1 = e2[0][0], t2.y1 = e2[0][1], t2.x2 = e2[1][0], t2.y2 = e2[1][1], t2.percent = 1;
    var n2 = e2[2];
    n2 ? (t2.cpx1 = n2[0], t2.cpy1 = n2[1]) : (t2.cpx1 = NaN, t2.cpy1 = NaN);
  }
  var UA = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this) || this;
      return r2._createLine(e2, n3, i2), r2;
    }
    return e(n2, t2), n2.prototype._createLine = function(t3, e2, n3) {
      var i2 = t3.hostModel, r2 = function(t4) {
        var e3 = new FA({ name: "line", subPixelOptimize: true });
        return XA(e3.shape, t4), e3;
      }(t3.getItemLayout(e2));
      r2.shape.percent = 0, fh(r2, { shape: { percent: 1 } }, i2, e2), this.add(r2), N(GA, function(n4) {
        var i3 = YA(n4, t3, e2);
        this.add(i3), this[WA(n4)] = HA(n4, t3, e2);
      }, this), this._updateCommonStl(t3, e2, n3);
    }, n2.prototype.updateData = function(t3, e2, n3) {
      var i2 = t3.hostModel, r2 = this.childOfName("line"), o2 = t3.getItemLayout(e2), a2 = { shape: {} };
      XA(a2.shape, o2), dh(r2, a2, i2, e2), N(GA, function(n4) {
        var i3 = HA(n4, t3, e2), r3 = WA(n4);
        if (this[r3] !== i3) {
          this.remove(this.childOfName(n4));
          var o3 = YA(n4, t3, e2);
          this.add(o3);
        }
        this[r3] = i3;
      }, this), this._updateCommonStl(t3, e2, n3);
    }, n2.prototype.getLinePath = function() {
      return this.childAt(0);
    }, n2.prototype._updateCommonStl = function(t3, e2, n3) {
      var i2 = t3.hostModel, r2 = this.childOfName("line"), o2 = n3 && n3.emphasisLineStyle, a2 = n3 && n3.blurLineStyle, s2 = n3 && n3.selectLineStyle, l2 = n3 && n3.labelStatesModels, u2 = n3 && n3.emphasisDisabled, h2 = n3 && n3.focus, c2 = n3 && n3.blurScope;
      if (!n3 || t3.hasItemOption) {
        var p2 = t3.getItemModel(e2), d2 = p2.getModel("emphasis");
        o2 = d2.getModel("lineStyle").getLineStyle(), a2 = p2.getModel(["blur", "lineStyle"]).getLineStyle(), s2 = p2.getModel(["select", "lineStyle"]).getLineStyle(), u2 = d2.get("disabled"), h2 = d2.get("focus"), c2 = d2.get("blurScope"), l2 = tc(p2);
      }
      var f2 = t3.getItemVisual(e2, "style"), g2 = f2.stroke;
      r2.useStyle(f2), r2.style.fill = null, r2.style.strokeNoScale = true, r2.ensureState("emphasis").style = o2, r2.ensureState("blur").style = a2, r2.ensureState("select").style = s2, N(GA, function(t4) {
        var e3 = this.childOfName(t4);
        if (e3) {
          e3.setColor(g2), e3.style.opacity = f2.opacity;
          for (var n4 = 0; n4 < rl.length; n4++) {
            var i3 = rl[n4], o3 = r2.getState(i3);
            if (o3) {
              var a3 = o3.style || {}, s3 = e3.ensureState(i3), l3 = s3.style || (s3.style = {});
              null != a3.stroke && (l3[e3.__isEmptyBrush ? "stroke" : "fill"] = a3.stroke), null != a3.opacity && (l3.opacity = a3.opacity);
            }
          }
          e3.markRedraw();
        }
      }, this);
      var y2 = i2.getRawValue(e2);
      Qh(this, l2, { labelDataIndex: e2, labelFetcher: { getFormattedLabel: function(e3, n4) {
        return i2.getFormattedLabel(e3, n4, t3.dataType);
      } }, inheritColor: g2 || "#000", defaultOpacity: f2.opacity, defaultText: (null == y2 ? t3.getName(e2) : isFinite(y2) ? Ur(y2) : y2) + "" });
      var v2 = this.getTextContent();
      if (v2) {
        var m2 = l2.normal;
        v2.__align = v2.style.align, v2.__verticalAlign = v2.style.verticalAlign, v2.__position = m2.get("position") || "middle";
        var x2 = m2.get("distance");
        H(x2) || (x2 = [x2, x2]), v2.__labelDistance = x2;
      }
      this.setTextConfig({ position: null, local: true, inside: false }), Hl(this, h2, c2, u2);
    }, n2.prototype.highlight = function() {
      Al(this);
    }, n2.prototype.downplay = function() {
      kl(this);
    }, n2.prototype.updateLayout = function(t3, e2) {
      this.setLinePoints(t3.getItemLayout(e2));
    }, n2.prototype.setLinePoints = function(t3) {
      var e2 = this.childOfName("line");
      XA(e2.shape, t3), e2.dirty();
    }, n2.prototype.beforeUpdate = function() {
      var t3 = this, e2 = t3.childOfName("fromSymbol"), n3 = t3.childOfName("toSymbol"), i2 = t3.getTextContent();
      if (e2 || n3 || i2 && !i2.ignore) {
        for (var r2 = 1, o2 = this.parent; o2; )
          o2.scaleX && (r2 /= o2.scaleX), o2 = o2.parent;
        var a2 = t3.childOfName("line");
        if (this.__dirty || a2.__dirty) {
          var s2 = a2.shape.percent, l2 = a2.pointAt(0), u2 = a2.pointAt(s2), h2 = At([], u2, l2);
          if (Nt(h2, h2), e2 && (e2.setPosition(l2), S2(e2, 0), e2.scaleX = e2.scaleY = r2 * s2, e2.markRedraw()), n3 && (n3.setPosition(u2), S2(n3, 1), n3.scaleX = n3.scaleY = r2 * s2, n3.markRedraw()), i2 && !i2.ignore) {
            i2.x = i2.y = 0, i2.originX = i2.originY = 0;
            var c2 = void 0, p2 = void 0, d2 = i2.__labelDistance, f2 = d2[0] * r2, g2 = d2[1] * r2, y2 = s2 / 2, v2 = a2.tangentAt(y2), m2 = [v2[1], -v2[0]], x2 = a2.pointAt(y2);
            m2[1] > 0 && (m2[0] = -m2[0], m2[1] = -m2[1]);
            var _2 = v2[0] < 0 ? -1 : 1;
            if ("start" !== i2.__position && "end" !== i2.__position) {
              var b2 = -Math.atan2(v2[1], v2[0]);
              u2[0] < l2[0] && (b2 = Math.PI + b2), i2.rotation = b2;
            }
            var w2 = void 0;
            switch (i2.__position) {
              case "insideStartTop":
              case "insideMiddleTop":
              case "insideEndTop":
              case "middle":
                w2 = -g2, p2 = "bottom";
                break;
              case "insideStartBottom":
              case "insideMiddleBottom":
              case "insideEndBottom":
                w2 = g2, p2 = "top";
                break;
              default:
                w2 = 0, p2 = "middle";
            }
            switch (i2.__position) {
              case "end":
                i2.x = h2[0] * f2 + u2[0], i2.y = h2[1] * g2 + u2[1], c2 = h2[0] > 0.8 ? "left" : h2[0] < -0.8 ? "right" : "center", p2 = h2[1] > 0.8 ? "top" : h2[1] < -0.8 ? "bottom" : "middle";
                break;
              case "start":
                i2.x = -h2[0] * f2 + l2[0], i2.y = -h2[1] * g2 + l2[1], c2 = h2[0] > 0.8 ? "right" : h2[0] < -0.8 ? "left" : "center", p2 = h2[1] > 0.8 ? "bottom" : h2[1] < -0.8 ? "top" : "middle";
                break;
              case "insideStartTop":
              case "insideStart":
              case "insideStartBottom":
                i2.x = f2 * _2 + l2[0], i2.y = l2[1] + w2, c2 = v2[0] < 0 ? "right" : "left", i2.originX = -f2 * _2, i2.originY = -w2;
                break;
              case "insideMiddleTop":
              case "insideMiddle":
              case "insideMiddleBottom":
              case "middle":
                i2.x = x2[0], i2.y = x2[1] + w2, c2 = "center", i2.originY = -w2;
                break;
              case "insideEndTop":
              case "insideEnd":
              case "insideEndBottom":
                i2.x = -f2 * _2 + u2[0], i2.y = u2[1] + w2, c2 = v2[0] >= 0 ? "right" : "left", i2.originX = f2 * _2, i2.originY = -w2;
            }
            i2.scaleX = i2.scaleY = r2, i2.setStyle({ verticalAlign: i2.__verticalAlign || p2, align: i2.__align || c2 });
          }
        }
      }
      function S2(t4, e3) {
        var n4 = t4.__specifiedRotation;
        if (null == n4) {
          var i3 = a2.tangentAt(e3);
          t4.attr("rotation", (1 === e3 ? -1 : 1) * Math.PI / 2 - Math.atan2(i3[1], i3[0]));
        } else
          t4.attr("rotation", n4);
      }
    }, n2;
  }(Er);
  var ZA = function() {
    function t2(t3) {
      this.group = new Er(), this._LineCtor = t3 || UA;
    }
    return t2.prototype.updateData = function(t3) {
      var e2 = this;
      this._progressiveEls = null;
      var n2 = this, i2 = n2.group, r2 = n2._lineData;
      n2._lineData = t3, r2 || i2.removeAll();
      var o2 = jA(t3);
      t3.diff(r2).add(function(n3) {
        e2._doAdd(t3, n3, o2);
      }).update(function(n3, i3) {
        e2._doUpdate(r2, t3, i3, n3, o2);
      }).remove(function(t4) {
        i2.remove(r2.getItemGraphicEl(t4));
      }).execute();
    }, t2.prototype.updateLayout = function() {
      var t3 = this._lineData;
      t3 && t3.eachItemGraphicEl(function(e2, n2) {
        e2.updateLayout(t3, n2);
      }, this);
    }, t2.prototype.incrementalPrepareUpdate = function(t3) {
      this._seriesScope = jA(t3), this._lineData = null, this.group.removeAll();
    }, t2.prototype.incrementalUpdate = function(t3, e2) {
      function n2(t4) {
        t4.isGroup || function(t5) {
          return t5.animators && t5.animators.length > 0;
        }(t4) || (t4.incremental = true, t4.ensureState("emphasis").hoverLayer = true);
      }
      this._progressiveEls = [];
      for (var i2 = t3.start; i2 < t3.end; i2++) {
        if (KA(e2.getItemLayout(i2))) {
          var r2 = new this._LineCtor(e2, i2, this._seriesScope);
          r2.traverse(n2), this.group.add(r2), e2.setItemGraphicEl(i2, r2), this._progressiveEls.push(r2);
        }
      }
    }, t2.prototype.remove = function() {
      this.group.removeAll();
    }, t2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, t2.prototype._doAdd = function(t3, e2, n2) {
      if (KA(t3.getItemLayout(e2))) {
        var i2 = new this._LineCtor(t3, e2, n2);
        t3.setItemGraphicEl(e2, i2), this.group.add(i2);
      }
    }, t2.prototype._doUpdate = function(t3, e2, n2, i2, r2) {
      var o2 = t3.getItemGraphicEl(n2);
      KA(e2.getItemLayout(i2)) ? (o2 ? o2.updateData(e2, i2, r2) : o2 = new this._LineCtor(e2, i2, r2), e2.setItemGraphicEl(i2, o2), this.group.add(o2)) : this.group.remove(o2);
    }, t2;
  }();
  function jA(t2) {
    var e2 = t2.hostModel, n2 = e2.getModel("emphasis");
    return { lineStyle: e2.getModel("lineStyle").getLineStyle(), emphasisLineStyle: n2.getModel(["lineStyle"]).getLineStyle(), blurLineStyle: e2.getModel(["blur", "lineStyle"]).getLineStyle(), selectLineStyle: e2.getModel(["select", "lineStyle"]).getLineStyle(), emphasisDisabled: n2.get("disabled"), blurScope: n2.get("blurScope"), focus: n2.get("focus"), labelStatesModels: tc(e2) };
  }
  function qA(t2) {
    return isNaN(t2[0]) || isNaN(t2[1]);
  }
  function KA(t2) {
    return t2 && !qA(t2[0]) && !qA(t2[1]);
  }
  var $A = [];
  var JA = [];
  var QA = [];
  var tk = Mn;
  var ek = Bt;
  var nk = Math.abs;
  function ik(t2, e2, n2) {
    for (var i2, r2 = t2[0], o2 = t2[1], a2 = t2[2], s2 = 1 / 0, l2 = n2 * n2, u2 = 0.1, h2 = 0.1; h2 <= 0.9; h2 += 0.1) {
      $A[0] = tk(r2[0], o2[0], a2[0], h2), $A[1] = tk(r2[1], o2[1], a2[1], h2), (d2 = nk(ek($A, e2) - l2)) < s2 && (s2 = d2, i2 = h2);
    }
    for (var c2 = 0; c2 < 32; c2++) {
      var p2 = i2 + u2;
      JA[0] = tk(r2[0], o2[0], a2[0], i2), JA[1] = tk(r2[1], o2[1], a2[1], i2), QA[0] = tk(r2[0], o2[0], a2[0], p2), QA[1] = tk(r2[1], o2[1], a2[1], p2);
      var d2 = ek(JA, e2) - l2;
      if (nk(d2) < 0.01)
        break;
      var f2 = ek(QA, e2) - l2;
      u2 /= 2, d2 < 0 ? f2 >= 0 ? i2 += u2 : i2 -= u2 : f2 >= 0 ? i2 -= u2 : i2 += u2;
    }
    return i2;
  }
  function rk(t2, e2) {
    var n2 = [], i2 = Cn, r2 = [[], [], []], o2 = [[], []], a2 = [];
    e2 /= 2, t2.eachEdge(function(t3, s2) {
      var l2 = t3.getLayout(), u2 = t3.getVisual("fromSymbol"), h2 = t3.getVisual("toSymbol");
      l2.__original || (l2.__original = [It(l2[0]), It(l2[1])], l2[2] && l2.__original.push(It(l2[2])));
      var c2 = l2.__original;
      if (null != l2[2]) {
        if (Mt(r2[0], c2[0]), Mt(r2[1], c2[2]), Mt(r2[2], c2[1]), u2 && "none" !== u2) {
          var p2 = TA(t3.node1), d2 = ik(r2, c2[0], p2 * e2);
          i2(r2[0][0], r2[1][0], r2[2][0], d2, n2), r2[0][0] = n2[3], r2[1][0] = n2[4], i2(r2[0][1], r2[1][1], r2[2][1], d2, n2), r2[0][1] = n2[3], r2[1][1] = n2[4];
        }
        if (h2 && "none" !== h2) {
          p2 = TA(t3.node2), d2 = ik(r2, c2[1], p2 * e2);
          i2(r2[0][0], r2[1][0], r2[2][0], d2, n2), r2[1][0] = n2[1], r2[2][0] = n2[2], i2(r2[0][1], r2[1][1], r2[2][1], d2, n2), r2[1][1] = n2[1], r2[2][1] = n2[2];
        }
        Mt(l2[0], r2[0]), Mt(l2[1], r2[2]), Mt(l2[2], r2[1]);
      } else {
        if (Mt(o2[0], c2[0]), Mt(o2[1], c2[1]), At(a2, o2[1], o2[0]), Nt(a2, a2), u2 && "none" !== u2) {
          p2 = TA(t3.node1);
          Dt(o2[0], o2[0], a2, p2 * e2);
        }
        if (h2 && "none" !== h2) {
          p2 = TA(t3.node2);
          Dt(o2[1], o2[1], a2, -p2 * e2);
        }
        Mt(l2[0], o2[0]), Mt(l2[1], o2[1]);
      }
    });
  }
  function ok(t2) {
    return "view" === t2.type;
  }
  var ak = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      var n3 = new SS(), i2 = new ZA(), r2 = this.group;
      this._controller = new oT(e2.getZr()), this._controllerHost = { target: r2 }, r2.add(n3.group), r2.add(i2.group), this._symbolDraw = n3, this._lineDraw = i2, this._firstRender = true;
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = this, r2 = t3.coordinateSystem;
      this._model = t3;
      var o2 = this._symbolDraw, a2 = this._lineDraw, s2 = this.group;
      if (ok(r2)) {
        var l2 = { x: r2.x, y: r2.y, scaleX: r2.scaleX, scaleY: r2.scaleY };
        this._firstRender ? s2.attr(l2) : dh(s2, l2, t3);
      }
      rk(t3.getGraph(), IA(t3));
      var u2 = t3.getData();
      o2.updateData(u2);
      var h2 = t3.getEdgeData();
      a2.updateData(h2), this._updateNodeAndLinkScale(), this._updateController(t3, e2, n3), clearTimeout(this._layoutTimeout);
      var c2 = t3.forceLayout, p2 = t3.get(["force", "layoutAnimation"]);
      c2 && this._startForceLayoutIteration(c2, p2);
      var d2 = t3.get("layout");
      u2.graph.eachNode(function(e3) {
        var n4 = e3.dataIndex, r3 = e3.getGraphicEl(), o3 = e3.getModel();
        if (r3) {
          r3.off("drag").off("dragend");
          var a3 = o3.get("draggable");
          a3 && r3.on("drag", function(o4) {
            switch (d2) {
              case "force":
                c2.warmUp(), !i2._layouting && i2._startForceLayoutIteration(c2, p2), c2.setFixed(n4), u2.setItemLayout(n4, [r3.x, r3.y]);
                break;
              case "circular":
                u2.setItemLayout(n4, [r3.x, r3.y]), e3.setLayout({ fixed: true }, true), AA(t3, "symbolSize", e3, [o4.offsetX, o4.offsetY]), i2.updateLayout(t3);
                break;
              default:
                u2.setItemLayout(n4, [r3.x, r3.y]), SA(t3.getGraph(), t3), i2.updateLayout(t3);
            }
          }).on("dragend", function() {
            c2 && c2.setUnfixed(n4);
          }), r3.setDraggable(a3, !!o3.get("cursor")), "adjacency" === o3.get(["emphasis", "focus"]) && (Js(r3).focus = e3.getAdjacentDataIndices());
        }
      }), u2.graph.eachEdge(function(t4) {
        var e3 = t4.getGraphicEl(), n4 = t4.getModel().get(["emphasis", "focus"]);
        e3 && "adjacency" === n4 && (Js(e3).focus = { edge: [t4.dataIndex], node: [t4.node1.dataIndex, t4.node2.dataIndex] });
      });
      var f2 = "circular" === t3.get("layout") && t3.get(["circular", "rotateLabel"]), g2 = u2.getLayout("cx"), y2 = u2.getLayout("cy");
      u2.graph.eachNode(function(t4) {
        LA(t4, f2, g2, y2);
      }), this._firstRender = false;
    }, n2.prototype.dispose = function() {
      this._controller && this._controller.dispose(), this._controllerHost = null;
    }, n2.prototype._startForceLayoutIteration = function(t3, e2) {
      var n3 = this;
      !function i2() {
        t3.step(function(t4) {
          n3.updateLayout(n3._model), (n3._layouting = !t4) && (e2 ? n3._layoutTimeout = setTimeout(i2, 16) : i2());
        });
      }();
    }, n2.prototype._updateController = function(t3, e2, n3) {
      var i2 = this, r2 = this._controller, o2 = this._controllerHost, a2 = this.group;
      r2.setPointerChecker(function(e3, i3, r3) {
        var o3 = a2.getBoundingRect();
        return o3.applyTransform(a2.transform), o3.contain(i3, r3) && !dT(e3, n3, t3);
      }), ok(t3.coordinateSystem) ? (r2.enable(t3.get("roam")), o2.zoomLimit = t3.get("scaleLimit"), o2.zoom = t3.coordinateSystem.getZoom(), r2.off("pan").off("zoom").on("pan", function(e3) {
        uT(o2, e3.dx, e3.dy), n3.dispatchAction({ seriesId: t3.id, type: "graphRoam", dx: e3.dx, dy: e3.dy });
      }).on("zoom", function(e3) {
        hT(o2, e3.scale, e3.originX, e3.originY), n3.dispatchAction({ seriesId: t3.id, type: "graphRoam", zoom: e3.scale, originX: e3.originX, originY: e3.originY }), i2._updateNodeAndLinkScale(), rk(t3.getGraph(), IA(t3)), i2._lineDraw.updateLayout(), n3.updateLabelLayout();
      })) : r2.disable();
    }, n2.prototype._updateNodeAndLinkScale = function() {
      var t3 = this._model, e2 = t3.getData(), n3 = IA(t3);
      e2.eachItemGraphicEl(function(t4, e3) {
        t4 && t4.setSymbolScale(n3);
      });
    }, n2.prototype.updateLayout = function(t3) {
      rk(t3.getGraph(), IA(t3)), this._symbolDraw.updateLayout(), this._lineDraw.updateLayout();
    }, n2.prototype.remove = function(t3, e2) {
      this._symbolDraw && this._symbolDraw.remove(), this._lineDraw && this._lineDraw.remove();
    }, n2.type = "graph", n2;
  }(Ag);
  function sk(t2) {
    return "_EC_" + t2;
  }
  var lk = function() {
    function t2(t3) {
      this.type = "graph", this.nodes = [], this.edges = [], this._nodesMap = {}, this._edgesMap = {}, this._directed = t3 || false;
    }
    return t2.prototype.isDirected = function() {
      return this._directed;
    }, t2.prototype.addNode = function(t3, e2) {
      t3 = null == t3 ? "" + e2 : "" + t3;
      var n2 = this._nodesMap;
      if (!n2[sk(t3)]) {
        var i2 = new uk(t3, e2);
        return i2.hostGraph = this, this.nodes.push(i2), n2[sk(t3)] = i2, i2;
      }
    }, t2.prototype.getNodeByIndex = function(t3) {
      var e2 = this.data.getRawIndex(t3);
      return this.nodes[e2];
    }, t2.prototype.getNodeById = function(t3) {
      return this._nodesMap[sk(t3)];
    }, t2.prototype.addEdge = function(t3, e2, n2) {
      var i2 = this._nodesMap, r2 = this._edgesMap;
      if (Z(t3) && (t3 = this.nodes[t3]), Z(e2) && (e2 = this.nodes[e2]), t3 instanceof uk || (t3 = i2[sk(t3)]), e2 instanceof uk || (e2 = i2[sk(e2)]), t3 && e2) {
        var o2 = t3.id + "-" + e2.id, a2 = new hk(t3, e2, n2);
        return a2.hostGraph = this, this._directed && (t3.outEdges.push(a2), e2.inEdges.push(a2)), t3.edges.push(a2), t3 !== e2 && e2.edges.push(a2), this.edges.push(a2), r2[o2] = a2, a2;
      }
    }, t2.prototype.getEdgeByIndex = function(t3) {
      var e2 = this.edgeData.getRawIndex(t3);
      return this.edges[e2];
    }, t2.prototype.getEdge = function(t3, e2) {
      t3 instanceof uk && (t3 = t3.id), e2 instanceof uk && (e2 = e2.id);
      var n2 = this._edgesMap;
      return this._directed ? n2[t3 + "-" + e2] : n2[t3 + "-" + e2] || n2[e2 + "-" + t3];
    }, t2.prototype.eachNode = function(t3, e2) {
      for (var n2 = this.nodes, i2 = n2.length, r2 = 0; r2 < i2; r2++)
        n2[r2].dataIndex >= 0 && t3.call(e2, n2[r2], r2);
    }, t2.prototype.eachEdge = function(t3, e2) {
      for (var n2 = this.edges, i2 = n2.length, r2 = 0; r2 < i2; r2++)
        n2[r2].dataIndex >= 0 && n2[r2].node1.dataIndex >= 0 && n2[r2].node2.dataIndex >= 0 && t3.call(e2, n2[r2], r2);
    }, t2.prototype.breadthFirstTraverse = function(t3, e2, n2, i2) {
      if (e2 instanceof uk || (e2 = this._nodesMap[sk(e2)]), e2) {
        for (var r2 = "out" === n2 ? "outEdges" : "in" === n2 ? "inEdges" : "edges", o2 = 0; o2 < this.nodes.length; o2++)
          this.nodes[o2].__visited = false;
        if (!t3.call(i2, e2, null))
          for (var a2 = [e2]; a2.length; ) {
            var s2 = a2.shift(), l2 = s2[r2];
            for (o2 = 0; o2 < l2.length; o2++) {
              var u2 = l2[o2], h2 = u2.node1 === s2 ? u2.node2 : u2.node1;
              if (!h2.__visited) {
                if (t3.call(i2, h2, s2))
                  return;
                a2.push(h2), h2.__visited = true;
              }
            }
          }
      }
    }, t2.prototype.update = function() {
      for (var t3 = this.data, e2 = this.edgeData, n2 = this.nodes, i2 = this.edges, r2 = 0, o2 = n2.length; r2 < o2; r2++)
        n2[r2].dataIndex = -1;
      for (r2 = 0, o2 = t3.count(); r2 < o2; r2++)
        n2[t3.getRawIndex(r2)].dataIndex = r2;
      e2.filterSelf(function(t4) {
        var n3 = i2[e2.getRawIndex(t4)];
        return n3.node1.dataIndex >= 0 && n3.node2.dataIndex >= 0;
      });
      for (r2 = 0, o2 = i2.length; r2 < o2; r2++)
        i2[r2].dataIndex = -1;
      for (r2 = 0, o2 = e2.count(); r2 < o2; r2++)
        i2[e2.getRawIndex(r2)].dataIndex = r2;
    }, t2.prototype.clone = function() {
      for (var e2 = new t2(this._directed), n2 = this.nodes, i2 = this.edges, r2 = 0; r2 < n2.length; r2++)
        e2.addNode(n2[r2].id, n2[r2].dataIndex);
      for (r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2];
        e2.addEdge(o2.node1.id, o2.node2.id, o2.dataIndex);
      }
      return e2;
    }, t2;
  }();
  var uk = function() {
    function t2(t3, e2) {
      this.inEdges = [], this.outEdges = [], this.edges = [], this.dataIndex = -1, this.id = null == t3 ? "" : t3, this.dataIndex = null == e2 ? -1 : e2;
    }
    return t2.prototype.degree = function() {
      return this.edges.length;
    }, t2.prototype.inDegree = function() {
      return this.inEdges.length;
    }, t2.prototype.outDegree = function() {
      return this.outEdges.length;
    }, t2.prototype.getModel = function(t3) {
      if (!(this.dataIndex < 0))
        return this.hostGraph.data.getItemModel(this.dataIndex).getModel(t3);
    }, t2.prototype.getAdjacentDataIndices = function() {
      for (var t3 = { edge: [], node: [] }, e2 = 0; e2 < this.edges.length; e2++) {
        var n2 = this.edges[e2];
        n2.dataIndex < 0 || (t3.edge.push(n2.dataIndex), t3.node.push(n2.node1.dataIndex, n2.node2.dataIndex));
      }
      return t3;
    }, t2.prototype.getTrajectoryDataIndices = function() {
      for (var t3 = gt(), e2 = gt(), n2 = 0; n2 < this.edges.length; n2++) {
        var i2 = this.edges[n2];
        if (!(i2.dataIndex < 0)) {
          t3.set(i2.dataIndex, true);
          for (var r2 = [i2.node1], o2 = [i2.node2], a2 = 0; a2 < r2.length; ) {
            var s2 = r2[a2];
            a2++, e2.set(s2.dataIndex, true);
            for (var l2 = 0; l2 < s2.inEdges.length; l2++)
              t3.set(s2.inEdges[l2].dataIndex, true), r2.push(s2.inEdges[l2].node1);
          }
          for (a2 = 0; a2 < o2.length; ) {
            var u2 = o2[a2];
            a2++, e2.set(u2.dataIndex, true);
            for (l2 = 0; l2 < u2.outEdges.length; l2++)
              t3.set(u2.outEdges[l2].dataIndex, true), o2.push(u2.outEdges[l2].node2);
          }
        }
      }
      return { edge: t3.keys(), node: e2.keys() };
    }, t2;
  }();
  var hk = function() {
    function t2(t3, e2, n2) {
      this.dataIndex = -1, this.node1 = t3, this.node2 = e2, this.dataIndex = null == n2 ? -1 : n2;
    }
    return t2.prototype.getModel = function(t3) {
      if (!(this.dataIndex < 0))
        return this.hostGraph.edgeData.getItemModel(this.dataIndex).getModel(t3);
    }, t2.prototype.getAdjacentDataIndices = function() {
      return { edge: [this.dataIndex], node: [this.node1.dataIndex, this.node2.dataIndex] };
    }, t2.prototype.getTrajectoryDataIndices = function() {
      var t3 = gt(), e2 = gt();
      t3.set(this.dataIndex, true);
      for (var n2 = [this.node1], i2 = [this.node2], r2 = 0; r2 < n2.length; ) {
        var o2 = n2[r2];
        r2++, e2.set(o2.dataIndex, true);
        for (var a2 = 0; a2 < o2.inEdges.length; a2++)
          t3.set(o2.inEdges[a2].dataIndex, true), n2.push(o2.inEdges[a2].node1);
      }
      for (r2 = 0; r2 < i2.length; ) {
        var s2 = i2[r2];
        r2++, e2.set(s2.dataIndex, true);
        for (a2 = 0; a2 < s2.outEdges.length; a2++)
          t3.set(s2.outEdges[a2].dataIndex, true), i2.push(s2.outEdges[a2].node2);
      }
      return { edge: t3.keys(), node: e2.keys() };
    }, t2;
  }();
  function ck(t2, e2) {
    return { getValue: function(n2) {
      var i2 = this[t2][e2];
      return i2.getStore().get(i2.getDimensionIndex(n2 || "value"), this.dataIndex);
    }, setVisual: function(n2, i2) {
      this.dataIndex >= 0 && this[t2][e2].setItemVisual(this.dataIndex, n2, i2);
    }, getVisual: function(n2) {
      return this[t2][e2].getItemVisual(this.dataIndex, n2);
    }, setLayout: function(n2, i2) {
      this.dataIndex >= 0 && this[t2][e2].setItemLayout(this.dataIndex, n2, i2);
    }, getLayout: function() {
      return this[t2][e2].getItemLayout(this.dataIndex);
    }, getGraphicEl: function() {
      return this[t2][e2].getItemGraphicEl(this.dataIndex);
    }, getRawIndex: function() {
      return this[t2][e2].getRawIndex(this.dataIndex);
    } };
  }
  function pk(t2, e2, n2, i2, r2) {
    for (var o2 = new lk(i2), a2 = 0; a2 < t2.length; a2++)
      o2.addNode(nt(t2[a2].id, t2[a2].name, a2), a2);
    var s2 = [], l2 = [], u2 = 0;
    for (a2 = 0; a2 < e2.length; a2++) {
      var h2 = e2[a2], c2 = h2.source, p2 = h2.target;
      o2.addEdge(c2, p2, u2) && (l2.push(h2), s2.push(nt(Do(h2.id, null), c2 + " > " + p2)), u2++);
    }
    var d2, f2 = n2.get("coordinateSystem");
    if ("cartesian2d" === f2 || "polar" === f2)
      d2 = Cx(t2, n2);
    else {
      var g2 = md.get(f2), y2 = g2 && g2.dimensions || [];
      L(y2, "value") < 0 && y2.concat(["value"]);
      var v2 = mx(t2, { coordDimensions: y2, encodeDefine: n2.getEncode() }).dimensions;
      (d2 = new vx(v2, n2)).initData(t2);
    }
    var m2 = new vx(["value"], n2);
    return m2.initData(l2, s2), r2 && r2(d2, m2), KC({ mainData: d2, struct: o2, structAttr: "graph", datas: { node: d2, edge: m2 }, datasAttr: { node: "data", edge: "edgeData" } }), o2.update(), o2;
  }
  O(uk, ck("hostGraph", "data")), O(hk, ck("hostGraph", "edgeData"));
  var dk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      t2.prototype.init.apply(this, arguments);
      var n3 = this;
      function i2() {
        return n3._categoriesData;
      }
      this.legendVisualProvider = new VM(i2, i2), this.fillDataTextStyle(e2.edges || e2.links), this._updateCategoriesData();
    }, n2.prototype.mergeOption = function(e2) {
      t2.prototype.mergeOption.apply(this, arguments), this.fillDataTextStyle(e2.edges || e2.links), this._updateCategoriesData();
    }, n2.prototype.mergeDefaultAndTheme = function(e2) {
      t2.prototype.mergeDefaultAndTheme.apply(this, arguments), bo(e2, "edgeLabel", ["show"]);
    }, n2.prototype.getInitialData = function(t3, e2) {
      var n3, i2 = t3.edges || t3.links || [], r2 = t3.data || t3.nodes || [], o2 = this;
      if (r2 && i2) {
        yA(n3 = this) && (n3.__curvenessList = [], n3.__edgeMap = {}, vA(n3));
        var a2 = pk(r2, i2, this, true, function(t4, e3) {
          t4.wrapMethod("getItemModel", function(t5) {
            var e4 = o2._categoriesModels[t5.getShallow("category")];
            return e4 && (e4.parentModel = t5.parentModel, t5.parentModel = e4), t5;
          });
          var n4 = Sc.prototype.getModel;
          function i3(t5, e4) {
            var i4 = n4.call(this, t5, e4);
            return i4.resolveParentPath = r3, i4;
          }
          function r3(t5) {
            if (t5 && ("label" === t5[0] || "label" === t5[1])) {
              var e4 = t5.slice();
              return "label" === t5[0] ? e4[0] = "edgeLabel" : "label" === t5[1] && (e4[1] = "edgeLabel"), e4;
            }
            return t5;
          }
          e3.wrapMethod("getItemModel", function(t5) {
            return t5.resolveParentPath = r3, t5.getModel = i3, t5;
          });
        });
        return N(a2.edges, function(t4) {
          !function(t5, e3, n4, i3) {
            if (yA(n4)) {
              var r3 = mA(t5, e3, n4), o3 = n4.__edgeMap, a3 = o3[xA(r3)];
              o3[r3] && !a3 ? o3[r3].isForward = true : a3 && o3[r3] && (a3.isForward = true, o3[r3].isForward = false), o3[r3] = o3[r3] || [], o3[r3].push(i3);
            }
          }(t4.node1, t4.node2, this, t4.dataIndex);
        }, this), a2.data;
      }
    }, n2.prototype.getGraph = function() {
      return this.getData().graph;
    }, n2.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, n2.prototype.getCategoriesData = function() {
      return this._categoriesData;
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      if ("edge" === n3) {
        var i2 = this.getData(), r2 = this.getDataParams(t3, n3), o2 = i2.graph.getEdgeByIndex(t3), a2 = i2.getName(o2.node1.dataIndex), s2 = i2.getName(o2.node2.dataIndex), l2 = [];
        return null != a2 && l2.push(a2), null != s2 && l2.push(s2), eg("nameValue", { name: l2.join(" > "), value: r2.value, noValue: null == r2.value });
      }
      return dg({ series: this, dataIndex: t3, multipleSeries: e2 });
    }, n2.prototype._updateCategoriesData = function() {
      var t3 = E(this.option.categories || [], function(t4) {
        return null != t4.value ? t4 : D({ value: 0 }, t4);
      }), e2 = new vx(["value"], this);
      e2.initData(t3), this._categoriesData = e2, this._categoriesModels = e2.mapArray(function(t4) {
        return e2.getItemModel(t4);
      });
    }, n2.prototype.setZoom = function(t3) {
      this.option.zoom = t3;
    }, n2.prototype.setCenter = function(t3) {
      this.option.center = t3;
    }, n2.prototype.isAnimationEnabled = function() {
      return t2.prototype.isAnimationEnabled.call(this) && !("force" === this.get("layout") && this.get(["force", "layoutAnimation"]));
    }, n2.type = "series.graph", n2.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], n2.defaultOption = { z: 2, coordinateSystem: "view", legendHoverLink: true, layout: null, circular: { rotateLabel: false }, force: { initLayout: null, repulsion: [0, 50], gravity: 0.1, friction: 0.6, edgeLength: 30, layoutAnimation: true }, left: "center", top: "center", symbol: "circle", symbolSize: 10, edgeSymbol: ["none", "none"], edgeSymbolSize: 10, edgeLabel: { position: "middle", distance: 5 }, draggable: false, roam: false, center: null, zoom: 1, nodeScaleRatio: 0.6, label: { show: false, formatter: "{b}" }, itemStyle: {}, lineStyle: { color: "#aaa", width: 1, opacity: 0.5 }, emphasis: { scale: true, label: { show: true } }, select: { itemStyle: { borderColor: "#212121" } } }, n2;
  }(vg);
  var fk = { type: "graphRoam", event: "graphRoam", update: "none" };
  var gk = function() {
    this.angle = 0, this.width = 10, this.r = 10, this.x = 0, this.y = 0;
  };
  var yk = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "pointer", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new gk();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = Math.cos, i2 = Math.sin, r2 = e2.r, o2 = e2.width, a2 = e2.angle, s2 = e2.x - n3(a2) * o2 * (o2 >= r2 / 3 ? 1 : 2), l2 = e2.y - i2(a2) * o2 * (o2 >= r2 / 3 ? 1 : 2);
      a2 = e2.angle - Math.PI / 2, t3.moveTo(s2, l2), t3.lineTo(e2.x + n3(a2) * o2, e2.y + i2(a2) * o2), t3.lineTo(e2.x + n3(e2.angle) * r2, e2.y + i2(e2.angle) * r2), t3.lineTo(e2.x - n3(a2) * o2, e2.y - i2(a2) * o2), t3.lineTo(s2, l2);
    }, n2;
  }(Ms);
  function vk(t2, e2) {
    var n2 = null == t2 ? "" : t2 + "";
    return e2 && (X(e2) ? n2 = e2.replace("{value}", n2) : Y(e2) && (n2 = e2(t2))), n2;
  }
  var mk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      this.group.removeAll();
      var i2 = t3.get(["axisLine", "lineStyle", "color"]), r2 = function(t4, e3) {
        var n4 = t4.get("center"), i3 = e3.getWidth(), r3 = e3.getHeight(), o2 = Math.min(i3, r3);
        return { cx: Xr(n4[0], e3.getWidth()), cy: Xr(n4[1], e3.getHeight()), r: Xr(t4.get("radius"), o2 / 2) };
      }(t3, n3);
      this._renderMain(t3, e2, n3, i2, r2), this._data = t3.getData();
    }, n2.prototype.dispose = function() {
    }, n2.prototype._renderMain = function(t3, e2, n3, i2, r2) {
      var o2 = this.group, a2 = t3.get("clockwise"), s2 = -t3.get("startAngle") / 180 * Math.PI, l2 = -t3.get("endAngle") / 180 * Math.PI, u2 = t3.getModel("axisLine"), h2 = u2.get("roundCap") ? nM : Eu, c2 = u2.get("show"), p2 = u2.getModel("lineStyle"), d2 = p2.get("width"), f2 = [s2, l2];
      is(f2, !a2);
      for (var g2 = (l2 = f2[1]) - (s2 = f2[0]), y2 = s2, v2 = [], m2 = 0; c2 && m2 < i2.length; m2++) {
        var x2 = new h2({ shape: { startAngle: y2, endAngle: l2 = s2 + g2 * Math.min(Math.max(i2[m2][0], 0), 1), cx: r2.cx, cy: r2.cy, clockwise: a2, r0: r2.r - d2, r: r2.r }, silent: true });
        x2.setStyle({ fill: i2[m2][1] }), x2.setStyle(p2.getLineStyle(["color", "width"])), v2.push(x2), y2 = l2;
      }
      v2.reverse(), N(v2, function(t4) {
        return o2.add(t4);
      });
      var _2 = function(t4) {
        if (t4 <= 0)
          return i2[0][1];
        var e3;
        for (e3 = 0; e3 < i2.length; e3++)
          if (i2[e3][0] >= t4 && (0 === e3 ? 0 : i2[e3 - 1][0]) < t4)
            return i2[e3][1];
        return i2[e3 - 1][1];
      };
      this._renderTicks(t3, e2, n3, _2, r2, s2, l2, a2, d2), this._renderTitleAndDetail(t3, e2, n3, _2, r2), this._renderAnchor(t3, r2), this._renderPointer(t3, e2, n3, _2, r2, s2, l2, a2, d2);
    }, n2.prototype._renderTicks = function(t3, e2, n3, i2, r2, o2, a2, s2, l2) {
      for (var u2, h2, c2 = this.group, p2 = r2.cx, d2 = r2.cy, f2 = r2.r, g2 = +t3.get("min"), y2 = +t3.get("max"), v2 = t3.getModel("splitLine"), m2 = t3.getModel("axisTick"), x2 = t3.getModel("axisLabel"), _2 = t3.get("splitNumber"), b2 = m2.get("splitNumber"), w2 = Xr(v2.get("length"), f2), S2 = Xr(m2.get("length"), f2), M2 = o2, I2 = (a2 - o2) / _2, T2 = I2 / b2, C2 = v2.getModel("lineStyle").getLineStyle(), D2 = m2.getModel("lineStyle").getLineStyle(), A2 = v2.get("distance"), k2 = 0; k2 <= _2; k2++) {
        if (u2 = Math.cos(M2), h2 = Math.sin(M2), v2.get("show")) {
          var L2 = new Uu({ shape: { x1: u2 * (f2 - (P2 = A2 ? A2 + l2 : l2)) + p2, y1: h2 * (f2 - P2) + d2, x2: u2 * (f2 - w2 - P2) + p2, y2: h2 * (f2 - w2 - P2) + d2 }, style: C2, silent: true });
          "auto" === C2.stroke && L2.setStyle({ stroke: i2(k2 / _2) }), c2.add(L2);
        }
        if (x2.get("show")) {
          var P2 = x2.get("distance") + A2, O2 = vk(Ur(k2 / _2 * (y2 - g2) + g2), x2.get("formatter")), R2 = i2(k2 / _2), N2 = u2 * (f2 - w2 - P2) + p2, E2 = h2 * (f2 - w2 - P2) + d2, z2 = x2.get("rotate"), V2 = 0;
          "radial" === z2 ? (V2 = -M2 + 2 * Math.PI) > Math.PI / 2 && (V2 += Math.PI) : "tangential" === z2 ? V2 = -M2 - Math.PI / 2 : Z(z2) && (V2 = z2 * Math.PI / 180), 0 === V2 ? c2.add(new Bs({ style: ec(x2, { text: O2, x: N2, y: E2, verticalAlign: h2 < -0.8 ? "top" : h2 > 0.8 ? "bottom" : "middle", align: u2 < -0.4 ? "left" : u2 > 0.4 ? "right" : "center" }, { inheritColor: R2 }), silent: true })) : c2.add(new Bs({ style: ec(x2, { text: O2, x: N2, y: E2, verticalAlign: "middle", align: "center" }, { inheritColor: R2 }), silent: true, originX: N2, originY: E2, rotation: V2 }));
        }
        if (m2.get("show") && k2 !== _2) {
          P2 = (P2 = m2.get("distance")) ? P2 + l2 : l2;
          for (var B2 = 0; B2 <= b2; B2++) {
            u2 = Math.cos(M2), h2 = Math.sin(M2);
            var F2 = new Uu({ shape: { x1: u2 * (f2 - P2) + p2, y1: h2 * (f2 - P2) + d2, x2: u2 * (f2 - S2 - P2) + p2, y2: h2 * (f2 - S2 - P2) + d2 }, silent: true, style: D2 });
            "auto" === D2.stroke && F2.setStyle({ stroke: i2((k2 + B2 / b2) / _2) }), c2.add(F2), M2 += T2;
          }
          M2 -= T2;
        } else
          M2 += I2;
      }
    }, n2.prototype._renderPointer = function(t3, e2, n3, i2, r2, o2, a2, s2, l2) {
      var u2 = this.group, h2 = this._data, c2 = this._progressEls, p2 = [], d2 = t3.get(["pointer", "show"]), f2 = t3.getModel("progress"), g2 = f2.get("show"), y2 = t3.getData(), v2 = y2.mapDimension("value"), m2 = +t3.get("min"), x2 = +t3.get("max"), _2 = [m2, x2], b2 = [o2, a2];
      function w2(e3, n4) {
        var i3, o3 = y2.getItemModel(e3).getModel("pointer"), a3 = Xr(o3.get("width"), r2.r), s3 = Xr(o3.get("length"), r2.r), l3 = t3.get(["pointer", "icon"]), u3 = o3.get("offsetCenter"), h3 = Xr(u3[0], r2.r), c3 = Xr(u3[1], r2.r), p3 = o3.get("keepAspect");
        return (i3 = l3 ? Gy(l3, h3 - a3 / 2, c3 - s3, a3, s3, null, p3) : new yk({ shape: { angle: -Math.PI / 2, width: a3, r: s3, x: h3, y: c3 } })).rotation = -(n4 + Math.PI / 2), i3.x = r2.cx, i3.y = r2.cy, i3;
      }
      function S2(t4, e3) {
        var n4 = f2.get("roundCap") ? nM : Eu, i3 = f2.get("overlap"), a3 = i3 ? f2.get("width") : l2 / y2.count(), u3 = i3 ? r2.r - a3 : r2.r - (t4 + 1) * a3, h3 = i3 ? r2.r : r2.r - t4 * a3, c3 = new n4({ shape: { startAngle: o2, endAngle: e3, cx: r2.cx, cy: r2.cy, clockwise: s2, r0: u3, r: h3 } });
        return i3 && (c3.z2 = x2 - y2.get(v2, t4) % x2), c3;
      }
      (g2 || d2) && (y2.diff(h2).add(function(e3) {
        var n4 = y2.get(v2, e3);
        if (d2) {
          var i3 = w2(e3, o2);
          fh(i3, { rotation: -((isNaN(+n4) ? b2[0] : Yr(n4, _2, b2, true)) + Math.PI / 2) }, t3), u2.add(i3), y2.setItemGraphicEl(e3, i3);
        }
        if (g2) {
          var r3 = S2(e3, o2), a3 = f2.get("clip");
          fh(r3, { shape: { endAngle: Yr(n4, _2, b2, a3) } }, t3), u2.add(r3), Qs(t3.seriesIndex, y2.dataType, e3, r3), p2[e3] = r3;
        }
      }).update(function(e3, n4) {
        var i3 = y2.get(v2, e3);
        if (d2) {
          var r3 = h2.getItemGraphicEl(n4), a3 = r3 ? r3.rotation : o2, s3 = w2(e3, a3);
          s3.rotation = a3, dh(s3, { rotation: -((isNaN(+i3) ? b2[0] : Yr(i3, _2, b2, true)) + Math.PI / 2) }, t3), u2.add(s3), y2.setItemGraphicEl(e3, s3);
        }
        if (g2) {
          var l3 = c2[n4], m3 = S2(e3, l3 ? l3.shape.endAngle : o2), x3 = f2.get("clip");
          dh(m3, { shape: { endAngle: Yr(i3, _2, b2, x3) } }, t3), u2.add(m3), Qs(t3.seriesIndex, y2.dataType, e3, m3), p2[e3] = m3;
        }
      }).execute(), y2.each(function(t4) {
        var e3 = y2.getItemModel(t4), n4 = e3.getModel("emphasis"), r3 = n4.get("focus"), o3 = n4.get("blurScope"), a3 = n4.get("disabled");
        if (d2) {
          var s3 = y2.getItemGraphicEl(t4), l3 = y2.getItemVisual(t4, "style"), u3 = l3.fill;
          if (s3 instanceof As) {
            var h3 = s3.style;
            s3.useStyle(D({ image: h3.image, x: h3.x, y: h3.y, width: h3.width, height: h3.height }, l3));
          } else
            s3.useStyle(l3), "pointer" !== s3.type && s3.setColor(u3);
          s3.setStyle(e3.getModel(["pointer", "itemStyle"]).getItemStyle()), "auto" === s3.style.fill && s3.setStyle("fill", i2(Yr(y2.get(v2, t4), _2, [0, 1], true))), s3.z2EmphasisLift = 0, Zl(s3, e3), Hl(s3, r3, o3, a3);
        }
        if (g2) {
          var c3 = p2[t4];
          c3.useStyle(y2.getItemVisual(t4, "style")), c3.setStyle(e3.getModel(["progress", "itemStyle"]).getItemStyle()), c3.z2EmphasisLift = 0, Zl(c3, e3), Hl(c3, r3, o3, a3);
        }
      }), this._progressEls = p2);
    }, n2.prototype._renderAnchor = function(t3, e2) {
      var n3 = t3.getModel("anchor");
      if (n3.get("show")) {
        var i2 = n3.get("size"), r2 = n3.get("icon"), o2 = n3.get("offsetCenter"), a2 = n3.get("keepAspect"), s2 = Gy(r2, e2.cx - i2 / 2 + Xr(o2[0], e2.r), e2.cy - i2 / 2 + Xr(o2[1], e2.r), i2, i2, null, a2);
        s2.z2 = n3.get("showAbove") ? 1 : 0, s2.setStyle(n3.getModel("itemStyle").getItemStyle()), this.group.add(s2);
      }
    }, n2.prototype._renderTitleAndDetail = function(t3, e2, n3, i2, r2) {
      var o2 = this, a2 = t3.getData(), s2 = a2.mapDimension("value"), l2 = +t3.get("min"), u2 = +t3.get("max"), h2 = new Er(), c2 = [], p2 = [], d2 = t3.isAnimationEnabled(), f2 = t3.get(["pointer", "showAbove"]);
      a2.diff(this._data).add(function(t4) {
        c2[t4] = new Bs({ silent: true }), p2[t4] = new Bs({ silent: true });
      }).update(function(t4, e3) {
        c2[t4] = o2._titleEls[e3], p2[t4] = o2._detailEls[e3];
      }).execute(), a2.each(function(e3) {
        var n4 = a2.getItemModel(e3), o3 = a2.get(s2, e3), g2 = new Er(), y2 = i2(Yr(o3, [l2, u2], [0, 1], true)), v2 = n4.getModel("title");
        if (v2.get("show")) {
          var m2 = v2.get("offsetCenter"), x2 = r2.cx + Xr(m2[0], r2.r), _2 = r2.cy + Xr(m2[1], r2.r);
          (D2 = c2[e3]).attr({ z2: f2 ? 0 : 2, style: ec(v2, { x: x2, y: _2, text: a2.getName(e3), align: "center", verticalAlign: "middle" }, { inheritColor: y2 }) }), g2.add(D2);
        }
        var b2 = n4.getModel("detail");
        if (b2.get("show")) {
          var w2 = b2.get("offsetCenter"), S2 = r2.cx + Xr(w2[0], r2.r), M2 = r2.cy + Xr(w2[1], r2.r), I2 = Xr(b2.get("width"), r2.r), T2 = Xr(b2.get("height"), r2.r), C2 = t3.get(["progress", "show"]) ? a2.getItemVisual(e3, "style").fill : y2, D2 = p2[e3], A2 = b2.get("formatter");
          D2.attr({ z2: f2 ? 0 : 2, style: ec(b2, { x: S2, y: M2, text: vk(o3, A2), width: isNaN(I2) ? null : I2, height: isNaN(T2) ? null : T2, align: "center", verticalAlign: "middle" }, { inheritColor: C2 }) }), uc(D2, { normal: b2 }, o3, function(t4) {
            return vk(t4, A2);
          }), d2 && hc(D2, e3, a2, t3, { getFormattedLabel: function(t4, e4, n5, i3, r3, a3) {
            return vk(a3 ? a3.interpolatedValue : o3, A2);
          } }), g2.add(D2);
        }
        h2.add(g2);
      }), this.group.add(h2), this._titleEls = c2, this._detailEls = p2;
    }, n2.type = "gauge", n2;
  }(Ag);
  var xk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.visualStyleAccessPath = "itemStyle", e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return zM(this, ["value"]);
    }, n2.type = "series.gauge", n2.defaultOption = { z: 2, colorBy: "data", center: ["50%", "50%"], legendHoverLink: true, radius: "75%", startAngle: 225, endAngle: -45, clockwise: true, min: 0, max: 100, splitNumber: 10, axisLine: { show: true, roundCap: false, lineStyle: { color: [[1, "#E6EBF8"]], width: 10 } }, progress: { show: false, overlap: true, width: 10, roundCap: false, clip: true }, splitLine: { show: true, length: 10, distance: 10, lineStyle: { color: "#63677A", width: 3, type: "solid" } }, axisTick: { show: true, splitNumber: 5, length: 6, distance: 10, lineStyle: { color: "#63677A", width: 1, type: "solid" } }, axisLabel: { show: true, distance: 15, color: "#464646", fontSize: 12, rotate: 0 }, pointer: { icon: null, offsetCenter: [0, 0], show: true, showAbove: true, length: "60%", width: 6, keepAspect: false }, anchor: { show: false, showAbove: false, size: 6, icon: "circle", offsetCenter: [0, 0], keepAspect: false, itemStyle: { color: "#fff", borderWidth: 0, borderColor: "#5470c6" } }, title: { show: true, offsetCenter: [0, "20%"], color: "#464646", fontSize: 16, valueAnimation: false }, detail: { show: true, backgroundColor: "rgba(0,0,0,0)", borderWidth: 0, borderColor: "#ccc", width: 100, height: null, padding: [5, 10], offsetCenter: [0, "40%"], color: "#464646", fontSize: 30, fontWeight: "bold", lineHeight: 30, valueAnimation: false } }, n2;
  }(vg);
  var _k = ["itemStyle", "opacity"];
  var bk = function(t2) {
    function n2(e2, n3) {
      var i2 = t2.call(this) || this, r2 = i2, o2 = new Hu(), a2 = new Bs();
      return r2.setTextContent(a2), i2.setTextGuideLine(o2), i2.updateData(e2, n3, true), i2;
    }
    return e(n2, t2), n2.prototype.updateData = function(t3, e2, n3) {
      var i2 = this, r2 = t3.hostModel, o2 = t3.getItemModel(e2), a2 = t3.getItemLayout(e2), s2 = o2.getModel("emphasis"), l2 = o2.get(_k);
      l2 = null == l2 ? 1 : l2, n3 || xh(i2), i2.useStyle(t3.getItemVisual(e2, "style")), i2.style.lineJoin = "round", n3 ? (i2.setShape({ points: a2.points }), i2.style.opacity = 0, fh(i2, { style: { opacity: l2 } }, r2, e2)) : dh(i2, { style: { opacity: l2 }, shape: { points: a2.points } }, r2, e2), Zl(i2, o2), this._updateLabel(t3, e2), Hl(this, s2.get("focus"), s2.get("blurScope"), s2.get("disabled"));
    }, n2.prototype._updateLabel = function(t3, e2) {
      var n3 = this, i2 = this.getTextGuideLine(), r2 = n3.getTextContent(), o2 = t3.hostModel, a2 = t3.getItemModel(e2), s2 = t3.getItemLayout(e2).label, l2 = t3.getItemVisual(e2, "style"), u2 = l2.fill;
      Qh(r2, tc(a2), { labelFetcher: t3.hostModel, labelDataIndex: e2, defaultOpacity: l2.opacity, defaultText: t3.getName(e2) }, { normal: { align: s2.textAlign, verticalAlign: s2.verticalAlign } }), n3.setTextConfig({ local: true, inside: !!s2.inside, insideStroke: u2, outsideFill: u2 });
      var h2 = s2.linePoints;
      i2.setShape({ points: h2 }), n3.textGuideLineConfig = { anchor: h2 ? new Ce(h2[0][0], h2[0][1]) : null }, dh(r2, { style: { x: s2.x, y: s2.y } }, o2, e2), r2.attr({ rotation: s2.rotation, originX: s2.x, originY: s2.y, z2: 10 }), Bb(n3, Fb(a2), { stroke: u2 });
    }, n2;
  }(Gu);
  var wk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.ignoreLabelLineUpdate = true, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = this._data, o2 = this.group;
      i2.diff(r2).add(function(t4) {
        var e3 = new bk(i2, t4);
        i2.setItemGraphicEl(t4, e3), o2.add(e3);
      }).update(function(t4, e3) {
        var n4 = r2.getItemGraphicEl(e3);
        n4.updateData(i2, t4), o2.add(n4), i2.setItemGraphicEl(t4, n4);
      }).remove(function(e3) {
        mh(r2.getItemGraphicEl(e3), t3, e3);
      }).execute(), this._data = i2;
    }, n2.prototype.remove = function() {
      this.group.removeAll(), this._data = null;
    }, n2.prototype.dispose = function() {
    }, n2.type = "funnel", n2;
  }(Ag);
  var Sk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      t2.prototype.init.apply(this, arguments), this.legendVisualProvider = new VM(G(this.getData, this), G(this.getRawData, this)), this._defaultLabelLine(e2);
    }, n2.prototype.getInitialData = function(t3, e2) {
      return zM(this, { coordDimensions: ["value"], encodeDefaulter: W($p, this) });
    }, n2.prototype._defaultLabelLine = function(t3) {
      bo(t3, "labelLine", ["show"]);
      var e2 = t3.labelLine, n3 = t3.emphasis.labelLine;
      e2.show = e2.show && t3.label.show, n3.show = n3.show && t3.emphasis.label.show;
    }, n2.prototype.getDataParams = function(e2) {
      var n3 = this.getData(), i2 = t2.prototype.getDataParams.call(this, e2), r2 = n3.mapDimension("value"), o2 = n3.getSum(r2);
      return i2.percent = o2 ? +(n3.get(r2, e2) / o2 * 100).toFixed(2) : 0, i2.$vars.push("percent"), i2;
    }, n2.type = "series.funnel", n2.defaultOption = { z: 2, legendHoverLink: true, colorBy: "data", left: 80, top: 60, right: 80, bottom: 60, minSize: "0%", maxSize: "100%", sort: "descending", orient: "vertical", gap: 0, funnelAlign: "center", label: { show: true, position: "outer" }, labelLine: { show: true, length: 20, lineStyle: { width: 1 } }, itemStyle: { borderColor: "#fff", borderWidth: 1 }, emphasis: { label: { show: true } }, select: { itemStyle: { borderColor: "#212121" } } }, n2;
  }(vg);
  function Mk(t2, e2) {
    t2.eachSeriesByType("funnel", function(t3) {
      var n2 = t3.getData(), i2 = n2.mapDimension("value"), r2 = t3.get("sort"), o2 = function(t4, e3) {
        return Tp(t4.getBoxLayoutParams(), { width: e3.getWidth(), height: e3.getHeight() });
      }(t3, e2), a2 = t3.get("orient"), s2 = o2.width, l2 = o2.height, u2 = function(t4, e3) {
        for (var n3 = t4.mapDimension("value"), i3 = t4.mapArray(n3, function(t5) {
          return t5;
        }), r3 = [], o3 = "ascending" === e3, a3 = 0, s3 = t4.count(); a3 < s3; a3++)
          r3[a3] = a3;
        return Y(e3) ? r3.sort(e3) : "none" !== e3 && r3.sort(function(t5, e4) {
          return o3 ? i3[t5] - i3[e4] : i3[e4] - i3[t5];
        }), r3;
      }(n2, r2), h2 = o2.x, c2 = o2.y, p2 = "horizontal" === a2 ? [Xr(t3.get("minSize"), l2), Xr(t3.get("maxSize"), l2)] : [Xr(t3.get("minSize"), s2), Xr(t3.get("maxSize"), s2)], d2 = n2.getDataExtent(i2), f2 = t3.get("min"), g2 = t3.get("max");
      null == f2 && (f2 = Math.min(d2[0], 0)), null == g2 && (g2 = d2[1]);
      var y2 = t3.get("funnelAlign"), v2 = t3.get("gap"), m2 = (("horizontal" === a2 ? s2 : l2) - v2 * (n2.count() - 1)) / n2.count(), x2 = function(t4, e3) {
        if ("horizontal" === a2) {
          var r3 = Yr(n2.get(i2, t4) || 0, [f2, g2], p2, true), o3 = void 0;
          switch (y2) {
            case "top":
              o3 = c2;
              break;
            case "center":
              o3 = c2 + (l2 - r3) / 2;
              break;
            case "bottom":
              o3 = c2 + (l2 - r3);
          }
          return [[e3, o3], [e3, o3 + r3]];
        }
        var u3, d3 = Yr(n2.get(i2, t4) || 0, [f2, g2], p2, true);
        switch (y2) {
          case "left":
            u3 = h2;
            break;
          case "center":
            u3 = h2 + (s2 - d3) / 2;
            break;
          case "right":
            u3 = h2 + s2 - d3;
        }
        return [[u3, e3], [u3 + d3, e3]];
      };
      "ascending" === r2 && (m2 = -m2, v2 = -v2, "horizontal" === a2 ? h2 += s2 : c2 += l2, u2 = u2.reverse());
      for (var _2 = 0; _2 < u2.length; _2++) {
        var b2 = u2[_2], w2 = u2[_2 + 1], S2 = n2.getItemModel(b2);
        if ("horizontal" === a2) {
          var M2 = S2.get(["itemStyle", "width"]);
          null == M2 ? M2 = m2 : (M2 = Xr(M2, s2), "ascending" === r2 && (M2 = -M2));
          var I2 = x2(b2, h2), T2 = x2(w2, h2 + M2);
          h2 += M2 + v2, n2.setItemLayout(b2, { points: I2.concat(T2.slice().reverse()) });
        } else {
          var C2 = S2.get(["itemStyle", "height"]);
          null == C2 ? C2 = m2 : (C2 = Xr(C2, l2), "ascending" === r2 && (C2 = -C2));
          I2 = x2(b2, c2), T2 = x2(w2, c2 + C2);
          c2 += C2 + v2, n2.setItemLayout(b2, { points: I2.concat(T2.slice().reverse()) });
        }
      }
      !function(t4) {
        var e3 = t4.hostModel.get("orient");
        t4.each(function(n3) {
          var i3, r3, o3, a3, s3 = t4.getItemModel(n3), l3 = s3.getModel("label").get("position"), u3 = s3.getModel("labelLine"), h3 = t4.getItemLayout(n3), c3 = h3.points, p3 = "inner" === l3 || "inside" === l3 || "center" === l3 || "insideLeft" === l3 || "insideRight" === l3;
          if (p3)
            "insideLeft" === l3 ? (r3 = (c3[0][0] + c3[3][0]) / 2 + 5, o3 = (c3[0][1] + c3[3][1]) / 2, i3 = "left") : "insideRight" === l3 ? (r3 = (c3[1][0] + c3[2][0]) / 2 - 5, o3 = (c3[1][1] + c3[2][1]) / 2, i3 = "right") : (r3 = (c3[0][0] + c3[1][0] + c3[2][0] + c3[3][0]) / 4, o3 = (c3[0][1] + c3[1][1] + c3[2][1] + c3[3][1]) / 4, i3 = "center"), a3 = [[r3, o3], [r3, o3]];
          else {
            var d3 = void 0, f3 = void 0, g3 = void 0, y3 = void 0, v3 = u3.get("length");
            "left" === l3 ? (d3 = (c3[3][0] + c3[0][0]) / 2, f3 = (c3[3][1] + c3[0][1]) / 2, r3 = (g3 = d3 - v3) - 5, i3 = "right") : "right" === l3 ? (d3 = (c3[1][0] + c3[2][0]) / 2, f3 = (c3[1][1] + c3[2][1]) / 2, r3 = (g3 = d3 + v3) + 5, i3 = "left") : "top" === l3 ? (d3 = (c3[3][0] + c3[0][0]) / 2, o3 = (y3 = (f3 = (c3[3][1] + c3[0][1]) / 2) - v3) - 5, i3 = "center") : "bottom" === l3 ? (d3 = (c3[1][0] + c3[2][0]) / 2, o3 = (y3 = (f3 = (c3[1][1] + c3[2][1]) / 2) + v3) + 5, i3 = "center") : "rightTop" === l3 ? (d3 = "horizontal" === e3 ? c3[3][0] : c3[1][0], f3 = "horizontal" === e3 ? c3[3][1] : c3[1][1], "horizontal" === e3 ? (o3 = (y3 = f3 - v3) - 5, i3 = "center") : (r3 = (g3 = d3 + v3) + 5, i3 = "top")) : "rightBottom" === l3 ? (d3 = c3[2][0], f3 = c3[2][1], "horizontal" === e3 ? (o3 = (y3 = f3 + v3) + 5, i3 = "center") : (r3 = (g3 = d3 + v3) + 5, i3 = "bottom")) : "leftTop" === l3 ? (d3 = c3[0][0], f3 = "horizontal" === e3 ? c3[0][1] : c3[1][1], "horizontal" === e3 ? (o3 = (y3 = f3 - v3) - 5, i3 = "center") : (r3 = (g3 = d3 - v3) - 5, i3 = "right")) : "leftBottom" === l3 ? (d3 = "horizontal" === e3 ? c3[1][0] : c3[3][0], f3 = "horizontal" === e3 ? c3[1][1] : c3[2][1], "horizontal" === e3 ? (o3 = (y3 = f3 + v3) + 5, i3 = "center") : (r3 = (g3 = d3 - v3) - 5, i3 = "right")) : (d3 = (c3[1][0] + c3[2][0]) / 2, f3 = (c3[1][1] + c3[2][1]) / 2, "horizontal" === e3 ? (o3 = (y3 = f3 + v3) + 5, i3 = "center") : (r3 = (g3 = d3 + v3) + 5, i3 = "left")), "horizontal" === e3 ? r3 = g3 = d3 : o3 = y3 = f3, a3 = [[d3, f3], [g3, y3]];
          }
          h3.label = { linePoints: a3, x: r3, y: o3, verticalAlign: "middle", textAlign: i3, inside: p3 };
        });
      }(n2);
    });
  }
  var Ik = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._dataGroup = new Er(), e2._initialized = false, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      this.group.add(this._dataGroup);
    }, n2.prototype.render = function(t3, e2, n3, i2) {
      this._progressiveEls = null;
      var r2 = this._dataGroup, o2 = t3.getData(), a2 = this._data, s2 = t3.coordinateSystem, l2 = s2.dimensions, u2 = Dk(t3);
      if (o2.diff(a2).add(function(t4) {
        Ak(Ck(o2, r2, t4, l2, s2), o2, t4, u2);
      }).update(function(e3, n4) {
        var i3 = a2.getItemGraphicEl(n4), r3 = Tk(o2, e3, l2, s2);
        o2.setItemGraphicEl(e3, i3), dh(i3, { shape: { points: r3 } }, t3, e3), xh(i3), Ak(i3, o2, e3, u2);
      }).remove(function(t4) {
        var e3 = a2.getItemGraphicEl(t4);
        r2.remove(e3);
      }).execute(), !this._initialized) {
        this._initialized = true;
        var h2 = function(t4, e3, n4) {
          var i3 = t4.model, r3 = t4.getRect(), o3 = new Es({ shape: { x: r3.x, y: r3.y, width: r3.width, height: r3.height } }), a3 = "horizontal" === i3.get("layout") ? "width" : "height";
          return o3.setShape(a3, 0), fh(o3, { shape: { width: r3.width, height: r3.height } }, e3, n4), o3;
        }(s2, t3, function() {
          setTimeout(function() {
            r2.removeClipPath();
          });
        });
        r2.setClipPath(h2);
      }
      this._data = o2;
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      this._initialized = true, this._data = null, this._dataGroup.removeAll();
    }, n2.prototype.incrementalRender = function(t3, e2, n3) {
      for (var i2 = e2.getData(), r2 = e2.coordinateSystem, o2 = r2.dimensions, a2 = Dk(e2), s2 = this._progressiveEls = [], l2 = t3.start; l2 < t3.end; l2++) {
        var u2 = Ck(i2, this._dataGroup, l2, o2, r2);
        u2.incremental = true, Ak(u2, i2, l2, a2), s2.push(u2);
      }
    }, n2.prototype.remove = function() {
      this._dataGroup && this._dataGroup.removeAll(), this._data = null;
    }, n2.type = "parallel", n2;
  }(Ag);
  function Tk(t2, e2, n2, i2) {
    for (var r2, o2 = [], a2 = 0; a2 < n2.length; a2++) {
      var s2 = n2[a2], l2 = t2.get(t2.mapDimension(s2), e2);
      r2 = l2, ("category" === i2.getAxis(s2).type ? null == r2 : null == r2 || isNaN(r2)) || o2.push(i2.dataToPoint(l2, s2));
    }
    return o2;
  }
  function Ck(t2, e2, n2, i2, r2) {
    var o2 = Tk(t2, n2, i2, r2), a2 = new Hu({ shape: { points: o2 }, z2: 10 });
    return e2.add(a2), t2.setItemGraphicEl(n2, a2), a2;
  }
  function Dk(t2) {
    var e2 = t2.get("smooth", true);
    return true === e2 && (e2 = 0.3), et(e2 = uo(e2)) && (e2 = 0), { smooth: e2 };
  }
  function Ak(t2, e2, n2, i2) {
    t2.useStyle(e2.getItemVisual(n2, "style")), t2.style.fill = null, t2.setShape("smooth", i2.smooth);
    var r2 = e2.getItemModel(n2), o2 = r2.getModel("emphasis");
    Zl(t2, r2, "lineStyle"), Hl(t2, o2.get("focus"), o2.get("blurScope"), o2.get("disabled"));
  }
  var kk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.visualStyleAccessPath = "lineStyle", e2.visualDrawType = "stroke", e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this, { useEncodeDefaulter: G(Lk, null, this) });
    }, n2.prototype.getRawIndicesByActiveState = function(t3) {
      var e2 = this.coordinateSystem, n3 = this.getData(), i2 = [];
      return e2.eachActiveState(n3, function(e3, r2) {
        t3 === e3 && i2.push(n3.getRawIndex(r2));
      }), i2;
    }, n2.type = "series.parallel", n2.dependencies = ["parallel"], n2.defaultOption = { z: 2, coordinateSystem: "parallel", parallelIndex: 0, label: { show: false }, inactiveOpacity: 0.05, activeOpacity: 1, lineStyle: { width: 1, opacity: 0.45, type: "solid" }, emphasis: { label: { show: false } }, progressive: 500, smooth: false, animationEasing: "linear" }, n2;
  }(vg);
  function Lk(t2) {
    var e2 = t2.ecModel.getComponent("parallel", t2.get("parallelIndex"));
    if (e2) {
      var n2 = {};
      return N(e2.dimensions, function(t3) {
        var e3 = +t3.replace("dim", "");
        n2[t3] = e3;
      }), n2;
    }
  }
  var Pk = ["lineStyle", "opacity"];
  var Ok = { seriesType: "parallel", reset: function(t2, e2) {
    var n2 = t2.coordinateSystem, i2 = { normal: t2.get(["lineStyle", "opacity"]), active: t2.get("activeOpacity"), inactive: t2.get("inactiveOpacity") };
    return { progress: function(t3, e3) {
      n2.eachActiveState(e3, function(t4, n3) {
        var r2 = i2[t4];
        if ("normal" === t4 && e3.hasItemOption) {
          var o2 = e3.getItemModel(n3).get(Pk, true);
          null != o2 && (r2 = o2);
        }
        e3.ensureUniqueItemVisual(n3, "style").opacity = r2;
      }, t3.start, t3.end);
    } };
  } };
  function Rk(t2) {
    !function(t3) {
      if (t3.parallel)
        return;
      var e2 = false;
      N(t3.series, function(t4) {
        t4 && "parallel" === t4.type && (e2 = true);
      }), e2 && (t3.parallel = [{}]);
    }(t2), function(t3) {
      var e2 = _o(t3.parallelAxis);
      N(e2, function(e3) {
        if (j(e3)) {
          var n2 = e3.parallelIndex || 0, i2 = _o(t3.parallel)[n2];
          i2 && i2.parallelAxisDefault && T(e3, i2.parallelAxisDefault, false);
        }
      });
    }(t2);
  }
  var Nk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      this._model = t3, this._api = n3, this._handlers || (this._handlers = {}, N(Ek, function(t4, e3) {
        n3.getZr().on(e3, this._handlers[e3] = G(t4, this));
      }, this)), Bg(this, "_throttledDispatchExpand", t3.get("axisExpandRate"), "fixRate");
    }, n2.prototype.dispose = function(t3, e2) {
      Fg(this, "_throttledDispatchExpand"), N(this._handlers, function(t4, n3) {
        e2.getZr().off(n3, t4);
      }), this._handlers = null;
    }, n2.prototype._throttledDispatchExpand = function(t3) {
      this._dispatchExpand(t3);
    }, n2.prototype._dispatchExpand = function(t3) {
      t3 && this._api.dispatchAction(D({ type: "parallelAxisExpand" }, t3));
    }, n2.type = "parallel", n2;
  }(Ig);
  var Ek = { mousedown: function(t2) {
    zk(this, "click") && (this._mouseDownPoint = [t2.offsetX, t2.offsetY]);
  }, mouseup: function(t2) {
    var e2 = this._mouseDownPoint;
    if (zk(this, "click") && e2) {
      var n2 = [t2.offsetX, t2.offsetY];
      if (Math.pow(e2[0] - n2[0], 2) + Math.pow(e2[1] - n2[1], 2) > 5)
        return;
      var i2 = this._model.coordinateSystem.getSlidedAxisExpandWindow([t2.offsetX, t2.offsetY]);
      "none" !== i2.behavior && this._dispatchExpand({ axisExpandWindow: i2.axisExpandWindow });
    }
    this._mouseDownPoint = null;
  }, mousemove: function(t2) {
    if (!this._mouseDownPoint && zk(this, "mousemove")) {
      var e2 = this._model, n2 = e2.coordinateSystem.getSlidedAxisExpandWindow([t2.offsetX, t2.offsetY]), i2 = n2.behavior;
      "jump" === i2 && this._throttledDispatchExpand.debounceNextCall(e2.get("axisExpandDebounce")), this._throttledDispatchExpand("none" === i2 ? null : { axisExpandWindow: n2.axisExpandWindow, animation: "jump" === i2 ? null : { duration: 0 } });
    }
  } };
  function zk(t2, e2) {
    var n2 = t2._model;
    return n2.get("axisExpandable") && n2.get("axisExpandTriggerOn") === e2;
  }
  var Vk = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      t2.prototype.init.apply(this, arguments), this.mergeOption({});
    }, n2.prototype.mergeOption = function(t3) {
      var e2 = this.option;
      t3 && T(e2, t3, true), this._initDimensions();
    }, n2.prototype.contains = function(t3, e2) {
      var n3 = t3.get("parallelIndex");
      return null != n3 && e2.getComponent("parallel", n3) === this;
    }, n2.prototype.setAxisExpand = function(t3) {
      N(["axisExpandable", "axisExpandCenter", "axisExpandCount", "axisExpandWidth", "axisExpandWindow"], function(e2) {
        t3.hasOwnProperty(e2) && (this.option[e2] = t3[e2]);
      }, this);
    }, n2.prototype._initDimensions = function() {
      var t3 = this.dimensions = [], e2 = this.parallelAxisIndex = [];
      N(V(this.ecModel.queryComponents({ mainType: "parallelAxis" }), function(t4) {
        return (t4.get("parallelIndex") || 0) === this.componentIndex;
      }, this), function(n3) {
        t3.push("dim" + n3.get("dim")), e2.push(n3.componentIndex);
      });
    }, n2.type = "parallel", n2.dependencies = ["parallelAxis"], n2.layoutMode = "box", n2.defaultOption = { z: 0, left: 80, top: 60, right: 80, bottom: 60, layout: "horizontal", axisExpandable: false, axisExpandCenter: null, axisExpandCount: 0, axisExpandWidth: 50, axisExpandRate: 17, axisExpandDebounce: 50, axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4], axisExpandTriggerOn: "click", parallelAxisDefault: null }, n2;
  }(Op);
  var Bk = function(t2) {
    function n2(e2, n3, i2, r2, o2) {
      var a2 = t2.call(this, e2, n3, i2) || this;
      return a2.type = r2 || "value", a2.axisIndex = o2, a2;
    }
    return e(n2, t2), n2.prototype.isHorizontal = function() {
      return "horizontal" !== this.coordinateSystem.getModel().get("layout");
    }, n2;
  }(cb);
  function Fk(t2, e2, n2, i2, r2, o2) {
    t2 = t2 || 0;
    var a2 = n2[1] - n2[0];
    if (null != r2 && (r2 = Wk(r2, [0, a2])), null != o2 && (o2 = Math.max(o2, null != r2 ? r2 : 0)), "all" === i2) {
      var s2 = Math.abs(e2[1] - e2[0]);
      s2 = Wk(s2, [0, a2]), r2 = o2 = Wk(s2, [r2, o2]), i2 = 0;
    }
    e2[0] = Wk(e2[0], n2), e2[1] = Wk(e2[1], n2);
    var l2 = Gk(e2, i2);
    e2[i2] += t2;
    var u2, h2 = r2 || 0, c2 = n2.slice();
    return l2.sign < 0 ? c2[0] += h2 : c2[1] -= h2, e2[i2] = Wk(e2[i2], c2), u2 = Gk(e2, i2), null != r2 && (u2.sign !== l2.sign || u2.span < r2) && (e2[1 - i2] = e2[i2] + l2.sign * r2), u2 = Gk(e2, i2), null != o2 && u2.span > o2 && (e2[1 - i2] = e2[i2] + u2.sign * o2), e2;
  }
  function Gk(t2, e2) {
    var n2 = t2[e2] - t2[1 - e2];
    return { span: Math.abs(n2), sign: n2 > 0 ? -1 : n2 < 0 ? 1 : e2 ? -1 : 1 };
  }
  function Wk(t2, e2) {
    return Math.min(null != e2[1] ? e2[1] : 1 / 0, Math.max(null != e2[0] ? e2[0] : -1 / 0, t2));
  }
  var Hk = N;
  var Yk = Math.min;
  var Xk = Math.max;
  var Uk = Math.floor;
  var Zk = Math.ceil;
  var jk = Ur;
  var qk = Math.PI;
  var Kk = function() {
    function t2(t3, e2, n2) {
      this.type = "parallel", this._axesMap = gt(), this._axesLayout = {}, this.dimensions = t3.dimensions, this._model = t3, this._init(t3, e2, n2);
    }
    return t2.prototype._init = function(t3, e2, n2) {
      var i2 = t3.dimensions, r2 = t3.parallelAxisIndex;
      Hk(i2, function(t4, n3) {
        var i3 = r2[n3], o2 = e2.getComponent("parallelAxis", i3), a2 = this._axesMap.set(t4, new Bk(t4, C_(o2), [0, 0], o2.get("type"), i3)), s2 = "category" === a2.type;
        a2.onBand = s2 && o2.get("boundaryGap"), a2.inverse = o2.get("inverse"), o2.axis = a2, a2.model = o2, a2.coordinateSystem = o2.coordinateSystem = this;
      }, this);
    }, t2.prototype.update = function(t3, e2) {
      this._updateAxesFromSeries(this._model, t3);
    }, t2.prototype.containPoint = function(t3) {
      var e2 = this._makeLayoutInfo(), n2 = e2.axisBase, i2 = e2.layoutBase, r2 = e2.pixelDimIndex, o2 = t3[1 - r2], a2 = t3[r2];
      return o2 >= n2 && o2 <= n2 + e2.axisLength && a2 >= i2 && a2 <= i2 + e2.layoutLength;
    }, t2.prototype.getModel = function() {
      return this._model;
    }, t2.prototype._updateAxesFromSeries = function(t3, e2) {
      e2.eachSeries(function(n2) {
        if (t3.contains(n2, e2)) {
          var i2 = n2.getData();
          Hk(this.dimensions, function(t4) {
            var e3 = this._axesMap.get(t4);
            e3.scale.unionExtentFromData(i2, i2.mapDimension(t4)), T_(e3.scale, e3.model);
          }, this);
        }
      }, this);
    }, t2.prototype.resize = function(t3, e2) {
      this._rect = Tp(t3.getBoxLayoutParams(), { width: e2.getWidth(), height: e2.getHeight() }), this._layoutAxes();
    }, t2.prototype.getRect = function() {
      return this._rect;
    }, t2.prototype._makeLayoutInfo = function() {
      var t3, e2 = this._model, n2 = this._rect, i2 = ["x", "y"], r2 = ["width", "height"], o2 = e2.get("layout"), a2 = "horizontal" === o2 ? 0 : 1, s2 = n2[r2[a2]], l2 = [0, s2], u2 = this.dimensions.length, h2 = $k(e2.get("axisExpandWidth"), l2), c2 = $k(e2.get("axisExpandCount") || 0, [0, u2]), p2 = e2.get("axisExpandable") && u2 > 3 && u2 > c2 && c2 > 1 && h2 > 0 && s2 > 0, d2 = e2.get("axisExpandWindow");
      d2 ? (t3 = $k(d2[1] - d2[0], l2), d2[1] = d2[0] + t3) : (t3 = $k(h2 * (c2 - 1), l2), (d2 = [h2 * (e2.get("axisExpandCenter") || Uk(u2 / 2)) - t3 / 2])[1] = d2[0] + t3);
      var f2 = (s2 - t3) / (u2 - c2);
      f2 < 3 && (f2 = 0);
      var g2 = [Uk(jk(d2[0] / h2, 1)) + 1, Zk(jk(d2[1] / h2, 1)) - 1], y2 = f2 / h2 * d2[0];
      return { layout: o2, pixelDimIndex: a2, layoutBase: n2[i2[a2]], layoutLength: s2, axisBase: n2[i2[1 - a2]], axisLength: n2[r2[1 - a2]], axisExpandable: p2, axisExpandWidth: h2, axisCollapseWidth: f2, axisExpandWindow: d2, axisCount: u2, winInnerIndices: g2, axisExpandWindow0Pos: y2 };
    }, t2.prototype._layoutAxes = function() {
      var t3 = this._rect, e2 = this._axesMap, n2 = this.dimensions, i2 = this._makeLayoutInfo(), r2 = i2.layout;
      e2.each(function(t4) {
        var e3 = [0, i2.axisLength], n3 = t4.inverse ? 1 : 0;
        t4.setExtent(e3[n3], e3[1 - n3]);
      }), Hk(n2, function(e3, n3) {
        var o2 = (i2.axisExpandable ? Qk : Jk)(n3, i2), a2 = { horizontal: { x: o2.position, y: i2.axisLength }, vertical: { x: 0, y: o2.position } }, s2 = { horizontal: qk / 2, vertical: 0 }, l2 = [a2[r2].x + t3.x, a2[r2].y + t3.y], u2 = s2[r2], h2 = [1, 0, 0, 1, 0, 0];
        we(h2, h2, u2), be(h2, h2, l2), this._axesLayout[e3] = { position: l2, rotation: u2, transform: h2, axisNameAvailableWidth: o2.axisNameAvailableWidth, axisLabelShow: o2.axisLabelShow, nameTruncateMaxWidth: o2.nameTruncateMaxWidth, tickDirection: 1, labelDirection: 1 };
      }, this);
    }, t2.prototype.getAxis = function(t3) {
      return this._axesMap.get(t3);
    }, t2.prototype.dataToPoint = function(t3, e2) {
      return this.axisCoordToPoint(this._axesMap.get(e2).dataToCoord(t3), e2);
    }, t2.prototype.eachActiveState = function(t3, e2, n2, i2) {
      null == n2 && (n2 = 0), null == i2 && (i2 = t3.count());
      var r2 = this._axesMap, o2 = this.dimensions, a2 = [], s2 = [];
      N(o2, function(e3) {
        a2.push(t3.mapDimension(e3)), s2.push(r2.get(e3).model);
      });
      for (var l2 = this.hasAxisBrushed(), u2 = n2; u2 < i2; u2++) {
        var h2 = void 0;
        if (l2) {
          h2 = "active";
          for (var c2 = t3.getValues(a2, u2), p2 = 0, d2 = o2.length; p2 < d2; p2++) {
            if ("inactive" === s2[p2].getActiveState(c2[p2])) {
              h2 = "inactive";
              break;
            }
          }
        } else
          h2 = "normal";
        e2(h2, u2);
      }
    }, t2.prototype.hasAxisBrushed = function() {
      for (var t3 = this.dimensions, e2 = this._axesMap, n2 = false, i2 = 0, r2 = t3.length; i2 < r2; i2++)
        "normal" !== e2.get(t3[i2]).model.getActiveState() && (n2 = true);
      return n2;
    }, t2.prototype.axisCoordToPoint = function(t3, e2) {
      return Eh([t3, 0], this._axesLayout[e2].transform);
    }, t2.prototype.getAxisLayout = function(t3) {
      return I(this._axesLayout[t3]);
    }, t2.prototype.getSlidedAxisExpandWindow = function(t3) {
      var e2 = this._makeLayoutInfo(), n2 = e2.pixelDimIndex, i2 = e2.axisExpandWindow.slice(), r2 = i2[1] - i2[0], o2 = [0, e2.axisExpandWidth * (e2.axisCount - 1)];
      if (!this.containPoint(t3))
        return { behavior: "none", axisExpandWindow: i2 };
      var a2, s2 = t3[n2] - e2.layoutBase - e2.axisExpandWindow0Pos, l2 = "slide", u2 = e2.axisCollapseWidth, h2 = this._model.get("axisExpandSlideTriggerArea"), c2 = null != h2[0];
      if (u2)
        c2 && u2 && s2 < r2 * h2[0] ? (l2 = "jump", a2 = s2 - r2 * h2[2]) : c2 && u2 && s2 > r2 * (1 - h2[0]) ? (l2 = "jump", a2 = s2 - r2 * (1 - h2[2])) : (a2 = s2 - r2 * h2[1]) >= 0 && (a2 = s2 - r2 * (1 - h2[1])) <= 0 && (a2 = 0), (a2 *= e2.axisExpandWidth / u2) ? Fk(a2, i2, o2, "all") : l2 = "none";
      else {
        var p2 = i2[1] - i2[0];
        (i2 = [Xk(0, o2[1] * s2 / p2 - p2 / 2)])[1] = Yk(o2[1], i2[0] + p2), i2[0] = i2[1] - p2;
      }
      return { axisExpandWindow: i2, behavior: l2 };
    }, t2;
  }();
  function $k(t2, e2) {
    return Yk(Xk(t2, e2[0]), e2[1]);
  }
  function Jk(t2, e2) {
    var n2 = e2.layoutLength / (e2.axisCount - 1);
    return { position: n2 * t2, axisNameAvailableWidth: n2, axisLabelShow: true };
  }
  function Qk(t2, e2) {
    var n2, i2, r2 = e2.layoutLength, o2 = e2.axisExpandWidth, a2 = e2.axisCount, s2 = e2.axisCollapseWidth, l2 = e2.winInnerIndices, u2 = s2, h2 = false;
    return t2 < l2[0] ? (n2 = t2 * s2, i2 = s2) : t2 <= l2[1] ? (n2 = e2.axisExpandWindow0Pos + t2 * o2 - e2.axisExpandWindow[0], u2 = o2, h2 = true) : (n2 = r2 - (a2 - 1 - t2) * s2, i2 = s2), { position: n2, axisNameAvailableWidth: u2, axisLabelShow: h2, nameTruncateMaxWidth: i2 };
  }
  var tL = { create: function(t2, e2) {
    var n2 = [];
    return t2.eachComponent("parallel", function(i2, r2) {
      var o2 = new Kk(i2, t2, e2);
      o2.name = "parallel_" + r2, o2.resize(i2, e2), i2.coordinateSystem = o2, o2.model = i2, n2.push(o2);
    }), t2.eachSeries(function(t3) {
      if ("parallel" === t3.get("coordinateSystem")) {
        var e3 = t3.getReferringComponents("parallel", Eo).models[0];
        t3.coordinateSystem = e3.coordinateSystem;
      }
    }), n2;
  } };
  var eL = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.activeIntervals = [], e2;
    }
    return e(n2, t2), n2.prototype.getAreaSelectStyle = function() {
      return $o([["fill", "color"], ["lineWidth", "borderWidth"], ["stroke", "borderColor"], ["width", "width"], ["opacity", "opacity"]])(this.getModel("areaSelectStyle"));
    }, n2.prototype.setActiveIntervals = function(t3) {
      var e2 = this.activeIntervals = I(t3);
      if (e2)
        for (var n3 = e2.length - 1; n3 >= 0; n3--)
          Zr(e2[n3]);
    }, n2.prototype.getActiveState = function(t3) {
      var e2 = this.activeIntervals;
      if (!e2.length)
        return "normal";
      if (null == t3 || isNaN(+t3))
        return "inactive";
      if (1 === e2.length) {
        var n3 = e2[0];
        if (n3[0] <= t3 && t3 <= n3[1])
          return "active";
      } else
        for (var i2 = 0, r2 = e2.length; i2 < r2; i2++)
          if (e2[i2][0] <= t3 && t3 <= e2[i2][1])
            return "active";
      return "inactive";
    }, n2;
  }(Op);
  O(eL, R_);
  var nL = true;
  var iL = Math.min;
  var rL = Math.max;
  var oL = Math.pow;
  var aL = "globalPan";
  var sL = { w: [0, 0], e: [0, 1], n: [1, 0], s: [1, 1] };
  var lL = { w: "ew", e: "ew", n: "ns", s: "ns", ne: "nesw", sw: "nesw", nw: "nwse", se: "nwse" };
  var uL = { brushStyle: { lineWidth: 2, stroke: "rgba(210,219,238,0.3)", fill: "#D2DBEE" }, transformable: true, brushMode: "single", removeOnClick: false };
  var hL = 0;
  var cL = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this) || this;
      return n3._track = [], n3._covers = [], n3._handlers = {}, n3._zr = e2, n3.group = new Er(), n3._uid = "brushController_" + hL++, N(VL, function(t3, e3) {
        this._handlers[e3] = G(t3, this);
      }, n3), n3;
    }
    return e(n2, t2), n2.prototype.enableBrush = function(t3) {
      return this._brushType && this._doDisableBrush(), t3.brushType && this._doEnableBrush(t3), this;
    }, n2.prototype._doEnableBrush = function(t3) {
      var e2 = this._zr;
      this._enableGlobalPan || function(t4, e3, n3) {
        rT(t4)[e3] = n3;
      }(e2, aL, this._uid), N(this._handlers, function(t4, n3) {
        e2.on(n3, t4);
      }), this._brushType = t3.brushType, this._brushOption = T(I(uL), t3, true);
    }, n2.prototype._doDisableBrush = function() {
      var t3 = this._zr;
      !function(t4, e2, n3) {
        var i2 = rT(t4);
        i2[e2] === n3 && (i2[e2] = null);
      }(t3, aL, this._uid), N(this._handlers, function(e2, n3) {
        t3.off(n3, e2);
      }), this._brushType = this._brushOption = null;
    }, n2.prototype.setPanels = function(t3) {
      if (t3 && t3.length) {
        var e2 = this._panels = {};
        N(t3, function(t4) {
          e2[t4.panelId] = I(t4);
        });
      } else
        this._panels = null;
      return this;
    }, n2.prototype.mount = function(t3) {
      t3 = t3 || {}, this._enableGlobalPan = t3.enableGlobalPan;
      var e2 = this.group;
      return this._zr.add(e2), e2.attr({ x: t3.x || 0, y: t3.y || 0, rotation: t3.rotation || 0, scaleX: t3.scaleX || 1, scaleY: t3.scaleY || 1 }), this._transform = e2.getLocalTransform(), this;
    }, n2.prototype.updateCovers = function(t3) {
      t3 = E(t3, function(t4) {
        return T(I(uL), t4, true);
      });
      var e2 = this._covers, n3 = this._covers = [], i2 = this, r2 = this._creatingCover;
      return new Zm(e2, t3, function(t4, e3) {
        return o2(t4.__brushOption, e3);
      }, o2).add(a2).update(a2).remove(function(t4) {
        e2[t4] !== r2 && i2.group.remove(e2[t4]);
      }).execute(), this;
      function o2(t4, e3) {
        return (null != t4.id ? t4.id : "\0-brush-index-" + e3) + "-" + t4.brushType;
      }
      function a2(o3, a3) {
        var s2 = t3[o3];
        if (null != a3 && e2[a3] === r2)
          n3[o3] = e2[a3];
        else {
          var l2 = n3[o3] = null != a3 ? (e2[a3].__brushOption = s2, e2[a3]) : dL(i2, pL(i2, s2));
          yL(i2, l2);
        }
      }
    }, n2.prototype.unmount = function() {
      return this.enableBrush(false), _L(this), this._zr.remove(this.group), this;
    }, n2.prototype.dispose = function() {
      this.unmount(), this.off();
    }, n2;
  }(Zt);
  function pL(t2, e2) {
    var n2 = FL[e2.brushType].createCover(t2, e2);
    return n2.__brushOption = e2, gL(n2, e2), t2.group.add(n2), n2;
  }
  function dL(t2, e2) {
    var n2 = vL(e2);
    return n2.endCreating && (n2.endCreating(t2, e2), gL(e2, e2.__brushOption)), e2;
  }
  function fL(t2, e2) {
    var n2 = e2.__brushOption;
    vL(e2).updateCoverShape(t2, e2, n2.range, n2);
  }
  function gL(t2, e2) {
    var n2 = e2.z;
    null == n2 && (n2 = 1e4), t2.traverse(function(t3) {
      t3.z = n2, t3.z2 = n2;
    });
  }
  function yL(t2, e2) {
    vL(e2).updateCommon(t2, e2), fL(t2, e2);
  }
  function vL(t2) {
    return FL[t2.__brushOption.brushType];
  }
  function mL(t2, e2, n2) {
    var i2, r2 = t2._panels;
    if (!r2)
      return nL;
    var o2 = t2._transform;
    return N(r2, function(t3) {
      t3.isTargetByCursor(e2, n2, o2) && (i2 = t3);
    }), i2;
  }
  function xL(t2, e2) {
    var n2 = t2._panels;
    if (!n2)
      return nL;
    var i2 = e2.__brushOption.panelId;
    return null != i2 ? n2[i2] : nL;
  }
  function _L(t2) {
    var e2 = t2._covers, n2 = e2.length;
    return N(e2, function(e3) {
      t2.group.remove(e3);
    }, t2), e2.length = 0, !!n2;
  }
  function bL(t2, e2) {
    var n2 = E(t2._covers, function(t3) {
      var e3 = t3.__brushOption, n3 = I(e3.range);
      return { brushType: e3.brushType, panelId: e3.panelId, range: n3 };
    });
    t2.trigger("brush", { areas: n2, isEnd: !!e2.isEnd, removeOnClick: !!e2.removeOnClick });
  }
  function wL(t2) {
    var e2 = t2.length - 1;
    return e2 < 0 && (e2 = 0), [t2[0], t2[e2]];
  }
  function SL(t2, e2, n2, i2) {
    var r2 = new Er();
    return r2.add(new Es({ name: "main", style: CL(n2), silent: true, draggable: true, cursor: "move", drift: W(kL, t2, e2, r2, ["n", "s", "w", "e"]), ondragend: W(bL, e2, { isEnd: true }) })), N(i2, function(n3) {
      r2.add(new Es({ name: n3.join(""), style: { opacity: 0 }, draggable: true, silent: true, invisible: true, drift: W(kL, t2, e2, r2, n3), ondragend: W(bL, e2, { isEnd: true }) }));
    }), r2;
  }
  function ML(t2, e2, n2, i2) {
    var r2 = i2.brushStyle.lineWidth || 0, o2 = rL(r2, 6), a2 = n2[0][0], s2 = n2[1][0], l2 = a2 - r2 / 2, u2 = s2 - r2 / 2, h2 = n2[0][1], c2 = n2[1][1], p2 = h2 - o2 + r2 / 2, d2 = c2 - o2 + r2 / 2, f2 = h2 - a2, g2 = c2 - s2, y2 = f2 + r2, v2 = g2 + r2;
    TL(t2, e2, "main", a2, s2, f2, g2), i2.transformable && (TL(t2, e2, "w", l2, u2, o2, v2), TL(t2, e2, "e", p2, u2, o2, v2), TL(t2, e2, "n", l2, u2, y2, o2), TL(t2, e2, "s", l2, d2, y2, o2), TL(t2, e2, "nw", l2, u2, o2, o2), TL(t2, e2, "ne", p2, u2, o2, o2), TL(t2, e2, "sw", l2, d2, o2, o2), TL(t2, e2, "se", p2, d2, o2, o2));
  }
  function IL(t2, e2) {
    var n2 = e2.__brushOption, i2 = n2.transformable, r2 = e2.childAt(0);
    r2.useStyle(CL(n2)), r2.attr({ silent: !i2, cursor: i2 ? "move" : "default" }), N([["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]], function(n3) {
      var r3 = e2.childOfName(n3.join("")), o2 = 1 === n3.length ? AL(t2, n3[0]) : function(t3, e3) {
        var n4 = [AL(t3, e3[0]), AL(t3, e3[1])];
        return ("e" === n4[0] || "w" === n4[0]) && n4.reverse(), n4.join("");
      }(t2, n3);
      r3 && r3.attr({ silent: !i2, invisible: !i2, cursor: i2 ? lL[o2] + "-resize" : null });
    });
  }
  function TL(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = e2.childOfName(n2);
    s2 && s2.setShape(function(t3) {
      var e3 = iL(t3[0][0], t3[1][0]), n3 = iL(t3[0][1], t3[1][1]), i3 = rL(t3[0][0], t3[1][0]), r3 = rL(t3[0][1], t3[1][1]);
      return { x: e3, y: n3, width: i3 - e3, height: r3 - n3 };
    }(OL(t2, e2, [[i2, r2], [i2 + o2, r2 + a2]])));
  }
  function CL(t2) {
    return A({ strokeNoScale: true }, t2.brushStyle);
  }
  function DL(t2, e2, n2, i2) {
    var r2 = [iL(t2, n2), iL(e2, i2)], o2 = [rL(t2, n2), rL(e2, i2)];
    return [[r2[0], o2[0]], [r2[1], o2[1]]];
  }
  function AL(t2, e2) {
    var n2 = zh({ w: "left", e: "right", n: "top", s: "bottom" }[e2], function(t3) {
      return Nh(t3.group);
    }(t2));
    return { left: "w", right: "e", top: "n", bottom: "s" }[n2];
  }
  function kL(t2, e2, n2, i2, r2, o2) {
    var a2 = n2.__brushOption, s2 = t2.toRectRange(a2.range), l2 = PL(e2, r2, o2);
    N(i2, function(t3) {
      var e3 = sL[t3];
      s2[e3[0]][e3[1]] += l2[e3[0]];
    }), a2.range = t2.fromRectRange(DL(s2[0][0], s2[1][0], s2[0][1], s2[1][1])), yL(e2, n2), bL(e2, { isEnd: false });
  }
  function LL(t2, e2, n2, i2) {
    var r2 = e2.__brushOption.range, o2 = PL(t2, n2, i2);
    N(r2, function(t3) {
      t3[0] += o2[0], t3[1] += o2[1];
    }), yL(t2, e2), bL(t2, { isEnd: false });
  }
  function PL(t2, e2, n2) {
    var i2 = t2.group, r2 = i2.transformCoordToLocal(e2, n2), o2 = i2.transformCoordToLocal(0, 0);
    return [r2[0] - o2[0], r2[1] - o2[1]];
  }
  function OL(t2, e2, n2) {
    var i2 = xL(t2, e2);
    return i2 && i2 !== nL ? i2.clipPath(n2, t2._transform) : I(n2);
  }
  function RL(t2) {
    var e2 = t2.event;
    e2.preventDefault && e2.preventDefault();
  }
  function NL(t2, e2, n2) {
    return t2.childOfName("main").contain(e2, n2);
  }
  function EL(t2, e2, n2, i2) {
    var r2, o2 = t2._creatingCover, a2 = t2._creatingPanel, s2 = t2._brushOption;
    if (t2._track.push(n2.slice()), function(t3) {
      var e3 = t3._track;
      if (!e3.length)
        return false;
      var n3 = e3[e3.length - 1], i3 = e3[0], r3 = n3[0] - i3[0], o3 = n3[1] - i3[1];
      return oL(r3 * r3 + o3 * o3, 0.5) > 6;
    }(t2) || o2) {
      if (a2 && !o2) {
        "single" === s2.brushMode && _L(t2);
        var l2 = I(s2);
        l2.brushType = zL(l2.brushType, a2), l2.panelId = a2 === nL ? null : a2.panelId, o2 = t2._creatingCover = pL(t2, l2), t2._covers.push(o2);
      }
      if (o2) {
        var u2 = FL[zL(t2._brushType, a2)];
        o2.__brushOption.range = u2.getCreatingRange(OL(t2, o2, t2._track)), i2 && (dL(t2, o2), u2.updateCommon(t2, o2)), fL(t2, o2), r2 = { isEnd: i2 };
      }
    } else
      i2 && "single" === s2.brushMode && s2.removeOnClick && mL(t2, e2, n2) && _L(t2) && (r2 = { isEnd: i2, removeOnClick: true });
    return r2;
  }
  function zL(t2, e2) {
    return "auto" === t2 ? e2.defaultBrushType : t2;
  }
  var VL = { mousedown: function(t2) {
    if (this._dragging)
      BL(this, t2);
    else if (!t2.target || !t2.target.draggable) {
      RL(t2);
      var e2 = this.group.transformCoordToLocal(t2.offsetX, t2.offsetY);
      this._creatingCover = null, (this._creatingPanel = mL(this, t2, e2)) && (this._dragging = true, this._track = [e2.slice()]);
    }
  }, mousemove: function(t2) {
    var e2 = t2.offsetX, n2 = t2.offsetY, i2 = this.group.transformCoordToLocal(e2, n2);
    if (function(t3, e3, n3) {
      if (t3._brushType && !function(t4, e4, n4) {
        var i4 = t4._zr;
        return e4 < 0 || e4 > i4.getWidth() || n4 < 0 || n4 > i4.getHeight();
      }(t3, e3.offsetX, e3.offsetY)) {
        var i3 = t3._zr, r3 = t3._covers, o2 = mL(t3, e3, n3);
        if (!t3._dragging)
          for (var a2 = 0; a2 < r3.length; a2++) {
            var s2 = r3[a2].__brushOption;
            if (o2 && (o2 === nL || s2.panelId === o2.panelId) && FL[s2.brushType].contain(r3[a2], n3[0], n3[1]))
              return;
          }
        o2 && i3.setCursorStyle("crosshair");
      }
    }(this, t2, i2), this._dragging) {
      RL(t2);
      var r2 = EL(this, t2, i2, false);
      r2 && bL(this, r2);
    }
  }, mouseup: function(t2) {
    BL(this, t2);
  } };
  function BL(t2, e2) {
    if (t2._dragging) {
      RL(e2);
      var n2 = e2.offsetX, i2 = e2.offsetY, r2 = t2.group.transformCoordToLocal(n2, i2), o2 = EL(t2, e2, r2, true);
      t2._dragging = false, t2._track = [], t2._creatingCover = null, o2 && bL(t2, o2);
    }
  }
  var FL = { lineX: GL(0), lineY: GL(1), rect: { createCover: function(t2, e2) {
    function n2(t3) {
      return t3;
    }
    return SL({ toRectRange: n2, fromRectRange: n2 }, t2, e2, [["w"], ["e"], ["n"], ["s"], ["s", "e"], ["s", "w"], ["n", "e"], ["n", "w"]]);
  }, getCreatingRange: function(t2) {
    var e2 = wL(t2);
    return DL(e2[1][0], e2[1][1], e2[0][0], e2[0][1]);
  }, updateCoverShape: function(t2, e2, n2, i2) {
    ML(t2, e2, n2, i2);
  }, updateCommon: IL, contain: NL }, polygon: { createCover: function(t2, e2) {
    var n2 = new Er();
    return n2.add(new Hu({ name: "main", style: CL(e2), silent: true })), n2;
  }, getCreatingRange: function(t2) {
    return t2;
  }, endCreating: function(t2, e2) {
    e2.remove(e2.childAt(0)), e2.add(new Gu({ name: "main", draggable: true, drift: W(LL, t2, e2), ondragend: W(bL, t2, { isEnd: true }) }));
  }, updateCoverShape: function(t2, e2, n2, i2) {
    e2.childAt(0).setShape({ points: OL(t2, e2, n2) });
  }, updateCommon: IL, contain: NL } };
  function GL(t2) {
    return { createCover: function(e2, n2) {
      return SL({ toRectRange: function(e3) {
        var n3 = [e3, [0, 100]];
        return t2 && n3.reverse(), n3;
      }, fromRectRange: function(e3) {
        return e3[t2];
      } }, e2, n2, [[["w"], ["e"]], [["n"], ["s"]]][t2]);
    }, getCreatingRange: function(e2) {
      var n2 = wL(e2);
      return [iL(n2[0][t2], n2[1][t2]), rL(n2[0][t2], n2[1][t2])];
    }, updateCoverShape: function(e2, n2, i2, r2) {
      var o2, a2 = xL(e2, n2);
      if (a2 !== nL && a2.getLinearBrushOtherExtent)
        o2 = a2.getLinearBrushOtherExtent(t2);
      else {
        var s2 = e2._zr;
        o2 = [0, [s2.getWidth(), s2.getHeight()][1 - t2]];
      }
      var l2 = [i2, o2];
      t2 && l2.reverse(), ML(e2, n2, l2, r2);
    }, updateCommon: IL, contain: NL };
  }
  function WL(t2) {
    return t2 = XL(t2), function(e2) {
      return Fh(e2, t2);
    };
  }
  function HL(t2, e2) {
    return t2 = XL(t2), function(n2) {
      var i2 = null != e2 ? e2 : n2, r2 = i2 ? t2.width : t2.height, o2 = i2 ? t2.x : t2.y;
      return [o2, o2 + (r2 || 0)];
    };
  }
  function YL(t2, e2, n2) {
    var i2 = XL(t2);
    return function(t3, r2) {
      return i2.contain(r2[0], r2[1]) && !dT(t3, e2, n2);
    };
  }
  function XL(t2) {
    return Ee.create(t2);
  }
  var UL = ["axisLine", "axisTickLabel", "axisName"];
  var ZL = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2, n3) {
      t2.prototype.init.apply(this, arguments), (this._brushController = new cL(n3.getZr())).on("brush", G(this._onBrush, this));
    }, n2.prototype.render = function(t3, e2, n3, i2) {
      if (!function(t4, e3, n4) {
        return n4 && "axisAreaSelect" === n4.type && e3.findComponents({ mainType: "parallelAxis", query: n4 })[0] === t4;
      }(t3, e2, i2)) {
        this.axisModel = t3, this.api = n3, this.group.removeAll();
        var r2 = this._axisGroup;
        if (this._axisGroup = new Er(), this.group.add(this._axisGroup), t3.get("show")) {
          var o2 = function(t4, e3) {
            return e3.getComponent("parallel", t4.get("parallelIndex"));
          }(t3, e2), a2 = o2.coordinateSystem, s2 = t3.getAreaSelectStyle(), l2 = s2.width, u2 = t3.axis.dim, h2 = D({ strokeContainThreshold: l2 }, a2.getAxisLayout(u2)), c2 = new yI(t3, h2);
          N(UL, c2.add, c2), this._axisGroup.add(c2.getGroup()), this._refreshBrushController(h2, s2, t3, o2, l2, n3), Bh(r2, this._axisGroup, t3);
        }
      }
    }, n2.prototype._refreshBrushController = function(t3, e2, n3, i2, r2, o2) {
      var a2 = n3.axis.getExtent(), s2 = a2[1] - a2[0], l2 = Math.min(30, 0.1 * Math.abs(s2)), u2 = Ee.create({ x: a2[0], y: -r2 / 2, width: s2, height: r2 });
      u2.x -= l2, u2.width += 2 * l2, this._brushController.mount({ enableGlobalPan: true, rotation: t3.rotation, x: t3.position[0], y: t3.position[1] }).setPanels([{ panelId: "pl", clipPath: WL(u2), isTargetByCursor: YL(u2, o2, i2), getLinearBrushOtherExtent: HL(u2, 0) }]).enableBrush({ brushType: "lineX", brushStyle: e2, removeOnClick: true }).updateCovers(function(t4) {
        var e3 = t4.axis;
        return E(t4.activeIntervals, function(t5) {
          return { brushType: "lineX", panelId: "pl", range: [e3.dataToCoord(t5[0], true), e3.dataToCoord(t5[1], true)] };
        });
      }(n3));
    }, n2.prototype._onBrush = function(t3) {
      var e2 = t3.areas, n3 = this.axisModel, i2 = n3.axis, r2 = E(e2, function(t4) {
        return [i2.coordToData(t4.range[0], true), i2.coordToData(t4.range[1], true)];
      });
      (!n3.option.realtime === t3.isEnd || t3.removeOnClick) && this.api.dispatchAction({ type: "axisAreaSelect", parallelAxisId: n3.id, intervals: r2 });
    }, n2.prototype.dispose = function() {
      this._brushController.dispose();
    }, n2.type = "parallelAxis", n2;
  }(Ig);
  var jL = { type: "axisAreaSelect", event: "axisAreaSelected" };
  var qL = { type: "value", areaSelectStyle: { width: 20, borderWidth: 1, borderColor: "rgba(160,197,232)", color: "rgba(160,197,232)", opacity: 0.3 }, realtime: true, z: 10 };
  function KL(t2) {
    t2.registerComponentView(Nk), t2.registerComponentModel(Vk), t2.registerCoordinateSystem("parallel", tL), t2.registerPreprocessor(Rk), t2.registerComponentModel(eL), t2.registerComponentView(ZL), QM(t2, "parallel", eL, qL), function(t3) {
      t3.registerAction(jL, function(t4, e2) {
        e2.eachComponent({ mainType: "parallelAxis", query: t4 }, function(e3) {
          e3.axis.model.setActiveIntervals(t4.intervals);
        });
      }), t3.registerAction("parallelAxisExpand", function(t4, e2) {
        e2.eachComponent({ mainType: "parallel", query: t4 }, function(e3) {
          e3.setAxisExpand(t4);
        });
      });
    }(t2);
  }
  var $L = function() {
    this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.cpx2 = 0, this.cpy2 = 0, this.extent = 0;
  };
  var JL = function(t2) {
    function n2(e2) {
      return t2.call(this, e2) || this;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new $L();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.extent;
      t3.moveTo(e2.x1, e2.y1), t3.bezierCurveTo(e2.cpx1, e2.cpy1, e2.cpx2, e2.cpy2, e2.x2, e2.y2), "vertical" === e2.orient ? (t3.lineTo(e2.x2 + n3, e2.y2), t3.bezierCurveTo(e2.cpx2 + n3, e2.cpy2, e2.cpx1 + n3, e2.cpy1, e2.x1 + n3, e2.y1)) : (t3.lineTo(e2.x2, e2.y2 + n3), t3.bezierCurveTo(e2.cpx2, e2.cpy2 + n3, e2.cpx1, e2.cpy1 + n3, e2.x1, e2.y1 + n3)), t3.closePath();
    }, n2.prototype.highlight = function() {
      Al(this);
    }, n2.prototype.downplay = function() {
      kl(this);
    }, n2;
  }(Ms);
  var QL = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._focusAdjacencyDisabled = false, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = this, r2 = t3.getGraph(), o2 = this.group, a2 = t3.layoutInfo, s2 = a2.width, l2 = a2.height, u2 = t3.getData(), h2 = t3.getData("edge"), c2 = t3.get("orient");
      this._model = t3, o2.removeAll(), o2.x = a2.x, o2.y = a2.y, r2.eachEdge(function(e3) {
        var n4 = new JL(), i3 = Js(n4);
        i3.dataIndex = e3.dataIndex, i3.seriesIndex = t3.seriesIndex, i3.dataType = "edge";
        var r3, a3, u3, p2, d2, f2, g2, y2, v2 = e3.getModel(), m2 = v2.getModel("lineStyle"), x2 = m2.get("curveness"), _2 = e3.node1.getLayout(), b2 = e3.node1.getModel(), w2 = b2.get("localX"), S2 = b2.get("localY"), M2 = e3.node2.getLayout(), I2 = e3.node2.getModel(), T2 = I2.get("localX"), C2 = I2.get("localY"), D2 = e3.getLayout();
        n4.shape.extent = Math.max(1, D2.dy), n4.shape.orient = c2, "vertical" === c2 ? (r3 = (null != w2 ? w2 * s2 : _2.x) + D2.sy, a3 = (null != S2 ? S2 * l2 : _2.y) + _2.dy, u3 = (null != T2 ? T2 * s2 : M2.x) + D2.ty, d2 = r3, f2 = a3 * (1 - x2) + (p2 = null != C2 ? C2 * l2 : M2.y) * x2, g2 = u3, y2 = a3 * x2 + p2 * (1 - x2)) : (r3 = (null != w2 ? w2 * s2 : _2.x) + _2.dx, a3 = (null != S2 ? S2 * l2 : _2.y) + D2.sy, d2 = r3 * (1 - x2) + (u3 = null != T2 ? T2 * s2 : M2.x) * x2, f2 = a3, g2 = r3 * x2 + u3 * (1 - x2), y2 = p2 = (null != C2 ? C2 * l2 : M2.y) + D2.ty), n4.setShape({ x1: r3, y1: a3, x2: u3, y2: p2, cpx1: d2, cpy1: f2, cpx2: g2, cpy2: y2 }), n4.useStyle(m2.getItemStyle()), tP(n4.style, c2, e3);
        var A2 = "" + v2.get("value"), k2 = tc(v2, "edgeLabel");
        Qh(n4, k2, { labelFetcher: { getFormattedLabel: function(e4, n5, i4, r4, o3, a4) {
          return t3.getFormattedLabel(e4, n5, "edge", r4, rt(o3, k2.normal && k2.normal.get("formatter"), A2), a4);
        } }, labelDataIndex: e3.dataIndex, defaultText: A2 }), n4.setTextConfig({ position: "inside" });
        var L2 = v2.getModel("emphasis");
        Zl(n4, v2, "lineStyle", function(t4) {
          var n5 = t4.getItemStyle();
          return tP(n5, c2, e3), n5;
        }), o2.add(n4), h2.setItemGraphicEl(e3.dataIndex, n4);
        var P2 = L2.get("focus");
        Hl(n4, "adjacency" === P2 ? e3.getAdjacentDataIndices() : "trajectory" === P2 ? e3.getTrajectoryDataIndices() : P2, L2.get("blurScope"), L2.get("disabled"));
      }), r2.eachNode(function(e3) {
        var n4 = e3.getLayout(), i3 = e3.getModel(), r3 = i3.get("localX"), a3 = i3.get("localY"), h3 = i3.getModel("emphasis"), c3 = new Es({ shape: { x: null != r3 ? r3 * s2 : n4.x, y: null != a3 ? a3 * l2 : n4.y, width: n4.dx, height: n4.dy }, style: i3.getModel("itemStyle").getItemStyle(), z2: 10 });
        Qh(c3, tc(i3), { labelFetcher: { getFormattedLabel: function(e4, n5) {
          return t3.getFormattedLabel(e4, n5, "node");
        } }, labelDataIndex: e3.dataIndex, defaultText: e3.id }), c3.disableLabelAnimation = true, c3.setStyle("fill", e3.getVisual("color")), c3.setStyle("decal", e3.getVisual("style").decal), Zl(c3, i3), o2.add(c3), u2.setItemGraphicEl(e3.dataIndex, c3), Js(c3).dataType = "node";
        var p2 = h3.get("focus");
        Hl(c3, "adjacency" === p2 ? e3.getAdjacentDataIndices() : "trajectory" === p2 ? e3.getTrajectoryDataIndices() : p2, h3.get("blurScope"), h3.get("disabled"));
      }), u2.eachItemGraphicEl(function(e3, r3) {
        u2.getItemModel(r3).get("draggable") && (e3.drift = function(e4, o3) {
          i2._focusAdjacencyDisabled = true, this.shape.x += e4, this.shape.y += o3, this.dirty(), n3.dispatchAction({ type: "dragNode", seriesId: t3.id, dataIndex: u2.getRawIndex(r3), localX: this.shape.x / s2, localY: this.shape.y / l2 });
        }, e3.ondragend = function() {
          i2._focusAdjacencyDisabled = false;
        }, e3.draggable = true, e3.cursor = "move");
      }), !this._data && t3.isAnimationEnabled() && o2.setClipPath(function(t4, e3, n4) {
        var i3 = new Es({ shape: { x: t4.x - 10, y: t4.y - 10, width: 0, height: t4.height + 20 } });
        return fh(i3, { shape: { width: t4.width + 20 } }, e3, n4), i3;
      }(o2.getBoundingRect(), t3, function() {
        o2.removeClipPath();
      })), this._data = t3.getData();
    }, n2.prototype.dispose = function() {
    }, n2.type = "sankey", n2;
  }(Ag);
  function tP(t2, e2, n2) {
    switch (t2.fill) {
      case "source":
        t2.fill = n2.node1.getVisual("color"), t2.decal = n2.node1.getVisual("style").decal;
        break;
      case "target":
        t2.fill = n2.node2.getVisual("color"), t2.decal = n2.node2.getVisual("style").decal;
        break;
      case "gradient":
        var i2 = n2.node1.getVisual("color"), r2 = n2.node2.getVisual("color");
        X(i2) && X(r2) && (t2.fill = new eh(0, 0, +("horizontal" === e2), +("vertical" === e2), [{ color: i2, offset: 0 }, { color: r2, offset: 1 }]));
    }
  }
  var eP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      var n3 = t3.edges || t3.links, i2 = t3.data || t3.nodes, r2 = t3.levels;
      this.levelModels = [];
      for (var o2 = this.levelModels, a2 = 0; a2 < r2.length; a2++)
        null != r2[a2].depth && r2[a2].depth >= 0 && (o2[r2[a2].depth] = new Sc(r2[a2], this, e2));
      if (i2 && n3) {
        var s2 = pk(i2, n3, this, true, function(t4, e3) {
          t4.wrapMethod("getItemModel", function(t5, e4) {
            var n4 = t5.parentModel, i3 = n4.getData().getItemLayout(e4);
            if (i3) {
              var r3 = i3.depth, o3 = n4.levelModels[r3];
              o3 && (t5.parentModel = o3);
            }
            return t5;
          }), e3.wrapMethod("getItemModel", function(t5, e4) {
            var n4 = t5.parentModel, i3 = n4.getGraph().getEdgeByIndex(e4).node1.getLayout();
            if (i3) {
              var r3 = i3.depth, o3 = n4.levelModels[r3];
              o3 && (t5.parentModel = o3);
            }
            return t5;
          });
        });
        return s2.data;
      }
    }, n2.prototype.setNodePosition = function(t3, e2) {
      var n3 = (this.option.data || this.option.nodes)[t3];
      n3.localX = e2[0], n3.localY = e2[1];
    }, n2.prototype.getGraph = function() {
      return this.getData().graph;
    }, n2.prototype.getEdgeData = function() {
      return this.getGraph().edgeData;
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      function i2(t4) {
        return isNaN(t4) || null == t4;
      }
      if ("edge" === n3) {
        var r2 = this.getDataParams(t3, n3), o2 = r2.data, a2 = r2.value;
        return eg("nameValue", { name: o2.source + " -- " + o2.target, value: a2, noValue: i2(a2) });
      }
      var s2 = this.getGraph().getNodeByIndex(t3).getLayout().value, l2 = this.getDataParams(t3, n3).data.name;
      return eg("nameValue", { name: null != l2 ? l2 + "" : null, value: s2, noValue: i2(s2) });
    }, n2.prototype.optionUpdated = function() {
    }, n2.prototype.getDataParams = function(e2, n3) {
      var i2 = t2.prototype.getDataParams.call(this, e2, n3);
      if (null == i2.value && "node" === n3) {
        var r2 = this.getGraph().getNodeByIndex(e2).getLayout().value;
        i2.value = r2;
      }
      return i2;
    }, n2.type = "series.sankey", n2.defaultOption = { z: 2, coordinateSystem: "view", left: "5%", top: "5%", right: "20%", bottom: "5%", orient: "horizontal", nodeWidth: 20, nodeGap: 8, draggable: true, layoutIterations: 32, label: { show: true, position: "right", fontSize: 12 }, edgeLabel: { show: false, fontSize: 12 }, levels: [], nodeAlign: "justify", lineStyle: { color: "#314656", opacity: 0.2, curveness: 0.5 }, emphasis: { label: { show: true }, lineStyle: { opacity: 0.5 } }, select: { itemStyle: { borderColor: "#212121" } }, animationEasing: "linear", animationDuration: 1e3 }, n2;
  }(vg);
  function nP(t2, e2) {
    t2.eachSeriesByType("sankey", function(t3) {
      var n2 = t3.get("nodeWidth"), i2 = t3.get("nodeGap"), r2 = function(t4, e3) {
        return Tp(t4.getBoxLayoutParams(), { width: e3.getWidth(), height: e3.getHeight() });
      }(t3, e2);
      t3.layoutInfo = r2;
      var o2 = r2.width, a2 = r2.height, s2 = t3.getGraph(), l2 = s2.nodes, u2 = s2.edges;
      !function(t4) {
        N(t4, function(t5) {
          var e3 = pP(t5.outEdges, cP), n3 = pP(t5.inEdges, cP), i3 = t5.getValue() || 0, r3 = Math.max(e3, n3, i3);
          t5.setLayout({ value: r3 }, true);
        });
      }(l2), function(t4, e3, n3, i3, r3, o3, a3, s3, l3) {
        (function(t5, e4, n4, i4, r4, o4, a4) {
          for (var s4 = [], l4 = [], u3 = [], h2 = [], c2 = 0, p2 = 0; p2 < e4.length; p2++)
            s4[p2] = 1;
          for (p2 = 0; p2 < t5.length; p2++)
            l4[p2] = t5[p2].inEdges.length, 0 === l4[p2] && u3.push(t5[p2]);
          var d2 = -1;
          for (; u3.length; ) {
            for (var f2 = 0; f2 < u3.length; f2++) {
              var g2 = u3[f2], y2 = g2.hostGraph.data.getRawDataItem(g2.dataIndex), v2 = null != y2.depth && y2.depth >= 0;
              v2 && y2.depth > d2 && (d2 = y2.depth), g2.setLayout({ depth: v2 ? y2.depth : c2 }, true), "vertical" === o4 ? g2.setLayout({ dy: n4 }, true) : g2.setLayout({ dx: n4 }, true);
              for (var m2 = 0; m2 < g2.outEdges.length; m2++) {
                var x2 = g2.outEdges[m2];
                s4[e4.indexOf(x2)] = 0;
                var _2 = x2.node2;
                0 == --l4[t5.indexOf(_2)] && h2.indexOf(_2) < 0 && h2.push(_2);
              }
            }
            ++c2, u3 = h2, h2 = [];
          }
          for (p2 = 0; p2 < s4.length; p2++)
            if (1 === s4[p2])
              throw new Error("Sankey is a DAG, the original data has cycle!");
          var b2 = d2 > c2 - 1 ? d2 : c2 - 1;
          a4 && "left" !== a4 && function(t6, e5, n5, i5) {
            if ("right" === e5) {
              for (var r5 = [], o5 = t6, a5 = 0; o5.length; ) {
                for (var s5 = 0; s5 < o5.length; s5++) {
                  var l5 = o5[s5];
                  l5.setLayout({ skNodeHeight: a5 }, true);
                  for (var u4 = 0; u4 < l5.inEdges.length; u4++) {
                    var h3 = l5.inEdges[u4];
                    r5.indexOf(h3.node1) < 0 && r5.push(h3.node1);
                  }
                }
                o5 = r5, r5 = [], ++a5;
              }
              N(t6, function(t7) {
                iP(t7) || t7.setLayout({ depth: Math.max(0, i5 - t7.getLayout().skNodeHeight) }, true);
              });
            } else
              "justify" === e5 && function(t7, e6) {
                N(t7, function(t8) {
                  iP(t8) || t8.outEdges.length || t8.setLayout({ depth: e6 }, true);
                });
              }(t6, i5);
          }(t5, a4, 0, b2);
          var w2 = "vertical" === o4 ? (r4 - n4) / b2 : (i4 - n4) / b2;
          !function(t6, e5, n5) {
            N(t6, function(t7) {
              var i5 = t7.getLayout().depth * e5;
              "vertical" === n5 ? t7.setLayout({ y: i5 }, true) : t7.setLayout({ x: i5 }, true);
            });
          }(t5, w2, o4);
        })(t4, e3, n3, r3, o3, s3, l3), function(t5, e4, n4, i4, r4, o4, a4) {
          var s4 = function(t6, e5) {
            var n5 = [], i5 = "vertical" === e5 ? "y" : "x", r5 = Fo(t6, function(t7) {
              return t7.getLayout()[i5];
            });
            return r5.keys.sort(function(t7, e6) {
              return t7 - e6;
            }), N(r5.keys, function(t7) {
              n5.push(r5.buckets.get(t7));
            }), n5;
          }(t5, a4);
          (function(t6, e5, n5, i5, r5, o5) {
            var a5 = 1 / 0;
            N(t6, function(t7) {
              var e6 = t7.length, s5 = 0;
              N(t7, function(t8) {
                s5 += t8.getLayout().value;
              });
              var l5 = "vertical" === o5 ? (i5 - (e6 - 1) * r5) / s5 : (n5 - (e6 - 1) * r5) / s5;
              l5 < a5 && (a5 = l5);
            }), N(t6, function(t7) {
              N(t7, function(t8, e6) {
                var n6 = t8.getLayout().value * a5;
                "vertical" === o5 ? (t8.setLayout({ x: e6 }, true), t8.setLayout({ dx: n6 }, true)) : (t8.setLayout({ y: e6 }, true), t8.setLayout({ dy: n6 }, true));
              });
            }), N(e5, function(t7) {
              var e6 = +t7.getValue() * a5;
              t7.setLayout({ dy: e6 }, true);
            });
          })(s4, e4, n4, i4, r4, a4), rP(s4, r4, n4, i4, a4);
          for (var l4 = 1; o4 > 0; o4--)
            oP(s4, l4 *= 0.99, a4), rP(s4, r4, n4, i4, a4), dP(s4, l4, a4), rP(s4, r4, n4, i4, a4);
        }(t4, e3, o3, r3, i3, a3, s3), function(t5, e4) {
          var n4 = "vertical" === e4 ? "x" : "y";
          N(t5, function(t6) {
            t6.outEdges.sort(function(t7, e5) {
              return t7.node2.getLayout()[n4] - e5.node2.getLayout()[n4];
            }), t6.inEdges.sort(function(t7, e5) {
              return t7.node1.getLayout()[n4] - e5.node1.getLayout()[n4];
            });
          }), N(t5, function(t6) {
            var e5 = 0, n5 = 0;
            N(t6.outEdges, function(t7) {
              t7.setLayout({ sy: e5 }, true), e5 += t7.getLayout().dy;
            }), N(t6.inEdges, function(t7) {
              t7.setLayout({ ty: n5 }, true), n5 += t7.getLayout().dy;
            });
          });
        }(t4, s3);
      }(l2, u2, n2, i2, o2, a2, 0 !== V(l2, function(t4) {
        return 0 === t4.getLayout().value;
      }).length ? 0 : t3.get("layoutIterations"), t3.get("orient"), t3.get("nodeAlign"));
    });
  }
  function iP(t2) {
    var e2 = t2.hostGraph.data.getRawDataItem(t2.dataIndex);
    return null != e2.depth && e2.depth >= 0;
  }
  function rP(t2, e2, n2, i2, r2) {
    var o2 = "vertical" === r2 ? "x" : "y";
    N(t2, function(t3) {
      var a2, s2, l2;
      t3.sort(function(t4, e3) {
        return t4.getLayout()[o2] - e3.getLayout()[o2];
      });
      for (var u2 = 0, h2 = t3.length, c2 = "vertical" === r2 ? "dx" : "dy", p2 = 0; p2 < h2; p2++)
        (l2 = u2 - (s2 = t3[p2]).getLayout()[o2]) > 0 && (a2 = s2.getLayout()[o2] + l2, "vertical" === r2 ? s2.setLayout({ x: a2 }, true) : s2.setLayout({ y: a2 }, true)), u2 = s2.getLayout()[o2] + s2.getLayout()[c2] + e2;
      if ((l2 = u2 - e2 - ("vertical" === r2 ? i2 : n2)) > 0) {
        a2 = s2.getLayout()[o2] - l2, "vertical" === r2 ? s2.setLayout({ x: a2 }, true) : s2.setLayout({ y: a2 }, true), u2 = a2;
        for (p2 = h2 - 2; p2 >= 0; --p2)
          (l2 = (s2 = t3[p2]).getLayout()[o2] + s2.getLayout()[c2] + e2 - u2) > 0 && (a2 = s2.getLayout()[o2] - l2, "vertical" === r2 ? s2.setLayout({ x: a2 }, true) : s2.setLayout({ y: a2 }, true)), u2 = s2.getLayout()[o2];
      }
    });
  }
  function oP(t2, e2, n2) {
    N(t2.slice().reverse(), function(t3) {
      N(t3, function(t4) {
        if (t4.outEdges.length) {
          var i2 = pP(t4.outEdges, aP, n2) / pP(t4.outEdges, cP);
          if (isNaN(i2)) {
            var r2 = t4.outEdges.length;
            i2 = r2 ? pP(t4.outEdges, sP, n2) / r2 : 0;
          }
          if ("vertical" === n2) {
            var o2 = t4.getLayout().x + (i2 - hP(t4, n2)) * e2;
            t4.setLayout({ x: o2 }, true);
          } else {
            var a2 = t4.getLayout().y + (i2 - hP(t4, n2)) * e2;
            t4.setLayout({ y: a2 }, true);
          }
        }
      });
    });
  }
  function aP(t2, e2) {
    return hP(t2.node2, e2) * t2.getValue();
  }
  function sP(t2, e2) {
    return hP(t2.node2, e2);
  }
  function lP(t2, e2) {
    return hP(t2.node1, e2) * t2.getValue();
  }
  function uP(t2, e2) {
    return hP(t2.node1, e2);
  }
  function hP(t2, e2) {
    return "vertical" === e2 ? t2.getLayout().x + t2.getLayout().dx / 2 : t2.getLayout().y + t2.getLayout().dy / 2;
  }
  function cP(t2) {
    return t2.getValue();
  }
  function pP(t2, e2, n2) {
    for (var i2 = 0, r2 = t2.length, o2 = -1; ++o2 < r2; ) {
      var a2 = +e2(t2[o2], n2);
      isNaN(a2) || (i2 += a2);
    }
    return i2;
  }
  function dP(t2, e2, n2) {
    N(t2, function(t3) {
      N(t3, function(t4) {
        if (t4.inEdges.length) {
          var i2 = pP(t4.inEdges, lP, n2) / pP(t4.inEdges, cP);
          if (isNaN(i2)) {
            var r2 = t4.inEdges.length;
            i2 = r2 ? pP(t4.inEdges, uP, n2) / r2 : 0;
          }
          if ("vertical" === n2) {
            var o2 = t4.getLayout().x + (i2 - hP(t4, n2)) * e2;
            t4.setLayout({ x: o2 }, true);
          } else {
            var a2 = t4.getLayout().y + (i2 - hP(t4, n2)) * e2;
            t4.setLayout({ y: a2 }, true);
          }
        }
      });
    });
  }
  function fP(t2) {
    t2.eachSeriesByType("sankey", function(t3) {
      var e2 = t3.getGraph(), n2 = e2.nodes, i2 = e2.edges;
      if (n2.length) {
        var r2 = 1 / 0, o2 = -1 / 0;
        N(n2, function(t4) {
          var e3 = t4.getLayout().value;
          e3 < r2 && (r2 = e3), e3 > o2 && (o2 = e3);
        }), N(n2, function(e3) {
          var n3 = new OD({ type: "color", mappingMethod: "linear", dataExtent: [r2, o2], visual: t3.get("color") }).mapValueToVisual(e3.getLayout().value), i3 = e3.getModel().get(["itemStyle", "color"]);
          null != i3 ? (e3.setVisual("color", i3), e3.setVisual("style", { fill: i3 })) : (e3.setVisual("color", n3), e3.setVisual("style", { fill: n3 }));
        });
      }
      i2.length && N(i2, function(t4) {
        var e3 = t4.getModel().get("lineStyle");
        t4.setVisual("style", e3);
      });
    });
  }
  var gP = function() {
    function t2() {
    }
    return t2.prototype.getInitialData = function(t3, e2) {
      var n2, i2, r2 = e2.getComponent("xAxis", this.get("xAxisIndex")), o2 = e2.getComponent("yAxis", this.get("yAxisIndex")), a2 = r2.get("type"), s2 = o2.get("type");
      "category" === a2 ? (t3.layout = "horizontal", n2 = r2.getOrdinalMeta(), i2 = true) : "category" === s2 ? (t3.layout = "vertical", n2 = o2.getOrdinalMeta(), i2 = true) : t3.layout = t3.layout || "horizontal";
      var l2 = ["x", "y"], u2 = "horizontal" === t3.layout ? 0 : 1, h2 = this._baseAxisDim = l2[u2], c2 = l2[1 - u2], p2 = [r2, o2], d2 = p2[u2].get("type"), f2 = p2[1 - u2].get("type"), g2 = t3.data;
      if (g2 && i2) {
        var y2 = [];
        N(g2, function(t4, e3) {
          var n3;
          H(t4) ? (n3 = t4.slice(), t4.unshift(e3)) : H(t4.value) ? ((n3 = D({}, t4)).value = n3.value.slice(), t4.value.unshift(e3)) : n3 = t4, y2.push(n3);
        }), t3.data = y2;
      }
      var v2 = this.defaultValueDimensions, m2 = [{ name: h2, type: Km(d2), ordinalMeta: n2, otherDims: { tooltip: false, itemName: 0 }, dimsDef: ["base"] }, { name: c2, type: Km(f2), dimsDef: v2.slice() }];
      return zM(this, { coordDimensions: m2, dimensionsCount: v2.length + 1, encodeDefaulter: W(Kp, m2, this) });
    }, t2.prototype.getBaseAxis = function() {
      var t3 = this._baseAxisDim;
      return this.ecModel.getComponent(t3 + "Axis", this.get(t3 + "AxisIndex")).axis;
    }, t2;
  }();
  var yP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.defaultValueDimensions = [{ name: "min", defaultTooltip: true }, { name: "Q1", defaultTooltip: true }, { name: "median", defaultTooltip: true }, { name: "Q3", defaultTooltip: true }, { name: "max", defaultTooltip: true }], e2.visualDrawType = "stroke", e2;
    }
    return e(n2, t2), n2.type = "series.boxplot", n2.dependencies = ["xAxis", "yAxis", "grid"], n2.defaultOption = { z: 2, coordinateSystem: "cartesian2d", legendHoverLink: true, layout: null, boxWidth: [7, 50], itemStyle: { color: "#fff", borderWidth: 1 }, emphasis: { scale: true, itemStyle: { borderWidth: 2, shadowBlur: 5, shadowOffsetX: 1, shadowOffsetY: 1, shadowColor: "rgba(0,0,0,0.2)" } }, animationDuration: 800 }, n2;
  }(vg);
  O(yP, gP, true);
  var vP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = this.group, o2 = this._data;
      this._data || r2.removeAll();
      var a2 = "horizontal" === t3.get("layout") ? 1 : 0;
      i2.diff(o2).add(function(t4) {
        if (i2.hasValue(t4)) {
          var e3 = _P(i2.getItemLayout(t4), i2, t4, a2, true);
          i2.setItemGraphicEl(t4, e3), r2.add(e3);
        }
      }).update(function(t4, e3) {
        var n4 = o2.getItemGraphicEl(e3);
        if (i2.hasValue(t4)) {
          var s2 = i2.getItemLayout(t4);
          n4 ? (xh(n4), bP(s2, n4, i2, t4)) : n4 = _P(s2, i2, t4, a2), r2.add(n4), i2.setItemGraphicEl(t4, n4);
        } else
          r2.remove(n4);
      }).remove(function(t4) {
        var e3 = o2.getItemGraphicEl(t4);
        e3 && r2.remove(e3);
      }).execute(), this._data = i2;
    }, n2.prototype.remove = function(t3) {
      var e2 = this.group, n3 = this._data;
      this._data = null, n3 && n3.eachItemGraphicEl(function(t4) {
        t4 && e2.remove(t4);
      });
    }, n2.type = "boxplot", n2;
  }(Ag);
  var mP = function() {
  };
  var xP = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "boxplotBoxPath", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new mP();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.points, i2 = 0;
      for (t3.moveTo(n3[i2][0], n3[i2][1]), i2++; i2 < 4; i2++)
        t3.lineTo(n3[i2][0], n3[i2][1]);
      for (t3.closePath(); i2 < n3.length; i2++)
        t3.moveTo(n3[i2][0], n3[i2][1]), i2++, t3.lineTo(n3[i2][0], n3[i2][1]);
    }, n2;
  }(Ms);
  function _P(t2, e2, n2, i2, r2) {
    var o2 = t2.ends, a2 = new xP({ shape: { points: r2 ? wP(o2, i2, t2) : o2 } });
    return bP(t2, a2, e2, n2, r2), a2;
  }
  function bP(t2, e2, n2, i2, r2) {
    var o2 = n2.hostModel;
    (0, qh[r2 ? "initProps" : "updateProps"])(e2, { shape: { points: t2.ends } }, o2, i2), e2.useStyle(n2.getItemVisual(i2, "style")), e2.style.strokeNoScale = true, e2.z2 = 100;
    var a2 = n2.getItemModel(i2), s2 = a2.getModel("emphasis");
    Zl(e2, a2), Hl(e2, s2.get("focus"), s2.get("blurScope"), s2.get("disabled"));
  }
  function wP(t2, e2, n2) {
    return E(t2, function(t3) {
      return (t3 = t3.slice())[e2] = n2.initBaseline, t3;
    });
  }
  var SP = N;
  function MP(t2) {
    var e2 = function(t3) {
      var e3 = [], n2 = [];
      return t3.eachSeriesByType("boxplot", function(t4) {
        var i2 = t4.getBaseAxis(), r2 = L(n2, i2);
        r2 < 0 && (r2 = n2.length, n2[r2] = i2, e3[r2] = { axis: i2, seriesModels: [] }), e3[r2].seriesModels.push(t4);
      }), e3;
    }(t2);
    SP(e2, function(t3) {
      var e3 = t3.seriesModels;
      e3.length && (!function(t4) {
        var e4, n2 = t4.axis, i2 = t4.seriesModels, r2 = i2.length, o2 = t4.boxWidthList = [], a2 = t4.boxOffsetList = [], s2 = [];
        if ("category" === n2.type)
          e4 = n2.getBandWidth();
        else {
          var l2 = 0;
          SP(i2, function(t5) {
            l2 = Math.max(l2, t5.getData().count());
          });
          var u2 = n2.getExtent();
          e4 = Math.abs(u2[1] - u2[0]) / l2;
        }
        SP(i2, function(t5) {
          var n3 = t5.get("boxWidth");
          H(n3) || (n3 = [n3, n3]), s2.push([Xr(n3[0], e4) || 0, Xr(n3[1], e4) || 0]);
        });
        var h2 = 0.8 * e4 - 2, c2 = h2 / r2 * 0.3, p2 = (h2 - c2 * (r2 - 1)) / r2, d2 = p2 / 2 - h2 / 2;
        SP(i2, function(t5, e5) {
          a2.push(d2), d2 += c2 + p2, o2.push(Math.min(Math.max(p2, s2[e5][0]), s2[e5][1]));
        });
      }(t3), SP(e3, function(e4, n2) {
        !function(t4, e5, n3) {
          var i2 = t4.coordinateSystem, r2 = t4.getData(), o2 = n3 / 2, a2 = "horizontal" === t4.get("layout") ? 0 : 1, s2 = 1 - a2, l2 = ["x", "y"], u2 = r2.mapDimension(l2[a2]), h2 = r2.mapDimensionsAll(l2[s2]);
          if (null == u2 || h2.length < 5)
            return;
          for (var c2 = 0; c2 < r2.count(); c2++) {
            var p2 = r2.get(u2, c2), d2 = x2(p2, h2[2], c2), f2 = x2(p2, h2[0], c2), g2 = x2(p2, h2[1], c2), y2 = x2(p2, h2[3], c2), v2 = x2(p2, h2[4], c2), m2 = [];
            _2(m2, g2, false), _2(m2, y2, true), m2.push(f2, g2, v2, y2), b2(m2, f2), b2(m2, v2), b2(m2, d2), r2.setItemLayout(c2, { initBaseline: d2[s2], ends: m2 });
          }
          function x2(t5, n4, o3) {
            var l3, u3 = r2.get(n4, o3), h3 = [];
            return h3[a2] = t5, h3[s2] = u3, isNaN(t5) || isNaN(u3) ? l3 = [NaN, NaN] : (l3 = i2.dataToPoint(h3))[a2] += e5, l3;
          }
          function _2(t5, e6, n4) {
            var i3 = e6.slice(), r3 = e6.slice();
            i3[a2] += o2, r3[a2] -= o2, n4 ? t5.push(i3, r3) : t5.push(r3, i3);
          }
          function b2(t5, e6) {
            var n4 = e6.slice(), i3 = e6.slice();
            n4[a2] -= o2, i3[a2] += o2, t5.push(n4, i3);
          }
        }(e4, t3.boxOffsetList[n2], t3.boxWidthList[n2]);
      }));
    });
  }
  var IP = { type: "echarts:boxplot", transform: function(t2) {
    var e2 = t2.upstream;
    if (e2.sourceFormat !== Bp) {
      var n2 = "";
      yo(n2);
    }
    var i2 = function(t3, e3) {
      for (var n3 = [], i3 = [], r2 = (e3 = e3 || {}).boundIQR, o2 = "none" === r2 || 0 === r2, a2 = 0; a2 < t3.length; a2++) {
        var s2 = Zr(t3[a2].slice()), l2 = so(s2, 0.25), u2 = so(s2, 0.5), h2 = so(s2, 0.75), c2 = s2[0], p2 = s2[s2.length - 1], d2 = (null == r2 ? 1.5 : r2) * (h2 - l2), f2 = o2 ? c2 : Math.max(c2, l2 - d2), g2 = o2 ? p2 : Math.min(p2, h2 + d2), y2 = e3.itemNameFormatter, v2 = Y(y2) ? y2({ value: a2 }) : X(y2) ? y2.replace("{value}", a2 + "") : a2 + "";
        n3.push([v2, f2, l2, u2, h2, g2]);
        for (var m2 = 0; m2 < s2.length; m2++) {
          var x2 = s2[m2];
          if (x2 < f2 || x2 > g2) {
            var _2 = [v2, x2];
            i3.push(_2);
          }
        }
      }
      return { boxData: n3, outliers: i3 };
    }(e2.getRawData(), t2.config);
    return [{ dimensions: ["ItemName", "Low", "Q1", "Q2", "Q3", "High"], data: i2.boxData }, { data: i2.outliers }];
  } };
  var TP = ["color", "borderColor"];
  var CP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      this.group.removeClipPath(), this._progressiveEls = null, this._updateDrawMode(t3), this._isLargeDraw ? this._renderLarge(t3) : this._renderNormal(t3);
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      this._clear(), this._updateDrawMode(t3);
    }, n2.prototype.incrementalRender = function(t3, e2, n3, i2) {
      this._progressiveEls = [], this._isLargeDraw ? this._incrementalRenderLarge(t3, e2) : this._incrementalRenderNormal(t3, e2);
    }, n2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, n2.prototype._updateDrawMode = function(t3) {
      var e2 = t3.pipelineContext.large;
      null != this._isLargeDraw && e2 === this._isLargeDraw || (this._isLargeDraw = e2, this._clear());
    }, n2.prototype._renderNormal = function(t3) {
      var e2 = t3.getData(), n3 = this._data, i2 = this.group, r2 = e2.getLayout("isSimpleBox"), o2 = t3.get("clip", true), a2 = t3.coordinateSystem, s2 = a2.getArea && a2.getArea();
      this._data || i2.removeAll(), e2.diff(n3).add(function(n4) {
        if (e2.hasValue(n4)) {
          var a3 = e2.getItemLayout(n4);
          if (o2 && LP(s2, a3))
            return;
          var l2 = kP(a3, n4, true);
          fh(l2, { shape: { points: a3.ends } }, t3, n4), PP(l2, e2, n4, r2), i2.add(l2), e2.setItemGraphicEl(n4, l2);
        }
      }).update(function(a3, l2) {
        var u2 = n3.getItemGraphicEl(l2);
        if (e2.hasValue(a3)) {
          var h2 = e2.getItemLayout(a3);
          o2 && LP(s2, h2) ? i2.remove(u2) : (u2 ? (dh(u2, { shape: { points: h2.ends } }, t3, a3), xh(u2)) : u2 = kP(h2), PP(u2, e2, a3, r2), i2.add(u2), e2.setItemGraphicEl(a3, u2));
        } else
          i2.remove(u2);
      }).remove(function(t4) {
        var e3 = n3.getItemGraphicEl(t4);
        e3 && i2.remove(e3);
      }).execute(), this._data = e2;
    }, n2.prototype._renderLarge = function(t3) {
      this._clear(), EP(t3, this.group);
      var e2 = t3.get("clip", true) ? ES(t3.coordinateSystem, false, t3) : null;
      e2 ? this.group.setClipPath(e2) : this.group.removeClipPath();
    }, n2.prototype._incrementalRenderNormal = function(t3, e2) {
      for (var n3, i2 = e2.getData(), r2 = i2.getLayout("isSimpleBox"); null != (n3 = t3.next()); ) {
        var o2 = kP(i2.getItemLayout(n3));
        PP(o2, i2, n3, r2), o2.incremental = true, this.group.add(o2), this._progressiveEls.push(o2);
      }
    }, n2.prototype._incrementalRenderLarge = function(t3, e2) {
      EP(e2, this.group, this._progressiveEls, true);
    }, n2.prototype.remove = function(t3) {
      this._clear();
    }, n2.prototype._clear = function() {
      this.group.removeAll(), this._data = null;
    }, n2.type = "candlestick", n2;
  }(Ag);
  var DP = function() {
  };
  var AP = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "normalCandlestickBox", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new DP();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3 = e2.points;
      this.__simpleBox ? (t3.moveTo(n3[4][0], n3[4][1]), t3.lineTo(n3[6][0], n3[6][1])) : (t3.moveTo(n3[0][0], n3[0][1]), t3.lineTo(n3[1][0], n3[1][1]), t3.lineTo(n3[2][0], n3[2][1]), t3.lineTo(n3[3][0], n3[3][1]), t3.closePath(), t3.moveTo(n3[4][0], n3[4][1]), t3.lineTo(n3[5][0], n3[5][1]), t3.moveTo(n3[6][0], n3[6][1]), t3.lineTo(n3[7][0], n3[7][1]));
    }, n2;
  }(Ms);
  function kP(t2, e2, n2) {
    var i2 = t2.ends;
    return new AP({ shape: { points: n2 ? OP(i2, t2) : i2 }, z2: 100 });
  }
  function LP(t2, e2) {
    for (var n2 = true, i2 = 0; i2 < e2.ends.length; i2++)
      if (t2.contain(e2.ends[i2][0], e2.ends[i2][1])) {
        n2 = false;
        break;
      }
    return n2;
  }
  function PP(t2, e2, n2, i2) {
    var r2 = e2.getItemModel(n2);
    t2.useStyle(e2.getItemVisual(n2, "style")), t2.style.strokeNoScale = true, t2.__simpleBox = i2, Zl(t2, r2);
  }
  function OP(t2, e2) {
    return E(t2, function(t3) {
      return (t3 = t3.slice())[1] = e2.initBaseline, t3;
    });
  }
  var RP = function() {
  };
  var NP = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3.type = "largeCandlestickBox", n3;
    }
    return e(n2, t2), n2.prototype.getDefaultShape = function() {
      return new RP();
    }, n2.prototype.buildPath = function(t3, e2) {
      for (var n3 = e2.points, i2 = 0; i2 < n3.length; )
        if (this.__sign === n3[i2++]) {
          var r2 = n3[i2++];
          t3.moveTo(r2, n3[i2++]), t3.lineTo(r2, n3[i2++]);
        } else
          i2 += 3;
    }, n2;
  }(Ms);
  function EP(t2, e2, n2, i2) {
    var r2 = t2.getData().getLayout("largePoints"), o2 = new NP({ shape: { points: r2 }, __sign: 1, ignoreCoarsePointer: true });
    e2.add(o2);
    var a2 = new NP({ shape: { points: r2 }, __sign: -1, ignoreCoarsePointer: true });
    e2.add(a2);
    var s2 = new NP({ shape: { points: r2 }, __sign: 0, ignoreCoarsePointer: true });
    e2.add(s2), zP(1, o2, t2), zP(-1, a2, t2), zP(0, s2, t2), i2 && (o2.incremental = true, a2.incremental = true), n2 && n2.push(o2, a2);
  }
  function zP(t2, e2, n2, i2) {
    var r2 = n2.get(["itemStyle", t2 > 0 ? "borderColor" : "borderColor0"]) || n2.get(["itemStyle", t2 > 0 ? "color" : "color0"]);
    0 === t2 && (r2 = n2.get(["itemStyle", "borderColorDoji"]));
    var o2 = n2.getModel("itemStyle").getItemStyle(TP);
    e2.useStyle(o2), e2.style.fill = null, e2.style.stroke = r2;
  }
  var VP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.defaultValueDimensions = [{ name: "open", defaultTooltip: true }, { name: "close", defaultTooltip: true }, { name: "lowest", defaultTooltip: true }, { name: "highest", defaultTooltip: true }], e2;
    }
    return e(n2, t2), n2.prototype.getShadowDim = function() {
      return "open";
    }, n2.prototype.brushSelector = function(t3, e2, n3) {
      var i2 = e2.getItemLayout(t3);
      return i2 && n3.rect(i2.brushRect);
    }, n2.type = "series.candlestick", n2.dependencies = ["xAxis", "yAxis", "grid"], n2.defaultOption = { z: 2, coordinateSystem: "cartesian2d", legendHoverLink: true, layout: null, clip: true, itemStyle: { color: "#eb5454", color0: "#47b262", borderColor: "#eb5454", borderColor0: "#47b262", borderColorDoji: null, borderWidth: 1 }, emphasis: { scale: true, itemStyle: { borderWidth: 2 } }, barMaxWidth: null, barMinWidth: null, barWidth: null, large: true, largeThreshold: 600, progressive: 3e3, progressiveThreshold: 1e4, progressiveChunkMode: "mod", animationEasing: "linear", animationDuration: 300 }, n2;
  }(vg);
  function BP(t2) {
    t2 && H(t2.series) && N(t2.series, function(t3) {
      j(t3) && "k" === t3.type && (t3.type = "candlestick");
    });
  }
  O(VP, gP, true);
  var FP = ["itemStyle", "borderColor"];
  var GP = ["itemStyle", "borderColor0"];
  var WP = ["itemStyle", "borderColorDoji"];
  var HP = ["itemStyle", "color"];
  var YP = ["itemStyle", "color0"];
  var XP = { seriesType: "candlestick", plan: Tg(), performRawSeries: true, reset: function(t2, e2) {
    function n2(t3, e3) {
      return e3.get(t3 > 0 ? HP : YP);
    }
    function i2(t3, e3) {
      return e3.get(0 === t3 ? WP : t3 > 0 ? FP : GP);
    }
    if (!e2.isSeriesFiltered(t2))
      return !t2.pipelineContext.large && { progress: function(t3, e3) {
        for (var r2; null != (r2 = t3.next()); ) {
          var o2 = e3.getItemModel(r2), a2 = e3.getItemLayout(r2).sign, s2 = o2.getItemStyle();
          s2.fill = n2(a2, o2), s2.stroke = i2(a2, o2) || s2.fill, D(e3.ensureUniqueItemVisual(r2, "style"), s2);
        }
      } };
  } };
  var UP = { seriesType: "candlestick", plan: Tg(), reset: function(t2) {
    var e2 = t2.coordinateSystem, n2 = t2.getData(), i2 = function(t3, e3) {
      var n3, i3 = t3.getBaseAxis(), r3 = "category" === i3.type ? i3.getBandWidth() : (n3 = i3.getExtent(), Math.abs(n3[1] - n3[0]) / e3.count()), o3 = Xr(it(t3.get("barMaxWidth"), r3), r3), a3 = Xr(it(t3.get("barMinWidth"), 1), r3), s3 = t3.get("barWidth");
      return null != s3 ? Xr(s3, r3) : Math.max(Math.min(r3 / 2, o3), a3);
    }(t2, n2), r2 = ["x", "y"], o2 = n2.getDimensionIndex(n2.mapDimension(r2[0])), a2 = E(n2.mapDimensionsAll(r2[1]), n2.getDimensionIndex, n2), s2 = a2[0], l2 = a2[1], u2 = a2[2], h2 = a2[3];
    if (n2.setLayout({ candleWidth: i2, isSimpleBox: i2 <= 1.3 }), !(o2 < 0 || a2.length < 4))
      return { progress: t2.pipelineContext.large ? function(n3, i3) {
        var r3, a3, c2 = Xx(4 * n3.count), p2 = 0, d2 = [], f2 = [], g2 = i3.getStore(), y2 = !!t2.get(["itemStyle", "borderColorDoji"]);
        for (; null != (a3 = n3.next()); ) {
          var v2 = g2.get(o2, a3), m2 = g2.get(s2, a3), x2 = g2.get(l2, a3), _2 = g2.get(u2, a3), b2 = g2.get(h2, a3);
          isNaN(v2) || isNaN(_2) || isNaN(b2) ? (c2[p2++] = NaN, p2 += 3) : (c2[p2++] = ZP(g2, a3, m2, x2, l2, y2), d2[0] = v2, d2[1] = _2, r3 = e2.dataToPoint(d2, null, f2), c2[p2++] = r3 ? r3[0] : NaN, c2[p2++] = r3 ? r3[1] : NaN, d2[1] = b2, r3 = e2.dataToPoint(d2, null, f2), c2[p2++] = r3 ? r3[1] : NaN);
        }
        i3.setLayout("largePoints", c2);
      } : function(t3, n3) {
        var r3, a3 = n3.getStore();
        for (; null != (r3 = t3.next()); ) {
          var c2 = a3.get(o2, r3), p2 = a3.get(s2, r3), d2 = a3.get(l2, r3), f2 = a3.get(u2, r3), g2 = a3.get(h2, r3), y2 = Math.min(p2, d2), v2 = Math.max(p2, d2), m2 = M2(y2, c2), x2 = M2(v2, c2), _2 = M2(f2, c2), b2 = M2(g2, c2), w2 = [];
          I2(w2, x2, 0), I2(w2, m2, 1), w2.push(C2(b2), C2(x2), C2(_2), C2(m2));
          var S2 = !!n3.getItemModel(r3).get(["itemStyle", "borderColorDoji"]);
          n3.setItemLayout(r3, { sign: ZP(a3, r3, p2, d2, l2, S2), initBaseline: p2 > d2 ? x2[1] : m2[1], ends: w2, brushRect: T2(f2, g2, c2) });
        }
        function M2(t4, n4) {
          var i3 = [];
          return i3[0] = n4, i3[1] = t4, isNaN(n4) || isNaN(t4) ? [NaN, NaN] : e2.dataToPoint(i3);
        }
        function I2(t4, e3, n4) {
          var r4 = e3.slice(), o3 = e3.slice();
          r4[0] = Rh(r4[0] + i2 / 2, 1, false), o3[0] = Rh(o3[0] - i2 / 2, 1, true), n4 ? t4.push(r4, o3) : t4.push(o3, r4);
        }
        function T2(t4, e3, n4) {
          var r4 = M2(t4, n4), o3 = M2(e3, n4);
          return r4[0] -= i2 / 2, o3[0] -= i2 / 2, { x: r4[0], y: r4[1], width: i2, height: o3[1] - r4[1] };
        }
        function C2(t4) {
          return t4[0] = Rh(t4[0], 1), t4;
        }
      } };
  } };
  function ZP(t2, e2, n2, i2, r2, o2) {
    return n2 > i2 ? -1 : n2 < i2 ? 1 : o2 ? 0 : e2 > 0 ? t2.get(r2, e2 - 1) <= i2 ? 1 : -1 : 1;
  }
  function jP(t2, e2) {
    var n2 = e2.rippleEffectColor || e2.color;
    t2.eachChild(function(t3) {
      t3.attr({ z: e2.z, zlevel: e2.zlevel, style: { stroke: "stroke" === e2.brushType ? n2 : null, fill: "fill" === e2.brushType ? n2 : null } });
    });
  }
  var qP = function(t2) {
    function n2(e2, n3) {
      var i2 = t2.call(this) || this, r2 = new mS(e2, n3), o2 = new Er();
      return i2.add(r2), i2.add(o2), i2.updateData(e2, n3), i2;
    }
    return e(n2, t2), n2.prototype.stopEffectAnimation = function() {
      this.childAt(1).removeAll();
    }, n2.prototype.startEffectAnimation = function(t3) {
      for (var e2 = t3.symbolType, n3 = t3.color, i2 = t3.rippleNumber, r2 = this.childAt(1), o2 = 0; o2 < i2; o2++) {
        var a2 = Gy(e2, -1, -1, 2, 2, n3);
        a2.attr({ style: { strokeNoScale: true }, z2: 99, silent: true, scaleX: 0.5, scaleY: 0.5 });
        var s2 = -o2 / i2 * t3.period + t3.effectOffset;
        a2.animate("", true).when(t3.period, { scaleX: t3.rippleScale / 2, scaleY: t3.rippleScale / 2 }).delay(s2).start(), a2.animateStyle(true).when(t3.period, { opacity: 0 }).delay(s2).start(), r2.add(a2);
      }
      jP(r2, t3);
    }, n2.prototype.updateEffectAnimation = function(t3) {
      for (var e2 = this._effectCfg, n3 = this.childAt(1), i2 = ["symbolType", "period", "rippleScale", "rippleNumber"], r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2];
        if (e2[o2] !== t3[o2])
          return this.stopEffectAnimation(), void this.startEffectAnimation(t3);
      }
      jP(n3, t3);
    }, n2.prototype.highlight = function() {
      Al(this);
    }, n2.prototype.downplay = function() {
      kl(this);
    }, n2.prototype.getSymbolType = function() {
      var t3 = this.childAt(0);
      return t3 && t3.getSymbolType();
    }, n2.prototype.updateData = function(t3, e2) {
      var n3 = this, i2 = t3.hostModel;
      this.childAt(0).updateData(t3, e2);
      var r2 = this.childAt(1), o2 = t3.getItemModel(e2), a2 = t3.getItemVisual(e2, "symbol"), s2 = Wy(t3.getItemVisual(e2, "symbolSize")), l2 = t3.getItemVisual(e2, "style"), u2 = l2 && l2.fill, h2 = o2.getModel("emphasis");
      r2.setScale(s2), r2.traverse(function(t4) {
        t4.setStyle("fill", u2);
      });
      var c2 = Hy(t3.getItemVisual(e2, "symbolOffset"), s2);
      c2 && (r2.x = c2[0], r2.y = c2[1]);
      var p2 = t3.getItemVisual(e2, "symbolRotate");
      r2.rotation = (p2 || 0) * Math.PI / 180 || 0;
      var d2 = {};
      d2.showEffectOn = i2.get("showEffectOn"), d2.rippleScale = o2.get(["rippleEffect", "scale"]), d2.brushType = o2.get(["rippleEffect", "brushType"]), d2.period = 1e3 * o2.get(["rippleEffect", "period"]), d2.effectOffset = e2 / t3.count(), d2.z = i2.getShallow("z") || 0, d2.zlevel = i2.getShallow("zlevel") || 0, d2.symbolType = a2, d2.color = u2, d2.rippleEffectColor = o2.get(["rippleEffect", "color"]), d2.rippleNumber = o2.get(["rippleEffect", "number"]), "render" === d2.showEffectOn ? (this._effectCfg ? this.updateEffectAnimation(d2) : this.startEffectAnimation(d2), this._effectCfg = d2) : (this._effectCfg = null, this.stopEffectAnimation(), this.onHoverStateChange = function(t4) {
        "emphasis" === t4 ? "render" !== d2.showEffectOn && n3.startEffectAnimation(d2) : "normal" === t4 && "render" !== d2.showEffectOn && n3.stopEffectAnimation();
      }), this._effectCfg = d2, Hl(this, h2.get("focus"), h2.get("blurScope"), h2.get("disabled"));
    }, n2.prototype.fadeOut = function(t3) {
      t3 && t3();
    }, n2;
  }(Er);
  var KP = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      this._symbolDraw = new SS(qP);
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = this._symbolDraw;
      r2.updateData(i2, { clipShape: this._getClipShape(t3) }), this.group.add(r2.group);
    }, n2.prototype._getClipShape = function(t3) {
      var e2 = t3.coordinateSystem, n3 = e2 && e2.getArea && e2.getArea();
      return t3.get("clip", true) ? n3 : null;
    }, n2.prototype.updateTransform = function(t3, e2, n3) {
      var i2 = t3.getData();
      this.group.dirty();
      var r2 = qS("").reset(t3, e2, n3);
      r2.progress && r2.progress({ start: 0, end: i2.count(), count: i2.count() }, i2), this._symbolDraw.updateLayout();
    }, n2.prototype._updateGroupTransform = function(t3) {
      var e2 = t3.coordinateSystem;
      e2 && e2.getRoamTransform && (this.group.transform = Ie(e2.getRoamTransform()), this.group.decomposeTransform());
    }, n2.prototype.remove = function(t3, e2) {
      this._symbolDraw && this._symbolDraw.remove(true);
    }, n2.type = "effectScatter", n2;
  }(Ag);
  var $P = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this, { useEncodeDefaulter: true });
    }, n2.prototype.brushSelector = function(t3, e2, n3) {
      return n3.point(e2.getItemLayout(t3));
    }, n2.type = "series.effectScatter", n2.dependencies = ["grid", "polar"], n2.defaultOption = { coordinateSystem: "cartesian2d", z: 2, legendHoverLink: true, effectType: "ripple", progressive: 0, showEffectOn: "render", clip: true, rippleEffect: { period: 4, scale: 2.5, brushType: "fill", number: 3 }, universalTransition: { divideShape: "clone" }, symbolSize: 10 }, n2;
  }(vg);
  var JP = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this) || this;
      return r2.add(r2.createLine(e2, n3, i2)), r2._updateEffectSymbol(e2, n3), r2;
    }
    return e(n2, t2), n2.prototype.createLine = function(t3, e2, n3) {
      return new UA(t3, e2, n3);
    }, n2.prototype._updateEffectSymbol = function(t3, e2) {
      var n3 = t3.getItemModel(e2).getModel("effect"), i2 = n3.get("symbolSize"), r2 = n3.get("symbol");
      H(i2) || (i2 = [i2, i2]);
      var o2 = t3.getItemVisual(e2, "style"), a2 = n3.get("color") || o2 && o2.stroke, s2 = this.childAt(1);
      this._symbolType !== r2 && (this.remove(s2), (s2 = Gy(r2, -0.5, -0.5, 1, 1, a2)).z2 = 100, s2.culling = true, this.add(s2)), s2 && (s2.setStyle("shadowColor", a2), s2.setStyle(n3.getItemStyle(["color"])), s2.scaleX = i2[0], s2.scaleY = i2[1], s2.setColor(a2), this._symbolType = r2, this._symbolScale = i2, this._updateEffectAnimation(t3, n3, e2));
    }, n2.prototype._updateEffectAnimation = function(t3, e2, n3) {
      var i2 = this.childAt(1);
      if (i2) {
        var r2 = t3.getItemLayout(n3), o2 = 1e3 * e2.get("period"), a2 = e2.get("loop"), s2 = e2.get("roundTrip"), l2 = e2.get("constantSpeed"), u2 = nt(e2.get("delay"), function(e3) {
          return e3 / t3.count() * o2 / 3;
        });
        if (i2.ignore = true, this._updateAnimationPoints(i2, r2), l2 > 0 && (o2 = this._getLineLength(i2) / l2 * 1e3), o2 !== this._period || a2 !== this._loop || s2 !== this._roundTrip) {
          i2.stopAnimation();
          var h2 = void 0;
          h2 = Y(u2) ? u2(n3) : u2, i2.__t > 0 && (h2 = -o2 * i2.__t), this._animateSymbol(i2, o2, h2, a2, s2);
        }
        this._period = o2, this._loop = a2, this._roundTrip = s2;
      }
    }, n2.prototype._animateSymbol = function(t3, e2, n3, i2, r2) {
      if (e2 > 0) {
        t3.__t = 0;
        var o2 = this, a2 = t3.animate("", i2).when(r2 ? 2 * e2 : e2, { __t: r2 ? 2 : 1 }).delay(n3).during(function() {
          o2._updateSymbolPosition(t3);
        });
        i2 || a2.done(function() {
          o2.remove(t3);
        }), a2.start();
      }
    }, n2.prototype._getLineLength = function(t3) {
      return zt(t3.__p1, t3.__cp1) + zt(t3.__cp1, t3.__p2);
    }, n2.prototype._updateAnimationPoints = function(t3, e2) {
      t3.__p1 = e2[0], t3.__p2 = e2[1], t3.__cp1 = e2[2] || [(e2[0][0] + e2[1][0]) / 2, (e2[0][1] + e2[1][1]) / 2];
    }, n2.prototype.updateData = function(t3, e2, n3) {
      this.childAt(0).updateData(t3, e2, n3), this._updateEffectSymbol(t3, e2);
    }, n2.prototype._updateSymbolPosition = function(t3) {
      var e2 = t3.__p1, n3 = t3.__p2, i2 = t3.__cp1, r2 = t3.__t < 1 ? t3.__t : 2 - t3.__t, o2 = [t3.x, t3.y], a2 = o2.slice(), s2 = Mn, l2 = In;
      o2[0] = s2(e2[0], i2[0], n3[0], r2), o2[1] = s2(e2[1], i2[1], n3[1], r2);
      var u2 = t3.__t < 1 ? l2(e2[0], i2[0], n3[0], r2) : l2(n3[0], i2[0], e2[0], 1 - r2), h2 = t3.__t < 1 ? l2(e2[1], i2[1], n3[1], r2) : l2(n3[1], i2[1], e2[1], 1 - r2);
      t3.rotation = -Math.atan2(h2, u2) - Math.PI / 2, "line" !== this._symbolType && "rect" !== this._symbolType && "roundRect" !== this._symbolType || (void 0 !== t3.__lastT && t3.__lastT < t3.__t ? (t3.scaleY = 1.05 * zt(a2, o2), 1 === r2 && (o2[0] = a2[0] + (o2[0] - a2[0]) / 2, o2[1] = a2[1] + (o2[1] - a2[1]) / 2)) : 1 === t3.__lastT ? t3.scaleY = 2 * zt(e2, o2) : t3.scaleY = this._symbolScale[1]), t3.__lastT = t3.__t, t3.ignore = false, t3.x = o2[0], t3.y = o2[1];
    }, n2.prototype.updateLayout = function(t3, e2) {
      this.childAt(0).updateLayout(t3, e2);
      var n3 = t3.getItemModel(e2).getModel("effect");
      this._updateEffectAnimation(t3, n3, e2);
    }, n2;
  }(Er);
  var QP = function(t2) {
    function n2(e2, n3, i2) {
      var r2 = t2.call(this) || this;
      return r2._createPolyline(e2, n3, i2), r2;
    }
    return e(n2, t2), n2.prototype._createPolyline = function(t3, e2, n3) {
      var i2 = t3.getItemLayout(e2), r2 = new Hu({ shape: { points: i2 } });
      this.add(r2), this._updateCommonStl(t3, e2, n3);
    }, n2.prototype.updateData = function(t3, e2, n3) {
      var i2 = t3.hostModel;
      dh(this.childAt(0), { shape: { points: t3.getItemLayout(e2) } }, i2, e2), this._updateCommonStl(t3, e2, n3);
    }, n2.prototype._updateCommonStl = function(t3, e2, n3) {
      var i2 = this.childAt(0), r2 = t3.getItemModel(e2), o2 = n3 && n3.emphasisLineStyle, a2 = n3 && n3.focus, s2 = n3 && n3.blurScope, l2 = n3 && n3.emphasisDisabled;
      if (!n3 || t3.hasItemOption) {
        var u2 = r2.getModel("emphasis");
        o2 = u2.getModel("lineStyle").getLineStyle(), l2 = u2.get("disabled"), a2 = u2.get("focus"), s2 = u2.get("blurScope");
      }
      i2.useStyle(t3.getItemVisual(e2, "style")), i2.style.fill = null, i2.style.strokeNoScale = true, i2.ensureState("emphasis").style = o2, Hl(this, a2, s2, l2);
    }, n2.prototype.updateLayout = function(t3, e2) {
      this.childAt(0).setShape("points", t3.getItemLayout(e2));
    }, n2;
  }(Er);
  var tO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2._lastFrame = 0, e2._lastFramePercent = 0, e2;
    }
    return e(n2, t2), n2.prototype.createLine = function(t3, e2, n3) {
      return new QP(t3, e2, n3);
    }, n2.prototype._updateAnimationPoints = function(t3, e2) {
      this._points = e2;
      for (var n3 = [0], i2 = 0, r2 = 1; r2 < e2.length; r2++) {
        var o2 = e2[r2 - 1], a2 = e2[r2];
        i2 += zt(o2, a2), n3.push(i2);
      }
      if (0 !== i2) {
        for (r2 = 0; r2 < n3.length; r2++)
          n3[r2] /= i2;
        this._offsets = n3, this._length = i2;
      } else
        this._length = 0;
    }, n2.prototype._getLineLength = function() {
      return this._length;
    }, n2.prototype._updateSymbolPosition = function(t3) {
      var e2 = t3.__t < 1 ? t3.__t : 2 - t3.__t, n3 = this._points, i2 = this._offsets, r2 = n3.length;
      if (i2) {
        var o2, a2 = this._lastFrame;
        if (e2 < this._lastFramePercent) {
          for (o2 = Math.min(a2 + 1, r2 - 1); o2 >= 0 && !(i2[o2] <= e2); o2--)
            ;
          o2 = Math.min(o2, r2 - 2);
        } else {
          for (o2 = a2; o2 < r2 && !(i2[o2] > e2); o2++)
            ;
          o2 = Math.min(o2 - 1, r2 - 2);
        }
        var s2 = (e2 - i2[o2]) / (i2[o2 + 1] - i2[o2]), l2 = n3[o2], u2 = n3[o2 + 1];
        t3.x = l2[0] * (1 - s2) + s2 * u2[0], t3.y = l2[1] * (1 - s2) + s2 * u2[1];
        var h2 = t3.__t < 1 ? u2[0] - l2[0] : l2[0] - u2[0], c2 = t3.__t < 1 ? u2[1] - l2[1] : l2[1] - u2[1];
        t3.rotation = -Math.atan2(c2, h2) - Math.PI / 2, this._lastFrame = o2, this._lastFramePercent = e2, t3.ignore = false;
      }
    }, n2;
  }(JP);
  var eO = function() {
    this.polyline = false, this.curveness = 0, this.segs = [];
  };
  var nO = function(t2) {
    function n2(e2) {
      var n3 = t2.call(this, e2) || this;
      return n3._off = 0, n3.hoverDataIdx = -1, n3;
    }
    return e(n2, t2), n2.prototype.reset = function() {
      this.notClear = false, this._off = 0;
    }, n2.prototype.getDefaultStyle = function() {
      return { stroke: "#000", fill: null };
    }, n2.prototype.getDefaultShape = function() {
      return new eO();
    }, n2.prototype.buildPath = function(t3, e2) {
      var n3, i2 = e2.segs, r2 = e2.curveness;
      if (e2.polyline)
        for (n3 = this._off; n3 < i2.length; ) {
          var o2 = i2[n3++];
          if (o2 > 0) {
            t3.moveTo(i2[n3++], i2[n3++]);
            for (var a2 = 1; a2 < o2; a2++)
              t3.lineTo(i2[n3++], i2[n3++]);
          }
        }
      else
        for (n3 = this._off; n3 < i2.length; ) {
          var s2 = i2[n3++], l2 = i2[n3++], u2 = i2[n3++], h2 = i2[n3++];
          if (t3.moveTo(s2, l2), r2 > 0) {
            var c2 = (s2 + u2) / 2 - (l2 - h2) * r2, p2 = (l2 + h2) / 2 - (u2 - s2) * r2;
            t3.quadraticCurveTo(c2, p2, u2, h2);
          } else
            t3.lineTo(u2, h2);
        }
      this.incremental && (this._off = n3, this.notClear = true);
    }, n2.prototype.findDataIndex = function(t3, e2) {
      var n3 = this.shape, i2 = n3.segs, r2 = n3.curveness, o2 = this.style.lineWidth;
      if (n3.polyline)
        for (var a2 = 0, s2 = 0; s2 < i2.length; ) {
          var l2 = i2[s2++];
          if (l2 > 0)
            for (var u2 = i2[s2++], h2 = i2[s2++], c2 = 1; c2 < l2; c2++) {
              if (os(u2, h2, p2 = i2[s2++], d2 = i2[s2++], o2, t3, e2))
                return a2;
            }
          a2++;
        }
      else
        for (a2 = 0, s2 = 0; s2 < i2.length; ) {
          u2 = i2[s2++], h2 = i2[s2++];
          var p2 = i2[s2++], d2 = i2[s2++];
          if (r2 > 0) {
            if (ss(u2, h2, (u2 + p2) / 2 - (h2 - d2) * r2, (h2 + d2) / 2 - (p2 - u2) * r2, p2, d2, o2, t3, e2))
              return a2;
          } else if (os(u2, h2, p2, d2, o2, t3, e2))
            return a2;
          a2++;
        }
      return -1;
    }, n2.prototype.contain = function(t3, e2) {
      var n3 = this.transformCoordToLocal(t3, e2), i2 = this.getBoundingRect();
      return t3 = n3[0], e2 = n3[1], i2.contain(t3, e2) ? (this.hoverDataIdx = this.findDataIndex(t3, e2)) >= 0 : (this.hoverDataIdx = -1, false);
    }, n2.prototype.getBoundingRect = function() {
      var t3 = this._rect;
      if (!t3) {
        for (var e2 = this.shape.segs, n3 = 1 / 0, i2 = 1 / 0, r2 = -1 / 0, o2 = -1 / 0, a2 = 0; a2 < e2.length; ) {
          var s2 = e2[a2++], l2 = e2[a2++];
          n3 = Math.min(s2, n3), r2 = Math.max(s2, r2), i2 = Math.min(l2, i2), o2 = Math.max(l2, o2);
        }
        t3 = this._rect = new Ee(n3, i2, r2, o2);
      }
      return t3;
    }, n2;
  }(Ms);
  var iO = function() {
    function t2() {
      this.group = new Er();
    }
    return t2.prototype.updateData = function(t3) {
      this._clear();
      var e2 = this._create();
      e2.setShape({ segs: t3.getLayout("linesPoints") }), this._setCommon(e2, t3);
    }, t2.prototype.incrementalPrepareUpdate = function(t3) {
      this.group.removeAll(), this._clear();
    }, t2.prototype.incrementalUpdate = function(t3, e2) {
      var n2 = this._newAdded[0], i2 = e2.getLayout("linesPoints"), r2 = n2 && n2.shape.segs;
      if (r2 && r2.length < 2e4) {
        var o2 = r2.length, a2 = new Float32Array(o2 + i2.length);
        a2.set(r2), a2.set(i2, o2), n2.setShape({ segs: a2 });
      } else {
        this._newAdded = [];
        var s2 = this._create();
        s2.incremental = true, s2.setShape({ segs: i2 }), this._setCommon(s2, e2), s2.__startIndex = t3.start;
      }
    }, t2.prototype.remove = function() {
      this._clear();
    }, t2.prototype.eachRendered = function(t3) {
      this._newAdded[0] && t3(this._newAdded[0]);
    }, t2.prototype._create = function() {
      var t3 = new nO({ cursor: "default", ignoreCoarsePointer: true });
      return this._newAdded.push(t3), this.group.add(t3), t3;
    }, t2.prototype._setCommon = function(t3, e2, n2) {
      var i2 = e2.hostModel;
      t3.setShape({ polyline: i2.get("polyline"), curveness: i2.get(["lineStyle", "curveness"]) }), t3.useStyle(i2.getModel("lineStyle").getLineStyle()), t3.style.strokeNoScale = true;
      var r2 = e2.getVisual("style");
      r2 && r2.stroke && t3.setStyle("stroke", r2.stroke), t3.setStyle("fill", null);
      var o2 = Js(t3);
      o2.seriesIndex = i2.seriesIndex, t3.on("mousemove", function(e3) {
        o2.dataIndex = null;
        var n3 = t3.hoverDataIdx;
        n3 > 0 && (o2.dataIndex = n3 + t3.__startIndex);
      });
    }, t2.prototype._clear = function() {
      this._newAdded = [], this.group.removeAll();
    }, t2;
  }();
  var rO = { seriesType: "lines", plan: Tg(), reset: function(t2) {
    var e2 = t2.coordinateSystem;
    if (e2) {
      var n2 = t2.get("polyline"), i2 = t2.pipelineContext.large;
      return { progress: function(r2, o2) {
        var a2 = [];
        if (i2) {
          var s2 = void 0, l2 = r2.end - r2.start;
          if (n2) {
            for (var u2 = 0, h2 = r2.start; h2 < r2.end; h2++)
              u2 += t2.getLineCoordsCount(h2);
            s2 = new Float32Array(l2 + 2 * u2);
          } else
            s2 = new Float32Array(4 * l2);
          var c2 = 0, p2 = [];
          for (h2 = r2.start; h2 < r2.end; h2++) {
            var d2 = t2.getLineCoords(h2, a2);
            n2 && (s2[c2++] = d2);
            for (var f2 = 0; f2 < d2; f2++)
              p2 = e2.dataToPoint(a2[f2], false, p2), s2[c2++] = p2[0], s2[c2++] = p2[1];
          }
          o2.setLayout("linesPoints", s2);
        } else
          for (h2 = r2.start; h2 < r2.end; h2++) {
            var g2 = o2.getItemModel(h2), y2 = (d2 = t2.getLineCoords(h2, a2), []);
            if (n2)
              for (var v2 = 0; v2 < d2; v2++)
                y2.push(e2.dataToPoint(a2[v2]));
            else {
              y2[0] = e2.dataToPoint(a2[0]), y2[1] = e2.dataToPoint(a2[1]);
              var m2 = g2.get(["lineStyle", "curveness"]);
              +m2 && (y2[2] = [(y2[0][0] + y2[1][0]) / 2 - (y2[0][1] - y2[1][1]) * m2, (y2[0][1] + y2[1][1]) / 2 - (y2[1][0] - y2[0][0]) * m2]);
            }
            o2.setItemLayout(h2, y2);
          }
      } };
    }
  } };
  var oO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = this._updateLineDraw(i2, t3), o2 = t3.get("zlevel"), a2 = t3.get(["effect", "trailLength"]), s2 = n3.getZr(), l2 = "svg" === s2.painter.getType();
      l2 || s2.painter.getLayer(o2).clear(true), null == this._lastZlevel || l2 || s2.configLayer(this._lastZlevel, { motionBlur: false }), this._showEffect(t3) && a2 > 0 && (l2 || s2.configLayer(o2, { motionBlur: true, lastFrameAlpha: Math.max(Math.min(a2 / 10 + 0.9, 1), 0) })), r2.updateData(i2);
      var u2 = t3.get("clip", true) && ES(t3.coordinateSystem, false, t3);
      u2 ? this.group.setClipPath(u2) : this.group.removeClipPath(), this._lastZlevel = o2, this._finished = true;
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      var i2 = t3.getData();
      this._updateLineDraw(i2, t3).incrementalPrepareUpdate(i2), this._clearLayer(n3), this._finished = false;
    }, n2.prototype.incrementalRender = function(t3, e2, n3) {
      this._lineDraw.incrementalUpdate(t3, e2.getData()), this._finished = t3.end === e2.getData().count();
    }, n2.prototype.eachRendered = function(t3) {
      this._lineDraw && this._lineDraw.eachRendered(t3);
    }, n2.prototype.updateTransform = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = t3.pipelineContext;
      if (!this._finished || r2.large || r2.progressiveRender)
        return { update: true };
      var o2 = rO.reset(t3, e2, n3);
      o2.progress && o2.progress({ start: 0, end: i2.count(), count: i2.count() }, i2), this._lineDraw.updateLayout(), this._clearLayer(n3);
    }, n2.prototype._updateLineDraw = function(t3, e2) {
      var n3 = this._lineDraw, i2 = this._showEffect(e2), r2 = !!e2.get("polyline"), o2 = e2.pipelineContext.large;
      return n3 && i2 === this._hasEffet && r2 === this._isPolyline && o2 === this._isLargeDraw || (n3 && n3.remove(), n3 = this._lineDraw = o2 ? new iO() : new ZA(r2 ? i2 ? tO : QP : i2 ? JP : UA), this._hasEffet = i2, this._isPolyline = r2, this._isLargeDraw = o2), this.group.add(n3.group), n3;
    }, n2.prototype._showEffect = function(t3) {
      return !!t3.get(["effect", "show"]);
    }, n2.prototype._clearLayer = function(t3) {
      var e2 = t3.getZr();
      "svg" === e2.painter.getType() || null == this._lastZlevel || e2.painter.getLayer(this._lastZlevel).clear(true);
    }, n2.prototype.remove = function(t3, e2) {
      this._lineDraw && this._lineDraw.remove(), this._lineDraw = null, this._clearLayer(e2);
    }, n2.prototype.dispose = function(t3, e2) {
      this.remove(t3, e2);
    }, n2.type = "lines", n2;
  }(Ag);
  var aO = "undefined" == typeof Uint32Array ? Array : Uint32Array;
  var sO = "undefined" == typeof Float64Array ? Array : Float64Array;
  function lO(t2) {
    var e2 = t2.data;
    e2 && e2[0] && e2[0][0] && e2[0][0].coord && (t2.data = E(e2, function(t3) {
      var e3 = { coords: [t3[0].coord, t3[1].coord] };
      return t3[0].name && (e3.fromName = t3[0].name), t3[1].name && (e3.toName = t3[1].name), C([e3, t3[0], t3[1]]);
    }));
  }
  var uO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.visualStyleAccessPath = "lineStyle", e2.visualDrawType = "stroke", e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      e2.data = e2.data || [], lO(e2);
      var n3 = this._processFlatCoordsArray(e2.data);
      this._flatCoords = n3.flatCoords, this._flatCoordsOffset = n3.flatCoordsOffset, n3.flatCoords && (e2.data = new Float32Array(n3.count)), t2.prototype.init.apply(this, arguments);
    }, n2.prototype.mergeOption = function(e2) {
      if (lO(e2), e2.data) {
        var n3 = this._processFlatCoordsArray(e2.data);
        this._flatCoords = n3.flatCoords, this._flatCoordsOffset = n3.flatCoordsOffset, n3.flatCoords && (e2.data = new Float32Array(n3.count));
      }
      t2.prototype.mergeOption.apply(this, arguments);
    }, n2.prototype.appendData = function(t3) {
      var e2 = this._processFlatCoordsArray(t3.data);
      e2.flatCoords && (this._flatCoords ? (this._flatCoords = yt(this._flatCoords, e2.flatCoords), this._flatCoordsOffset = yt(this._flatCoordsOffset, e2.flatCoordsOffset)) : (this._flatCoords = e2.flatCoords, this._flatCoordsOffset = e2.flatCoordsOffset), t3.data = new Float32Array(e2.count)), this.getRawData().appendData(t3.data);
    }, n2.prototype._getCoordsFromItemModel = function(t3) {
      var e2 = this.getData().getItemModel(t3), n3 = e2.option instanceof Array ? e2.option : e2.getShallow("coords");
      return n3;
    }, n2.prototype.getLineCoordsCount = function(t3) {
      return this._flatCoordsOffset ? this._flatCoordsOffset[2 * t3 + 1] : this._getCoordsFromItemModel(t3).length;
    }, n2.prototype.getLineCoords = function(t3, e2) {
      if (this._flatCoordsOffset) {
        for (var n3 = this._flatCoordsOffset[2 * t3], i2 = this._flatCoordsOffset[2 * t3 + 1], r2 = 0; r2 < i2; r2++)
          e2[r2] = e2[r2] || [], e2[r2][0] = this._flatCoords[n3 + 2 * r2], e2[r2][1] = this._flatCoords[n3 + 2 * r2 + 1];
        return i2;
      }
      var o2 = this._getCoordsFromItemModel(t3);
      for (r2 = 0; r2 < o2.length; r2++)
        e2[r2] = e2[r2] || [], e2[r2][0] = o2[r2][0], e2[r2][1] = o2[r2][1];
      return o2.length;
    }, n2.prototype._processFlatCoordsArray = function(t3) {
      var e2 = 0;
      if (this._flatCoords && (e2 = this._flatCoords.length), Z(t3[0])) {
        for (var n3 = t3.length, i2 = new aO(n3), r2 = new sO(n3), o2 = 0, a2 = 0, s2 = 0, l2 = 0; l2 < n3; ) {
          s2++;
          var u2 = t3[l2++];
          i2[a2++] = o2 + e2, i2[a2++] = u2;
          for (var h2 = 0; h2 < u2; h2++) {
            var c2 = t3[l2++], p2 = t3[l2++];
            r2[o2++] = c2, r2[o2++] = p2;
          }
        }
        return { flatCoordsOffset: new Uint32Array(i2.buffer, 0, a2), flatCoords: r2, count: s2 };
      }
      return { flatCoordsOffset: null, flatCoords: null, count: t3.length };
    }, n2.prototype.getInitialData = function(t3, e2) {
      var n3 = new vx(["value"], this);
      return n3.hasItemOption = false, n3.initData(t3.data, [], function(t4, e3, i2, r2) {
        if (t4 instanceof Array)
          return NaN;
        n3.hasItemOption = true;
        var o2 = t4.value;
        return null != o2 ? o2 instanceof Array ? o2[r2] : o2 : void 0;
      }), n3;
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      var i2 = this.getData().getItemModel(t3), r2 = i2.get("name");
      if (r2)
        return r2;
      var o2 = i2.get("fromName"), a2 = i2.get("toName"), s2 = [];
      return null != o2 && s2.push(o2), null != a2 && s2.push(a2), eg("nameValue", { name: s2.join(" > ") });
    }, n2.prototype.preventIncremental = function() {
      return !!this.get(["effect", "show"]);
    }, n2.prototype.getProgressive = function() {
      var t3 = this.option.progressive;
      return null == t3 ? this.option.large ? 1e4 : this.get("progressive") : t3;
    }, n2.prototype.getProgressiveThreshold = function() {
      var t3 = this.option.progressiveThreshold;
      return null == t3 ? this.option.large ? 2e4 : this.get("progressiveThreshold") : t3;
    }, n2.prototype.getZLevelKey = function() {
      var t3 = this.getModel("effect"), e2 = t3.get("trailLength");
      return this.getData().count() > this.getProgressiveThreshold() ? this.id : t3.get("show") && e2 > 0 ? e2 + "" : "";
    }, n2.type = "series.lines", n2.dependencies = ["grid", "polar", "geo", "calendar"], n2.defaultOption = { coordinateSystem: "geo", z: 2, legendHoverLink: true, xAxisIndex: 0, yAxisIndex: 0, symbol: ["none", "none"], symbolSize: [10, 10], geoIndex: 0, effect: { show: false, period: 4, constantSpeed: 0, symbol: "circle", symbolSize: 3, loop: true, trailLength: 0.2 }, large: false, largeThreshold: 2e3, polyline: false, clip: true, label: { show: false, position: "end" }, lineStyle: { opacity: 0.5 } }, n2;
  }(vg);
  function hO(t2) {
    return t2 instanceof Array || (t2 = [t2, t2]), t2;
  }
  var cO = { seriesType: "lines", reset: function(t2) {
    var e2 = hO(t2.get("symbol")), n2 = hO(t2.get("symbolSize")), i2 = t2.getData();
    return i2.setVisual("fromSymbol", e2 && e2[0]), i2.setVisual("toSymbol", e2 && e2[1]), i2.setVisual("fromSymbolSize", n2 && n2[0]), i2.setVisual("toSymbolSize", n2 && n2[1]), { dataEach: i2.hasItemOption ? function(t3, e3) {
      var n3 = t3.getItemModel(e3), i3 = hO(n3.getShallow("symbol", true)), r2 = hO(n3.getShallow("symbolSize", true));
      i3[0] && t3.setItemVisual(e3, "fromSymbol", i3[0]), i3[1] && t3.setItemVisual(e3, "toSymbol", i3[1]), r2[0] && t3.setItemVisual(e3, "fromSymbolSize", r2[0]), r2[1] && t3.setItemVisual(e3, "toSymbolSize", r2[1]);
    } : null };
  } };
  var pO = function() {
    function t2() {
      this.blurSize = 30, this.pointSize = 20, this.maxOpacity = 1, this.minOpacity = 0, this._gradientPixels = { inRange: null, outOfRange: null };
      var t3 = u.createCanvas();
      this.canvas = t3;
    }
    return t2.prototype.update = function(t3, e2, n2, i2, r2, o2) {
      var a2 = this._getBrush(), s2 = this._getGradient(r2, "inRange"), l2 = this._getGradient(r2, "outOfRange"), u2 = this.pointSize + this.blurSize, h2 = this.canvas, c2 = h2.getContext("2d"), p2 = t3.length;
      h2.width = e2, h2.height = n2;
      for (var d2 = 0; d2 < p2; ++d2) {
        var f2 = t3[d2], g2 = f2[0], y2 = f2[1], v2 = i2(f2[2]);
        c2.globalAlpha = v2, c2.drawImage(a2, g2 - u2, y2 - u2);
      }
      if (!h2.width || !h2.height)
        return h2;
      for (var m2 = c2.getImageData(0, 0, h2.width, h2.height), x2 = m2.data, _2 = 0, b2 = x2.length, w2 = this.minOpacity, S2 = this.maxOpacity - w2; _2 < b2; ) {
        v2 = x2[_2 + 3] / 256;
        var M2 = 4 * Math.floor(255 * v2);
        if (v2 > 0) {
          var I2 = o2(v2) ? s2 : l2;
          v2 > 0 && (v2 = v2 * S2 + w2), x2[_2++] = I2[M2], x2[_2++] = I2[M2 + 1], x2[_2++] = I2[M2 + 2], x2[_2++] = I2[M2 + 3] * v2 * 256;
        } else
          _2 += 4;
      }
      return c2.putImageData(m2, 0, 0), h2;
    }, t2.prototype._getBrush = function() {
      var t3 = this._brushCanvas || (this._brushCanvas = u.createCanvas()), e2 = this.pointSize + this.blurSize, n2 = 2 * e2;
      t3.width = n2, t3.height = n2;
      var i2 = t3.getContext("2d");
      return i2.clearRect(0, 0, n2, n2), i2.shadowOffsetX = n2, i2.shadowBlur = this.blurSize, i2.shadowColor = "#000", i2.beginPath(), i2.arc(-e2, e2, this.pointSize, 0, 2 * Math.PI, true), i2.closePath(), i2.fill(), t3;
    }, t2.prototype._getGradient = function(t3, e2) {
      for (var n2 = this._gradientPixels, i2 = n2[e2] || (n2[e2] = new Uint8ClampedArray(1024)), r2 = [0, 0, 0, 0], o2 = 0, a2 = 0; a2 < 256; a2++)
        t3[e2](a2 / 255, true, r2), i2[o2++] = r2[0], i2[o2++] = r2[1], i2[o2++] = r2[2], i2[o2++] = r2[3];
      return i2;
    }, t2;
  }();
  function dO(t2) {
    var e2 = t2.dimensions;
    return "lng" === e2[0] && "lat" === e2[1];
  }
  var fO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2;
      e2.eachComponent("visualMap", function(e3) {
        e3.eachTargetSeries(function(n4) {
          n4 === t3 && (i2 = e3);
        });
      }), this._progressiveEls = null, this.group.removeAll();
      var r2 = t3.coordinateSystem;
      "cartesian2d" === r2.type || "calendar" === r2.type ? this._renderOnCartesianAndCalendar(t3, n3, 0, t3.getData().count()) : dO(r2) && this._renderOnGeo(r2, t3, i2, n3);
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      this.group.removeAll();
    }, n2.prototype.incrementalRender = function(t3, e2, n3, i2) {
      var r2 = e2.coordinateSystem;
      r2 && (dO(r2) ? this.render(e2, n3, i2) : (this._progressiveEls = [], this._renderOnCartesianAndCalendar(e2, i2, t3.start, t3.end, true)));
    }, n2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, n2.prototype._renderOnCartesianAndCalendar = function(t3, e2, n3, i2, r2) {
      var o2, a2, s2, l2, u2 = t3.coordinateSystem, h2 = zS(u2, "cartesian2d");
      if (h2) {
        var c2 = u2.getAxis("x"), p2 = u2.getAxis("y");
        o2 = c2.getBandWidth() + 0.5, a2 = p2.getBandWidth() + 0.5, s2 = c2.scale.getExtent(), l2 = p2.scale.getExtent();
      }
      for (var d2 = this.group, f2 = t3.getData(), g2 = t3.getModel(["emphasis", "itemStyle"]).getItemStyle(), y2 = t3.getModel(["blur", "itemStyle"]).getItemStyle(), v2 = t3.getModel(["select", "itemStyle"]).getItemStyle(), m2 = t3.get(["itemStyle", "borderRadius"]), x2 = tc(t3), _2 = t3.getModel("emphasis"), b2 = _2.get("focus"), w2 = _2.get("blurScope"), S2 = _2.get("disabled"), M2 = h2 ? [f2.mapDimension("x"), f2.mapDimension("y"), f2.mapDimension("value")] : [f2.mapDimension("time"), f2.mapDimension("value")], I2 = n3; I2 < i2; I2++) {
        var T2 = void 0, C2 = f2.getItemVisual(I2, "style");
        if (h2) {
          var D2 = f2.get(M2[0], I2), A2 = f2.get(M2[1], I2);
          if (isNaN(f2.get(M2[2], I2)) || isNaN(D2) || isNaN(A2) || D2 < s2[0] || D2 > s2[1] || A2 < l2[0] || A2 > l2[1])
            continue;
          var k2 = u2.dataToPoint([D2, A2]);
          T2 = new Es({ shape: { x: k2[0] - o2 / 2, y: k2[1] - a2 / 2, width: o2, height: a2 }, style: C2 });
        } else {
          if (isNaN(f2.get(M2[1], I2)))
            continue;
          T2 = new Es({ z2: 1, shape: u2.dataToRect([f2.get(M2[0], I2)]).contentShape, style: C2 });
        }
        if (f2.hasItemOption) {
          var L2 = f2.getItemModel(I2), P2 = L2.getModel("emphasis");
          g2 = P2.getModel("itemStyle").getItemStyle(), y2 = L2.getModel(["blur", "itemStyle"]).getItemStyle(), v2 = L2.getModel(["select", "itemStyle"]).getItemStyle(), m2 = L2.get(["itemStyle", "borderRadius"]), b2 = P2.get("focus"), w2 = P2.get("blurScope"), S2 = P2.get("disabled"), x2 = tc(L2);
        }
        T2.shape.r = m2;
        var O2 = t3.getRawValue(I2), R2 = "-";
        O2 && null != O2[2] && (R2 = O2[2] + ""), Qh(T2, x2, { labelFetcher: t3, labelDataIndex: I2, defaultOpacity: C2.opacity, defaultText: R2 }), T2.ensureState("emphasis").style = g2, T2.ensureState("blur").style = y2, T2.ensureState("select").style = v2, Hl(T2, b2, w2, S2), T2.incremental = r2, r2 && (T2.states.emphasis.hoverLayer = true), d2.add(T2), f2.setItemGraphicEl(I2, T2), this._progressiveEls && this._progressiveEls.push(T2);
      }
    }, n2.prototype._renderOnGeo = function(t3, e2, n3, i2) {
      var r2 = n3.targetVisuals.inRange, o2 = n3.targetVisuals.outOfRange, a2 = e2.getData(), s2 = this._hmLayer || this._hmLayer || new pO();
      s2.blurSize = e2.get("blurSize"), s2.pointSize = e2.get("pointSize"), s2.minOpacity = e2.get("minOpacity"), s2.maxOpacity = e2.get("maxOpacity");
      var l2 = t3.getViewRect().clone(), u2 = t3.getRoamTransform();
      l2.applyTransform(u2);
      var h2 = Math.max(l2.x, 0), c2 = Math.max(l2.y, 0), p2 = Math.min(l2.width + l2.x, i2.getWidth()), d2 = Math.min(l2.height + l2.y, i2.getHeight()), f2 = p2 - h2, g2 = d2 - c2, y2 = [a2.mapDimension("lng"), a2.mapDimension("lat"), a2.mapDimension("value")], v2 = a2.mapArray(y2, function(e3, n4, i3) {
        var r3 = t3.dataToPoint([e3, n4]);
        return r3[0] -= h2, r3[1] -= c2, r3.push(i3), r3;
      }), m2 = n3.getExtent(), x2 = "visualMap.continuous" === n3.type ? function(t4, e3) {
        var n4 = t4[1] - t4[0];
        return e3 = [(e3[0] - t4[0]) / n4, (e3[1] - t4[0]) / n4], function(t5) {
          return t5 >= e3[0] && t5 <= e3[1];
        };
      }(m2, n3.option.range) : function(t4, e3, n4) {
        var i3 = t4[1] - t4[0], r3 = (e3 = E(e3, function(e4) {
          return { interval: [(e4.interval[0] - t4[0]) / i3, (e4.interval[1] - t4[0]) / i3] };
        })).length, o3 = 0;
        return function(t5) {
          var i4;
          for (i4 = o3; i4 < r3; i4++)
            if ((a3 = e3[i4].interval)[0] <= t5 && t5 <= a3[1]) {
              o3 = i4;
              break;
            }
          if (i4 === r3)
            for (i4 = o3 - 1; i4 >= 0; i4--) {
              var a3;
              if ((a3 = e3[i4].interval)[0] <= t5 && t5 <= a3[1]) {
                o3 = i4;
                break;
              }
            }
          return i4 >= 0 && i4 < r3 && n4[i4];
        };
      }(m2, n3.getPieceList(), n3.option.selected);
      s2.update(v2, f2, g2, r2.color.getNormalizer(), { inRange: r2.color.getColorMapper(), outOfRange: o2.color.getColorMapper() }, x2);
      var _2 = new As({ style: { width: f2, height: g2, x: h2, y: c2, image: s2.canvas }, silent: true });
      this.group.add(_2);
    }, n2.type = "heatmap", n2;
  }(Ag);
  var gO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this, { generateCoord: "value" });
    }, n2.prototype.preventIncremental = function() {
      var t3 = md.get(this.get("coordinateSystem"));
      if (t3 && t3.dimensions)
        return "lng" === t3.dimensions[0] && "lat" === t3.dimensions[1];
    }, n2.type = "series.heatmap", n2.dependencies = ["grid", "geo", "calendar"], n2.defaultOption = { coordinateSystem: "cartesian2d", z: 2, geoIndex: 0, blurSize: 30, pointSize: 20, maxOpacity: 1, minOpacity: 0, select: { itemStyle: { borderColor: "#212121" } } }, n2;
  }(vg);
  var yO = ["itemStyle", "borderWidth"];
  var vO = [{ xy: "x", wh: "width", index: 0, posDesc: ["left", "right"] }, { xy: "y", wh: "height", index: 1, posDesc: ["top", "bottom"] }];
  var mO = new xu();
  var xO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = this.group, r2 = t3.getData(), o2 = this._data, a2 = t3.coordinateSystem, s2 = a2.getBaseAxis().isHorizontal(), l2 = a2.master.getRect(), u2 = { ecSize: { width: n3.getWidth(), height: n3.getHeight() }, seriesModel: t3, coordSys: a2, coordSysExtent: [[l2.x, l2.x + l2.width], [l2.y, l2.y + l2.height]], isHorizontal: s2, valueDim: vO[+s2], categoryDim: vO[1 - +s2] };
      return r2.diff(o2).add(function(t4) {
        if (r2.hasValue(t4)) {
          var e3 = CO(r2, t4), n4 = _O(r2, t4, e3, u2), o3 = kO(r2, u2, n4);
          r2.setItemGraphicEl(t4, o3), i2.add(o3), NO(o3, u2, n4);
        }
      }).update(function(t4, e3) {
        var n4 = o2.getItemGraphicEl(e3);
        if (r2.hasValue(t4)) {
          var a3 = CO(r2, t4), s3 = _O(r2, t4, a3, u2), l3 = PO(r2, s3);
          n4 && l3 !== n4.__pictorialShapeStr && (i2.remove(n4), r2.setItemGraphicEl(t4, null), n4 = null), n4 ? function(t5, e4, n5) {
            var i3 = n5.animationModel, r3 = n5.dataIndex, o3 = t5.__pictorialBundle;
            dh(o3, { x: n5.bundlePosition[0], y: n5.bundlePosition[1] }, i3, r3), n5.symbolRepeat ? SO(t5, e4, n5, true) : MO(t5, e4, n5, true);
            IO(t5, n5, true), TO(t5, e4, n5, true);
          }(n4, u2, s3) : n4 = kO(r2, u2, s3, true), r2.setItemGraphicEl(t4, n4), n4.__pictorialSymbolMeta = s3, i2.add(n4), NO(n4, u2, s3);
        } else
          i2.remove(n4);
      }).remove(function(t4) {
        var e3 = o2.getItemGraphicEl(t4);
        e3 && LO(o2, t4, e3.__pictorialSymbolMeta.animationModel, e3);
      }).execute(), this._data = r2, this.group;
    }, n2.prototype.remove = function(t3, e2) {
      var n3 = this.group, i2 = this._data;
      t3.get("animation") ? i2 && i2.eachItemGraphicEl(function(e3) {
        LO(i2, Js(e3).dataIndex, t3, e3);
      }) : n3.removeAll();
    }, n2.type = "pictorialBar", n2;
  }(Ag);
  function _O(t2, e2, n2, i2) {
    var r2 = t2.getItemLayout(e2), o2 = n2.get("symbolRepeat"), a2 = n2.get("symbolClip"), s2 = n2.get("symbolPosition") || "start", l2 = (n2.get("symbolRotate") || 0) * Math.PI / 180 || 0, u2 = n2.get("symbolPatternSize") || 2, h2 = n2.isAnimationEnabled(), c2 = { dataIndex: e2, layout: r2, itemModel: n2, symbolType: t2.getItemVisual(e2, "symbol") || "circle", style: t2.getItemVisual(e2, "style"), symbolClip: a2, symbolRepeat: o2, symbolRepeatDirection: n2.get("symbolRepeatDirection"), symbolPatternSize: u2, rotation: l2, animationModel: h2 ? n2 : null, hoverScale: h2 && n2.get(["emphasis", "scale"]), z2: n2.getShallow("z", true) || 0 };
    !function(t3, e3, n3, i3, r3) {
      var o3, a3 = i3.valueDim, s3 = t3.get("symbolBoundingData"), l3 = i3.coordSys.getOtherAxis(i3.coordSys.getBaseAxis()), u3 = l3.toGlobalCoord(l3.dataToCoord(0)), h3 = 1 - +(n3[a3.wh] <= 0);
      if (H(s3)) {
        var c3 = [bO(l3, s3[0]) - u3, bO(l3, s3[1]) - u3];
        c3[1] < c3[0] && c3.reverse(), o3 = c3[h3];
      } else
        o3 = null != s3 ? bO(l3, s3) - u3 : e3 ? i3.coordSysExtent[a3.index][h3] - u3 : n3[a3.wh];
      r3.boundingLength = o3, e3 && (r3.repeatCutLength = n3[a3.wh]);
      r3.pxSign = o3 > 0 ? 1 : -1;
    }(n2, o2, r2, i2, c2), function(t3, e3, n3, i3, r3, o3, a3, s3, l3, u3) {
      var h3, c3 = l3.valueDim, p3 = l3.categoryDim, d3 = Math.abs(n3[p3.wh]), f2 = t3.getItemVisual(e3, "symbolSize");
      h3 = H(f2) ? f2.slice() : null == f2 ? ["100%", "100%"] : [f2, f2];
      h3[p3.index] = Xr(h3[p3.index], d3), h3[c3.index] = Xr(h3[c3.index], i3 ? d3 : Math.abs(o3)), u3.symbolSize = h3;
      var g2 = u3.symbolScale = [h3[0] / s3, h3[1] / s3];
      g2[c3.index] *= (l3.isHorizontal ? -1 : 1) * a3;
    }(t2, e2, r2, o2, 0, c2.boundingLength, c2.pxSign, u2, i2, c2), function(t3, e3, n3, i3, r3) {
      var o3 = t3.get(yO) || 0;
      o3 && (mO.attr({ scaleX: e3[0], scaleY: e3[1], rotation: n3 }), mO.updateTransform(), o3 /= mO.getLineScale(), o3 *= e3[i3.valueDim.index]);
      r3.valueLineWidth = o3 || 0;
    }(n2, c2.symbolScale, l2, i2, c2);
    var p2 = c2.symbolSize, d2 = Hy(n2.get("symbolOffset"), p2);
    return function(t3, e3, n3, i3, r3, o3, a3, s3, l3, u3, h3, c3) {
      var p3 = h3.categoryDim, d3 = h3.valueDim, f2 = c3.pxSign, g2 = Math.max(e3[d3.index] + s3, 0), y2 = g2;
      if (i3) {
        var v2 = Math.abs(l3), m2 = nt(t3.get("symbolMargin"), "15%") + "", x2 = false;
        m2.lastIndexOf("!") === m2.length - 1 && (x2 = true, m2 = m2.slice(0, m2.length - 1));
        var _2 = Xr(m2, e3[d3.index]), b2 = Math.max(g2 + 2 * _2, 0), w2 = x2 ? 0 : 2 * _2, S2 = ho(i3), M2 = S2 ? i3 : EO((v2 + w2) / b2);
        b2 = g2 + 2 * (_2 = (v2 - M2 * g2) / 2 / (x2 ? M2 : Math.max(M2 - 1, 1))), w2 = x2 ? 0 : 2 * _2, S2 || "fixed" === i3 || (M2 = u3 ? EO((Math.abs(u3) + w2) / b2) : 0), y2 = M2 * b2 - w2, c3.repeatTimes = M2, c3.symbolMargin = _2;
      }
      var I2 = f2 * (y2 / 2), T2 = c3.pathPosition = [];
      T2[p3.index] = n3[p3.wh] / 2, T2[d3.index] = "start" === a3 ? I2 : "end" === a3 ? l3 - I2 : l3 / 2, o3 && (T2[0] += o3[0], T2[1] += o3[1]);
      var C2 = c3.bundlePosition = [];
      C2[p3.index] = n3[p3.xy], C2[d3.index] = n3[d3.xy];
      var A2 = c3.barRectShape = D({}, n3);
      A2[d3.wh] = f2 * Math.max(Math.abs(n3[d3.wh]), Math.abs(T2[d3.index] + I2)), A2[p3.wh] = n3[p3.wh];
      var k2 = c3.clipShape = {};
      k2[p3.xy] = -n3[p3.xy], k2[p3.wh] = h3.ecSize[p3.wh], k2[d3.xy] = 0, k2[d3.wh] = n3[d3.wh];
    }(n2, p2, r2, o2, 0, d2, s2, c2.valueLineWidth, c2.boundingLength, c2.repeatCutLength, i2, c2), c2;
  }
  function bO(t2, e2) {
    return t2.toGlobalCoord(t2.dataToCoord(t2.scale.parse(e2)));
  }
  function wO(t2) {
    var e2 = t2.symbolPatternSize, n2 = Gy(t2.symbolType, -e2 / 2, -e2 / 2, e2, e2);
    return n2.attr({ culling: true }), "image" !== n2.type && n2.setStyle({ strokeNoScale: true }), n2;
  }
  function SO(t2, e2, n2, i2) {
    var r2 = t2.__pictorialBundle, o2 = n2.symbolSize, a2 = n2.valueLineWidth, s2 = n2.pathPosition, l2 = e2.valueDim, u2 = n2.repeatTimes || 0, h2 = 0, c2 = o2[e2.valueDim.index] + a2 + 2 * n2.symbolMargin;
    for (OO(t2, function(t3) {
      t3.__pictorialAnimationIndex = h2, t3.__pictorialRepeatTimes = u2, h2 < u2 ? RO(t3, null, f2(h2), n2, i2) : RO(t3, null, { scaleX: 0, scaleY: 0 }, n2, i2, function() {
        r2.remove(t3);
      }), h2++;
    }); h2 < u2; h2++) {
      var p2 = wO(n2);
      p2.__pictorialAnimationIndex = h2, p2.__pictorialRepeatTimes = u2, r2.add(p2);
      var d2 = f2(h2);
      RO(p2, { x: d2.x, y: d2.y, scaleX: 0, scaleY: 0 }, { scaleX: d2.scaleX, scaleY: d2.scaleY, rotation: d2.rotation }, n2, i2);
    }
    function f2(t3) {
      var e3 = s2.slice(), i3 = n2.pxSign, r3 = t3;
      return ("start" === n2.symbolRepeatDirection ? i3 > 0 : i3 < 0) && (r3 = u2 - 1 - t3), e3[l2.index] = c2 * (r3 - u2 / 2 + 0.5) + s2[l2.index], { x: e3[0], y: e3[1], scaleX: n2.symbolScale[0], scaleY: n2.symbolScale[1], rotation: n2.rotation };
    }
  }
  function MO(t2, e2, n2, i2) {
    var r2 = t2.__pictorialBundle, o2 = t2.__pictorialMainPath;
    o2 ? RO(o2, null, { x: n2.pathPosition[0], y: n2.pathPosition[1], scaleX: n2.symbolScale[0], scaleY: n2.symbolScale[1], rotation: n2.rotation }, n2, i2) : (o2 = t2.__pictorialMainPath = wO(n2), r2.add(o2), RO(o2, { x: n2.pathPosition[0], y: n2.pathPosition[1], scaleX: 0, scaleY: 0, rotation: n2.rotation }, { scaleX: n2.symbolScale[0], scaleY: n2.symbolScale[1] }, n2, i2));
  }
  function IO(t2, e2, n2) {
    var i2 = D({}, e2.barRectShape), r2 = t2.__pictorialBarRect;
    r2 ? RO(r2, null, { shape: i2 }, e2, n2) : ((r2 = t2.__pictorialBarRect = new Es({ z2: 2, shape: i2, silent: true, style: { stroke: "transparent", fill: "transparent", lineWidth: 0 } })).disableMorphing = true, t2.add(r2));
  }
  function TO(t2, e2, n2, i2) {
    if (n2.symbolClip) {
      var r2 = t2.__pictorialClipPath, o2 = D({}, n2.clipShape), a2 = e2.valueDim, s2 = n2.animationModel, l2 = n2.dataIndex;
      if (r2)
        dh(r2, { shape: o2 }, s2, l2);
      else {
        o2[a2.wh] = 0, r2 = new Es({ shape: o2 }), t2.__pictorialBundle.setClipPath(r2), t2.__pictorialClipPath = r2;
        var u2 = {};
        u2[a2.wh] = n2.clipShape[a2.wh], qh[i2 ? "updateProps" : "initProps"](r2, { shape: u2 }, s2, l2);
      }
    }
  }
  function CO(t2, e2) {
    var n2 = t2.getItemModel(e2);
    return n2.getAnimationDelayParams = DO, n2.isAnimationEnabled = AO, n2;
  }
  function DO(t2) {
    return { index: t2.__pictorialAnimationIndex, count: t2.__pictorialRepeatTimes };
  }
  function AO() {
    return this.parentModel.isAnimationEnabled() && !!this.getShallow("animation");
  }
  function kO(t2, e2, n2, i2) {
    var r2 = new Er(), o2 = new Er();
    return r2.add(o2), r2.__pictorialBundle = o2, o2.x = n2.bundlePosition[0], o2.y = n2.bundlePosition[1], n2.symbolRepeat ? SO(r2, e2, n2) : MO(r2, 0, n2), IO(r2, n2, i2), TO(r2, e2, n2, i2), r2.__pictorialShapeStr = PO(t2, n2), r2.__pictorialSymbolMeta = n2, r2;
  }
  function LO(t2, e2, n2, i2) {
    var r2 = i2.__pictorialBarRect;
    r2 && r2.removeTextContent();
    var o2 = [];
    OO(i2, function(t3) {
      o2.push(t3);
    }), i2.__pictorialMainPath && o2.push(i2.__pictorialMainPath), i2.__pictorialClipPath && (n2 = null), N(o2, function(t3) {
      yh(t3, { scaleX: 0, scaleY: 0 }, n2, e2, function() {
        i2.parent && i2.parent.remove(i2);
      });
    }), t2.setItemGraphicEl(e2, null);
  }
  function PO(t2, e2) {
    return [t2.getItemVisual(e2.dataIndex, "symbol") || "none", !!e2.symbolRepeat, !!e2.symbolClip].join(":");
  }
  function OO(t2, e2, n2) {
    N(t2.__pictorialBundle.children(), function(i2) {
      i2 !== t2.__pictorialBarRect && e2.call(n2, i2);
    });
  }
  function RO(t2, e2, n2, i2, r2, o2) {
    e2 && t2.attr(e2), i2.symbolClip && !r2 ? n2 && t2.attr(n2) : n2 && qh[r2 ? "updateProps" : "initProps"](t2, n2, i2.animationModel, i2.dataIndex, o2);
  }
  function NO(t2, e2, n2) {
    var i2 = n2.dataIndex, r2 = n2.itemModel, o2 = r2.getModel("emphasis"), a2 = o2.getModel("itemStyle").getItemStyle(), s2 = r2.getModel(["blur", "itemStyle"]).getItemStyle(), l2 = r2.getModel(["select", "itemStyle"]).getItemStyle(), u2 = r2.getShallow("cursor"), h2 = o2.get("focus"), c2 = o2.get("blurScope"), p2 = o2.get("scale");
    OO(t2, function(t3) {
      if (t3 instanceof As) {
        var e3 = t3.style;
        t3.useStyle(D({ image: e3.image, x: e3.x, y: e3.y, width: e3.width, height: e3.height }, n2.style));
      } else
        t3.useStyle(n2.style);
      var i3 = t3.ensureState("emphasis");
      i3.style = a2, p2 && (i3.scaleX = 1.1 * t3.scaleX, i3.scaleY = 1.1 * t3.scaleY), t3.ensureState("blur").style = s2, t3.ensureState("select").style = l2, u2 && (t3.cursor = u2), t3.z2 = n2.z2;
    });
    var d2 = e2.valueDim.posDesc[+(n2.boundingLength > 0)];
    Qh(t2.__pictorialBarRect, tc(r2), { labelFetcher: e2.seriesModel, labelDataIndex: i2, defaultText: yS(e2.seriesModel.getData(), i2), inheritColor: n2.style.fill, defaultOpacity: n2.style.opacity, defaultOutsidePosition: d2 }), Hl(t2, h2, c2, o2.get("disabled"));
  }
  function EO(t2) {
    var e2 = Math.round(t2);
    return Math.abs(t2 - e2) < 1e-4 ? e2 : Math.ceil(t2);
  }
  var zO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.hasSymbolVisual = true, e2.defaultSymbol = "roundRect", e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(e2) {
      return e2.stack = null, t2.prototype.getInitialData.apply(this, arguments);
    }, n2.type = "series.pictorialBar", n2.dependencies = ["grid"], n2.defaultOption = Tc(QS.defaultOption, { symbol: "circle", symbolSize: null, symbolRotate: null, symbolPosition: null, symbolOffset: null, symbolMargin: null, symbolRepeat: false, symbolRepeatDirection: "end", symbolClip: false, symbolBoundingData: null, symbolPatternSize: 400, barGap: "-100%", progressive: 0, emphasis: { scale: false }, select: { itemStyle: { borderColor: "#212121" } } }), n2;
  }(QS);
  var VO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._layers = [], e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = t3.getData(), r2 = this, o2 = this.group, a2 = t3.getLayerSeries(), s2 = i2.getLayout("layoutInfo"), l2 = s2.rect, u2 = s2.boundaryGap;
      function h2(t4) {
        return t4.name;
      }
      o2.x = 0, o2.y = l2.y + u2[0];
      var c2 = new Zm(this._layersSeries || [], a2, h2, h2), p2 = [];
      function d2(e3, n4, s3) {
        var l3 = r2._layers;
        if ("remove" !== e3) {
          for (var u3, h3, c3 = [], d3 = [], f2 = a2[n4].indices, g2 = 0; g2 < f2.length; g2++) {
            var y2 = i2.getItemLayout(f2[g2]), v2 = y2.x, m2 = y2.y0, x2 = y2.y;
            c3.push(v2, m2), d3.push(v2, m2 + x2), u3 = i2.getItemVisual(f2[g2], "style");
          }
          var _2 = i2.getItemLayout(f2[0]), b2 = t3.getModel("label").get("margin"), w2 = t3.getModel("emphasis");
          if ("add" === e3) {
            var S2 = p2[n4] = new Er();
            h3 = new OS({ shape: { points: c3, stackedOnPoints: d3, smooth: 0.4, stackedOnSmooth: 0.4, smoothConstraint: false }, z2: 0 }), S2.add(h3), o2.add(S2), t3.isAnimationEnabled() && h3.setClipPath(function(t4, e4, n5) {
              var i3 = new Es({ shape: { x: t4.x - 10, y: t4.y - 10, width: 0, height: t4.height + 20 } });
              return fh(i3, { shape: { x: t4.x - 50, width: t4.width + 100, height: t4.height + 20 } }, e4, n5), i3;
            }(h3.getBoundingRect(), t3, function() {
              h3.removeClipPath();
            }));
          } else {
            S2 = l3[s3];
            h3 = S2.childAt(0), o2.add(S2), p2[n4] = S2, dh(h3, { shape: { points: c3, stackedOnPoints: d3 } }, t3), xh(h3);
          }
          Qh(h3, tc(t3), { labelDataIndex: f2[g2 - 1], defaultText: i2.getName(f2[g2 - 1]), inheritColor: u3.fill }, { normal: { verticalAlign: "middle" } }), h3.setTextConfig({ position: null, local: true });
          var M2 = h3.getTextContent();
          M2 && (M2.x = _2.x - b2, M2.y = _2.y0 + _2.y / 2), h3.useStyle(u3), i2.setItemGraphicEl(n4, h3), Zl(h3, t3), Hl(h3, w2.get("focus"), w2.get("blurScope"), w2.get("disabled"));
        } else
          o2.remove(l3[n4]);
      }
      c2.add(G(d2, this, "add")).update(G(d2, this, "update")).remove(G(d2, this, "remove")).execute(), this._layersSeries = a2, this._layers = p2;
    }, n2.type = "themeRiver", n2;
  }(Ag);
  var BO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2) {
      t2.prototype.init.apply(this, arguments), this.legendVisualProvider = new VM(G(this.getData, this), G(this.getRawData, this));
    }, n2.prototype.fixData = function(t3) {
      var e2 = t3.length, n3 = {}, i2 = Fo(t3, function(t4) {
        return n3.hasOwnProperty(t4[0] + "") || (n3[t4[0] + ""] = -1), t4[2];
      }), r2 = [];
      i2.buckets.each(function(t4, e3) {
        r2.push({ name: e3, dataList: t4 });
      });
      for (var o2 = r2.length, a2 = 0; a2 < o2; ++a2) {
        for (var s2 = r2[a2].name, l2 = 0; l2 < r2[a2].dataList.length; ++l2) {
          var u2 = r2[a2].dataList[l2][0] + "";
          n3[u2] = a2;
        }
        for (var u2 in n3)
          n3.hasOwnProperty(u2) && n3[u2] !== a2 && (n3[u2] = a2, t3[e2] = [u2, 0, s2], e2++);
      }
      return t3;
    }, n2.prototype.getInitialData = function(t3, e2) {
      for (var n3 = this.getReferringComponents("singleAxis", Eo).models[0].get("type"), i2 = V(t3.data, function(t4) {
        return void 0 !== t4[2];
      }), r2 = this.fixData(i2 || []), o2 = [], a2 = this.nameMap = gt(), s2 = 0, l2 = 0; l2 < r2.length; ++l2)
        o2.push(r2[l2][2]), a2.get(r2[l2][2]) || (a2.set(r2[l2][2], s2), s2++);
      var u2 = mx(r2, { coordDimensions: ["single"], dimensionsDefine: [{ name: "time", type: Km(n3) }, { name: "value", type: "float" }, { name: "name", type: "ordinal" }], encodeDefine: { single: 0, value: 1, itemName: 2 } }).dimensions, h2 = new vx(u2, this);
      return h2.initData(r2), h2;
    }, n2.prototype.getLayerSeries = function() {
      for (var t3 = this.getData(), e2 = t3.count(), n3 = [], i2 = 0; i2 < e2; ++i2)
        n3[i2] = i2;
      var r2 = t3.mapDimension("single"), o2 = Fo(n3, function(e3) {
        return t3.get("name", e3);
      }), a2 = [];
      return o2.buckets.each(function(e3, n4) {
        e3.sort(function(e4, n5) {
          return t3.get(r2, e4) - t3.get(r2, n5);
        }), a2.push({ name: n4, indices: e3 });
      }), a2;
    }, n2.prototype.getAxisTooltipData = function(t3, e2, n3) {
      H(t3) || (t3 = t3 ? [t3] : []);
      for (var i2, r2 = this.getData(), o2 = this.getLayerSeries(), a2 = [], s2 = o2.length, l2 = 0; l2 < s2; ++l2) {
        for (var u2 = Number.MAX_VALUE, h2 = -1, c2 = o2[l2].indices.length, p2 = 0; p2 < c2; ++p2) {
          var d2 = r2.get(t3[0], o2[l2].indices[p2]), f2 = Math.abs(d2 - e2);
          f2 <= u2 && (i2 = d2, u2 = f2, h2 = o2[l2].indices[p2]);
        }
        a2.push(h2);
      }
      return { dataIndices: a2, nestestValue: i2 };
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      var i2 = this.getData();
      return eg("nameValue", { name: i2.getName(t3), value: i2.get(i2.mapDimension("value"), t3) });
    }, n2.type = "series.themeRiver", n2.dependencies = ["singleAxis"], n2.defaultOption = { z: 2, colorBy: "data", coordinateSystem: "singleAxis", boundaryGap: ["10%", "10%"], singleAxisIndex: 0, animationEasing: "linear", label: { margin: 4, show: true, position: "left", fontSize: 11 }, emphasis: { label: { show: true } } }, n2;
  }(vg);
  function FO(t2, e2) {
    t2.eachSeriesByType("themeRiver", function(t3) {
      var e3 = t3.getData(), n2 = t3.coordinateSystem, i2 = {}, r2 = n2.getRect();
      i2.rect = r2;
      var o2 = t3.get("boundaryGap"), a2 = n2.getAxis();
      (i2.boundaryGap = o2, "horizontal" === a2.orient) ? (o2[0] = Xr(o2[0], r2.height), o2[1] = Xr(o2[1], r2.height), GO(e3, t3, r2.height - o2[0] - o2[1])) : (o2[0] = Xr(o2[0], r2.width), o2[1] = Xr(o2[1], r2.width), GO(e3, t3, r2.width - o2[0] - o2[1]));
      e3.setLayout("layoutInfo", i2);
    });
  }
  function GO(t2, e2, n2) {
    if (t2.count())
      for (var i2, r2 = e2.coordinateSystem, o2 = e2.getLayerSeries(), a2 = t2.mapDimension("single"), s2 = t2.mapDimension("value"), l2 = E(o2, function(e3) {
        return E(e3.indices, function(e4) {
          var n3 = r2.dataToPoint(t2.get(a2, e4));
          return n3[1] = t2.get(s2, e4), n3;
        });
      }), u2 = function(t3) {
        for (var e3 = t3.length, n3 = t3[0].length, i3 = [], r3 = [], o3 = 0, a3 = 0; a3 < n3; ++a3) {
          for (var s3 = 0, l3 = 0; l3 < e3; ++l3)
            s3 += t3[l3][a3][1];
          s3 > o3 && (o3 = s3), i3.push(s3);
        }
        for (var u3 = 0; u3 < n3; ++u3)
          r3[u3] = (o3 - i3[u3]) / 2;
        o3 = 0;
        for (var h3 = 0; h3 < n3; ++h3) {
          var c3 = i3[h3] + r3[h3];
          c3 > o3 && (o3 = c3);
        }
        return { y0: r3, max: o3 };
      }(l2), h2 = u2.y0, c2 = n2 / u2.max, p2 = o2.length, d2 = o2[0].indices.length, f2 = 0; f2 < d2; ++f2) {
        i2 = h2[f2] * c2, t2.setItemLayout(o2[0].indices[f2], { layerIndex: 0, x: l2[0][f2][0], y0: i2, y: l2[0][f2][1] * c2 });
        for (var g2 = 1; g2 < p2; ++g2)
          i2 += l2[g2 - 1][f2][1] * c2, t2.setItemLayout(o2[g2].indices[f2], { layerIndex: g2, x: l2[g2][f2][0], y0: i2, y: l2[g2][f2][1] * c2 });
      }
  }
  var WO = function(t2) {
    function n2(e2, n3, i2, r2) {
      var o2 = t2.call(this) || this;
      o2.z2 = 2, o2.textConfig = { inside: true }, Js(o2).seriesIndex = n3.seriesIndex;
      var a2 = new Bs({ z2: 4, silent: e2.getModel().get(["label", "silent"]) });
      return o2.setTextContent(a2), o2.updateData(true, e2, n3, i2, r2), o2;
    }
    return e(n2, t2), n2.prototype.updateData = function(t3, e2, n3, i2, r2) {
      this.node = e2, e2.piece = this, n3 = n3 || this._seriesModel, i2 = i2 || this._ecModel;
      var o2 = this;
      Js(o2).dataIndex = e2.dataIndex;
      var a2 = e2.getModel(), s2 = a2.getModel("emphasis"), l2 = e2.getLayout(), u2 = D({}, l2);
      u2.label = null;
      var h2 = e2.getVisual("style");
      h2.lineJoin = "bevel";
      var c2 = e2.getVisual("decal");
      c2 && (h2.decal = fv(c2, r2));
      var p2 = oM(a2.getModel("itemStyle"), u2, true);
      D(u2, p2), N(rl, function(t4) {
        var e3 = o2.ensureState(t4), n4 = a2.getModel([t4, "itemStyle"]);
        e3.style = n4.getItemStyle();
        var i3 = oM(n4, u2);
        i3 && (e3.shape = i3);
      }), t3 ? (o2.setShape(u2), o2.shape.r = l2.r0, fh(o2, { shape: { r: l2.r } }, n3, e2.dataIndex)) : (dh(o2, { shape: u2 }, n3), xh(o2)), o2.useStyle(h2), this._updateLabel(n3);
      var d2 = a2.getShallow("cursor");
      d2 && o2.attr("cursor", d2), this._seriesModel = n3 || this._seriesModel, this._ecModel = i2 || this._ecModel;
      var f2 = s2.get("focus");
      Hl(this, "ancestor" === f2 ? e2.getAncestorsIndices() : "descendant" === f2 ? e2.getDescendantIndices() : f2, s2.get("blurScope"), s2.get("disabled"));
    }, n2.prototype._updateLabel = function(t3) {
      var e2 = this, n3 = this.node.getModel(), i2 = n3.getModel("label"), r2 = this.node.getLayout(), o2 = r2.endAngle - r2.startAngle, a2 = (r2.startAngle + r2.endAngle) / 2, s2 = Math.cos(a2), l2 = Math.sin(a2), u2 = this, h2 = u2.getTextContent(), c2 = this.node.dataIndex, p2 = i2.get("minAngle") / 180 * Math.PI, d2 = i2.get("show") && !(null != p2 && Math.abs(o2) < p2);
      function f2(t4, e3) {
        var n4 = t4.get(e3);
        return null == n4 ? i2.get(e3) : n4;
      }
      h2.ignore = !d2, N(ol, function(i3) {
        var p3 = "normal" === i3 ? n3.getModel("label") : n3.getModel([i3, "label"]), d3 = "normal" === i3, g2 = d3 ? h2 : h2.ensureState(i3), y2 = t3.getFormattedLabel(c2, i3);
        d3 && (y2 = y2 || e2.node.name), g2.style = ec(p3, {}, null, "normal" !== i3, true), y2 && (g2.style.text = y2);
        var v2 = p3.get("show");
        null == v2 || d3 || (g2.ignore = !v2);
        var m2, x2 = f2(p3, "position"), _2 = d3 ? u2 : u2.states[i3], b2 = _2.style.fill;
        _2.textConfig = { outsideFill: "inherit" === p3.get("color") ? b2 : null, inside: "outside" !== x2 };
        var w2 = f2(p3, "distance") || 0, S2 = f2(p3, "align");
        "outside" === x2 ? (m2 = r2.r + w2, S2 = a2 > Math.PI / 2 ? "right" : "left") : S2 && "center" !== S2 ? "left" === S2 ? (m2 = r2.r0 + w2, a2 > Math.PI / 2 && (S2 = "right")) : "right" === S2 && (m2 = r2.r - w2, a2 > Math.PI / 2 && (S2 = "left")) : (m2 = o2 === 2 * Math.PI && 0 === r2.r0 ? 0 : (r2.r + r2.r0) / 2, S2 = "center"), g2.style.align = S2, g2.style.verticalAlign = f2(p3, "verticalAlign") || "middle", g2.x = m2 * s2 + r2.cx, g2.y = m2 * l2 + r2.cy;
        var M2 = f2(p3, "rotate"), I2 = 0;
        "radial" === M2 ? (I2 = us(-a2)) > Math.PI / 2 && I2 < 1.5 * Math.PI && (I2 += Math.PI) : "tangential" === M2 ? (I2 = Math.PI / 2 - a2) > Math.PI / 2 ? I2 -= Math.PI : I2 < -Math.PI / 2 && (I2 += Math.PI) : Z(M2) && (I2 = M2 * Math.PI / 180), g2.rotation = us(I2);
      }), h2.dirtyStyle();
    }, n2;
  }(Eu);
  var HO = "sunburstRootToNode";
  var YO = "sunburstHighlight";
  var XO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      var r2 = this;
      this.seriesModel = t3, this.api = n3, this.ecModel = e2;
      var o2 = t3.getData(), a2 = o2.tree.root, s2 = t3.getViewRoot(), l2 = this.group, u2 = t3.get("renderLabelForZeroData"), h2 = [];
      s2.eachNode(function(t4) {
        h2.push(t4);
      });
      var c2 = this._oldChildren || [];
      !function(i3, r3) {
        if (0 === i3.length && 0 === r3.length)
          return;
        function s3(t4) {
          return t4.getId();
        }
        function h3(s4, h4) {
          !function(i4, r4) {
            u2 || !i4 || i4.getValue() || (i4 = null);
            if (i4 !== a2 && r4 !== a2) {
              if (r4 && r4.piece)
                i4 ? (r4.piece.updateData(false, i4, t3, e2, n3), o2.setItemGraphicEl(i4.dataIndex, r4.piece)) : function(t4) {
                  if (!t4)
                    return;
                  t4.piece && (l2.remove(t4.piece), t4.piece = null);
                }(r4);
              else if (i4) {
                var s5 = new WO(i4, t3, e2, n3);
                l2.add(s5), o2.setItemGraphicEl(i4.dataIndex, s5);
              }
            }
          }(null == s4 ? null : i3[s4], null == h4 ? null : r3[h4]);
        }
        new Zm(r3, i3, s3, s3).add(h3).update(h3).remove(W(h3, null)).execute();
      }(h2, c2), function(i3, o3) {
        o3.depth > 0 ? (r2.virtualPiece ? r2.virtualPiece.updateData(false, i3, t3, e2, n3) : (r2.virtualPiece = new WO(i3, t3, e2, n3), l2.add(r2.virtualPiece)), o3.piece.off("click"), r2.virtualPiece.on("click", function(t4) {
          r2._rootToNode(o3.parentNode);
        })) : r2.virtualPiece && (l2.remove(r2.virtualPiece), r2.virtualPiece = null);
      }(a2, s2), this._initEvents(), this._oldChildren = h2;
    }, n2.prototype._initEvents = function() {
      var t3 = this;
      this.group.off("click"), this.group.on("click", function(e2) {
        var n3 = false;
        t3.seriesModel.getViewRoot().eachNode(function(i2) {
          if (!n3 && i2.piece && i2.piece === e2.target) {
            var r2 = i2.getModel().get("nodeClick");
            if ("rootToNode" === r2)
              t3._rootToNode(i2);
            else if ("link" === r2) {
              var o2 = i2.getModel(), a2 = o2.get("link");
              if (a2)
                _p(a2, o2.get("target", true) || "_blank");
            }
            n3 = true;
          }
        });
      });
    }, n2.prototype._rootToNode = function(t3) {
      t3 !== this.seriesModel.getViewRoot() && this.api.dispatchAction({ type: HO, from: this.uid, seriesId: this.seriesModel.id, targetNode: t3 });
    }, n2.prototype.containPoint = function(t3, e2) {
      var n3 = e2.getData().getItemLayout(0);
      if (n3) {
        var i2 = t3[0] - n3.cx, r2 = t3[1] - n3.cy, o2 = Math.sqrt(i2 * i2 + r2 * r2);
        return o2 <= n3.r && o2 >= n3.r0;
      }
    }, n2.type = "sunburst", n2;
  }(Ag);
  var UO = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.ignoreStyleOnData = true, e2;
    }
    return e(n2, t2), n2.prototype.getInitialData = function(t3, e2) {
      var n3 = { name: t3.name, children: t3.data };
      ZO(n3);
      var i2 = this._levelModels = E(t3.levels || [], function(t4) {
        return new Sc(t4, this, e2);
      }, this), r2 = oD.createTree(n3, this, function(t4) {
        t4.wrapMethod("getItemModel", function(t5, e3) {
          var n4 = r2.getNodeByDataIndex(e3), o2 = i2[n4.depth];
          return o2 && (t5.parentModel = o2), t5;
        });
      });
      return r2.data;
    }, n2.prototype.optionUpdated = function() {
      this.resetViewRoot();
    }, n2.prototype.getDataParams = function(e2) {
      var n3 = t2.prototype.getDataParams.apply(this, arguments), i2 = this.getData().tree.getNodeByDataIndex(e2);
      return n3.treePathInfo = uD(i2, this), n3;
    }, n2.prototype.getLevelModel = function(t3) {
      return this._levelModels && this._levelModels[t3.depth];
    }, n2.prototype.getViewRoot = function() {
      return this._viewRoot;
    }, n2.prototype.resetViewRoot = function(t3) {
      t3 ? this._viewRoot = t3 : t3 = this._viewRoot;
      var e2 = this.getRawData().tree.root;
      t3 && (t3 === e2 || e2.contains(t3)) || (this._viewRoot = e2);
    }, n2.prototype.enableAriaDecal = function() {
      gD(this);
    }, n2.type = "series.sunburst", n2.defaultOption = { z: 2, center: ["50%", "50%"], radius: [0, "75%"], clockwise: true, startAngle: 90, minAngle: 0, stillShowZeroSum: true, nodeClick: "rootToNode", renderLabelForZeroData: false, label: { rotate: "radial", show: true, opacity: 1, align: "center", position: "inside", distance: 5, silent: true }, itemStyle: { borderWidth: 1, borderColor: "white", borderType: "solid", shadowBlur: 0, shadowColor: "rgba(0, 0, 0, 0.2)", shadowOffsetX: 0, shadowOffsetY: 0, opacity: 1 }, emphasis: { focus: "descendant" }, blur: { itemStyle: { opacity: 0.2 }, label: { opacity: 0.1 } }, animationType: "expansion", animationDuration: 1e3, animationDurationUpdate: 500, data: [], sort: "desc" }, n2;
  }(vg);
  function ZO(t2) {
    var e2 = 0;
    N(t2.children, function(t3) {
      ZO(t3);
      var n3 = t3.value;
      H(n3) && (n3 = n3[0]), e2 += n3;
    });
    var n2 = t2.value;
    H(n2) && (n2 = n2[0]), (null == n2 || isNaN(n2)) && (n2 = e2), n2 < 0 && (n2 = 0), H(t2.value) ? t2.value[0] = n2 : t2.value = n2;
  }
  var jO = Math.PI / 180;
  function qO(t2, e2, n2) {
    e2.eachSeriesByType(t2, function(t3) {
      var e3 = t3.get("center"), i2 = t3.get("radius");
      H(i2) || (i2 = [0, i2]), H(e3) || (e3 = [e3, e3]);
      var r2 = n2.getWidth(), o2 = n2.getHeight(), a2 = Math.min(r2, o2), s2 = Xr(e3[0], r2), l2 = Xr(e3[1], o2), u2 = Xr(i2[0], a2 / 2), h2 = Xr(i2[1], a2 / 2), c2 = -t3.get("startAngle") * jO, p2 = t3.get("minAngle") * jO, d2 = t3.getData().tree.root, f2 = t3.getViewRoot(), g2 = f2.depth, y2 = t3.get("sort");
      null != y2 && KO(f2, y2);
      var v2 = 0;
      N(f2.children, function(t4) {
        !isNaN(t4.getValue()) && v2++;
      });
      var m2 = f2.getValue(), x2 = Math.PI / (m2 || v2) * 2, _2 = f2.depth > 0, b2 = f2.height - (_2 ? -1 : 1), w2 = (h2 - u2) / (b2 || 1), S2 = t3.get("clockwise"), M2 = t3.get("stillShowZeroSum"), I2 = S2 ? 1 : -1, T2 = function(e4, n3) {
        if (e4) {
          var i3 = n3;
          if (e4 !== d2) {
            var r3 = e4.getValue(), o3 = 0 === m2 && M2 ? x2 : r3 * x2;
            o3 < p2 && (o3 = p2), i3 = n3 + I2 * o3;
            var h3 = e4.depth - g2 - (_2 ? -1 : 1), c3 = u2 + w2 * h3, f3 = u2 + w2 * (h3 + 1), y3 = t3.getLevelModel(e4);
            if (y3) {
              var v3 = y3.get("r0", true), b3 = y3.get("r", true), C3 = y3.get("radius", true);
              null != C3 && (v3 = C3[0], b3 = C3[1]), null != v3 && (c3 = Xr(v3, a2 / 2)), null != b3 && (f3 = Xr(b3, a2 / 2));
            }
            e4.setLayout({ angle: o3, startAngle: n3, endAngle: i3, clockwise: S2, cx: s2, cy: l2, r0: c3, r: f3 });
          }
          if (e4.children && e4.children.length) {
            var D3 = 0;
            N(e4.children, function(t4) {
              D3 += T2(t4, n3 + D3);
            });
          }
          return i3 - n3;
        }
      };
      if (_2) {
        var C2 = u2, D2 = u2 + w2, A2 = 2 * Math.PI;
        d2.setLayout({ angle: A2, startAngle: c2, endAngle: c2 + A2, clockwise: S2, cx: s2, cy: l2, r0: C2, r: D2 });
      }
      T2(f2, c2);
    });
  }
  function KO(t2, e2) {
    var n2 = t2.children || [];
    t2.children = function(t3, e3) {
      if (Y(e3)) {
        var n3 = E(t3, function(t4, e4) {
          var n4 = t4.getValue();
          return { params: { depth: t4.depth, height: t4.height, dataIndex: t4.dataIndex, getValue: function() {
            return n4;
          } }, index: e4 };
        });
        return n3.sort(function(t4, n4) {
          return e3(t4.params, n4.params);
        }), E(n3, function(e4) {
          return t3[e4.index];
        });
      }
      var i2 = "asc" === e3;
      return t3.sort(function(t4, e4) {
        var n4 = (t4.getValue() - e4.getValue()) * (i2 ? 1 : -1);
        return 0 === n4 ? (t4.dataIndex - e4.dataIndex) * (i2 ? -1 : 1) : n4;
      });
    }(n2, e2), n2.length && N(t2.children, function(t3) {
      KO(t3, e2);
    });
  }
  function $O(t2) {
    var e2 = {};
    t2.eachSeriesByType("sunburst", function(t3) {
      var n2 = t3.getData(), i2 = n2.tree;
      i2.eachNode(function(r2) {
        var o2 = r2.getModel().getModel("itemStyle").getItemStyle();
        o2.fill || (o2.fill = function(t4, n3, i3) {
          for (var r3 = t4; r3 && r3.depth > 1; )
            r3 = r3.parentNode;
          var o3 = n3.getColorFromPalette(r3.name || r3.dataIndex + "", e2);
          return t4.depth > 1 && X(o3) && (o3 = Kn(o3, (t4.depth - 1) / (i3 - 1) * 0.5)), o3;
        }(r2, t3, i2.root.height)), D(n2.ensureUniqueItemVisual(r2.dataIndex, "style"), o2);
      });
    });
  }
  var JO = { color: "fill", borderColor: "stroke" };
  var QO = { symbol: 1, symbolSize: 1, symbolKeepAspect: 1, legendIcon: 1, visualMeta: 1, liftZ: 1, decal: 1 };
  var tR = Po();
  var eR = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function() {
      this.currentZLevel = this.get("zlevel", true), this.currentZ = this.get("z", true);
    }, n2.prototype.getInitialData = function(t3, e2) {
      return Cx(null, this);
    }, n2.prototype.getDataParams = function(e2, n3, i2) {
      var r2 = t2.prototype.getDataParams.call(this, e2, n3);
      return i2 && (r2.info = tR(i2).info), r2;
    }, n2.type = "series.custom", n2.dependencies = ["grid", "polar", "geo", "singleAxis", "calendar"], n2.defaultOption = { coordinateSystem: "cartesian2d", z: 2, legendHoverLink: true, clip: false }, n2;
  }(vg);
  function nR(t2, e2) {
    return e2 = e2 || [0, 0], E(["x", "y"], function(n2, i2) {
      var r2 = this.getAxis(n2), o2 = e2[i2], a2 = t2[i2] / 2;
      return "category" === r2.type ? r2.getBandWidth() : Math.abs(r2.dataToCoord(o2 - a2) - r2.dataToCoord(o2 + a2));
    }, this);
  }
  function iR(t2, e2) {
    return e2 = e2 || [0, 0], E([0, 1], function(n2) {
      var i2 = e2[n2], r2 = t2[n2] / 2, o2 = [], a2 = [];
      return o2[n2] = i2 - r2, a2[n2] = i2 + r2, o2[1 - n2] = a2[1 - n2] = e2[1 - n2], Math.abs(this.dataToPoint(o2)[n2] - this.dataToPoint(a2)[n2]);
    }, this);
  }
  function rR(t2, e2) {
    var n2 = this.getAxis(), i2 = e2 instanceof Array ? e2[0] : e2, r2 = (t2 instanceof Array ? t2[0] : t2) / 2;
    return "category" === n2.type ? n2.getBandWidth() : Math.abs(n2.dataToCoord(i2 - r2) - n2.dataToCoord(i2 + r2));
  }
  function oR(t2, e2) {
    return e2 = e2 || [0, 0], E(["Radius", "Angle"], function(n2, i2) {
      var r2 = this["get" + n2 + "Axis"](), o2 = e2[i2], a2 = t2[i2] / 2, s2 = "category" === r2.type ? r2.getBandWidth() : Math.abs(r2.dataToCoord(o2 - a2) - r2.dataToCoord(o2 + a2));
      return "Angle" === n2 && (s2 = s2 * Math.PI / 180), s2;
    }, this);
  }
  function aR(t2, e2, n2, i2) {
    return t2 && (t2.legacy || false !== t2.legacy && !n2 && !i2 && "tspan" !== e2 && ("text" === e2 || xt(t2, "text")));
  }
  function sR(t2, e2, n2) {
    var i2, r2, o2, a2 = t2;
    if ("text" === e2)
      o2 = a2;
    else {
      o2 = {}, xt(a2, "text") && (o2.text = a2.text), xt(a2, "rich") && (o2.rich = a2.rich), xt(a2, "textFill") && (o2.fill = a2.textFill), xt(a2, "textStroke") && (o2.stroke = a2.textStroke), xt(a2, "fontFamily") && (o2.fontFamily = a2.fontFamily), xt(a2, "fontSize") && (o2.fontSize = a2.fontSize), xt(a2, "fontStyle") && (o2.fontStyle = a2.fontStyle), xt(a2, "fontWeight") && (o2.fontWeight = a2.fontWeight), r2 = { type: "text", style: o2, silent: true }, i2 = {};
      var s2 = xt(a2, "textPosition");
      n2 ? i2.position = s2 ? a2.textPosition : "inside" : s2 && (i2.position = a2.textPosition), xt(a2, "textPosition") && (i2.position = a2.textPosition), xt(a2, "textOffset") && (i2.offset = a2.textOffset), xt(a2, "textRotation") && (i2.rotation = a2.textRotation), xt(a2, "textDistance") && (i2.distance = a2.textDistance);
    }
    return lR(o2, t2), N(o2.rich, function(t3) {
      lR(t3, t3);
    }), { textConfig: i2, textContent: r2 };
  }
  function lR(t2, e2) {
    e2 && (e2.font = e2.textFont || e2.font, xt(e2, "textStrokeWidth") && (t2.lineWidth = e2.textStrokeWidth), xt(e2, "textAlign") && (t2.align = e2.textAlign), xt(e2, "textVerticalAlign") && (t2.verticalAlign = e2.textVerticalAlign), xt(e2, "textLineHeight") && (t2.lineHeight = e2.textLineHeight), xt(e2, "textWidth") && (t2.width = e2.textWidth), xt(e2, "textHeight") && (t2.height = e2.textHeight), xt(e2, "textBackgroundColor") && (t2.backgroundColor = e2.textBackgroundColor), xt(e2, "textPadding") && (t2.padding = e2.textPadding), xt(e2, "textBorderColor") && (t2.borderColor = e2.textBorderColor), xt(e2, "textBorderWidth") && (t2.borderWidth = e2.textBorderWidth), xt(e2, "textBorderRadius") && (t2.borderRadius = e2.textBorderRadius), xt(e2, "textBoxShadowColor") && (t2.shadowColor = e2.textBoxShadowColor), xt(e2, "textBoxShadowBlur") && (t2.shadowBlur = e2.textBoxShadowBlur), xt(e2, "textBoxShadowOffsetX") && (t2.shadowOffsetX = e2.textBoxShadowOffsetX), xt(e2, "textBoxShadowOffsetY") && (t2.shadowOffsetY = e2.textBoxShadowOffsetY));
  }
  function uR(t2, e2, n2) {
    var i2 = t2;
    i2.textPosition = i2.textPosition || n2.position || "inside", null != n2.offset && (i2.textOffset = n2.offset), null != n2.rotation && (i2.textRotation = n2.rotation), null != n2.distance && (i2.textDistance = n2.distance);
    var r2 = i2.textPosition.indexOf("inside") >= 0, o2 = t2.fill || "#000";
    hR(i2, e2);
    var a2 = null == i2.textFill;
    return r2 ? a2 && (i2.textFill = n2.insideFill || "#fff", !i2.textStroke && n2.insideStroke && (i2.textStroke = n2.insideStroke), !i2.textStroke && (i2.textStroke = o2), null == i2.textStrokeWidth && (i2.textStrokeWidth = 2)) : (a2 && (i2.textFill = t2.fill || n2.outsideFill || "#000"), !i2.textStroke && n2.outsideStroke && (i2.textStroke = n2.outsideStroke)), i2.text = e2.text, i2.rich = e2.rich, N(e2.rich, function(t3) {
      hR(t3, t3);
    }), i2;
  }
  function hR(t2, e2) {
    e2 && (xt(e2, "fill") && (t2.textFill = e2.fill), xt(e2, "stroke") && (t2.textStroke = e2.fill), xt(e2, "lineWidth") && (t2.textStrokeWidth = e2.lineWidth), xt(e2, "font") && (t2.font = e2.font), xt(e2, "fontStyle") && (t2.fontStyle = e2.fontStyle), xt(e2, "fontWeight") && (t2.fontWeight = e2.fontWeight), xt(e2, "fontSize") && (t2.fontSize = e2.fontSize), xt(e2, "fontFamily") && (t2.fontFamily = e2.fontFamily), xt(e2, "align") && (t2.textAlign = e2.align), xt(e2, "verticalAlign") && (t2.textVerticalAlign = e2.verticalAlign), xt(e2, "lineHeight") && (t2.textLineHeight = e2.lineHeight), xt(e2, "width") && (t2.textWidth = e2.width), xt(e2, "height") && (t2.textHeight = e2.height), xt(e2, "backgroundColor") && (t2.textBackgroundColor = e2.backgroundColor), xt(e2, "padding") && (t2.textPadding = e2.padding), xt(e2, "borderColor") && (t2.textBorderColor = e2.borderColor), xt(e2, "borderWidth") && (t2.textBorderWidth = e2.borderWidth), xt(e2, "borderRadius") && (t2.textBorderRadius = e2.borderRadius), xt(e2, "shadowColor") && (t2.textBoxShadowColor = e2.shadowColor), xt(e2, "shadowBlur") && (t2.textBoxShadowBlur = e2.shadowBlur), xt(e2, "shadowOffsetX") && (t2.textBoxShadowOffsetX = e2.shadowOffsetX), xt(e2, "shadowOffsetY") && (t2.textBoxShadowOffsetY = e2.shadowOffsetY), xt(e2, "textShadowColor") && (t2.textShadowColor = e2.textShadowColor), xt(e2, "textShadowBlur") && (t2.textShadowBlur = e2.textShadowBlur), xt(e2, "textShadowOffsetX") && (t2.textShadowOffsetX = e2.textShadowOffsetX), xt(e2, "textShadowOffsetY") && (t2.textShadowOffsetY = e2.textShadowOffsetY));
  }
  var cR = { position: ["x", "y"], scale: ["scaleX", "scaleY"], origin: ["originX", "originY"] };
  var pR = F(cR);
  var dR = (z(gr, function(t2, e2) {
    return t2[e2] = 1, t2;
  }, {}), gr.join(", "), ["", "style", "shape", "extra"]);
  var fR = Po();
  function gR(t2, e2, n2, i2, r2) {
    var o2 = t2 + "Animation", a2 = ch(t2, i2, r2) || {}, s2 = fR(e2).userDuring;
    return a2.duration > 0 && (a2.during = s2 ? G(wR, { el: e2, userDuring: s2 }) : null, a2.setToFinal = true, a2.scope = t2), D(a2, n2[o2]), a2;
  }
  function yR(t2, e2, n2, i2) {
    var r2 = (i2 = i2 || {}).dataIndex, o2 = i2.isInit, a2 = i2.clearStyle, s2 = n2.isAnimationEnabled(), l2 = fR(t2), u2 = e2.style;
    l2.userDuring = e2.during;
    var h2 = {}, c2 = {};
    if (function(t3, e3, n3) {
      for (var i3 = 0; i3 < pR.length; i3++) {
        var r3 = pR[i3], o3 = cR[r3], a3 = e3[r3];
        a3 && (n3[o3[0]] = a3[0], n3[o3[1]] = a3[1]);
      }
      for (i3 = 0; i3 < gr.length; i3++) {
        var s3 = gr[i3];
        null != e3[s3] && (n3[s3] = e3[s3]);
      }
    }(0, e2, c2), MR("shape", e2, c2), MR("extra", e2, c2), !o2 && s2 && (function(t3, e3, n3) {
      for (var i3 = e3.transition, r3 = xR(i3) ? gr : _o(i3 || []), o3 = 0; o3 < r3.length; o3++) {
        var a3 = r3[o3];
        if ("style" !== a3 && "shape" !== a3 && "extra" !== a3) {
          var s3 = t3[a3];
          n3[a3] = s3;
        }
      }
    }(t2, e2, h2), SR("shape", t2, e2, h2), SR("extra", t2, e2, h2), function(t3, e3, n3, i3) {
      if (!n3)
        return;
      var r3, o3 = t3.style;
      if (o3) {
        var a3 = n3.transition, s3 = e3.transition;
        if (a3 && !xR(a3)) {
          var l3 = _o(a3);
          !r3 && (r3 = i3.style = {});
          for (var u3 = 0; u3 < l3.length; u3++) {
            var h3 = o3[f2 = l3[u3]];
            r3[f2] = h3;
          }
        } else if (t3.getAnimationStyleProps && (xR(s3) || xR(a3) || L(s3, "style") >= 0)) {
          var c3 = t3.getAnimationStyleProps(), p3 = c3 ? c3.style : null;
          if (p3) {
            !r3 && (r3 = i3.style = {});
            var d3 = F(n3);
            for (u3 = 0; u3 < d3.length; u3++) {
              var f2;
              if (p3[f2 = d3[u3]]) {
                h3 = o3[f2];
                r3[f2] = h3;
              }
            }
          }
        }
      }
    }(t2, e2, u2, h2)), c2.style = u2, function(t3, e3, n3) {
      var i3 = e3.style;
      if (!t3.isGroup && i3) {
        if (n3) {
          t3.useStyle({});
          for (var r3 = t3.animators, o3 = 0; o3 < r3.length; o3++) {
            var a3 = r3[o3];
            "style" === a3.targetName && a3.changeTarget(t3.style);
          }
        }
        t3.setStyle(i3);
      }
      e3 && (e3.style = null, e3 && t3.attr(e3), e3.style = i3);
    }(t2, c2, a2), function(t3, e3) {
      xt(e3, "silent") && (t3.silent = e3.silent), xt(e3, "ignore") && (t3.ignore = e3.ignore), t3 instanceof wa && xt(e3, "invisible") && (t3.invisible = e3.invisible);
      t3 instanceof Ms && xt(e3, "autoBatch") && (t3.autoBatch = e3.autoBatch);
    }(t2, e2), s2)
      if (o2) {
        var p2 = {};
        N(dR, function(t3) {
          var n3 = t3 ? e2[t3] : e2;
          n3 && n3.enterFrom && (t3 && (p2[t3] = p2[t3] || {}), D(t3 ? p2[t3] : p2, n3.enterFrom));
        });
        var d2 = gR("enter", t2, e2, n2, r2);
        d2.duration > 0 && t2.animateFrom(p2, d2);
      } else
        !function(t3, e3, n3, i3, r3) {
          if (r3) {
            var o3 = gR("update", t3, e3, i3, n3);
            o3.duration > 0 && t3.animateFrom(r3, o3);
          }
        }(t2, e2, r2 || 0, n2, h2);
    vR(t2, e2), u2 ? t2.dirty() : t2.markRedraw();
  }
  function vR(t2, e2) {
    for (var n2 = fR(t2).leaveToProps, i2 = 0; i2 < dR.length; i2++) {
      var r2 = dR[i2], o2 = r2 ? e2[r2] : e2;
      o2 && o2.leaveTo && (n2 || (n2 = fR(t2).leaveToProps = {}), r2 && (n2[r2] = n2[r2] || {}), D(r2 ? n2[r2] : n2, o2.leaveTo));
    }
  }
  function mR(t2, e2, n2, i2) {
    if (t2) {
      var r2 = t2.parent, o2 = fR(t2).leaveToProps;
      if (o2) {
        var a2 = gR("update", t2, e2, n2, 0);
        a2.done = function() {
          r2.remove(t2), i2 && i2();
        }, t2.animateTo(o2, a2);
      } else
        r2.remove(t2), i2 && i2();
    }
  }
  function xR(t2) {
    return "all" === t2;
  }
  var _R = {};
  var bR = { setTransform: function(t2, e2) {
    return _R.el[t2] = e2, this;
  }, getTransform: function(t2) {
    return _R.el[t2];
  }, setShape: function(t2, e2) {
    var n2 = _R.el;
    return (n2.shape || (n2.shape = {}))[t2] = e2, n2.dirtyShape && n2.dirtyShape(), this;
  }, getShape: function(t2) {
    var e2 = _R.el.shape;
    if (e2)
      return e2[t2];
  }, setStyle: function(t2, e2) {
    var n2 = _R.el, i2 = n2.style;
    return i2 && (i2[t2] = e2, n2.dirtyStyle && n2.dirtyStyle()), this;
  }, getStyle: function(t2) {
    var e2 = _R.el.style;
    if (e2)
      return e2[t2];
  }, setExtra: function(t2, e2) {
    return (_R.el.extra || (_R.el.extra = {}))[t2] = e2, this;
  }, getExtra: function(t2) {
    var e2 = _R.el.extra;
    if (e2)
      return e2[t2];
  } };
  function wR() {
    var t2 = this, e2 = t2.el;
    if (e2) {
      var n2 = fR(e2).userDuring, i2 = t2.userDuring;
      n2 === i2 ? (_R.el = e2, i2(bR)) : t2.el = t2.userDuring = null;
    }
  }
  function SR(t2, e2, n2, i2) {
    var r2 = n2[t2];
    if (r2) {
      var o2, a2 = e2[t2];
      if (a2) {
        var s2 = n2.transition, l2 = r2.transition;
        if (l2)
          if (!o2 && (o2 = i2[t2] = {}), xR(l2))
            D(o2, a2);
          else
            for (var u2 = _o(l2), h2 = 0; h2 < u2.length; h2++) {
              var c2 = a2[d2 = u2[h2]];
              o2[d2] = c2;
            }
        else if (xR(s2) || L(s2, t2) >= 0) {
          !o2 && (o2 = i2[t2] = {});
          var p2 = F(a2);
          for (h2 = 0; h2 < p2.length; h2++) {
            var d2;
            c2 = a2[d2 = p2[h2]];
            IR(r2[d2], c2) && (o2[d2] = c2);
          }
        }
      }
    }
  }
  function MR(t2, e2, n2) {
    var i2 = e2[t2];
    if (i2)
      for (var r2 = n2[t2] = {}, o2 = F(i2), a2 = 0; a2 < o2.length; a2++) {
        var s2 = o2[a2];
        r2[s2] = Ai(i2[s2]);
      }
  }
  function IR(t2, e2) {
    return R(t2) ? t2 !== e2 : null != t2 && isFinite(t2);
  }
  var TR = Po();
  var CR = ["percent", "easing", "shape", "style", "extra"];
  function DR(t2) {
    t2.stopAnimation("keyframe"), t2.attr(TR(t2));
  }
  function AR(t2, e2, n2) {
    if (n2.isAnimationEnabled() && e2)
      if (H(e2))
        N(e2, function(e3) {
          AR(t2, e3, n2);
        });
      else {
        var i2 = e2.keyframes, r2 = e2.duration;
        if (n2 && null == r2) {
          var o2 = ch("enter", n2, 0);
          r2 = o2 && o2.duration;
        }
        if (i2 && r2) {
          var a2 = TR(t2);
          N(dR, function(n3) {
            if (!n3 || t2[n3]) {
              var o3;
              i2.sort(function(t3, e3) {
                return t3.percent - e3.percent;
              }), N(i2, function(i3) {
                var s2 = t2.animators, l2 = n3 ? i3[n3] : i3;
                if (l2) {
                  var u2 = F(l2);
                  if (n3 || (u2 = V(u2, function(t3) {
                    return L(CR, t3) < 0;
                  })), u2.length) {
                    o3 || ((o3 = t2.animate(n3, e2.loop, true)).scope = "keyframe");
                    for (var h2 = 0; h2 < s2.length; h2++)
                      s2[h2] !== o3 && s2[h2].targetName === o3.targetName && s2[h2].stopTracks(u2);
                    n3 && (a2[n3] = a2[n3] || {});
                    var c2 = n3 ? a2[n3] : a2;
                    N(u2, function(e3) {
                      c2[e3] = ((n3 ? t2[n3] : t2) || {})[e3];
                    }), o3.whenWithKeys(r2 * i3.percent, l2, u2, i3.easing);
                  }
                }
              }), o3 && o3.delay(e2.delay || 0).duration(r2).start(e2.easing);
            }
          });
        }
      }
  }
  var kR = "emphasis";
  var LR = "normal";
  var PR = "blur";
  var OR = "select";
  var RR = [LR, kR, PR, OR];
  var NR = { normal: ["itemStyle"], emphasis: [kR, "itemStyle"], blur: [PR, "itemStyle"], select: [OR, "itemStyle"] };
  var ER = { normal: ["label"], emphasis: [kR, "label"], blur: [PR, "label"], select: [OR, "label"] };
  var zR = ["x", "y"];
  var VR = { normal: {}, emphasis: {}, blur: {}, select: {} };
  var BR = { cartesian2d: function(t2) {
    var e2 = t2.master.getRect();
    return { coordSys: { type: "cartesian2d", x: e2.x, y: e2.y, width: e2.width, height: e2.height }, api: { coord: function(e3) {
      return t2.dataToPoint(e3);
    }, size: G(nR, t2) } };
  }, geo: function(t2) {
    var e2 = t2.getBoundingRect();
    return { coordSys: { type: "geo", x: e2.x, y: e2.y, width: e2.width, height: e2.height, zoom: t2.getZoom() }, api: { coord: function(e3) {
      return t2.dataToPoint(e3);
    }, size: G(iR, t2) } };
  }, single: function(t2) {
    var e2 = t2.getRect();
    return { coordSys: { type: "singleAxis", x: e2.x, y: e2.y, width: e2.width, height: e2.height }, api: { coord: function(e3) {
      return t2.dataToPoint(e3);
    }, size: G(rR, t2) } };
  }, polar: function(t2) {
    var e2 = t2.getRadiusAxis(), n2 = t2.getAngleAxis(), i2 = e2.getExtent();
    return i2[0] > i2[1] && i2.reverse(), { coordSys: { type: "polar", cx: t2.cx, cy: t2.cy, r: i2[1], r0: i2[0] }, api: { coord: function(i3) {
      var r2 = e2.dataToRadius(i3[0]), o2 = n2.dataToAngle(i3[1]), a2 = t2.coordToPoint([r2, o2]);
      return a2.push(r2, o2 * Math.PI / 180), a2;
    }, size: G(oR, t2) } };
  }, calendar: function(t2) {
    var e2 = t2.getRect(), n2 = t2.getRangeInfo();
    return { coordSys: { type: "calendar", x: e2.x, y: e2.y, width: e2.width, height: e2.height, cellWidth: t2.getCellWidth(), cellHeight: t2.getCellHeight(), rangeInfo: { start: n2.start, end: n2.end, weeks: n2.weeks, dayCount: n2.allDay } }, api: { coord: function(e3, n3) {
      return t2.dataToPoint(e3, n3);
    } } };
  } };
  function FR(t2) {
    return t2 instanceof Ms;
  }
  function GR(t2) {
    return t2 instanceof wa;
  }
  var WR = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      this._progressiveEls = null;
      var r2 = this._data, o2 = t3.getData(), a2 = this.group, s2 = ZR(t3, o2, e2, n3);
      r2 || a2.removeAll(), o2.diff(r2).add(function(e3) {
        qR(n3, null, e3, s2(e3, i2), t3, a2, o2);
      }).remove(function(e3) {
        var n4 = r2.getItemGraphicEl(e3);
        n4 && mR(n4, tR(n4).option, t3);
      }).update(function(e3, l3) {
        var u2 = r2.getItemGraphicEl(l3);
        qR(n3, u2, e3, s2(e3, i2), t3, a2, o2);
      }).execute();
      var l2 = t3.get("clip", true) ? ES(t3.coordinateSystem, false, t3) : null;
      l2 ? a2.setClipPath(l2) : a2.removeClipPath(), this._data = o2;
    }, n2.prototype.incrementalPrepareRender = function(t3, e2, n3) {
      this.group.removeAll(), this._data = null;
    }, n2.prototype.incrementalRender = function(t3, e2, n3, i2, r2) {
      var o2 = e2.getData(), a2 = ZR(e2, o2, n3, i2), s2 = this._progressiveEls = [];
      function l2(t4) {
        t4.isGroup || (t4.incremental = true, t4.ensureState("emphasis").hoverLayer = true);
      }
      for (var u2 = t3.start; u2 < t3.end; u2++) {
        var h2 = qR(null, null, u2, a2(u2, r2), e2, this.group, o2);
        h2 && (h2.traverse(l2), s2.push(h2));
      }
    }, n2.prototype.eachRendered = function(t3) {
      jh(this._progressiveEls || this.group, t3);
    }, n2.prototype.filterForExposedEvent = function(t3, e2, n3, i2) {
      var r2 = e2.element;
      if (null == r2 || n3.name === r2)
        return true;
      for (; (n3 = n3.__hostTarget || n3.parent) && n3 !== this.group; )
        if (n3.name === r2)
          return true;
      return false;
    }, n2.type = "custom", n2;
  }(Ag);
  function HR(t2) {
    var e2, n2 = t2.type;
    if ("path" === n2) {
      var i2 = t2.shape, r2 = null != i2.width && null != i2.height ? { x: i2.x || 0, y: i2.y || 0, width: i2.width, height: i2.height } : null, o2 = oN(i2);
      e2 = Dh(o2, null, r2, i2.layout || "center"), tR(e2).customPathData = o2;
    } else if ("image" === n2)
      e2 = new As({}), tR(e2).customImagePath = t2.style.image;
    else if ("text" === n2)
      e2 = new Bs({});
    else if ("group" === n2)
      e2 = new Er();
    else {
      if ("compoundPath" === n2)
        throw new Error('"compoundPath" is not supported yet.');
      var a2 = Ch(n2);
      if (!a2) {
        var s2 = "";
        yo(s2);
      }
      e2 = new a2();
    }
    return tR(e2).customGraphicType = n2, e2.name = t2.name, e2.z2EmphasisLift = 1, e2.z2SelectLift = 1, e2;
  }
  function YR(t2, e2, n2, i2, r2, o2, a2) {
    DR(e2);
    var s2 = r2 && r2.normal.cfg;
    s2 && e2.setTextConfig(s2), i2 && null == i2.transition && (i2.transition = zR);
    var l2 = i2 && i2.style;
    if (l2) {
      if ("text" === e2.type) {
        var u2 = l2;
        xt(u2, "textFill") && (u2.fill = u2.textFill), xt(u2, "textStroke") && (u2.stroke = u2.textStroke);
      }
      var h2 = void 0, c2 = FR(e2) ? l2.decal : null;
      t2 && c2 && (c2.dirty = true, h2 = fv(c2, t2)), l2.__decalPattern = h2;
    }
    GR(e2) && (l2 && (h2 = l2.__decalPattern) && (l2.decal = h2));
    yR(e2, i2, o2, { dataIndex: n2, isInit: a2, clearStyle: true }), AR(e2, i2.keyframeAnimation, o2);
  }
  function XR(t2, e2, n2, i2, r2) {
    var o2 = e2.isGroup ? null : e2, a2 = r2 && r2[t2].cfg;
    if (o2) {
      var s2 = o2.ensureState(t2);
      if (false === i2) {
        var l2 = o2.getState(t2);
        l2 && (l2.style = null);
      } else
        s2.style = i2 || null;
      a2 && (s2.textConfig = a2), Tl(o2);
    }
  }
  function UR(t2, e2, n2) {
    var i2 = n2 === LR, r2 = i2 ? e2 : QR(e2, n2), o2 = r2 ? r2.z2 : null;
    null != o2 && ((i2 ? t2 : t2.ensureState(n2)).z2 = o2 || 0);
  }
  function ZR(t2, e2, n2, i2) {
    var r2 = t2.get("renderItem"), o2 = t2.coordinateSystem, a2 = {};
    o2 && (a2 = o2.prepareCustoms ? o2.prepareCustoms(o2) : BR[o2.type](o2));
    for (var s2, l2, u2 = A({ getWidth: i2.getWidth, getHeight: i2.getHeight, getZr: i2.getZr, getDevicePixelRatio: i2.getDevicePixelRatio, value: function(t3, n3) {
      return null == n3 && (n3 = s2), e2.getStore().get(e2.getDimensionIndex(t3 || 0), n3);
    }, style: function(n3, i3) {
      null == i3 && (i3 = s2);
      var r3 = e2.getItemVisual(i3, "style"), o3 = r3 && r3.fill, a3 = r3 && r3.opacity, l3 = m2(i3, LR).getItemStyle();
      null != o3 && (l3.fill = o3), null != a3 && (l3.opacity = a3);
      var u3 = { inheritColor: X(o3) ? o3 : "#000" }, h3 = x2(i3, LR), c3 = ec(h3, null, u3, false, true);
      c3.text = h3.getShallow("show") ? it(t2.getFormattedLabel(i3, LR), yS(e2, i3)) : null;
      var p3 = nc(h3, u3, false);
      return b2(n3, l3), l3 = uR(l3, c3, p3), n3 && _2(l3, n3), l3.legacy = true, l3;
    }, ordinalRawValue: function(t3, n3) {
      null == n3 && (n3 = s2), t3 = t3 || 0;
      var i3 = e2.getDimensionInfo(t3);
      if (!i3) {
        var r3 = e2.getDimensionIndex(t3);
        return r3 >= 0 ? e2.getStore().get(r3, n3) : void 0;
      }
      var o3 = e2.get(i3.name, n3), a3 = i3 && i3.ordinalMeta;
      return a3 ? a3.categories[o3] : o3;
    }, styleEmphasis: function(n3, i3) {
      null == i3 && (i3 = s2);
      var r3 = m2(i3, kR).getItemStyle(), o3 = x2(i3, kR), a3 = ec(o3, null, null, true, true);
      a3.text = o3.getShallow("show") ? rt(t2.getFormattedLabel(i3, kR), t2.getFormattedLabel(i3, LR), yS(e2, i3)) : null;
      var l3 = nc(o3, null, true);
      return b2(n3, r3), r3 = uR(r3, a3, l3), n3 && _2(r3, n3), r3.legacy = true, r3;
    }, visual: function(t3, n3) {
      if (null == n3 && (n3 = s2), xt(JO, t3)) {
        var i3 = e2.getItemVisual(n3, "style");
        return i3 ? i3[JO[t3]] : null;
      }
      if (xt(QO, t3))
        return e2.getItemVisual(n3, t3);
    }, barLayout: function(t3) {
      if ("cartesian2d" === o2.type) {
        return function(t4) {
          var e3 = [], n3 = t4.axis, i3 = "axis0";
          if ("category" === n3.type) {
            for (var r3 = n3.getBandWidth(), o3 = 0; o3 < t4.count; o3++)
              e3.push(A({ bandWidth: r3, axisKey: i3, stackId: Ux + o3 }, t4));
            var a3 = $x(e3), s3 = [];
            for (o3 = 0; o3 < t4.count; o3++) {
              var l3 = a3[i3][Ux + o3];
              l3.offsetCenter = l3.offset + l3.width / 2, s3.push(l3);
            }
            return s3;
          }
        }(A({ axis: o2.getBaseAxis() }, t3));
      }
    }, currentSeriesIndices: function() {
      return n2.getCurrentSeriesIndices();
    }, font: function(t3) {
      return sc(t3, n2);
    } }, a2.api || {}), h2 = { context: {}, seriesId: t2.id, seriesName: t2.name, seriesIndex: t2.seriesIndex, coordSys: a2.coordSys, dataInsideLength: e2.count(), encode: jR(t2.getData()) }, c2 = {}, p2 = {}, d2 = {}, f2 = {}, g2 = 0; g2 < RR.length; g2++) {
      var y2 = RR[g2];
      d2[y2] = t2.getModel(NR[y2]), f2[y2] = t2.getModel(ER[y2]);
    }
    function v2(t3) {
      return t3 === s2 ? l2 || (l2 = e2.getItemModel(t3)) : e2.getItemModel(t3);
    }
    function m2(t3, n3) {
      return e2.hasItemOption ? t3 === s2 ? c2[n3] || (c2[n3] = v2(t3).getModel(NR[n3])) : v2(t3).getModel(NR[n3]) : d2[n3];
    }
    function x2(t3, n3) {
      return e2.hasItemOption ? t3 === s2 ? p2[n3] || (p2[n3] = v2(t3).getModel(ER[n3])) : v2(t3).getModel(ER[n3]) : f2[n3];
    }
    return function(t3, n3) {
      return s2 = t3, l2 = null, c2 = {}, p2 = {}, r2 && r2(A({ dataIndexInside: t3, dataIndex: e2.getRawIndex(t3), actionType: n3 ? n3.type : null }, h2), u2);
    };
    function _2(t3, e3) {
      for (var n3 in e3)
        xt(e3, n3) && (t3[n3] = e3[n3]);
    }
    function b2(t3, e3) {
      t3 && (t3.textFill && (e3.textFill = t3.textFill), t3.textPosition && (e3.textPosition = t3.textPosition));
    }
  }
  function jR(t2) {
    var e2 = {};
    return N(t2.dimensions, function(n2) {
      var i2 = t2.getDimensionInfo(n2);
      if (!i2.isExtraCoord) {
        var r2 = i2.coordDim;
        (e2[r2] = e2[r2] || [])[i2.coordDimIndex] = t2.getDimensionIndex(n2);
      }
    }), e2;
  }
  function qR(t2, e2, n2, i2, r2, o2, a2) {
    if (i2) {
      var s2 = KR(t2, e2, n2, i2, r2, o2);
      return s2 && a2.setItemGraphicEl(n2, s2), s2 && Hl(s2, i2.focus, i2.blurScope, i2.emphasisDisabled), s2;
    }
    o2.remove(e2);
  }
  function KR(t2, e2, n2, i2, r2, o2) {
    var a2 = -1, s2 = e2;
    e2 && $R(e2, i2, r2) && (a2 = L(o2.childrenRef(), e2), e2 = null);
    var l2, u2, h2 = !e2, c2 = e2;
    c2 ? c2.clearStates() : (c2 = HR(i2), s2 && (l2 = s2, (u2 = c2).copyTransform(l2), GR(u2) && GR(l2) && (u2.setStyle(l2.style), u2.z = l2.z, u2.z2 = l2.z2, u2.zlevel = l2.zlevel, u2.invisible = l2.invisible, u2.ignore = l2.ignore, FR(u2) && FR(l2) && u2.setShape(l2.shape)))), false === i2.morph ? c2.disableMorphing = true : c2.disableMorphing && (c2.disableMorphing = false), VR.normal.cfg = VR.normal.conOpt = VR.emphasis.cfg = VR.emphasis.conOpt = VR.blur.cfg = VR.blur.conOpt = VR.select.cfg = VR.select.conOpt = null, VR.isLegacy = false, function(t3, e3, n3, i3, r3, o3) {
      if (t3.isGroup)
        return;
      JR(n3, null, o3), JR(n3, kR, o3);
      var a3 = o3.normal.conOpt, s3 = o3.emphasis.conOpt, l3 = o3.blur.conOpt, u3 = o3.select.conOpt;
      if (null != a3 || null != s3 || null != u3 || null != l3) {
        var h3 = t3.getTextContent();
        if (false === a3)
          h3 && t3.removeTextContent();
        else {
          a3 = o3.normal.conOpt = a3 || { type: "text" }, h3 ? h3.clearStates() : (h3 = HR(a3), t3.setTextContent(h3)), YR(null, h3, e3, a3, null, i3, r3);
          for (var c3 = a3 && a3.style, p3 = 0; p3 < RR.length; p3++) {
            var d3 = RR[p3];
            if (d3 !== LR) {
              var f3 = o3[d3].conOpt;
              XR(d3, h3, 0, tN(a3, f3, d3), null);
            }
          }
          c3 ? h3.dirty() : h3.markRedraw();
        }
      }
    }(c2, n2, i2, r2, h2, VR), function(t3, e3, n3, i3, r3) {
      var o3 = n3.clipPath;
      if (false === o3)
        t3 && t3.getClipPath() && t3.removeClipPath();
      else if (o3) {
        var a3 = t3.getClipPath();
        a3 && $R(a3, o3, i3) && (a3 = null), a3 || (a3 = HR(o3), t3.setClipPath(a3)), YR(null, a3, e3, o3, null, i3, r3);
      }
    }(c2, n2, i2, r2, h2), YR(t2, c2, n2, i2, VR, r2, h2), xt(i2, "info") && (tR(c2).info = i2.info);
    for (var p2 = 0; p2 < RR.length; p2++) {
      var d2 = RR[p2];
      if (d2 !== LR) {
        var f2 = QR(i2, d2);
        XR(d2, c2, 0, tN(i2, f2, d2), VR);
      }
    }
    return function(t3, e3, n3) {
      if (!t3.isGroup) {
        var i3 = t3, r3 = n3.currentZ, o3 = n3.currentZLevel;
        i3.z = r3, i3.zlevel = o3;
        var a3 = e3.z2;
        null != a3 && (i3.z2 = a3 || 0);
        for (var s3 = 0; s3 < RR.length; s3++)
          UR(i3, e3, RR[s3]);
      }
    }(c2, i2, r2), "group" === i2.type && function(t3, e3, n3, i3, r3) {
      var o3 = i3.children, a3 = o3 ? o3.length : 0, s3 = i3.$mergeChildren, l3 = "byName" === s3 || i3.diffChildrenByName, u3 = false === s3;
      if (!a3 && !l3 && !u3)
        return;
      if (l3)
        return h3 = { api: t3, oldChildren: e3.children() || [], newChildren: o3 || [], dataIndex: n3, seriesModel: r3, group: e3 }, void new Zm(h3.oldChildren, h3.newChildren, nN, nN, h3).add(iN).update(iN).remove(rN).execute();
      var h3;
      u3 && e3.removeAll();
      for (var c3 = 0; c3 < a3; c3++) {
        var p3 = o3[c3], d3 = e3.childAt(c3);
        p3 ? (null == p3.ignore && (p3.ignore = false), KR(t3, d3, n3, p3, r3, e3)) : d3.ignore = true;
      }
      for (var f3 = e3.childCount() - 1; f3 >= c3; f3--) {
        var g2 = e3.childAt(f3);
        eN(e3, g2, r3);
      }
    }(t2, c2, n2, i2, r2), a2 >= 0 ? o2.replaceAt(c2, a2) : o2.add(c2), c2;
  }
  function $R(t2, e2, n2) {
    var i2, r2 = tR(t2), o2 = e2.type, a2 = e2.shape, s2 = e2.style;
    return n2.isUniversalTransitionEnabled() || null != o2 && o2 !== r2.customGraphicType || "path" === o2 && ((i2 = a2) && (xt(i2, "pathData") || xt(i2, "d"))) && oN(a2) !== r2.customPathData || "image" === o2 && xt(s2, "image") && s2.image !== r2.customImagePath;
  }
  function JR(t2, e2, n2) {
    var i2 = e2 ? QR(t2, e2) : t2, r2 = e2 ? tN(t2, i2, kR) : t2.style, o2 = t2.type, a2 = i2 ? i2.textConfig : null, s2 = t2.textContent, l2 = s2 ? e2 ? QR(s2, e2) : s2 : null;
    if (r2 && (n2.isLegacy || aR(r2, o2, !!a2, !!l2))) {
      n2.isLegacy = true;
      var u2 = sR(r2, o2, !e2);
      !a2 && u2.textConfig && (a2 = u2.textConfig), !l2 && u2.textContent && (l2 = u2.textContent);
    }
    if (!e2 && l2) {
      var h2 = l2;
      !h2.type && (h2.type = "text");
    }
    var c2 = e2 ? n2[e2] : n2.normal;
    c2.cfg = a2, c2.conOpt = l2;
  }
  function QR(t2, e2) {
    return e2 ? t2 ? t2[e2] : null : t2;
  }
  function tN(t2, e2, n2) {
    var i2 = e2 && e2.style;
    return null == i2 && n2 === kR && t2 && (i2 = t2.styleEmphasis), i2;
  }
  function eN(t2, e2, n2) {
    e2 && mR(e2, tR(t2).option, n2);
  }
  function nN(t2, e2) {
    var n2 = t2 && t2.name;
    return null != n2 ? n2 : "e\0\0" + e2;
  }
  function iN(t2, e2) {
    var n2 = this.context, i2 = null != t2 ? n2.newChildren[t2] : null, r2 = null != e2 ? n2.oldChildren[e2] : null;
    KR(n2.api, r2, n2.dataIndex, i2, n2.seriesModel, n2.group);
  }
  function rN(t2) {
    var e2 = this.context, n2 = e2.oldChildren[t2];
    n2 && mR(n2, tR(n2).option, e2.seriesModel);
  }
  function oN(t2) {
    return t2 && (t2.pathData || t2.d);
  }
  var aN = Po();
  var sN = I;
  var lN = G;
  var uN = function() {
    function t2() {
      this._dragging = false, this.animationThreshold = 15;
    }
    return t2.prototype.render = function(t3, e2, n2, i2) {
      var r2 = e2.get("value"), o2 = e2.get("status");
      if (this._axisModel = t3, this._axisPointerModel = e2, this._api = n2, i2 || this._lastValue !== r2 || this._lastStatus !== o2) {
        this._lastValue = r2, this._lastStatus = o2;
        var a2 = this._group, s2 = this._handle;
        if (!o2 || "hide" === o2)
          return a2 && a2.hide(), void (s2 && s2.hide());
        a2 && a2.show(), s2 && s2.show();
        var l2 = {};
        this.makeElOption(l2, r2, t3, e2, n2);
        var u2 = l2.graphicKey;
        u2 !== this._lastGraphicKey && this.clear(n2), this._lastGraphicKey = u2;
        var h2 = this._moveAnimation = this.determineAnimation(t3, e2);
        if (a2) {
          var c2 = W(hN, e2, h2);
          this.updatePointerEl(a2, l2, c2), this.updateLabelEl(a2, l2, c2, e2);
        } else
          a2 = this._group = new Er(), this.createPointerEl(a2, l2, t3, e2), this.createLabelEl(a2, l2, t3, e2), n2.getZr().add(a2);
        fN(a2, e2, true), this._renderHandle(r2);
      }
    }, t2.prototype.remove = function(t3) {
      this.clear(t3);
    }, t2.prototype.dispose = function(t3) {
      this.clear(t3);
    }, t2.prototype.determineAnimation = function(t3, e2) {
      var n2 = e2.get("animation"), i2 = t3.axis, r2 = "category" === i2.type, o2 = e2.get("snap");
      if (!o2 && !r2)
        return false;
      if ("auto" === n2 || null == n2) {
        var a2 = this.animationThreshold;
        if (r2 && i2.getBandWidth() > a2)
          return true;
        if (o2) {
          var s2 = II(t3).seriesDataCount, l2 = i2.getExtent();
          return Math.abs(l2[0] - l2[1]) / s2 > a2;
        }
        return false;
      }
      return true === n2;
    }, t2.prototype.makeElOption = function(t3, e2, n2, i2, r2) {
    }, t2.prototype.createPointerEl = function(t3, e2, n2, i2) {
      var r2 = e2.pointer;
      if (r2) {
        var o2 = aN(t3).pointerEl = new qh[r2.type](sN(e2.pointer));
        t3.add(o2);
      }
    }, t2.prototype.createLabelEl = function(t3, e2, n2, i2) {
      if (e2.label) {
        var r2 = aN(t3).labelEl = new Bs(sN(e2.label));
        t3.add(r2), pN(r2, i2);
      }
    }, t2.prototype.updatePointerEl = function(t3, e2, n2) {
      var i2 = aN(t3).pointerEl;
      i2 && e2.pointer && (i2.setStyle(e2.pointer.style), n2(i2, { shape: e2.pointer.shape }));
    }, t2.prototype.updateLabelEl = function(t3, e2, n2, i2) {
      var r2 = aN(t3).labelEl;
      r2 && (r2.setStyle(e2.label.style), n2(r2, { x: e2.label.x, y: e2.label.y }), pN(r2, i2));
    }, t2.prototype._renderHandle = function(t3) {
      if (!this._dragging && this.updateHandleTransform) {
        var e2, n2 = this._axisPointerModel, i2 = this._api.getZr(), r2 = this._handle, o2 = n2.getModel("handle"), a2 = n2.get("status");
        if (!o2.get("show") || !a2 || "hide" === a2)
          return r2 && i2.remove(r2), void (this._handle = null);
        this._handle || (e2 = true, r2 = this._handle = Wh(o2.get("icon"), { cursor: "move", draggable: true, onmousemove: function(t4) {
          pe(t4.event);
        }, onmousedown: lN(this._onHandleDragMove, this, 0, 0), drift: lN(this._onHandleDragMove, this), ondragend: lN(this._onHandleDragEnd, this) }), i2.add(r2)), fN(r2, n2, false), r2.setStyle(o2.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"]));
        var s2 = o2.get("size");
        H(s2) || (s2 = [s2, s2]), r2.scaleX = s2[0] / 2, r2.scaleY = s2[1] / 2, Bg(this, "_doDispatchAxisPointer", o2.get("throttle") || 0, "fixRate"), this._moveHandleToValue(t3, e2);
      }
    }, t2.prototype._moveHandleToValue = function(t3, e2) {
      hN(this._axisPointerModel, !e2 && this._moveAnimation, this._handle, dN(this.getHandleTransform(t3, this._axisModel, this._axisPointerModel)));
    }, t2.prototype._onHandleDragMove = function(t3, e2) {
      var n2 = this._handle;
      if (n2) {
        this._dragging = true;
        var i2 = this.updateHandleTransform(dN(n2), [t3, e2], this._axisModel, this._axisPointerModel);
        this._payloadInfo = i2, n2.stopAnimation(), n2.attr(dN(i2)), aN(n2).lastProp = null, this._doDispatchAxisPointer();
      }
    }, t2.prototype._doDispatchAxisPointer = function() {
      if (this._handle) {
        var t3 = this._payloadInfo, e2 = this._axisModel;
        this._api.dispatchAction({ type: "updateAxisPointer", x: t3.cursorPoint[0], y: t3.cursorPoint[1], tooltipOption: t3.tooltipOption, axesInfo: [{ axisDim: e2.axis.dim, axisIndex: e2.componentIndex }] });
      }
    }, t2.prototype._onHandleDragEnd = function() {
      if (this._dragging = false, this._handle) {
        var t3 = this._axisPointerModel.get("value");
        this._moveHandleToValue(t3), this._api.dispatchAction({ type: "hideTip" });
      }
    }, t2.prototype.clear = function(t3) {
      this._lastValue = null, this._lastStatus = null;
      var e2 = t3.getZr(), n2 = this._group, i2 = this._handle;
      e2 && n2 && (this._lastGraphicKey = null, n2 && e2.remove(n2), i2 && e2.remove(i2), this._group = null, this._handle = null, this._payloadInfo = null), Fg(this, "_doDispatchAxisPointer");
    }, t2.prototype.doClear = function() {
    }, t2.prototype.buildLabel = function(t3, e2, n2) {
      return { x: t3[n2 = n2 || 0], y: t3[1 - n2], width: e2[n2], height: e2[1 - n2] };
    }, t2;
  }();
  function hN(t2, e2, n2, i2) {
    cN(aN(n2).lastProp, i2) || (aN(n2).lastProp = i2, e2 ? dh(n2, i2, t2) : (n2.stopAnimation(), n2.attr(i2)));
  }
  function cN(t2, e2) {
    if (j(t2) && j(e2)) {
      var n2 = true;
      return N(e2, function(e3, i2) {
        n2 = n2 && cN(t2[i2], e3);
      }), !!n2;
    }
    return t2 === e2;
  }
  function pN(t2, e2) {
    t2[e2.get(["label", "show"]) ? "show" : "hide"]();
  }
  function dN(t2) {
    return { x: t2.x || 0, y: t2.y || 0, rotation: t2.rotation || 0 };
  }
  function fN(t2, e2, n2) {
    var i2 = e2.get("z"), r2 = e2.get("zlevel");
    t2 && t2.traverse(function(t3) {
      "group" !== t3.type && (null != i2 && (t3.z = i2), null != r2 && (t3.zlevel = r2), t3.silent = n2);
    });
  }
  function gN(t2) {
    var e2, n2 = t2.get("type"), i2 = t2.getModel(n2 + "Style");
    return "line" === n2 ? (e2 = i2.getLineStyle()).fill = null : "shadow" === n2 && ((e2 = i2.getAreaStyle()).stroke = null), e2;
  }
  function yN(t2, e2, n2, i2, r2) {
    var o2 = vN(n2.get("value"), e2.axis, e2.ecModel, n2.get("seriesDataIndices"), { precision: n2.get(["label", "precision"]), formatter: n2.get(["label", "formatter"]) }), a2 = n2.getModel("label"), s2 = dp(a2.get("padding") || 0), l2 = a2.getFont(), u2 = _r(o2, l2), h2 = r2.position, c2 = u2.width + s2[1] + s2[3], p2 = u2.height + s2[0] + s2[2], d2 = r2.align;
    "right" === d2 && (h2[0] -= c2), "center" === d2 && (h2[0] -= c2 / 2);
    var f2 = r2.verticalAlign;
    "bottom" === f2 && (h2[1] -= p2), "middle" === f2 && (h2[1] -= p2 / 2), function(t3, e3, n3, i3) {
      var r3 = i3.getWidth(), o3 = i3.getHeight();
      t3[0] = Math.min(t3[0] + e3, r3) - e3, t3[1] = Math.min(t3[1] + n3, o3) - n3, t3[0] = Math.max(t3[0], 0), t3[1] = Math.max(t3[1], 0);
    }(h2, c2, p2, i2);
    var g2 = a2.get("backgroundColor");
    g2 && "auto" !== g2 || (g2 = e2.get(["axisLine", "lineStyle", "color"])), t2.label = { x: h2[0], y: h2[1], style: ec(a2, { text: o2, font: l2, fill: a2.getTextColor(), padding: s2, backgroundColor: g2 }), z2: 10 };
  }
  function vN(t2, e2, n2, i2, r2) {
    t2 = e2.scale.parse(t2);
    var o2 = e2.scale.getLabel({ value: t2 }, { precision: r2.precision }), a2 = r2.formatter;
    if (a2) {
      var s2 = { value: A_(e2, { value: t2 }), axisDimension: e2.dim, axisIndex: e2.index, seriesData: [] };
      N(i2, function(t3) {
        var e3 = n2.getSeriesByIndex(t3.seriesIndex), i3 = t3.dataIndexInside, r3 = e3 && e3.getDataParams(i3);
        r3 && s2.seriesData.push(r3);
      }), X(a2) ? o2 = a2.replace("{value}", o2) : Y(a2) && (o2 = a2(s2));
    }
    return o2;
  }
  function mN(t2, e2, n2) {
    var i2 = [1, 0, 0, 1, 0, 0];
    return we(i2, i2, n2.rotation), be(i2, i2, n2.position), Eh([t2.dataToCoord(e2), (n2.labelOffset || 0) + (n2.labelDirection || 1) * (n2.labelMargin || 0)], i2);
  }
  function xN(t2, e2, n2, i2, r2, o2) {
    var a2 = yI.innerTextLayout(n2.rotation, 0, n2.labelDirection);
    n2.labelMargin = r2.get(["label", "margin"]), yN(e2, i2, r2, o2, { position: mN(i2.axis, t2, n2), align: a2.textAlign, verticalAlign: a2.textVerticalAlign });
  }
  function _N(t2, e2, n2) {
    return { x1: t2[n2 = n2 || 0], y1: t2[1 - n2], x2: e2[n2], y2: e2[1 - n2] };
  }
  function bN(t2, e2, n2) {
    return { x: t2[n2 = n2 || 0], y: t2[1 - n2], width: e2[n2], height: e2[1 - n2] };
  }
  function wN(t2, e2, n2, i2, r2, o2) {
    return { cx: t2, cy: e2, r0: n2, r: i2, startAngle: r2, endAngle: o2, clockwise: true };
  }
  var SN = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.makeElOption = function(t3, e2, n3, i2, r2) {
      var o2 = n3.axis, a2 = o2.grid, s2 = i2.get("type"), l2 = MN(a2, o2).getOtherAxis(o2).getGlobalExtent(), u2 = o2.toGlobalCoord(o2.dataToCoord(e2, true));
      if (s2 && "none" !== s2) {
        var h2 = gN(i2), c2 = IN[s2](o2, u2, l2);
        c2.style = h2, t3.graphicKey = c2.type, t3.pointer = c2;
      }
      xN(e2, t3, aI(a2.model, n3), n3, i2, r2);
    }, n2.prototype.getHandleTransform = function(t3, e2, n3) {
      var i2 = aI(e2.axis.grid.model, e2, { labelInside: false });
      i2.labelMargin = n3.get(["handle", "margin"]);
      var r2 = mN(e2.axis, t3, i2);
      return { x: r2[0], y: r2[1], rotation: i2.rotation + (i2.labelDirection < 0 ? Math.PI : 0) };
    }, n2.prototype.updateHandleTransform = function(t3, e2, n3, i2) {
      var r2 = n3.axis, o2 = r2.grid, a2 = r2.getGlobalExtent(true), s2 = MN(o2, r2).getOtherAxis(r2).getGlobalExtent(), l2 = "x" === r2.dim ? 0 : 1, u2 = [t3.x, t3.y];
      u2[l2] += e2[l2], u2[l2] = Math.min(a2[1], u2[l2]), u2[l2] = Math.max(a2[0], u2[l2]);
      var h2 = (s2[1] + s2[0]) / 2, c2 = [h2, h2];
      c2[l2] = u2[l2];
      return { x: u2[0], y: u2[1], rotation: t3.rotation, cursorPoint: c2, tooltipOption: [{ verticalAlign: "middle" }, { align: "center" }][l2] };
    }, n2;
  }(uN);
  function MN(t2, e2) {
    var n2 = {};
    return n2[e2.dim + "AxisIndex"] = e2.index, t2.getCartesian(n2);
  }
  var IN = { line: function(t2, e2, n2) {
    return { type: "Line", subPixelOptimize: true, shape: _N([e2, n2[0]], [e2, n2[1]], TN(t2)) };
  }, shadow: function(t2, e2, n2) {
    var i2 = Math.max(1, t2.getBandWidth()), r2 = n2[1] - n2[0];
    return { type: "Rect", shape: bN([e2 - i2 / 2, n2[0]], [i2, r2], TN(t2)) };
  } };
  function TN(t2) {
    return "x" === t2.dim ? 0 : 1;
  }
  var CN = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "axisPointer", n2.defaultOption = { show: "auto", z: 50, type: "line", snap: false, triggerTooltip: true, triggerEmphasis: true, value: null, status: null, link: [], animation: null, animationDurationUpdate: 200, lineStyle: { color: "#B9BEC9", width: 1, type: "dashed" }, shadowStyle: { color: "rgba(210,219,238,0.2)" }, label: { show: true, formatter: null, precision: "auto", margin: 3, color: "#fff", padding: [5, 7, 5, 7], backgroundColor: "auto", borderColor: null, borderWidth: 0, borderRadius: 3 }, handle: { show: false, icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z", size: 45, margin: 50, color: "#333", shadowBlur: 3, shadowColor: "#aaa", shadowOffsetX: 0, shadowOffsetY: 2, throttle: 40 } }, n2;
  }(Op);
  var DN = Po();
  var AN = N;
  function kN(t2, e2, n2) {
    if (!i.node) {
      var r2 = e2.getZr();
      DN(r2).records || (DN(r2).records = {}), function(t3, e3) {
        if (DN(t3).initialized)
          return;
        function n3(n4, i2) {
          t3.on(n4, function(n5) {
            var r3 = function(t4) {
              var e4 = { showTip: [], hideTip: [] }, n6 = function(i3) {
                var r4 = e4[i3.type];
                r4 ? r4.push(i3) : (i3.dispatchAction = n6, t4.dispatchAction(i3));
              };
              return { dispatchAction: n6, pendings: e4 };
            }(e3);
            AN(DN(t3).records, function(t4) {
              t4 && i2(t4, n5, r3.dispatchAction);
            }), function(t4, e4) {
              var n6, i3 = t4.showTip.length, r4 = t4.hideTip.length;
              i3 ? n6 = t4.showTip[i3 - 1] : r4 && (n6 = t4.hideTip[r4 - 1]);
              n6 && (n6.dispatchAction = null, e4.dispatchAction(n6));
            }(r3.pendings, e3);
          });
        }
        DN(t3).initialized = true, n3("click", W(PN, "click")), n3("mousemove", W(PN, "mousemove")), n3("globalout", LN);
      }(r2, e2), (DN(r2).records[t2] || (DN(r2).records[t2] = {})).handler = n2;
    }
  }
  function LN(t2, e2, n2) {
    t2.handler("leave", null, n2);
  }
  function PN(t2, e2, n2, i2) {
    e2.handler(t2, n2, i2);
  }
  function ON(t2, e2) {
    if (!i.node) {
      var n2 = e2.getZr();
      (DN(n2).records || {})[t2] && (DN(n2).records[t2] = null);
    }
  }
  var RN = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = e2.getComponent("tooltip"), r2 = t3.get("triggerOn") || i2 && i2.get("triggerOn") || "mousemove|click";
      kN("axisPointer", n3, function(t4, e3, n4) {
        "none" !== r2 && ("leave" === t4 || r2.indexOf(t4) >= 0) && n4({ type: "updateAxisPointer", currTrigger: t4, x: e3 && e3.offsetX, y: e3 && e3.offsetY });
      });
    }, n2.prototype.remove = function(t3, e2) {
      ON("axisPointer", e2);
    }, n2.prototype.dispose = function(t3, e2) {
      ON("axisPointer", e2);
    }, n2.type = "axisPointer", n2;
  }(Ig);
  function NN(t2, e2) {
    var n2, i2 = [], r2 = t2.seriesIndex;
    if (null == r2 || !(n2 = e2.getSeriesByIndex(r2)))
      return { point: [] };
    var o2 = n2.getData(), a2 = Lo(o2, t2);
    if (null == a2 || a2 < 0 || H(a2))
      return { point: [] };
    var s2 = o2.getItemGraphicEl(a2), l2 = n2.coordinateSystem;
    if (n2.getTooltipPosition)
      i2 = n2.getTooltipPosition(a2) || [];
    else if (l2 && l2.dataToPoint)
      if (t2.isStacked) {
        var u2 = l2.getBaseAxis(), h2 = l2.getOtherAxis(u2).dim, c2 = u2.dim, p2 = "x" === h2 || "radius" === h2 ? 1 : 0, d2 = o2.mapDimension(c2), f2 = [];
        f2[p2] = o2.get(d2, a2), f2[1 - p2] = o2.get(o2.getCalculationInfo("stackResultDimension"), a2), i2 = l2.dataToPoint(f2) || [];
      } else
        i2 = l2.dataToPoint(o2.getValues(E(l2.dimensions, function(t3) {
          return o2.mapDimension(t3);
        }), a2)) || [];
    else if (s2) {
      var g2 = s2.getBoundingRect().clone();
      g2.applyTransform(s2.transform), i2 = [g2.x + g2.width / 2, g2.y + g2.height / 2];
    }
    return { point: i2, el: s2 };
  }
  var EN = Po();
  function zN(t2, e2, n2) {
    var i2 = t2.currTrigger, r2 = [t2.x, t2.y], o2 = t2, a2 = t2.dispatchAction || G(n2.dispatchAction, n2), s2 = e2.getComponent("axisPointer").coordSysAxesInfo;
    if (s2) {
      WN(r2) && (r2 = NN({ seriesIndex: o2.seriesIndex, dataIndex: o2.dataIndex }, e2).point);
      var l2 = WN(r2), u2 = o2.axesInfo, h2 = s2.axesInfo, c2 = "leave" === i2 || WN(r2), p2 = {}, d2 = {}, f2 = { list: [], map: {} }, g2 = { showPointer: W(BN, d2), showTooltip: W(FN, f2) };
      N(s2.coordSysMap, function(t3, e3) {
        var n3 = l2 || t3.containPoint(r2);
        N(s2.coordSysAxesInfo[e3], function(t4, e4) {
          var i3 = t4.axis, o3 = function(t5, e5) {
            for (var n4 = 0; n4 < (t5 || []).length; n4++) {
              var i4 = t5[n4];
              if (e5.axis.dim === i4.axisDim && e5.axis.model.componentIndex === i4.axisIndex)
                return i4;
            }
          }(u2, t4);
          if (!c2 && n3 && (!u2 || o3)) {
            var a3 = o3 && o3.value;
            null != a3 || l2 || (a3 = i3.pointToData(r2)), null != a3 && VN(t4, a3, g2, false, p2);
          }
        });
      });
      var y2 = {};
      return N(h2, function(t3, e3) {
        var n3 = t3.linkGroup;
        n3 && !d2[e3] && N(n3.axesInfo, function(e4, i3) {
          var r3 = d2[i3];
          if (e4 !== t3 && r3) {
            var o3 = r3.value;
            n3.mapper && (o3 = t3.axis.scale.parse(n3.mapper(o3, GN(e4), GN(t3)))), y2[t3.key] = o3;
          }
        });
      }), N(y2, function(t3, e3) {
        VN(h2[e3], t3, g2, true, p2);
      }), function(t3, e3, n3) {
        var i3 = n3.axesInfo = [];
        N(e3, function(e4, n4) {
          var r3 = e4.axisPointerModel.option, o3 = t3[n4];
          o3 ? (!e4.useHandle && (r3.status = "show"), r3.value = o3.value, r3.seriesDataIndices = (o3.payloadBatch || []).slice()) : !e4.useHandle && (r3.status = "hide"), "show" === r3.status && i3.push({ axisDim: e4.axis.dim, axisIndex: e4.axis.model.componentIndex, value: r3.value });
        });
      }(d2, h2, p2), function(t3, e3, n3, i3) {
        if (WN(e3) || !t3.list.length)
          return void i3({ type: "hideTip" });
        var r3 = ((t3.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};
        i3({ type: "showTip", escapeConnect: true, x: e3[0], y: e3[1], tooltipOption: n3.tooltipOption, position: n3.position, dataIndexInside: r3.dataIndexInside, dataIndex: r3.dataIndex, seriesIndex: r3.seriesIndex, dataByCoordSys: t3.list });
      }(f2, r2, t2, a2), function(t3, e3, n3) {
        var i3 = n3.getZr(), r3 = "axisPointerLastHighlights", o3 = EN(i3)[r3] || {}, a3 = EN(i3)[r3] = {};
        N(t3, function(t4, e4) {
          var n4 = t4.axisPointerModel.option;
          "show" === n4.status && t4.triggerEmphasis && N(n4.seriesDataIndices, function(t5) {
            var e5 = t5.seriesIndex + " | " + t5.dataIndex;
            a3[e5] = t5;
          });
        });
        var s3 = [], l3 = [];
        N(o3, function(t4, e4) {
          !a3[e4] && l3.push(t4);
        }), N(a3, function(t4, e4) {
          !o3[e4] && s3.push(t4);
        }), l3.length && n3.dispatchAction({ type: "downplay", escapeConnect: true, notBlur: true, batch: l3 }), s3.length && n3.dispatchAction({ type: "highlight", escapeConnect: true, notBlur: true, batch: s3 });
      }(h2, 0, n2), p2;
    }
  }
  function VN(t2, e2, n2, i2, r2) {
    var o2 = t2.axis;
    if (!o2.scale.isBlank() && o2.containData(e2))
      if (t2.involveSeries) {
        var a2 = function(t3, e3) {
          var n3 = e3.axis, i3 = n3.dim, r3 = t3, o3 = [], a3 = Number.MAX_VALUE, s3 = -1;
          return N(e3.seriesModels, function(e4, l3) {
            var u2, h2, c2 = e4.getData().mapDimensionsAll(i3);
            if (e4.getAxisTooltipData) {
              var p2 = e4.getAxisTooltipData(c2, t3, n3);
              h2 = p2.dataIndices, u2 = p2.nestestValue;
            } else {
              if (!(h2 = e4.getData().indicesOfNearest(c2[0], t3, "category" === n3.type ? 0.5 : null)).length)
                return;
              u2 = e4.getData().get(c2[0], h2[0]);
            }
            if (null != u2 && isFinite(u2)) {
              var d2 = t3 - u2, f2 = Math.abs(d2);
              f2 <= a3 && ((f2 < a3 || d2 >= 0 && s3 < 0) && (a3 = f2, s3 = d2, r3 = u2, o3.length = 0), N(h2, function(t4) {
                o3.push({ seriesIndex: e4.seriesIndex, dataIndexInside: t4, dataIndex: e4.getData().getRawIndex(t4) });
              }));
            }
          }), { payloadBatch: o3, snapToValue: r3 };
        }(e2, t2), s2 = a2.payloadBatch, l2 = a2.snapToValue;
        s2[0] && null == r2.seriesIndex && D(r2, s2[0]), !i2 && t2.snap && o2.containData(l2) && null != l2 && (e2 = l2), n2.showPointer(t2, e2, s2), n2.showTooltip(t2, a2, l2);
      } else
        n2.showPointer(t2, e2);
  }
  function BN(t2, e2, n2, i2) {
    t2[e2.key] = { value: n2, payloadBatch: i2 };
  }
  function FN(t2, e2, n2, i2) {
    var r2 = n2.payloadBatch, o2 = e2.axis, a2 = o2.model, s2 = e2.axisPointerModel;
    if (e2.triggerTooltip && r2.length) {
      var l2 = e2.coordSys.model, u2 = CI(l2), h2 = t2.map[u2];
      h2 || (h2 = t2.map[u2] = { coordSysId: l2.id, coordSysIndex: l2.componentIndex, coordSysType: l2.type, coordSysMainType: l2.mainType, dataByAxis: [] }, t2.list.push(h2)), h2.dataByAxis.push({ axisDim: o2.dim, axisIndex: a2.componentIndex, axisType: a2.type, axisId: a2.id, value: i2, valueLabelOpt: { precision: s2.get(["label", "precision"]), formatter: s2.get(["label", "formatter"]) }, seriesDataIndices: r2.slice() });
    }
  }
  function GN(t2) {
    var e2 = t2.axis.model, n2 = {}, i2 = n2.axisDim = t2.axis.dim;
    return n2.axisIndex = n2[i2 + "AxisIndex"] = e2.componentIndex, n2.axisName = n2[i2 + "AxisName"] = e2.name, n2.axisId = n2[i2 + "AxisId"] = e2.id, n2;
  }
  function WN(t2) {
    return !t2 || null == t2[0] || isNaN(t2[0]) || null == t2[1] || isNaN(t2[1]);
  }
  function HN(t2) {
    AI.registerAxisPointerClass("CartesianAxisPointer", SN), t2.registerComponentModel(CN), t2.registerComponentView(RN), t2.registerPreprocessor(function(t3) {
      if (t3) {
        (!t3.axisPointer || 0 === t3.axisPointer.length) && (t3.axisPointer = {});
        var e2 = t3.axisPointer.link;
        e2 && !H(e2) && (t3.axisPointer.link = [e2]);
      }
    }), t2.registerProcessor(t2.PRIORITY.PROCESSOR.STATISTIC, function(t3, e2) {
      t3.getComponent("axisPointer").coordSysAxesInfo = wI(t3, e2);
    }), t2.registerAction({ type: "updateAxisPointer", event: "updateAxisPointer", update: ":updateAxisPointer" }, zN);
  }
  var YN = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.makeElOption = function(t3, e2, n3, i2, r2) {
      var o2 = n3.axis;
      "angle" === o2.dim && (this.animationThreshold = Math.PI / 18);
      var a2 = o2.polar, s2 = a2.getOtherAxis(o2).getExtent(), l2 = o2.dataToCoord(e2), u2 = i2.get("type");
      if (u2 && "none" !== u2) {
        var h2 = gN(i2), c2 = XN[u2](o2, a2, l2, s2);
        c2.style = h2, t3.graphicKey = c2.type, t3.pointer = c2;
      }
      var p2 = function(t4, e3, n4, i3, r3) {
        var o3 = e3.axis, a3 = o3.dataToCoord(t4), s3 = i3.getAngleAxis().getExtent()[0];
        s3 = s3 / 180 * Math.PI;
        var l3, u3, h3, c3 = i3.getRadiusAxis().getExtent();
        if ("radius" === o3.dim) {
          var p3 = [1, 0, 0, 1, 0, 0];
          we(p3, p3, s3), be(p3, p3, [i3.cx, i3.cy]), l3 = Eh([a3, -r3], p3);
          var d2 = e3.getModel("axisLabel").get("rotate") || 0, f2 = yI.innerTextLayout(s3, d2 * Math.PI / 180, -1);
          u3 = f2.textAlign, h3 = f2.textVerticalAlign;
        } else {
          var g2 = c3[1];
          l3 = i3.coordToPoint([g2 + r3, a3]);
          var y2 = i3.cx, v2 = i3.cy;
          u3 = Math.abs(l3[0] - y2) / g2 < 0.3 ? "center" : l3[0] > y2 ? "left" : "right", h3 = Math.abs(l3[1] - v2) / g2 < 0.3 ? "middle" : l3[1] > v2 ? "top" : "bottom";
        }
        return { position: l3, align: u3, verticalAlign: h3 };
      }(e2, n3, 0, a2, i2.get(["label", "margin"]));
      yN(t3, n3, i2, r2, p2);
    }, n2;
  }(uN);
  var XN = { line: function(t2, e2, n2, i2) {
    return "angle" === t2.dim ? { type: "Line", shape: _N(e2.coordToPoint([i2[0], n2]), e2.coordToPoint([i2[1], n2])) } : { type: "Circle", shape: { cx: e2.cx, cy: e2.cy, r: n2 } };
  }, shadow: function(t2, e2, n2, i2) {
    var r2 = Math.max(1, t2.getBandWidth()), o2 = Math.PI / 180;
    return "angle" === t2.dim ? { type: "Sector", shape: wN(e2.cx, e2.cy, i2[0], i2[1], (-n2 - r2 / 2) * o2, (r2 / 2 - n2) * o2) } : { type: "Sector", shape: wN(e2.cx, e2.cy, n2 - r2 / 2, n2 + r2 / 2, 0, 2 * Math.PI) };
  } };
  var UN = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.findAxisModel = function(t3) {
      var e2;
      return this.ecModel.eachComponent(t3, function(t4) {
        t4.getCoordSysModel() === this && (e2 = t4);
      }, this), e2;
    }, n2.type = "polar", n2.dependencies = ["radiusAxis", "angleAxis"], n2.defaultOption = { z: 0, center: ["50%", "50%"], radius: "80%" }, n2;
  }(Op);
  var ZN = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.getCoordSysModel = function() {
      return this.getReferringComponents("polar", Eo).models[0];
    }, n2.type = "polarAxis", n2;
  }(Op);
  O(ZN, R_);
  var jN = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "angleAxis", n2;
  }(ZN);
  var qN = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "radiusAxis", n2;
  }(ZN);
  var KN = function(t2) {
    function n2(e2, n3) {
      return t2.call(this, "radius", e2, n3) || this;
    }
    return e(n2, t2), n2.prototype.pointToData = function(t3, e2) {
      return this.polar.pointToData(t3, e2)["radius" === this.dim ? 0 : 1];
    }, n2;
  }(cb);
  KN.prototype.dataToRadius = cb.prototype.dataToCoord, KN.prototype.radiusToData = cb.prototype.coordToData;
  var $N = Po();
  var JN = function(t2) {
    function n2(e2, n3) {
      return t2.call(this, "angle", e2, n3 || [0, 360]) || this;
    }
    return e(n2, t2), n2.prototype.pointToData = function(t3, e2) {
      return this.polar.pointToData(t3, e2)["radius" === this.dim ? 0 : 1];
    }, n2.prototype.calculateCategoryInterval = function() {
      var t3 = this, e2 = t3.getLabelModel(), n3 = t3.scale, i2 = n3.getExtent(), r2 = n3.count();
      if (i2[1] - i2[0] < 1)
        return 0;
      var o2 = i2[0], a2 = t3.dataToCoord(o2 + 1) - t3.dataToCoord(o2), s2 = Math.abs(a2), l2 = _r(null == o2 ? "" : o2 + "", e2.getFont(), "center", "top"), u2 = Math.max(l2.height, 7) / s2;
      isNaN(u2) && (u2 = 1 / 0);
      var h2 = Math.max(0, Math.floor(u2)), c2 = $N(t3.model), p2 = c2.lastAutoInterval, d2 = c2.lastTickCount;
      return null != p2 && null != d2 && Math.abs(p2 - h2) <= 1 && Math.abs(d2 - r2) <= 1 && p2 > h2 ? h2 = p2 : (c2.lastTickCount = r2, c2.lastAutoInterval = h2), h2;
    }, n2;
  }(cb);
  JN.prototype.dataToAngle = cb.prototype.dataToCoord, JN.prototype.angleToData = cb.prototype.coordToData;
  var QN = ["radius", "angle"];
  var tE = function() {
    function t2(t3) {
      this.dimensions = QN, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new KN(), this._angleAxis = new JN(), this.axisPointerEnabled = true, this.name = t3 || "", this._radiusAxis.polar = this._angleAxis.polar = this;
    }
    return t2.prototype.containPoint = function(t3) {
      var e2 = this.pointToCoord(t3);
      return this._radiusAxis.contain(e2[0]) && this._angleAxis.contain(e2[1]);
    }, t2.prototype.containData = function(t3) {
      return this._radiusAxis.containData(t3[0]) && this._angleAxis.containData(t3[1]);
    }, t2.prototype.getAxis = function(t3) {
      return this["_" + t3 + "Axis"];
    }, t2.prototype.getAxes = function() {
      return [this._radiusAxis, this._angleAxis];
    }, t2.prototype.getAxesByScale = function(t3) {
      var e2 = [], n2 = this._angleAxis, i2 = this._radiusAxis;
      return n2.scale.type === t3 && e2.push(n2), i2.scale.type === t3 && e2.push(i2), e2;
    }, t2.prototype.getAngleAxis = function() {
      return this._angleAxis;
    }, t2.prototype.getRadiusAxis = function() {
      return this._radiusAxis;
    }, t2.prototype.getOtherAxis = function(t3) {
      var e2 = this._angleAxis;
      return t3 === e2 ? this._radiusAxis : e2;
    }, t2.prototype.getBaseAxis = function() {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, t2.prototype.getTooltipAxes = function(t3) {
      var e2 = null != t3 && "auto" !== t3 ? this.getAxis(t3) : this.getBaseAxis();
      return { baseAxes: [e2], otherAxes: [this.getOtherAxis(e2)] };
    }, t2.prototype.dataToPoint = function(t3, e2) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(t3[0], e2), this._angleAxis.dataToAngle(t3[1], e2)]);
    }, t2.prototype.pointToData = function(t3, e2) {
      var n2 = this.pointToCoord(t3);
      return [this._radiusAxis.radiusToData(n2[0], e2), this._angleAxis.angleToData(n2[1], e2)];
    }, t2.prototype.pointToCoord = function(t3) {
      var e2 = t3[0] - this.cx, n2 = t3[1] - this.cy, i2 = this.getAngleAxis(), r2 = i2.getExtent(), o2 = Math.min(r2[0], r2[1]), a2 = Math.max(r2[0], r2[1]);
      i2.inverse ? o2 = a2 - 360 : a2 = o2 + 360;
      var s2 = Math.sqrt(e2 * e2 + n2 * n2);
      e2 /= s2, n2 /= s2;
      for (var l2 = Math.atan2(-n2, e2) / Math.PI * 180, u2 = l2 < o2 ? 1 : -1; l2 < o2 || l2 > a2; )
        l2 += 360 * u2;
      return [s2, l2];
    }, t2.prototype.coordToPoint = function(t3) {
      var e2 = t3[0], n2 = t3[1] / 180 * Math.PI;
      return [Math.cos(n2) * e2 + this.cx, -Math.sin(n2) * e2 + this.cy];
    }, t2.prototype.getArea = function() {
      var t3 = this.getAngleAxis(), e2 = this.getRadiusAxis().getExtent().slice();
      e2[0] > e2[1] && e2.reverse();
      var n2 = t3.getExtent(), i2 = Math.PI / 180;
      return { cx: this.cx, cy: this.cy, r0: e2[0], r: e2[1], startAngle: -n2[0] * i2, endAngle: -n2[1] * i2, clockwise: t3.inverse, contain: function(t4, e3) {
        var n3 = t4 - this.cx, i3 = e3 - this.cy, r2 = n3 * n3 + i3 * i3 - 1e-4, o2 = this.r, a2 = this.r0;
        return r2 <= o2 * o2 && r2 >= a2 * a2;
      } };
    }, t2.prototype.convertToPixel = function(t3, e2, n2) {
      return eE(e2) === this ? this.dataToPoint(n2) : null;
    }, t2.prototype.convertFromPixel = function(t3, e2, n2) {
      return eE(e2) === this ? this.pointToData(n2) : null;
    }, t2;
  }();
  function eE(t2) {
    var e2 = t2.seriesModel, n2 = t2.polarModel;
    return n2 && n2.coordinateSystem || e2 && e2.coordinateSystem;
  }
  function nE(t2, e2) {
    var n2 = this, i2 = n2.getAngleAxis(), r2 = n2.getRadiusAxis();
    if (i2.scale.setExtent(1 / 0, -1 / 0), r2.scale.setExtent(1 / 0, -1 / 0), t2.eachSeries(function(t3) {
      if (t3.coordinateSystem === n2) {
        var e3 = t3.getData();
        N(O_(e3, "radius"), function(t4) {
          r2.scale.unionExtentFromData(e3, t4);
        }), N(O_(e3, "angle"), function(t4) {
          i2.scale.unionExtentFromData(e3, t4);
        });
      }
    }), T_(i2.scale, i2.model), T_(r2.scale, r2.model), "category" === i2.type && !i2.onBand) {
      var o2 = i2.getExtent(), a2 = 360 / i2.scale.count();
      i2.inverse ? o2[1] += a2 : o2[1] -= a2, i2.setExtent(o2[0], o2[1]);
    }
  }
  function iE(t2, e2) {
    if (t2.type = e2.get("type"), t2.scale = C_(e2), t2.onBand = e2.get("boundaryGap") && "category" === t2.type, t2.inverse = e2.get("inverse"), function(t3) {
      return "angleAxis" === t3.mainType;
    }(e2)) {
      t2.inverse = t2.inverse !== e2.get("clockwise");
      var n2 = e2.get("startAngle");
      t2.setExtent(n2, n2 + (t2.inverse ? -360 : 360));
    }
    e2.axis = t2, t2.model = e2;
  }
  var rE = { dimensions: QN, create: function(t2, e2) {
    var n2 = [];
    return t2.eachComponent("polar", function(t3, i2) {
      var r2 = new tE(i2 + "");
      r2.update = nE;
      var o2 = r2.getRadiusAxis(), a2 = r2.getAngleAxis(), s2 = t3.findAxisModel("radiusAxis"), l2 = t3.findAxisModel("angleAxis");
      iE(o2, s2), iE(a2, l2), function(t4, e3, n3) {
        var i3 = e3.get("center"), r3 = n3.getWidth(), o3 = n3.getHeight();
        t4.cx = Xr(i3[0], r3), t4.cy = Xr(i3[1], o3);
        var a3 = t4.getRadiusAxis(), s3 = Math.min(r3, o3) / 2, l3 = e3.get("radius");
        null == l3 ? l3 = [0, "100%"] : H(l3) || (l3 = [0, l3]);
        var u2 = [Xr(l3[0], s3), Xr(l3[1], s3)];
        a3.inverse ? a3.setExtent(u2[1], u2[0]) : a3.setExtent(u2[0], u2[1]);
      }(r2, t3, e2), n2.push(r2), t3.coordinateSystem = r2, r2.model = t3;
    }), t2.eachSeries(function(t3) {
      if ("polar" === t3.get("coordinateSystem")) {
        var e3 = t3.getReferringComponents("polar", Eo).models[0];
        t3.coordinateSystem = e3.coordinateSystem;
      }
    }), n2;
  } };
  var oE = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
  function aE(t2, e2, n2) {
    e2[1] > e2[0] && (e2 = e2.slice().reverse());
    var i2 = t2.coordToPoint([e2[0], n2]), r2 = t2.coordToPoint([e2[1], n2]);
    return { x1: i2[0], y1: i2[1], x2: r2[0], y2: r2[1] };
  }
  function sE(t2) {
    return t2.getRadiusAxis().inverse ? 0 : 1;
  }
  function lE(t2) {
    var e2 = t2[0], n2 = t2[t2.length - 1];
    e2 && n2 && Math.abs(Math.abs(e2.coord - n2.coord) - 360) < 1e-4 && t2.pop();
  }
  var uE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.axisPointerClass = "PolarAxisPointer", e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2) {
      if (this.group.removeAll(), t3.get("show")) {
        var n3 = t3.axis, i2 = n3.polar, r2 = i2.getRadiusAxis().getExtent(), o2 = n3.getTicksCoords(), a2 = n3.getMinorTicksCoords(), s2 = E(n3.getViewLabels(), function(t4) {
          t4 = I(t4);
          var e3 = n3.scale, i3 = "ordinal" === e3.type ? e3.getRawOrdinalNumber(t4.tickValue) : t4.tickValue;
          return t4.coord = n3.dataToCoord(i3), t4;
        });
        lE(s2), lE(o2), N(oE, function(e3) {
          !t3.get([e3, "show"]) || n3.scale.isBlank() && "axisLine" !== e3 || hE[e3](this.group, t3, i2, o2, a2, r2, s2);
        }, this);
      }
    }, n2.type = "angleAxis", n2;
  }(AI);
  var hE = { axisLine: function(t2, e2, n2, i2, r2, o2) {
    var a2, s2 = e2.getModel(["axisLine", "lineStyle"]), l2 = sE(n2), u2 = l2 ? 0 : 1;
    (a2 = 0 === o2[u2] ? new xu({ shape: { cx: n2.cx, cy: n2.cy, r: o2[l2] }, style: s2.getLineStyle(), z2: 1, silent: true }) : new Vu({ shape: { cx: n2.cx, cy: n2.cy, r: o2[l2], r0: o2[u2] }, style: s2.getLineStyle(), z2: 1, silent: true })).style.fill = null, t2.add(a2);
  }, axisTick: function(t2, e2, n2, i2, r2, o2) {
    var a2 = e2.getModel("axisTick"), s2 = (a2.get("inside") ? -1 : 1) * a2.get("length"), l2 = o2[sE(n2)], u2 = E(i2, function(t3) {
      return new Uu({ shape: aE(n2, [l2, l2 + s2], t3.coord) });
    });
    t2.add(Lh(u2, { style: A(a2.getModel("lineStyle").getLineStyle(), { stroke: e2.get(["axisLine", "lineStyle", "color"]) }) }));
  }, minorTick: function(t2, e2, n2, i2, r2, o2) {
    if (r2.length) {
      for (var a2 = e2.getModel("axisTick"), s2 = e2.getModel("minorTick"), l2 = (a2.get("inside") ? -1 : 1) * s2.get("length"), u2 = o2[sE(n2)], h2 = [], c2 = 0; c2 < r2.length; c2++)
        for (var p2 = 0; p2 < r2[c2].length; p2++)
          h2.push(new Uu({ shape: aE(n2, [u2, u2 + l2], r2[c2][p2].coord) }));
      t2.add(Lh(h2, { style: A(s2.getModel("lineStyle").getLineStyle(), A(a2.getLineStyle(), { stroke: e2.get(["axisLine", "lineStyle", "color"]) })) }));
    }
  }, axisLabel: function(t2, e2, n2, i2, r2, o2, a2) {
    var s2 = e2.getCategories(true), l2 = e2.getModel("axisLabel"), u2 = l2.get("margin"), h2 = e2.get("triggerEvent");
    N(a2, function(i3, r3) {
      var a3 = l2, c2 = i3.tickValue, p2 = o2[sE(n2)], d2 = n2.coordToPoint([p2 + u2, i3.coord]), f2 = n2.cx, g2 = n2.cy, y2 = Math.abs(d2[0] - f2) / p2 < 0.3 ? "center" : d2[0] > f2 ? "left" : "right", v2 = Math.abs(d2[1] - g2) / p2 < 0.3 ? "middle" : d2[1] > g2 ? "top" : "bottom";
      if (s2 && s2[c2]) {
        var m2 = s2[c2];
        j(m2) && m2.textStyle && (a3 = new Sc(m2.textStyle, l2, l2.ecModel));
      }
      var x2 = new Bs({ silent: yI.isLabelSilent(e2), style: ec(a3, { x: d2[0], y: d2[1], fill: a3.getTextColor() || e2.get(["axisLine", "lineStyle", "color"]), text: i3.formattedLabel, align: y2, verticalAlign: v2 }) });
      if (t2.add(x2), h2) {
        var _2 = yI.makeAxisEventDataBase(e2);
        _2.targetType = "axisLabel", _2.value = i3.rawLabel, Js(x2).eventData = _2;
      }
    }, this);
  }, splitLine: function(t2, e2, n2, i2, r2, o2) {
    var a2 = e2.getModel("splitLine").getModel("lineStyle"), s2 = a2.get("color"), l2 = 0;
    s2 = s2 instanceof Array ? s2 : [s2];
    for (var u2 = [], h2 = 0; h2 < i2.length; h2++) {
      var c2 = l2++ % s2.length;
      u2[c2] = u2[c2] || [], u2[c2].push(new Uu({ shape: aE(n2, o2, i2[h2].coord) }));
    }
    for (h2 = 0; h2 < u2.length; h2++)
      t2.add(Lh(u2[h2], { style: A({ stroke: s2[h2 % s2.length] }, a2.getLineStyle()), silent: true, z: e2.get("z") }));
  }, minorSplitLine: function(t2, e2, n2, i2, r2, o2) {
    if (r2.length) {
      for (var a2 = e2.getModel("minorSplitLine").getModel("lineStyle"), s2 = [], l2 = 0; l2 < r2.length; l2++)
        for (var u2 = 0; u2 < r2[l2].length; u2++)
          s2.push(new Uu({ shape: aE(n2, o2, r2[l2][u2].coord) }));
      t2.add(Lh(s2, { style: a2.getLineStyle(), silent: true, z: e2.get("z") }));
    }
  }, splitArea: function(t2, e2, n2, i2, r2, o2) {
    if (i2.length) {
      var a2 = e2.getModel("splitArea").getModel("areaStyle"), s2 = a2.get("color"), l2 = 0;
      s2 = s2 instanceof Array ? s2 : [s2];
      for (var u2 = [], h2 = Math.PI / 180, c2 = -i2[0].coord * h2, p2 = Math.min(o2[0], o2[1]), d2 = Math.max(o2[0], o2[1]), f2 = e2.get("clockwise"), g2 = 1, y2 = i2.length; g2 <= y2; g2++) {
        var v2 = g2 === y2 ? i2[0].coord : i2[g2].coord, m2 = l2++ % s2.length;
        u2[m2] = u2[m2] || [], u2[m2].push(new Eu({ shape: { cx: n2.cx, cy: n2.cy, r0: p2, r: d2, startAngle: c2, endAngle: -v2 * h2, clockwise: f2 }, silent: true })), c2 = -v2 * h2;
      }
      for (g2 = 0; g2 < u2.length; g2++)
        t2.add(Lh(u2[g2], { style: A({ fill: s2[g2 % s2.length] }, a2.getAreaStyle()), silent: true }));
    }
  } };
  var cE = ["axisLine", "axisTickLabel", "axisName"];
  var pE = ["splitLine", "splitArea", "minorSplitLine"];
  var dE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.axisPointerClass = "PolarAxisPointer", e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2) {
      if (this.group.removeAll(), t3.get("show")) {
        var n3 = this._axisGroup, i2 = this._axisGroup = new Er();
        this.group.add(i2);
        var r2 = t3.axis, o2 = r2.polar, a2 = o2.getAngleAxis(), s2 = r2.getTicksCoords(), l2 = r2.getMinorTicksCoords(), u2 = a2.getExtent()[0], h2 = r2.getExtent(), c2 = function(t4, e3, n4) {
          return { position: [t4.cx, t4.cy], rotation: n4 / 180 * Math.PI, labelDirection: -1, tickDirection: -1, nameDirection: 1, labelRotate: e3.getModel("axisLabel").get("rotate"), z2: 1 };
        }(o2, t3, u2), p2 = new yI(t3, c2);
        N(cE, p2.add, p2), i2.add(p2.getGroup()), Bh(n3, i2, t3), N(pE, function(e3) {
          t3.get([e3, "show"]) && !r2.scale.isBlank() && fE[e3](this.group, t3, o2, u2, h2, s2, l2);
        }, this);
      }
    }, n2.type = "radiusAxis", n2;
  }(AI);
  var fE = { splitLine: function(t2, e2, n2, i2, r2, o2) {
    var a2 = e2.getModel("splitLine").getModel("lineStyle"), s2 = a2.get("color"), l2 = 0;
    s2 = s2 instanceof Array ? s2 : [s2];
    for (var u2 = [], h2 = 0; h2 < o2.length; h2++) {
      var c2 = l2++ % s2.length;
      u2[c2] = u2[c2] || [], u2[c2].push(new xu({ shape: { cx: n2.cx, cy: n2.cy, r: Math.max(o2[h2].coord, 0) } }));
    }
    for (h2 = 0; h2 < u2.length; h2++)
      t2.add(Lh(u2[h2], { style: A({ stroke: s2[h2 % s2.length], fill: null }, a2.getLineStyle()), silent: true }));
  }, minorSplitLine: function(t2, e2, n2, i2, r2, o2, a2) {
    if (a2.length) {
      for (var s2 = e2.getModel("minorSplitLine").getModel("lineStyle"), l2 = [], u2 = 0; u2 < a2.length; u2++)
        for (var h2 = 0; h2 < a2[u2].length; h2++)
          l2.push(new xu({ shape: { cx: n2.cx, cy: n2.cy, r: a2[u2][h2].coord } }));
      t2.add(Lh(l2, { style: A({ fill: null }, s2.getLineStyle()), silent: true }));
    }
  }, splitArea: function(t2, e2, n2, i2, r2, o2) {
    if (o2.length) {
      var a2 = e2.getModel("splitArea").getModel("areaStyle"), s2 = a2.get("color"), l2 = 0;
      s2 = s2 instanceof Array ? s2 : [s2];
      for (var u2 = [], h2 = o2[0].coord, c2 = 1; c2 < o2.length; c2++) {
        var p2 = l2++ % s2.length;
        u2[p2] = u2[p2] || [], u2[p2].push(new Eu({ shape: { cx: n2.cx, cy: n2.cy, r0: h2, r: o2[c2].coord, startAngle: 0, endAngle: 2 * Math.PI }, silent: true })), h2 = o2[c2].coord;
      }
      for (c2 = 0; c2 < u2.length; c2++)
        t2.add(Lh(u2[c2], { style: A({ fill: s2[c2 % s2.length] }, a2.getAreaStyle()), silent: true }));
    }
  } };
  function gE(t2) {
    return t2.get("stack") || "__ec_stack_" + t2.seriesIndex;
  }
  function yE(t2, e2) {
    return e2.dim + t2.model.componentIndex;
  }
  function vE(t2, e2, n2) {
    var i2 = {}, r2 = function(t3) {
      var e3 = {};
      N(t3, function(t4, n4) {
        var i3 = t4.getData(), r3 = t4.coordinateSystem, o2 = r3.getBaseAxis(), a2 = yE(r3, o2), s2 = o2.getExtent(), l2 = "category" === o2.type ? o2.getBandWidth() : Math.abs(s2[1] - s2[0]) / i3.count(), u2 = e3[a2] || { bandWidth: l2, remainedWidth: l2, autoWidthCount: 0, categoryGap: "20%", gap: "30%", stacks: {} }, h2 = u2.stacks;
        e3[a2] = u2;
        var c2 = gE(t4);
        h2[c2] || u2.autoWidthCount++, h2[c2] = h2[c2] || { width: 0, maxWidth: 0 };
        var p2 = Xr(t4.get("barWidth"), l2), d2 = Xr(t4.get("barMaxWidth"), l2), f2 = t4.get("barGap"), g2 = t4.get("barCategoryGap");
        p2 && !h2[c2].width && (p2 = Math.min(u2.remainedWidth, p2), h2[c2].width = p2, u2.remainedWidth -= p2), d2 && (h2[c2].maxWidth = d2), null != f2 && (u2.gap = f2), null != g2 && (u2.categoryGap = g2);
      });
      var n3 = {};
      return N(e3, function(t4, e4) {
        n3[e4] = {};
        var i3 = t4.stacks, r3 = t4.bandWidth, o2 = Xr(t4.categoryGap, r3), a2 = Xr(t4.gap, 1), s2 = t4.remainedWidth, l2 = t4.autoWidthCount, u2 = (s2 - o2) / (l2 + (l2 - 1) * a2);
        u2 = Math.max(u2, 0), N(i3, function(t5, e5) {
          var n4 = t5.maxWidth;
          n4 && n4 < u2 && (n4 = Math.min(n4, s2), t5.width && (n4 = Math.min(n4, t5.width)), s2 -= n4, t5.width = n4, l2--);
        }), u2 = (s2 - o2) / (l2 + (l2 - 1) * a2), u2 = Math.max(u2, 0);
        var h2, c2 = 0;
        N(i3, function(t5, e5) {
          t5.width || (t5.width = u2), h2 = t5, c2 += t5.width * (1 + a2);
        }), h2 && (c2 -= h2.width * a2);
        var p2 = -c2 / 2;
        N(i3, function(t5, i4) {
          n3[e4][i4] = n3[e4][i4] || { offset: p2, width: t5.width }, p2 += t5.width * (1 + a2);
        });
      }), n3;
    }(V(e2.getSeriesByType(t2), function(t3) {
      return !e2.isSeriesFiltered(t3) && t3.coordinateSystem && "polar" === t3.coordinateSystem.type;
    }));
    e2.eachSeriesByType(t2, function(t3) {
      if ("polar" === t3.coordinateSystem.type) {
        var e3 = t3.getData(), n3 = t3.coordinateSystem, o2 = n3.getBaseAxis(), a2 = yE(n3, o2), s2 = gE(t3), l2 = r2[a2][s2], u2 = l2.offset, h2 = l2.width, c2 = n3.getOtherAxis(o2), p2 = t3.coordinateSystem.cx, d2 = t3.coordinateSystem.cy, f2 = t3.get("barMinHeight") || 0, g2 = t3.get("barMinAngle") || 0;
        i2[s2] = i2[s2] || [];
        for (var y2 = e3.mapDimension(c2.dim), v2 = e3.mapDimension(o2.dim), m2 = Ix(e3, y2), x2 = "radius" !== o2.dim || !t3.get("roundCap", true), _2 = c2.dataToCoord(0), b2 = 0, w2 = e3.count(); b2 < w2; b2++) {
          var S2 = e3.get(y2, b2), M2 = e3.get(v2, b2), I2 = S2 >= 0 ? "p" : "n", T2 = _2;
          m2 && (i2[s2][M2] || (i2[s2][M2] = { p: _2, n: _2 }), T2 = i2[s2][M2][I2]);
          var C2 = void 0, D2 = void 0, A2 = void 0, k2 = void 0;
          if ("radius" === c2.dim) {
            var L2 = c2.dataToCoord(S2) - _2, P2 = o2.dataToCoord(M2);
            Math.abs(L2) < f2 && (L2 = (L2 < 0 ? -1 : 1) * f2), C2 = T2, D2 = T2 + L2, k2 = (A2 = P2 - u2) - h2, m2 && (i2[s2][M2][I2] = D2);
          } else {
            var O2 = c2.dataToCoord(S2, x2) - _2, R2 = o2.dataToCoord(M2);
            Math.abs(O2) < g2 && (O2 = (O2 < 0 ? -1 : 1) * g2), D2 = (C2 = R2 + u2) + h2, A2 = T2, k2 = T2 + O2, m2 && (i2[s2][M2][I2] = k2);
          }
          e3.setItemLayout(b2, { cx: p2, cy: d2, r0: C2, r: D2, startAngle: -A2 * Math.PI / 180, endAngle: -k2 * Math.PI / 180, clockwise: A2 >= k2 });
        }
      }
    });
  }
  var mE = { startAngle: 90, clockwise: true, splitNumber: 12, axisLabel: { rotate: 0 } };
  var xE = { splitNumber: 5 };
  var _E = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "polar", n2;
  }(Ig);
  function bE(t2, e2) {
    e2 = e2 || {};
    var n2 = t2.coordinateSystem, i2 = t2.axis, r2 = {}, o2 = i2.position, a2 = i2.orient, s2 = n2.getRect(), l2 = [s2.x, s2.x + s2.width, s2.y, s2.y + s2.height], u2 = { horizontal: { top: l2[2], bottom: l2[3] }, vertical: { left: l2[0], right: l2[1] } };
    r2.position = ["vertical" === a2 ? u2.vertical[o2] : l2[0], "horizontal" === a2 ? u2.horizontal[o2] : l2[3]];
    r2.rotation = Math.PI / 2 * { horizontal: 0, vertical: 1 }[a2];
    r2.labelDirection = r2.tickDirection = r2.nameDirection = { top: -1, bottom: 1, right: 1, left: -1 }[o2], t2.get(["axisTick", "inside"]) && (r2.tickDirection = -r2.tickDirection), nt(e2.labelInside, t2.get(["axisLabel", "inside"])) && (r2.labelDirection = -r2.labelDirection);
    var h2 = e2.rotate;
    return null == h2 && (h2 = t2.get(["axisLabel", "rotate"])), r2.labelRotation = "top" === o2 ? -h2 : h2, r2.z2 = 1, r2;
  }
  var wE = ["axisLine", "axisTickLabel", "axisName"];
  var SE = ["splitArea", "splitLine"];
  var ME = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.axisPointerClass = "SingleAxisPointer", e2;
    }
    return e(n2, t2), n2.prototype.render = function(e2, n3, i2, r2) {
      var o2 = this.group;
      o2.removeAll();
      var a2 = this._axisGroup;
      this._axisGroup = new Er();
      var s2 = bE(e2), l2 = new yI(e2, s2);
      N(wE, l2.add, l2), o2.add(this._axisGroup), o2.add(l2.getGroup()), N(SE, function(t3) {
        e2.get([t3, "show"]) && IE[t3](this, this.group, this._axisGroup, e2);
      }, this), Bh(a2, this._axisGroup, e2), t2.prototype.render.call(this, e2, n3, i2, r2);
    }, n2.prototype.remove = function() {
      PI(this);
    }, n2.type = "singleAxis", n2;
  }(AI);
  var IE = { splitLine: function(t2, e2, n2, i2) {
    var r2 = i2.axis;
    if (!r2.scale.isBlank()) {
      var o2 = i2.getModel("splitLine"), a2 = o2.getModel("lineStyle"), s2 = a2.get("color");
      s2 = s2 instanceof Array ? s2 : [s2];
      for (var l2 = a2.get("width"), u2 = i2.coordinateSystem.getRect(), h2 = r2.isHorizontal(), c2 = [], p2 = 0, d2 = r2.getTicksCoords({ tickModel: o2 }), f2 = [], g2 = [], y2 = 0; y2 < d2.length; ++y2) {
        var v2 = r2.toGlobalCoord(d2[y2].coord);
        h2 ? (f2[0] = v2, f2[1] = u2.y, g2[0] = v2, g2[1] = u2.y + u2.height) : (f2[0] = u2.x, f2[1] = v2, g2[0] = u2.x + u2.width, g2[1] = v2);
        var m2 = new Uu({ shape: { x1: f2[0], y1: f2[1], x2: g2[0], y2: g2[1] }, silent: true });
        Oh(m2.shape, l2);
        var x2 = p2++ % s2.length;
        c2[x2] = c2[x2] || [], c2[x2].push(m2);
      }
      var _2 = a2.getLineStyle(["color"]);
      for (y2 = 0; y2 < c2.length; ++y2)
        e2.add(Lh(c2[y2], { style: A({ stroke: s2[y2 % s2.length] }, _2), silent: true }));
    }
  }, splitArea: function(t2, e2, n2, i2) {
    LI(t2, n2, i2, i2);
  } };
  var TE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.getCoordSysModel = function() {
      return this;
    }, n2.type = "singleAxis", n2.layoutMode = "box", n2.defaultOption = { left: "5%", top: "5%", right: "5%", bottom: "5%", type: "value", position: "bottom", orient: "horizontal", axisLine: { show: true, lineStyle: { width: 1, type: "solid" } }, tooltip: { show: true }, axisTick: { show: true, length: 6, lineStyle: { width: 1 } }, axisLabel: { show: true, interval: "auto" }, splitLine: { show: true, lineStyle: { type: "dashed", opacity: 0.2 } } }, n2;
  }(Op);
  O(TE, R_.prototype);
  var CE = function(t2) {
    function n2(e2, n3, i2, r2, o2) {
      var a2 = t2.call(this, e2, n3, i2) || this;
      return a2.type = r2 || "value", a2.position = o2 || "bottom", a2;
    }
    return e(n2, t2), n2.prototype.isHorizontal = function() {
      var t3 = this.position;
      return "top" === t3 || "bottom" === t3;
    }, n2.prototype.pointToData = function(t3, e2) {
      return this.coordinateSystem.pointToData(t3)[0];
    }, n2;
  }(cb);
  var DE = ["single"];
  var AE = function() {
    function t2(t3, e2, n2) {
      this.type = "single", this.dimension = "single", this.dimensions = DE, this.axisPointerEnabled = true, this.model = t3, this._init(t3, e2, n2);
    }
    return t2.prototype._init = function(t3, e2, n2) {
      var i2 = this.dimension, r2 = new CE(i2, C_(t3), [0, 0], t3.get("type"), t3.get("position")), o2 = "category" === r2.type;
      r2.onBand = o2 && t3.get("boundaryGap"), r2.inverse = t3.get("inverse"), r2.orient = t3.get("orient"), t3.axis = r2, r2.model = t3, r2.coordinateSystem = this, this._axis = r2;
    }, t2.prototype.update = function(t3, e2) {
      t3.eachSeries(function(t4) {
        if (t4.coordinateSystem === this) {
          var e3 = t4.getData();
          N(e3.mapDimensionsAll(this.dimension), function(t5) {
            this._axis.scale.unionExtentFromData(e3, t5);
          }, this), T_(this._axis.scale, this._axis.model);
        }
      }, this);
    }, t2.prototype.resize = function(t3, e2) {
      this._rect = Tp({ left: t3.get("left"), top: t3.get("top"), right: t3.get("right"), bottom: t3.get("bottom"), width: t3.get("width"), height: t3.get("height") }, { width: e2.getWidth(), height: e2.getHeight() }), this._adjustAxis();
    }, t2.prototype.getRect = function() {
      return this._rect;
    }, t2.prototype._adjustAxis = function() {
      var t3 = this._rect, e2 = this._axis, n2 = e2.isHorizontal(), i2 = n2 ? [0, t3.width] : [0, t3.height], r2 = e2.inverse ? 1 : 0;
      e2.setExtent(i2[r2], i2[1 - r2]), this._updateAxisTransform(e2, n2 ? t3.x : t3.y);
    }, t2.prototype._updateAxisTransform = function(t3, e2) {
      var n2 = t3.getExtent(), i2 = n2[0] + n2[1], r2 = t3.isHorizontal();
      t3.toGlobalCoord = r2 ? function(t4) {
        return t4 + e2;
      } : function(t4) {
        return i2 - t4 + e2;
      }, t3.toLocalCoord = r2 ? function(t4) {
        return t4 - e2;
      } : function(t4) {
        return i2 - t4 + e2;
      };
    }, t2.prototype.getAxis = function() {
      return this._axis;
    }, t2.prototype.getBaseAxis = function() {
      return this._axis;
    }, t2.prototype.getAxes = function() {
      return [this._axis];
    }, t2.prototype.getTooltipAxes = function() {
      return { baseAxes: [this.getAxis()], otherAxes: [] };
    }, t2.prototype.containPoint = function(t3) {
      var e2 = this.getRect(), n2 = this.getAxis();
      return "horizontal" === n2.orient ? n2.contain(n2.toLocalCoord(t3[0])) && t3[1] >= e2.y && t3[1] <= e2.y + e2.height : n2.contain(n2.toLocalCoord(t3[1])) && t3[0] >= e2.y && t3[0] <= e2.y + e2.height;
    }, t2.prototype.pointToData = function(t3) {
      var e2 = this.getAxis();
      return [e2.coordToData(e2.toLocalCoord(t3["horizontal" === e2.orient ? 0 : 1]))];
    }, t2.prototype.dataToPoint = function(t3) {
      var e2 = this.getAxis(), n2 = this.getRect(), i2 = [], r2 = "horizontal" === e2.orient ? 0 : 1;
      return t3 instanceof Array && (t3 = t3[0]), i2[r2] = e2.toGlobalCoord(e2.dataToCoord(+t3)), i2[1 - r2] = 0 === r2 ? n2.y + n2.height / 2 : n2.x + n2.width / 2, i2;
    }, t2.prototype.convertToPixel = function(t3, e2, n2) {
      return kE(e2) === this ? this.dataToPoint(n2) : null;
    }, t2.prototype.convertFromPixel = function(t3, e2, n2) {
      return kE(e2) === this ? this.pointToData(n2) : null;
    }, t2;
  }();
  function kE(t2) {
    var e2 = t2.seriesModel, n2 = t2.singleAxisModel;
    return n2 && n2.coordinateSystem || e2 && e2.coordinateSystem;
  }
  var LE = { create: function(t2, e2) {
    var n2 = [];
    return t2.eachComponent("singleAxis", function(i2, r2) {
      var o2 = new AE(i2, t2, e2);
      o2.name = "single_" + r2, o2.resize(i2, e2), i2.coordinateSystem = o2, n2.push(o2);
    }), t2.eachSeries(function(t3) {
      if ("singleAxis" === t3.get("coordinateSystem")) {
        var e3 = t3.getReferringComponents("singleAxis", Eo).models[0];
        t3.coordinateSystem = e3 && e3.coordinateSystem;
      }
    }), n2;
  }, dimensions: DE };
  var PE = ["x", "y"];
  var OE = ["width", "height"];
  var RE = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.makeElOption = function(t3, e2, n3, i2, r2) {
      var o2 = n3.axis, a2 = o2.coordinateSystem, s2 = zE(a2, 1 - EE(o2)), l2 = a2.dataToPoint(e2)[0], u2 = i2.get("type");
      if (u2 && "none" !== u2) {
        var h2 = gN(i2), c2 = NE[u2](o2, l2, s2);
        c2.style = h2, t3.graphicKey = c2.type, t3.pointer = c2;
      }
      xN(e2, t3, bE(n3), n3, i2, r2);
    }, n2.prototype.getHandleTransform = function(t3, e2, n3) {
      var i2 = bE(e2, { labelInside: false });
      i2.labelMargin = n3.get(["handle", "margin"]);
      var r2 = mN(e2.axis, t3, i2);
      return { x: r2[0], y: r2[1], rotation: i2.rotation + (i2.labelDirection < 0 ? Math.PI : 0) };
    }, n2.prototype.updateHandleTransform = function(t3, e2, n3, i2) {
      var r2 = n3.axis, o2 = r2.coordinateSystem, a2 = EE(r2), s2 = zE(o2, a2), l2 = [t3.x, t3.y];
      l2[a2] += e2[a2], l2[a2] = Math.min(s2[1], l2[a2]), l2[a2] = Math.max(s2[0], l2[a2]);
      var u2 = zE(o2, 1 - a2), h2 = (u2[1] + u2[0]) / 2, c2 = [h2, h2];
      return c2[a2] = l2[a2], { x: l2[0], y: l2[1], rotation: t3.rotation, cursorPoint: c2, tooltipOption: { verticalAlign: "middle" } };
    }, n2;
  }(uN);
  var NE = { line: function(t2, e2, n2) {
    return { type: "Line", subPixelOptimize: true, shape: _N([e2, n2[0]], [e2, n2[1]], EE(t2)) };
  }, shadow: function(t2, e2, n2) {
    var i2 = t2.getBandWidth(), r2 = n2[1] - n2[0];
    return { type: "Rect", shape: bN([e2 - i2 / 2, n2[0]], [i2, r2], EE(t2)) };
  } };
  function EE(t2) {
    return t2.isHorizontal() ? 0 : 1;
  }
  function zE(t2, e2) {
    var n2 = t2.getRect();
    return [n2[PE[e2]], n2[PE[e2]] + n2[OE[e2]]];
  }
  var VE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "single", n2;
  }(Ig);
  var BE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2, n3, i2) {
      var r2 = kp(e2);
      t2.prototype.init.apply(this, arguments), FE(e2, r2);
    }, n2.prototype.mergeOption = function(e2) {
      t2.prototype.mergeOption.apply(this, arguments), FE(this.option, e2);
    }, n2.prototype.getCellSize = function() {
      return this.option.cellSize;
    }, n2.type = "calendar", n2.defaultOption = { z: 2, left: 80, top: 60, cellSize: 20, orient: "horizontal", splitLine: { show: true, lineStyle: { color: "#000", width: 1, type: "solid" } }, itemStyle: { color: "#fff", borderWidth: 1, borderColor: "#ccc" }, dayLabel: { show: true, firstDay: 0, position: "start", margin: "50%", color: "#000" }, monthLabel: { show: true, position: "start", margin: 5, align: "center", formatter: null, color: "#000" }, yearLabel: { show: true, position: null, margin: 30, formatter: null, color: "#ccc", fontFamily: "sans-serif", fontWeight: "bolder", fontSize: 20 } }, n2;
  }(Op);
  function FE(t2, e2) {
    var n2, i2 = t2.cellSize;
    1 === (n2 = H(i2) ? i2 : t2.cellSize = [i2, i2]).length && (n2[1] = n2[0]);
    var r2 = E([0, 1], function(t3) {
      return function(t4, e3) {
        return null != t4[Sp[e3][0]] || null != t4[Sp[e3][1]] && null != t4[Sp[e3][2]];
      }(e2, t3) && (n2[t3] = "auto"), null != n2[t3] && "auto" !== n2[t3];
    });
    Ap(t2, e2, { type: "box", ignoreSize: r2 });
  }
  var GE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2 = this.group;
      i2.removeAll();
      var r2 = t3.coordinateSystem, o2 = r2.getRangeInfo(), a2 = r2.getOrient(), s2 = e2.getLocaleModel();
      this._renderDayRect(t3, o2, i2), this._renderLines(t3, o2, a2, i2), this._renderYearText(t3, o2, a2, i2), this._renderMonthText(t3, s2, a2, i2), this._renderWeekText(t3, s2, o2, a2, i2);
    }, n2.prototype._renderDayRect = function(t3, e2, n3) {
      for (var i2 = t3.coordinateSystem, r2 = t3.getModel("itemStyle").getItemStyle(), o2 = i2.getCellWidth(), a2 = i2.getCellHeight(), s2 = e2.start.time; s2 <= e2.end.time; s2 = i2.getNextNDay(s2, 1).time) {
        var l2 = i2.dataToRect([s2], false).tl, u2 = new Es({ shape: { x: l2[0], y: l2[1], width: o2, height: a2 }, cursor: "default", style: r2 });
        n3.add(u2);
      }
    }, n2.prototype._renderLines = function(t3, e2, n3, i2) {
      var r2 = this, o2 = t3.coordinateSystem, a2 = t3.getModel(["splitLine", "lineStyle"]).getLineStyle(), s2 = t3.get(["splitLine", "show"]), l2 = a2.lineWidth;
      this._tlpoints = [], this._blpoints = [], this._firstDayOfMonth = [], this._firstDayPoints = [];
      for (var u2 = e2.start, h2 = 0; u2.time <= e2.end.time; h2++) {
        p2(u2.formatedDate), 0 === h2 && (u2 = o2.getDateInfo(e2.start.y + "-" + e2.start.m));
        var c2 = u2.date;
        c2.setMonth(c2.getMonth() + 1), u2 = o2.getDateInfo(c2);
      }
      function p2(e3) {
        r2._firstDayOfMonth.push(o2.getDateInfo(e3)), r2._firstDayPoints.push(o2.dataToRect([e3], false).tl);
        var l3 = r2._getLinePointsOfOneWeek(t3, e3, n3);
        r2._tlpoints.push(l3[0]), r2._blpoints.push(l3[l3.length - 1]), s2 && r2._drawSplitline(l3, a2, i2);
      }
      p2(o2.getNextNDay(e2.end.time, 1).formatedDate), s2 && this._drawSplitline(r2._getEdgesPoints(r2._tlpoints, l2, n3), a2, i2), s2 && this._drawSplitline(r2._getEdgesPoints(r2._blpoints, l2, n3), a2, i2);
    }, n2.prototype._getEdgesPoints = function(t3, e2, n3) {
      var i2 = [t3[0].slice(), t3[t3.length - 1].slice()], r2 = "horizontal" === n3 ? 0 : 1;
      return i2[0][r2] = i2[0][r2] - e2 / 2, i2[1][r2] = i2[1][r2] + e2 / 2, i2;
    }, n2.prototype._drawSplitline = function(t3, e2, n3) {
      var i2 = new Hu({ z2: 20, shape: { points: t3 }, style: e2 });
      n3.add(i2);
    }, n2.prototype._getLinePointsOfOneWeek = function(t3, e2, n3) {
      for (var i2 = t3.coordinateSystem, r2 = i2.getDateInfo(e2), o2 = [], a2 = 0; a2 < 7; a2++) {
        var s2 = i2.getNextNDay(r2.time, a2), l2 = i2.dataToRect([s2.time], false);
        o2[2 * s2.day] = l2.tl, o2[2 * s2.day + 1] = l2["horizontal" === n3 ? "bl" : "tr"];
      }
      return o2;
    }, n2.prototype._formatterLabel = function(t3, e2) {
      return X(t3) && t3 ? (n3 = t3, N(e2, function(t4, e3) {
        n3 = n3.replace("{" + e3 + "}", i2 ? ie(t4) : t4);
      }), n3) : Y(t3) ? t3(e2) : e2.nameMap;
      var n3, i2;
    }, n2.prototype._yearTextPositionControl = function(t3, e2, n3, i2, r2) {
      var o2 = e2[0], a2 = e2[1], s2 = ["center", "bottom"];
      "bottom" === i2 ? (a2 += r2, s2 = ["center", "top"]) : "left" === i2 ? o2 -= r2 : "right" === i2 ? (o2 += r2, s2 = ["center", "top"]) : a2 -= r2;
      var l2 = 0;
      return "left" !== i2 && "right" !== i2 || (l2 = Math.PI / 2), { rotation: l2, x: o2, y: a2, style: { align: s2[0], verticalAlign: s2[1] } };
    }, n2.prototype._renderYearText = function(t3, e2, n3, i2) {
      var r2 = t3.getModel("yearLabel");
      if (r2.get("show")) {
        var o2 = r2.get("margin"), a2 = r2.get("position");
        a2 || (a2 = "horizontal" !== n3 ? "top" : "left");
        var s2 = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]], l2 = (s2[0][0] + s2[1][0]) / 2, u2 = (s2[0][1] + s2[1][1]) / 2, h2 = "horizontal" === n3 ? 0 : 1, c2 = { top: [l2, s2[h2][1]], bottom: [l2, s2[1 - h2][1]], left: [s2[1 - h2][0], u2], right: [s2[h2][0], u2] }, p2 = e2.start.y;
        +e2.end.y > +e2.start.y && (p2 = p2 + "-" + e2.end.y);
        var d2 = r2.get("formatter"), f2 = { start: e2.start.y, end: e2.end.y, nameMap: p2 }, g2 = this._formatterLabel(d2, f2), y2 = new Bs({ z2: 30, style: ec(r2, { text: g2 }) });
        y2.attr(this._yearTextPositionControl(y2, c2[a2], n3, a2, o2)), i2.add(y2);
      }
    }, n2.prototype._monthTextPositionControl = function(t3, e2, n3, i2, r2) {
      var o2 = "left", a2 = "top", s2 = t3[0], l2 = t3[1];
      return "horizontal" === n3 ? (l2 += r2, e2 && (o2 = "center"), "start" === i2 && (a2 = "bottom")) : (s2 += r2, e2 && (a2 = "middle"), "start" === i2 && (o2 = "right")), { x: s2, y: l2, align: o2, verticalAlign: a2 };
    }, n2.prototype._renderMonthText = function(t3, e2, n3, i2) {
      var r2 = t3.getModel("monthLabel");
      if (r2.get("show")) {
        var o2 = r2.get("nameMap"), a2 = r2.get("margin"), s2 = r2.get("position"), l2 = r2.get("align"), u2 = [this._tlpoints, this._blpoints];
        o2 && !X(o2) || (o2 && (e2 = Rc(o2) || e2), o2 = e2.get(["time", "monthAbbr"]) || []);
        var h2 = "start" === s2 ? 0 : 1, c2 = "horizontal" === n3 ? 0 : 1;
        a2 = "start" === s2 ? -a2 : a2;
        for (var p2 = "center" === l2, d2 = 0; d2 < u2[h2].length - 1; d2++) {
          var f2 = u2[h2][d2].slice(), g2 = this._firstDayOfMonth[d2];
          if (p2) {
            var y2 = this._firstDayPoints[d2];
            f2[c2] = (y2[c2] + u2[0][d2 + 1][c2]) / 2;
          }
          var v2 = r2.get("formatter"), m2 = o2[+g2.m - 1], x2 = { yyyy: g2.y, yy: (g2.y + "").slice(2), MM: g2.m, M: +g2.m, nameMap: m2 }, _2 = this._formatterLabel(v2, x2), b2 = new Bs({ z2: 30, style: D(ec(r2, { text: _2 }), this._monthTextPositionControl(f2, p2, n3, s2, a2)) });
          i2.add(b2);
        }
      }
    }, n2.prototype._weekTextPositionControl = function(t3, e2, n3, i2, r2) {
      var o2 = "center", a2 = "middle", s2 = t3[0], l2 = t3[1], u2 = "start" === n3;
      return "horizontal" === e2 ? (s2 = s2 + i2 + (u2 ? 1 : -1) * r2[0] / 2, o2 = u2 ? "right" : "left") : (l2 = l2 + i2 + (u2 ? 1 : -1) * r2[1] / 2, a2 = u2 ? "bottom" : "top"), { x: s2, y: l2, align: o2, verticalAlign: a2 };
    }, n2.prototype._renderWeekText = function(t3, e2, n3, i2, r2) {
      var o2 = t3.getModel("dayLabel");
      if (o2.get("show")) {
        var a2 = t3.coordinateSystem, s2 = o2.get("position"), l2 = o2.get("nameMap"), u2 = o2.get("margin"), h2 = a2.getFirstDayOfWeek();
        if (!l2 || X(l2))
          l2 && (e2 = Rc(l2) || e2), l2 = e2.get(["time", "dayOfWeekShort"]) || E(e2.get(["time", "dayOfWeekAbbr"]), function(t4) {
            return t4[0];
          });
        var c2 = a2.getNextNDay(n3.end.time, 7 - n3.lweek).time, p2 = [a2.getCellWidth(), a2.getCellHeight()];
        u2 = Xr(u2, Math.min(p2[1], p2[0])), "start" === s2 && (c2 = a2.getNextNDay(n3.start.time, -(7 + n3.fweek)).time, u2 = -u2);
        for (var d2 = 0; d2 < 7; d2++) {
          var f2, g2 = a2.getNextNDay(c2, d2), y2 = a2.dataToRect([g2.time], false).center;
          f2 = Math.abs((d2 + h2) % 7);
          var v2 = new Bs({ z2: 30, style: D(ec(o2, { text: l2[f2] }), this._weekTextPositionControl(y2, i2, s2, u2, p2)) });
          r2.add(v2);
        }
      }
    }, n2.type = "calendar", n2;
  }(Ig);
  var WE = 864e5;
  var HE = function() {
    function t2(e2, n2, i2) {
      this.type = "calendar", this.dimensions = t2.dimensions, this.getDimensionsInfo = t2.getDimensionsInfo, this._model = e2;
    }
    return t2.getDimensionsInfo = function() {
      return [{ name: "time", type: "time" }, "value"];
    }, t2.prototype.getRangeInfo = function() {
      return this._rangeInfo;
    }, t2.prototype.getModel = function() {
      return this._model;
    }, t2.prototype.getRect = function() {
      return this._rect;
    }, t2.prototype.getCellWidth = function() {
      return this._sw;
    }, t2.prototype.getCellHeight = function() {
      return this._sh;
    }, t2.prototype.getOrient = function() {
      return this._orient;
    }, t2.prototype.getFirstDayOfWeek = function() {
      return this._firstDayOfWeek;
    }, t2.prototype.getDateInfo = function(t3) {
      var e2 = (t3 = io(t3)).getFullYear(), n2 = t3.getMonth() + 1, i2 = n2 < 10 ? "0" + n2 : "" + n2, r2 = t3.getDate(), o2 = r2 < 10 ? "0" + r2 : "" + r2, a2 = t3.getDay();
      return { y: e2 + "", m: i2, d: o2, day: a2 = Math.abs((a2 + 7 - this.getFirstDayOfWeek()) % 7), time: t3.getTime(), formatedDate: e2 + "-" + i2 + "-" + o2, date: t3 };
    }, t2.prototype.getNextNDay = function(t3, e2) {
      return 0 === (e2 = e2 || 0) || (t3 = new Date(this.getDateInfo(t3).time)).setDate(t3.getDate() + e2), this.getDateInfo(t3);
    }, t2.prototype.update = function(t3, e2) {
      this._firstDayOfWeek = +this._model.getModel("dayLabel").get("firstDay"), this._orient = this._model.get("orient"), this._lineWidth = this._model.getModel("itemStyle").getItemStyle().lineWidth || 0, this._rangeInfo = this._getRangeInfo(this._initRangeOption());
      var n2 = this._rangeInfo.weeks || 1, i2 = ["width", "height"], r2 = this._model.getCellSize().slice(), o2 = this._model.getBoxLayoutParams(), a2 = "horizontal" === this._orient ? [n2, 7] : [7, n2];
      N([0, 1], function(t4) {
        u2(r2, t4) && (o2[i2[t4]] = r2[t4] * a2[t4]);
      });
      var s2 = { width: e2.getWidth(), height: e2.getHeight() }, l2 = this._rect = Tp(o2, s2);
      function u2(t4, e3) {
        return null != t4[e3] && "auto" !== t4[e3];
      }
      N([0, 1], function(t4) {
        u2(r2, t4) || (r2[t4] = l2[i2[t4]] / a2[t4]);
      }), this._sw = r2[0], this._sh = r2[1];
    }, t2.prototype.dataToPoint = function(t3, e2) {
      H(t3) && (t3 = t3[0]), null == e2 && (e2 = true);
      var n2 = this.getDateInfo(t3), i2 = this._rangeInfo, r2 = n2.formatedDate;
      if (e2 && !(n2.time >= i2.start.time && n2.time < i2.end.time + WE))
        return [NaN, NaN];
      var o2 = n2.day, a2 = this._getRangeInfo([i2.start.time, r2]).nthWeek;
      return "vertical" === this._orient ? [this._rect.x + o2 * this._sw + this._sw / 2, this._rect.y + a2 * this._sh + this._sh / 2] : [this._rect.x + a2 * this._sw + this._sw / 2, this._rect.y + o2 * this._sh + this._sh / 2];
    }, t2.prototype.pointToData = function(t3) {
      var e2 = this.pointToDate(t3);
      return e2 && e2.time;
    }, t2.prototype.dataToRect = function(t3, e2) {
      var n2 = this.dataToPoint(t3, e2);
      return { contentShape: { x: n2[0] - (this._sw - this._lineWidth) / 2, y: n2[1] - (this._sh - this._lineWidth) / 2, width: this._sw - this._lineWidth, height: this._sh - this._lineWidth }, center: n2, tl: [n2[0] - this._sw / 2, n2[1] - this._sh / 2], tr: [n2[0] + this._sw / 2, n2[1] - this._sh / 2], br: [n2[0] + this._sw / 2, n2[1] + this._sh / 2], bl: [n2[0] - this._sw / 2, n2[1] + this._sh / 2] };
    }, t2.prototype.pointToDate = function(t3) {
      var e2 = Math.floor((t3[0] - this._rect.x) / this._sw) + 1, n2 = Math.floor((t3[1] - this._rect.y) / this._sh) + 1, i2 = this._rangeInfo.range;
      return "vertical" === this._orient ? this._getDateByWeeksAndDay(n2, e2 - 1, i2) : this._getDateByWeeksAndDay(e2, n2 - 1, i2);
    }, t2.prototype.convertToPixel = function(t3, e2, n2) {
      var i2 = YE(e2);
      return i2 === this ? i2.dataToPoint(n2) : null;
    }, t2.prototype.convertFromPixel = function(t3, e2, n2) {
      var i2 = YE(e2);
      return i2 === this ? i2.pointToData(n2) : null;
    }, t2.prototype.containPoint = function(t3) {
      return formatAppLog("warn", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Not implemented."), false;
    }, t2.prototype._initRangeOption = function() {
      var t3, e2 = this._model.get("range");
      if (H(e2) && 1 === e2.length && (e2 = e2[0]), H(e2))
        t3 = e2;
      else {
        var n2 = e2.toString();
        if (/^\d{4}$/.test(n2) && (t3 = [n2 + "-01-01", n2 + "-12-31"]), /^\d{4}[\/|-]\d{1,2}$/.test(n2)) {
          var i2 = this.getDateInfo(n2), r2 = i2.date;
          r2.setMonth(r2.getMonth() + 1);
          var o2 = this.getNextNDay(r2, -1);
          t3 = [i2.formatedDate, o2.formatedDate];
        }
        /^\d{4}[\/|-]\d{1,2}[\/|-]\d{1,2}$/.test(n2) && (t3 = [n2, n2]);
      }
      if (!t3)
        return e2;
      var a2 = this._getRangeInfo(t3);
      return a2.start.time > a2.end.time && t3.reverse(), t3;
    }, t2.prototype._getRangeInfo = function(t3) {
      var e2, n2 = [this.getDateInfo(t3[0]), this.getDateInfo(t3[1])];
      n2[0].time > n2[1].time && (e2 = true, n2.reverse());
      var i2 = Math.floor(n2[1].time / WE) - Math.floor(n2[0].time / WE) + 1, r2 = new Date(n2[0].time), o2 = r2.getDate(), a2 = n2[1].date.getDate();
      r2.setDate(o2 + i2 - 1);
      var s2 = r2.getDate();
      if (s2 !== a2)
        for (var l2 = r2.getTime() - n2[1].time > 0 ? 1 : -1; (s2 = r2.getDate()) !== a2 && (r2.getTime() - n2[1].time) * l2 > 0; )
          i2 -= l2, r2.setDate(s2 - l2);
      var u2 = Math.floor((i2 + n2[0].day + 6) / 7), h2 = e2 ? 1 - u2 : u2 - 1;
      return e2 && n2.reverse(), { range: [n2[0].formatedDate, n2[1].formatedDate], start: n2[0], end: n2[1], allDay: i2, weeks: u2, nthWeek: h2, fweek: n2[0].day, lweek: n2[1].day };
    }, t2.prototype._getDateByWeeksAndDay = function(t3, e2, n2) {
      var i2 = this._getRangeInfo(n2);
      if (t3 > i2.weeks || 0 === t3 && e2 < i2.fweek || t3 === i2.weeks && e2 > i2.lweek)
        return null;
      var r2 = 7 * (t3 - 1) - i2.fweek + e2, o2 = new Date(i2.start.time);
      return o2.setDate(+i2.start.d + r2), this.getDateInfo(o2);
    }, t2.create = function(e2, n2) {
      var i2 = [];
      return e2.eachComponent("calendar", function(r2) {
        var o2 = new t2(r2);
        i2.push(o2), r2.coordinateSystem = o2;
      }), e2.eachSeries(function(t3) {
        "calendar" === t3.get("coordinateSystem") && (t3.coordinateSystem = i2[t3.get("calendarIndex") || 0]);
      }), i2;
    }, t2.dimensions = ["time", "value"], t2;
  }();
  function YE(t2) {
    var e2 = t2.calendarModel, n2 = t2.seriesModel;
    return e2 ? e2.coordinateSystem : n2 ? n2.coordinateSystem : null;
  }
  function XE(t2, e2) {
    var n2;
    return N(e2, function(e3) {
      null != t2[e3] && "auto" !== t2[e3] && (n2 = true);
    }), n2;
  }
  var UE = ["transition", "enterFrom", "leaveTo"];
  var ZE = UE.concat(["enterAnimation", "updateAnimation", "leaveAnimation"]);
  function jE(t2, e2, n2) {
    if (n2 && (!t2[n2] && e2[n2] && (t2[n2] = {}), t2 = t2[n2], e2 = e2[n2]), t2 && e2)
      for (var i2 = n2 ? UE : ZE, r2 = 0; r2 < i2.length; r2++) {
        var o2 = i2[r2];
        null == t2[o2] && null != e2[o2] && (t2[o2] = e2[o2]);
      }
  }
  var qE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.preventAutoZ = true, e2;
    }
    return e(n2, t2), n2.prototype.mergeOption = function(e2, n3) {
      var i2 = this.option.elements;
      this.option.elements = null, t2.prototype.mergeOption.call(this, e2, n3), this.option.elements = i2;
    }, n2.prototype.optionUpdated = function(t3, e2) {
      var n3 = this.option, i2 = (e2 ? n3 : t3).elements, r2 = n3.elements = e2 ? [] : n3.elements, o2 = [];
      this._flatten(i2, o2, null);
      var a2 = Io(r2, o2, "normalMerge"), s2 = this._elOptionsToUpdate = [];
      N(a2, function(t4, e3) {
        var n4 = t4.newOption;
        n4 && (s2.push(n4), function(t5, e4) {
          var n5 = t5.existing;
          if (e4.id = t5.keyInfo.id, !e4.type && n5 && (e4.type = n5.type), null == e4.parentId) {
            var i3 = e4.parentOption;
            i3 ? e4.parentId = i3.id : n5 && (e4.parentId = n5.parentId);
          }
          e4.parentOption = null;
        }(t4, n4), function(t5, e4, n5) {
          var i3 = D({}, n5), r3 = t5[e4], o3 = n5.$action || "merge";
          "merge" === o3 ? r3 ? (T(r3, i3, true), Ap(r3, i3, { ignoreSize: true }), Lp(n5, r3), jE(n5, r3), jE(n5, r3, "shape"), jE(n5, r3, "style"), jE(n5, r3, "extra"), n5.clipPath = r3.clipPath) : t5[e4] = i3 : "replace" === o3 ? t5[e4] = i3 : "remove" === o3 && r3 && (t5[e4] = null);
        }(r2, e3, n4), function(t5, e4) {
          if (t5 && (t5.hv = e4.hv = [XE(e4, ["left", "right"]), XE(e4, ["top", "bottom"])], "group" === t5.type)) {
            var n5 = t5, i3 = e4;
            null == n5.width && (n5.width = i3.width = 0), null == n5.height && (n5.height = i3.height = 0);
          }
        }(r2[e3], n4));
      }, this), n3.elements = V(r2, function(t4) {
        return t4 && delete t4.$action, null != t4;
      });
    }, n2.prototype._flatten = function(t3, e2, n3) {
      N(t3, function(t4) {
        if (t4) {
          n3 && (t4.parentOption = n3), e2.push(t4);
          var i2 = t4.children;
          i2 && i2.length && this._flatten(i2, e2, t4), delete t4.children;
        }
      }, this);
    }, n2.prototype.useElOptionsToUpdate = function() {
      var t3 = this._elOptionsToUpdate;
      return this._elOptionsToUpdate = null, t3;
    }, n2.type = "graphic", n2.defaultOption = { elements: [] }, n2;
  }(Op);
  var KE = { path: null, compoundPath: null, group: Er, image: As, text: Bs };
  var $E = Po();
  var JE = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      this._elMap = gt();
    }, n2.prototype.render = function(t3, e2, n3) {
      t3 !== this._lastGraphicModel && this._clear(), this._lastGraphicModel = t3, this._updateElements(t3), this._relocate(t3, n3);
    }, n2.prototype._updateElements = function(t3) {
      var e2 = t3.useElOptionsToUpdate();
      if (e2) {
        var n3 = this._elMap, i2 = this.group, r2 = t3.get("z"), o2 = t3.get("zlevel");
        N(e2, function(e3) {
          var a2 = Do(e3.id, null), s2 = null != a2 ? n3.get(a2) : null, l2 = Do(e3.parentId, null), u2 = null != l2 ? n3.get(l2) : i2, h2 = e3.type, c2 = e3.style;
          "text" === h2 && c2 && e3.hv && e3.hv[1] && (c2.textVerticalAlign = c2.textBaseline = c2.verticalAlign = c2.align = null);
          var p2 = e3.textContent, d2 = e3.textConfig;
          if (c2 && aR(c2, h2, !!d2, !!p2)) {
            var f2 = sR(c2, h2, true);
            !d2 && f2.textConfig && (d2 = e3.textConfig = f2.textConfig), !p2 && f2.textContent && (p2 = f2.textContent);
          }
          var g2 = function(t4) {
            return t4 = D({}, t4), N(["id", "parentId", "$action", "hv", "bounding", "textContent", "clipPath"].concat(wp), function(e4) {
              delete t4[e4];
            }), t4;
          }(e3);
          var y2 = e3.$action || "merge", v2 = "merge" === y2, m2 = "replace" === y2;
          if (v2) {
            var x2 = s2;
            (T2 = !s2) ? x2 = tz(a2, u2, e3.type, n3) : (x2 && ($E(x2).isNew = false), DR(x2)), x2 && (yR(x2, g2, t3, { isInit: T2 }), nz(x2, e3, r2, o2));
          } else if (m2) {
            ez(s2, e3, n3, t3);
            var _2 = tz(a2, u2, e3.type, n3);
            _2 && (yR(_2, g2, t3, { isInit: true }), nz(_2, e3, r2, o2));
          } else
            "remove" === y2 && (vR(s2, e3), ez(s2, e3, n3, t3));
          var b2 = n3.get(a2);
          if (b2 && p2)
            if (v2) {
              var w2 = b2.getTextContent();
              w2 ? w2.attr(p2) : b2.setTextContent(new Bs(p2));
            } else
              m2 && b2.setTextContent(new Bs(p2));
          if (b2) {
            var S2 = e3.clipPath;
            if (S2) {
              var M2 = S2.type, I2 = void 0, T2 = false;
              if (v2) {
                var C2 = b2.getClipPath();
                I2 = (T2 = !C2 || $E(C2).type !== M2) ? QE(M2) : C2;
              } else
                m2 && (T2 = true, I2 = QE(M2));
              b2.setClipPath(I2), yR(I2, S2, t3, { isInit: T2 }), AR(I2, S2.keyframeAnimation, t3);
            }
            var A2 = $E(b2);
            b2.setTextConfig(d2), A2.option = e3, function(t4, e4, n4) {
              var i3 = Js(t4).eventData;
              t4.silent || t4.ignore || i3 || (i3 = Js(t4).eventData = { componentType: "graphic", componentIndex: e4.componentIndex, name: t4.name });
              i3 && (i3.info = n4.info);
            }(b2, t3, e3), Uh({ el: b2, componentModel: t3, itemName: b2.name, itemTooltipOption: e3.tooltip }), AR(b2, e3.keyframeAnimation, t3);
          }
        });
      }
    }, n2.prototype._relocate = function(t3, e2) {
      for (var n3 = t3.option.elements, i2 = this.group, r2 = this._elMap, o2 = e2.getWidth(), a2 = e2.getHeight(), s2 = ["x", "y"], l2 = 0; l2 < n3.length; l2++) {
        if ((f2 = null != (d2 = Do((p2 = n3[l2]).id, null)) ? r2.get(d2) : null) && f2.isGroup) {
          var u2 = (g2 = f2.parent) === i2, h2 = $E(f2), c2 = $E(g2);
          h2.width = Xr(h2.option.width, u2 ? o2 : c2.width) || 0, h2.height = Xr(h2.option.height, u2 ? a2 : c2.height) || 0;
        }
      }
      for (l2 = n3.length - 1; l2 >= 0; l2--) {
        var p2, d2, f2;
        if (f2 = null != (d2 = Do((p2 = n3[l2]).id, null)) ? r2.get(d2) : null) {
          var g2 = f2.parent, y2 = (c2 = $E(g2), {}), v2 = Cp(f2, p2, g2 === i2 ? { width: o2, height: a2 } : { width: c2.width, height: c2.height }, null, { hv: p2.hv, boundingMode: p2.bounding }, y2);
          if (!$E(f2).isNew && v2) {
            for (var m2 = p2.transition, x2 = {}, _2 = 0; _2 < s2.length; _2++) {
              var b2 = s2[_2], w2 = y2[b2];
              m2 && (xR(m2) || L(m2, b2) >= 0) ? x2[b2] = w2 : f2[b2] = w2;
            }
            dh(f2, x2, t3, 0);
          } else
            f2.attr(y2);
        }
      }
    }, n2.prototype._clear = function() {
      var t3 = this, e2 = this._elMap;
      e2.each(function(n3) {
        ez(n3, $E(n3).option, e2, t3._lastGraphicModel);
      }), this._elMap = gt();
    }, n2.prototype.dispose = function() {
      this._clear();
    }, n2.type = "graphic", n2;
  }(Ig);
  function QE(t2) {
    var e2 = xt(KE, t2) ? KE[t2] : Ch(t2);
    var n2 = new e2({});
    return $E(n2).type = t2, n2;
  }
  function tz(t2, e2, n2, i2) {
    var r2 = QE(n2);
    return e2.add(r2), i2.set(t2, r2), $E(r2).id = t2, $E(r2).isNew = true, r2;
  }
  function ez(t2, e2, n2, i2) {
    t2 && t2.parent && ("group" === t2.type && t2.traverse(function(t3) {
      ez(t3, e2, n2, i2);
    }), mR(t2, e2, i2), n2.removeKey($E(t2).id));
  }
  function nz(t2, e2, n2, i2) {
    t2.isGroup || N([["cursor", wa.prototype.cursor], ["zlevel", i2 || 0], ["z", n2 || 0], ["z2", 0]], function(n3) {
      var i3 = n3[0];
      xt(e2, i3) ? t2[i3] = it(e2[i3], n3[1]) : null == t2[i3] && (t2[i3] = n3[1]);
    }), N(F(e2), function(n3) {
      if (0 === n3.indexOf("on")) {
        var i3 = e2[n3];
        t2[n3] = Y(i3) ? i3 : null;
      }
    }), xt(e2, "draggable") && (t2.draggable = e2.draggable), null != e2.name && (t2.name = e2.name), null != e2.id && (t2.id = e2.id);
  }
  var iz = ["x", "y", "radius", "angle", "single"];
  var rz = ["cartesian2d", "polar", "singleAxis"];
  function oz(t2) {
    return t2 + "Axis";
  }
  function az(t2, e2) {
    var n2, i2 = gt(), r2 = [], o2 = gt();
    t2.eachComponent({ mainType: "dataZoom", query: e2 }, function(t3) {
      o2.get(t3.uid) || s2(t3);
    });
    do {
      n2 = false, t2.eachComponent("dataZoom", a2);
    } while (n2);
    function a2(t3) {
      !o2.get(t3.uid) && function(t4) {
        var e3 = false;
        return t4.eachTargetAxis(function(t5, n3) {
          var r3 = i2.get(t5);
          r3 && r3[n3] && (e3 = true);
        }), e3;
      }(t3) && (s2(t3), n2 = true);
    }
    function s2(t3) {
      o2.set(t3.uid, true), r2.push(t3), t3.eachTargetAxis(function(t4, e3) {
        (i2.get(t4) || i2.set(t4, []))[e3] = true;
      });
    }
    return r2;
  }
  function sz(t2) {
    var e2 = t2.ecModel, n2 = { infoList: [], infoMap: gt() };
    return t2.eachTargetAxis(function(t3, i2) {
      var r2 = e2.getComponent(oz(t3), i2);
      if (r2) {
        var o2 = r2.getCoordSysModel();
        if (o2) {
          var a2 = o2.uid, s2 = n2.infoMap.get(a2);
          s2 || (s2 = { model: o2, axisModels: [] }, n2.infoList.push(s2), n2.infoMap.set(a2, s2)), s2.axisModels.push(r2);
        }
      }
    }), n2;
  }
  var lz = function() {
    function t2() {
      this.indexList = [], this.indexMap = [];
    }
    return t2.prototype.add = function(t3) {
      this.indexMap[t3] || (this.indexList.push(t3), this.indexMap[t3] = true);
    }, t2;
  }();
  var uz = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._autoThrottle = true, e2._noTarget = true, e2._rangePropMode = ["percent", "percent"], e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      var i2 = hz(t3);
      this.settledOption = i2, this.mergeDefaultAndTheme(t3, n3), this._doInit(i2);
    }, n2.prototype.mergeOption = function(t3) {
      var e2 = hz(t3);
      T(this.option, t3, true), T(this.settledOption, e2, true), this._doInit(e2);
    }, n2.prototype._doInit = function(t3) {
      var e2 = this.option;
      this._setDefaultThrottle(t3), this._updateRangeUse(t3);
      var n3 = this.settledOption;
      N([["start", "startValue"], ["end", "endValue"]], function(t4, i2) {
        "value" === this._rangePropMode[i2] && (e2[t4[0]] = n3[t4[0]] = null);
      }, this), this._resetTarget();
    }, n2.prototype._resetTarget = function() {
      var t3 = this.get("orient", true), e2 = this._targetAxisInfoMap = gt();
      this._fillSpecifiedTargetAxis(e2) ? this._orient = t3 || this._makeAutoOrientByTargetAxis() : (this._orient = t3 || "horizontal", this._fillAutoTargetAxisByOrient(e2, this._orient)), this._noTarget = true, e2.each(function(t4) {
        t4.indexList.length && (this._noTarget = false);
      }, this);
    }, n2.prototype._fillSpecifiedTargetAxis = function(t3) {
      var e2 = false;
      return N(iz, function(n3) {
        var i2 = this.getReferringComponents(oz(n3), zo);
        if (i2.specified) {
          e2 = true;
          var r2 = new lz();
          N(i2.models, function(t4) {
            r2.add(t4.componentIndex);
          }), t3.set(n3, r2);
        }
      }, this), e2;
    }, n2.prototype._fillAutoTargetAxisByOrient = function(t3, e2) {
      var n3 = this.ecModel, i2 = true;
      if (i2) {
        var r2 = "vertical" === e2 ? "y" : "x";
        o2(n3.findComponents({ mainType: r2 + "Axis" }), r2);
      }
      i2 && o2(n3.findComponents({ mainType: "singleAxis", filter: function(t4) {
        return t4.get("orient", true) === e2;
      } }), "single");
      function o2(e3, n4) {
        var r3 = e3[0];
        if (r3) {
          var o3 = new lz();
          if (o3.add(r3.componentIndex), t3.set(n4, o3), i2 = false, "x" === n4 || "y" === n4) {
            var a2 = r3.getReferringComponents("grid", Eo).models[0];
            a2 && N(e3, function(t4) {
              r3.componentIndex !== t4.componentIndex && a2 === t4.getReferringComponents("grid", Eo).models[0] && o3.add(t4.componentIndex);
            });
          }
        }
      }
      i2 && N(iz, function(e3) {
        if (i2) {
          var r3 = n3.findComponents({ mainType: oz(e3), filter: function(t4) {
            return "category" === t4.get("type", true);
          } });
          if (r3[0]) {
            var o3 = new lz();
            o3.add(r3[0].componentIndex), t3.set(e3, o3), i2 = false;
          }
        }
      }, this);
    }, n2.prototype._makeAutoOrientByTargetAxis = function() {
      var t3;
      return this.eachTargetAxis(function(e2) {
        !t3 && (t3 = e2);
      }, this), "y" === t3 ? "vertical" : "horizontal";
    }, n2.prototype._setDefaultThrottle = function(t3) {
      if (t3.hasOwnProperty("throttle") && (this._autoThrottle = false), this._autoThrottle) {
        var e2 = this.ecModel.option;
        this.option.throttle = e2.animation && e2.animationDurationUpdate > 0 ? 100 : 20;
      }
    }, n2.prototype._updateRangeUse = function(t3) {
      var e2 = this._rangePropMode, n3 = this.get("rangeMode");
      N([["start", "startValue"], ["end", "endValue"]], function(i2, r2) {
        var o2 = null != t3[i2[0]], a2 = null != t3[i2[1]];
        o2 && !a2 ? e2[r2] = "percent" : !o2 && a2 ? e2[r2] = "value" : n3 ? e2[r2] = n3[r2] : o2 && (e2[r2] = "percent");
      });
    }, n2.prototype.noTarget = function() {
      return this._noTarget;
    }, n2.prototype.getFirstTargetAxisModel = function() {
      var t3;
      return this.eachTargetAxis(function(e2, n3) {
        null == t3 && (t3 = this.ecModel.getComponent(oz(e2), n3));
      }, this), t3;
    }, n2.prototype.eachTargetAxis = function(t3, e2) {
      this._targetAxisInfoMap.each(function(n3, i2) {
        N(n3.indexList, function(n4) {
          t3.call(e2, i2, n4);
        });
      });
    }, n2.prototype.getAxisProxy = function(t3, e2) {
      var n3 = this.getAxisModel(t3, e2);
      if (n3)
        return n3.__dzAxisProxy;
    }, n2.prototype.getAxisModel = function(t3, e2) {
      var n3 = this._targetAxisInfoMap.get(t3);
      if (n3 && n3.indexMap[e2])
        return this.ecModel.getComponent(oz(t3), e2);
    }, n2.prototype.setRawRange = function(t3) {
      var e2 = this.option, n3 = this.settledOption;
      N([["start", "startValue"], ["end", "endValue"]], function(i2) {
        null == t3[i2[0]] && null == t3[i2[1]] || (e2[i2[0]] = n3[i2[0]] = t3[i2[0]], e2[i2[1]] = n3[i2[1]] = t3[i2[1]]);
      }, this), this._updateRangeUse(t3);
    }, n2.prototype.setCalculatedRange = function(t3) {
      var e2 = this.option;
      N(["start", "startValue", "end", "endValue"], function(n3) {
        e2[n3] = t3[n3];
      });
    }, n2.prototype.getPercentRange = function() {
      var t3 = this.findRepresentativeAxisProxy();
      if (t3)
        return t3.getDataPercentWindow();
    }, n2.prototype.getValueRange = function(t3, e2) {
      if (null != t3 || null != e2)
        return this.getAxisProxy(t3, e2).getDataValueWindow();
      var n3 = this.findRepresentativeAxisProxy();
      return n3 ? n3.getDataValueWindow() : void 0;
    }, n2.prototype.findRepresentativeAxisProxy = function(t3) {
      if (t3)
        return t3.__dzAxisProxy;
      for (var e2, n3 = this._targetAxisInfoMap.keys(), i2 = 0; i2 < n3.length; i2++)
        for (var r2 = n3[i2], o2 = this._targetAxisInfoMap.get(r2), a2 = 0; a2 < o2.indexList.length; a2++) {
          var s2 = this.getAxisProxy(r2, o2.indexList[a2]);
          if (s2.hostedBy(this))
            return s2;
          e2 || (e2 = s2);
        }
      return e2;
    }, n2.prototype.getRangePropMode = function() {
      return this._rangePropMode.slice();
    }, n2.prototype.getOrient = function() {
      return this._orient;
    }, n2.type = "dataZoom", n2.dependencies = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "series", "toolbox"], n2.defaultOption = { z: 4, filterMode: "filter", start: 0, end: 100 }, n2;
  }(Op);
  function hz(t2) {
    var e2 = {};
    return N(["start", "end", "startValue", "endValue", "throttle"], function(n2) {
      t2.hasOwnProperty(n2) && (e2[n2] = t2[n2]);
    }), e2;
  }
  var cz = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "dataZoom.select", n2;
  }(uz);
  var pz = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      this.dataZoomModel = t3, this.ecModel = e2, this.api = n3;
    }, n2.type = "dataZoom", n2;
  }(Ig);
  var dz = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "dataZoom.select", n2;
  }(pz);
  var fz = N;
  var gz = Zr;
  var yz = function() {
    function t2(t3, e2, n2, i2) {
      this._dimName = t3, this._axisIndex = e2, this.ecModel = i2, this._dataZoomModel = n2;
    }
    return t2.prototype.hostedBy = function(t3) {
      return this._dataZoomModel === t3;
    }, t2.prototype.getDataValueWindow = function() {
      return this._valueWindow.slice();
    }, t2.prototype.getDataPercentWindow = function() {
      return this._percentWindow.slice();
    }, t2.prototype.getTargetSeriesModels = function() {
      var t3 = [];
      return this.ecModel.eachSeries(function(e2) {
        if (function(t4) {
          var e3 = t4.get("coordinateSystem");
          return L(rz, e3) >= 0;
        }(e2)) {
          var n2 = oz(this._dimName), i2 = e2.getReferringComponents(n2, Eo).models[0];
          i2 && this._axisIndex === i2.componentIndex && t3.push(e2);
        }
      }, this), t3;
    }, t2.prototype.getAxisModel = function() {
      return this.ecModel.getComponent(this._dimName + "Axis", this._axisIndex);
    }, t2.prototype.getMinMaxSpan = function() {
      return I(this._minMaxSpan);
    }, t2.prototype.calculateDataWindow = function(t3) {
      var e2, n2 = this._dataExtent, i2 = this.getAxisModel().axis.scale, r2 = this._dataZoomModel.getRangePropMode(), o2 = [0, 100], a2 = [], s2 = [];
      fz(["start", "end"], function(l3, u3) {
        var h2 = t3[l3], c2 = t3[l3 + "Value"];
        "percent" === r2[u3] ? (null == h2 && (h2 = o2[u3]), c2 = i2.parse(Yr(h2, o2, n2))) : (e2 = true, h2 = Yr(c2 = null == c2 ? n2[u3] : i2.parse(c2), n2, o2)), s2[u3] = null == c2 || isNaN(c2) ? n2[u3] : c2, a2[u3] = null == h2 || isNaN(h2) ? o2[u3] : h2;
      }), gz(s2), gz(a2);
      var l2 = this._minMaxSpan;
      function u2(t4, e3, n3, r3, o3) {
        var a3 = o3 ? "Span" : "ValueSpan";
        Fk(0, t4, n3, "all", l2["min" + a3], l2["max" + a3]);
        for (var s3 = 0; s3 < 2; s3++)
          e3[s3] = Yr(t4[s3], n3, r3, true), o3 && (e3[s3] = i2.parse(e3[s3]));
      }
      return e2 ? u2(s2, a2, n2, o2, false) : u2(a2, s2, o2, n2, true), { valueWindow: s2, percentWindow: a2 };
    }, t2.prototype.reset = function(t3) {
      if (t3 === this._dataZoomModel) {
        var e2 = this.getTargetSeriesModels();
        this._dataExtent = function(t4, e3, n3) {
          var i2 = [1 / 0, -1 / 0];
          fz(n3, function(t5) {
            !function(t6, e4, n4) {
              e4 && N(O_(e4, n4), function(n5) {
                var i3 = e4.getApproximateExtent(n5);
                i3[0] < t6[0] && (t6[0] = i3[0]), i3[1] > t6[1] && (t6[1] = i3[1]);
              });
            }(i2, t5.getData(), e3);
          });
          var r2 = t4.getAxisModel(), o2 = S_(r2.axis.scale, r2, i2).calculate();
          return [o2.min, o2.max];
        }(this, this._dimName, e2), this._updateMinMaxSpan();
        var n2 = this.calculateDataWindow(t3.settledOption);
        this._valueWindow = n2.valueWindow, this._percentWindow = n2.percentWindow, this._setAxisModel();
      }
    }, t2.prototype.filterData = function(t3, e2) {
      if (t3 === this._dataZoomModel) {
        var n2 = this._dimName, i2 = this.getTargetSeriesModels(), r2 = t3.get("filterMode"), o2 = this._valueWindow;
        "none" !== r2 && fz(i2, function(t4) {
          var e3 = t4.getData(), i3 = e3.mapDimensionsAll(n2);
          if (i3.length) {
            if ("weakFilter" === r2) {
              var a2 = e3.getStore(), s2 = E(i3, function(t5) {
                return e3.getDimensionIndex(t5);
              }, e3);
              e3.filterSelf(function(t5) {
                for (var e4, n3, r3, l2 = 0; l2 < i3.length; l2++) {
                  var u2 = a2.get(s2[l2], t5), h2 = !isNaN(u2), c2 = u2 < o2[0], p2 = u2 > o2[1];
                  if (h2 && !c2 && !p2)
                    return true;
                  h2 && (r3 = true), c2 && (e4 = true), p2 && (n3 = true);
                }
                return r3 && e4 && n3;
              });
            } else
              fz(i3, function(n3) {
                if ("empty" === r2)
                  t4.setData(e3 = e3.map(n3, function(t5) {
                    return function(t6) {
                      return t6 >= o2[0] && t6 <= o2[1];
                    }(t5) ? t5 : NaN;
                  }));
                else {
                  var i4 = {};
                  i4[n3] = o2, e3.selectRange(i4);
                }
              });
            fz(i3, function(t5) {
              e3.setApproximateExtent(o2, t5);
            });
          }
        });
      }
    }, t2.prototype._updateMinMaxSpan = function() {
      var t3 = this._minMaxSpan = {}, e2 = this._dataZoomModel, n2 = this._dataExtent;
      fz(["min", "max"], function(i2) {
        var r2 = e2.get(i2 + "Span"), o2 = e2.get(i2 + "ValueSpan");
        null != o2 && (o2 = this.getAxisModel().axis.scale.parse(o2)), null != o2 ? r2 = Yr(n2[0] + o2, n2, [0, 100], true) : null != r2 && (o2 = Yr(r2, [0, 100], n2, true) - n2[0]), t3[i2 + "Span"] = r2, t3[i2 + "ValueSpan"] = o2;
      }, this);
    }, t2.prototype._setAxisModel = function() {
      var t3 = this.getAxisModel(), e2 = this._percentWindow, n2 = this._valueWindow;
      if (e2) {
        var i2 = Kr(n2, [0, 500]);
        i2 = Math.min(i2, 20);
        var r2 = t3.axis.scale.rawExtentInfo;
        0 !== e2[0] && r2.setDeterminedMinMax("min", +n2[0].toFixed(i2)), 100 !== e2[1] && r2.setDeterminedMinMax("max", +n2[1].toFixed(i2)), r2.freeze();
      }
    }, t2;
  }();
  var vz = { getTargetSeries: function(t2) {
    function e2(e3) {
      t2.eachComponent("dataZoom", function(n3) {
        n3.eachTargetAxis(function(i3, r2) {
          var o2 = t2.getComponent(oz(i3), r2);
          e3(i3, r2, o2, n3);
        });
      });
    }
    e2(function(t3, e3, n3, i3) {
      n3.__dzAxisProxy = null;
    });
    var n2 = [];
    e2(function(e3, i3, r2, o2) {
      r2.__dzAxisProxy || (r2.__dzAxisProxy = new yz(e3, i3, o2, t2), n2.push(r2.__dzAxisProxy));
    });
    var i2 = gt();
    return N(n2, function(t3) {
      N(t3.getTargetSeriesModels(), function(t4) {
        i2.set(t4.uid, t4);
      });
    }), i2;
  }, overallReset: function(t2, e2) {
    t2.eachComponent("dataZoom", function(t3) {
      t3.eachTargetAxis(function(e3, n2) {
        t3.getAxisProxy(e3, n2).reset(t3);
      }), t3.eachTargetAxis(function(n2, i2) {
        t3.getAxisProxy(n2, i2).filterData(t3, e2);
      });
    }), t2.eachComponent("dataZoom", function(t3) {
      var e3 = t3.findRepresentativeAxisProxy();
      if (e3) {
        var n2 = e3.getDataPercentWindow(), i2 = e3.getDataValueWindow();
        t3.setCalculatedRange({ start: n2[0], end: n2[1], startValue: i2[0], endValue: i2[1] });
      }
    });
  } };
  var mz = false;
  function xz(t2) {
    mz || (mz = true, t2.registerProcessor(t2.PRIORITY.PROCESSOR.FILTER, vz), function(t3) {
      t3.registerAction("dataZoom", function(t4, e2) {
        N(az(e2, t4), function(e3) {
          e3.setRawRange({ start: t4.start, end: t4.end, startValue: t4.startValue, endValue: t4.endValue });
        });
      });
    }(t2), t2.registerSubTypeDefaulter("dataZoom", function() {
      return "slider";
    }));
  }
  function _z(t2) {
    t2.registerComponentModel(cz), t2.registerComponentView(dz), xz(t2);
  }
  var bz = function() {
  };
  var wz = {};
  function Sz(t2, e2) {
    wz[t2] = e2;
  }
  function Mz(t2) {
    return wz[t2];
  }
  var Iz = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function() {
      t2.prototype.optionUpdated.apply(this, arguments);
      var e2 = this.ecModel;
      N(this.option.feature, function(t3, n3) {
        var i2 = Mz(n3);
        i2 && (i2.getDefaultOption && (i2.defaultOption = i2.getDefaultOption(e2)), T(t3, i2.defaultOption));
      });
    }, n2.type = "toolbox", n2.layoutMode = { type: "box", ignoreSize: true }, n2.defaultOption = { show: true, z: 6, orient: "horizontal", left: "right", top: "top", backgroundColor: "transparent", borderColor: "#ccc", borderRadius: 0, borderWidth: 0, padding: 5, itemSize: 15, itemGap: 8, showTitle: true, iconStyle: { borderColor: "#666", color: "none" }, emphasis: { iconStyle: { borderColor: "#3E98C5" } }, tooltip: { show: false, position: "bottom" } }, n2;
  }(Op);
  function Tz(t2, e2) {
    var n2 = dp(e2.get("padding")), i2 = e2.getItemStyle(["color", "opacity"]);
    return i2.fill = e2.get("backgroundColor"), t2 = new Es({ shape: { x: t2.x - n2[3], y: t2.y - n2[0], width: t2.width + n2[1] + n2[3], height: t2.height + n2[0] + n2[2], r: e2.get("borderRadius") }, style: i2, silent: true, z2: -1 });
  }
  var Cz = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      var r2 = this.group;
      if (r2.removeAll(), t3.get("show")) {
        var o2 = +t3.get("itemSize"), a2 = "vertical" === t3.get("orient"), s2 = t3.get("feature") || {}, l2 = this._features || (this._features = {}), u2 = [];
        N(s2, function(t4, e3) {
          u2.push(e3);
        }), new Zm(this._featureNames || [], u2).add(h2).update(h2).remove(W(h2, null)).execute(), this._featureNames = u2, function(t4, e3, n4) {
          var i3 = e3.getBoxLayoutParams(), r3 = e3.get("padding"), o3 = { width: n4.getWidth(), height: n4.getHeight() }, a3 = Tp(i3, o3, r3);
          Ip(e3.get("orient"), t4, e3.get("itemGap"), a3.width, a3.height), Cp(t4, i3, o3, r3);
        }(r2, t3, n3), r2.add(Tz(r2.getBoundingRect(), t3)), a2 || r2.eachChild(function(t4) {
          var e3 = t4.__title, i3 = t4.ensureState("emphasis"), a3 = i3.textConfig || (i3.textConfig = {}), s3 = t4.getTextContent(), l3 = s3 && s3.ensureState("emphasis");
          if (l3 && !Y(l3) && e3) {
            var u3 = l3.style || (l3.style = {}), h3 = _r(e3, Bs.makeFont(u3)), c2 = t4.x + r2.x, p2 = false;
            t4.y + r2.y + o2 + h3.height > n3.getHeight() && (a3.position = "top", p2 = true);
            var d2 = p2 ? -5 - h3.height : o2 + 10;
            c2 + h3.width / 2 > n3.getWidth() ? (a3.position = ["100%", d2], u3.align = "right") : c2 - h3.width / 2 < 0 && (a3.position = [0, d2], u3.align = "left");
          }
        });
      }
      function h2(h3, c2) {
        var p2, d2 = u2[h3], f2 = u2[c2], g2 = s2[d2], y2 = new Sc(g2, t3, t3.ecModel);
        if (i2 && null != i2.newTitle && i2.featureName === d2 && (g2.title = i2.newTitle), d2 && !f2) {
          if (function(t4) {
            return 0 === t4.indexOf("my");
          }(d2))
            p2 = { onclick: y2.option.onclick, featureName: d2 };
          else {
            var v2 = Mz(d2);
            if (!v2)
              return;
            p2 = new v2();
          }
          l2[d2] = p2;
        } else if (!(p2 = l2[f2]))
          return;
        p2.uid = Ic("toolbox-feature"), p2.model = y2, p2.ecModel = e2, p2.api = n3;
        var m2 = p2 instanceof bz;
        d2 || !f2 ? !y2.get("show") || m2 && p2.unusable ? m2 && p2.remove && p2.remove(e2, n3) : (!function(i3, s3, l3) {
          var u3, h4, c3 = i3.getModel("iconStyle"), p3 = i3.getModel(["emphasis", "iconStyle"]), d3 = s3 instanceof bz && s3.getIcons ? s3.getIcons() : i3.get("icon"), f3 = i3.get("title") || {};
          X(d3) ? (u3 = {})[l3] = d3 : u3 = d3;
          X(f3) ? (h4 = {})[l3] = f3 : h4 = f3;
          var g3 = i3.iconPaths = {};
          N(u3, function(l4, u4) {
            var d4 = Wh(l4, {}, { x: -o2 / 2, y: -o2 / 2, width: o2, height: o2 });
            d4.setStyle(c3.getItemStyle()), d4.ensureState("emphasis").style = p3.getItemStyle();
            var f4 = new Bs({ style: { text: h4[u4], align: p3.get("textAlign"), borderRadius: p3.get("textBorderRadius"), padding: p3.get("textPadding"), fill: null }, ignore: true });
            d4.setTextContent(f4), Uh({ el: d4, componentModel: t3, itemName: u4, formatterParamsExtra: { title: h4[u4] } }), d4.__title = h4[u4], d4.on("mouseover", function() {
              var e3 = p3.getItemStyle(), i4 = a2 ? null == t3.get("right") && "right" !== t3.get("left") ? "right" : "left" : null == t3.get("bottom") && "bottom" !== t3.get("top") ? "bottom" : "top";
              f4.setStyle({ fill: p3.get("textFill") || e3.fill || e3.stroke || "#000", backgroundColor: p3.get("textBackgroundColor") }), d4.setTextConfig({ position: p3.get("textPosition") || i4 }), f4.ignore = !t3.get("showTitle"), n3.enterEmphasis(this);
            }).on("mouseout", function() {
              "emphasis" !== i3.get(["iconStatus", u4]) && n3.leaveEmphasis(this), f4.hide();
            }), ("emphasis" === i3.get(["iconStatus", u4]) ? Al : kl)(d4), r2.add(d4), d4.on("click", G(s3.onclick, s3, e2, n3, u4)), g3[u4] = d4;
          });
        }(y2, p2, d2), y2.setIconStatus = function(t4, e3) {
          var n4 = this.option, i3 = this.iconPaths;
          n4.iconStatus = n4.iconStatus || {}, n4.iconStatus[t4] = e3, i3[t4] && ("emphasis" === e3 ? Al : kl)(i3[t4]);
        }, p2 instanceof bz && p2.render && p2.render(y2, e2, n3, i2)) : m2 && p2.dispose && p2.dispose(e2, n3);
      }
    }, n2.prototype.updateView = function(t3, e2, n3, i2) {
      N(this._features, function(t4) {
        t4 instanceof bz && t4.updateView && t4.updateView(t4.model, e2, n3, i2);
      });
    }, n2.prototype.remove = function(t3, e2) {
      N(this._features, function(n3) {
        n3 instanceof bz && n3.remove && n3.remove(t3, e2);
      }), this.group.removeAll();
    }, n2.prototype.dispose = function(t3, e2) {
      N(this._features, function(n3) {
        n3 instanceof bz && n3.dispose && n3.dispose(t3, e2);
      });
    }, n2.type = "toolbox", n2;
  }(Ig);
  var Dz = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.onclick = function(t3, e2) {
      var n3 = this.model, r2 = n3.get("name") || t3.get("title.0.text") || "echarts", o2 = "svg" === e2.getZr().painter.getType(), a2 = o2 ? "svg" : n3.get("type", true) || "png", s2 = e2.getConnectedDataURL({ type: a2, backgroundColor: n3.get("backgroundColor", true) || t3.get("backgroundColor") || "#fff", connectedBackgroundColor: n3.get("connectedBackgroundColor"), excludeComponents: n3.get("excludeComponents"), pixelRatio: n3.get("pixelRatio") }), l2 = i.browser;
      if (Y(MouseEvent) && (l2.newEdge || !l2.ie && !l2.edge)) {
        var u2 = document.createElement("a");
        u2.download = r2 + "." + a2, u2.target = "_blank", u2.href = s2;
        var h2 = new MouseEvent("click", { view: document.defaultView, bubbles: true, cancelable: false });
        u2.dispatchEvent(h2);
      } else if (window.navigator.msSaveOrOpenBlob || o2) {
        var c2 = s2.split(","), p2 = c2[0].indexOf("base64") > -1, d2 = o2 ? decodeURIComponent(c2[1]) : c2[1];
        p2 && (d2 = window.atob(d2));
        var f2 = r2 + "." + a2;
        if (window.navigator.msSaveOrOpenBlob) {
          for (var g2 = d2.length, y2 = new Uint8Array(g2); g2--; )
            y2[g2] = d2.charCodeAt(g2);
          var v2 = new Blob([y2]);
          window.navigator.msSaveOrOpenBlob(v2, f2);
        } else {
          var m2 = document.createElement("iframe");
          document.body.appendChild(m2);
          var x2 = m2.contentWindow, _2 = x2.document;
          _2.open("image/svg+xml", "replace"), _2.write(d2), _2.close(), x2.focus(), _2.execCommand("SaveAs", true, f2), document.body.removeChild(m2);
        }
      } else {
        var b2 = n3.get("lang"), w2 = '<body style="margin:0;"><img src="' + s2 + '" style="max-width:100%;" title="' + (b2 && b2[0] || "") + '" /></body>', S2 = window.open();
        S2.document.write(w2), S2.document.title = r2;
      }
    }, n2.getDefaultOption = function(t3) {
      return { show: true, icon: "M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0", title: t3.getLocaleModel().get(["toolbox", "saveAsImage", "title"]), type: "png", connectedBackgroundColor: "#fff", name: "", excludeComponents: ["toolbox"], lang: t3.getLocaleModel().get(["toolbox", "saveAsImage", "lang"]) };
    }, n2;
  }(bz);
  var Az = "__ec_magicType_stack__";
  var kz = [["line", "bar"], ["stack"]];
  var Lz = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.getIcons = function() {
      var t3 = this.model, e2 = t3.get("icon"), n3 = {};
      return N(t3.get("type"), function(t4) {
        e2[t4] && (n3[t4] = e2[t4]);
      }), n3;
    }, n2.getDefaultOption = function(t3) {
      return { show: true, type: [], icon: { line: "M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4", bar: "M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7", stack: "M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z" }, title: t3.getLocaleModel().get(["toolbox", "magicType", "title"]), option: {}, seriesIndex: {} };
    }, n2.prototype.onclick = function(t3, e2, n3) {
      var i2 = this.model, r2 = i2.get(["seriesIndex", n3]);
      if (Pz[n3]) {
        var o2, a2 = { series: [] };
        N(kz, function(t4) {
          L(t4, n3) >= 0 && N(t4, function(t5) {
            i2.setIconStatus(t5, "normal");
          });
        }), i2.setIconStatus(n3, "emphasis"), t3.eachComponent({ mainType: "series", query: null == r2 ? null : { seriesIndex: r2 } }, function(t4) {
          var e3 = t4.subType, r3 = t4.id, o3 = Pz[n3](e3, r3, t4, i2);
          o3 && (A(o3, t4.option), a2.series.push(o3));
          var s3 = t4.coordinateSystem;
          if (s3 && "cartesian2d" === s3.type && ("line" === n3 || "bar" === n3)) {
            var l2 = s3.getAxesByScale("ordinal")[0];
            if (l2) {
              var u2 = l2.dim + "Axis", h2 = t4.getReferringComponents(u2, Eo).models[0].componentIndex;
              a2[u2] = a2[u2] || [];
              for (var c2 = 0; c2 <= h2; c2++)
                a2[u2][h2] = a2[u2][h2] || {};
              a2[u2][h2].boundaryGap = "bar" === n3;
            }
          }
        });
        var s2 = n3;
        "stack" === n3 && (o2 = T({ stack: i2.option.title.tiled, tiled: i2.option.title.stack }, i2.option.title), "emphasis" !== i2.get(["iconStatus", n3]) && (s2 = "tiled")), e2.dispatchAction({ type: "changeMagicType", currentType: s2, newOption: a2, newTitle: o2, featureName: "magicType" });
      }
    }, n2;
  }(bz);
  var Pz = { line: function(t2, e2, n2, i2) {
    if ("bar" === t2)
      return T({ id: e2, type: "line", data: n2.get("data"), stack: n2.get("stack"), markPoint: n2.get("markPoint"), markLine: n2.get("markLine") }, i2.get(["option", "line"]) || {}, true);
  }, bar: function(t2, e2, n2, i2) {
    if ("line" === t2)
      return T({ id: e2, type: "bar", data: n2.get("data"), stack: n2.get("stack"), markPoint: n2.get("markPoint"), markLine: n2.get("markLine") }, i2.get(["option", "bar"]) || {}, true);
  }, stack: function(t2, e2, n2, i2) {
    var r2 = n2.get("stack") === Az;
    if ("line" === t2 || "bar" === t2)
      return i2.setIconStatus("stack", r2 ? "normal" : "emphasis"), T({ id: e2, stack: r2 ? "" : Az }, i2.get(["option", "stack"]) || {}, true);
  } };
  Am({ type: "changeMagicType", event: "magicTypeChanged", update: "prepareAndUpdate" }, function(t2, e2) {
    e2.mergeOption(t2.newOption);
  });
  var Oz = new Array(60).join("-");
  var Rz = "	";
  function Nz(t2) {
    return t2.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
  }
  var Ez = new RegExp("[	]+", "g");
  function zz(t2, e2) {
    var n2 = t2.split(new RegExp("\n*" + Oz + "\n*", "g")), i2 = { series: [] };
    return N(n2, function(t3, n3) {
      if (function(t4) {
        if (t4.slice(0, t4.indexOf("\n")).indexOf(Rz) >= 0)
          return true;
      }(t3)) {
        var r2 = function(t4) {
          for (var e3 = t4.split(/\n+/g), n4 = [], i3 = E(Nz(e3.shift()).split(Ez), function(t5) {
            return { name: t5, data: [] };
          }), r3 = 0; r3 < e3.length; r3++) {
            var o3 = Nz(e3[r3]).split(Ez);
            n4.push(o3.shift());
            for (var a3 = 0; a3 < o3.length; a3++)
              i3[a3] && (i3[a3].data[r3] = o3[a3]);
          }
          return { series: i3, categories: n4 };
        }(t3), o2 = e2[n3], a2 = o2.axisDim + "Axis";
        o2 && (i2[a2] = i2[a2] || [], i2[a2][o2.axisIndex] = { data: r2.categories }, i2.series = i2.series.concat(r2.series));
      } else {
        r2 = function(t4) {
          for (var e3 = t4.split(/\n+/g), n4 = Nz(e3.shift()), i3 = [], r3 = 0; r3 < e3.length; r3++) {
            var o3 = Nz(e3[r3]);
            if (o3) {
              var a3 = o3.split(Ez), s2 = "", l2 = void 0, u2 = false;
              isNaN(a3[0]) ? (u2 = true, s2 = a3[0], a3 = a3.slice(1), i3[r3] = { name: s2, value: [] }, l2 = i3[r3].value) : l2 = i3[r3] = [];
              for (var h2 = 0; h2 < a3.length; h2++)
                l2.push(+a3[h2]);
              1 === l2.length && (u2 ? i3[r3].value = l2[0] : i3[r3] = l2[0]);
            }
          }
          return { name: n4, data: i3 };
        }(t3);
        i2.series.push(r2);
      }
    }), i2;
  }
  var Vz = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.onclick = function(t3, e2) {
      setTimeout(function() {
        e2.dispatchAction({ type: "hideTip" });
      });
      var n3 = e2.getDom(), i2 = this.model;
      this._dom && n3.removeChild(this._dom);
      var r2 = document.createElement("div");
      r2.style.cssText = "position:absolute;top:0;bottom:0;left:0;right:0;padding:5px", r2.style.backgroundColor = i2.get("backgroundColor") || "#fff";
      var o2 = document.createElement("h4"), a2 = i2.get("lang") || [];
      o2.innerHTML = a2[0] || i2.get("title"), o2.style.cssText = "margin:10px 20px", o2.style.color = i2.get("textColor");
      var s2 = document.createElement("div"), l2 = document.createElement("textarea");
      s2.style.cssText = "overflow:auto";
      var u2 = i2.get("optionToContent"), h2 = i2.get("contentToOption"), c2 = function(t4) {
        var e3, n4, i3, r3 = function(t5) {
          var e4 = {}, n5 = [], i4 = [];
          return t5.eachRawSeries(function(t6) {
            var r4 = t6.coordinateSystem;
            if (!r4 || "cartesian2d" !== r4.type && "polar" !== r4.type)
              n5.push(t6);
            else {
              var o3 = r4.getBaseAxis();
              if ("category" === o3.type) {
                var a3 = o3.dim + "_" + o3.index;
                e4[a3] || (e4[a3] = { categoryAxis: o3, valueAxis: r4.getOtherAxis(o3), series: [] }, i4.push({ axisDim: o3.dim, axisIndex: o3.index })), e4[a3].series.push(t6);
              } else
                n5.push(t6);
            }
          }), { seriesGroupByCategoryAxis: e4, other: n5, meta: i4 };
        }(t4);
        return { value: V([(n4 = r3.seriesGroupByCategoryAxis, i3 = [], N(n4, function(t5, e4) {
          var n5 = t5.categoryAxis, r4 = t5.valueAxis.dim, o3 = [" "].concat(E(t5.series, function(t6) {
            return t6.name;
          })), a3 = [n5.model.getCategories()];
          N(t5.series, function(t6) {
            var e5 = t6.getRawData();
            a3.push(t6.getRawData().mapArray(e5.mapDimension(r4), function(t7) {
              return t7;
            }));
          });
          for (var s3 = [o3.join(Rz)], l3 = 0; l3 < a3[0].length; l3++) {
            for (var u3 = [], h3 = 0; h3 < a3.length; h3++)
              u3.push(a3[h3][l3]);
            s3.push(u3.join(Rz));
          }
          i3.push(s3.join("\n"));
        }), i3.join("\n\n" + Oz + "\n\n")), (e3 = r3.other, E(e3, function(t5) {
          var e4 = t5.getRawData(), n5 = [t5.name], i4 = [];
          return e4.each(e4.dimensions, function() {
            for (var t6 = arguments.length, r4 = arguments[t6 - 1], o3 = e4.getName(r4), a3 = 0; a3 < t6 - 1; a3++)
              i4[a3] = arguments[a3];
            n5.push((o3 ? o3 + Rz : "") + i4.join(Rz));
          }), n5.join("\n");
        }).join("\n\n" + Oz + "\n\n"))], function(t5) {
          return !!t5.replace(/[\n\t\s]/g, "");
        }).join("\n\n" + Oz + "\n\n"), meta: r3.meta };
      }(t3);
      if (Y(u2)) {
        var p2 = u2(e2.getOption());
        X(p2) ? s2.innerHTML = p2 : $(p2) && s2.appendChild(p2);
      } else {
        l2.readOnly = i2.get("readOnly");
        var d2 = l2.style;
        d2.cssText = "display:block;width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;resize:none;box-sizing:border-box;outline:none", d2.color = i2.get("textColor"), d2.borderColor = i2.get("textareaBorderColor"), d2.backgroundColor = i2.get("textareaColor"), l2.value = c2.value, s2.appendChild(l2);
      }
      var f2 = c2.meta, g2 = document.createElement("div");
      g2.style.cssText = "position:absolute;bottom:5px;left:0;right:0";
      var y2 = "float:right;margin-right:20px;border:none;cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px", v2 = document.createElement("div"), m2 = document.createElement("div");
      y2 += ";background-color:" + i2.get("buttonColor"), y2 += ";color:" + i2.get("buttonTextColor");
      var x2 = this;
      function _2() {
        n3.removeChild(r2), x2._dom = null;
      }
      ce(v2, "click", _2), ce(m2, "click", function() {
        if (null == h2 && null != u2 || null != h2 && null == u2)
          _2();
        else {
          var t4;
          try {
            t4 = Y(h2) ? h2(s2, e2.getOption()) : zz(l2.value, f2);
          } catch (t5) {
            throw _2(), new Error("Data view format error " + t5);
          }
          t4 && e2.dispatchAction({ type: "changeDataView", newOption: t4 }), _2();
        }
      }), v2.innerHTML = a2[1], m2.innerHTML = a2[2], m2.style.cssText = v2.style.cssText = y2, !i2.get("readOnly") && g2.appendChild(m2), g2.appendChild(v2), r2.appendChild(o2), r2.appendChild(s2), r2.appendChild(g2), s2.style.height = n3.clientHeight - 80 + "px", n3.appendChild(r2), this._dom = r2;
    }, n2.prototype.remove = function(t3, e2) {
      this._dom && e2.getDom().removeChild(this._dom);
    }, n2.prototype.dispose = function(t3, e2) {
      this.remove(t3, e2);
    }, n2.getDefaultOption = function(t3) {
      return { show: true, readOnly: false, optionToContent: null, contentToOption: null, icon: "M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28", title: t3.getLocaleModel().get(["toolbox", "dataView", "title"]), lang: t3.getLocaleModel().get(["toolbox", "dataView", "lang"]), backgroundColor: "#fff", textColor: "#000", textareaColor: "#fff", textareaBorderColor: "#333", buttonColor: "#c23531", buttonTextColor: "#fff" };
    }, n2;
  }(bz);
  function Bz(t2, e2) {
    return E(t2, function(t3, n2) {
      var i2 = e2 && e2[n2];
      if (j(i2) && !H(i2)) {
        j(t3) && !H(t3) || (t3 = { value: t3 });
        var r2 = null != i2.name && null == t3.name;
        return t3 = A(t3, i2), r2 && delete t3.name, t3;
      }
      return t3;
    });
  }
  Am({ type: "changeDataView", event: "dataViewChanged", update: "prepareAndUpdate" }, function(t2, e2) {
    var n2 = [];
    N(t2.newOption.series, function(t3) {
      var i2 = e2.getSeriesByName(t3.name)[0];
      if (i2) {
        var r2 = i2.get("data");
        n2.push({ name: t3.name, data: Bz(t3.data, r2) });
      } else
        n2.push(D({ type: "scatter" }, t3));
    }), e2.mergeOption(A({ series: n2 }, t2.newOption));
  });
  var Fz = N;
  var Gz = Po();
  function Wz(t2) {
    var e2 = Gz(t2);
    return e2.snapshots || (e2.snapshots = [{}]), e2.snapshots;
  }
  var Hz = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.onclick = function(t3, e2) {
      !function(t4) {
        Gz(t4).snapshots = null;
      }(t3), e2.dispatchAction({ type: "restore", from: this.uid });
    }, n2.getDefaultOption = function(t3) {
      return { show: true, icon: "M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5", title: t3.getLocaleModel().get(["toolbox", "restore", "title"]) };
    }, n2;
  }(bz);
  Am({ type: "restore", event: "restore", update: "prepareAndUpdate" }, function(t2, e2) {
    e2.resetOption("recreate");
  });
  var Yz = ["grid", "xAxis", "yAxis", "geo", "graph", "polar", "radiusAxis", "angleAxis", "bmap"];
  var Xz = function() {
    function t2(t3, e2, n2) {
      var i2 = this;
      this._targetInfoList = [];
      var r2 = Zz(e2, t3);
      N(jz, function(t4, e3) {
        (!n2 || !n2.include || L(n2.include, e3) >= 0) && t4(r2, i2._targetInfoList);
      });
    }
    return t2.prototype.setOutputRanges = function(t3, e2) {
      return this.matchOutputRanges(t3, e2, function(t4, e3, n2) {
        if ((t4.coordRanges || (t4.coordRanges = [])).push(e3), !t4.coordRange) {
          t4.coordRange = e3;
          var i2 = $z[t4.brushType](0, n2, e3);
          t4.__rangeOffset = { offset: Qz[t4.brushType](i2.values, t4.range, [1, 1]), xyMinMax: i2.xyMinMax };
        }
      }), t3;
    }, t2.prototype.matchOutputRanges = function(t3, e2, n2) {
      N(t3, function(t4) {
        var i2 = this.findTargetInfo(t4, e2);
        i2 && true !== i2 && N(i2.coordSyses, function(i3) {
          var r2 = $z[t4.brushType](1, i3, t4.range, true);
          n2(t4, r2.values, i3, e2);
        });
      }, this);
    }, t2.prototype.setInputRanges = function(t3, e2) {
      N(t3, function(t4) {
        var n2, i2, r2, o2, a2, s2 = this.findTargetInfo(t4, e2);
        if (t4.range = t4.range || [], s2 && true !== s2) {
          t4.panelId = s2.panelId;
          var l2 = $z[t4.brushType](0, s2.coordSys, t4.coordRange), u2 = t4.__rangeOffset;
          t4.range = u2 ? Qz[t4.brushType](l2.values, u2.offset, (n2 = l2.xyMinMax, i2 = u2.xyMinMax, r2 = eV(n2), o2 = eV(i2), a2 = [r2[0] / o2[0], r2[1] / o2[1]], isNaN(a2[0]) && (a2[0] = 1), isNaN(a2[1]) && (a2[1] = 1), a2)) : l2.values;
        }
      }, this);
    }, t2.prototype.makePanelOpts = function(t3, e2) {
      return E(this._targetInfoList, function(n2) {
        var i2 = n2.getPanelRect();
        return { panelId: n2.panelId, defaultBrushType: e2 ? e2(n2) : null, clipPath: WL(i2), isTargetByCursor: YL(i2, t3, n2.coordSysModel), getLinearBrushOtherExtent: HL(i2) };
      });
    }, t2.prototype.controlSeries = function(t3, e2, n2) {
      var i2 = this.findTargetInfo(t3, n2);
      return true === i2 || i2 && L(i2.coordSyses, e2.coordinateSystem) >= 0;
    }, t2.prototype.findTargetInfo = function(t3, e2) {
      for (var n2 = this._targetInfoList, i2 = Zz(e2, t3), r2 = 0; r2 < n2.length; r2++) {
        var o2 = n2[r2], a2 = t3.panelId;
        if (a2) {
          if (o2.panelId === a2)
            return o2;
        } else
          for (var s2 = 0; s2 < qz.length; s2++)
            if (qz[s2](i2, o2))
              return o2;
      }
      return true;
    }, t2;
  }();
  function Uz(t2) {
    return t2[0] > t2[1] && t2.reverse(), t2;
  }
  function Zz(t2, e2) {
    return Ro(t2, e2, { includeMainTypes: Yz });
  }
  var jz = { grid: function(t2, e2) {
    var n2 = t2.xAxisModels, i2 = t2.yAxisModels, r2 = t2.gridModels, o2 = gt(), a2 = {}, s2 = {};
    (n2 || i2 || r2) && (N(n2, function(t3) {
      var e3 = t3.axis.grid.model;
      o2.set(e3.id, e3), a2[e3.id] = true;
    }), N(i2, function(t3) {
      var e3 = t3.axis.grid.model;
      o2.set(e3.id, e3), s2[e3.id] = true;
    }), N(r2, function(t3) {
      o2.set(t3.id, t3), a2[t3.id] = true, s2[t3.id] = true;
    }), o2.each(function(t3) {
      var r3 = t3.coordinateSystem, o3 = [];
      N(r3.getCartesians(), function(t4, e3) {
        (L(n2, t4.getAxis("x").model) >= 0 || L(i2, t4.getAxis("y").model) >= 0) && o3.push(t4);
      }), e2.push({ panelId: "grid--" + t3.id, gridModel: t3, coordSysModel: t3, coordSys: o3[0], coordSyses: o3, getPanelRect: Kz.grid, xAxisDeclared: a2[t3.id], yAxisDeclared: s2[t3.id] });
    }));
  }, geo: function(t2, e2) {
    N(t2.geoModels, function(t3) {
      var n2 = t3.coordinateSystem;
      e2.push({ panelId: "geo--" + t3.id, geoModel: t3, coordSysModel: t3, coordSys: n2, coordSyses: [n2], getPanelRect: Kz.geo });
    });
  } };
  var qz = [function(t2, e2) {
    var n2 = t2.xAxisModel, i2 = t2.yAxisModel, r2 = t2.gridModel;
    return !r2 && n2 && (r2 = n2.axis.grid.model), !r2 && i2 && (r2 = i2.axis.grid.model), r2 && r2 === e2.gridModel;
  }, function(t2, e2) {
    var n2 = t2.geoModel;
    return n2 && n2 === e2.geoModel;
  }];
  var Kz = { grid: function() {
    return this.coordSys.master.getRect().clone();
  }, geo: function() {
    var t2 = this.coordSys, e2 = t2.getBoundingRect().clone();
    return e2.applyTransform(Nh(t2)), e2;
  } };
  var $z = { lineX: W(Jz, 0), lineY: W(Jz, 1), rect: function(t2, e2, n2, i2) {
    var r2 = t2 ? e2.pointToData([n2[0][0], n2[1][0]], i2) : e2.dataToPoint([n2[0][0], n2[1][0]], i2), o2 = t2 ? e2.pointToData([n2[0][1], n2[1][1]], i2) : e2.dataToPoint([n2[0][1], n2[1][1]], i2), a2 = [Uz([r2[0], o2[0]]), Uz([r2[1], o2[1]])];
    return { values: a2, xyMinMax: a2 };
  }, polygon: function(t2, e2, n2, i2) {
    var r2 = [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
    return { values: E(n2, function(n3) {
      var o2 = t2 ? e2.pointToData(n3, i2) : e2.dataToPoint(n3, i2);
      return r2[0][0] = Math.min(r2[0][0], o2[0]), r2[1][0] = Math.min(r2[1][0], o2[1]), r2[0][1] = Math.max(r2[0][1], o2[0]), r2[1][1] = Math.max(r2[1][1], o2[1]), o2;
    }), xyMinMax: r2 };
  } };
  function Jz(t2, e2, n2, i2) {
    var r2 = n2.getAxis(["x", "y"][t2]), o2 = Uz(E([0, 1], function(t3) {
      return e2 ? r2.coordToData(r2.toLocalCoord(i2[t3]), true) : r2.toGlobalCoord(r2.dataToCoord(i2[t3]));
    })), a2 = [];
    return a2[t2] = o2, a2[1 - t2] = [NaN, NaN], { values: o2, xyMinMax: a2 };
  }
  var Qz = { lineX: W(tV, 0), lineY: W(tV, 1), rect: function(t2, e2, n2) {
    return [[t2[0][0] - n2[0] * e2[0][0], t2[0][1] - n2[0] * e2[0][1]], [t2[1][0] - n2[1] * e2[1][0], t2[1][1] - n2[1] * e2[1][1]]];
  }, polygon: function(t2, e2, n2) {
    return E(t2, function(t3, i2) {
      return [t3[0] - n2[0] * e2[i2][0], t3[1] - n2[1] * e2[i2][1]];
    });
  } };
  function tV(t2, e2, n2, i2) {
    return [e2[0] - i2[t2] * n2[0], e2[1] - i2[t2] * n2[1]];
  }
  function eV(t2) {
    return t2 ? [t2[0][1] - t2[0][0], t2[1][1] - t2[1][0]] : [NaN, NaN];
  }
  var nV;
  var iV;
  var rV = N;
  var oV = xo + "toolbox-dataZoom_";
  var aV = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3, i2) {
      this._brushController || (this._brushController = new cL(n3.getZr()), this._brushController.on("brush", G(this._onBrush, this)).mount()), function(t4, e3, n4, i3, r2) {
        var o2 = n4._isZoomActive;
        i3 && "takeGlobalCursor" === i3.type && (o2 = "dataZoomSelect" === i3.key && i3.dataZoomSelectActive);
        n4._isZoomActive = o2, t4.setIconStatus("zoom", o2 ? "emphasis" : "normal");
        var a2 = new Xz(lV(t4), e3, { include: ["grid"] }), s2 = a2.makePanelOpts(r2, function(t5) {
          return t5.xAxisDeclared && !t5.yAxisDeclared ? "lineX" : !t5.xAxisDeclared && t5.yAxisDeclared ? "lineY" : "rect";
        });
        n4._brushController.setPanels(s2).enableBrush(!(!o2 || !s2.length) && { brushType: "auto", brushStyle: t4.getModel("brushStyle").getItemStyle() });
      }(t3, e2, this, i2, n3), function(t4, e3) {
        t4.setIconStatus("back", function(t5) {
          return Wz(t5).length;
        }(e3) > 1 ? "emphasis" : "normal");
      }(t3, e2);
    }, n2.prototype.onclick = function(t3, e2, n3) {
      sV[n3].call(this);
    }, n2.prototype.remove = function(t3, e2) {
      this._brushController && this._brushController.unmount();
    }, n2.prototype.dispose = function(t3, e2) {
      this._brushController && this._brushController.dispose();
    }, n2.prototype._onBrush = function(t3) {
      var e2 = t3.areas;
      if (t3.isEnd && e2.length) {
        var n3 = {}, i2 = this.ecModel;
        this._brushController.updateCovers([]), new Xz(lV(this.model), i2, { include: ["grid"] }).matchOutputRanges(e2, i2, function(t4, e3, n4) {
          if ("cartesian2d" === n4.type) {
            var i3 = t4.brushType;
            "rect" === i3 ? (r2("x", n4, e3[0]), r2("y", n4, e3[1])) : r2({ lineX: "x", lineY: "y" }[i3], n4, e3);
          }
        }), function(t4, e3) {
          var n4 = Wz(t4);
          Fz(e3, function(e4, i3) {
            for (var r3 = n4.length - 1; r3 >= 0 && !n4[r3][i3]; r3--)
              ;
            if (r3 < 0) {
              var o2 = t4.queryComponents({ mainType: "dataZoom", subType: "select", id: i3 })[0];
              if (o2) {
                var a2 = o2.getPercentRange();
                n4[0][i3] = { dataZoomId: i3, start: a2[0], end: a2[1] };
              }
            }
          }), n4.push(e3);
        }(i2, n3), this._dispatchZoomAction(n3);
      }
      function r2(t4, e3, r3) {
        var o2 = e3.getAxis(t4), a2 = o2.model, s2 = function(t5, e4, n4) {
          var i3;
          return n4.eachComponent({ mainType: "dataZoom", subType: "select" }, function(n5) {
            n5.getAxisModel(t5, e4.componentIndex) && (i3 = n5);
          }), i3;
        }(t4, a2, i2), l2 = s2.findRepresentativeAxisProxy(a2).getMinMaxSpan();
        null == l2.minValueSpan && null == l2.maxValueSpan || (r3 = Fk(0, r3.slice(), o2.scale.getExtent(), 0, l2.minValueSpan, l2.maxValueSpan)), s2 && (n3[s2.id] = { dataZoomId: s2.id, startValue: r3[0], endValue: r3[1] });
      }
    }, n2.prototype._dispatchZoomAction = function(t3) {
      var e2 = [];
      rV(t3, function(t4, n3) {
        e2.push(I(t4));
      }), e2.length && this.api.dispatchAction({ type: "dataZoom", from: this.uid, batch: e2 });
    }, n2.getDefaultOption = function(t3) {
      return { show: true, filterMode: "filter", icon: { zoom: "M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1", back: "M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26" }, title: t3.getLocaleModel().get(["toolbox", "dataZoom", "title"]), brushStyle: { borderWidth: 0, color: "rgba(210,219,238,0.2)" } };
    }, n2;
  }(bz);
  var sV = { zoom: function() {
    var t2 = !this._isZoomActive;
    this.api.dispatchAction({ type: "takeGlobalCursor", key: "dataZoomSelect", dataZoomSelectActive: t2 });
  }, back: function() {
    this._dispatchZoomAction(function(t2) {
      var e2 = Wz(t2), n2 = e2[e2.length - 1];
      e2.length > 1 && e2.pop();
      var i2 = {};
      return Fz(n2, function(t3, n3) {
        for (var r2 = e2.length - 1; r2 >= 0; r2--)
          if (t3 = e2[r2][n3]) {
            i2[n3] = t3;
            break;
          }
      }), i2;
    }(this.ecModel));
  } };
  function lV(t2) {
    var e2 = { xAxisIndex: t2.get("xAxisIndex", true), yAxisIndex: t2.get("yAxisIndex", true), xAxisId: t2.get("xAxisId", true), yAxisId: t2.get("yAxisId", true) };
    return null == e2.xAxisIndex && null == e2.xAxisId && (e2.xAxisIndex = "all"), null == e2.yAxisIndex && null == e2.yAxisId && (e2.yAxisIndex = "all"), e2;
  }
  nV = "dataZoom", iV = function(t2) {
    var e2 = t2.getComponent("toolbox", 0), n2 = ["feature", "dataZoom"];
    if (e2 && null != e2.get(n2)) {
      var i2 = e2.getModel(n2), r2 = [], o2 = Ro(t2, lV(i2));
      return rV(o2.xAxisModels, function(t3) {
        return a2(t3, "xAxis", "xAxisIndex");
      }), rV(o2.yAxisModels, function(t3) {
        return a2(t3, "yAxis", "yAxisIndex");
      }), r2;
    }
    function a2(t3, e3, n3) {
      var o3 = t3.componentIndex, a3 = { type: "select", $fromToolbox: true, filterMode: i2.get("filterMode", true) || "filter", id: oV + e3 + o3 };
      a3[n3] = o3, r2.push(a3);
    }
  }, st(null == ed.get(nV) && iV), ed.set(nV, iV);
  var uV = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "tooltip", n2.dependencies = ["axisPointer"], n2.defaultOption = { z: 60, show: true, showContent: true, trigger: "item", triggerOn: "mousemove|click", alwaysShowContent: false, displayMode: "single", renderMode: "auto", confine: null, showDelay: 0, hideDelay: 100, transitionDuration: 0.4, enterable: false, backgroundColor: "#fff", shadowBlur: 10, shadowColor: "rgba(0, 0, 0, .2)", shadowOffsetX: 1, shadowOffsetY: 2, borderRadius: 4, borderWidth: 1, padding: null, extraCssText: "", axisPointer: { type: "line", axis: "auto", animation: "auto", animationDurationUpdate: 200, animationEasingUpdate: "exponentialOut", crossStyle: { color: "#999", width: 1, type: "dashed", textStyle: {} } }, textStyle: { color: "#666", fontSize: 14 } }, n2;
  }(Op);
  function hV(t2) {
    var e2 = t2.get("confine");
    return null != e2 ? !!e2 : "richText" === t2.get("renderMode");
  }
  function cV(t2) {
    if (i.domSupported) {
      for (var e2 = document.documentElement.style, n2 = 0, r2 = t2.length; n2 < r2; n2++)
        if (t2[n2] in e2)
          return t2[n2];
    }
  }
  var pV = cV(["transform", "webkitTransform", "OTransform", "MozTransform", "msTransform"]);
  function dV(t2, e2) {
    if (!t2)
      return e2;
    e2 = pp(e2, true);
    var n2 = t2.indexOf(e2);
    return (t2 = -1 === n2 ? e2 : "-" + t2.slice(0, n2) + "-" + e2).toLowerCase();
  }
  var fV = dV(cV(["webkitTransition", "transition", "OTransition", "MozTransition", "msTransition"]), "transition");
  var gV = dV(pV, "transform");
  var yV = "position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;" + (i.transform3dSupported ? "will-change:transform;" : "");
  function vV(t2, e2, n2) {
    var r2 = t2.toFixed(0) + "px", o2 = e2.toFixed(0) + "px";
    if (!i.transformSupported)
      return n2 ? "top:" + o2 + ";left:" + r2 + ";" : [["top", o2], ["left", r2]];
    var a2 = i.transform3dSupported, s2 = "translate" + (a2 ? "3d" : "") + "(" + r2 + "," + o2 + (a2 ? ",0" : "") + ")";
    return n2 ? "top:0;left:0;" + gV + ":" + s2 + ";" : [["top", 0], ["left", 0], [pV, s2]];
  }
  function mV(t2, e2, n2) {
    var r2 = [], o2 = t2.get("transitionDuration"), a2 = t2.get("backgroundColor"), s2 = t2.get("shadowBlur"), l2 = t2.get("shadowColor"), u2 = t2.get("shadowOffsetX"), h2 = t2.get("shadowOffsetY"), c2 = t2.getModel("textStyle"), p2 = cg(t2, "html"), d2 = u2 + "px " + h2 + "px " + s2 + "px " + l2;
    return r2.push("box-shadow:" + d2), e2 && o2 && r2.push(function(t3, e3) {
      var n3 = "cubic-bezier(0.23,1,0.32,1)", r3 = " " + t3 / 2 + "s " + n3, o3 = "opacity" + r3 + ",visibility" + r3;
      return e3 || (r3 = " " + t3 + "s " + n3, o3 += i.transformSupported ? "," + gV + r3 : ",left" + r3 + ",top" + r3), fV + ":" + o3;
    }(o2, n2)), a2 && r2.push("background-color:" + a2), N(["width", "color", "radius"], function(e3) {
      var n3 = "border-" + e3, i2 = pp(n3), o3 = t2.get(i2);
      null != o3 && r2.push(n3 + ":" + o3 + ("color" === e3 ? "" : "px"));
    }), r2.push(function(t3) {
      var e3 = [], n3 = t3.get("fontSize"), i2 = t3.getTextColor();
      i2 && e3.push("color:" + i2), e3.push("font:" + t3.getFont()), n3 && e3.push("line-height:" + Math.round(3 * n3 / 2) + "px");
      var r3 = t3.get("textShadowColor"), o3 = t3.get("textShadowBlur") || 0, a3 = t3.get("textShadowOffsetX") || 0, s3 = t3.get("textShadowOffsetY") || 0;
      return r3 && o3 && e3.push("text-shadow:" + a3 + "px " + s3 + "px " + o3 + "px " + r3), N(["decoration", "align"], function(n4) {
        var i3 = t3.get(n4);
        i3 && e3.push("text-" + n4 + ":" + i3);
      }), e3.join(";");
    }(c2)), null != p2 && r2.push("padding:" + dp(p2).join("px ") + "px"), r2.join(";") + ";";
  }
  function xV(t2, e2, n2, i2, r2) {
    var o2 = e2 && e2.painter;
    if (n2) {
      var a2 = o2 && o2.getViewportRoot();
      a2 && function(t3, e3, n3, i3, r3) {
        Qt(Jt, e3, i3, r3, true) && Qt(t3, n3, Jt[0], Jt[1]);
      }(t2, a2, document.body, i2, r2);
    } else {
      t2[0] = i2, t2[1] = r2;
      var s2 = o2 && o2.getViewportRootOffset();
      s2 && (t2[0] += s2.offsetLeft, t2[1] += s2.offsetTop);
    }
    t2[2] = t2[0] / e2.getWidth(), t2[3] = t2[1] / e2.getHeight();
  }
  var _V = function() {
    function t2(t3, e2, n2) {
      if (this._show = false, this._styleCoord = [0, 0, 0, 0], this._enterable = true, this._alwaysShowContent = false, this._firstShow = true, this._longHide = true, i.wxa)
        return null;
      var r2 = document.createElement("div");
      r2.domBelongToZr = true, this.el = r2;
      var o2 = this._zr = e2.getZr(), a2 = this._appendToBody = n2 && n2.appendToBody;
      xV(this._styleCoord, o2, a2, e2.getWidth() / 2, e2.getHeight() / 2), a2 ? document.body.appendChild(r2) : t3.appendChild(r2), this._container = t3;
      var s2 = this;
      r2.onmouseenter = function() {
        s2._enterable && (clearTimeout(s2._hideTimeout), s2._show = true), s2._inContent = true;
      }, r2.onmousemove = function(t4) {
        if (t4 = t4 || window.event, !s2._enterable) {
          var e3 = o2.handler;
          he(o2.painter.getViewportRoot(), t4, true), e3.dispatch("mousemove", t4);
        }
      }, r2.onmouseleave = function() {
        s2._inContent = false, s2._enterable && s2._show && s2.hideLater(s2._hideDelay);
      };
    }
    return t2.prototype.update = function(t3) {
      var e2, n2, i2, r2 = this._container, o2 = (n2 = "position", (i2 = (e2 = r2).currentStyle || document.defaultView && document.defaultView.getComputedStyle(e2)) ? n2 ? i2[n2] : i2 : null), a2 = r2.style;
      "absolute" !== a2.position && "absolute" !== o2 && (a2.position = "relative");
      var s2 = t3.get("alwaysShowContent");
      s2 && this._moveIfResized(), this._alwaysShowContent = s2, this.el.className = t3.get("className") || "";
    }, t2.prototype.show = function(t3, e2) {
      clearTimeout(this._hideTimeout), clearTimeout(this._longHideTimeout);
      var n2 = this.el, i2 = n2.style, r2 = this._styleCoord;
      n2.innerHTML ? i2.cssText = yV + mV(t3, !this._firstShow, this._longHide) + vV(r2[0], r2[1], true) + "border-color:" + xp(e2) + ";" + (t3.get("extraCssText") || "") + ";pointer-events:" + (this._enterable ? "auto" : "none") : i2.display = "none", this._show = true, this._firstShow = false, this._longHide = false;
    }, t2.prototype.setContent = function(t3, e2, n2, i2, r2) {
      var o2 = this.el;
      if (null != t3) {
        var a2 = "";
        if (X(r2) && "item" === n2.get("trigger") && !hV(n2) && (a2 = function(t4, e3, n3) {
          if (!X(n3) || "inside" === n3)
            return "";
          var i3 = t4.get("backgroundColor"), r3 = t4.get("borderWidth");
          e3 = xp(e3);
          var o3, a3, s3 = "left" === (o3 = n3) ? "right" : "right" === o3 ? "left" : "top" === o3 ? "bottom" : "top", l3 = Math.max(1.5 * Math.round(r3), 6), u2 = "", h2 = gV + ":";
          L(["left", "right"], s3) > -1 ? (u2 += "top:50%", h2 += "translateY(-50%) rotate(" + (a3 = "left" === s3 ? -225 : -45) + "deg)") : (u2 += "left:50%", h2 += "translateX(-50%) rotate(" + (a3 = "top" === s3 ? 225 : 45) + "deg)");
          var c2 = a3 * Math.PI / 180, p2 = l3 + r3, d2 = p2 * Math.abs(Math.cos(c2)) + p2 * Math.abs(Math.sin(c2)), f2 = e3 + " solid " + r3 + "px;";
          return '<div style="' + ["position:absolute;width:" + l3 + "px;height:" + l3 + "px;z-index:-1;", (u2 += ";" + s3 + ":-" + Math.round(100 * ((d2 - Math.SQRT2 * r3) / 2 + Math.SQRT2 * r3 - (d2 - p2) / 2)) / 100 + "px") + ";" + h2 + ";", "border-bottom:" + f2, "border-right:" + f2, "background-color:" + i3 + ";"].join("") + '"></div>';
        }(n2, i2, r2)), X(t3))
          o2.innerHTML = t3 + a2;
        else if (t3) {
          o2.innerHTML = "", H(t3) || (t3 = [t3]);
          for (var s2 = 0; s2 < t3.length; s2++)
            $(t3[s2]) && t3[s2].parentNode !== o2 && o2.appendChild(t3[s2]);
          if (a2 && o2.childNodes.length) {
            var l2 = document.createElement("div");
            l2.innerHTML = a2, o2.appendChild(l2);
          }
        }
      } else
        o2.innerHTML = "";
    }, t2.prototype.setEnterable = function(t3) {
      this._enterable = t3;
    }, t2.prototype.getSize = function() {
      var t3 = this.el;
      return [t3.offsetWidth, t3.offsetHeight];
    }, t2.prototype.moveTo = function(t3, e2) {
      var n2 = this._styleCoord;
      if (xV(n2, this._zr, this._appendToBody, t3, e2), null != n2[0] && null != n2[1]) {
        var i2 = this.el.style;
        N(vV(n2[0], n2[1]), function(t4) {
          i2[t4[0]] = t4[1];
        });
      }
    }, t2.prototype._moveIfResized = function() {
      var t3 = this._styleCoord[2], e2 = this._styleCoord[3];
      this.moveTo(t3 * this._zr.getWidth(), e2 * this._zr.getHeight());
    }, t2.prototype.hide = function() {
      var t3 = this, e2 = this.el.style;
      e2.visibility = "hidden", e2.opacity = "0", i.transform3dSupported && (e2.willChange = ""), this._show = false, this._longHideTimeout = setTimeout(function() {
        return t3._longHide = true;
      }, 500);
    }, t2.prototype.hideLater = function(t3) {
      !this._show || this._inContent && this._enterable || this._alwaysShowContent || (t3 ? (this._hideDelay = t3, this._show = false, this._hideTimeout = setTimeout(G(this.hide, this), t3)) : this.hide());
    }, t2.prototype.isShow = function() {
      return this._show;
    }, t2.prototype.dispose = function() {
      this.el.parentNode.removeChild(this.el);
    }, t2;
  }();
  var bV = function() {
    function t2(t3) {
      this._show = false, this._styleCoord = [0, 0, 0, 0], this._alwaysShowContent = false, this._enterable = true, this._zr = t3.getZr(), MV(this._styleCoord, this._zr, t3.getWidth() / 2, t3.getHeight() / 2);
    }
    return t2.prototype.update = function(t3) {
      var e2 = t3.get("alwaysShowContent");
      e2 && this._moveIfResized(), this._alwaysShowContent = e2;
    }, t2.prototype.show = function() {
      this._hideTimeout && clearTimeout(this._hideTimeout), this.el.show(), this._show = true;
    }, t2.prototype.setContent = function(t3, e2, n2, i2, r2) {
      var o2 = this;
      j(t3) && yo(""), this.el && this._zr.remove(this.el);
      var a2 = n2.getModel("textStyle");
      this.el = new Bs({ style: { rich: e2.richTextStyles, text: t3, lineHeight: 22, borderWidth: 1, borderColor: i2, textShadowColor: a2.get("textShadowColor"), fill: n2.get(["textStyle", "color"]), padding: cg(n2, "richText"), verticalAlign: "top", align: "left" }, z: n2.get("z") }), N(["backgroundColor", "borderRadius", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"], function(t4) {
        o2.el.style[t4] = n2.get(t4);
      }), N(["textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"], function(t4) {
        o2.el.style[t4] = a2.get(t4) || 0;
      }), this._zr.add(this.el);
      var s2 = this;
      this.el.on("mouseover", function() {
        s2._enterable && (clearTimeout(s2._hideTimeout), s2._show = true), s2._inContent = true;
      }), this.el.on("mouseout", function() {
        s2._enterable && s2._show && s2.hideLater(s2._hideDelay), s2._inContent = false;
      });
    }, t2.prototype.setEnterable = function(t3) {
      this._enterable = t3;
    }, t2.prototype.getSize = function() {
      var t3 = this.el, e2 = this.el.getBoundingRect(), n2 = SV(t3.style);
      return [e2.width + n2.left + n2.right, e2.height + n2.top + n2.bottom];
    }, t2.prototype.moveTo = function(t3, e2) {
      var n2 = this.el;
      if (n2) {
        var i2 = this._styleCoord;
        MV(i2, this._zr, t3, e2), t3 = i2[0], e2 = i2[1];
        var r2 = n2.style, o2 = wV(r2.borderWidth || 0), a2 = SV(r2);
        n2.x = t3 + o2 + a2.left, n2.y = e2 + o2 + a2.top, n2.markRedraw();
      }
    }, t2.prototype._moveIfResized = function() {
      var t3 = this._styleCoord[2], e2 = this._styleCoord[3];
      this.moveTo(t3 * this._zr.getWidth(), e2 * this._zr.getHeight());
    }, t2.prototype.hide = function() {
      this.el && this.el.hide(), this._show = false;
    }, t2.prototype.hideLater = function(t3) {
      !this._show || this._inContent && this._enterable || this._alwaysShowContent || (t3 ? (this._hideDelay = t3, this._show = false, this._hideTimeout = setTimeout(G(this.hide, this), t3)) : this.hide());
    }, t2.prototype.isShow = function() {
      return this._show;
    }, t2.prototype.dispose = function() {
      this._zr.remove(this.el);
    }, t2;
  }();
  function wV(t2) {
    return Math.max(0, t2);
  }
  function SV(t2) {
    var e2 = wV(t2.shadowBlur || 0), n2 = wV(t2.shadowOffsetX || 0), i2 = wV(t2.shadowOffsetY || 0);
    return { left: wV(e2 - n2), right: wV(e2 + n2), top: wV(e2 - i2), bottom: wV(e2 + i2) };
  }
  function MV(t2, e2, n2, i2) {
    t2[0] = n2, t2[1] = i2, t2[2] = t2[0] / e2.getWidth(), t2[3] = t2[1] / e2.getHeight();
  }
  var IV = new Es({ shape: { x: -1, y: -1, width: 2, height: 2 } });
  var TV = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      if (!i.node && e2.getDom()) {
        var n3, r2 = t3.getComponent("tooltip"), o2 = this._renderMode = "auto" === (n3 = r2.get("renderMode")) ? i.domSupported ? "html" : "richText" : n3 || "html";
        this._tooltipContent = "richText" === o2 ? new bV(e2) : new _V(e2.getDom(), e2, { appendToBody: r2.get("appendToBody", true) });
      }
    }, n2.prototype.render = function(t3, e2, n3) {
      if (!i.node && n3.getDom()) {
        this.group.removeAll(), this._tooltipModel = t3, this._ecModel = e2, this._api = n3;
        var r2 = this._tooltipContent;
        r2.update(t3), r2.setEnterable(t3.get("enterable")), this._initGlobalListener(), this._keepShow(), "richText" !== this._renderMode && t3.get("transitionDuration") ? Bg(this, "_updatePosition", 50, "fixRate") : Fg(this, "_updatePosition");
      }
    }, n2.prototype._initGlobalListener = function() {
      var t3 = this._tooltipModel.get("triggerOn");
      kN("itemTooltip", this._api, G(function(e2, n3, i2) {
        "none" !== t3 && (t3.indexOf(e2) >= 0 ? this._tryShow(n3, i2) : "leave" === e2 && this._hide(i2));
      }, this));
    }, n2.prototype._keepShow = function() {
      var t3 = this._tooltipModel, e2 = this._ecModel, n3 = this._api, i2 = t3.get("triggerOn");
      if (null != this._lastX && null != this._lastY && "none" !== i2 && "click" !== i2) {
        var r2 = this;
        clearTimeout(this._refreshUpdateTimeout), this._refreshUpdateTimeout = setTimeout(function() {
          !n3.isDisposed() && r2.manuallyShowTip(t3, e2, n3, { x: r2._lastX, y: r2._lastY, dataByCoordSys: r2._lastDataByCoordSys });
        });
      }
    }, n2.prototype.manuallyShowTip = function(t3, e2, n3, r2) {
      if (r2.from !== this.uid && !i.node && n3.getDom()) {
        var o2 = DV(r2, n3);
        this._ticket = "";
        var a2 = r2.dataByCoordSys, s2 = function(t4, e3, n4) {
          var i2 = No(t4).queryOptionMap, r3 = i2.keys()[0];
          if (!r3 || "series" === r3)
            return;
          var o3 = Vo(e3, r3, i2.get(r3), { useDefault: false, enableAll: false, enableNone: false }), a3 = o3.models[0];
          if (!a3)
            return;
          var s3, l3 = n4.getViewOfComponentModel(a3);
          if (l3.group.traverse(function(e4) {
            var n5 = Js(e4).tooltipConfig;
            if (n5 && n5.name === t4.name)
              return s3 = e4, true;
          }), s3)
            return { componentMainType: r3, componentIndex: a3.componentIndex, el: s3 };
        }(r2, e2, n3);
        if (s2) {
          var l2 = s2.el.getBoundingRect().clone();
          l2.applyTransform(s2.el.transform), this._tryShow({ offsetX: l2.x + l2.width / 2, offsetY: l2.y + l2.height / 2, target: s2.el, position: r2.position, positionDefault: "bottom" }, o2);
        } else if (r2.tooltip && null != r2.x && null != r2.y) {
          var u2 = IV;
          u2.x = r2.x, u2.y = r2.y, u2.update(), Js(u2).tooltipConfig = { name: null, option: r2.tooltip }, this._tryShow({ offsetX: r2.x, offsetY: r2.y, target: u2 }, o2);
        } else if (a2)
          this._tryShow({ offsetX: r2.x, offsetY: r2.y, position: r2.position, dataByCoordSys: a2, tooltipOption: r2.tooltipOption }, o2);
        else if (null != r2.seriesIndex) {
          if (this._manuallyAxisShowTip(t3, e2, n3, r2))
            return;
          var h2 = NN(r2, e2), c2 = h2.point[0], p2 = h2.point[1];
          null != c2 && null != p2 && this._tryShow({ offsetX: c2, offsetY: p2, target: h2.el, position: r2.position, positionDefault: "bottom" }, o2);
        } else
          null != r2.x && null != r2.y && (n3.dispatchAction({ type: "updateAxisPointer", x: r2.x, y: r2.y }), this._tryShow({ offsetX: r2.x, offsetY: r2.y, position: r2.position, target: n3.getZr().findHover(r2.x, r2.y).target }, o2));
      }
    }, n2.prototype.manuallyHideTip = function(t3, e2, n3, i2) {
      var r2 = this._tooltipContent;
      this._tooltipModel && r2.hideLater(this._tooltipModel.get("hideDelay")), this._lastX = this._lastY = this._lastDataByCoordSys = null, i2.from !== this.uid && this._hide(DV(i2, n3));
    }, n2.prototype._manuallyAxisShowTip = function(t3, e2, n3, i2) {
      var r2 = i2.seriesIndex, o2 = i2.dataIndex, a2 = e2.getComponent("axisPointer").coordSysAxesInfo;
      if (null != r2 && null != o2 && null != a2) {
        var s2 = e2.getSeriesByIndex(r2);
        if (s2) {
          if ("axis" === CV([s2.getData().getItemModel(o2), s2, (s2.coordinateSystem || {}).model], this._tooltipModel).get("trigger"))
            return n3.dispatchAction({ type: "updateAxisPointer", seriesIndex: r2, dataIndex: o2, position: i2.position }), true;
        }
      }
    }, n2.prototype._tryShow = function(t3, e2) {
      var n3 = t3.target;
      if (this._tooltipModel) {
        this._lastX = t3.offsetX, this._lastY = t3.offsetY;
        var i2 = t3.dataByCoordSys;
        if (i2 && i2.length)
          this._showAxisTooltip(i2, t3);
        else if (n3) {
          var r2, o2;
          this._lastDataByCoordSys = null, Ay(n3, function(t4) {
            return null != Js(t4).dataIndex ? (r2 = t4, true) : null != Js(t4).tooltipConfig ? (o2 = t4, true) : void 0;
          }, true), r2 ? this._showSeriesItemTooltip(t3, r2, e2) : o2 ? this._showComponentItemTooltip(t3, o2, e2) : this._hide(e2);
        } else
          this._lastDataByCoordSys = null, this._hide(e2);
      }
    }, n2.prototype._showOrMove = function(t3, e2) {
      var n3 = t3.get("showDelay");
      e2 = G(e2, this), clearTimeout(this._showTimout), n3 > 0 ? this._showTimout = setTimeout(e2, n3) : e2();
    }, n2.prototype._showAxisTooltip = function(t3, e2) {
      var n3 = this._ecModel, i2 = this._tooltipModel, r2 = [e2.offsetX, e2.offsetY], o2 = CV([e2.tooltipOption], i2), a2 = this._renderMode, s2 = [], l2 = eg("section", { blocks: [], noHeader: true }), u2 = [], h2 = new pg();
      N(t3, function(t4) {
        N(t4.dataByAxis, function(t5) {
          var e3 = n3.getComponent(t5.axisDim + "Axis", t5.axisIndex), r3 = t5.value;
          if (e3 && null != r3) {
            var o3 = vN(r3, e3.axis, n3, t5.seriesDataIndices, t5.valueLabelOpt), c3 = eg("section", { header: o3, noHeader: !lt(o3), sortBlocks: true, blocks: [] });
            l2.blocks.push(c3), N(t5.seriesDataIndices, function(l3) {
              var p3 = n3.getSeriesByIndex(l3.seriesIndex), d3 = l3.dataIndexInside, f3 = p3.getDataParams(d3);
              if (!(f3.dataIndex < 0)) {
                f3.axisDim = t5.axisDim, f3.axisIndex = t5.axisIndex, f3.axisType = t5.axisType, f3.axisId = t5.axisId, f3.axisValue = A_(e3.axis, { value: r3 }), f3.axisValueLabel = o3, f3.marker = h2.makeTooltipMarker("item", xp(f3.color), a2);
                var g3 = vf(p3.formatTooltip(d3, true, null)), y2 = g3.frag;
                if (y2) {
                  var v2 = CV([p3], i2).get("valueFormatter");
                  c3.blocks.push(v2 ? D({ valueFormatter: v2 }, y2) : y2);
                }
                g3.text && u2.push(g3.text), s2.push(f3);
              }
            });
          }
        });
      }), l2.blocks.reverse(), u2.reverse();
      var c2 = e2.position, p2 = o2.get("order"), d2 = sg(l2, h2, a2, p2, n3.get("useUTC"), o2.get("textStyle"));
      d2 && u2.unshift(d2);
      var f2 = "richText" === a2 ? "\n\n" : "<br/>", g2 = u2.join(f2);
      this._showOrMove(o2, function() {
        this._updateContentNotChangedOnAxis(t3, s2) ? this._updatePosition(o2, c2, r2[0], r2[1], this._tooltipContent, s2) : this._showTooltipContent(o2, g2, s2, Math.random() + "", r2[0], r2[1], c2, null, h2);
      });
    }, n2.prototype._showSeriesItemTooltip = function(t3, e2, n3) {
      var i2 = this._ecModel, r2 = Js(e2), o2 = r2.seriesIndex, a2 = i2.getSeriesByIndex(o2), s2 = r2.dataModel || a2, l2 = r2.dataIndex, u2 = r2.dataType, h2 = s2.getData(u2), c2 = this._renderMode, p2 = t3.positionDefault, d2 = CV([h2.getItemModel(l2), s2, a2 && (a2.coordinateSystem || {}).model], this._tooltipModel, p2 ? { position: p2 } : null), f2 = d2.get("trigger");
      if (null == f2 || "item" === f2) {
        var g2 = s2.getDataParams(l2, u2), y2 = new pg();
        g2.marker = y2.makeTooltipMarker("item", xp(g2.color), c2);
        var v2 = vf(s2.formatTooltip(l2, false, u2)), m2 = d2.get("order"), x2 = d2.get("valueFormatter"), _2 = v2.frag, b2 = _2 ? sg(x2 ? D({ valueFormatter: x2 }, _2) : _2, y2, c2, m2, i2.get("useUTC"), d2.get("textStyle")) : v2.text, w2 = "item_" + s2.name + "_" + l2;
        this._showOrMove(d2, function() {
          this._showTooltipContent(d2, b2, g2, w2, t3.offsetX, t3.offsetY, t3.position, t3.target, y2);
        }), n3({ type: "showTip", dataIndexInside: l2, dataIndex: h2.getRawIndex(l2), seriesIndex: o2, from: this.uid });
      }
    }, n2.prototype._showComponentItemTooltip = function(t3, e2, n3) {
      var i2 = Js(e2), r2 = i2.tooltipConfig.option || {};
      if (X(r2)) {
        r2 = { content: r2, formatter: r2 };
      }
      var o2 = [r2], a2 = this._ecModel.getComponent(i2.componentMainType, i2.componentIndex);
      a2 && o2.push(a2), o2.push({ formatter: r2.content });
      var s2 = t3.positionDefault, l2 = CV(o2, this._tooltipModel, s2 ? { position: s2 } : null), u2 = l2.get("content"), h2 = Math.random() + "", c2 = new pg();
      this._showOrMove(l2, function() {
        var n4 = I(l2.get("formatterParams") || {});
        this._showTooltipContent(l2, u2, n4, h2, t3.offsetX, t3.offsetY, t3.position, e2, c2);
      }), n3({ type: "showTip", from: this.uid });
    }, n2.prototype._showTooltipContent = function(t3, e2, n3, i2, r2, o2, a2, s2, l2) {
      if (this._ticket = "", t3.get("showContent") && t3.get("show")) {
        var u2 = this._tooltipContent;
        u2.setEnterable(t3.get("enterable"));
        var h2 = t3.get("formatter");
        a2 = a2 || t3.get("position");
        var c2 = e2, p2 = this._getNearestPoint([r2, o2], n3, t3.get("trigger"), t3.get("borderColor")).color;
        if (h2)
          if (X(h2)) {
            var d2 = t3.ecModel.get("useUTC"), f2 = H(n3) ? n3[0] : n3;
            c2 = h2, f2 && f2.axisType && f2.axisType.indexOf("time") >= 0 && (c2 = jc(f2.axisValue, c2, d2)), c2 = vp(c2, n3, true);
          } else if (Y(h2)) {
            var g2 = G(function(e3, i3) {
              e3 === this._ticket && (u2.setContent(i3, l2, t3, p2, a2), this._updatePosition(t3, a2, r2, o2, u2, n3, s2));
            }, this);
            this._ticket = i2, c2 = h2(n3, i2, g2);
          } else
            c2 = h2;
        u2.setContent(c2, l2, t3, p2, a2), u2.show(t3, p2), this._updatePosition(t3, a2, r2, o2, u2, n3, s2);
      }
    }, n2.prototype._getNearestPoint = function(t3, e2, n3, i2) {
      return "axis" === n3 || H(e2) ? { color: i2 || ("html" === this._renderMode ? "#fff" : "none") } : H(e2) ? void 0 : { color: i2 || e2.color || e2.borderColor };
    }, n2.prototype._updatePosition = function(t3, e2, n3, i2, r2, o2, a2) {
      var s2 = this._api.getWidth(), l2 = this._api.getHeight();
      e2 = e2 || t3.get("position");
      var u2 = r2.getSize(), h2 = t3.get("align"), c2 = t3.get("verticalAlign"), p2 = a2 && a2.getBoundingRect().clone();
      if (a2 && p2.applyTransform(a2.transform), Y(e2) && (e2 = e2([n3, i2], o2, r2.el, p2, { viewSize: [s2, l2], contentSize: u2.slice() })), H(e2))
        n3 = Xr(e2[0], s2), i2 = Xr(e2[1], l2);
      else if (j(e2)) {
        var d2 = e2;
        d2.width = u2[0], d2.height = u2[1];
        var f2 = Tp(d2, { width: s2, height: l2 });
        n3 = f2.x, i2 = f2.y, h2 = null, c2 = null;
      } else if (X(e2) && a2) {
        var g2 = function(t4, e3, n4, i3) {
          var r3 = n4[0], o3 = n4[1], a3 = Math.ceil(Math.SQRT2 * i3) + 8, s3 = 0, l3 = 0, u3 = e3.width, h3 = e3.height;
          switch (t4) {
            case "inside":
              s3 = e3.x + u3 / 2 - r3 / 2, l3 = e3.y + h3 / 2 - o3 / 2;
              break;
            case "top":
              s3 = e3.x + u3 / 2 - r3 / 2, l3 = e3.y - o3 - a3;
              break;
            case "bottom":
              s3 = e3.x + u3 / 2 - r3 / 2, l3 = e3.y + h3 + a3;
              break;
            case "left":
              s3 = e3.x - r3 - a3, l3 = e3.y + h3 / 2 - o3 / 2;
              break;
            case "right":
              s3 = e3.x + u3 + a3, l3 = e3.y + h3 / 2 - o3 / 2;
          }
          return [s3, l3];
        }(e2, p2, u2, t3.get("borderWidth"));
        n3 = g2[0], i2 = g2[1];
      } else {
        g2 = function(t4, e3, n4, i3, r3, o3, a3) {
          var s3 = n4.getSize(), l3 = s3[0], u3 = s3[1];
          null != o3 && (t4 + l3 + o3 + 2 > i3 ? t4 -= l3 + o3 : t4 += o3);
          null != a3 && (e3 + u3 + a3 > r3 ? e3 -= u3 + a3 : e3 += a3);
          return [t4, e3];
        }(n3, i2, r2, s2, l2, h2 ? null : 20, c2 ? null : 20);
        n3 = g2[0], i2 = g2[1];
      }
      if (h2 && (n3 -= AV(h2) ? u2[0] / 2 : "right" === h2 ? u2[0] : 0), c2 && (i2 -= AV(c2) ? u2[1] / 2 : "bottom" === c2 ? u2[1] : 0), hV(t3)) {
        g2 = function(t4, e3, n4, i3, r3) {
          var o3 = n4.getSize(), a3 = o3[0], s3 = o3[1];
          return t4 = Math.min(t4 + a3, i3) - a3, e3 = Math.min(e3 + s3, r3) - s3, t4 = Math.max(t4, 0), e3 = Math.max(e3, 0), [t4, e3];
        }(n3, i2, r2, s2, l2);
        n3 = g2[0], i2 = g2[1];
      }
      r2.moveTo(n3, i2);
    }, n2.prototype._updateContentNotChangedOnAxis = function(t3, e2) {
      var n3 = this._lastDataByCoordSys, i2 = this._cbParamsList, r2 = !!n3 && n3.length === t3.length;
      return r2 && N(n3, function(n4, o2) {
        var a2 = n4.dataByAxis || [], s2 = (t3[o2] || {}).dataByAxis || [];
        (r2 = r2 && a2.length === s2.length) && N(a2, function(t4, n5) {
          var o3 = s2[n5] || {}, a3 = t4.seriesDataIndices || [], l2 = o3.seriesDataIndices || [];
          (r2 = r2 && t4.value === o3.value && t4.axisType === o3.axisType && t4.axisId === o3.axisId && a3.length === l2.length) && N(a3, function(t5, e3) {
            var n6 = l2[e3];
            r2 = r2 && t5.seriesIndex === n6.seriesIndex && t5.dataIndex === n6.dataIndex;
          }), i2 && N(t4.seriesDataIndices, function(t5) {
            var n6 = t5.seriesIndex, o4 = e2[n6], a4 = i2[n6];
            o4 && a4 && a4.data !== o4.data && (r2 = false);
          });
        });
      }), this._lastDataByCoordSys = t3, this._cbParamsList = e2, !!r2;
    }, n2.prototype._hide = function(t3) {
      this._lastDataByCoordSys = null, t3({ type: "hideTip", from: this.uid });
    }, n2.prototype.dispose = function(t3, e2) {
      !i.node && e2.getDom() && (Fg(this, "_updatePosition"), this._tooltipContent.dispose(), ON("itemTooltip", e2));
    }, n2.type = "tooltip", n2;
  }(Ig);
  function CV(t2, e2, n2) {
    var i2, r2 = e2.ecModel;
    n2 ? (i2 = new Sc(n2, r2, r2), i2 = new Sc(e2.option, i2, r2)) : i2 = e2;
    for (var o2 = t2.length - 1; o2 >= 0; o2--) {
      var a2 = t2[o2];
      a2 && (a2 instanceof Sc && (a2 = a2.get("tooltip", true)), X(a2) && (a2 = { formatter: a2 }), a2 && (i2 = new Sc(a2, i2, r2)));
    }
    return i2;
  }
  function DV(t2, e2) {
    return t2.dispatchAction || G(e2.dispatchAction, e2);
  }
  function AV(t2) {
    return "center" === t2 || "middle" === t2;
  }
  var kV = ["rect", "polygon", "keep", "clear"];
  function LV(t2, e2) {
    var n2 = _o(t2 ? t2.brush : []);
    if (n2.length) {
      var i2 = [];
      N(n2, function(t3) {
        var e3 = t3.hasOwnProperty("toolbox") ? t3.toolbox : [];
        e3 instanceof Array && (i2 = i2.concat(e3));
      });
      var r2 = t2 && t2.toolbox;
      H(r2) && (r2 = r2[0]), r2 || (r2 = { feature: {} }, t2.toolbox = [r2]);
      var o2 = r2.feature || (r2.feature = {}), a2 = o2.brush || (o2.brush = {}), s2 = a2.type || (a2.type = []);
      s2.push.apply(s2, i2), function(t3) {
        var e3 = {};
        N(t3, function(t4) {
          e3[t4] = 1;
        }), t3.length = 0, N(e3, function(e4, n3) {
          t3.push(n3);
        });
      }(s2), e2 && !s2.length && s2.push.apply(s2, kV);
    }
  }
  var PV = N;
  function OV(t2) {
    if (t2) {
      for (var e2 in t2)
        if (t2.hasOwnProperty(e2))
          return true;
    }
  }
  function RV(t2, e2, n2) {
    var i2 = {};
    return PV(e2, function(e3) {
      var r2, o2 = i2[e3] = ((r2 = function() {
      }).prototype.__hidden = r2.prototype, new r2());
      PV(t2[e3], function(t3, i3) {
        if (OD.isValidType(i3)) {
          var r3 = { type: i3, visual: t3 };
          n2 && n2(r3, e3), o2[i3] = new OD(r3), "opacity" === i3 && ((r3 = I(r3)).type = "colorAlpha", o2.__hidden.__alphaForOpacity = new OD(r3));
        }
      });
    }), i2;
  }
  function NV(t2, e2, n2) {
    var i2;
    N(n2, function(t3) {
      e2.hasOwnProperty(t3) && OV(e2[t3]) && (i2 = true);
    }), i2 && N(n2, function(n3) {
      e2.hasOwnProperty(n3) && OV(e2[n3]) ? t2[n3] = I(e2[n3]) : delete t2[n3];
    });
  }
  var EV = { lineX: zV(0), lineY: zV(1), rect: { point: function(t2, e2, n2) {
    return t2 && n2.boundingRect.contain(t2[0], t2[1]);
  }, rect: function(t2, e2, n2) {
    return t2 && n2.boundingRect.intersect(t2);
  } }, polygon: { point: function(t2, e2, n2) {
    return t2 && n2.boundingRect.contain(t2[0], t2[1]) && V_(n2.range, t2[0], t2[1]);
  }, rect: function(t2, e2, n2) {
    var i2 = n2.range;
    if (!t2 || i2.length <= 1)
      return false;
    var r2 = t2.x, o2 = t2.y, a2 = t2.width, s2 = t2.height, l2 = i2[0];
    return !!(V_(i2, r2, o2) || V_(i2, r2 + a2, o2) || V_(i2, r2, o2 + s2) || V_(i2, r2 + a2, o2 + s2) || Ee.create(t2).contain(l2[0], l2[1]) || Hh(r2, o2, r2 + a2, o2, i2) || Hh(r2, o2, r2, o2 + s2, i2) || Hh(r2 + a2, o2, r2 + a2, o2 + s2, i2) || Hh(r2, o2 + s2, r2 + a2, o2 + s2, i2)) || void 0;
  } } };
  function zV(t2) {
    var e2 = ["x", "y"], n2 = ["width", "height"];
    return { point: function(e3, n3, i2) {
      if (e3) {
        var r2 = i2.range;
        return VV(e3[t2], r2);
      }
    }, rect: function(i2, r2, o2) {
      if (i2) {
        var a2 = o2.range, s2 = [i2[e2[t2]], i2[e2[t2]] + i2[n2[t2]]];
        return s2[1] < s2[0] && s2.reverse(), VV(s2[0], a2) || VV(s2[1], a2) || VV(a2[0], s2) || VV(a2[1], s2);
      }
    } };
  }
  function VV(t2, e2) {
    return e2[0] <= t2 && t2 <= e2[1];
  }
  var BV = ["inBrush", "outOfBrush"];
  var FV = "__ecBrushSelect";
  var GV = "__ecInBrushSelectEvent";
  function WV(t2) {
    t2.eachComponent({ mainType: "brush" }, function(e2) {
      (e2.brushTargetManager = new Xz(e2.option, t2)).setInputRanges(e2.areas, t2);
    });
  }
  function HV(t2, e2, n2) {
    var i2, r2, o2 = [];
    t2.eachComponent({ mainType: "brush" }, function(t3) {
      n2 && "takeGlobalCursor" === n2.type && t3.setBrushOption("brush" === n2.key ? n2.brushOption : { brushType: false });
    }), WV(t2), t2.eachComponent({ mainType: "brush" }, function(e3, n3) {
      var a2 = { brushId: e3.id, brushIndex: n3, brushName: e3.name, areas: I(e3.areas), selected: [] };
      o2.push(a2);
      var s2 = e3.option, l2 = s2.brushLink, u2 = [], h2 = [], c2 = [], p2 = false;
      n3 || (i2 = s2.throttleType, r2 = s2.throttleDelay);
      var d2 = E(e3.areas, function(t3) {
        var e4 = UV[t3.brushType], n4 = A({ boundingRect: e4 ? e4(t3) : void 0 }, t3);
        return n4.selectors = function(t4) {
          var e5 = t4.brushType, n5 = { point: function(i3) {
            return EV[e5].point(i3, n5, t4);
          }, rect: function(i3) {
            return EV[e5].rect(i3, n5, t4);
          } };
          return n5;
        }(n4), n4;
      }), f2 = RV(e3.option, BV, function(t3) {
        t3.mappingMethod = "fixed";
      });
      function g2(t3) {
        return "all" === l2 || !!u2[t3];
      }
      function y2(t3) {
        return !!t3.length;
      }
      H(l2) && N(l2, function(t3) {
        u2[t3] = 1;
      }), t2.eachSeries(function(n4, i3) {
        var r3 = c2[i3] = [];
        "parallel" === n4.subType ? function(t3, e4) {
          var n5 = t3.coordinateSystem;
          p2 = p2 || n5.hasAxisBrushed(), g2(e4) && n5.eachActiveState(t3.getData(), function(t4, e5) {
            "active" === t4 && (h2[e5] = 1);
          });
        }(n4, i3) : function(n5, i4, r4) {
          if (!n5.brushSelector || function(t3, e4) {
            var n6 = t3.option.seriesIndex;
            return null != n6 && "all" !== n6 && (H(n6) ? L(n6, e4) < 0 : e4 !== n6);
          }(e3, i4))
            return;
          if (N(d2, function(i5) {
            e3.brushTargetManager.controlSeries(i5, n5, t2) && r4.push(i5), p2 = p2 || y2(r4);
          }), g2(i4) && y2(r4)) {
            var o3 = n5.getData();
            o3.each(function(t3) {
              XV(n5, r4, o3, t3) && (h2[t3] = 1);
            });
          }
        }(n4, i3, r3);
      }), t2.eachSeries(function(t3, e4) {
        var n4 = { seriesId: t3.id, seriesIndex: e4, seriesName: t3.name, dataIndex: [] };
        a2.selected.push(n4);
        var i3 = c2[e4], r3 = t3.getData(), o3 = g2(e4) ? function(t4) {
          return h2[t4] ? (n4.dataIndex.push(r3.getRawIndex(t4)), "inBrush") : "outOfBrush";
        } : function(e5) {
          return XV(t3, i3, r3, e5) ? (n4.dataIndex.push(r3.getRawIndex(e5)), "inBrush") : "outOfBrush";
        };
        (g2(e4) ? p2 : y2(i3)) && function(t4, e5, n5, i4, r4, o4) {
          var a3, s3 = {};
          function l3(t5) {
            return My(n5, a3, t5);
          }
          function u3(t5, e6) {
            Ty(n5, a3, t5, e6);
          }
          function h3(t5, h4) {
            a3 = null == o4 ? t5 : h4;
            var c3 = n5.getRawDataItem(a3);
            if (!c3 || false !== c3.visualMap)
              for (var p3 = i4.call(r4, t5), d3 = e5[p3], f3 = s3[p3], g3 = 0, y3 = f3.length; g3 < y3; g3++) {
                var v2 = f3[g3];
                d3[v2] && d3[v2].applyVisual(t5, l3, u3);
              }
          }
          N(t4, function(t5) {
            var n6 = OD.prepareVisualTypes(e5[t5]);
            s3[t5] = n6;
          }), null == o4 ? n5.each(h3) : n5.each([o4], h3);
        }(BV, f2, r3, o3);
      });
    }), function(t3, e3, n3, i3, r3) {
      if (!r3)
        return;
      var o3 = t3.getZr();
      if (o3[GV])
        return;
      o3[FV] || (o3[FV] = YV);
      var a2 = Bg(o3, FV, n3, e3);
      a2(t3, i3);
    }(e2, i2, r2, o2, n2);
  }
  function YV(t2, e2) {
    if (!t2.isDisposed()) {
      var n2 = t2.getZr();
      n2[GV] = true, t2.dispatchAction({ type: "brushSelect", batch: e2 }), n2[GV] = false;
    }
  }
  function XV(t2, e2, n2, i2) {
    for (var r2 = 0, o2 = e2.length; r2 < o2; r2++) {
      var a2 = e2[r2];
      if (t2.brushSelector(i2, n2, a2.selectors, a2))
        return true;
    }
  }
  var UV = { rect: function(t2) {
    return ZV(t2.range);
  }, polygon: function(t2) {
    for (var e2, n2 = t2.range, i2 = 0, r2 = n2.length; i2 < r2; i2++) {
      e2 = e2 || [[1 / 0, -1 / 0], [1 / 0, -1 / 0]];
      var o2 = n2[i2];
      o2[0] < e2[0][0] && (e2[0][0] = o2[0]), o2[0] > e2[0][1] && (e2[0][1] = o2[0]), o2[1] < e2[1][0] && (e2[1][0] = o2[1]), o2[1] > e2[1][1] && (e2[1][1] = o2[1]);
    }
    return e2 && ZV(e2);
  } };
  function ZV(t2) {
    return new Ee(t2[0][0], t2[1][0], t2[0][1] - t2[0][0], t2[1][1] - t2[1][0]);
  }
  var jV = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this.ecModel = t3, this.api = e2, this.model, (this._brushController = new cL(e2.getZr())).on("brush", G(this._onBrush, this)).mount();
    }, n2.prototype.render = function(t3, e2, n3, i2) {
      this.model = t3, this._updateController(t3, e2, n3, i2);
    }, n2.prototype.updateTransform = function(t3, e2, n3, i2) {
      WV(e2), this._updateController(t3, e2, n3, i2);
    }, n2.prototype.updateVisual = function(t3, e2, n3, i2) {
      this.updateTransform(t3, e2, n3, i2);
    }, n2.prototype.updateView = function(t3, e2, n3, i2) {
      this._updateController(t3, e2, n3, i2);
    }, n2.prototype._updateController = function(t3, e2, n3, i2) {
      (!i2 || i2.$from !== t3.id) && this._brushController.setPanels(t3.brushTargetManager.makePanelOpts(n3)).enableBrush(t3.brushOption).updateCovers(t3.areas.slice());
    }, n2.prototype.dispose = function() {
      this._brushController.dispose();
    }, n2.prototype._onBrush = function(t3) {
      var e2 = this.model.id, n3 = this.model.brushTargetManager.setOutputRanges(t3.areas, this.ecModel);
      (!t3.isEnd || t3.removeOnClick) && this.api.dispatchAction({ type: "brush", brushId: e2, areas: I(n3), $from: e2 }), t3.isEnd && this.api.dispatchAction({ type: "brushEnd", brushId: e2, areas: I(n3), $from: e2 });
    }, n2.type = "brush", n2;
  }(Ig);
  var qV = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.areas = [], e2.brushOption = {}, e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function(t3, e2) {
      var n3 = this.option;
      !e2 && NV(n3, t3, ["inBrush", "outOfBrush"]);
      var i2 = n3.inBrush = n3.inBrush || {};
      n3.outOfBrush = n3.outOfBrush || { color: "#ddd" }, i2.hasOwnProperty("liftZ") || (i2.liftZ = 5);
    }, n2.prototype.setAreas = function(t3) {
      t3 && (this.areas = E(t3, function(t4) {
        return KV(this.option, t4);
      }, this));
    }, n2.prototype.setBrushOption = function(t3) {
      this.brushOption = KV(this.option, t3), this.brushType = this.brushOption.brushType;
    }, n2.type = "brush", n2.dependencies = ["geo", "grid", "xAxis", "yAxis", "parallel", "series"], n2.defaultOption = { seriesIndex: "all", brushType: "rect", brushMode: "single", transformable: true, brushStyle: { borderWidth: 1, color: "rgba(210,219,238,0.3)", borderColor: "#D2DBEE" }, throttleType: "fixRate", throttleDelay: 0, removeOnClick: true, z: 1e4 }, n2;
  }(Op);
  function KV(t2, e2) {
    return T({ brushType: t2.brushType, brushMode: t2.brushMode, transformable: t2.transformable, brushStyle: new Sc(t2.brushStyle).getItemStyle(), removeOnClick: t2.removeOnClick, z: t2.z }, e2, true);
  }
  var $V = ["rect", "polygon", "lineX", "lineY", "keep", "clear"];
  var JV = function(t2) {
    function n2() {
      return null !== t2 && t2.apply(this, arguments) || this;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      var i2, r2, o2;
      e2.eachComponent({ mainType: "brush" }, function(t4) {
        i2 = t4.brushType, r2 = t4.brushOption.brushMode || "single", o2 = o2 || !!t4.areas.length;
      }), this._brushType = i2, this._brushMode = r2, N(t3.get("type", true), function(e3) {
        t3.setIconStatus(e3, ("keep" === e3 ? "multiple" === r2 : "clear" === e3 ? o2 : e3 === i2) ? "emphasis" : "normal");
      });
    }, n2.prototype.updateView = function(t3, e2, n3) {
      this.render(t3, e2, n3);
    }, n2.prototype.getIcons = function() {
      var t3 = this.model, e2 = t3.get("icon", true), n3 = {};
      return N(t3.get("type", true), function(t4) {
        e2[t4] && (n3[t4] = e2[t4]);
      }), n3;
    }, n2.prototype.onclick = function(t3, e2, n3) {
      var i2 = this._brushType, r2 = this._brushMode;
      "clear" === n3 ? (e2.dispatchAction({ type: "axisAreaSelect", intervals: [] }), e2.dispatchAction({ type: "brush", command: "clear", areas: [] })) : e2.dispatchAction({ type: "takeGlobalCursor", key: "brush", brushOption: { brushType: "keep" === n3 ? i2 : i2 !== n3 && n3, brushMode: "keep" === n3 ? "multiple" === r2 ? "single" : "multiple" : r2 } });
    }, n2.getDefaultOption = function(t3) {
      return { show: true, type: $V.slice(), icon: { rect: "M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13", polygon: "M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2", lineX: "M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4", lineY: "M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4", keep: "M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z", clear: "M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2" }, title: t3.getLocaleModel().get(["toolbox", "brush", "title"]) };
    }, n2;
  }(bz);
  var QV = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.layoutMode = { type: "box", ignoreSize: true }, e2;
    }
    return e(n2, t2), n2.type = "title", n2.defaultOption = { z: 6, show: true, text: "", target: "blank", subtext: "", subtarget: "blank", left: 0, top: 0, backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderWidth: 0, padding: 5, itemGap: 10, textStyle: { fontSize: 18, fontWeight: "bold", color: "#464646" }, subtextStyle: { fontSize: 12, color: "#6E7079" } }, n2;
  }(Op);
  var tB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.render = function(t3, e2, n3) {
      if (this.group.removeAll(), t3.get("show")) {
        var i2 = this.group, r2 = t3.getModel("textStyle"), o2 = t3.getModel("subtextStyle"), a2 = t3.get("textAlign"), s2 = it(t3.get("textBaseline"), t3.get("textVerticalAlign")), l2 = new Bs({ style: ec(r2, { text: t3.get("text"), fill: r2.getTextColor() }, { disableBox: true }), z2: 10 }), u2 = l2.getBoundingRect(), h2 = t3.get("subtext"), c2 = new Bs({ style: ec(o2, { text: h2, fill: o2.getTextColor(), y: u2.height + t3.get("itemGap"), verticalAlign: "top" }, { disableBox: true }), z2: 10 }), p2 = t3.get("link"), d2 = t3.get("sublink"), f2 = t3.get("triggerEvent", true);
        l2.silent = !p2 && !f2, c2.silent = !d2 && !f2, p2 && l2.on("click", function() {
          _p(p2, "_" + t3.get("target"));
        }), d2 && c2.on("click", function() {
          _p(d2, "_" + t3.get("subtarget"));
        }), Js(l2).eventData = Js(c2).eventData = f2 ? { componentType: "title", componentIndex: t3.componentIndex } : null, i2.add(l2), h2 && i2.add(c2);
        var g2 = i2.getBoundingRect(), y2 = t3.getBoxLayoutParams();
        y2.width = g2.width, y2.height = g2.height;
        var v2 = Tp(y2, { width: n3.getWidth(), height: n3.getHeight() }, t3.get("padding"));
        a2 || ("middle" === (a2 = t3.get("left") || t3.get("right")) && (a2 = "center"), "right" === a2 ? v2.x += v2.width : "center" === a2 && (v2.x += v2.width / 2)), s2 || ("center" === (s2 = t3.get("top") || t3.get("bottom")) && (s2 = "middle"), "bottom" === s2 ? v2.y += v2.height : "middle" === s2 && (v2.y += v2.height / 2), s2 = s2 || "top"), i2.x = v2.x, i2.y = v2.y, i2.markRedraw();
        var m2 = { align: a2, verticalAlign: s2 };
        l2.setStyle(m2), c2.setStyle(m2), g2 = i2.getBoundingRect();
        var x2 = v2.margin, _2 = t3.getItemStyle(["color", "opacity"]);
        _2.fill = t3.get("backgroundColor");
        var b2 = new Es({ shape: { x: g2.x - x2[3], y: g2.y - x2[0], width: g2.width + x2[1] + x2[3], height: g2.height + x2[0] + x2[2], r: t3.get("borderRadius") }, style: _2, subPixelOptimize: true, silent: true });
        i2.add(b2);
      }
    }, n2.type = "title", n2;
  }(Ig);
  var eB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.layoutMode = "box", e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.mergeDefaultAndTheme(t3, n3), this._initData();
    }, n2.prototype.mergeOption = function(e2) {
      t2.prototype.mergeOption.apply(this, arguments), this._initData();
    }, n2.prototype.setCurrentIndex = function(t3) {
      null == t3 && (t3 = this.option.currentIndex);
      var e2 = this._data.count();
      this.option.loop ? t3 = (t3 % e2 + e2) % e2 : (t3 >= e2 && (t3 = e2 - 1), t3 < 0 && (t3 = 0)), this.option.currentIndex = t3;
    }, n2.prototype.getCurrentIndex = function() {
      return this.option.currentIndex;
    }, n2.prototype.isIndexMax = function() {
      return this.getCurrentIndex() >= this._data.count() - 1;
    }, n2.prototype.setPlayState = function(t3) {
      this.option.autoPlay = !!t3;
    }, n2.prototype.getPlayState = function() {
      return !!this.option.autoPlay;
    }, n2.prototype._initData = function() {
      var t3, e2 = this.option, n3 = e2.data || [], i2 = e2.axisType, r2 = this._names = [];
      "category" === i2 ? (t3 = [], N(n3, function(e3, n4) {
        var i3, o3 = Do(So(e3), "");
        j(e3) ? (i3 = I(e3)).value = n4 : i3 = n4, t3.push(i3), r2.push(o3);
      })) : t3 = n3;
      var o2 = { category: "ordinal", time: "time", value: "number" }[i2] || "number";
      (this._data = new vx([{ name: "value", type: o2 }], this)).initData(t3, r2);
    }, n2.prototype.getData = function() {
      return this._data;
    }, n2.prototype.getCategories = function() {
      if ("category" === this.get("axisType"))
        return this._names.slice();
    }, n2.type = "timeline", n2.defaultOption = { z: 4, show: true, axisType: "time", realtime: true, left: "20%", top: null, right: "20%", bottom: 0, width: null, height: 40, padding: 5, controlPosition: "left", autoPlay: false, rewind: false, loop: true, playInterval: 2e3, currentIndex: 0, itemStyle: {}, label: { color: "#000" }, data: [] }, n2;
  }(Op);
  var nB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "timeline.slider", n2.defaultOption = Tc(eB.defaultOption, { backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderWidth: 0, orient: "horizontal", inverse: false, tooltip: { trigger: "item" }, symbol: "circle", symbolSize: 12, lineStyle: { show: true, width: 2, color: "#DAE1F5" }, label: { position: "auto", show: true, interval: "auto", rotate: 0, color: "#A4B1D7" }, itemStyle: { color: "#A4B1D7", borderWidth: 1 }, checkpointStyle: { symbol: "circle", symbolSize: 15, color: "#316bf3", borderColor: "#fff", borderWidth: 2, shadowBlur: 2, shadowOffsetX: 1, shadowOffsetY: 1, shadowColor: "rgba(0, 0, 0, 0.3)", animation: true, animationDuration: 300, animationEasing: "quinticInOut" }, controlStyle: { show: true, showPlayBtn: true, showPrevBtn: true, showNextBtn: true, itemSize: 24, itemGap: 12, position: "left", playIcon: "path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z", stopIcon: "path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z", nextIcon: "M2,18.5A1.52,1.52,0,0,1,.92,18a1.49,1.49,0,0,1,0-2.12L7.81,9.36,1,3.11A1.5,1.5,0,1,1,3,.89l8,7.34a1.48,1.48,0,0,1,.49,1.09,1.51,1.51,0,0,1-.46,1.1L3,18.08A1.5,1.5,0,0,1,2,18.5Z", prevIcon: "M10,.5A1.52,1.52,0,0,1,11.08,1a1.49,1.49,0,0,1,0,2.12L4.19,9.64,11,15.89a1.5,1.5,0,1,1-2,2.22L1,10.77A1.48,1.48,0,0,1,.5,9.68,1.51,1.51,0,0,1,1,8.58L9,.92A1.5,1.5,0,0,1,10,.5Z", prevBtnSize: 18, nextBtnSize: 18, color: "#A4B1D7", borderColor: "#A4B1D7", borderWidth: 1 }, emphasis: { label: { show: true, color: "#6f778d" }, itemStyle: { color: "#316BF3" }, controlStyle: { color: "#316BF3", borderColor: "#316BF3", borderWidth: 2 } }, progress: { lineStyle: { color: "#316BF3" }, itemStyle: { color: "#316BF3" }, label: { color: "#6f778d" } }, data: [] }), n2;
  }(eB);
  O(nB, yf.prototype);
  var iB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "timeline", n2;
  }(Ig);
  var rB = function(t2) {
    function n2(e2, n3, i2, r2) {
      var o2 = t2.call(this, e2, n3, i2) || this;
      return o2.type = r2 || "value", o2;
    }
    return e(n2, t2), n2.prototype.getLabelModel = function() {
      return this.model.getModel("label");
    }, n2.prototype.isHorizontal = function() {
      return "horizontal" === this.model.get("orient");
    }, n2;
  }(cb);
  var oB = Math.PI;
  var aB = Po();
  var sB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this.api = e2;
    }, n2.prototype.render = function(t3, e2, n3) {
      if (this.model = t3, this.api = n3, this.ecModel = e2, this.group.removeAll(), t3.get("show", true)) {
        var i2 = this._layout(t3, n3), r2 = this._createGroup("_mainGroup"), o2 = this._createGroup("_labelGroup"), a2 = this._axis = this._createAxis(i2, t3);
        t3.formatTooltip = function(t4) {
          return eg("nameValue", { noName: true, value: a2.scale.getLabel({ value: t4 }) });
        }, N(["AxisLine", "AxisTick", "Control", "CurrentPointer"], function(e3) {
          this["_render" + e3](i2, r2, a2, t3);
        }, this), this._renderAxisLabel(i2, o2, a2, t3), this._position(i2, t3);
      }
      this._doPlayStop(), this._updateTicksStatus();
    }, n2.prototype.remove = function() {
      this._clearTimer(), this.group.removeAll();
    }, n2.prototype.dispose = function() {
      this._clearTimer();
    }, n2.prototype._layout = function(t3, e2) {
      var n3, i2, r2, o2, a2 = t3.get(["label", "position"]), s2 = t3.get("orient"), l2 = function(t4, e3) {
        return Tp(t4.getBoxLayoutParams(), { width: e3.getWidth(), height: e3.getHeight() }, t4.get("padding"));
      }(t3, e2), u2 = { horizontal: "center", vertical: (n3 = null == a2 || "auto" === a2 ? "horizontal" === s2 ? l2.y + l2.height / 2 < e2.getHeight() / 2 ? "-" : "+" : l2.x + l2.width / 2 < e2.getWidth() / 2 ? "+" : "-" : X(a2) ? { horizontal: { top: "-", bottom: "+" }, vertical: { left: "-", right: "+" } }[s2][a2] : a2) >= 0 || "+" === n3 ? "left" : "right" }, h2 = { horizontal: n3 >= 0 || "+" === n3 ? "top" : "bottom", vertical: "middle" }, c2 = { horizontal: 0, vertical: oB / 2 }, p2 = "vertical" === s2 ? l2.height : l2.width, d2 = t3.getModel("controlStyle"), f2 = d2.get("show", true), g2 = f2 ? d2.get("itemSize") : 0, y2 = f2 ? d2.get("itemGap") : 0, v2 = g2 + y2, m2 = t3.get(["label", "rotate"]) || 0;
      m2 = m2 * oB / 180;
      var x2 = d2.get("position", true), _2 = f2 && d2.get("showPlayBtn", true), b2 = f2 && d2.get("showPrevBtn", true), w2 = f2 && d2.get("showNextBtn", true), S2 = 0, M2 = p2;
      "left" === x2 || "bottom" === x2 ? (_2 && (i2 = [0, 0], S2 += v2), b2 && (r2 = [S2, 0], S2 += v2), w2 && (o2 = [M2 - g2, 0], M2 -= v2)) : (_2 && (i2 = [M2 - g2, 0], M2 -= v2), b2 && (r2 = [0, 0], S2 += v2), w2 && (o2 = [M2 - g2, 0], M2 -= v2));
      var I2 = [S2, M2];
      return t3.get("inverse") && I2.reverse(), { viewRect: l2, mainLength: p2, orient: s2, rotation: c2[s2], labelRotation: m2, labelPosOpt: n3, labelAlign: t3.get(["label", "align"]) || u2[s2], labelBaseline: t3.get(["label", "verticalAlign"]) || t3.get(["label", "baseline"]) || h2[s2], playPosition: i2, prevBtnPosition: r2, nextBtnPosition: o2, axisExtent: I2, controlSize: g2, controlGap: y2 };
    }, n2.prototype._position = function(t3, e2) {
      var n3 = this._mainGroup, i2 = this._labelGroup, r2 = t3.viewRect;
      if ("vertical" === t3.orient) {
        var o2 = [1, 0, 0, 1, 0, 0], a2 = r2.x, s2 = r2.y + r2.height;
        be(o2, o2, [-a2, -s2]), we(o2, o2, -oB / 2), be(o2, o2, [a2, s2]), (r2 = r2.clone()).applyTransform(o2);
      }
      var l2 = y2(r2), u2 = y2(n3.getBoundingRect()), h2 = y2(i2.getBoundingRect()), c2 = [n3.x, n3.y], p2 = [i2.x, i2.y];
      p2[0] = c2[0] = l2[0][0];
      var d2, f2 = t3.labelPosOpt;
      null == f2 || X(f2) ? (v2(c2, u2, l2, 1, d2 = "+" === f2 ? 0 : 1), v2(p2, h2, l2, 1, 1 - d2)) : (v2(c2, u2, l2, 1, d2 = f2 >= 0 ? 0 : 1), p2[1] = c2[1] + f2);
      function g2(t4) {
        t4.originX = l2[0][0] - t4.x, t4.originY = l2[1][0] - t4.y;
      }
      function y2(t4) {
        return [[t4.x, t4.x + t4.width], [t4.y, t4.y + t4.height]];
      }
      function v2(t4, e3, n4, i3, r3) {
        t4[i3] += n4[i3][r3] - e3[i3][r3];
      }
      n3.setPosition(c2), i2.setPosition(p2), n3.rotation = i2.rotation = t3.rotation, g2(n3), g2(i2);
    }, n2.prototype._createAxis = function(t3, e2) {
      var n3 = e2.getData(), i2 = e2.get("axisType"), r2 = function(t4, e3) {
        if (e3 = e3 || t4.get("type"), e3)
          switch (e3) {
            case "category":
              return new Fx({ ordinalMeta: t4.getCategories(), extent: [1 / 0, -1 / 0] });
            case "time":
              return new n_({ locale: t4.ecModel.getLocaleModel(), useUTC: t4.ecModel.get("useUTC") });
            default:
              return new Wx();
          }
      }(e2, i2);
      r2.getTicks = function() {
        return n3.mapArray(["value"], function(t4) {
          return { value: t4 };
        });
      };
      var o2 = n3.getDataExtent("value");
      r2.setExtent(o2[0], o2[1]), r2.calcNiceTicks();
      var a2 = new rB("value", r2, t3.axisExtent, i2);
      return a2.model = e2, a2;
    }, n2.prototype._createGroup = function(t3) {
      var e2 = this[t3] = new Er();
      return this.group.add(e2), e2;
    }, n2.prototype._renderAxisLine = function(t3, e2, n3, i2) {
      var r2 = n3.getExtent();
      if (i2.get(["lineStyle", "show"])) {
        var o2 = new Uu({ shape: { x1: r2[0], y1: 0, x2: r2[1], y2: 0 }, style: D({ lineCap: "round" }, i2.getModel("lineStyle").getLineStyle()), silent: true, z2: 1 });
        e2.add(o2);
        var a2 = this._progressLine = new Uu({ shape: { x1: r2[0], x2: this._currentPointer ? this._currentPointer.x : r2[0], y1: 0, y2: 0 }, style: A({ lineCap: "round", lineWidth: o2.style.lineWidth }, i2.getModel(["progress", "lineStyle"]).getLineStyle()), silent: true, z2: 1 });
        e2.add(a2);
      }
    }, n2.prototype._renderAxisTick = function(t3, e2, n3, i2) {
      var r2 = this, o2 = i2.getData(), a2 = n3.scale.getTicks();
      this._tickSymbols = [], N(a2, function(t4) {
        var a3 = n3.dataToCoord(t4.value), s2 = o2.getItemModel(t4.value), l2 = s2.getModel("itemStyle"), u2 = s2.getModel(["emphasis", "itemStyle"]), h2 = s2.getModel(["progress", "itemStyle"]), c2 = { x: a3, y: 0, onclick: G(r2._changeTimeline, r2, t4.value) }, p2 = lB(s2, l2, e2, c2);
        p2.ensureState("emphasis").style = u2.getItemStyle(), p2.ensureState("progress").style = h2.getItemStyle(), Wl(p2);
        var d2 = Js(p2);
        s2.get("tooltip") ? (d2.dataIndex = t4.value, d2.dataModel = i2) : d2.dataIndex = d2.dataModel = null, r2._tickSymbols.push(p2);
      });
    }, n2.prototype._renderAxisLabel = function(t3, e2, n3, i2) {
      var r2 = this;
      if (n3.getLabelModel().get("show")) {
        var o2 = i2.getData(), a2 = n3.getViewLabels();
        this._tickLabels = [], N(a2, function(i3) {
          var a3 = i3.tickValue, s2 = o2.getItemModel(a3), l2 = s2.getModel("label"), u2 = s2.getModel(["emphasis", "label"]), h2 = s2.getModel(["progress", "label"]), c2 = n3.dataToCoord(i3.tickValue), p2 = new Bs({ x: c2, y: 0, rotation: t3.labelRotation - t3.rotation, onclick: G(r2._changeTimeline, r2, a3), silent: false, style: ec(l2, { text: i3.formattedLabel, align: t3.labelAlign, verticalAlign: t3.labelBaseline }) });
          p2.ensureState("emphasis").style = ec(u2), p2.ensureState("progress").style = ec(h2), e2.add(p2), Wl(p2), aB(p2).dataIndex = a3, r2._tickLabels.push(p2);
        });
      }
    }, n2.prototype._renderControl = function(t3, e2, n3, i2) {
      var r2 = t3.controlSize, o2 = t3.rotation, a2 = i2.getModel("controlStyle").getItemStyle(), s2 = i2.getModel(["emphasis", "controlStyle"]).getItemStyle(), l2 = i2.getPlayState(), u2 = i2.get("inverse", true);
      function h2(t4, n4, l3, u3) {
        if (t4) {
          var h3 = Mr(it(i2.get(["controlStyle", n4 + "BtnSize"]), r2), r2), c2 = function(t5, e3, n5, i3) {
            var r3 = i3.style, o3 = Wh(t5.get(["controlStyle", e3]), i3 || {}, new Ee(n5[0], n5[1], n5[2], n5[3]));
            r3 && o3.setStyle(r3);
            return o3;
          }(i2, n4 + "Icon", [0, -h3 / 2, h3, h3], { x: t4[0], y: t4[1], originX: r2 / 2, originY: 0, rotation: u3 ? -o2 : 0, rectHover: true, style: a2, onclick: l3 });
          c2.ensureState("emphasis").style = s2, e2.add(c2), Wl(c2);
        }
      }
      h2(t3.nextBtnPosition, "next", G(this._changeTimeline, this, u2 ? "-" : "+")), h2(t3.prevBtnPosition, "prev", G(this._changeTimeline, this, u2 ? "+" : "-")), h2(t3.playPosition, l2 ? "stop" : "play", G(this._handlePlayClick, this, !l2), true);
    }, n2.prototype._renderCurrentPointer = function(t3, e2, n3, i2) {
      var r2 = i2.getData(), o2 = i2.getCurrentIndex(), a2 = r2.getItemModel(o2).getModel("checkpointStyle"), s2 = this, l2 = { onCreate: function(t4) {
        t4.draggable = true, t4.drift = G(s2._handlePointerDrag, s2), t4.ondragend = G(s2._handlePointerDragend, s2), uB(t4, s2._progressLine, o2, n3, i2, true);
      }, onUpdate: function(t4) {
        uB(t4, s2._progressLine, o2, n3, i2);
      } };
      this._currentPointer = lB(a2, a2, this._mainGroup, {}, this._currentPointer, l2);
    }, n2.prototype._handlePlayClick = function(t3) {
      this._clearTimer(), this.api.dispatchAction({ type: "timelinePlayChange", playState: t3, from: this.uid });
    }, n2.prototype._handlePointerDrag = function(t3, e2, n3) {
      this._clearTimer(), this._pointerChangeTimeline([n3.offsetX, n3.offsetY]);
    }, n2.prototype._handlePointerDragend = function(t3) {
      this._pointerChangeTimeline([t3.offsetX, t3.offsetY], true);
    }, n2.prototype._pointerChangeTimeline = function(t3, e2) {
      var n3 = this._toAxisCoord(t3)[0], i2 = Zr(this._axis.getExtent().slice());
      n3 > i2[1] && (n3 = i2[1]), n3 < i2[0] && (n3 = i2[0]), this._currentPointer.x = n3, this._currentPointer.markRedraw();
      var r2 = this._progressLine;
      r2 && (r2.shape.x2 = n3, r2.dirty());
      var o2 = this._findNearestTick(n3), a2 = this.model;
      (e2 || o2 !== a2.getCurrentIndex() && a2.get("realtime")) && this._changeTimeline(o2);
    }, n2.prototype._doPlayStop = function() {
      var t3 = this;
      this._clearTimer(), this.model.getPlayState() && (this._timer = setTimeout(function() {
        var e2 = t3.model;
        t3._changeTimeline(e2.getCurrentIndex() + (e2.get("rewind", true) ? -1 : 1));
      }, this.model.get("playInterval")));
    }, n2.prototype._toAxisCoord = function(t3) {
      return Eh(t3, this._mainGroup.getLocalTransform(), true);
    }, n2.prototype._findNearestTick = function(t3) {
      var e2, n3 = this.model.getData(), i2 = 1 / 0, r2 = this._axis;
      return n3.each(["value"], function(n4, o2) {
        var a2 = r2.dataToCoord(n4), s2 = Math.abs(a2 - t3);
        s2 < i2 && (i2 = s2, e2 = o2);
      }), e2;
    }, n2.prototype._clearTimer = function() {
      this._timer && (clearTimeout(this._timer), this._timer = null);
    }, n2.prototype._changeTimeline = function(t3) {
      var e2 = this.model.getCurrentIndex();
      "+" === t3 ? t3 = e2 + 1 : "-" === t3 && (t3 = e2 - 1), this.api.dispatchAction({ type: "timelineChange", currentIndex: t3, from: this.uid });
    }, n2.prototype._updateTicksStatus = function() {
      var t3 = this.model.getCurrentIndex(), e2 = this._tickSymbols, n3 = this._tickLabels;
      if (e2)
        for (var i2 = 0; i2 < e2.length; i2++)
          e2 && e2[i2] && e2[i2].toggleState("progress", i2 < t3);
      if (n3)
        for (i2 = 0; i2 < n3.length; i2++)
          n3 && n3[i2] && n3[i2].toggleState("progress", aB(n3[i2]).dataIndex <= t3);
    }, n2.type = "timeline.slider", n2;
  }(iB);
  function lB(t2, e2, n2, i2, r2, o2) {
    var a2 = e2.get("color");
    r2 ? (r2.setColor(a2), n2.add(r2), o2 && o2.onUpdate(r2)) : ((r2 = Gy(t2.get("symbol"), -1, -1, 2, 2, a2)).setStyle("strokeNoScale", true), n2.add(r2), o2 && o2.onCreate(r2));
    var s2 = e2.getItemStyle(["color"]);
    r2.setStyle(s2), i2 = T({ rectHover: true, z2: 100 }, i2, true);
    var l2 = Wy(t2.get("symbolSize"));
    i2.scaleX = l2[0] / 2, i2.scaleY = l2[1] / 2;
    var u2 = Hy(t2.get("symbolOffset"), l2);
    u2 && (i2.x = (i2.x || 0) + u2[0], i2.y = (i2.y || 0) + u2[1]);
    var h2 = t2.get("symbolRotate");
    return i2.rotation = (h2 || 0) * Math.PI / 180 || 0, r2.attr(i2), r2.updateTransform(), r2;
  }
  function uB(t2, e2, n2, i2, r2, o2) {
    if (!t2.dragging) {
      var a2 = r2.getModel("checkpointStyle"), s2 = i2.dataToCoord(r2.getData().get("value", n2));
      if (o2 || !a2.get("animation", true))
        t2.attr({ x: s2, y: 0 }), e2 && e2.attr({ shape: { x2: s2 } });
      else {
        var l2 = { duration: a2.get("animationDuration", true), easing: a2.get("animationEasing", true) };
        t2.stopAnimation(null, true), t2.animateTo({ x: s2, y: 0 }, l2), e2 && e2.animateTo({ shape: { x2: s2 } }, l2);
      }
    }
  }
  function hB(t2) {
    var e2 = t2 && t2.timeline;
    H(e2) || (e2 = e2 ? [e2] : []), N(e2, function(t3) {
      t3 && function(t4) {
        var e3 = t4.type, n2 = { number: "value", time: "time" };
        n2[e3] && (t4.axisType = n2[e3], delete t4.type);
        if (cB(t4), pB(t4, "controlPosition")) {
          var i2 = t4.controlStyle || (t4.controlStyle = {});
          pB(i2, "position") || (i2.position = t4.controlPosition), "none" !== i2.position || pB(i2, "show") || (i2.show = false, delete i2.position), delete t4.controlPosition;
        }
        N(t4.data || [], function(t5) {
          j(t5) && !H(t5) && (!pB(t5, "value") && pB(t5, "name") && (t5.value = t5.name), cB(t5));
        });
      }(t3);
    });
  }
  function cB(t2) {
    var e2 = t2.itemStyle || (t2.itemStyle = {}), n2 = e2.emphasis || (e2.emphasis = {}), i2 = t2.label || t2.label || {}, r2 = i2.normal || (i2.normal = {}), o2 = { normal: 1, emphasis: 1 };
    N(i2, function(t3, e3) {
      o2[e3] || pB(r2, e3) || (r2[e3] = t3);
    }), n2.label && !pB(i2, "emphasis") && (i2.emphasis = n2.label, delete n2.label);
  }
  function pB(t2, e2) {
    return t2.hasOwnProperty(e2);
  }
  function dB(t2, e2) {
    if (!t2)
      return false;
    for (var n2 = H(t2) ? t2 : [t2], i2 = 0; i2 < n2.length; i2++)
      if (n2[i2] && n2[i2][e2])
        return true;
    return false;
  }
  function fB(t2) {
    bo(t2, "label", ["show"]);
  }
  var gB = Po();
  var yB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.createdBySelf = false, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.mergeDefaultAndTheme(t3, n3), this._mergeOption(t3, n3, false, true);
    }, n2.prototype.isAnimationEnabled = function() {
      if (i.node)
        return false;
      var t3 = this.__hostSeries;
      return this.getShallow("animation") && t3 && t3.isAnimationEnabled();
    }, n2.prototype.mergeOption = function(t3, e2) {
      this._mergeOption(t3, e2, false, false);
    }, n2.prototype._mergeOption = function(t3, e2, n3, i2) {
      var r2 = this.mainType;
      n3 || e2.eachSeries(function(t4) {
        var n4 = t4.get(this.mainType, true), o2 = gB(t4)[r2];
        n4 && n4.data ? (o2 ? o2._mergeOption(n4, e2, true) : (i2 && fB(n4), N(n4.data, function(t5) {
          t5 instanceof Array ? (fB(t5[0]), fB(t5[1])) : fB(t5);
        }), D(o2 = this.createMarkerModelFromSeries(n4, this, e2), { mainType: this.mainType, seriesIndex: t4.seriesIndex, name: t4.name, createdBySelf: true }), o2.__hostSeries = t4), gB(t4)[r2] = o2) : gB(t4)[r2] = null;
      }, this);
    }, n2.prototype.formatTooltip = function(t3, e2, n3) {
      var i2 = this.getData(), r2 = this.getRawValue(t3), o2 = i2.getName(t3);
      return eg("section", { header: this.name, blocks: [eg("nameValue", { name: o2, value: r2, noName: !o2, noValue: null == r2 })] });
    }, n2.prototype.getData = function() {
      return this._data;
    }, n2.prototype.setData = function(t3) {
      this._data = t3;
    }, n2.getMarkerModelFromSeries = function(t3, e2) {
      return gB(t3)[e2];
    }, n2.type = "marker", n2.dependencies = ["series", "grid", "polar", "geo"], n2;
  }(Op);
  O(yB, yf.prototype);
  var vB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.createMarkerModelFromSeries = function(t3, e2, i2) {
      return new n2(t3, e2, i2);
    }, n2.type = "markPoint", n2.defaultOption = { z: 5, symbol: "pin", symbolSize: 50, tooltip: { trigger: "item" }, label: { show: true, position: "inside" }, itemStyle: { borderWidth: 2 }, emphasis: { label: { show: true } } }, n2;
  }(yB);
  function mB(t2) {
    return !(isNaN(parseFloat(t2.x)) && isNaN(parseFloat(t2.y)));
  }
  function xB(t2, e2, n2, i2, r2, o2) {
    var a2 = [], s2 = Ix(e2, i2) ? e2.getCalculationInfo("stackResultDimension") : i2, l2 = IB(e2, s2, t2), u2 = e2.indicesOfNearest(s2, l2)[0];
    a2[r2] = e2.get(n2, u2), a2[o2] = e2.get(s2, u2);
    var h2 = e2.get(i2, u2), c2 = jr(e2.get(i2, u2));
    return (c2 = Math.min(c2, 20)) >= 0 && (a2[o2] = +a2[o2].toFixed(c2)), [a2, h2];
  }
  var _B = { min: W(xB, "min"), max: W(xB, "max"), average: W(xB, "average"), median: W(xB, "median") };
  function bB(t2, e2) {
    if (e2) {
      var n2 = t2.getData(), i2 = t2.coordinateSystem, r2 = i2 && i2.dimensions;
      if (!function(t3) {
        return !isNaN(parseFloat(t3.x)) && !isNaN(parseFloat(t3.y));
      }(e2) && !H(e2.coord) && H(r2)) {
        var o2 = wB(e2, n2, i2, t2);
        if ((e2 = I(e2)).type && _B[e2.type] && o2.baseAxis && o2.valueAxis) {
          var a2 = L(r2, o2.baseAxis.dim), s2 = L(r2, o2.valueAxis.dim), l2 = _B[e2.type](n2, o2.baseDataDim, o2.valueDataDim, a2, s2);
          e2.coord = l2[0], e2.value = l2[1];
        } else
          e2.coord = [null != e2.xAxis ? e2.xAxis : e2.radiusAxis, null != e2.yAxis ? e2.yAxis : e2.angleAxis];
      }
      if (null != e2.coord && H(r2))
        for (var u2 = e2.coord, h2 = 0; h2 < 2; h2++)
          _B[u2[h2]] && (u2[h2] = IB(n2, n2.mapDimension(r2[h2]), u2[h2]));
      else
        e2.coord = [];
      return e2;
    }
  }
  function wB(t2, e2, n2, i2) {
    var r2 = {};
    return null != t2.valueIndex || null != t2.valueDim ? (r2.valueDataDim = null != t2.valueIndex ? e2.getDimension(t2.valueIndex) : t2.valueDim, r2.valueAxis = n2.getAxis(function(t3, e3) {
      var n3 = t3.getData().getDimensionInfo(e3);
      return n3 && n3.coordDim;
    }(i2, r2.valueDataDim)), r2.baseAxis = n2.getOtherAxis(r2.valueAxis), r2.baseDataDim = e2.mapDimension(r2.baseAxis.dim)) : (r2.baseAxis = i2.getBaseAxis(), r2.valueAxis = n2.getOtherAxis(r2.baseAxis), r2.baseDataDim = e2.mapDimension(r2.baseAxis.dim), r2.valueDataDim = e2.mapDimension(r2.valueAxis.dim)), r2;
  }
  function SB(t2, e2) {
    return !(t2 && t2.containData && e2.coord && !mB(e2)) || t2.containData(e2.coord);
  }
  function MB(t2, e2) {
    return t2 ? function(t3, n2, i2, r2) {
      return bf(r2 < 2 ? t3.coord && t3.coord[r2] : t3.value, e2[r2]);
    } : function(t3, n2, i2, r2) {
      return bf(t3.value, e2[r2]);
    };
  }
  function IB(t2, e2, n2) {
    if ("average" === n2) {
      var i2 = 0, r2 = 0;
      return t2.each(e2, function(t3, e3) {
        isNaN(t3) || (i2 += t3, r2++);
      }), i2 / r2;
    }
    return "median" === n2 ? t2.getMedian(e2) : t2.getDataExtent(e2)["max" === n2 ? 1 : 0];
  }
  var TB = Po();
  var CB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      this.markerGroupMap = gt();
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = this, r2 = this.markerGroupMap;
      r2.each(function(t4) {
        TB(t4).keep = false;
      }), e2.eachSeries(function(t4) {
        var r3 = yB.getMarkerModelFromSeries(t4, i2.type);
        r3 && i2.renderSeries(t4, r3, e2, n3);
      }), r2.each(function(t4) {
        !TB(t4).keep && i2.group.remove(t4.group);
      });
    }, n2.prototype.markKeep = function(t3) {
      TB(t3).keep = true;
    }, n2.prototype.toggleBlurSeries = function(t3, e2) {
      var n3 = this;
      N(t3, function(t4) {
        var i2 = yB.getMarkerModelFromSeries(t4, n3.type);
        i2 && i2.getData().eachItemGraphicEl(function(t5) {
          t5 && (e2 ? Ll(t5) : Pl(t5));
        });
      });
    }, n2.type = "marker", n2;
  }(Ig);
  function DB(t2, e2, n2) {
    var i2 = e2.coordinateSystem;
    t2.each(function(r2) {
      var o2, a2 = t2.getItemModel(r2), s2 = Xr(a2.get("x"), n2.getWidth()), l2 = Xr(a2.get("y"), n2.getHeight());
      if (isNaN(s2) || isNaN(l2)) {
        if (e2.getMarkerPosition)
          o2 = e2.getMarkerPosition(t2.getValues(t2.dimensions, r2));
        else if (i2) {
          var u2 = t2.get(i2.dimensions[0], r2), h2 = t2.get(i2.dimensions[1], r2);
          o2 = i2.dataToPoint([u2, h2]);
        }
      } else
        o2 = [s2, l2];
      isNaN(s2) || (o2[0] = s2), isNaN(l2) || (o2[1] = l2), t2.setItemLayout(r2, o2);
    });
  }
  var AB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.updateTransform = function(t3, e2, n3) {
      e2.eachSeries(function(t4) {
        var e3 = yB.getMarkerModelFromSeries(t4, "markPoint");
        e3 && (DB(e3.getData(), t4, n3), this.markerGroupMap.get(t4.id).updateLayout());
      }, this);
    }, n2.prototype.renderSeries = function(t3, e2, n3, i2) {
      var r2 = t3.coordinateSystem, o2 = t3.id, a2 = t3.getData(), s2 = this.markerGroupMap, l2 = s2.get(o2) || s2.set(o2, new SS()), u2 = function(t4, e3, n4) {
        var i3;
        i3 = t4 ? E(t4 && t4.dimensions, function(t5) {
          return D(D({}, e3.getData().getDimensionInfo(e3.getData().mapDimension(t5)) || {}), { name: t5, ordinalMeta: null });
        }) : [{ name: "value", type: "float" }];
        var r3 = new vx(i3, n4), o3 = E(n4.get("data"), W(bB, e3));
        t4 && (o3 = V(o3, W(SB, t4)));
        var a3 = MB(!!t4, i3);
        return r3.initData(o3, null, a3), r3;
      }(r2, t3, e2);
      e2.setData(u2), DB(e2.getData(), t3, i2), u2.each(function(t4) {
        var n4 = u2.getItemModel(t4), i3 = n4.getShallow("symbol"), r3 = n4.getShallow("symbolSize"), o3 = n4.getShallow("symbolRotate"), s3 = n4.getShallow("symbolOffset"), l3 = n4.getShallow("symbolKeepAspect");
        if (Y(i3) || Y(r3) || Y(o3) || Y(s3)) {
          var h2 = e2.getRawValue(t4), c2 = e2.getDataParams(t4);
          Y(i3) && (i3 = i3(h2, c2)), Y(r3) && (r3 = r3(h2, c2)), Y(o3) && (o3 = o3(h2, c2)), Y(s3) && (s3 = s3(h2, c2));
        }
        var p2 = n4.getModel("itemStyle").getItemStyle(), d2 = Iy(a2, "color");
        p2.fill || (p2.fill = d2), u2.setItemVisual(t4, { symbol: i3, symbolSize: r3, symbolRotate: o3, symbolOffset: s3, symbolKeepAspect: l3, style: p2 });
      }), l2.updateData(u2), this.group.add(l2.group), u2.eachItemGraphicEl(function(t4) {
        t4.traverse(function(t5) {
          Js(t5).dataModel = e2;
        });
      }), this.markKeep(l2), l2.group.silent = e2.get("silent") || t3.get("silent");
    }, n2.type = "markPoint", n2;
  }(CB);
  var kB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.createMarkerModelFromSeries = function(t3, e2, i2) {
      return new n2(t3, e2, i2);
    }, n2.type = "markLine", n2.defaultOption = { z: 5, symbol: ["circle", "arrow"], symbolSize: [8, 16], symbolOffset: 0, precision: 2, tooltip: { trigger: "item" }, label: { show: true, position: "end", distance: 5 }, lineStyle: { type: "dashed" }, emphasis: { label: { show: true }, lineStyle: { width: 3 } }, animationEasing: "linear" }, n2;
  }(yB);
  var LB = Po();
  var PB = function(t2, e2, n2, i2) {
    var r2, o2 = t2.getData();
    if (H(i2))
      r2 = i2;
    else {
      var a2 = i2.type;
      if ("min" === a2 || "max" === a2 || "average" === a2 || "median" === a2 || null != i2.xAxis || null != i2.yAxis) {
        var s2 = void 0, l2 = void 0;
        if (null != i2.yAxis || null != i2.xAxis)
          s2 = e2.getAxis(null != i2.yAxis ? "y" : "x"), l2 = nt(i2.yAxis, i2.xAxis);
        else {
          var u2 = wB(i2, o2, e2, t2);
          s2 = u2.valueAxis, l2 = IB(o2, Tx(o2, u2.valueDataDim), a2);
        }
        var h2 = "x" === s2.dim ? 0 : 1, c2 = 1 - h2, p2 = I(i2), d2 = { coord: [] };
        p2.type = null, p2.coord = [], p2.coord[c2] = -1 / 0, d2.coord[c2] = 1 / 0;
        var f2 = n2.get("precision");
        f2 >= 0 && Z(l2) && (l2 = +l2.toFixed(Math.min(f2, 20))), p2.coord[h2] = d2.coord[h2] = l2, r2 = [p2, d2, { type: a2, valueIndex: i2.valueIndex, value: l2 }];
      } else
        r2 = [];
    }
    var g2 = [bB(t2, r2[0]), bB(t2, r2[1]), D({}, r2[2])];
    return g2[2].type = g2[2].type || null, T(g2[2], g2[0]), T(g2[2], g2[1]), g2;
  };
  function OB(t2) {
    return !isNaN(t2) && !isFinite(t2);
  }
  function RB(t2, e2, n2, i2) {
    var r2 = 1 - t2, o2 = i2.dimensions[t2];
    return OB(e2[r2]) && OB(n2[r2]) && e2[t2] === n2[t2] && i2.getAxis(o2).containData(e2[t2]);
  }
  function NB(t2, e2) {
    if ("cartesian2d" === t2.type) {
      var n2 = e2[0].coord, i2 = e2[1].coord;
      if (n2 && i2 && (RB(1, n2, i2, t2) || RB(0, n2, i2, t2)))
        return true;
    }
    return SB(t2, e2[0]) && SB(t2, e2[1]);
  }
  function EB(t2, e2, n2, i2, r2) {
    var o2, a2 = i2.coordinateSystem, s2 = t2.getItemModel(e2), l2 = Xr(s2.get("x"), r2.getWidth()), u2 = Xr(s2.get("y"), r2.getHeight());
    if (isNaN(l2) || isNaN(u2)) {
      if (i2.getMarkerPosition)
        o2 = i2.getMarkerPosition(t2.getValues(t2.dimensions, e2));
      else {
        var h2 = a2.dimensions, c2 = t2.get(h2[0], e2), p2 = t2.get(h2[1], e2);
        o2 = a2.dataToPoint([c2, p2]);
      }
      if (zS(a2, "cartesian2d")) {
        var d2 = a2.getAxis("x"), f2 = a2.getAxis("y");
        h2 = a2.dimensions;
        OB(t2.get(h2[0], e2)) ? o2[0] = d2.toGlobalCoord(d2.getExtent()[n2 ? 0 : 1]) : OB(t2.get(h2[1], e2)) && (o2[1] = f2.toGlobalCoord(f2.getExtent()[n2 ? 0 : 1]));
      }
      isNaN(l2) || (o2[0] = l2), isNaN(u2) || (o2[1] = u2);
    } else
      o2 = [l2, u2];
    t2.setItemLayout(e2, o2);
  }
  var zB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.updateTransform = function(t3, e2, n3) {
      e2.eachSeries(function(t4) {
        var e3 = yB.getMarkerModelFromSeries(t4, "markLine");
        if (e3) {
          var i2 = e3.getData(), r2 = LB(e3).from, o2 = LB(e3).to;
          r2.each(function(e4) {
            EB(r2, e4, true, t4, n3), EB(o2, e4, false, t4, n3);
          }), i2.each(function(t5) {
            i2.setItemLayout(t5, [r2.getItemLayout(t5), o2.getItemLayout(t5)]);
          }), this.markerGroupMap.get(t4.id).updateLayout();
        }
      }, this);
    }, n2.prototype.renderSeries = function(t3, e2, n3, i2) {
      var r2 = t3.coordinateSystem, o2 = t3.id, a2 = t3.getData(), s2 = this.markerGroupMap, l2 = s2.get(o2) || s2.set(o2, new ZA());
      this.group.add(l2.group);
      var u2 = function(t4, e3, n4) {
        var i3;
        i3 = t4 ? E(t4 && t4.dimensions, function(t5) {
          return D(D({}, e3.getData().getDimensionInfo(e3.getData().mapDimension(t5)) || {}), { name: t5, ordinalMeta: null });
        }) : [{ name: "value", type: "float" }];
        var r3 = new vx(i3, n4), o3 = new vx(i3, n4), a3 = new vx([], n4), s3 = E(n4.get("data"), W(PB, e3, t4, n4));
        t4 && (s3 = V(s3, W(NB, t4)));
        var l3 = MB(!!t4, i3);
        return r3.initData(E(s3, function(t5) {
          return t5[0];
        }), null, l3), o3.initData(E(s3, function(t5) {
          return t5[1];
        }), null, l3), a3.initData(E(s3, function(t5) {
          return t5[2];
        })), a3.hasItemOption = true, { from: r3, to: o3, line: a3 };
      }(r2, t3, e2), h2 = u2.from, c2 = u2.to, p2 = u2.line;
      LB(e2).from = h2, LB(e2).to = c2, e2.setData(p2);
      var d2 = e2.get("symbol"), f2 = e2.get("symbolSize"), g2 = e2.get("symbolRotate"), y2 = e2.get("symbolOffset");
      function v2(e3, n4, r3) {
        var o3 = e3.getItemModel(n4);
        EB(e3, n4, r3, t3, i2);
        var s3 = o3.getModel("itemStyle").getItemStyle();
        null == s3.fill && (s3.fill = Iy(a2, "color")), e3.setItemVisual(n4, { symbolKeepAspect: o3.get("symbolKeepAspect"), symbolOffset: it(o3.get("symbolOffset", true), y2[r3 ? 0 : 1]), symbolRotate: it(o3.get("symbolRotate", true), g2[r3 ? 0 : 1]), symbolSize: it(o3.get("symbolSize"), f2[r3 ? 0 : 1]), symbol: it(o3.get("symbol", true), d2[r3 ? 0 : 1]), style: s3 });
      }
      H(d2) || (d2 = [d2, d2]), H(f2) || (f2 = [f2, f2]), H(g2) || (g2 = [g2, g2]), H(y2) || (y2 = [y2, y2]), u2.from.each(function(t4) {
        v2(h2, t4, true), v2(c2, t4, false);
      }), p2.each(function(t4) {
        var e3 = p2.getItemModel(t4).getModel("lineStyle").getLineStyle();
        p2.setItemLayout(t4, [h2.getItemLayout(t4), c2.getItemLayout(t4)]), null == e3.stroke && (e3.stroke = h2.getItemVisual(t4, "style").fill), p2.setItemVisual(t4, { fromSymbolKeepAspect: h2.getItemVisual(t4, "symbolKeepAspect"), fromSymbolOffset: h2.getItemVisual(t4, "symbolOffset"), fromSymbolRotate: h2.getItemVisual(t4, "symbolRotate"), fromSymbolSize: h2.getItemVisual(t4, "symbolSize"), fromSymbol: h2.getItemVisual(t4, "symbol"), toSymbolKeepAspect: c2.getItemVisual(t4, "symbolKeepAspect"), toSymbolOffset: c2.getItemVisual(t4, "symbolOffset"), toSymbolRotate: c2.getItemVisual(t4, "symbolRotate"), toSymbolSize: c2.getItemVisual(t4, "symbolSize"), toSymbol: c2.getItemVisual(t4, "symbol"), style: e3 });
      }), l2.updateData(p2), u2.line.eachItemGraphicEl(function(t4) {
        Js(t4).dataModel = e2, t4.traverse(function(t5) {
          Js(t5).dataModel = e2;
        });
      }), this.markKeep(l2), l2.group.silent = e2.get("silent") || t3.get("silent");
    }, n2.type = "markLine", n2;
  }(CB);
  var VB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.createMarkerModelFromSeries = function(t3, e2, i2) {
      return new n2(t3, e2, i2);
    }, n2.type = "markArea", n2.defaultOption = { z: 1, tooltip: { trigger: "item" }, animation: false, label: { show: true, position: "top" }, itemStyle: { borderWidth: 0 }, emphasis: { label: { show: true, position: "top" } } }, n2;
  }(yB);
  var BB = Po();
  var FB = function(t2, e2, n2, i2) {
    var r2 = i2[0], o2 = i2[1];
    if (r2 && o2) {
      var a2 = bB(t2, r2), s2 = bB(t2, o2), l2 = a2.coord, u2 = s2.coord;
      l2[0] = nt(l2[0], -1 / 0), l2[1] = nt(l2[1], -1 / 0), u2[0] = nt(u2[0], 1 / 0), u2[1] = nt(u2[1], 1 / 0);
      var h2 = C([{}, a2, s2]);
      return h2.coord = [a2.coord, s2.coord], h2.x0 = a2.x, h2.y0 = a2.y, h2.x1 = s2.x, h2.y1 = s2.y, h2;
    }
  };
  function GB(t2) {
    return !isNaN(t2) && !isFinite(t2);
  }
  function WB(t2, e2, n2, i2) {
    var r2 = 1 - t2;
    return GB(e2[r2]) && GB(n2[r2]);
  }
  function HB(t2, e2) {
    var n2 = e2.coord[0], i2 = e2.coord[1], r2 = { coord: n2, x: e2.x0, y: e2.y0 }, o2 = { coord: i2, x: e2.x1, y: e2.y1 };
    return zS(t2, "cartesian2d") ? !(!n2 || !i2 || !WB(1, n2, i2) && !WB(0, n2, i2)) || function(t3, e3, n3) {
      return !(t3 && t3.containZone && e3.coord && n3.coord && !mB(e3) && !mB(n3)) || t3.containZone(e3.coord, n3.coord);
    }(t2, r2, o2) : SB(t2, r2) || SB(t2, o2);
  }
  function YB(t2, e2, n2, i2, r2) {
    var o2, a2 = i2.coordinateSystem, s2 = t2.getItemModel(e2), l2 = Xr(s2.get(n2[0]), r2.getWidth()), u2 = Xr(s2.get(n2[1]), r2.getHeight());
    if (isNaN(l2) || isNaN(u2)) {
      if (i2.getMarkerPosition) {
        var h2 = t2.getValues(["x0", "y0"], e2), c2 = t2.getValues(["x1", "y1"], e2), p2 = a2.clampData(h2), d2 = a2.clampData(c2), f2 = [];
        "x0" === n2[0] ? f2[0] = p2[0] > d2[0] ? c2[0] : h2[0] : f2[0] = p2[0] > d2[0] ? h2[0] : c2[0], "y0" === n2[1] ? f2[1] = p2[1] > d2[1] ? c2[1] : h2[1] : f2[1] = p2[1] > d2[1] ? h2[1] : c2[1], o2 = i2.getMarkerPosition(f2, n2, true);
      } else {
        var g2 = [m2 = t2.get(n2[0], e2), x2 = t2.get(n2[1], e2)];
        a2.clampData && a2.clampData(g2, g2), o2 = a2.dataToPoint(g2, true);
      }
      if (zS(a2, "cartesian2d")) {
        var y2 = a2.getAxis("x"), v2 = a2.getAxis("y"), m2 = t2.get(n2[0], e2), x2 = t2.get(n2[1], e2);
        GB(m2) ? o2[0] = y2.toGlobalCoord(y2.getExtent()["x0" === n2[0] ? 0 : 1]) : GB(x2) && (o2[1] = v2.toGlobalCoord(v2.getExtent()["y0" === n2[1] ? 0 : 1]));
      }
      isNaN(l2) || (o2[0] = l2), isNaN(u2) || (o2[1] = u2);
    } else
      o2 = [l2, u2];
    return o2;
  }
  var XB = [["x0", "y0"], ["x1", "y0"], ["x1", "y1"], ["x0", "y1"]];
  var UB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.updateTransform = function(t3, e2, n3) {
      e2.eachSeries(function(t4) {
        var e3 = yB.getMarkerModelFromSeries(t4, "markArea");
        if (e3) {
          var i2 = e3.getData();
          i2.each(function(e4) {
            var r2 = E(XB, function(r3) {
              return YB(i2, e4, r3, t4, n3);
            });
            i2.setItemLayout(e4, r2), i2.getItemGraphicEl(e4).setShape("points", r2);
          });
        }
      }, this);
    }, n2.prototype.renderSeries = function(t3, e2, n3, i2) {
      var r2 = t3.coordinateSystem, o2 = t3.id, a2 = t3.getData(), s2 = this.markerGroupMap, l2 = s2.get(o2) || s2.set(o2, { group: new Er() });
      this.group.add(l2.group), this.markKeep(l2);
      var u2 = function(t4, e3, n4) {
        var i3, r3, o3 = ["x0", "y0", "x1", "y1"];
        if (t4) {
          var a3 = E(t4 && t4.dimensions, function(t5) {
            var n5 = e3.getData();
            return D(D({}, n5.getDimensionInfo(n5.mapDimension(t5)) || {}), { name: t5, ordinalMeta: null });
          });
          r3 = E(o3, function(t5, e4) {
            return { name: t5, type: a3[e4 % 2].type };
          }), i3 = new vx(r3, n4);
        } else
          i3 = new vx(r3 = [{ name: "value", type: "float" }], n4);
        var s3 = E(n4.get("data"), W(FB, e3, t4, n4));
        t4 && (s3 = V(s3, W(HB, t4)));
        var l3 = t4 ? function(t5, e4, n5, i4) {
          return bf(t5.coord[Math.floor(i4 / 2)][i4 % 2], r3[i4]);
        } : function(t5, e4, n5, i4) {
          return bf(t5.value, r3[i4]);
        };
        return i3.initData(s3, null, l3), i3.hasItemOption = true, i3;
      }(r2, t3, e2);
      e2.setData(u2), u2.each(function(e3) {
        var n4 = E(XB, function(n5) {
          return YB(u2, e3, n5, t3, i2);
        }), o3 = r2.getAxis("x").scale, s3 = r2.getAxis("y").scale, l3 = o3.getExtent(), h2 = s3.getExtent(), c2 = [o3.parse(u2.get("x0", e3)), o3.parse(u2.get("x1", e3))], p2 = [s3.parse(u2.get("y0", e3)), s3.parse(u2.get("y1", e3))];
        Zr(c2), Zr(p2);
        var d2 = !!(l3[0] > c2[1] || l3[1] < c2[0] || h2[0] > p2[1] || h2[1] < p2[0]);
        u2.setItemLayout(e3, { points: n4, allClipped: d2 });
        var f2 = u2.getItemModel(e3).getModel("itemStyle").getItemStyle(), g2 = Iy(a2, "color");
        f2.fill || (f2.fill = g2, X(f2.fill) && (f2.fill = ni(f2.fill, 0.4))), f2.stroke || (f2.stroke = g2), u2.setItemVisual(e3, "style", f2);
      }), u2.diff(BB(l2).data).add(function(t4) {
        var e3 = u2.getItemLayout(t4);
        if (!e3.allClipped) {
          var n4 = new Gu({ shape: { points: e3.points } });
          u2.setItemGraphicEl(t4, n4), l2.group.add(n4);
        }
      }).update(function(t4, n4) {
        var i3 = BB(l2).data.getItemGraphicEl(n4), r3 = u2.getItemLayout(t4);
        r3.allClipped ? i3 && l2.group.remove(i3) : (i3 ? dh(i3, { shape: { points: r3.points } }, e2, t4) : i3 = new Gu({ shape: { points: r3.points } }), u2.setItemGraphicEl(t4, i3), l2.group.add(i3));
      }).remove(function(t4) {
        var e3 = BB(l2).data.getItemGraphicEl(t4);
        l2.group.remove(e3);
      }).execute(), u2.eachItemGraphicEl(function(t4, n4) {
        var i3 = u2.getItemModel(n4), r3 = u2.getItemVisual(n4, "style");
        t4.useStyle(u2.getItemVisual(n4, "style")), Qh(t4, tc(i3), { labelFetcher: e2, labelDataIndex: n4, defaultText: u2.getName(n4) || "", inheritColor: X(r3.fill) ? ni(r3.fill, 1) : "#000" }), Zl(t4, i3), Hl(t4, null, null, i3.get(["emphasis", "disabled"])), Js(t4).dataModel = e2;
      }), BB(l2).data = u2, l2.group.silent = e2.get("silent") || t3.get("silent");
    }, n2.type = "markArea", n2;
  }(CB);
  var ZB = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.layoutMode = { type: "box", ignoreSize: true }, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.mergeDefaultAndTheme(t3, n3), t3.selected = t3.selected || {}, this._updateSelector(t3);
    }, n2.prototype.mergeOption = function(e2, n3) {
      t2.prototype.mergeOption.call(this, e2, n3), this._updateSelector(e2);
    }, n2.prototype._updateSelector = function(t3) {
      var e2 = t3.selector, n3 = this.ecModel;
      true === e2 && (e2 = t3.selector = ["all", "inverse"]), H(e2) && N(e2, function(t4, i2) {
        X(t4) && (t4 = { type: t4 }), e2[i2] = T(t4, function(t5, e3) {
          return "all" === e3 ? { type: "all", title: t5.getLocaleModel().get(["legend", "selector", "all"]) } : "inverse" === e3 ? { type: "inverse", title: t5.getLocaleModel().get(["legend", "selector", "inverse"]) } : void 0;
        }(n3, t4.type));
      });
    }, n2.prototype.optionUpdated = function() {
      this._updateData(this.ecModel);
      var t3 = this._data;
      if (t3[0] && "single" === this.get("selectedMode")) {
        for (var e2 = false, n3 = 0; n3 < t3.length; n3++) {
          var i2 = t3[n3].get("name");
          if (this.isSelected(i2)) {
            this.select(i2), e2 = true;
            break;
          }
        }
        !e2 && this.select(t3[0].get("name"));
      }
    }, n2.prototype._updateData = function(t3) {
      var e2 = [], n3 = [];
      t3.eachRawSeries(function(i3) {
        var r3, o3 = i3.name;
        if (n3.push(o3), i3.legendVisualProvider) {
          var a2 = i3.legendVisualProvider.getAllNames();
          t3.isSeriesFiltered(i3) || (n3 = n3.concat(a2)), a2.length ? e2 = e2.concat(a2) : r3 = true;
        } else
          r3 = true;
        r3 && Ao(i3) && e2.push(i3.name);
      }), this._availableNames = n3;
      var i2 = this.get("data") || e2, r2 = gt(), o2 = E(i2, function(t4) {
        return (X(t4) || Z(t4)) && (t4 = { name: t4 }), r2.get(t4.name) ? null : (r2.set(t4.name, true), new Sc(t4, this, this.ecModel));
      }, this);
      this._data = V(o2, function(t4) {
        return !!t4;
      });
    }, n2.prototype.getData = function() {
      return this._data;
    }, n2.prototype.select = function(t3) {
      var e2 = this.option.selected;
      "single" === this.get("selectedMode") && N(this._data, function(t4) {
        e2[t4.get("name")] = false;
      });
      e2[t3] = true;
    }, n2.prototype.unSelect = function(t3) {
      "single" !== this.get("selectedMode") && (this.option.selected[t3] = false);
    }, n2.prototype.toggleSelected = function(t3) {
      var e2 = this.option.selected;
      e2.hasOwnProperty(t3) || (e2[t3] = true), this[e2[t3] ? "unSelect" : "select"](t3);
    }, n2.prototype.allSelect = function() {
      var t3 = this._data, e2 = this.option.selected;
      N(t3, function(t4) {
        e2[t4.get("name", true)] = true;
      });
    }, n2.prototype.inverseSelect = function() {
      var t3 = this._data, e2 = this.option.selected;
      N(t3, function(t4) {
        var n3 = t4.get("name", true);
        e2.hasOwnProperty(n3) || (e2[n3] = true), e2[n3] = !e2[n3];
      });
    }, n2.prototype.isSelected = function(t3) {
      var e2 = this.option.selected;
      return !(e2.hasOwnProperty(t3) && !e2[t3]) && L(this._availableNames, t3) >= 0;
    }, n2.prototype.getOrient = function() {
      return "vertical" === this.get("orient") ? { index: 1, name: "vertical" } : { index: 0, name: "horizontal" };
    }, n2.type = "legend.plain", n2.dependencies = ["series"], n2.defaultOption = { z: 4, show: true, orient: "horizontal", left: "center", top: 0, align: "auto", backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", borderRadius: 0, borderWidth: 0, padding: 5, itemGap: 10, itemWidth: 25, itemHeight: 14, symbolRotate: "inherit", symbolKeepAspect: true, inactiveColor: "#ccc", inactiveBorderColor: "#ccc", inactiveBorderWidth: "auto", itemStyle: { color: "inherit", opacity: "inherit", borderColor: "inherit", borderWidth: "auto", borderCap: "inherit", borderJoin: "inherit", borderDashOffset: "inherit", borderMiterLimit: "inherit" }, lineStyle: { width: "auto", color: "inherit", inactiveColor: "#ccc", inactiveWidth: 2, opacity: "inherit", type: "inherit", cap: "inherit", join: "inherit", dashOffset: "inherit", miterLimit: "inherit" }, textStyle: { color: "#333" }, selectedMode: true, selector: false, selectorLabel: { show: true, borderRadius: 10, padding: [3, 5, 3, 5], fontSize: 12, fontFamily: "sans-serif", color: "#666", borderWidth: 1, borderColor: "#666" }, emphasis: { selectorLabel: { show: true, color: "#eee", backgroundColor: "#666" } }, selectorPosition: "auto", selectorItemGap: 7, selectorButtonGap: 10, tooltip: { show: false } }, n2;
  }(Op);
  var jB = W;
  var qB = N;
  var KB = Er;
  var $B = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.newlineDisabled = false, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      this.group.add(this._contentGroup = new KB()), this.group.add(this._selectorGroup = new KB()), this._isFirstRender = true;
    }, n2.prototype.getContentGroup = function() {
      return this._contentGroup;
    }, n2.prototype.getSelectorGroup = function() {
      return this._selectorGroup;
    }, n2.prototype.render = function(t3, e2, n3) {
      var i2 = this._isFirstRender;
      if (this._isFirstRender = false, this.resetInner(), t3.get("show", true)) {
        var r2 = t3.get("align"), o2 = t3.get("orient");
        r2 && "auto" !== r2 || (r2 = "right" === t3.get("left") && "vertical" === o2 ? "right" : "left");
        var a2 = t3.get("selector", true), s2 = t3.get("selectorPosition", true);
        !a2 || s2 && "auto" !== s2 || (s2 = "horizontal" === o2 ? "end" : "start"), this.renderInner(r2, t3, e2, n3, a2, o2, s2);
        var l2 = t3.getBoxLayoutParams(), u2 = { width: n3.getWidth(), height: n3.getHeight() }, h2 = t3.get("padding"), c2 = Tp(l2, u2, h2), p2 = this.layoutInner(t3, r2, c2, i2, a2, s2), d2 = Tp(A({ width: p2.width, height: p2.height }, l2), u2, h2);
        this.group.x = d2.x - p2.x, this.group.y = d2.y - p2.y, this.group.markRedraw(), this.group.add(this._backgroundEl = Tz(p2, t3));
      }
    }, n2.prototype.resetInner = function() {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, n2.prototype.renderInner = function(t3, e2, n3, i2, r2, o2, a2) {
      var s2 = this.getContentGroup(), l2 = gt(), u2 = e2.get("selectedMode"), h2 = [];
      n3.eachRawSeries(function(t4) {
        !t4.get("legendHoverLink") && h2.push(t4.id);
      }), qB(e2.getData(), function(r3, o3) {
        var a3 = r3.get("name");
        if (!this.newlineDisabled && ("" === a3 || "\n" === a3)) {
          var c2 = new KB();
          return c2.newline = true, void s2.add(c2);
        }
        var p2 = n3.getSeriesByName(a3)[0];
        if (!l2.get(a3)) {
          if (p2) {
            var d2 = p2.getData(), f2 = d2.getVisual("legendLineStyle") || {}, g2 = d2.getVisual("legendIcon"), y2 = d2.getVisual("style");
            this._createItem(p2, a3, o3, r3, e2, t3, f2, y2, g2, u2, i2).on("click", jB(JB, a3, null, i2, h2)).on("mouseover", jB(tF, p2.name, null, i2, h2)).on("mouseout", jB(eF, p2.name, null, i2, h2)), l2.set(a3, true);
          } else
            n3.eachRawSeries(function(n4) {
              if (!l2.get(a3) && n4.legendVisualProvider) {
                var s3 = n4.legendVisualProvider;
                if (!s3.containName(a3))
                  return;
                var c3 = s3.indexOfName(a3), p3 = s3.getItemVisual(c3, "style"), d3 = s3.getItemVisual(c3, "legendIcon"), f3 = jn(p3.fill);
                f3 && 0 === f3[3] && (f3[3] = 0.2, p3 = D(D({}, p3), { fill: ii(f3, "rgba") })), this._createItem(n4, a3, o3, r3, e2, t3, {}, p3, d3, u2, i2).on("click", jB(JB, null, a3, i2, h2)).on("mouseover", jB(tF, null, a3, i2, h2)).on("mouseout", jB(eF, null, a3, i2, h2)), l2.set(a3, true);
              }
            }, this);
        }
      }, this), r2 && this._createSelector(r2, e2, i2, o2, a2);
    }, n2.prototype._createSelector = function(t3, e2, n3, i2, r2) {
      var o2 = this.getSelectorGroup();
      qB(t3, function(t4) {
        var i3 = t4.type, r3 = new Bs({ style: { x: 0, y: 0, align: "center", verticalAlign: "middle" }, onclick: function() {
          n3.dispatchAction({ type: "all" === i3 ? "legendAllSelect" : "legendInverseSelect" });
        } });
        o2.add(r3), Qh(r3, { normal: e2.getModel("selectorLabel"), emphasis: e2.getModel(["emphasis", "selectorLabel"]) }, { defaultText: t4.title }), Wl(r3);
      });
    }, n2.prototype._createItem = function(t3, e2, n3, i2, r2, o2, a2, s2, l2, u2, h2) {
      var c2 = t3.visualDrawType, p2 = r2.get("itemWidth"), d2 = r2.get("itemHeight"), f2 = r2.isSelected(e2), g2 = i2.get("symbolRotate"), y2 = i2.get("symbolKeepAspect"), v2 = i2.get("icon"), m2 = function(t4, e3, n4, i3, r3, o3, a3) {
        function s3(t5, e4) {
          "auto" === t5.lineWidth && (t5.lineWidth = e4.lineWidth > 0 ? 2 : 0), qB(t5, function(n5, i4) {
            "inherit" === t5[i4] && (t5[i4] = e4[i4]);
          });
        }
        var l3 = e3.getModel("itemStyle"), u3 = l3.getItemStyle(), h3 = 0 === t4.lastIndexOf("empty", 0) ? "fill" : "stroke", c3 = l3.getShallow("decal");
        u3.decal = c3 && "inherit" !== c3 ? fv(c3, a3) : i3.decal, "inherit" === u3.fill && (u3.fill = i3[r3]);
        "inherit" === u3.stroke && (u3.stroke = i3[h3]);
        "inherit" === u3.opacity && (u3.opacity = ("fill" === r3 ? i3 : n4).opacity);
        s3(u3, i3);
        var p3 = e3.getModel("lineStyle"), d3 = p3.getLineStyle();
        if (s3(d3, n4), "auto" === u3.fill && (u3.fill = i3.fill), "auto" === u3.stroke && (u3.stroke = i3.fill), "auto" === d3.stroke && (d3.stroke = i3.fill), !o3) {
          var f3 = e3.get("inactiveBorderWidth"), g3 = u3[h3];
          u3.lineWidth = "auto" === f3 ? i3.lineWidth > 0 && g3 ? 2 : 0 : u3.lineWidth, u3.fill = e3.get("inactiveColor"), u3.stroke = e3.get("inactiveBorderColor"), d3.stroke = p3.get("inactiveColor"), d3.lineWidth = p3.get("inactiveWidth");
        }
        return { itemStyle: u3, lineStyle: d3 };
      }(l2 = v2 || l2 || "roundRect", i2, a2, s2, c2, f2, h2), x2 = new KB(), _2 = i2.getModel("textStyle");
      if (!Y(t3.getLegendIcon) || v2 && "inherit" !== v2) {
        var b2 = "inherit" === v2 && t3.getData().getVisual("symbol") ? "inherit" === g2 ? t3.getData().getVisual("symbolRotate") : g2 : 0;
        x2.add(function(t4) {
          var e3 = t4.icon || "roundRect", n4 = Gy(e3, 0, 0, t4.itemWidth, t4.itemHeight, t4.itemStyle.fill, t4.symbolKeepAspect);
          n4.setStyle(t4.itemStyle), n4.rotation = (t4.iconRotate || 0) * Math.PI / 180, n4.setOrigin([t4.itemWidth / 2, t4.itemHeight / 2]), e3.indexOf("empty") > -1 && (n4.style.stroke = n4.style.fill, n4.style.fill = "#fff", n4.style.lineWidth = 2);
          return n4;
        }({ itemWidth: p2, itemHeight: d2, icon: l2, iconRotate: b2, itemStyle: m2.itemStyle, lineStyle: m2.lineStyle, symbolKeepAspect: y2 }));
      } else
        x2.add(t3.getLegendIcon({ itemWidth: p2, itemHeight: d2, icon: l2, iconRotate: g2, itemStyle: m2.itemStyle, lineStyle: m2.lineStyle, symbolKeepAspect: y2 }));
      var w2 = "left" === o2 ? p2 + 5 : -5, S2 = o2, M2 = r2.get("formatter"), I2 = e2;
      X(M2) && M2 ? I2 = M2.replace("{name}", null != e2 ? e2 : "") : Y(M2) && (I2 = M2(e2));
      var T2 = f2 ? _2.getTextColor() : i2.get("inactiveColor");
      x2.add(new Bs({ style: ec(_2, { text: I2, x: w2, y: d2 / 2, fill: T2, align: S2, verticalAlign: "middle" }, { inheritColor: T2 }) }));
      var C2 = new Es({ shape: x2.getBoundingRect(), invisible: true }), D2 = i2.getModel("tooltip");
      return D2.get("show") && Uh({ el: C2, componentModel: r2, itemName: e2, itemTooltipOption: D2.option }), x2.add(C2), x2.eachChild(function(t4) {
        t4.silent = true;
      }), C2.silent = !u2, this.getContentGroup().add(x2), Wl(x2), x2.__legendDataIndex = n3, x2;
    }, n2.prototype.layoutInner = function(t3, e2, n3, i2, r2, o2) {
      var a2 = this.getContentGroup(), s2 = this.getSelectorGroup();
      Ip(t3.get("orient"), a2, t3.get("itemGap"), n3.width, n3.height);
      var l2 = a2.getBoundingRect(), u2 = [-l2.x, -l2.y];
      if (s2.markRedraw(), a2.markRedraw(), r2) {
        Ip("horizontal", s2, t3.get("selectorItemGap", true));
        var h2 = s2.getBoundingRect(), c2 = [-h2.x, -h2.y], p2 = t3.get("selectorButtonGap", true), d2 = t3.getOrient().index, f2 = 0 === d2 ? "width" : "height", g2 = 0 === d2 ? "height" : "width", y2 = 0 === d2 ? "y" : "x";
        "end" === o2 ? c2[d2] += l2[f2] + p2 : u2[d2] += h2[f2] + p2, c2[1 - d2] += l2[g2] / 2 - h2[g2] / 2, s2.x = c2[0], s2.y = c2[1], a2.x = u2[0], a2.y = u2[1];
        var v2 = { x: 0, y: 0 };
        return v2[f2] = l2[f2] + p2 + h2[f2], v2[g2] = Math.max(l2[g2], h2[g2]), v2[y2] = Math.min(0, h2[y2] + c2[1 - d2]), v2;
      }
      return a2.x = u2[0], a2.y = u2[1], this.group.getBoundingRect();
    }, n2.prototype.remove = function() {
      this.getContentGroup().removeAll(), this._isFirstRender = true;
    }, n2.type = "legend.plain", n2;
  }(Ig);
  function JB(t2, e2, n2, i2) {
    eF(t2, e2, n2, i2), n2.dispatchAction({ type: "legendToggleSelect", name: null != t2 ? t2 : e2 }), tF(t2, e2, n2, i2);
  }
  function QB(t2) {
    for (var e2, n2 = t2.getZr().storage.getDisplayList(), i2 = 0, r2 = n2.length; i2 < r2 && !(e2 = n2[i2].states.emphasis); )
      i2++;
    return e2 && e2.hoverLayer;
  }
  function tF(t2, e2, n2, i2) {
    QB(n2) || n2.dispatchAction({ type: "highlight", seriesName: t2, name: e2, excludeSeriesId: i2 });
  }
  function eF(t2, e2, n2, i2) {
    QB(n2) || n2.dispatchAction({ type: "downplay", seriesName: t2, name: e2, excludeSeriesId: i2 });
  }
  function nF(t2) {
    var e2 = t2.findComponents({ mainType: "legend" });
    e2 && e2.length && t2.filterSeries(function(t3) {
      for (var n2 = 0; n2 < e2.length; n2++)
        if (!e2[n2].isSelected(t3.name))
          return false;
      return true;
    });
  }
  function iF(t2, e2, n2) {
    var i2, r2 = {}, o2 = "toggleSelected" === t2;
    return n2.eachComponent("legend", function(n3) {
      o2 && null != i2 ? n3[i2 ? "select" : "unSelect"](e2.name) : "allSelect" === t2 || "inverseSelect" === t2 ? n3[t2]() : (n3[t2](e2.name), i2 = n3.isSelected(e2.name)), N(n3.getData(), function(t3) {
        var e3 = t3.get("name");
        if ("\n" !== e3 && "" !== e3) {
          var i3 = n3.isSelected(e3);
          r2.hasOwnProperty(e3) ? r2[e3] = r2[e3] && i3 : r2[e3] = i3;
        }
      });
    }), "allSelect" === t2 || "inverseSelect" === t2 ? { selected: r2 } : { name: e2.name, selected: r2 };
  }
  function rF(t2) {
    t2.registerComponentModel(ZB), t2.registerComponentView($B), t2.registerProcessor(t2.PRIORITY.PROCESSOR.SERIES_FILTER, nF), t2.registerSubTypeDefaulter("legend", function() {
      return "plain";
    }), function(t3) {
      t3.registerAction("legendToggleSelect", "legendselectchanged", W(iF, "toggleSelected")), t3.registerAction("legendAllSelect", "legendselectall", W(iF, "allSelect")), t3.registerAction("legendInverseSelect", "legendinverseselect", W(iF, "inverseSelect")), t3.registerAction("legendSelect", "legendselected", W(iF, "select")), t3.registerAction("legendUnSelect", "legendunselected", W(iF, "unSelect"));
    }(t2);
  }
  var oF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.setScrollDataIndex = function(t3) {
      this.option.scrollDataIndex = t3;
    }, n2.prototype.init = function(e2, n3, i2) {
      var r2 = kp(e2);
      t2.prototype.init.call(this, e2, n3, i2), aF(this, e2, r2);
    }, n2.prototype.mergeOption = function(e2, n3) {
      t2.prototype.mergeOption.call(this, e2, n3), aF(this, this.option, e2);
    }, n2.type = "legend.scroll", n2.defaultOption = Tc(ZB.defaultOption, { scrollDataIndex: 0, pageButtonItemGap: 5, pageButtonGap: null, pageButtonPosition: "end", pageFormatter: "{current}/{total}", pageIcons: { horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"], vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"] }, pageIconColor: "#2f4554", pageIconInactiveColor: "#aaa", pageIconSize: 15, pageTextStyle: { color: "#333" }, animationDurationUpdate: 800 }), n2;
  }(ZB);
  function aF(t2, e2, n2) {
    var i2 = [1, 1];
    i2[t2.getOrient().index] = 0, Ap(e2, n2, { type: "box", ignoreSize: !!i2 });
  }
  var sF = Er;
  var lF = ["width", "height"];
  var uF = ["x", "y"];
  var hF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.newlineDisabled = true, e2._currentIndex = 0, e2;
    }
    return e(n2, t2), n2.prototype.init = function() {
      t2.prototype.init.call(this), this.group.add(this._containerGroup = new sF()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new sF());
    }, n2.prototype.resetInner = function() {
      t2.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, n2.prototype.renderInner = function(e2, n3, i2, r2, o2, a2, s2) {
      var l2 = this;
      t2.prototype.renderInner.call(this, e2, n3, i2, r2, o2, a2, s2);
      var u2 = this._controllerGroup, h2 = n3.get("pageIconSize", true), c2 = H(h2) ? h2 : [h2, h2];
      d2("pagePrev", 0);
      var p2 = n3.getModel("pageTextStyle");
      function d2(t3, e3) {
        var i3 = t3 + "DataIndex", o3 = Wh(n3.get("pageIcons", true)[n3.getOrient().name][e3], { onclick: G(l2._pageGo, l2, i3, n3, r2) }, { x: -c2[0] / 2, y: -c2[1] / 2, width: c2[0], height: c2[1] });
        o3.name = t3, u2.add(o3);
      }
      u2.add(new Bs({ name: "pageText", style: { text: "xx/xx", fill: p2.getTextColor(), font: p2.getFont(), verticalAlign: "middle", align: "center" }, silent: true })), d2("pageNext", 1);
    }, n2.prototype.layoutInner = function(t3, e2, n3, i2, r2, o2) {
      var a2 = this.getSelectorGroup(), s2 = t3.getOrient().index, l2 = lF[s2], u2 = uF[s2], h2 = lF[1 - s2], c2 = uF[1 - s2];
      r2 && Ip("horizontal", a2, t3.get("selectorItemGap", true));
      var p2 = t3.get("selectorButtonGap", true), d2 = a2.getBoundingRect(), f2 = [-d2.x, -d2.y], g2 = I(n3);
      r2 && (g2[l2] = n3[l2] - d2[l2] - p2);
      var y2 = this._layoutContentAndController(t3, i2, g2, s2, l2, h2, c2, u2);
      if (r2) {
        if ("end" === o2)
          f2[s2] += y2[l2] + p2;
        else {
          var v2 = d2[l2] + p2;
          f2[s2] -= v2, y2[u2] -= v2;
        }
        y2[l2] += d2[l2] + p2, f2[1 - s2] += y2[c2] + y2[h2] / 2 - d2[h2] / 2, y2[h2] = Math.max(y2[h2], d2[h2]), y2[c2] = Math.min(y2[c2], d2[c2] + f2[1 - s2]), a2.x = f2[0], a2.y = f2[1], a2.markRedraw();
      }
      return y2;
    }, n2.prototype._layoutContentAndController = function(t3, e2, n3, i2, r2, o2, a2, s2) {
      var l2 = this.getContentGroup(), u2 = this._containerGroup, h2 = this._controllerGroup;
      Ip(t3.get("orient"), l2, t3.get("itemGap"), i2 ? n3.width : null, i2 ? null : n3.height), Ip("horizontal", h2, t3.get("pageButtonItemGap", true));
      var c2 = l2.getBoundingRect(), p2 = h2.getBoundingRect(), d2 = this._showController = c2[r2] > n3[r2], f2 = [-c2.x, -c2.y];
      e2 || (f2[i2] = l2[s2]);
      var g2 = [0, 0], y2 = [-p2.x, -p2.y], v2 = it(t3.get("pageButtonGap", true), t3.get("itemGap", true));
      d2 && ("end" === t3.get("pageButtonPosition", true) ? y2[i2] += n3[r2] - p2[r2] : g2[i2] += p2[r2] + v2);
      y2[1 - i2] += c2[o2] / 2 - p2[o2] / 2, l2.setPosition(f2), u2.setPosition(g2), h2.setPosition(y2);
      var m2 = { x: 0, y: 0 };
      if (m2[r2] = d2 ? n3[r2] : c2[r2], m2[o2] = Math.max(c2[o2], p2[o2]), m2[a2] = Math.min(0, p2[a2] + y2[1 - i2]), u2.__rectSize = n3[r2], d2) {
        var x2 = { x: 0, y: 0 };
        x2[r2] = Math.max(n3[r2] - p2[r2] - v2, 0), x2[o2] = m2[o2], u2.setClipPath(new Es({ shape: x2 })), u2.__rectSize = x2[r2];
      } else
        h2.eachChild(function(t4) {
          t4.attr({ invisible: true, silent: true });
        });
      var _2 = this._getPageInfo(t3);
      return null != _2.pageIndex && dh(l2, { x: _2.contentPosition[0], y: _2.contentPosition[1] }, d2 ? t3 : null), this._updatePageInfoView(t3, _2), m2;
    }, n2.prototype._pageGo = function(t3, e2, n3) {
      var i2 = this._getPageInfo(e2)[t3];
      null != i2 && n3.dispatchAction({ type: "legendScroll", scrollDataIndex: i2, legendId: e2.id });
    }, n2.prototype._updatePageInfoView = function(t3, e2) {
      var n3 = this._controllerGroup;
      N(["pagePrev", "pageNext"], function(i3) {
        var r3 = null != e2[i3 + "DataIndex"], o3 = n3.childOfName(i3);
        o3 && (o3.setStyle("fill", r3 ? t3.get("pageIconColor", true) : t3.get("pageIconInactiveColor", true)), o3.cursor = r3 ? "pointer" : "default");
      });
      var i2 = n3.childOfName("pageText"), r2 = t3.get("pageFormatter"), o2 = e2.pageIndex, a2 = null != o2 ? o2 + 1 : 0, s2 = e2.pageCount;
      i2 && r2 && i2.setStyle("text", X(r2) ? r2.replace("{current}", null == a2 ? "" : a2 + "").replace("{total}", null == s2 ? "" : s2 + "") : r2({ current: a2, total: s2 }));
    }, n2.prototype._getPageInfo = function(t3) {
      var e2 = t3.get("scrollDataIndex", true), n3 = this.getContentGroup(), i2 = this._containerGroup.__rectSize, r2 = t3.getOrient().index, o2 = lF[r2], a2 = uF[r2], s2 = this._findTargetItemIndex(e2), l2 = n3.children(), u2 = l2[s2], h2 = l2.length, c2 = h2 ? 1 : 0, p2 = { contentPosition: [n3.x, n3.y], pageCount: c2, pageIndex: c2 - 1, pagePrevDataIndex: null, pageNextDataIndex: null };
      if (!u2)
        return p2;
      var d2 = m2(u2);
      p2.contentPosition[r2] = -d2.s;
      for (var f2 = s2 + 1, g2 = d2, y2 = d2, v2 = null; f2 <= h2; ++f2)
        (!(v2 = m2(l2[f2])) && y2.e > g2.s + i2 || v2 && !x2(v2, g2.s)) && (g2 = y2.i > g2.i ? y2 : v2) && (null == p2.pageNextDataIndex && (p2.pageNextDataIndex = g2.i), ++p2.pageCount), y2 = v2;
      for (f2 = s2 - 1, g2 = d2, y2 = d2, v2 = null; f2 >= -1; --f2)
        (v2 = m2(l2[f2])) && x2(y2, v2.s) || !(g2.i < y2.i) || (y2 = g2, null == p2.pagePrevDataIndex && (p2.pagePrevDataIndex = g2.i), ++p2.pageCount, ++p2.pageIndex), g2 = v2;
      return p2;
      function m2(t4) {
        if (t4) {
          var e3 = t4.getBoundingRect(), n4 = e3[a2] + t4[a2];
          return { s: n4, e: n4 + e3[o2], i: t4.__legendDataIndex };
        }
      }
      function x2(t4, e3) {
        return t4.e >= e3 && t4.s <= e3 + i2;
      }
    }, n2.prototype._findTargetItemIndex = function(t3) {
      return this._showController ? (this.getContentGroup().eachChild(function(i2, r2) {
        var o2 = i2.__legendDataIndex;
        null == n3 && null != o2 && (n3 = r2), o2 === t3 && (e2 = r2);
      }), null != e2 ? e2 : n3) : 0;
      var e2, n3;
    }, n2.type = "legend.scroll", n2;
  }($B);
  function cF(t2) {
    Ym(rF), t2.registerComponentModel(oF), t2.registerComponentView(hF), function(t3) {
      t3.registerAction("legendScroll", "legendscroll", function(t4, e2) {
        var n2 = t4.scrollDataIndex;
        null != n2 && e2.eachComponent({ mainType: "legend", subType: "scroll", query: t4 }, function(t5) {
          t5.setScrollDataIndex(n2);
        });
      });
    }(t2);
  }
  var pF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "dataZoom.inside", n2.defaultOption = Tc(uz.defaultOption, { disabled: false, zoomLock: false, zoomOnMouseWheel: true, moveOnMouseMove: true, moveOnMouseWheel: false, preventDefaultMouseMove: true }), n2;
  }(uz);
  var dF = Po();
  function fF(t2, e2, n2) {
    dF(t2).coordSysRecordMap.each(function(t3) {
      var i2 = t3.dataZoomInfoMap.get(e2.uid);
      i2 && (i2.getRange = n2);
    });
  }
  function gF(t2, e2) {
    if (e2) {
      t2.removeKey(e2.model.uid);
      var n2 = e2.controller;
      n2 && n2.dispose();
    }
  }
  function yF(t2, e2) {
    t2.isDisposed() || t2.dispatchAction({ type: "dataZoom", animation: { easing: "cubicOut", duration: 100 }, batch: e2 });
  }
  function vF(t2, e2, n2, i2) {
    return t2.coordinateSystem.containPoint([n2, i2]);
  }
  function mF(t2) {
    t2.registerProcessor(t2.PRIORITY.PROCESSOR.FILTER, function(t3, e2) {
      var n2 = dF(e2), i2 = n2.coordSysRecordMap || (n2.coordSysRecordMap = gt());
      i2.each(function(t4) {
        t4.dataZoomInfoMap = null;
      }), t3.eachComponent({ mainType: "dataZoom", subType: "inside" }, function(t4) {
        N(sz(t4).infoList, function(n3) {
          var r2 = n3.model.uid, o2 = i2.get(r2) || i2.set(r2, function(t5, e3) {
            var n4 = { model: e3, containsPoint: W(vF, e3), dispatchAction: W(yF, t5), dataZoomInfoMap: null, controller: null }, i3 = n4.controller = new oT(t5.getZr());
            return N(["pan", "zoom", "scrollMove"], function(t6) {
              i3.on(t6, function(e4) {
                var i4 = [];
                n4.dataZoomInfoMap.each(function(r3) {
                  if (e4.isAvailableBehavior(r3.model.option)) {
                    var o3 = (r3.getRange || {})[t6], a2 = o3 && o3(r3.dzReferCoordSysInfo, n4.model.mainType, n4.controller, e4);
                    !r3.model.get("disabled", true) && a2 && i4.push({ dataZoomId: r3.model.id, start: a2[0], end: a2[1] });
                  }
                }), i4.length && n4.dispatchAction(i4);
              });
            }), n4;
          }(e2, n3.model));
          (o2.dataZoomInfoMap || (o2.dataZoomInfoMap = gt())).set(t4.uid, { dzReferCoordSysInfo: n3, model: t4, getRange: null });
        });
      }), i2.each(function(t4) {
        var e3, n3 = t4.controller, r2 = t4.dataZoomInfoMap;
        if (r2) {
          var o2 = r2.keys()[0];
          null != o2 && (e3 = r2.get(o2));
        }
        if (e3) {
          var a2 = function(t5) {
            var e4, n4 = "type_", i3 = { type_true: 2, type_move: 1, type_false: 0, type_undefined: -1 }, r3 = true;
            return t5.each(function(t6) {
              var o3 = t6.model, a3 = !o3.get("disabled", true) && (!o3.get("zoomLock", true) || "move");
              i3[n4 + a3] > i3[n4 + e4] && (e4 = a3), r3 = r3 && o3.get("preventDefaultMouseMove", true);
            }), { controlType: e4, opt: { zoomOnMouseWheel: true, moveOnMouseMove: true, moveOnMouseWheel: true, preventDefaultMouseMove: !!r3 } };
          }(r2);
          n3.enable(a2.controlType, a2.opt), n3.setPointerChecker(t4.containsPoint), Bg(t4, "dispatchAction", e3.model.get("throttle", true), "fixRate");
        } else
          gF(i2, t4);
      });
    });
  }
  var xF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "dataZoom.inside", e2;
    }
    return e(n2, t2), n2.prototype.render = function(e2, n3, i2) {
      t2.prototype.render.apply(this, arguments), e2.noTarget() ? this._clear() : (this.range = e2.getPercentRange(), fF(i2, e2, { pan: G(_F.pan, this), zoom: G(_F.zoom, this), scrollMove: G(_F.scrollMove, this) }));
    }, n2.prototype.dispose = function() {
      this._clear(), t2.prototype.dispose.apply(this, arguments);
    }, n2.prototype._clear = function() {
      !function(t3, e2) {
        for (var n3 = dF(t3).coordSysRecordMap, i2 = n3.keys(), r2 = 0; r2 < i2.length; r2++) {
          var o2 = i2[r2], a2 = n3.get(o2), s2 = a2.dataZoomInfoMap;
          if (s2) {
            var l2 = e2.uid;
            s2.get(l2) && (s2.removeKey(l2), s2.keys().length || gF(n3, a2));
          }
        }
      }(this.api, this.dataZoomModel), this.range = null;
    }, n2.type = "dataZoom.inside", n2;
  }(pz);
  var _F = { zoom: function(t2, e2, n2, i2) {
    var r2 = this.range, o2 = r2.slice(), a2 = t2.axisModels[0];
    if (a2) {
      var s2 = wF[e2](null, [i2.originX, i2.originY], a2, n2, t2), l2 = (s2.signal > 0 ? s2.pixelStart + s2.pixelLength - s2.pixel : s2.pixel - s2.pixelStart) / s2.pixelLength * (o2[1] - o2[0]) + o2[0], u2 = Math.max(1 / i2.scale, 0);
      o2[0] = (o2[0] - l2) * u2 + l2, o2[1] = (o2[1] - l2) * u2 + l2;
      var h2 = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();
      return Fk(0, o2, [0, 100], 0, h2.minSpan, h2.maxSpan), this.range = o2, r2[0] !== o2[0] || r2[1] !== o2[1] ? o2 : void 0;
    }
  }, pan: bF(function(t2, e2, n2, i2, r2, o2) {
    var a2 = wF[i2]([o2.oldX, o2.oldY], [o2.newX, o2.newY], e2, r2, n2);
    return a2.signal * (t2[1] - t2[0]) * a2.pixel / a2.pixelLength;
  }), scrollMove: bF(function(t2, e2, n2, i2, r2, o2) {
    return wF[i2]([0, 0], [o2.scrollDelta, o2.scrollDelta], e2, r2, n2).signal * (t2[1] - t2[0]) * o2.scrollDelta;
  }) };
  function bF(t2) {
    return function(e2, n2, i2, r2) {
      var o2 = this.range, a2 = o2.slice(), s2 = e2.axisModels[0];
      if (s2)
        return Fk(t2(a2, s2, e2, n2, i2, r2), a2, [0, 100], "all"), this.range = a2, o2[0] !== a2[0] || o2[1] !== a2[1] ? a2 : void 0;
    };
  }
  var wF = { grid: function(t2, e2, n2, i2, r2) {
    var o2 = n2.axis, a2 = {}, s2 = r2.model.coordinateSystem.getRect();
    return t2 = t2 || [0, 0], "x" === o2.dim ? (a2.pixel = e2[0] - t2[0], a2.pixelLength = s2.width, a2.pixelStart = s2.x, a2.signal = o2.inverse ? 1 : -1) : (a2.pixel = e2[1] - t2[1], a2.pixelLength = s2.height, a2.pixelStart = s2.y, a2.signal = o2.inverse ? -1 : 1), a2;
  }, polar: function(t2, e2, n2, i2, r2) {
    var o2 = n2.axis, a2 = {}, s2 = r2.model.coordinateSystem, l2 = s2.getRadiusAxis().getExtent(), u2 = s2.getAngleAxis().getExtent();
    return t2 = t2 ? s2.pointToCoord(t2) : [0, 0], e2 = s2.pointToCoord(e2), "radiusAxis" === n2.mainType ? (a2.pixel = e2[0] - t2[0], a2.pixelLength = l2[1] - l2[0], a2.pixelStart = l2[0], a2.signal = o2.inverse ? 1 : -1) : (a2.pixel = e2[1] - t2[1], a2.pixelLength = u2[1] - u2[0], a2.pixelStart = u2[0], a2.signal = o2.inverse ? -1 : 1), a2;
  }, singleAxis: function(t2, e2, n2, i2, r2) {
    var o2 = n2.axis, a2 = r2.model.coordinateSystem.getRect(), s2 = {};
    return t2 = t2 || [0, 0], "horizontal" === o2.orient ? (s2.pixel = e2[0] - t2[0], s2.pixelLength = a2.width, s2.pixelStart = a2.x, s2.signal = o2.inverse ? 1 : -1) : (s2.pixel = e2[1] - t2[1], s2.pixelLength = a2.height, s2.pixelStart = a2.y, s2.signal = o2.inverse ? -1 : 1), s2;
  } };
  function SF(t2) {
    xz(t2), t2.registerComponentModel(pF), t2.registerComponentView(xF), mF(t2);
  }
  var MF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.type = "dataZoom.slider", n2.layoutMode = "box", n2.defaultOption = Tc(uz.defaultOption, { show: true, right: "ph", top: "ph", width: "ph", height: "ph", left: null, bottom: null, borderColor: "#d2dbee", borderRadius: 3, backgroundColor: "rgba(47,69,84,0)", dataBackground: { lineStyle: { color: "#d2dbee", width: 0.5 }, areaStyle: { color: "#d2dbee", opacity: 0.2 } }, selectedDataBackground: { lineStyle: { color: "#8fb0f7", width: 0.5 }, areaStyle: { color: "#8fb0f7", opacity: 0.2 } }, fillerColor: "rgba(135,175,274,0.2)", handleIcon: "path://M-9.35,34.56V42m0-40V9.5m-2,0h4a2,2,0,0,1,2,2v21a2,2,0,0,1-2,2h-4a2,2,0,0,1-2-2v-21A2,2,0,0,1-11.35,9.5Z", handleSize: "100%", handleStyle: { color: "#fff", borderColor: "#ACB8D1" }, moveHandleSize: 7, moveHandleIcon: "path://M-320.9-50L-320.9-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-348-41-339-50-320.9-50z M-212.3-50L-212.3-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-239.4-41-230.4-50-212.3-50z M-103.7-50L-103.7-50c18.1,0,27.1,9,27.1,27.1V85.7c0,18.1-9,27.1-27.1,27.1l0,0c-18.1,0-27.1-9-27.1-27.1V-22.9C-130.9-41-121.8-50-103.7-50z", moveHandleStyle: { color: "#D2DBEE", opacity: 0.7 }, showDetail: true, showDataShadow: "auto", realtime: true, zoomLock: false, textStyle: { color: "#6E7079" }, brushSelect: true, brushStyle: { color: "rgba(135,175,274,0.15)" }, emphasis: { handleStyle: { borderColor: "#8FB0F7" }, moveHandleStyle: { color: "#8FB0F7" } } }), n2;
  }(uz);
  var IF = Es;
  var TF = "horizontal";
  var CF = "vertical";
  var DF = ["line", "bar", "candlestick", "scatter"];
  var AF = { easing: "cubicOut", duration: 100, delay: 0 };
  var kF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._displayables = {}, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this.api = e2, this._onBrush = G(this._onBrush, this), this._onBrushEnd = G(this._onBrushEnd, this);
    }, n2.prototype.render = function(e2, n3, i2, r2) {
      if (t2.prototype.render.apply(this, arguments), Bg(this, "_dispatchZoomAction", e2.get("throttle"), "fixRate"), this._orient = e2.getOrient(), false !== e2.get("show")) {
        if (e2.noTarget())
          return this._clear(), void this.group.removeAll();
        r2 && "dataZoom" === r2.type && r2.from === this.uid || this._buildView(), this._updateView();
      } else
        this.group.removeAll();
    }, n2.prototype.dispose = function() {
      this._clear(), t2.prototype.dispose.apply(this, arguments);
    }, n2.prototype._clear = function() {
      Fg(this, "_dispatchZoomAction");
      var t3 = this.api.getZr();
      t3.off("mousemove", this._onBrush), t3.off("mouseup", this._onBrushEnd);
    }, n2.prototype._buildView = function() {
      var t3 = this.group;
      t3.removeAll(), this._brushing = false, this._displayables.brushRect = null, this._resetLocation(), this._resetInterval();
      var e2 = this._displayables.sliderGroup = new Er();
      this._renderBackground(), this._renderHandle(), this._renderDataShadow(), t3.add(e2), this._positionGroup();
    }, n2.prototype._resetLocation = function() {
      var t3 = this.dataZoomModel, e2 = this.api, n3 = t3.get("brushSelect") ? 7 : 0, i2 = this._findCoordRect(), r2 = { width: e2.getWidth(), height: e2.getHeight() }, o2 = this._orient === TF ? { right: r2.width - i2.x - i2.width, top: r2.height - 30 - 7 - n3, width: i2.width, height: 30 } : { right: 7, top: i2.y, width: 30, height: i2.height }, a2 = kp(t3.option);
      N(["right", "top", "width", "height"], function(t4) {
        "ph" === a2[t4] && (a2[t4] = o2[t4]);
      });
      var s2 = Tp(a2, r2);
      this._location = { x: s2.x, y: s2.y }, this._size = [s2.width, s2.height], this._orient === CF && this._size.reverse();
    }, n2.prototype._positionGroup = function() {
      var t3 = this.group, e2 = this._location, n3 = this._orient, i2 = this.dataZoomModel.getFirstTargetAxisModel(), r2 = i2 && i2.get("inverse"), o2 = this._displayables.sliderGroup, a2 = (this._dataShadowInfo || {}).otherAxisInverse;
      o2.attr(n3 !== TF || r2 ? n3 === TF && r2 ? { scaleY: a2 ? 1 : -1, scaleX: -1 } : n3 !== CF || r2 ? { scaleY: a2 ? -1 : 1, scaleX: -1, rotation: Math.PI / 2 } : { scaleY: a2 ? -1 : 1, scaleX: 1, rotation: Math.PI / 2 } : { scaleY: a2 ? 1 : -1, scaleX: 1 });
      var s2 = t3.getBoundingRect([o2]);
      t3.x = e2.x - s2.x, t3.y = e2.y - s2.y, t3.markRedraw();
    }, n2.prototype._getViewExtent = function() {
      return [0, this._size[0]];
    }, n2.prototype._renderBackground = function() {
      var t3 = this.dataZoomModel, e2 = this._size, n3 = this._displayables.sliderGroup, i2 = t3.get("brushSelect");
      n3.add(new IF({ silent: true, shape: { x: 0, y: 0, width: e2[0], height: e2[1] }, style: { fill: t3.get("backgroundColor") }, z2: -40 }));
      var r2 = new IF({ shape: { x: 0, y: 0, width: e2[0], height: e2[1] }, style: { fill: "transparent" }, z2: 0, onclick: G(this._onClickPanel, this) }), o2 = this.api.getZr();
      i2 ? (r2.on("mousedown", this._onBrushStart, this), r2.cursor = "crosshair", o2.on("mousemove", this._onBrush), o2.on("mouseup", this._onBrushEnd)) : (o2.off("mousemove", this._onBrush), o2.off("mouseup", this._onBrushEnd)), n3.add(r2);
    }, n2.prototype._renderDataShadow = function() {
      var t3 = this._dataShadowInfo = this._prepareDataShadowInfo();
      if (this._displayables.dataShadowSegs = [], t3) {
        var e2 = this._size, n3 = this._shadowSize || [], i2 = t3.series, r2 = i2.getRawData(), o2 = i2.getShadowDim && i2.getShadowDim(), a2 = o2 && r2.getDimensionInfo(o2) ? i2.getShadowDim() : t3.otherDim;
        if (null != a2) {
          var s2 = this._shadowPolygonPts, l2 = this._shadowPolylinePts;
          if (r2 !== this._shadowData || a2 !== this._shadowDim || e2[0] !== n3[0] || e2[1] !== n3[1]) {
            var u2 = r2.getDataExtent(a2), h2 = 0.3 * (u2[1] - u2[0]);
            u2 = [u2[0] - h2, u2[1] + h2];
            var c2, p2 = [0, e2[1]], d2 = [0, e2[0]], f2 = [[e2[0], 0], [0, 0]], g2 = [], y2 = d2[1] / (r2.count() - 1), v2 = 0, m2 = Math.round(r2.count() / e2[0]);
            r2.each([a2], function(t4, e3) {
              if (m2 > 0 && e3 % m2)
                v2 += y2;
              else {
                var n4 = null == t4 || isNaN(t4) || "" === t4, i3 = n4 ? 0 : Yr(t4, u2, p2, true);
                n4 && !c2 && e3 ? (f2.push([f2[f2.length - 1][0], 0]), g2.push([g2[g2.length - 1][0], 0])) : !n4 && c2 && (f2.push([v2, 0]), g2.push([v2, 0])), f2.push([v2, i3]), g2.push([v2, i3]), v2 += y2, c2 = n4;
              }
            }), s2 = this._shadowPolygonPts = f2, l2 = this._shadowPolylinePts = g2;
          }
          this._shadowData = r2, this._shadowDim = a2, this._shadowSize = [e2[0], e2[1]];
          for (var x2 = this.dataZoomModel, _2 = 0; _2 < 3; _2++) {
            var b2 = w2(1 === _2);
            this._displayables.sliderGroup.add(b2), this._displayables.dataShadowSegs.push(b2);
          }
        }
      }
      function w2(t4) {
        var e3 = x2.getModel(t4 ? "selectedDataBackground" : "dataBackground"), n4 = new Er(), i3 = new Gu({ shape: { points: s2 }, segmentIgnoreThreshold: 1, style: e3.getModel("areaStyle").getAreaStyle(), silent: true, z2: -20 }), r3 = new Hu({ shape: { points: l2 }, segmentIgnoreThreshold: 1, style: e3.getModel("lineStyle").getLineStyle(), silent: true, z2: -19 });
        return n4.add(i3), n4.add(r3), n4;
      }
    }, n2.prototype._prepareDataShadowInfo = function() {
      var t3 = this.dataZoomModel, e2 = t3.get("showDataShadow");
      if (false !== e2) {
        var n3, i2 = this.ecModel;
        return t3.eachTargetAxis(function(r2, o2) {
          N(t3.getAxisProxy(r2, o2).getTargetSeriesModels(), function(t4) {
            if (!(n3 || true !== e2 && L(DF, t4.get("type")) < 0)) {
              var a2, s2 = i2.getComponent(oz(r2), o2).axis, l2 = function(t5) {
                var e3 = { x: "y", y: "x", radius: "angle", angle: "radius" };
                return e3[t5];
              }(r2), u2 = t4.coordinateSystem;
              null != l2 && u2.getOtherAxis && (a2 = u2.getOtherAxis(s2).inverse), l2 = t4.getData().mapDimension(l2), n3 = { thisAxis: s2, series: t4, thisDim: r2, otherDim: l2, otherAxisInverse: a2 };
            }
          }, this);
        }, this), n3;
      }
    }, n2.prototype._renderHandle = function() {
      var t3 = this.group, e2 = this._displayables, n3 = e2.handles = [null, null], i2 = e2.handleLabels = [null, null], r2 = this._displayables.sliderGroup, o2 = this._size, a2 = this.dataZoomModel, s2 = this.api, l2 = a2.get("borderRadius") || 0, u2 = a2.get("brushSelect"), h2 = e2.filler = new IF({ silent: u2, style: { fill: a2.get("fillerColor") }, textConfig: { position: "inside" } });
      r2.add(h2), r2.add(new IF({ silent: true, subPixelOptimize: true, shape: { x: 0, y: 0, width: o2[0], height: o2[1], r: l2 }, style: { stroke: a2.get("dataBackgroundColor") || a2.get("borderColor"), lineWidth: 1, fill: "rgba(0,0,0,0)" } })), N([0, 1], function(e3) {
        var o3 = a2.get("handleIcon");
        !Vy[o3] && o3.indexOf("path://") < 0 && o3.indexOf("image://") < 0 && (o3 = "path://" + o3);
        var s3 = Gy(o3, -1, 0, 2, 2, null, true);
        s3.attr({ cursor: LF(this._orient), draggable: true, drift: G(this._onDragMove, this, e3), ondragend: G(this._onDragEnd, this), onmouseover: G(this._showDataInfo, this, true), onmouseout: G(this._showDataInfo, this, false), z2: 5 });
        var l3 = s3.getBoundingRect(), u3 = a2.get("handleSize");
        this._handleHeight = Xr(u3, this._size[1]), this._handleWidth = l3.width / l3.height * this._handleHeight, s3.setStyle(a2.getModel("handleStyle").getItemStyle()), s3.style.strokeNoScale = true, s3.rectHover = true, s3.ensureState("emphasis").style = a2.getModel(["emphasis", "handleStyle"]).getItemStyle(), Wl(s3);
        var h3 = a2.get("handleColor");
        null != h3 && (s3.style.fill = h3), r2.add(n3[e3] = s3);
        var c3 = a2.getModel("textStyle");
        t3.add(i2[e3] = new Bs({ silent: true, invisible: true, style: ec(c3, { x: 0, y: 0, text: "", verticalAlign: "middle", align: "center", fill: c3.getTextColor(), font: c3.getFont() }), z2: 10 }));
      }, this);
      var c2 = h2;
      if (u2) {
        var p2 = Xr(a2.get("moveHandleSize"), o2[1]), d2 = e2.moveHandle = new Es({ style: a2.getModel("moveHandleStyle").getItemStyle(), silent: true, shape: { r: [0, 0, 2, 2], y: o2[1] - 0.5, height: p2 } }), f2 = 0.8 * p2, g2 = e2.moveHandleIcon = Gy(a2.get("moveHandleIcon"), -f2 / 2, -f2 / 2, f2, f2, "#fff", true);
        g2.silent = true, g2.y = o2[1] + p2 / 2 - 0.5, d2.ensureState("emphasis").style = a2.getModel(["emphasis", "moveHandleStyle"]).getItemStyle();
        var y2 = Math.min(o2[1] / 2, Math.max(p2, 10));
        (c2 = e2.moveZone = new Es({ invisible: true, shape: { y: o2[1] - y2, height: p2 + y2 } })).on("mouseover", function() {
          s2.enterEmphasis(d2);
        }).on("mouseout", function() {
          s2.leaveEmphasis(d2);
        }), r2.add(d2), r2.add(g2), r2.add(c2);
      }
      c2.attr({ draggable: true, cursor: LF(this._orient), drift: G(this._onDragMove, this, "all"), ondragstart: G(this._showDataInfo, this, true), ondragend: G(this._onDragEnd, this), onmouseover: G(this._showDataInfo, this, true), onmouseout: G(this._showDataInfo, this, false) });
    }, n2.prototype._resetInterval = function() {
      var t3 = this._range = this.dataZoomModel.getPercentRange(), e2 = this._getViewExtent();
      this._handleEnds = [Yr(t3[0], [0, 100], e2, true), Yr(t3[1], [0, 100], e2, true)];
    }, n2.prototype._updateInterval = function(t3, e2) {
      var n3 = this.dataZoomModel, i2 = this._handleEnds, r2 = this._getViewExtent(), o2 = n3.findRepresentativeAxisProxy().getMinMaxSpan(), a2 = [0, 100];
      Fk(e2, i2, r2, n3.get("zoomLock") ? "all" : t3, null != o2.minSpan ? Yr(o2.minSpan, a2, r2, true) : null, null != o2.maxSpan ? Yr(o2.maxSpan, a2, r2, true) : null);
      var s2 = this._range, l2 = this._range = Zr([Yr(i2[0], r2, a2, true), Yr(i2[1], r2, a2, true)]);
      return !s2 || s2[0] !== l2[0] || s2[1] !== l2[1];
    }, n2.prototype._updateView = function(t3) {
      var e2 = this._displayables, n3 = this._handleEnds, i2 = Zr(n3.slice()), r2 = this._size;
      N([0, 1], function(t4) {
        var i3 = e2.handles[t4], o3 = this._handleHeight;
        i3.attr({ scaleX: o3 / 2, scaleY: o3 / 2, x: n3[t4] + (t4 ? -1 : 1), y: r2[1] / 2 - o3 / 2 });
      }, this), e2.filler.setShape({ x: i2[0], y: 0, width: i2[1] - i2[0], height: r2[1] });
      var o2 = { x: i2[0], width: i2[1] - i2[0] };
      e2.moveHandle && (e2.moveHandle.setShape(o2), e2.moveZone.setShape(o2), e2.moveZone.getBoundingRect(), e2.moveHandleIcon && e2.moveHandleIcon.attr("x", o2.x + o2.width / 2));
      for (var a2 = e2.dataShadowSegs, s2 = [0, i2[0], i2[1], r2[0]], l2 = 0; l2 < a2.length; l2++) {
        var u2 = a2[l2], h2 = u2.getClipPath();
        h2 || (h2 = new Es(), u2.setClipPath(h2)), h2.setShape({ x: s2[l2], y: 0, width: s2[l2 + 1] - s2[l2], height: r2[1] });
      }
      this._updateDataInfo(t3);
    }, n2.prototype._updateDataInfo = function(t3) {
      var e2 = this.dataZoomModel, n3 = this._displayables, i2 = n3.handleLabels, r2 = this._orient, o2 = ["", ""];
      if (e2.get("showDetail")) {
        var a2 = e2.findRepresentativeAxisProxy();
        if (a2) {
          var s2 = a2.getAxisModel().axis, l2 = this._range, u2 = t3 ? a2.calculateDataWindow({ start: l2[0], end: l2[1] }).valueWindow : a2.getDataValueWindow();
          o2 = [this._formatLabel(u2[0], s2), this._formatLabel(u2[1], s2)];
        }
      }
      var h2 = Zr(this._handleEnds.slice());
      function c2(t4) {
        var e3 = Nh(n3.handles[t4].parent, this.group), a3 = zh(0 === t4 ? "right" : "left", e3), s3 = this._handleWidth / 2 + 5, l3 = Eh([h2[t4] + (0 === t4 ? -s3 : s3), this._size[1] / 2], e3);
        i2[t4].setStyle({ x: l3[0], y: l3[1], verticalAlign: r2 === TF ? "middle" : a3, align: r2 === TF ? a3 : "center", text: o2[t4] });
      }
      c2.call(this, 0), c2.call(this, 1);
    }, n2.prototype._formatLabel = function(t3, e2) {
      var n3 = this.dataZoomModel, i2 = n3.get("labelFormatter"), r2 = n3.get("labelPrecision");
      null != r2 && "auto" !== r2 || (r2 = e2.getPixelPrecision());
      var o2 = null == t3 || isNaN(t3) ? "" : "category" === e2.type || "time" === e2.type ? e2.scale.getLabel({ value: Math.round(t3) }) : t3.toFixed(Math.min(r2, 20));
      return Y(i2) ? i2(t3, o2) : X(i2) ? i2.replace("{value}", o2) : o2;
    }, n2.prototype._showDataInfo = function(t3) {
      t3 = this._dragging || t3;
      var e2 = this._displayables, n3 = e2.handleLabels;
      n3[0].attr("invisible", !t3), n3[1].attr("invisible", !t3), e2.moveHandle && this.api[t3 ? "enterEmphasis" : "leaveEmphasis"](e2.moveHandle, 1);
    }, n2.prototype._onDragMove = function(t3, e2, n3, i2) {
      this._dragging = true, pe(i2.event);
      var r2 = Eh([e2, n3], this._displayables.sliderGroup.getLocalTransform(), true), o2 = this._updateInterval(t3, r2[0]), a2 = this.dataZoomModel.get("realtime");
      this._updateView(!a2), o2 && a2 && this._dispatchZoomAction(true);
    }, n2.prototype._onDragEnd = function() {
      this._dragging = false, this._showDataInfo(false), !this.dataZoomModel.get("realtime") && this._dispatchZoomAction(false);
    }, n2.prototype._onClickPanel = function(t3) {
      var e2 = this._size, n3 = this._displayables.sliderGroup.transformCoordToLocal(t3.offsetX, t3.offsetY);
      if (!(n3[0] < 0 || n3[0] > e2[0] || n3[1] < 0 || n3[1] > e2[1])) {
        var i2 = this._handleEnds, r2 = (i2[0] + i2[1]) / 2, o2 = this._updateInterval("all", n3[0] - r2);
        this._updateView(), o2 && this._dispatchZoomAction(false);
      }
    }, n2.prototype._onBrushStart = function(t3) {
      var e2 = t3.offsetX, n3 = t3.offsetY;
      this._brushStart = new Ce(e2, n3), this._brushing = true, this._brushStartTime = +/* @__PURE__ */ new Date();
    }, n2.prototype._onBrushEnd = function(t3) {
      if (this._brushing) {
        var e2 = this._displayables.brushRect;
        if (this._brushing = false, e2) {
          e2.attr("ignore", true);
          var n3 = e2.shape;
          if (!(+/* @__PURE__ */ new Date() - this._brushStartTime < 200 && Math.abs(n3.width) < 5)) {
            var i2 = this._getViewExtent(), r2 = [0, 100];
            this._range = Zr([Yr(n3.x, i2, r2, true), Yr(n3.x + n3.width, i2, r2, true)]), this._handleEnds = [n3.x, n3.x + n3.width], this._updateView(), this._dispatchZoomAction(false);
          }
        }
      }
    }, n2.prototype._onBrush = function(t3) {
      this._brushing && (pe(t3.event), this._updateBrushRect(t3.offsetX, t3.offsetY));
    }, n2.prototype._updateBrushRect = function(t3, e2) {
      var n3 = this._displayables, i2 = this.dataZoomModel, r2 = n3.brushRect;
      r2 || (r2 = n3.brushRect = new IF({ silent: true, style: i2.getModel("brushStyle").getItemStyle() }), n3.sliderGroup.add(r2)), r2.attr("ignore", false);
      var o2 = this._brushStart, a2 = this._displayables.sliderGroup, s2 = a2.transformCoordToLocal(t3, e2), l2 = a2.transformCoordToLocal(o2.x, o2.y), u2 = this._size;
      s2[0] = Math.max(Math.min(u2[0], s2[0]), 0), r2.setShape({ x: l2[0], y: 0, width: s2[0] - l2[0], height: u2[1] });
    }, n2.prototype._dispatchZoomAction = function(t3) {
      var e2 = this._range;
      this.api.dispatchAction({ type: "dataZoom", from: this.uid, dataZoomId: this.dataZoomModel.id, animation: t3 ? AF : null, start: e2[0], end: e2[1] });
    }, n2.prototype._findCoordRect = function() {
      var t3, e2 = sz(this.dataZoomModel).infoList;
      if (!t3 && e2.length) {
        var n3 = e2[0].model.coordinateSystem;
        t3 = n3.getRect && n3.getRect();
      }
      if (!t3) {
        var i2 = this.api.getWidth(), r2 = this.api.getHeight();
        t3 = { x: 0.2 * i2, y: 0.2 * r2, width: 0.6 * i2, height: 0.6 * r2 };
      }
      return t3;
    }, n2.type = "dataZoom.slider", n2;
  }(pz);
  function LF(t2) {
    return "vertical" === t2 ? "ns-resize" : "ew-resize";
  }
  function PF(t2) {
    t2.registerComponentModel(MF), t2.registerComponentView(kF), xz(t2);
  }
  var OF = function(t2, e2, n2) {
    var i2 = I((RF[t2] || {})[e2]);
    return n2 && H(i2) ? i2[i2.length - 1] : i2;
  };
  var RF = { color: { active: ["#006edd", "#e0ffff"], inactive: ["rgba(0,0,0,0)"] }, colorHue: { active: [0, 360], inactive: [0, 0] }, colorSaturation: { active: [0.3, 1], inactive: [0, 0] }, colorLightness: { active: [0.9, 0.5], inactive: [0, 0] }, colorAlpha: { active: [0.3, 1], inactive: [0, 0] }, opacity: { active: [0.3, 1], inactive: [0, 0] }, symbol: { active: ["circle", "roundRect", "diamond"], inactive: ["none"] }, symbolSize: { active: [10, 50], inactive: [0, 0] } };
  var NF = OD.mapVisual;
  var EF = OD.eachVisual;
  var zF = H;
  var VF = N;
  var BF = Zr;
  var FF = Yr;
  var GF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.stateList = ["inRange", "outOfRange"], e2.replacableOptionKeys = ["inRange", "outOfRange", "target", "controller", "color"], e2.layoutMode = { type: "box", ignoreSize: true }, e2.dataBound = [-1 / 0, 1 / 0], e2.targetVisuals = {}, e2.controllerVisuals = {}, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2, n3) {
      this.mergeDefaultAndTheme(t3, n3);
    }, n2.prototype.optionUpdated = function(t3, e2) {
      var n3 = this.option;
      !e2 && NV(n3, t3, this.replacableOptionKeys), this.textStyleModel = this.getModel("textStyle"), this.resetItemSize(), this.completeVisualOption();
    }, n2.prototype.resetVisual = function(t3) {
      var e2 = this.stateList;
      t3 = G(t3, this), this.controllerVisuals = RV(this.option.controller, e2, t3), this.targetVisuals = RV(this.option.target, e2, t3);
    }, n2.prototype.getItemSymbol = function() {
      return null;
    }, n2.prototype.getTargetSeriesIndices = function() {
      var t3 = this.option.seriesIndex, e2 = [];
      return null == t3 || "all" === t3 ? this.ecModel.eachSeries(function(t4, n3) {
        e2.push(n3);
      }) : e2 = _o(t3), e2;
    }, n2.prototype.eachTargetSeries = function(t3, e2) {
      N(this.getTargetSeriesIndices(), function(n3) {
        var i2 = this.ecModel.getSeriesByIndex(n3);
        i2 && t3.call(e2, i2);
      }, this);
    }, n2.prototype.isTargetSeries = function(t3) {
      var e2 = false;
      return this.eachTargetSeries(function(n3) {
        n3 === t3 && (e2 = true);
      }), e2;
    }, n2.prototype.formatValueText = function(t3, e2, n3) {
      var i2, r2 = this.option, o2 = r2.precision, a2 = this.dataBound, s2 = r2.formatter;
      n3 = n3 || ["<", ">"], H(t3) && (t3 = t3.slice(), i2 = true);
      var l2 = e2 ? t3 : i2 ? [u2(t3[0]), u2(t3[1])] : u2(t3);
      return X(s2) ? s2.replace("{value}", i2 ? l2[0] : l2).replace("{value2}", i2 ? l2[1] : l2) : Y(s2) ? i2 ? s2(t3[0], t3[1]) : s2(t3) : i2 ? t3[0] === a2[0] ? n3[0] + " " + l2[1] : t3[1] === a2[1] ? n3[1] + " " + l2[0] : l2[0] + " - " + l2[1] : l2;
      function u2(t4) {
        return t4 === a2[0] ? "min" : t4 === a2[1] ? "max" : (+t4).toFixed(Math.min(o2, 20));
      }
    }, n2.prototype.resetExtent = function() {
      var t3 = this.option, e2 = BF([t3.min, t3.max]);
      this._dataExtent = e2;
    }, n2.prototype.getDataDimensionIndex = function(t3) {
      var e2 = this.option.dimension;
      if (null != e2)
        return t3.getDimensionIndex(e2);
      for (var n3 = t3.dimensions, i2 = n3.length - 1; i2 >= 0; i2--) {
        var r2 = n3[i2], o2 = t3.getDimensionInfo(r2);
        if (!o2.isCalculationCoord)
          return o2.storeDimIndex;
      }
    }, n2.prototype.getExtent = function() {
      return this._dataExtent.slice();
    }, n2.prototype.completeVisualOption = function() {
      var t3 = this.ecModel, e2 = this.option, n3 = { inRange: e2.inRange, outOfRange: e2.outOfRange }, i2 = e2.target || (e2.target = {}), r2 = e2.controller || (e2.controller = {});
      T(i2, n3), T(r2, n3);
      var o2 = this.isCategory();
      function a2(n4) {
        zF(e2.color) && !n4.inRange && (n4.inRange = { color: e2.color.slice().reverse() }), n4.inRange = n4.inRange || { color: t3.get("gradientColor") };
      }
      a2.call(this, i2), a2.call(this, r2), function(t4, e3, n4) {
        var i3 = t4[e3], r3 = t4[n4];
        i3 && !r3 && (r3 = t4[n4] = {}, VF(i3, function(t5, e4) {
          if (OD.isValidType(e4)) {
            var n5 = OF(e4, "inactive", o2);
            null != n5 && (r3[e4] = n5, "color" !== e4 || r3.hasOwnProperty("opacity") || r3.hasOwnProperty("colorAlpha") || (r3.opacity = [0, 0]));
          }
        }));
      }.call(this, i2, "inRange", "outOfRange"), function(t4) {
        var e3 = (t4.inRange || {}).symbol || (t4.outOfRange || {}).symbol, n4 = (t4.inRange || {}).symbolSize || (t4.outOfRange || {}).symbolSize, i3 = this.get("inactiveColor"), r3 = this.getItemSymbol() || "roundRect";
        VF(this.stateList, function(a3) {
          var s2 = this.itemSize, l2 = t4[a3];
          l2 || (l2 = t4[a3] = { color: o2 ? i3 : [i3] }), null == l2.symbol && (l2.symbol = e3 && I(e3) || (o2 ? r3 : [r3])), null == l2.symbolSize && (l2.symbolSize = n4 && I(n4) || (o2 ? s2[0] : [s2[0], s2[0]])), l2.symbol = NF(l2.symbol, function(t5) {
            return "none" === t5 ? r3 : t5;
          });
          var u2 = l2.symbolSize;
          if (null != u2) {
            var h2 = -1 / 0;
            EF(u2, function(t5) {
              t5 > h2 && (h2 = t5);
            }), l2.symbolSize = NF(u2, function(t5) {
              return FF(t5, [0, h2], [0, s2[0]], true);
            });
          }
        }, this);
      }.call(this, r2);
    }, n2.prototype.resetItemSize = function() {
      this.itemSize = [parseFloat(this.get("itemWidth")), parseFloat(this.get("itemHeight"))];
    }, n2.prototype.isCategory = function() {
      return !!this.option.categories;
    }, n2.prototype.setSelected = function(t3) {
    }, n2.prototype.getSelected = function() {
      return null;
    }, n2.prototype.getValueState = function(t3) {
      return null;
    }, n2.prototype.getVisualMeta = function(t3) {
      return null;
    }, n2.type = "visualMap", n2.dependencies = ["series"], n2.defaultOption = { show: true, z: 4, seriesIndex: "all", min: 0, max: 200, left: 0, right: null, top: null, bottom: 0, itemWidth: null, itemHeight: null, inverse: false, orient: "vertical", backgroundColor: "rgba(0,0,0,0)", borderColor: "#ccc", contentColor: "#5793f3", inactiveColor: "#aaa", borderWidth: 0, padding: 5, textGap: 10, precision: 0, textStyle: { color: "#333" } }, n2;
  }(Op);
  var WF = [20, 140];
  var HF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function(e2, n3) {
      t2.prototype.optionUpdated.apply(this, arguments), this.resetExtent(), this.resetVisual(function(t3) {
        t3.mappingMethod = "linear", t3.dataExtent = this.getExtent();
      }), this._resetRange();
    }, n2.prototype.resetItemSize = function() {
      t2.prototype.resetItemSize.apply(this, arguments);
      var e2 = this.itemSize;
      (null == e2[0] || isNaN(e2[0])) && (e2[0] = WF[0]), (null == e2[1] || isNaN(e2[1])) && (e2[1] = WF[1]);
    }, n2.prototype._resetRange = function() {
      var t3 = this.getExtent(), e2 = this.option.range;
      !e2 || e2.auto ? (t3.auto = 1, this.option.range = t3) : H(e2) && (e2[0] > e2[1] && e2.reverse(), e2[0] = Math.max(e2[0], t3[0]), e2[1] = Math.min(e2[1], t3[1]));
    }, n2.prototype.completeVisualOption = function() {
      t2.prototype.completeVisualOption.apply(this, arguments), N(this.stateList, function(t3) {
        var e2 = this.option.controller[t3].symbolSize;
        e2 && e2[0] !== e2[1] && (e2[0] = e2[1] / 3);
      }, this);
    }, n2.prototype.setSelected = function(t3) {
      this.option.range = t3.slice(), this._resetRange();
    }, n2.prototype.getSelected = function() {
      var t3 = this.getExtent(), e2 = Zr((this.get("range") || []).slice());
      return e2[0] > t3[1] && (e2[0] = t3[1]), e2[1] > t3[1] && (e2[1] = t3[1]), e2[0] < t3[0] && (e2[0] = t3[0]), e2[1] < t3[0] && (e2[1] = t3[0]), e2;
    }, n2.prototype.getValueState = function(t3) {
      var e2 = this.option.range, n3 = this.getExtent();
      return (e2[0] <= n3[0] || e2[0] <= t3) && (e2[1] >= n3[1] || t3 <= e2[1]) ? "inRange" : "outOfRange";
    }, n2.prototype.findTargetDataIndices = function(t3) {
      var e2 = [];
      return this.eachTargetSeries(function(n3) {
        var i2 = [], r2 = n3.getData();
        r2.each(this.getDataDimensionIndex(r2), function(e3, n4) {
          t3[0] <= e3 && e3 <= t3[1] && i2.push(n4);
        }, this), e2.push({ seriesId: n3.id, dataIndex: i2 });
      }, this), e2;
    }, n2.prototype.getVisualMeta = function(t3) {
      var e2 = YF(this, "outOfRange", this.getExtent()), n3 = YF(this, "inRange", this.option.range.slice()), i2 = [];
      function r2(e3, n4) {
        i2.push({ value: e3, color: t3(e3, n4) });
      }
      for (var o2 = 0, a2 = 0, s2 = n3.length, l2 = e2.length; a2 < l2 && (!n3.length || e2[a2] <= n3[0]); a2++)
        e2[a2] < n3[o2] && r2(e2[a2], "outOfRange");
      for (var u2 = 1; o2 < s2; o2++, u2 = 0)
        u2 && i2.length && r2(n3[o2], "outOfRange"), r2(n3[o2], "inRange");
      for (u2 = 1; a2 < l2; a2++)
        (!n3.length || n3[n3.length - 1] < e2[a2]) && (u2 && (i2.length && r2(i2[i2.length - 1].value, "outOfRange"), u2 = 0), r2(e2[a2], "outOfRange"));
      var h2 = i2.length;
      return { stops: i2, outerColors: [h2 ? i2[0].color : "transparent", h2 ? i2[h2 - 1].color : "transparent"] };
    }, n2.type = "visualMap.continuous", n2.defaultOption = Tc(GF.defaultOption, { align: "auto", calculable: false, hoverLink: true, realtime: true, handleIcon: "path://M-11.39,9.77h0a3.5,3.5,0,0,1-3.5,3.5h-22a3.5,3.5,0,0,1-3.5-3.5h0a3.5,3.5,0,0,1,3.5-3.5h22A3.5,3.5,0,0,1-11.39,9.77Z", handleSize: "120%", handleStyle: { borderColor: "#fff", borderWidth: 1 }, indicatorIcon: "circle", indicatorSize: "50%", indicatorStyle: { borderColor: "#fff", borderWidth: 2, shadowBlur: 2, shadowOffsetX: 1, shadowOffsetY: 1, shadowColor: "rgba(0,0,0,0.2)" } }), n2;
  }(GF);
  function YF(t2, e2, n2) {
    if (n2[0] === n2[1])
      return n2.slice();
    for (var i2 = (n2[1] - n2[0]) / 200, r2 = n2[0], o2 = [], a2 = 0; a2 <= 200 && r2 < n2[1]; a2++)
      o2.push(r2), r2 += i2;
    return o2.push(n2[1]), o2;
  }
  var XF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2.autoPositionValues = { left: 1, right: 1, top: 1, bottom: 1 }, e2;
    }
    return e(n2, t2), n2.prototype.init = function(t3, e2) {
      this.ecModel = t3, this.api = e2;
    }, n2.prototype.render = function(t3, e2, n3, i2) {
      this.visualMapModel = t3, false !== t3.get("show") ? this.doRender(t3, e2, n3, i2) : this.group.removeAll();
    }, n2.prototype.renderBackground = function(t3) {
      var e2 = this.visualMapModel, n3 = dp(e2.get("padding") || 0), i2 = t3.getBoundingRect();
      t3.add(new Es({ z2: -1, silent: true, shape: { x: i2.x - n3[3], y: i2.y - n3[0], width: i2.width + n3[3] + n3[1], height: i2.height + n3[0] + n3[2] }, style: { fill: e2.get("backgroundColor"), stroke: e2.get("borderColor"), lineWidth: e2.get("borderWidth") } }));
    }, n2.prototype.getControllerVisual = function(t3, e2, n3) {
      var i2 = (n3 = n3 || {}).forceState, r2 = this.visualMapModel, o2 = {};
      if ("color" === e2) {
        var a2 = r2.get("contentColor");
        o2.color = a2;
      }
      function s2(t4) {
        return o2[t4];
      }
      function l2(t4, e3) {
        o2[t4] = e3;
      }
      var u2 = r2.controllerVisuals[i2 || r2.getValueState(t3)];
      return N(OD.prepareVisualTypes(u2), function(i3) {
        var r3 = u2[i3];
        n3.convertOpacityToAlpha && "opacity" === i3 && (i3 = "colorAlpha", r3 = u2.__alphaForOpacity), OD.dependsOn(i3, e2) && r3 && r3.applyVisual(t3, s2, l2);
      }), o2[e2];
    }, n2.prototype.positionGroup = function(t3) {
      var e2 = this.visualMapModel, n3 = this.api;
      Cp(t3, e2.getBoxLayoutParams(), { width: n3.getWidth(), height: n3.getHeight() });
    }, n2.prototype.doRender = function(t3, e2, n3, i2) {
    }, n2.type = "visualMap", n2;
  }(Ig);
  var UF = [["left", "right", "width"], ["top", "bottom", "height"]];
  function ZF(t2, e2, n2) {
    var i2 = t2.option, r2 = i2.align;
    if (null != r2 && "auto" !== r2)
      return r2;
    for (var o2 = { width: e2.getWidth(), height: e2.getHeight() }, a2 = "horizontal" === i2.orient ? 1 : 0, s2 = UF[a2], l2 = [0, null, 10], u2 = {}, h2 = 0; h2 < 3; h2++)
      u2[UF[1 - a2][h2]] = l2[h2], u2[s2[h2]] = 2 === h2 ? n2[0] : i2[s2[h2]];
    var c2 = [["x", "width", 3], ["y", "height", 0]][a2], p2 = Tp(u2, o2, i2.padding);
    return s2[(p2.margin[c2[2]] || 0) + p2[c2[0]] + 0.5 * p2[c2[1]] < 0.5 * o2[c2[1]] ? 0 : 1];
  }
  function jF(t2, e2) {
    return N(t2 || [], function(t3) {
      null != t3.dataIndex && (t3.dataIndexInside = t3.dataIndex, t3.dataIndex = null), t3.highlightKey = "visualMap" + (e2 ? e2.componentIndex : "");
    }), t2;
  }
  var qF = Yr;
  var KF = N;
  var $F = Math.min;
  var JF = Math.max;
  var QF = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._shapes = {}, e2._dataInterval = [], e2._handleEnds = [], e2._hoverLinkDataIndices = [], e2;
    }
    return e(n2, t2), n2.prototype.doRender = function(t3, e2, n3, i2) {
      this._api = n3, i2 && "selectDataRange" === i2.type && i2.from === this.uid || this._buildView();
    }, n2.prototype._buildView = function() {
      this.group.removeAll();
      var t3 = this.visualMapModel, e2 = this.group;
      this._orient = t3.get("orient"), this._useHandle = t3.get("calculable"), this._resetInterval(), this._renderBar(e2);
      var n3 = t3.get("text");
      this._renderEndsText(e2, n3, 0), this._renderEndsText(e2, n3, 1), this._updateView(true), this.renderBackground(e2), this._updateView(), this._enableHoverLinkToSeries(), this._enableHoverLinkFromSeries(), this.positionGroup(e2);
    }, n2.prototype._renderEndsText = function(t3, e2, n3) {
      if (e2) {
        var i2 = e2[1 - n3];
        i2 = null != i2 ? i2 + "" : "";
        var r2 = this.visualMapModel, o2 = r2.get("textGap"), a2 = r2.itemSize, s2 = this._shapes.mainGroup, l2 = this._applyTransform([a2[0] / 2, 0 === n3 ? -o2 : a2[1] + o2], s2), u2 = this._applyTransform(0 === n3 ? "bottom" : "top", s2), h2 = this._orient, c2 = this.visualMapModel.textStyleModel;
        this.group.add(new Bs({ style: ec(c2, { x: l2[0], y: l2[1], verticalAlign: "horizontal" === h2 ? "middle" : u2, align: "horizontal" === h2 ? u2 : "center", text: i2 }) }));
      }
    }, n2.prototype._renderBar = function(t3) {
      var e2 = this.visualMapModel, n3 = this._shapes, i2 = e2.itemSize, r2 = this._orient, o2 = this._useHandle, a2 = ZF(e2, this.api, i2), s2 = n3.mainGroup = this._createBarGroup(a2), l2 = new Er();
      s2.add(l2), l2.add(n3.outOfRange = tG()), l2.add(n3.inRange = tG(null, o2 ? nG(this._orient) : null, G(this._dragHandle, this, "all", false), G(this._dragHandle, this, "all", true))), l2.setClipPath(new Es({ shape: { x: 0, y: 0, width: i2[0], height: i2[1], r: 3 } }));
      var u2 = e2.textStyleModel.getTextRect("\u56FD"), h2 = JF(u2.width, u2.height);
      o2 && (n3.handleThumbs = [], n3.handleLabels = [], n3.handleLabelPoints = [], this._createHandle(e2, s2, 0, i2, h2, r2), this._createHandle(e2, s2, 1, i2, h2, r2)), this._createIndicator(e2, s2, i2, h2, r2), t3.add(s2);
    }, n2.prototype._createHandle = function(t3, e2, n3, i2, r2, o2) {
      var a2 = G(this._dragHandle, this, n3, false), s2 = G(this._dragHandle, this, n3, true), l2 = Mr(t3.get("handleSize"), i2[0]), u2 = Gy(t3.get("handleIcon"), -l2 / 2, -l2 / 2, l2, l2, null, true), h2 = nG(this._orient);
      u2.attr({ cursor: h2, draggable: true, drift: a2, ondragend: s2, onmousemove: function(t4) {
        pe(t4.event);
      } }), u2.x = i2[0] / 2, u2.useStyle(t3.getModel("handleStyle").getItemStyle()), u2.setStyle({ strokeNoScale: true, strokeFirst: true }), u2.style.lineWidth *= 2, u2.ensureState("emphasis").style = t3.getModel(["emphasis", "handleStyle"]).getItemStyle(), jl(u2, true), e2.add(u2);
      var c2 = this.visualMapModel.textStyleModel, p2 = new Bs({ cursor: h2, draggable: true, drift: a2, onmousemove: function(t4) {
        pe(t4.event);
      }, ondragend: s2, style: ec(c2, { x: 0, y: 0, text: "" }) });
      p2.ensureState("blur").style = { opacity: 0.1 }, p2.stateTransition = { duration: 200 }, this.group.add(p2);
      var d2 = [l2, 0], f2 = this._shapes;
      f2.handleThumbs[n3] = u2, f2.handleLabelPoints[n3] = d2, f2.handleLabels[n3] = p2;
    }, n2.prototype._createIndicator = function(t3, e2, n3, i2, r2) {
      var o2 = Mr(t3.get("indicatorSize"), n3[0]), a2 = Gy(t3.get("indicatorIcon"), -o2 / 2, -o2 / 2, o2, o2, null, true);
      a2.attr({ cursor: "move", invisible: true, silent: true, x: n3[0] / 2 });
      var s2 = t3.getModel("indicatorStyle").getItemStyle();
      if (a2 instanceof As) {
        var l2 = a2.style;
        a2.useStyle(D({ image: l2.image, x: l2.x, y: l2.y, width: l2.width, height: l2.height }, s2));
      } else
        a2.useStyle(s2);
      e2.add(a2);
      var u2 = this.visualMapModel.textStyleModel, h2 = new Bs({ silent: true, invisible: true, style: ec(u2, { x: 0, y: 0, text: "" }) });
      this.group.add(h2);
      var c2 = [("horizontal" === r2 ? i2 / 2 : 6) + n3[0] / 2, 0], p2 = this._shapes;
      p2.indicator = a2, p2.indicatorLabel = h2, p2.indicatorLabelPoint = c2, this._firstShowIndicator = true;
    }, n2.prototype._dragHandle = function(t3, e2, n3, i2) {
      if (this._useHandle) {
        if (this._dragging = !e2, !e2) {
          var r2 = this._applyTransform([n3, i2], this._shapes.mainGroup, true);
          this._updateInterval(t3, r2[1]), this._hideIndicator(), this._updateView();
        }
        e2 === !this.visualMapModel.get("realtime") && this.api.dispatchAction({ type: "selectDataRange", from: this.uid, visualMapId: this.visualMapModel.id, selected: this._dataInterval.slice() }), e2 ? !this._hovering && this._clearHoverLinkToSeries() : eG(this.visualMapModel) && this._doHoverLinkToSeries(this._handleEnds[t3], false);
      }
    }, n2.prototype._resetInterval = function() {
      var t3 = this.visualMapModel, e2 = this._dataInterval = t3.getSelected(), n3 = t3.getExtent(), i2 = [0, t3.itemSize[1]];
      this._handleEnds = [qF(e2[0], n3, i2, true), qF(e2[1], n3, i2, true)];
    }, n2.prototype._updateInterval = function(t3, e2) {
      e2 = e2 || 0;
      var n3 = this.visualMapModel, i2 = this._handleEnds, r2 = [0, n3.itemSize[1]];
      Fk(e2, i2, r2, t3, 0);
      var o2 = n3.getExtent();
      this._dataInterval = [qF(i2[0], r2, o2, true), qF(i2[1], r2, o2, true)];
    }, n2.prototype._updateView = function(t3) {
      var e2 = this.visualMapModel, n3 = e2.getExtent(), i2 = this._shapes, r2 = [0, e2.itemSize[1]], o2 = t3 ? r2 : this._handleEnds, a2 = this._createBarVisual(this._dataInterval, n3, o2, "inRange"), s2 = this._createBarVisual(n3, n3, r2, "outOfRange");
      i2.inRange.setStyle({ fill: a2.barColor }).setShape("points", a2.barPoints), i2.outOfRange.setStyle({ fill: s2.barColor }).setShape("points", s2.barPoints), this._updateHandle(o2, a2);
    }, n2.prototype._createBarVisual = function(t3, e2, n3, i2) {
      var r2 = { forceState: i2, convertOpacityToAlpha: true }, o2 = this._makeColorGradient(t3, r2), a2 = [this.getControllerVisual(t3[0], "symbolSize", r2), this.getControllerVisual(t3[1], "symbolSize", r2)], s2 = this._createBarPoints(n3, a2);
      return { barColor: new eh(0, 0, 0, 1, o2), barPoints: s2, handlesColor: [o2[0].color, o2[o2.length - 1].color] };
    }, n2.prototype._makeColorGradient = function(t3, e2) {
      var n3 = [], i2 = (t3[1] - t3[0]) / 100;
      n3.push({ color: this.getControllerVisual(t3[0], "color", e2), offset: 0 });
      for (var r2 = 1; r2 < 100; r2++) {
        var o2 = t3[0] + i2 * r2;
        if (o2 > t3[1])
          break;
        n3.push({ color: this.getControllerVisual(o2, "color", e2), offset: r2 / 100 });
      }
      return n3.push({ color: this.getControllerVisual(t3[1], "color", e2), offset: 1 }), n3;
    }, n2.prototype._createBarPoints = function(t3, e2) {
      var n3 = this.visualMapModel.itemSize;
      return [[n3[0] - e2[0], t3[0]], [n3[0], t3[0]], [n3[0], t3[1]], [n3[0] - e2[1], t3[1]]];
    }, n2.prototype._createBarGroup = function(t3) {
      var e2 = this._orient, n3 = this.visualMapModel.get("inverse");
      return new Er("horizontal" !== e2 || n3 ? "horizontal" === e2 && n3 ? { scaleX: "bottom" === t3 ? -1 : 1, rotation: -Math.PI / 2 } : "vertical" !== e2 || n3 ? { scaleX: "left" === t3 ? 1 : -1 } : { scaleX: "left" === t3 ? 1 : -1, scaleY: -1 } : { scaleX: "bottom" === t3 ? 1 : -1, rotation: Math.PI / 2 });
    }, n2.prototype._updateHandle = function(t3, e2) {
      if (this._useHandle) {
        var n3 = this._shapes, i2 = this.visualMapModel, r2 = n3.handleThumbs, o2 = n3.handleLabels, a2 = i2.itemSize, s2 = i2.getExtent();
        KF([0, 1], function(l2) {
          var u2 = r2[l2];
          u2.setStyle("fill", e2.handlesColor[l2]), u2.y = t3[l2];
          var h2 = qF(t3[l2], [0, a2[1]], s2, true), c2 = this.getControllerVisual(h2, "symbolSize");
          u2.scaleX = u2.scaleY = c2 / a2[0], u2.x = a2[0] - c2 / 2;
          var p2 = Eh(n3.handleLabelPoints[l2], Nh(u2, this.group));
          o2[l2].setStyle({ x: p2[0], y: p2[1], text: i2.formatValueText(this._dataInterval[l2]), verticalAlign: "middle", align: "vertical" === this._orient ? this._applyTransform("left", n3.mainGroup) : "center" });
        }, this);
      }
    }, n2.prototype._showIndicator = function(t3, e2, n3, i2) {
      var r2 = this.visualMapModel, o2 = r2.getExtent(), a2 = r2.itemSize, s2 = [0, a2[1]], l2 = this._shapes, u2 = l2.indicator;
      if (u2) {
        u2.attr("invisible", false);
        var h2 = this.getControllerVisual(t3, "color", { convertOpacityToAlpha: true }), c2 = this.getControllerVisual(t3, "symbolSize"), p2 = qF(t3, o2, s2, true), d2 = a2[0] - c2 / 2, f2 = { x: u2.x, y: u2.y };
        u2.y = p2, u2.x = d2;
        var g2 = Eh(l2.indicatorLabelPoint, Nh(u2, this.group)), y2 = l2.indicatorLabel;
        y2.attr("invisible", false);
        var v2 = this._applyTransform("left", l2.mainGroup), m2 = "horizontal" === this._orient;
        y2.setStyle({ text: (n3 || "") + r2.formatValueText(e2), verticalAlign: m2 ? v2 : "middle", align: m2 ? "center" : v2 });
        var x2 = { x: d2, y: p2, style: { fill: h2 } }, _2 = { style: { x: g2[0], y: g2[1] } };
        if (r2.ecModel.isAnimationEnabled() && !this._firstShowIndicator) {
          var b2 = { duration: 100, easing: "cubicInOut", additive: true };
          u2.x = f2.x, u2.y = f2.y, u2.animateTo(x2, b2), y2.animateTo(_2, b2);
        } else
          u2.attr(x2), y2.attr(_2);
        this._firstShowIndicator = false;
        var w2 = this._shapes.handleLabels;
        if (w2)
          for (var S2 = 0; S2 < w2.length; S2++)
            this._api.enterBlur(w2[S2]);
      }
    }, n2.prototype._enableHoverLinkToSeries = function() {
      var t3 = this;
      this._shapes.mainGroup.on("mousemove", function(e2) {
        if (t3._hovering = true, !t3._dragging) {
          var n3 = t3.visualMapModel.itemSize, i2 = t3._applyTransform([e2.offsetX, e2.offsetY], t3._shapes.mainGroup, true, true);
          i2[1] = $F(JF(0, i2[1]), n3[1]), t3._doHoverLinkToSeries(i2[1], 0 <= i2[0] && i2[0] <= n3[0]);
        }
      }).on("mouseout", function() {
        t3._hovering = false, !t3._dragging && t3._clearHoverLinkToSeries();
      });
    }, n2.prototype._enableHoverLinkFromSeries = function() {
      var t3 = this.api.getZr();
      this.visualMapModel.option.hoverLink ? (t3.on("mouseover", this._hoverLinkFromSeriesMouseOver, this), t3.on("mouseout", this._hideIndicator, this)) : this._clearHoverLinkFromSeries();
    }, n2.prototype._doHoverLinkToSeries = function(t3, e2) {
      var n3 = this.visualMapModel, i2 = n3.itemSize;
      if (n3.option.hoverLink) {
        var r2 = [0, i2[1]], o2 = n3.getExtent();
        t3 = $F(JF(r2[0], t3), r2[1]);
        var a2 = function(t4, e3, n4) {
          var i3 = 6, r3 = t4.get("hoverLinkDataSize");
          r3 && (i3 = qF(r3, e3, n4, true) / 2);
          return i3;
        }(n3, o2, r2), s2 = [t3 - a2, t3 + a2], l2 = qF(t3, r2, o2, true), u2 = [qF(s2[0], r2, o2, true), qF(s2[1], r2, o2, true)];
        s2[0] < r2[0] && (u2[0] = -1 / 0), s2[1] > r2[1] && (u2[1] = 1 / 0), e2 && (u2[0] === -1 / 0 ? this._showIndicator(l2, u2[1], "< ", a2) : u2[1] === 1 / 0 ? this._showIndicator(l2, u2[0], "> ", a2) : this._showIndicator(l2, l2, "\u2248 ", a2));
        var h2 = this._hoverLinkDataIndices, c2 = [];
        (e2 || eG(n3)) && (c2 = this._hoverLinkDataIndices = n3.findTargetDataIndices(u2));
        var p2 = function(t4, e3) {
          var n4 = {}, i3 = {};
          return r3(t4 || [], n4), r3(e3 || [], i3, n4), [o3(n4), o3(i3)];
          function r3(t5, e4, n5) {
            for (var i4 = 0, r4 = t5.length; i4 < r4; i4++) {
              var o4 = Do(t5[i4].seriesId, null);
              if (null == o4)
                return;
              for (var a3 = _o(t5[i4].dataIndex), s3 = n5 && n5[o4], l3 = 0, u3 = a3.length; l3 < u3; l3++) {
                var h3 = a3[l3];
                s3 && s3[h3] ? s3[h3] = null : (e4[o4] || (e4[o4] = {}))[h3] = 1;
              }
            }
          }
          function o3(t5, e4) {
            var n5 = [];
            for (var i4 in t5)
              if (t5.hasOwnProperty(i4) && null != t5[i4])
                if (e4)
                  n5.push(+i4);
                else {
                  var r4 = o3(t5[i4], true);
                  r4.length && n5.push({ seriesId: i4, dataIndex: r4 });
                }
            return n5;
          }
        }(h2, c2);
        this._dispatchHighDown("downplay", jF(p2[0], n3)), this._dispatchHighDown("highlight", jF(p2[1], n3));
      }
    }, n2.prototype._hoverLinkFromSeriesMouseOver = function(t3) {
      var e2;
      if (Ay(t3.target, function(t4) {
        var n4 = Js(t4);
        if (null != n4.dataIndex)
          return e2 = n4, true;
      }, true), e2) {
        var n3 = this.ecModel.getSeriesByIndex(e2.seriesIndex), i2 = this.visualMapModel;
        if (i2.isTargetSeries(n3)) {
          var r2 = n3.getData(e2.dataType), o2 = r2.getStore().get(i2.getDataDimensionIndex(r2), e2.dataIndex);
          isNaN(o2) || this._showIndicator(o2, o2);
        }
      }
    }, n2.prototype._hideIndicator = function() {
      var t3 = this._shapes;
      t3.indicator && t3.indicator.attr("invisible", true), t3.indicatorLabel && t3.indicatorLabel.attr("invisible", true);
      var e2 = this._shapes.handleLabels;
      if (e2)
        for (var n3 = 0; n3 < e2.length; n3++)
          this._api.leaveBlur(e2[n3]);
    }, n2.prototype._clearHoverLinkToSeries = function() {
      this._hideIndicator();
      var t3 = this._hoverLinkDataIndices;
      this._dispatchHighDown("downplay", jF(t3, this.visualMapModel)), t3.length = 0;
    }, n2.prototype._clearHoverLinkFromSeries = function() {
      this._hideIndicator();
      var t3 = this.api.getZr();
      t3.off("mouseover", this._hoverLinkFromSeriesMouseOver), t3.off("mouseout", this._hideIndicator);
    }, n2.prototype._applyTransform = function(t3, e2, n3, i2) {
      var r2 = Nh(e2, i2 ? null : this.group);
      return H(t3) ? Eh(t3, r2, n3) : zh(t3, r2, n3);
    }, n2.prototype._dispatchHighDown = function(t3, e2) {
      e2 && e2.length && this.api.dispatchAction({ type: t3, batch: e2 });
    }, n2.prototype.dispose = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, n2.prototype.remove = function() {
      this._clearHoverLinkFromSeries(), this._clearHoverLinkToSeries();
    }, n2.type = "visualMap.continuous", n2;
  }(XF);
  function tG(t2, e2, n2, i2) {
    return new Gu({ shape: { points: t2 }, draggable: !!n2, cursor: e2, drift: n2, onmousemove: function(t3) {
      pe(t3.event);
    }, ondragend: i2 });
  }
  function eG(t2) {
    var e2 = t2.get("hoverLinkOnHandle");
    return !!(null == e2 ? t2.get("realtime") : e2);
  }
  function nG(t2) {
    return "vertical" === t2 ? "ns-resize" : "ew-resize";
  }
  var iG = { type: "selectDataRange", event: "dataRangeSelected", update: "update" };
  var rG = function(t2, e2) {
    e2.eachComponent({ mainType: "visualMap", query: t2 }, function(e3) {
      e3.setSelected(t2.selected);
    });
  };
  var oG = [{ createOnAllSeries: true, reset: function(t2, e2) {
    var n2 = [];
    return e2.eachComponent("visualMap", function(e3) {
      var i2, r2, o2, a2, s2, l2 = t2.pipelineContext;
      !e3.isTargetSeries(t2) || l2 && l2.large || n2.push((i2 = e3.stateList, r2 = e3.targetVisuals, o2 = G(e3.getValueState, e3), a2 = e3.getDataDimensionIndex(t2.getData()), s2 = {}, N(i2, function(t3) {
        var e4 = OD.prepareVisualTypes(r2[t3]);
        s2[t3] = e4;
      }), { progress: function(t3, e4) {
        var n3, i3;
        function l3(t4) {
          return My(e4, i3, t4);
        }
        function u2(t4, n4) {
          Ty(e4, i3, t4, n4);
        }
        null != a2 && (n3 = e4.getDimensionIndex(a2));
        for (var h2 = e4.getStore(); null != (i3 = t3.next()); ) {
          var c2 = e4.getRawDataItem(i3);
          if (!c2 || false !== c2.visualMap)
            for (var p2 = null != a2 ? h2.get(n3, i3) : i3, d2 = o2(p2), f2 = r2[d2], g2 = s2[d2], y2 = 0, v2 = g2.length; y2 < v2; y2++) {
              var m2 = g2[y2];
              f2[m2] && f2[m2].applyVisual(p2, l3, u2);
            }
        }
      } }));
    }), n2;
  } }, { createOnAllSeries: true, reset: function(t2, e2) {
    var n2 = t2.getData(), i2 = [];
    e2.eachComponent("visualMap", function(e3) {
      if (e3.isTargetSeries(t2)) {
        var r2 = e3.getVisualMeta(G(aG, null, t2, e3)) || { stops: [], outerColors: [] }, o2 = e3.getDataDimensionIndex(n2);
        o2 >= 0 && (r2.dimension = o2, i2.push(r2));
      }
    }), t2.getData().setVisual("visualMeta", i2);
  } }];
  function aG(t2, e2, n2, i2) {
    for (var r2 = e2.targetVisuals[i2], o2 = OD.prepareVisualTypes(r2), a2 = { color: Iy(t2.getData(), "color") }, s2 = 0, l2 = o2.length; s2 < l2; s2++) {
      var u2 = o2[s2], h2 = r2["opacity" === u2 ? "__alphaForOpacity" : u2];
      h2 && h2.applyVisual(n2, c2, p2);
    }
    return a2.color;
    function c2(t3) {
      return a2[t3];
    }
    function p2(t3, e3) {
      a2[t3] = e3;
    }
  }
  var sG = N;
  function lG(t2) {
    var e2 = t2 && t2.visualMap;
    H(e2) || (e2 = e2 ? [e2] : []), sG(e2, function(t3) {
      if (t3) {
        uG(t3, "splitList") && !uG(t3, "pieces") && (t3.pieces = t3.splitList, delete t3.splitList);
        var e3 = t3.pieces;
        e3 && H(e3) && sG(e3, function(t4) {
          j(t4) && (uG(t4, "start") && !uG(t4, "min") && (t4.min = t4.start), uG(t4, "end") && !uG(t4, "max") && (t4.max = t4.end));
        });
      }
    });
  }
  function uG(t2, e2) {
    return t2 && t2.hasOwnProperty && t2.hasOwnProperty(e2);
  }
  var hG = false;
  function cG(t2) {
    hG || (hG = true, t2.registerSubTypeDefaulter("visualMap", function(t3) {
      return t3.categories || (t3.pieces ? t3.pieces.length > 0 : t3.splitNumber > 0) && !t3.calculable ? "piecewise" : "continuous";
    }), t2.registerAction(iG, rG), N(oG, function(e2) {
      t2.registerVisual(t2.PRIORITY.VISUAL.COMPONENT, e2);
    }), t2.registerPreprocessor(lG));
  }
  function pG(t2) {
    t2.registerComponentModel(HF), t2.registerComponentView(QF), cG(t2);
  }
  var dG = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2._pieceList = [], e2;
    }
    return e(n2, t2), n2.prototype.optionUpdated = function(e2, n3) {
      t2.prototype.optionUpdated.apply(this, arguments), this.resetExtent();
      var i2 = this._mode = this._determineMode();
      this._pieceList = [], fG[this._mode].call(this, this._pieceList), this._resetSelected(e2, n3);
      var r2 = this.option.categories;
      this.resetVisual(function(t3, e3) {
        "categories" === i2 ? (t3.mappingMethod = "category", t3.categories = I(r2)) : (t3.dataExtent = this.getExtent(), t3.mappingMethod = "piecewise", t3.pieceList = E(this._pieceList, function(t4) {
          return t4 = I(t4), "inRange" !== e3 && (t4.visual = null), t4;
        }));
      });
    }, n2.prototype.completeVisualOption = function() {
      var e2 = this.option, n3 = {}, i2 = OD.listVisualTypes(), r2 = this.isCategory();
      function o2(t3, e3, n4) {
        return t3 && t3[e3] && t3[e3].hasOwnProperty(n4);
      }
      N(e2.pieces, function(t3) {
        N(i2, function(e3) {
          t3.hasOwnProperty(e3) && (n3[e3] = 1);
        });
      }), N(n3, function(t3, n4) {
        var i3 = false;
        N(this.stateList, function(t4) {
          i3 = i3 || o2(e2, t4, n4) || o2(e2.target, t4, n4);
        }, this), !i3 && N(this.stateList, function(t4) {
          (e2[t4] || (e2[t4] = {}))[n4] = OF(n4, "inRange" === t4 ? "active" : "inactive", r2);
        });
      }, this), t2.prototype.completeVisualOption.apply(this, arguments);
    }, n2.prototype._resetSelected = function(t3, e2) {
      var n3 = this.option, i2 = this._pieceList, r2 = (e2 ? n3 : t3).selected || {};
      if (n3.selected = r2, N(i2, function(t4, e3) {
        var n4 = this.getSelectedMapKey(t4);
        r2.hasOwnProperty(n4) || (r2[n4] = true);
      }, this), "single" === n3.selectedMode) {
        var o2 = false;
        N(i2, function(t4, e3) {
          var n4 = this.getSelectedMapKey(t4);
          r2[n4] && (o2 ? r2[n4] = false : o2 = true);
        }, this);
      }
    }, n2.prototype.getItemSymbol = function() {
      return this.get("itemSymbol");
    }, n2.prototype.getSelectedMapKey = function(t3) {
      return "categories" === this._mode ? t3.value + "" : t3.index + "";
    }, n2.prototype.getPieceList = function() {
      return this._pieceList;
    }, n2.prototype._determineMode = function() {
      var t3 = this.option;
      return t3.pieces && t3.pieces.length > 0 ? "pieces" : this.option.categories ? "categories" : "splitNumber";
    }, n2.prototype.setSelected = function(t3) {
      this.option.selected = I(t3);
    }, n2.prototype.getValueState = function(t3) {
      var e2 = OD.findPieceIndex(t3, this._pieceList);
      return null != e2 && this.option.selected[this.getSelectedMapKey(this._pieceList[e2])] ? "inRange" : "outOfRange";
    }, n2.prototype.findTargetDataIndices = function(t3) {
      var e2 = [], n3 = this._pieceList;
      return this.eachTargetSeries(function(i2) {
        var r2 = [], o2 = i2.getData();
        o2.each(this.getDataDimensionIndex(o2), function(e3, i3) {
          OD.findPieceIndex(e3, n3) === t3 && r2.push(i3);
        }, this), e2.push({ seriesId: i2.id, dataIndex: r2 });
      }, this), e2;
    }, n2.prototype.getRepresentValue = function(t3) {
      var e2;
      if (this.isCategory())
        e2 = t3.value;
      else if (null != t3.value)
        e2 = t3.value;
      else {
        var n3 = t3.interval || [];
        e2 = n3[0] === -1 / 0 && n3[1] === 1 / 0 ? 0 : (n3[0] + n3[1]) / 2;
      }
      return e2;
    }, n2.prototype.getVisualMeta = function(t3) {
      if (!this.isCategory()) {
        var e2 = [], n3 = ["", ""], i2 = this, r2 = this._pieceList.slice();
        if (r2.length) {
          var o2 = r2[0].interval[0];
          o2 !== -1 / 0 && r2.unshift({ interval: [-1 / 0, o2] }), (o2 = r2[r2.length - 1].interval[1]) !== 1 / 0 && r2.push({ interval: [o2, 1 / 0] });
        } else
          r2.push({ interval: [-1 / 0, 1 / 0] });
        var a2 = -1 / 0;
        return N(r2, function(t4) {
          var e3 = t4.interval;
          e3 && (e3[0] > a2 && s2([a2, e3[0]], "outOfRange"), s2(e3.slice()), a2 = e3[1]);
        }, this), { stops: e2, outerColors: n3 };
      }
      function s2(r3, o3) {
        var a3 = i2.getRepresentValue({ interval: r3 });
        o3 || (o3 = i2.getValueState(a3));
        var s3 = t3(a3, o3);
        r3[0] === -1 / 0 ? n3[0] = s3 : r3[1] === 1 / 0 ? n3[1] = s3 : e2.push({ value: r3[0], color: s3 }, { value: r3[1], color: s3 });
      }
    }, n2.type = "visualMap.piecewise", n2.defaultOption = Tc(GF.defaultOption, { selected: null, minOpen: false, maxOpen: false, align: "auto", itemWidth: 20, itemHeight: 14, itemSymbol: "roundRect", pieces: null, categories: null, splitNumber: 5, selectedMode: "multiple", itemGap: 10, hoverLink: true }), n2;
  }(GF);
  var fG = { splitNumber: function(t2) {
    var e2 = this.option, n2 = Math.min(e2.precision, 20), i2 = this.getExtent(), r2 = e2.splitNumber;
    r2 = Math.max(parseInt(r2, 10), 1), e2.splitNumber = r2;
    for (var o2 = (i2[1] - i2[0]) / r2; +o2.toFixed(n2) !== o2 && n2 < 5; )
      n2++;
    e2.precision = n2, o2 = +o2.toFixed(n2), e2.minOpen && t2.push({ interval: [-1 / 0, i2[0]], close: [0, 0] });
    for (var a2 = 0, s2 = i2[0]; a2 < r2; s2 += o2, a2++) {
      var l2 = a2 === r2 - 1 ? i2[1] : s2 + o2;
      t2.push({ interval: [s2, l2], close: [1, 1] });
    }
    e2.maxOpen && t2.push({ interval: [i2[1], 1 / 0], close: [0, 0] }), lo(t2), N(t2, function(t3, e3) {
      t3.index = e3, t3.text = this.formatValueText(t3.interval);
    }, this);
  }, categories: function(t2) {
    var e2 = this.option;
    N(e2.categories, function(e3) {
      t2.push({ text: this.formatValueText(e3, true), value: e3 });
    }, this), gG(e2, t2);
  }, pieces: function(t2) {
    var e2 = this.option;
    N(e2.pieces, function(e3, n2) {
      j(e3) || (e3 = { value: e3 });
      var i2 = { text: "", index: n2 };
      if (null != e3.label && (i2.text = e3.label), e3.hasOwnProperty("value")) {
        var r2 = i2.value = e3.value;
        i2.interval = [r2, r2], i2.close = [1, 1];
      } else {
        for (var o2 = i2.interval = [], a2 = i2.close = [0, 0], s2 = [1, 0, 1], l2 = [-1 / 0, 1 / 0], u2 = [], h2 = 0; h2 < 2; h2++) {
          for (var c2 = [["gte", "gt", "min"], ["lte", "lt", "max"]][h2], p2 = 0; p2 < 3 && null == o2[h2]; p2++)
            o2[h2] = e3[c2[p2]], a2[h2] = s2[p2], u2[h2] = 2 === p2;
          null == o2[h2] && (o2[h2] = l2[h2]);
        }
        u2[0] && o2[1] === 1 / 0 && (a2[0] = 0), u2[1] && o2[0] === -1 / 0 && (a2[1] = 0), o2[0] === o2[1] && a2[0] && a2[1] && (i2.value = o2[0]);
      }
      i2.visual = OD.retrieveVisuals(e3), t2.push(i2);
    }, this), gG(e2, t2), lo(t2), N(t2, function(t3) {
      var e3 = t3.close, n2 = [["<", "\u2264"][e3[1]], [">", "\u2265"][e3[0]]];
      t3.text = t3.text || this.formatValueText(null != t3.value ? t3.value : t3.interval, false, n2);
    }, this);
  } };
  function gG(t2, e2) {
    var n2 = t2.inverse;
    ("vertical" === t2.orient ? !n2 : n2) && e2.reverse();
  }
  var yG = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = n2.type, e2;
    }
    return e(n2, t2), n2.prototype.doRender = function() {
      var t3 = this.group;
      t3.removeAll();
      var e2 = this.visualMapModel, n3 = e2.get("textGap"), i2 = e2.textStyleModel, r2 = i2.getFont(), o2 = i2.getTextColor(), a2 = this._getItemAlign(), s2 = e2.itemSize, l2 = this._getViewData(), u2 = l2.endsText, h2 = nt(e2.get("showLabel", true), !u2);
      u2 && this._renderEndsText(t3, u2[0], s2, h2, a2), N(l2.viewPieceList, function(i3) {
        var l3 = i3.piece, u3 = new Er();
        u3.onclick = G(this._onItemClick, this, l3), this._enableHoverLink(u3, i3.indexInModelPieceList);
        var c2 = e2.getRepresentValue(l3);
        if (this._createItemSymbol(u3, c2, [0, 0, s2[0], s2[1]]), h2) {
          var p2 = this.visualMapModel.getValueState(c2);
          u3.add(new Bs({ style: { x: "right" === a2 ? -n3 : s2[0] + n3, y: s2[1] / 2, text: l3.text, verticalAlign: "middle", align: a2, font: r2, fill: o2, opacity: "outOfRange" === p2 ? 0.5 : 1 } }));
        }
        t3.add(u3);
      }, this), u2 && this._renderEndsText(t3, u2[1], s2, h2, a2), Ip(e2.get("orient"), t3, e2.get("itemGap")), this.renderBackground(t3), this.positionGroup(t3);
    }, n2.prototype._enableHoverLink = function(t3, e2) {
      var n3 = this;
      t3.on("mouseover", function() {
        return i2("highlight");
      }).on("mouseout", function() {
        return i2("downplay");
      });
      var i2 = function(t4) {
        var i3 = n3.visualMapModel;
        i3.option.hoverLink && n3.api.dispatchAction({ type: t4, batch: jF(i3.findTargetDataIndices(e2), i3) });
      };
    }, n2.prototype._getItemAlign = function() {
      var t3 = this.visualMapModel, e2 = t3.option;
      if ("vertical" === e2.orient)
        return ZF(t3, this.api, t3.itemSize);
      var n3 = e2.align;
      return n3 && "auto" !== n3 || (n3 = "left"), n3;
    }, n2.prototype._renderEndsText = function(t3, e2, n3, i2, r2) {
      if (e2) {
        var o2 = new Er(), a2 = this.visualMapModel.textStyleModel;
        o2.add(new Bs({ style: ec(a2, { x: i2 ? "right" === r2 ? n3[0] : 0 : n3[0] / 2, y: n3[1] / 2, verticalAlign: "middle", align: i2 ? r2 : "center", text: e2 }) })), t3.add(o2);
      }
    }, n2.prototype._getViewData = function() {
      var t3 = this.visualMapModel, e2 = E(t3.getPieceList(), function(t4, e3) {
        return { piece: t4, indexInModelPieceList: e3 };
      }), n3 = t3.get("text"), i2 = t3.get("orient"), r2 = t3.get("inverse");
      return ("horizontal" === i2 ? r2 : !r2) ? e2.reverse() : n3 && (n3 = n3.slice().reverse()), { viewPieceList: e2, endsText: n3 };
    }, n2.prototype._createItemSymbol = function(t3, e2, n3) {
      t3.add(Gy(this.getControllerVisual(e2, "symbol"), n3[0], n3[1], n3[2], n3[3], this.getControllerVisual(e2, "color")));
    }, n2.prototype._onItemClick = function(t3) {
      var e2 = this.visualMapModel, n3 = e2.option, i2 = n3.selectedMode;
      if (i2) {
        var r2 = I(n3.selected), o2 = e2.getSelectedMapKey(t3);
        "single" === i2 || true === i2 ? (r2[o2] = true, N(r2, function(t4, e3) {
          r2[e3] = e3 === o2;
        })) : r2[o2] = !r2[o2], this.api.dispatchAction({ type: "selectDataRange", from: this.uid, visualMapId: this.visualMapModel.id, selected: r2 });
      }
    }, n2.type = "visualMap.piecewise", n2;
  }(XF);
  function vG(t2) {
    t2.registerComponentModel(dG), t2.registerComponentView(yG), cG(t2);
  }
  var mG = { label: { enabled: true }, decal: { show: false } };
  var xG = Po();
  var _G = {};
  function bG(t2, e2) {
    var n2 = t2.getModel("aria");
    if (n2.get("enabled")) {
      var i2 = I(mG);
      T(i2.label, t2.getLocaleModel().get("aria"), false), T(n2.option, i2, false), function() {
        if (n2.getModel("decal").get("show")) {
          var e3 = gt();
          t2.eachSeries(function(t3) {
            if (!t3.isColorBySeries()) {
              var n3 = e3.get(t3.type);
              n3 || (n3 = {}, e3.set(t3.type, n3)), xG(t3).scope = n3;
            }
          }), t2.eachRawSeries(function(e4) {
            if (!t2.isSeriesFiltered(e4))
              if (Y(e4.enableAriaDecal))
                e4.enableAriaDecal();
              else {
                var n3 = e4.getData();
                if (e4.isColorBySeries()) {
                  var i3 = ld(e4.ecModel, e4.name, _G, t2.getSeriesCount()), r3 = n3.getVisual("decal");
                  n3.setVisual("decal", u2(r3, i3));
                } else {
                  var o2 = e4.getRawData(), a2 = {}, s2 = xG(e4).scope;
                  n3.each(function(t3) {
                    var e5 = n3.getRawIndex(t3);
                    a2[e5] = t3;
                  });
                  var l2 = o2.count();
                  o2.each(function(t3) {
                    var i4 = a2[t3], r4 = o2.getName(t3) || t3 + "", h2 = ld(e4.ecModel, r4, s2, l2), c2 = n3.getItemVisual(i4, "decal");
                    n3.setItemVisual(i4, "decal", u2(c2, h2));
                  });
                }
              }
            function u2(t3, e5) {
              var n4 = t3 ? D(D({}, e5), t3) : e5;
              return n4.dirty = true, n4;
            }
          });
        }
      }(), function() {
        var i3 = t2.getLocaleModel().get("aria"), o2 = n2.getModel("label");
        if (o2.option = A(o2.option, i3), !o2.get("enabled"))
          return;
        var a2 = e2.getZr().dom;
        if (o2.get("description"))
          return void a2.setAttribute("aria-label", o2.get("description"));
        var s2, l2 = t2.getSeriesCount(), u2 = o2.get(["data", "maxCount"]) || 10, h2 = o2.get(["series", "maxCount"]) || 10, c2 = Math.min(l2, h2);
        if (l2 < 1)
          return;
        var p2 = function() {
          var e3 = t2.get("title");
          e3 && e3.length && (e3 = e3[0]);
          return e3 && e3.text;
        }();
        s2 = p2 ? r2(o2.get(["general", "withTitle"]), { title: p2 }) : o2.get(["general", "withoutTitle"]);
        var d2 = [];
        s2 += r2(l2 > 1 ? o2.get(["series", "multiple", "prefix"]) : o2.get(["series", "single", "prefix"]), { seriesCount: l2 }), t2.eachSeries(function(e3, n3) {
          if (n3 < c2) {
            var i4 = void 0, a3 = e3.get("name") ? "withName" : "withoutName";
            i4 = r2(i4 = l2 > 1 ? o2.get(["series", "multiple", a3]) : o2.get(["series", "single", a3]), { seriesId: e3.seriesIndex, seriesName: e3.get("name"), seriesType: (x2 = e3.subType, t2.getLocaleModel().get(["series", "typeNames"])[x2] || "\u81EA\u5B9A\u4E49\u56FE") });
            var s3 = e3.getData();
            if (s3.count() > u2)
              i4 += r2(o2.get(["data", "partialData"]), { displayCnt: u2 });
            else
              i4 += o2.get(["data", "allData"]);
            for (var h3 = o2.get(["data", "separator", "middle"]), p3 = o2.get(["data", "separator", "end"]), f3 = [], g3 = 0; g3 < s3.count(); g3++)
              if (g3 < u2) {
                var y3 = s3.getName(g3), v2 = s3.getValues(g3), m2 = o2.get(["data", y3 ? "withName" : "withoutName"]);
                f3.push(r2(m2, { name: y3, value: v2.join(h3) }));
              }
            i4 += f3.join(h3) + p3, d2.push(i4);
          }
          var x2;
        });
        var f2 = o2.getModel(["series", "multiple", "separator"]), g2 = f2.get("middle"), y2 = f2.get("end");
        s2 += d2.join(g2) + y2, a2.setAttribute("aria-label", s2);
      }();
    }
    function r2(t3, e3) {
      if (!X(t3))
        return t3;
      var n3 = t3;
      return N(e3, function(t4, e4) {
        n3 = n3.replace(new RegExp("\\{\\s*" + e4 + "\\s*\\}", "g"), t4);
      }), n3;
    }
  }
  function wG(t2) {
    if (t2 && t2.aria) {
      var e2 = t2.aria;
      null != e2.show && (e2.enabled = e2.show), e2.label = e2.label || {}, N(["description", "general", "series", "data"], function(t3) {
        null != e2[t3] && (e2.label[t3] = e2[t3]);
      });
    }
  }
  var SG = { value: "eq", "<": "lt", "<=": "lte", ">": "gt", ">=": "gte", "=": "eq", "!=": "ne", "<>": "ne" };
  var MG = function() {
    function t2(t3) {
      if (null == (this._condVal = X(t3) ? new RegExp(t3) : tt(t3) ? t3 : null)) {
        var e2 = "";
        yo(e2);
      }
    }
    return t2.prototype.evaluate = function(t3) {
      var e2 = typeof t3;
      return X(e2) ? this._condVal.test(t3) : !!Z(e2) && this._condVal.test(t3 + "");
    }, t2;
  }();
  var IG = function() {
    function t2() {
    }
    return t2.prototype.evaluate = function() {
      return this.value;
    }, t2;
  }();
  var TG = function() {
    function t2() {
    }
    return t2.prototype.evaluate = function() {
      for (var t3 = this.children, e2 = 0; e2 < t3.length; e2++)
        if (!t3[e2].evaluate())
          return false;
      return true;
    }, t2;
  }();
  var CG = function() {
    function t2() {
    }
    return t2.prototype.evaluate = function() {
      for (var t3 = this.children, e2 = 0; e2 < t3.length; e2++)
        if (t3[e2].evaluate())
          return true;
      return false;
    }, t2;
  }();
  var DG = function() {
    function t2() {
    }
    return t2.prototype.evaluate = function() {
      return !this.child.evaluate();
    }, t2;
  }();
  var AG = function() {
    function t2() {
    }
    return t2.prototype.evaluate = function() {
      for (var t3 = !!this.valueParser, e2 = (0, this.getValue)(this.valueGetterParam), n2 = t3 ? this.valueParser(e2) : null, i2 = 0; i2 < this.subCondList.length; i2++)
        if (!this.subCondList[i2].evaluate(t3 ? n2 : e2))
          return false;
      return true;
    }, t2;
  }();
  function kG(t2, e2) {
    if (true === t2 || false === t2) {
      var n2 = new IG();
      return n2.value = t2, n2;
    }
    var i2 = "";
    return PG(t2) || yo(i2), t2.and ? LG("and", t2, e2) : t2.or ? LG("or", t2, e2) : t2.not ? function(t3, e3) {
      var n3 = t3.not, i3 = "";
      PG(n3) || yo(i3);
      var r2 = new DG();
      r2.child = kG(n3, e3), r2.child || yo(i3);
      return r2;
    }(t2, e2) : function(t3, e3) {
      for (var n3 = "", i3 = e3.prepareGetValue(t3), r2 = [], o2 = F(t3), a2 = t3.parser, s2 = a2 ? Sf(a2) : null, l2 = 0; l2 < o2.length; l2++) {
        var u2 = o2[l2];
        if ("parser" !== u2 && !e3.valueGetterAttrMap.get(u2)) {
          var h2 = xt(SG, u2) ? SG[u2] : u2, c2 = t3[u2], p2 = s2 ? s2(c2) : c2, d2 = Df(h2, p2) || "reg" === h2 && new MG(p2);
          d2 || yo(n3), r2.push(d2);
        }
      }
      r2.length || yo(n3);
      var f2 = new AG();
      return f2.valueGetterParam = i3, f2.valueParser = s2, f2.getValue = e3.getValue, f2.subCondList = r2, f2;
    }(t2, e2);
  }
  function LG(t2, e2, n2) {
    var i2 = e2[t2], r2 = "";
    H(i2) || yo(r2), i2.length || yo(r2);
    var o2 = "and" === t2 ? new TG() : new CG();
    return o2.children = E(i2, function(t3) {
      return kG(t3, n2);
    }), o2.children.length || yo(r2), o2;
  }
  function PG(t2) {
    return j(t2) && !R(t2);
  }
  var OG = function() {
    function t2(t3, e2) {
      this._cond = kG(t3, e2);
    }
    return t2.prototype.evaluate = function() {
      return this._cond.evaluate();
    }, t2;
  }();
  var RG = { type: "echarts:filter", transform: function(t2) {
    for (var e2, n2, i2, r2 = t2.upstream, o2 = (n2 = t2.config, i2 = { valueGetterAttrMap: gt({ dimension: true }), prepareGetValue: function(t3) {
      var e3 = "", n3 = t3.dimension;
      xt(t3, "dimension") || yo(e3);
      var i3 = r2.getDimensionInfo(n3);
      return i3 || yo(e3), { dimIdx: i3.index };
    }, getValue: function(t3) {
      return r2.retrieveValueFromItem(e2, t3.dimIdx);
    } }, new OG(n2, i2)), a2 = [], s2 = 0, l2 = r2.count(); s2 < l2; s2++)
      e2 = r2.getRawDataItem(s2), o2.evaluate() && a2.push(e2);
    return { data: a2 };
  } };
  var NG = { type: "echarts:sort", transform: function(t2) {
    var e2 = t2.upstream, n2 = t2.config, i2 = "", r2 = _o(n2);
    r2.length || yo(i2);
    var o2 = [];
    N(r2, function(t3) {
      var n3 = t3.dimension, r3 = t3.order, a3 = t3.parser, s3 = t3.incomparable;
      if (null == n3 && yo(i2), "asc" !== r3 && "desc" !== r3 && yo(i2), s3 && "min" !== s3 && "max" !== s3) {
        var l3 = "";
        yo(l3);
      }
      if ("asc" !== r3 && "desc" !== r3) {
        var u3 = "";
        yo(u3);
      }
      var h2 = e2.getDimensionInfo(n3);
      h2 || yo(i2);
      var c2 = a3 ? Sf(a3) : null;
      a3 && !c2 && yo(i2), o2.push({ dimIdx: h2.index, parser: c2, comparator: new Tf(r3, s3) });
    });
    var a2 = e2.sourceFormat;
    a2 !== Bp && a2 !== Fp && yo(i2);
    for (var s2 = [], l2 = 0, u2 = e2.count(); l2 < u2; l2++)
      s2.push(e2.getRawDataItem(l2));
    return s2.sort(function(t3, n3) {
      for (var i3 = 0; i3 < o2.length; i3++) {
        var r3 = o2[i3], a3 = e2.retrieveValueFromItem(t3, r3.dimIdx), s3 = e2.retrieveValueFromItem(n3, r3.dimIdx);
        r3.parser && (a3 = r3.parser(a3), s3 = r3.parser(s3));
        var l3 = r3.comparator.evaluate(a3, s3);
        if (0 !== l3)
          return l3;
      }
      return 0;
    }), { data: s2 };
  } };
  var EG = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "dataset", e2;
    }
    return e(n2, t2), n2.prototype.init = function(e2, n3, i2) {
      t2.prototype.init.call(this, e2, n3, i2), this._sourceManager = new Zf(this), jf(this);
    }, n2.prototype.mergeOption = function(e2, n3) {
      t2.prototype.mergeOption.call(this, e2, n3), jf(this);
    }, n2.prototype.optionUpdated = function() {
      this._sourceManager.dirty();
    }, n2.prototype.getSourceManager = function() {
      return this._sourceManager;
    }, n2.type = "dataset", n2.defaultOption = { seriesLayoutBy: Yp }, n2;
  }(Op);
  var zG = function(t2) {
    function n2() {
      var e2 = null !== t2 && t2.apply(this, arguments) || this;
      return e2.type = "dataset", e2;
    }
    return e(n2, t2), n2.type = "dataset", n2;
  }(Ig);
  var VG = rs.CMD;
  function BG(t2, e2) {
    return Math.abs(t2 - e2) < 1e-5;
  }
  function FG(t2) {
    var e2, n2, i2, r2, o2, a2 = t2.data, s2 = t2.len(), l2 = [], u2 = 0, h2 = 0, c2 = 0, p2 = 0;
    function d2(t3, n3) {
      e2 && e2.length > 2 && l2.push(e2), e2 = [t3, n3];
    }
    function f2(t3, n3, i3, r3) {
      BG(t3, i3) && BG(n3, r3) || e2.push(t3, n3, i3, r3, i3, r3);
    }
    function g2(t3, n3, i3, r3, o3, a3) {
      var s3 = Math.abs(n3 - t3), l3 = 4 * Math.tan(s3 / 4) / 3, u3 = n3 < t3 ? -1 : 1, h3 = Math.cos(t3), c3 = Math.sin(t3), p3 = Math.cos(n3), d3 = Math.sin(n3), f3 = h3 * o3 + i3, g3 = c3 * a3 + r3, y3 = p3 * o3 + i3, v3 = d3 * a3 + r3, m3 = o3 * l3 * u3, x3 = a3 * l3 * u3;
      e2.push(f3 - m3 * c3, g3 + x3 * h3, y3 + m3 * d3, v3 - x3 * p3, y3, v3);
    }
    for (var y2 = 0; y2 < s2; ) {
      var v2 = a2[y2++], m2 = 1 === y2;
      switch (m2 && (c2 = u2 = a2[y2], p2 = h2 = a2[y2 + 1], v2 !== VG.L && v2 !== VG.C && v2 !== VG.Q || (e2 = [c2, p2])), v2) {
        case VG.M:
          u2 = c2 = a2[y2++], h2 = p2 = a2[y2++], d2(c2, p2);
          break;
        case VG.L:
          f2(u2, h2, n2 = a2[y2++], i2 = a2[y2++]), u2 = n2, h2 = i2;
          break;
        case VG.C:
          e2.push(a2[y2++], a2[y2++], a2[y2++], a2[y2++], u2 = a2[y2++], h2 = a2[y2++]);
          break;
        case VG.Q:
          n2 = a2[y2++], i2 = a2[y2++], r2 = a2[y2++], o2 = a2[y2++], e2.push(u2 + 2 / 3 * (n2 - u2), h2 + 2 / 3 * (i2 - h2), r2 + 2 / 3 * (n2 - r2), o2 + 2 / 3 * (i2 - o2), r2, o2), u2 = r2, h2 = o2;
          break;
        case VG.A:
          var x2 = a2[y2++], _2 = a2[y2++], b2 = a2[y2++], w2 = a2[y2++], S2 = a2[y2++], M2 = a2[y2++] + S2;
          y2 += 1;
          var I2 = !a2[y2++];
          n2 = Math.cos(S2) * b2 + x2, i2 = Math.sin(S2) * w2 + _2, m2 ? d2(c2 = n2, p2 = i2) : f2(u2, h2, n2, i2), u2 = Math.cos(M2) * b2 + x2, h2 = Math.sin(M2) * w2 + _2;
          for (var T2 = (I2 ? -1 : 1) * Math.PI / 2, C2 = S2; I2 ? C2 > M2 : C2 < M2; C2 += T2) {
            g2(C2, I2 ? Math.max(C2 + T2, M2) : Math.min(C2 + T2, M2), x2, _2, b2, w2);
          }
          break;
        case VG.R:
          c2 = u2 = a2[y2++], p2 = h2 = a2[y2++], n2 = c2 + a2[y2++], i2 = p2 + a2[y2++], d2(n2, p2), f2(n2, p2, n2, i2), f2(n2, i2, c2, i2), f2(c2, i2, c2, p2), f2(c2, p2, n2, p2);
          break;
        case VG.Z:
          e2 && f2(u2, h2, c2, p2), u2 = c2, h2 = p2;
      }
    }
    return e2 && e2.length > 2 && l2.push(e2), l2;
  }
  function GG(t2, e2, n2, i2, r2, o2, a2, s2, l2, u2) {
    if (BG(t2, n2) && BG(e2, i2) && BG(r2, a2) && BG(o2, s2))
      l2.push(a2, s2);
    else {
      var h2 = 2 / u2, c2 = h2 * h2, p2 = a2 - t2, d2 = s2 - e2, f2 = Math.sqrt(p2 * p2 + d2 * d2);
      p2 /= f2, d2 /= f2;
      var g2 = n2 - t2, y2 = i2 - e2, v2 = r2 - a2, m2 = o2 - s2, x2 = g2 * g2 + y2 * y2, _2 = v2 * v2 + m2 * m2;
      if (x2 < c2 && _2 < c2)
        l2.push(a2, s2);
      else {
        var b2 = p2 * g2 + d2 * y2, w2 = -p2 * v2 - d2 * m2;
        if (x2 - b2 * b2 < c2 && b2 >= 0 && _2 - w2 * w2 < c2 && w2 >= 0)
          l2.push(a2, s2);
        else {
          var S2 = [], M2 = [];
          bn(t2, n2, r2, a2, 0.5, S2), bn(e2, i2, o2, s2, 0.5, M2), GG(S2[0], M2[0], S2[1], M2[1], S2[2], M2[2], S2[3], M2[3], l2, u2), GG(S2[4], M2[4], S2[5], M2[5], S2[6], M2[6], S2[7], M2[7], l2, u2);
        }
      }
    }
  }
  function WG(t2, e2, n2) {
    var i2 = t2[e2], r2 = t2[1 - e2], o2 = Math.abs(i2 / r2), a2 = Math.ceil(Math.sqrt(o2 * n2)), s2 = Math.floor(n2 / a2);
    0 === s2 && (s2 = 1, a2 = n2);
    for (var l2 = [], u2 = 0; u2 < a2; u2++)
      l2.push(s2);
    var h2 = n2 - a2 * s2;
    if (h2 > 0)
      for (u2 = 0; u2 < h2; u2++)
        l2[u2 % a2] += 1;
    return l2;
  }
  function HG(t2, e2, n2) {
    for (var i2 = t2.r0, r2 = t2.r, o2 = t2.startAngle, a2 = t2.endAngle, s2 = Math.abs(a2 - o2), l2 = s2 * r2, u2 = r2 - i2, h2 = l2 > Math.abs(u2), c2 = WG([l2, u2], h2 ? 0 : 1, e2), p2 = (h2 ? s2 : u2) / c2.length, d2 = 0; d2 < c2.length; d2++)
      for (var f2 = (h2 ? u2 : s2) / c2[d2], g2 = 0; g2 < c2[d2]; g2++) {
        var y2 = {};
        h2 ? (y2.startAngle = o2 + p2 * d2, y2.endAngle = o2 + p2 * (d2 + 1), y2.r0 = i2 + f2 * g2, y2.r = i2 + f2 * (g2 + 1)) : (y2.startAngle = o2 + f2 * g2, y2.endAngle = o2 + f2 * (g2 + 1), y2.r0 = i2 + p2 * d2, y2.r = i2 + p2 * (d2 + 1)), y2.clockwise = t2.clockwise, y2.cx = t2.cx, y2.cy = t2.cy, n2.push(y2);
      }
  }
  function YG(t2, e2, n2, i2) {
    return t2 * i2 - n2 * e2;
  }
  function XG(t2, e2, n2, i2, r2, o2, a2, s2) {
    var l2 = n2 - t2, u2 = i2 - e2, h2 = a2 - r2, c2 = s2 - o2, p2 = YG(h2, c2, l2, u2);
    if (Math.abs(p2) < 1e-6)
      return null;
    var d2 = YG(t2 - r2, e2 - o2, h2, c2) / p2;
    return d2 < 0 || d2 > 1 ? null : new Ce(d2 * l2 + t2, d2 * u2 + e2);
  }
  function UG(t2, e2, n2) {
    var i2 = new Ce();
    Ce.sub(i2, n2, e2), i2.normalize();
    var r2 = new Ce();
    return Ce.sub(r2, t2, e2), r2.dot(i2);
  }
  function ZG(t2, e2) {
    var n2 = t2[t2.length - 1];
    n2 && n2[0] === e2[0] && n2[1] === e2[1] || t2.push(e2);
  }
  function jG(t2) {
    var e2 = t2.points, n2 = [], i2 = [];
    Oa(e2, n2, i2);
    var r2 = new Ee(n2[0], n2[1], i2[0] - n2[0], i2[1] - n2[1]), o2 = r2.width, a2 = r2.height, s2 = r2.x, l2 = r2.y, u2 = new Ce(), h2 = new Ce();
    return o2 > a2 ? (u2.x = h2.x = s2 + o2 / 2, u2.y = l2, h2.y = l2 + a2) : (u2.y = h2.y = l2 + a2 / 2, u2.x = s2, h2.x = s2 + o2), function(t3, e3, n3) {
      for (var i3 = t3.length, r3 = [], o3 = 0; o3 < i3; o3++) {
        var a3 = t3[o3], s3 = t3[(o3 + 1) % i3], l3 = XG(a3[0], a3[1], s3[0], s3[1], e3.x, e3.y, n3.x, n3.y);
        l3 && r3.push({ projPt: UG(l3, e3, n3), pt: l3, idx: o3 });
      }
      if (r3.length < 2)
        return [{ points: t3 }, { points: t3 }];
      r3.sort(function(t4, e4) {
        return t4.projPt - e4.projPt;
      });
      var u3 = r3[0], h3 = r3[r3.length - 1];
      if (h3.idx < u3.idx) {
        var c2 = u3;
        u3 = h3, h3 = c2;
      }
      var p2 = [u3.pt.x, u3.pt.y], d2 = [h3.pt.x, h3.pt.y], f2 = [p2], g2 = [d2];
      for (o3 = u3.idx + 1; o3 <= h3.idx; o3++)
        ZG(f2, t3[o3].slice());
      for (ZG(f2, d2), ZG(f2, p2), o3 = h3.idx + 1; o3 <= u3.idx + i3; o3++)
        ZG(g2, t3[o3 % i3].slice());
      return ZG(g2, p2), ZG(g2, d2), [{ points: f2 }, { points: g2 }];
    }(e2, u2, h2);
  }
  function qG(t2, e2, n2, i2) {
    if (1 === n2)
      i2.push(e2);
    else {
      var r2 = Math.floor(n2 / 2), o2 = t2(e2);
      qG(t2, o2[0], r2, i2), qG(t2, o2[1], n2 - r2, i2);
    }
    return i2;
  }
  function KG(t2, e2) {
    e2.setStyle(t2.style), e2.z = t2.z, e2.z2 = t2.z2, e2.zlevel = t2.zlevel;
  }
  function $G(t2, e2) {
    var n2, i2 = [], r2 = t2.shape;
    switch (t2.type) {
      case "rect":
        !function(t3, e3, n3) {
          for (var i3 = t3.width, r3 = t3.height, o3 = i3 > r3, a3 = WG([i3, r3], o3 ? 0 : 1, e3), s3 = o3 ? "width" : "height", l3 = o3 ? "height" : "width", u3 = o3 ? "x" : "y", h3 = o3 ? "y" : "x", c3 = t3[s3] / a3.length, p3 = 0; p3 < a3.length; p3++)
            for (var d3 = t3[l3] / a3[p3], f3 = 0; f3 < a3[p3]; f3++) {
              var g3 = {};
              g3[u3] = p3 * c3, g3[h3] = f3 * d3, g3[s3] = c3, g3[l3] = d3, g3.x += t3.x, g3.y += t3.y, n3.push(g3);
            }
        }(r2, e2, i2), n2 = Es;
        break;
      case "sector":
        HG(r2, e2, i2), n2 = Eu;
        break;
      case "circle":
        HG({ r0: 0, r: r2.r, startAngle: 0, endAngle: 2 * Math.PI, cx: r2.cx, cy: r2.cy }, e2, i2), n2 = Eu;
        break;
      default:
        var o2 = t2.getComputedTransform(), a2 = o2 ? Math.sqrt(Math.max(o2[0] * o2[0] + o2[1] * o2[1], o2[2] * o2[2] + o2[3] * o2[3])) : 1, s2 = E(function(t3, e3) {
          var n3 = FG(t3), i3 = [];
          e3 = e3 || 1;
          for (var r3 = 0; r3 < n3.length; r3++) {
            var o3 = n3[r3], a3 = [], s3 = o3[0], l3 = o3[1];
            a3.push(s3, l3);
            for (var u3 = 2; u3 < o3.length; ) {
              var h3 = o3[u3++], c3 = o3[u3++], p3 = o3[u3++], d3 = o3[u3++], f3 = o3[u3++], g3 = o3[u3++];
              GG(s3, l3, h3, c3, p3, d3, f3, g3, a3, e3), s3 = f3, l3 = g3;
            }
            i3.push(a3);
          }
          return i3;
        }(t2.getUpdatedPathProxy(), a2), function(t3) {
          return function(t4) {
            for (var e3 = [], n3 = 0; n3 < t4.length; )
              e3.push([t4[n3++], t4[n3++]]);
            return e3;
          }(t3);
        }), l2 = s2.length;
        if (0 === l2)
          qG(jG, { points: s2[0] }, e2, i2);
        else if (l2 === e2)
          for (var u2 = 0; u2 < l2; u2++)
            i2.push({ points: s2[u2] });
        else {
          var h2 = 0, c2 = E(s2, function(t3) {
            var e3 = [], n3 = [];
            Oa(t3, e3, n3);
            var i3 = (n3[1] - e3[1]) * (n3[0] - e3[0]);
            return h2 += i3, { poly: t3, area: i3 };
          });
          c2.sort(function(t3, e3) {
            return e3.area - t3.area;
          });
          var p2 = e2;
          for (u2 = 0; u2 < l2; u2++) {
            var d2 = c2[u2];
            if (p2 <= 0)
              break;
            var f2 = u2 === l2 - 1 ? p2 : Math.ceil(d2.area / h2 * e2);
            f2 < 0 || (qG(jG, { points: d2.poly }, f2, i2), p2 -= f2);
          }
        }
        n2 = Gu;
    }
    if (!n2)
      return function(t3, e3) {
        for (var n3 = [], i3 = 0; i3 < e3; i3++)
          n3.push(vu(t3));
        return n3;
      }(t2, e2);
    var g2 = [];
    for (u2 = 0; u2 < i2.length; u2++) {
      var y2 = new n2();
      y2.setShape(i2[u2]), KG(t2, y2), g2.push(y2);
    }
    return g2;
  }
  function JG(t2, e2) {
    var n2 = t2.length, i2 = e2.length;
    if (n2 === i2)
      return [t2, e2];
    for (var r2 = [], o2 = [], a2 = n2 < i2 ? t2 : e2, s2 = Math.min(n2, i2), l2 = Math.abs(i2 - n2) / 6, u2 = (s2 - 2) / 6, h2 = Math.ceil(l2 / u2) + 1, c2 = [a2[0], a2[1]], p2 = l2, d2 = 2; d2 < s2; ) {
      var f2 = a2[d2 - 2], g2 = a2[d2 - 1], y2 = a2[d2++], v2 = a2[d2++], m2 = a2[d2++], x2 = a2[d2++], _2 = a2[d2++], b2 = a2[d2++];
      if (p2 <= 0)
        c2.push(y2, v2, m2, x2, _2, b2);
      else {
        for (var w2 = Math.min(p2, h2 - 1) + 1, S2 = 1; S2 <= w2; S2++) {
          var M2 = S2 / w2;
          bn(f2, y2, m2, _2, M2, r2), bn(g2, v2, x2, b2, M2, o2), f2 = r2[3], g2 = o2[3], c2.push(r2[1], o2[1], r2[2], o2[2], f2, g2), y2 = r2[5], v2 = o2[5], m2 = r2[6], x2 = o2[6];
        }
        p2 -= w2 - 1;
      }
    }
    return a2 === t2 ? [c2, e2] : [t2, c2];
  }
  function QG(t2, e2) {
    for (var n2 = t2.length, i2 = t2[n2 - 2], r2 = t2[n2 - 1], o2 = [], a2 = 0; a2 < e2.length; )
      o2[a2++] = i2, o2[a2++] = r2;
    return o2;
  }
  function tW(t2) {
    for (var e2 = 0, n2 = 0, i2 = 0, r2 = t2.length, o2 = 0, a2 = r2 - 2; o2 < r2; a2 = o2, o2 += 2) {
      var s2 = t2[a2], l2 = t2[a2 + 1], u2 = t2[o2], h2 = t2[o2 + 1], c2 = s2 * h2 - u2 * l2;
      e2 += c2, n2 += (s2 + u2) * c2, i2 += (l2 + h2) * c2;
    }
    return 0 === e2 ? [t2[0] || 0, t2[1] || 0] : [n2 / e2 / 3, i2 / e2 / 3, e2];
  }
  function eW(t2, e2, n2, i2) {
    for (var r2 = (t2.length - 2) / 6, o2 = 1 / 0, a2 = 0, s2 = t2.length, l2 = s2 - 2, u2 = 0; u2 < r2; u2++) {
      for (var h2 = 6 * u2, c2 = 0, p2 = 0; p2 < s2; p2 += 2) {
        var d2 = 0 === p2 ? h2 : (h2 + p2 - 2) % l2 + 2, f2 = t2[d2] - n2[0], g2 = t2[d2 + 1] - n2[1], y2 = e2[p2] - i2[0] - f2, v2 = e2[p2 + 1] - i2[1] - g2;
        c2 += y2 * y2 + v2 * v2;
      }
      c2 < o2 && (o2 = c2, a2 = u2);
    }
    return a2;
  }
  function nW(t2) {
    for (var e2 = [], n2 = t2.length, i2 = 0; i2 < n2; i2 += 2)
      e2[i2] = t2[n2 - i2 - 2], e2[i2 + 1] = t2[n2 - i2 - 1];
    return e2;
  }
  function iW(t2) {
    return t2.__isCombineMorphing;
  }
  var rW = "__mOriginal_";
  function oW(t2, e2, n2) {
    var i2 = rW + e2, r2 = t2[i2] || t2[e2];
    t2[i2] || (t2[i2] = t2[e2]);
    var o2 = n2.replace, a2 = n2.after, s2 = n2.before;
    t2[e2] = function() {
      var t3, e3 = arguments;
      return s2 && s2.apply(this, e3), t3 = o2 ? o2.apply(this, e3) : r2.apply(this, e3), a2 && a2.apply(this, e3), t3;
    };
  }
  function aW(t2, e2) {
    var n2 = rW + e2;
    t2[n2] && (t2[e2] = t2[n2], t2[n2] = null);
  }
  function sW(t2, e2) {
    for (var n2 = 0; n2 < t2.length; n2++)
      for (var i2 = t2[n2], r2 = 0; r2 < i2.length; ) {
        var o2 = i2[r2], a2 = i2[r2 + 1];
        i2[r2++] = e2[0] * o2 + e2[2] * a2 + e2[4], i2[r2++] = e2[1] * o2 + e2[3] * a2 + e2[5];
      }
  }
  function lW(t2, e2) {
    var n2 = t2.getUpdatedPathProxy(), i2 = e2.getUpdatedPathProxy(), r2 = function(t3, e3) {
      for (var n3, i3, r3, o3 = [], a3 = [], s3 = 0; s3 < Math.max(t3.length, e3.length); s3++) {
        var l3 = t3[s3], u3 = e3[s3], h3 = void 0, c2 = void 0;
        l3 ? u3 ? (i3 = h3 = (n3 = JG(l3, u3))[0], r3 = c2 = n3[1]) : (c2 = QG(r3 || l3, l3), h3 = l3) : (h3 = QG(i3 || u3, u3), c2 = u3), o3.push(h3), a3.push(c2);
      }
      return [o3, a3];
    }(FG(n2), FG(i2)), o2 = r2[0], a2 = r2[1], s2 = t2.getComputedTransform(), l2 = e2.getComputedTransform();
    s2 && sW(o2, s2), l2 && sW(a2, l2), oW(e2, "updateTransform", { replace: function() {
      this.transform = null;
    } }), e2.transform = null;
    var u2 = function(t3, e3, n3, i3) {
      for (var r3, o3 = [], a3 = 0; a3 < t3.length; a3++) {
        var s3 = t3[a3], l3 = e3[a3], u3 = tW(s3), h3 = tW(l3);
        null == r3 && (r3 = u3[2] < 0 != h3[2] < 0);
        var c2 = [], p2 = [], d2 = 0, f2 = 1 / 0, g2 = [], y2 = s3.length;
        r3 && (s3 = nW(s3));
        for (var v2 = 6 * eW(s3, l3, u3, h3), m2 = y2 - 2, x2 = 0; x2 < m2; x2 += 2) {
          var _2 = (v2 + x2) % m2 + 2;
          c2[x2 + 2] = s3[_2] - u3[0], c2[x2 + 3] = s3[_2 + 1] - u3[1];
        }
        if (c2[0] = s3[v2] - u3[0], c2[1] = s3[v2 + 1] - u3[1], n3 > 0)
          for (var b2 = i3 / n3, w2 = -i3 / 2; w2 <= i3 / 2; w2 += b2) {
            var S2 = Math.sin(w2), M2 = Math.cos(w2), I2 = 0;
            for (x2 = 0; x2 < s3.length; x2 += 2) {
              var T2 = c2[x2], C2 = c2[x2 + 1], D2 = l3[x2] - h3[0], A2 = l3[x2 + 1] - h3[1], k2 = D2 * M2 - A2 * S2, L2 = D2 * S2 + A2 * M2;
              g2[x2] = k2, g2[x2 + 1] = L2;
              var P2 = k2 - T2, O2 = L2 - C2;
              I2 += P2 * P2 + O2 * O2;
            }
            if (I2 < f2) {
              f2 = I2, d2 = w2;
              for (var R2 = 0; R2 < g2.length; R2++)
                p2[R2] = g2[R2];
            }
          }
        else
          for (var N2 = 0; N2 < y2; N2 += 2)
            p2[N2] = l3[N2] - h3[0], p2[N2 + 1] = l3[N2 + 1] - h3[1];
        o3.push({ from: c2, to: p2, fromCp: u3, toCp: h3, rotation: -d2 });
      }
      return o3;
    }(o2, a2, 10, Math.PI), h2 = [];
    oW(e2, "buildPath", { replace: function(t3) {
      for (var n3 = e2.__morphT, i3 = 1 - n3, r3 = [], o3 = 0; o3 < u2.length; o3++) {
        var a3 = u2[o3], s3 = a3.from, l3 = a3.to, c2 = a3.rotation * n3, p2 = a3.fromCp, d2 = a3.toCp, f2 = Math.sin(c2), g2 = Math.cos(c2);
        Ft(r3, p2, d2, n3);
        for (var y2 = 0; y2 < s3.length; y2 += 2) {
          var v2 = s3[y2], m2 = s3[y2 + 1], x2 = v2 * i3 + (S2 = l3[y2]) * n3, _2 = m2 * i3 + (M2 = l3[y2 + 1]) * n3;
          h2[y2] = x2 * g2 - _2 * f2 + r3[0], h2[y2 + 1] = x2 * f2 + _2 * g2 + r3[1];
        }
        var b2 = h2[0], w2 = h2[1];
        t3.moveTo(b2, w2);
        for (y2 = 2; y2 < s3.length; ) {
          var S2 = h2[y2++], M2 = h2[y2++], I2 = h2[y2++], T2 = h2[y2++], C2 = h2[y2++], D2 = h2[y2++];
          b2 === S2 && w2 === M2 && I2 === C2 && T2 === D2 ? t3.lineTo(C2, D2) : t3.bezierCurveTo(S2, M2, I2, T2, C2, D2), b2 = C2, w2 = D2;
        }
      }
    } });
  }
  function uW(t2, e2, n2) {
    if (!t2 || !e2)
      return e2;
    var i2 = n2.done, r2 = n2.during;
    return lW(t2, e2), e2.__morphT = 0, e2.animateTo({ __morphT: 1 }, A({ during: function(t3) {
      e2.dirtyShape(), r2 && r2(t3);
    }, done: function() {
      aW(e2, "buildPath"), aW(e2, "updateTransform"), e2.__morphT = -1, e2.createPathProxy(), e2.dirtyShape(), i2 && i2();
    } }, n2)), e2;
  }
  function hW(t2, e2, n2, i2, r2, o2) {
    t2 = r2 === n2 ? 0 : Math.round(32767 * (t2 - n2) / (r2 - n2)), e2 = o2 === i2 ? 0 : Math.round(32767 * (e2 - i2) / (o2 - i2));
    for (var a2, s2 = 0, l2 = 32768; l2 > 0; l2 /= 2) {
      var u2 = 0, h2 = 0;
      (t2 & l2) > 0 && (u2 = 1), (e2 & l2) > 0 && (h2 = 1), s2 += l2 * l2 * (3 * u2 ^ h2), 0 === h2 && (1 === u2 && (t2 = l2 - 1 - t2, e2 = l2 - 1 - e2), a2 = t2, t2 = e2, e2 = a2);
    }
    return s2;
  }
  function cW(t2) {
    var e2 = 1 / 0, n2 = 1 / 0, i2 = -1 / 0, r2 = -1 / 0, o2 = E(t2, function(t3) {
      var o3 = t3.getBoundingRect(), a2 = t3.getComputedTransform(), s2 = o3.x + o3.width / 2 + (a2 ? a2[4] : 0), l2 = o3.y + o3.height / 2 + (a2 ? a2[5] : 0);
      return e2 = Math.min(s2, e2), n2 = Math.min(l2, n2), i2 = Math.max(s2, i2), r2 = Math.max(l2, r2), [s2, l2];
    });
    return E(o2, function(o3, a2) {
      return { cp: o3, z: hW(o3[0], o3[1], e2, n2, i2, r2), path: t2[a2] };
    }).sort(function(t3, e3) {
      return t3.z - e3.z;
    }).map(function(t3) {
      return t3.path;
    });
  }
  function pW(t2) {
    return $G(t2.path, t2.count);
  }
  function dW(t2) {
    return H(t2[0]);
  }
  function fW(t2, e2) {
    for (var n2 = [], i2 = t2.length, r2 = 0; r2 < i2; r2++)
      n2.push({ one: t2[r2], many: [] });
    for (r2 = 0; r2 < e2.length; r2++) {
      var o2 = e2[r2].length, a2 = void 0;
      for (a2 = 0; a2 < o2; a2++)
        n2[a2 % i2].many.push(e2[r2][a2]);
    }
    var s2 = 0;
    for (r2 = i2 - 1; r2 >= 0; r2--)
      if (!n2[r2].many.length) {
        var l2 = n2[s2].many;
        if (l2.length <= 1) {
          if (!s2)
            return n2;
          s2 = 0;
        }
        o2 = l2.length;
        var u2 = Math.ceil(o2 / 2);
        n2[r2].many = l2.slice(u2, o2), n2[s2].many = l2.slice(0, u2), s2++;
      }
    return n2;
  }
  var gW = { clone: function(t2) {
    for (var e2 = [], n2 = 1 - Math.pow(1 - t2.path.style.opacity, 1 / t2.count), i2 = 0; i2 < t2.count; i2++) {
      var r2 = vu(t2.path);
      r2.setStyle("opacity", n2), e2.push(r2);
    }
    return e2;
  }, split: null };
  function yW(t2, e2, n2, i2, r2, o2) {
    if (t2.length && e2.length) {
      var a2 = ch("update", i2, r2);
      if (a2 && a2.duration > 0) {
        var s2, l2, u2 = i2.getModel("universalTransition").get("delay"), h2 = Object.assign({ setToFinal: true }, a2);
        dW(t2) && (s2 = t2, l2 = e2), dW(e2) && (s2 = e2, l2 = t2);
        for (var c2 = s2 ? s2 === t2 : t2.length > e2.length, p2 = s2 ? fW(l2, s2) : fW(c2 ? e2 : t2, [c2 ? t2 : e2]), d2 = 0, f2 = 0; f2 < p2.length; f2++)
          d2 += p2[f2].many.length;
        var g2 = 0;
        for (f2 = 0; f2 < p2.length; f2++)
          y2(p2[f2], c2, g2, d2), g2 += p2[f2].many.length;
      }
    }
    function y2(t3, e3, i3, r3, a3) {
      var s3 = t3.many, l3 = t3.one;
      if (1 !== s3.length || a3)
        for (var c3 = A({ dividePath: gW[n2], individualDelay: u2 && function(t4, e4, n3, o3) {
          return u2(t4 + i3, r3);
        } }, h2), p3 = e3 ? function(t4, e4, n3) {
          var i4 = [];
          !function t5(e5) {
            for (var n4 = 0; n4 < e5.length; n4++) {
              var r5 = e5[n4];
              iW(r5) ? t5(r5.childrenRef()) : r5 instanceof Ms && i4.push(r5);
            }
          }(t4);
          var r4 = i4.length;
          if (!r4)
            return { fromIndividuals: [], toIndividuals: [], count: 0 };
          var o3 = (n3.dividePath || pW)({ path: e4, count: r4 });
          if (o3.length !== r4)
            return formatAppLog("error", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Invalid morphing: unmatched splitted path"), { fromIndividuals: [], toIndividuals: [], count: 0 };
          i4 = cW(i4), o3 = cW(o3);
          for (var a4 = n3.done, s4 = n3.during, l4 = n3.individualDelay, u3 = new fr(), h3 = 0; h3 < r4; h3++) {
            var c4 = i4[h3], p4 = o3[h3];
            p4.parent = e4, p4.copyTransform(u3), l4 || lW(c4, p4);
          }
          function d4(t5) {
            for (var e5 = 0; e5 < o3.length; e5++)
              o3[e5].addSelfToZr(t5);
          }
          function f4() {
            e4.__isCombineMorphing = false, e4.__morphT = -1, e4.childrenRef = null, aW(e4, "addSelfToZr"), aW(e4, "removeSelfFromZr");
          }
          e4.__isCombineMorphing = true, e4.childrenRef = function() {
            return o3;
          }, oW(e4, "addSelfToZr", { after: function(t5) {
            d4(t5);
          } }), oW(e4, "removeSelfFromZr", { after: function(t5) {
            for (var e5 = 0; e5 < o3.length; e5++)
              o3[e5].removeSelfFromZr(t5);
          } });
          var g4 = o3.length;
          if (l4) {
            var y3 = g4, v3 = function() {
              0 == --y3 && (f4(), a4 && a4());
            };
            for (h3 = 0; h3 < g4; h3++) {
              var m3 = l4 ? A({ delay: (n3.delay || 0) + l4(h3, g4, i4[h3], o3[h3]), done: v3 }, n3) : n3;
              uW(i4[h3], o3[h3], m3);
            }
          } else
            e4.__morphT = 0, e4.animateTo({ __morphT: 1 }, A({ during: function(t5) {
              for (var n4 = 0; n4 < g4; n4++) {
                var i5 = o3[n4];
                i5.__morphT = e4.__morphT, i5.dirtyShape();
              }
              s4 && s4(t5);
            }, done: function() {
              f4();
              for (var e5 = 0; e5 < t4.length; e5++)
                aW(t4[e5], "updateTransform");
              a4 && a4();
            } }, n3));
          return e4.__zr && d4(e4.__zr), { fromIndividuals: i4, toIndividuals: o3, count: g4 };
        }(s3, l3, c3) : function(t4, e4, n3) {
          var i4 = e4.length, r4 = [], o3 = n3.dividePath || pW;
          if (iW(t4)) {
            !function t5(e5) {
              for (var n4 = 0; n4 < e5.length; n4++) {
                var i5 = e5[n4];
                iW(i5) ? t5(i5.childrenRef()) : i5 instanceof Ms && r4.push(i5);
              }
            }(t4.childrenRef());
            var a4 = r4.length;
            if (a4 < i4)
              for (var s4 = 0, l4 = a4; l4 < i4; l4++)
                r4.push(vu(r4[s4++ % a4]));
            r4.length = i4;
          } else {
            r4 = o3({ path: t4, count: i4 });
            var u3 = t4.getComputedTransform();
            for (l4 = 0; l4 < r4.length; l4++)
              r4[l4].setLocalTransform(u3);
            if (r4.length !== i4)
              return formatAppLog("error", "at uni_modules/lime-echart/static/echarts.esm.min.js:45", "Invalid morphing: unmatched splitted path"), { fromIndividuals: [], toIndividuals: [], count: 0 };
          }
          r4 = cW(r4), e4 = cW(e4);
          var h3 = n3.individualDelay;
          for (l4 = 0; l4 < i4; l4++) {
            var c4 = h3 ? A({ delay: (n3.delay || 0) + h3(l4, i4, r4[l4], e4[l4]) }, n3) : n3;
            uW(r4[l4], e4[l4], c4);
          }
          return { fromIndividuals: r4, toIndividuals: e4, count: e4.length };
        }(l3, s3, c3), d3 = p3.fromIndividuals, f3 = p3.toIndividuals, g3 = d3.length, v2 = 0; v2 < g3; v2++) {
          m2 = u2 ? A({ delay: u2(v2, g3) }, h2) : h2;
          o2(d3[v2], f3[v2], e3 ? s3[v2] : t3.one, e3 ? t3.one : s3[v2], m2);
        }
      else {
        var m2, x2 = e3 ? s3[0] : l3, _2 = e3 ? l3 : s3[0];
        if (iW(x2))
          y2({ many: [x2], one: _2 }, true, i3, r3, true);
        else
          uW(x2, _2, m2 = u2 ? A({ delay: u2(i3, r3) }, h2) : h2), o2(x2, _2, x2, _2, m2);
      }
    }
  }
  function vW(t2) {
    if (!t2)
      return [];
    if (H(t2)) {
      for (var e2 = [], n2 = 0; n2 < t2.length; n2++)
        e2.push(vW(t2[n2]));
      return e2;
    }
    var i2 = [];
    return t2.traverse(function(t3) {
      t3 instanceof Ms && !t3.disableMorphing && !t3.invisible && !t3.ignore && i2.push(t3);
    }), i2;
  }
  var mW = Po();
  function xW(t2) {
    var e2 = [];
    return N(t2, function(t3) {
      var n2 = t3.data;
      if (!(n2.count() > 1e4))
        for (var i2 = n2.getIndices(), r2 = function(t4) {
          for (var e3 = t4.dimensions, n3 = 0; n3 < e3.length; n3++) {
            var i3 = t4.getDimensionInfo(e3[n3]);
            if (i3 && 0 === i3.otherDims.itemGroupId)
              return e3[n3];
          }
        }(n2), o2 = 0; o2 < i2.length; o2++)
          e2.push({ dataGroupId: t3.dataGroupId, data: n2, dim: t3.dim || r2, divide: t3.divide, dataIndex: o2 });
    }), e2;
  }
  function _W(t2, e2, n2) {
    t2.traverse(function(t3) {
      t3 instanceof Ms && fh(t3, { style: { opacity: 0 } }, e2, { dataIndex: n2, isFrom: true });
    });
  }
  function bW(t2) {
    if (t2.parent) {
      var e2 = t2.getComputedTransform();
      t2.setLocalTransform(e2), t2.parent.remove(t2);
    }
  }
  function wW(t2) {
    t2.stopAnimation(), t2.isGroup && t2.traverse(function(t3) {
      t3.stopAnimation();
    });
  }
  function SW(t2, e2, n2) {
    var i2 = ch("update", n2, e2);
    i2 && t2.traverse(function(t3) {
      if (t3 instanceof wa) {
        var e3 = function(t4) {
          return hh(t4).oldStyle;
        }(t3);
        e3 && t3.animateFrom({ style: e3 }, i2);
      }
    });
  }
  function MW(t2, e2, n2) {
    var i2 = xW(t2), r2 = xW(e2);
    function o2(t3, e3, n3, i3, r3) {
      (n3 || t3) && e3.animateFrom({ style: n3 && n3 !== t3 ? D(D({}, n3.style), t3.style) : t3.style }, r3);
    }
    function a2(t3) {
      for (var e3 = 0; e3 < t3.length; e3++)
        if (t3[e3].dim)
          return t3[e3].dim;
    }
    var s2 = a2(i2), l2 = a2(r2), u2 = false;
    function h2(t3, e3) {
      return function(n3) {
        var i3 = n3.data, r3 = n3.dataIndex;
        if (e3)
          return i3.getId(r3);
        var o3 = n3.dataGroupId, a3 = t3 ? s2 || l2 : l2 || s2, u3 = a3 && i3.getDimensionInfo(a3), h3 = u3 && u3.ordinalMeta;
        if (u3) {
          var c3 = i3.get(u3.name, r3);
          return h3 && h3.categories[c3] || c3 + "";
        }
        var p3 = i3.getRawDataItem(r3);
        return p3 && p3.groupId ? p3.groupId + "" : o3 || i3.getId(r3);
      };
    }
    var c2 = function(t3, e3) {
      var n3 = t3.length;
      if (n3 !== e3.length)
        return false;
      for (var i3 = 0; i3 < n3; i3++) {
        var r3 = t3[i3], o3 = e3[i3];
        if (r3.data.getId(r3.dataIndex) !== o3.data.getId(o3.dataIndex))
          return false;
      }
      return true;
    }(i2, r2), p2 = {};
    if (!c2)
      for (var d2 = 0; d2 < r2.length; d2++) {
        var f2 = r2[d2], g2 = f2.data.getItemGraphicEl(f2.dataIndex);
        g2 && (p2[g2.id] = true);
      }
    function y2(t3, e3) {
      var n3 = i2[e3], a3 = r2[t3], s3 = a3.data.hostModel, l3 = n3.data.getItemGraphicEl(n3.dataIndex), h3 = a3.data.getItemGraphicEl(a3.dataIndex);
      l3 !== h3 ? l3 && p2[l3.id] || h3 && (wW(h3), l3 ? (wW(l3), bW(l3), u2 = true, yW(vW(l3), vW(h3), a3.divide, s3, t3, o2)) : _W(h3, s3, t3)) : h3 && SW(h3, a3.dataIndex, s3);
    }
    new Zm(i2, r2, h2(true, c2), h2(false, c2), null, "multiple").update(y2).updateManyToOne(function(t3, e3) {
      var n3 = r2[t3], a3 = n3.data, s3 = a3.hostModel, l3 = a3.getItemGraphicEl(n3.dataIndex), h3 = V(E(e3, function(t4) {
        return i2[t4].data.getItemGraphicEl(i2[t4].dataIndex);
      }), function(t4) {
        return t4 && t4 !== l3 && !p2[t4.id];
      });
      l3 && (wW(l3), h3.length ? (N(h3, function(t4) {
        wW(t4), bW(t4);
      }), u2 = true, yW(vW(h3), vW(l3), n3.divide, s3, t3, o2)) : _W(l3, s3, n3.dataIndex));
    }).updateOneToMany(function(t3, e3) {
      var n3 = i2[e3], a3 = n3.data.getItemGraphicEl(n3.dataIndex);
      if (!a3 || !p2[a3.id]) {
        var s3 = V(E(t3, function(t4) {
          return r2[t4].data.getItemGraphicEl(r2[t4].dataIndex);
        }), function(t4) {
          return t4 && t4 !== a3;
        }), l3 = r2[t3[0]].data.hostModel;
        s3.length && (N(s3, function(t4) {
          return wW(t4);
        }), a3 ? (wW(a3), bW(a3), u2 = true, yW(vW(a3), vW(s3), n3.divide, l3, t3[0], o2)) : N(s3, function(e4) {
          return _W(e4, l3, t3[0]);
        }));
      }
    }).updateManyToMany(function(t3, e3) {
      new Zm(e3, t3, function(t4) {
        return i2[t4].data.getId(i2[t4].dataIndex);
      }, function(t4) {
        return r2[t4].data.getId(r2[t4].dataIndex);
      }).update(function(n3, i3) {
        y2(t3[n3], e3[i3]);
      }).execute();
    }).execute(), u2 && N(e2, function(t3) {
      var e3 = t3.data.hostModel, i3 = e3 && n2.getViewOfSeriesModel(e3), r3 = ch("update", e3, 0);
      i3 && e3.isAnimationEnabled() && r3 && r3.duration > 0 && i3.group.traverse(function(t4) {
        t4 instanceof Ms && !t4.animators.length && t4.animateFrom({ style: { opacity: 0 } }, r3);
      });
    });
  }
  function IW(t2) {
    var e2 = t2.getModel("universalTransition").get("seriesKey");
    return e2 || t2.id;
  }
  function TW(t2) {
    return H(t2) ? t2.sort().join(",") : t2;
  }
  function CW(t2) {
    if (t2.hostModel)
      return t2.hostModel.getModel("universalTransition").get("divideShape");
  }
  function DW(t2, e2) {
    for (var n2 = 0; n2 < t2.length; n2++) {
      if (null != e2.seriesIndex && e2.seriesIndex === t2[n2].seriesIndex || null != e2.seriesId && e2.seriesId === t2[n2].id)
        return n2;
    }
  }
  Ym([function(t2) {
    t2.registerPainter("canvas", fS);
  }]), Ym([function(t2) {
    t2.registerPainter("svg", sS);
  }]), Ym([function(t2) {
    t2.registerChartView(jS), t2.registerSeriesModel(gS), t2.registerLayout(qS("line", true)), t2.registerVisual({ seriesType: "line", reset: function(t3) {
      var e2 = t3.getData(), n2 = t3.getModel("lineStyle").getLineStyle();
      n2 && !n2.stroke && (n2.stroke = e2.getVisual("style").fill), e2.setVisual("legendLineStyle", n2);
    } }), t2.registerProcessor(t2.PRIORITY.PROCESSOR.STATISTIC, JS("line"));
  }, function(t2) {
    t2.registerChartView(lM), t2.registerSeriesModel(tM), t2.registerLayout(t2.PRIORITY.VISUAL.LAYOUT, W(Jx, "bar")), t2.registerLayout(t2.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, Qx("bar")), t2.registerProcessor(t2.PRIORITY.PROCESSOR.STATISTIC, JS("bar")), t2.registerAction({ type: "changeAxisOrder", event: "changeAxisOrder", update: "update" }, function(t3, e2) {
      var n2 = t3.componentType || "series";
      e2.eachComponent({ mainType: n2, query: t3 }, function(e3) {
        t3.sortInfo && e3.axis.setCategorySortInfo(t3.sortInfo);
      });
    });
  }, function(t2) {
    t2.registerChartView(EM), t2.registerSeriesModel(FM), Cy("pie", t2.registerAction), t2.registerLayout(W(DM, "pie")), t2.registerProcessor(AM("pie")), t2.registerProcessor(function(t3) {
      return { seriesType: t3, reset: function(t4, e2) {
        var n2 = t4.getData();
        n2.filterSelf(function(t5) {
          var e3 = n2.mapDimension("value"), i2 = n2.get(e3, t5);
          return !(Z(i2) && !isNaN(i2) && i2 < 0);
        });
      } };
    }("pie"));
  }, function(t2) {
    Ym(GI), t2.registerSeriesModel(GM), t2.registerChartView(XM), t2.registerLayout(qS("scatter"));
  }, function(t2) {
    Ym(eT), t2.registerChartView(UI), t2.registerSeriesModel(ZI), t2.registerLayout(WI), t2.registerProcessor(AM("radar")), t2.registerPreprocessor(XI);
  }, function(t2) {
    Ym(kC), t2.registerChartView(cC), t2.registerSeriesModel(pC), t2.registerLayout(fC), t2.registerProcessor(t2.PRIORITY.PROCESSOR.STATISTIC, dC), Cy("map", t2.registerAction);
  }, function(t2) {
    t2.registerChartView(WC), t2.registerSeriesModel(hD), t2.registerLayout(pD), t2.registerVisual(dD), function(t3) {
      t3.registerAction({ type: "treeExpandAndCollapse", event: "treeExpandAndCollapse", update: "update" }, function(t4, e2) {
        e2.eachComponent({ mainType: "series", subType: "tree", query: t4 }, function(e3) {
          var n2 = t4.dataIndex, i2 = e3.getData().tree.getNodeByDataIndex(n2);
          i2.isExpand = !i2.isExpand;
        });
      }), t3.registerAction({ type: "treeRoam", event: "treeRoam", update: "none" }, function(t4, e2, n2) {
        e2.eachComponent({ mainType: "series", subType: "tree", query: t4 }, function(e3) {
          var i2 = CC(e3.coordinateSystem, t4, void 0, n2);
          e3.setCenter && e3.setCenter(i2.center), e3.setZoom && e3.setZoom(i2.zoom);
        });
      });
    }(t2);
  }, function(t2) {
    t2.registerSeriesModel(yD), t2.registerChartView(AD), t2.registerVisual(UD), t2.registerLayout(oA), function(t3) {
      for (var e2 = 0; e2 < fD.length; e2++)
        t3.registerAction({ type: fD[e2], update: "updateView" }, _t);
      t3.registerAction({ type: "treemapRootToNode", update: "updateView" }, function(t4, e3) {
        e3.eachComponent({ mainType: "series", subType: "treemap", query: t4 }, function(e4, n2) {
          var i2 = aD(t4, ["treemapZoomToNode", "treemapRootToNode"], e4);
          if (i2) {
            var r2 = e4.getViewRoot();
            r2 && (t4.direction = lD(r2, i2.node) ? "rollUp" : "drillDown"), e4.resetViewRoot(i2.node);
          }
        });
      });
    }(t2);
  }, function(t2) {
    t2.registerChartView(ak), t2.registerSeriesModel(dk), t2.registerProcessor(cA), t2.registerVisual(pA), t2.registerVisual(fA), t2.registerLayout(MA), t2.registerLayout(t2.PRIORITY.VISUAL.POST_CHART_LAYOUT, PA), t2.registerLayout(RA), t2.registerCoordinateSystem("graphView", { dimensions: yC.dimensions, create: NA }), t2.registerAction({ type: "focusNodeAdjacency", event: "focusNodeAdjacency", update: "series:focusNodeAdjacency" }, _t), t2.registerAction({ type: "unfocusNodeAdjacency", event: "unfocusNodeAdjacency", update: "series:unfocusNodeAdjacency" }, _t), t2.registerAction(fk, function(t3, e2, n2) {
      e2.eachComponent({ mainType: "series", query: t3 }, function(e3) {
        var i2 = CC(e3.coordinateSystem, t3, void 0, n2);
        e3.setCenter && e3.setCenter(i2.center), e3.setZoom && e3.setZoom(i2.zoom);
      });
    });
  }, function(t2) {
    t2.registerChartView(mk), t2.registerSeriesModel(xk);
  }, function(t2) {
    t2.registerChartView(wk), t2.registerSeriesModel(Sk), t2.registerLayout(Mk), t2.registerProcessor(AM("funnel"));
  }, function(t2) {
    Ym(KL), t2.registerChartView(Ik), t2.registerSeriesModel(kk), t2.registerVisual(t2.PRIORITY.VISUAL.BRUSH, Ok);
  }, function(t2) {
    t2.registerChartView(QL), t2.registerSeriesModel(eP), t2.registerLayout(nP), t2.registerVisual(fP), t2.registerAction({ type: "dragNode", event: "dragnode", update: "update" }, function(t3, e2) {
      e2.eachComponent({ mainType: "series", subType: "sankey", query: t3 }, function(e3) {
        e3.setNodePosition(t3.dataIndex, [t3.localX, t3.localY]);
      });
    });
  }, function(t2) {
    t2.registerSeriesModel(yP), t2.registerChartView(vP), t2.registerLayout(MP), t2.registerTransform(IP);
  }, function(t2) {
    t2.registerChartView(CP), t2.registerSeriesModel(VP), t2.registerPreprocessor(BP), t2.registerVisual(XP), t2.registerLayout(UP);
  }, function(t2) {
    t2.registerChartView(KP), t2.registerSeriesModel($P), t2.registerLayout(qS("effectScatter"));
  }, function(t2) {
    t2.registerChartView(oO), t2.registerSeriesModel(uO), t2.registerLayout(rO), t2.registerVisual(cO);
  }, function(t2) {
    t2.registerChartView(fO), t2.registerSeriesModel(gO);
  }, function(t2) {
    t2.registerChartView(xO), t2.registerSeriesModel(zO), t2.registerLayout(t2.PRIORITY.VISUAL.LAYOUT, W(Jx, "pictorialBar")), t2.registerLayout(t2.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, Qx("pictorialBar"));
  }, function(t2) {
    t2.registerChartView(VO), t2.registerSeriesModel(BO), t2.registerLayout(FO), t2.registerProcessor(AM("themeRiver"));
  }, function(t2) {
    t2.registerChartView(XO), t2.registerSeriesModel(UO), t2.registerLayout(W(qO, "sunburst")), t2.registerProcessor(W(AM, "sunburst")), t2.registerVisual($O), function(t3) {
      t3.registerAction({ type: HO, update: "updateView" }, function(t4, e2) {
        e2.eachComponent({ mainType: "series", subType: "sunburst", query: t4 }, function(e3, n2) {
          var i2 = aD(t4, [HO], e3);
          if (i2) {
            var r2 = e3.getViewRoot();
            r2 && (t4.direction = lD(r2, i2.node) ? "rollUp" : "drillDown"), e3.resetViewRoot(i2.node);
          }
        });
      }), t3.registerAction({ type: YO, update: "none" }, function(t4, e2, n2) {
        t4 = D({}, t4), e2.eachComponent({ mainType: "series", subType: "sunburst", query: t4 }, function(e3) {
          var n3 = aD(t4, [YO], e3);
          n3 && (t4.dataIndex = n3.node.dataIndex);
        }), n2.dispatchAction(D(t4, { type: "highlight" }));
      }), t3.registerAction({ type: "sunburstUnhighlight", update: "updateView" }, function(t4, e2, n2) {
        t4 = D({}, t4), n2.dispatchAction(D(t4, { type: "downplay" }));
      });
    }(t2);
  }, function(t2) {
    t2.registerChartView(WR), t2.registerSeriesModel(eR);
  }]), Ym(function(t2) {
    Ym(GI), Ym(HN);
  }), Ym(function(t2) {
    Ym(HN), AI.registerAxisPointerClass("PolarAxisPointer", YN), t2.registerCoordinateSystem("polar", rE), t2.registerComponentModel(UN), t2.registerComponentView(_E), QM(t2, "angle", jN, mE), QM(t2, "radius", qN, xE), t2.registerComponentView(uE), t2.registerComponentView(dE), t2.registerLayout(W(vE, "bar"));
  }), Ym(kC), Ym(function(t2) {
    Ym(HN), AI.registerAxisPointerClass("SingleAxisPointer", RE), t2.registerComponentView(VE), t2.registerComponentView(ME), t2.registerComponentModel(TE), QM(t2, "single", TE, TE.defaultOption), t2.registerCoordinateSystem("single", LE);
  }), Ym(KL), Ym(function(t2) {
    t2.registerComponentModel(BE), t2.registerComponentView(GE), t2.registerCoordinateSystem("calendar", HE);
  }), Ym(function(t2) {
    t2.registerComponentModel(qE), t2.registerComponentView(JE), t2.registerPreprocessor(function(t3) {
      var e2 = t3.graphic;
      H(e2) ? e2[0] && e2[0].elements ? t3.graphic = [t3.graphic[0]] : t3.graphic = [{ elements: e2 }] : e2 && !e2.elements && (t3.graphic = [{ elements: [e2] }]);
    });
  }), Ym(function(t2) {
    t2.registerComponentModel(Iz), t2.registerComponentView(Cz), Sz("saveAsImage", Dz), Sz("magicType", Lz), Sz("dataView", Vz), Sz("dataZoom", aV), Sz("restore", Hz), Ym(_z);
  }), Ym(function(t2) {
    Ym(HN), t2.registerComponentModel(uV), t2.registerComponentView(TV), t2.registerAction({ type: "showTip", event: "showTip", update: "tooltip:manuallyShowTip" }, _t), t2.registerAction({ type: "hideTip", event: "hideTip", update: "tooltip:manuallyHideTip" }, _t);
  }), Ym(HN), Ym(function(t2) {
    t2.registerComponentView(jV), t2.registerComponentModel(qV), t2.registerPreprocessor(LV), t2.registerVisual(t2.PRIORITY.VISUAL.BRUSH, HV), t2.registerAction({ type: "brush", event: "brush", update: "updateVisual" }, function(t3, e2) {
      e2.eachComponent({ mainType: "brush", query: t3 }, function(e3) {
        e3.setAreas(t3.areas);
      });
    }), t2.registerAction({ type: "brushSelect", event: "brushSelected", update: "none" }, _t), t2.registerAction({ type: "brushEnd", event: "brushEnd", update: "none" }, _t), Sz("brush", JV);
  }), Ym(function(t2) {
    t2.registerComponentModel(QV), t2.registerComponentView(tB);
  }), Ym(function(t2) {
    t2.registerComponentModel(nB), t2.registerComponentView(sB), t2.registerSubTypeDefaulter("timeline", function() {
      return "slider";
    }), function(t3) {
      t3.registerAction({ type: "timelineChange", event: "timelineChanged", update: "prepareAndUpdate" }, function(t4, e2, n2) {
        var i2 = e2.getComponent("timeline");
        return i2 && null != t4.currentIndex && (i2.setCurrentIndex(t4.currentIndex), !i2.get("loop", true) && i2.isIndexMax() && i2.getPlayState() && (i2.setPlayState(false), n2.dispatchAction({ type: "timelinePlayChange", playState: false, from: t4.from }))), e2.resetOption("timeline", { replaceMerge: i2.get("replaceMerge", true) }), A({ currentIndex: i2.option.currentIndex }, t4);
      }), t3.registerAction({ type: "timelinePlayChange", event: "timelinePlayChanged", update: "update" }, function(t4, e2) {
        var n2 = e2.getComponent("timeline");
        n2 && null != t4.playState && n2.setPlayState(t4.playState);
      });
    }(t2), t2.registerPreprocessor(hB);
  }), Ym(function(t2) {
    t2.registerComponentModel(vB), t2.registerComponentView(AB), t2.registerPreprocessor(function(t3) {
      dB(t3.series, "markPoint") && (t3.markPoint = t3.markPoint || {});
    });
  }), Ym(function(t2) {
    t2.registerComponentModel(kB), t2.registerComponentView(zB), t2.registerPreprocessor(function(t3) {
      dB(t3.series, "markLine") && (t3.markLine = t3.markLine || {});
    });
  }), Ym(function(t2) {
    t2.registerComponentModel(VB), t2.registerComponentView(UB), t2.registerPreprocessor(function(t3) {
      dB(t3.series, "markArea") && (t3.markArea = t3.markArea || {});
    });
  }), Ym(function(t2) {
    Ym(rF), Ym(cF);
  }), Ym(function(t2) {
    Ym(SF), Ym(PF);
  }), Ym(SF), Ym(PF), Ym(function(t2) {
    Ym(pG), Ym(vG);
  }), Ym(pG), Ym(vG), Ym(function(t2) {
    t2.registerPreprocessor(wG), t2.registerVisual(t2.PRIORITY.VISUAL.ARIA, bG);
  }), Ym(function(t2) {
    t2.registerTransform(RG), t2.registerTransform(NG);
  }), Ym(function(t2) {
    t2.registerComponentModel(EG), t2.registerComponentView(zG);
  }), Ym(function(t2) {
    t2.registerUpdateLifecycle("series:beforeupdate", function(t3, e2, n2) {
      N(_o(n2.seriesTransition), function(t4) {
        N(_o(t4.to), function(t5) {
          for (var e3 = n2.updatedSeries, i2 = 0; i2 < e3.length; i2++)
            (null != t5.seriesIndex && t5.seriesIndex === e3[i2].seriesIndex || null != t5.seriesId && t5.seriesId === e3[i2].id) && (e3[i2][yg] = true);
        });
      });
    }), t2.registerUpdateLifecycle("series:transition", function(t3, e2, n2) {
      var i2 = mW(e2);
      if (i2.oldSeries && n2.updatedSeries && n2.optionChanged) {
        var r2 = n2.seriesTransition;
        if (r2)
          N(_o(r2), function(t4) {
            !function(t5, e3, n3, i3) {
              var r3 = [], o3 = [];
              N(_o(t5.from), function(t6) {
                var n4 = DW(e3.oldSeries, t6);
                n4 >= 0 && r3.push({ dataGroupId: e3.oldDataGroupIds[n4], data: e3.oldData[n4], divide: CW(e3.oldData[n4]), dim: t6.dimension });
              }), N(_o(t5.to), function(t6) {
                var i4 = DW(n3.updatedSeries, t6);
                if (i4 >= 0) {
                  var r4 = n3.updatedSeries[i4].getData();
                  o3.push({ dataGroupId: e3.oldDataGroupIds[i4], data: r4, divide: CW(r4), dim: t6.dimension });
                }
              }), r3.length > 0 && o3.length > 0 && MW(r3, o3, i3);
            }(t4, i2, n2, e2);
          });
        else {
          var o2 = function(t4, e3) {
            var n3 = gt(), i3 = gt(), r3 = gt();
            return N(t4.oldSeries, function(e4, n4) {
              var o3 = t4.oldDataGroupIds[n4], a3 = t4.oldData[n4], s3 = IW(e4), l3 = TW(s3);
              i3.set(l3, { dataGroupId: o3, data: a3 }), H(s3) && N(s3, function(t5) {
                r3.set(t5, { key: l3, dataGroupId: o3, data: a3 });
              });
            }), N(e3.updatedSeries, function(t5) {
              if (t5.isUniversalTransitionEnabled() && t5.isAnimationEnabled()) {
                var e4 = t5.get("dataGroupId"), o3 = t5.getData(), a3 = IW(t5), s3 = TW(a3), l3 = i3.get(s3);
                if (l3)
                  n3.set(s3, { oldSeries: [{ dataGroupId: l3.dataGroupId, divide: CW(l3.data), data: l3.data }], newSeries: [{ dataGroupId: e4, divide: CW(o3), data: o3 }] });
                else if (H(a3)) {
                  var u3 = [];
                  N(a3, function(t6) {
                    var e5 = i3.get(t6);
                    e5.data && u3.push({ dataGroupId: e5.dataGroupId, divide: CW(e5.data), data: e5.data });
                  }), u3.length && n3.set(s3, { oldSeries: u3, newSeries: [{ dataGroupId: e4, data: o3, divide: CW(o3) }] });
                } else {
                  var h3 = r3.get(a3);
                  if (h3) {
                    var c3 = n3.get(h3.key);
                    c3 || (c3 = { oldSeries: [{ dataGroupId: h3.dataGroupId, data: h3.data, divide: CW(h3.data) }], newSeries: [] }, n3.set(h3.key, c3)), c3.newSeries.push({ dataGroupId: e4, data: o3, divide: CW(o3) });
                  }
                }
              }
            }), n3;
          }(i2, n2);
          N(o2.keys(), function(t4) {
            var n3 = o2.get(t4);
            MW(n3.oldSeries, n3.newSeries, e2);
          });
        }
        N(n2.updatedSeries, function(t4) {
          t4[yg] && (t4[yg] = false);
        });
      }
      for (var a2 = t3.getSeries(), s2 = i2.oldSeries = [], l2 = i2.oldDataGroupIds = [], u2 = i2.oldData = [], h2 = 0; h2 < a2.length; h2++) {
        var c2 = a2[h2].getData();
        c2.count() < 1e4 && (s2.push(a2[h2]), l2.push(a2[h2].get("dataGroupId")), u2.push(c2));
      }
    });
  }), Ym(function(t2) {
    t2.registerUpdateLifecycle("series:beforeupdate", function(t3, e2, n2) {
      var i2 = tw(e2).labelManager;
      i2 || (i2 = tw(e2).labelManager = new Qb()), i2.clearLabels();
    }), t2.registerUpdateLifecycle("series:layoutlabels", function(t3, e2, n2) {
      var i2 = tw(e2).labelManager;
      n2.updatedSeries.forEach(function(t4) {
        i2.addLabelsOfSeries(e2.getViewOfSeriesModel(t4));
      }), i2.updateLayoutConfig(e2), i2.layout(e2), i2.processLabelsOverall();
    });
  });
  var echarts = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
    __proto__: null,
    Axis: cb,
    ChartView: Ag,
    ComponentModel: Op,
    ComponentView: Ig,
    List: vx,
    Model: Sc,
    PRIORITY: Iv,
    SeriesModel: vg,
    color: oi,
    connect: vm,
    dataTool: Gm,
    dependencies: wv,
    disConnect: xm,
    disconnect: mm,
    dispose: _m,
    env: i,
    extendChartView: yb,
    extendComponentModel: db,
    extendComponentView: fb,
    extendSeriesModel: gb,
    format: Q_,
    getCoordinateSystemDimensions: Lm,
    getInstanceByDom: bm,
    getInstanceById: wm,
    getMap: Bm,
    graphic: J_,
    helper: E_,
    init: ym,
    innerDrawElementOnCanvas: uv,
    matrix: Te,
    number: K_,
    parseGeoJSON: q_,
    parseGeoJson: q_,
    registerAction: Am,
    registerCoordinateSystem: km,
    registerLayout: Pm,
    registerLoading: Em,
    registerLocale: Oc,
    registerMap: Vm,
    registerPostInit: Tm,
    registerPostUpdate: Cm,
    registerPreprocessor: Mm,
    registerProcessor: Im,
    registerTheme: Sm,
    registerTransform: Fm,
    registerUpdateLifecycle: Dm,
    registerVisual: Om,
    setCanvasCreator: zm,
    setPlatformAPI: h,
    throttle: Vg,
    time: $_,
    use: Ym,
    util: tb,
    vector: Yt,
    version: bv,
    zrUtil: wt,
    zrender: Wr
  }, Symbol.toStringTag, { value: "Module" }));
  var _style_0$6 = { "ttt": { "": { "width": 300, "height": 340, "paddingLeft": 20 } } };
  var _sfc_main$6 = (0, import_vue2.defineComponent)({
    name: "RecentFlow",
    data() {
      return {
        options: [],
        optionIndex: 0,
        timer: {
          chart: null,
          update: null
        }
      };
    },
    props: {
      data: {
        type: Object,
        // TODO: 改为必须, 删掉default
        // require: true,
        default: () => ({
          y_range: ["8\u70B9", "9\u70B9", "10\u70B9", "11\u70B9"],
          yesterday: [10, 11, 15, 30],
          today: [20, 5, 35, 15]
        })
      },
      title: {
        type: String,
        require: true,
        default: "\u8FD1\u671F\u5BA2\u6D41"
      }
    },
    watch: {
      data(newVal) {
        if (newVal != null) {
          this.options = [this.makeOption("pictorialBar"), this.makeOption("bar")];
          this.$refs.chart.setOption(this.options[this.optionIndex]);
        }
      }
    },
    methods: {
      init() {
        return __async(this, null, function* () {
          const chart = yield this.$refs.chart.init(echarts);
          chart.resize({
            width: 375,
            height: 475
          });
          this.options = [this.makeOption("pictorialBar"), this.makeOption("bar")];
          chart.setOption(this.options[this.optionIndex]);
          this.timer.chart = setInterval(() => {
            this.optionIndex = (this.optionIndex + 1) % this.options.length;
            chart.setOption(this.options[this.optionIndex]);
          }, 1e3 * 10);
        });
      },
      makeOption(type) {
        return {
          title: {
            text: this.title,
            textStyle: {
              color: "#00bfff"
            },
            left: 15
          },
          legend: {
            data: ["\u6628\u65E5", "\u4ECA\u65E5"],
            textStyle: {
              fontSize: 12,
              color: "#fff"
            },
            top: 0,
            left: 100
          },
          tooltip: {
            trigger: "axis",
            axisPointer: {
              type: "shadow"
            }
          },
          grid: {
            containLabel: true,
            left: 0,
            top: 22
          },
          yAxis: {
            data: this.data.y_range,
            inverse: true,
            axisLine: {
              show: false
            },
            axisTick: {
              show: false
            },
            axisLabel: {
              color: "#fff",
              margin: 10,
              fontSize: 14
            },
            axisPointer: {
              label: {
                show: true,
                margin: 0,
                fontSize: 12
              }
            }
          },
          xAxis: {
            splitLine: {
              show: false
            },
            axisLabel: {
              show: false
            },
            axisTick: {
              show: false
            },
            axisLine: {
              show: false
            },
            textStyle: {
              color: "#fff"
            }
          },
          animationDurationUpdate: 500,
          series: [{
            name: "\u6628\u65E5",
            id: "bar1",
            type,
            label: this.labelSetting,
            symbolRepeat: true,
            symbolSize: ["80%", "60%"],
            barCategoryGap: "40%",
            universalTransition: {
              enabled: true,
              delay: function(idx, total) {
                return idx / total * 1e3;
              }
            },
            data: this.data.yesterday,
            textStyle: {
              color: "#fff"
            }
          }, {
            name: "\u4ECA\u65E5",
            id: "bar2",
            type,
            barGap: "10%",
            label: this.labelSetting,
            symbolRepeat: true,
            symbolSize: ["80%", "60%"],
            universalTransition: {
              enabled: true,
              delay: function(idx, total) {
                return idx / total * 1e3;
              }
            },
            data: this.data.today,
            textStyle: {
              color: "#fff"
            }
          }]
        };
      }
    },
    unmounted() {
      if (this.timer.chart !== null) {
        clearInterval(this.timer.chart);
      }
      if (this.timer.update !== null) {
        clearInterval(this.timer.update);
      }
    }
  });
  function _sfc_render$4(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_l_echart = resolveEasycom((0, import_vue2.resolveDynamicComponent)("l-echart"), __easycom_0);
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
      class: "ttt",
      renderWhole: true
    }, [
      (0, import_vue2.createVNode)(_component_l_echart, {
        ref: "chart",
        hybrid: true,
        onFinished: _ctx.init
      }, null, 8, ["onFinished"])
    ]);
  }
  var RecentFlow = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["render", _sfc_render$4], ["styles", [_style_0$6]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/RecentFlow.nvue"]]);
  var _style_0$5 = { "contain": { "": { "width": 938, "height": 202 } }, "title": { "": { "textAlign": "center", "fontSize": 28, "fontWeight": "700", "color": "#00bfff" } } };
  var _sfc_main$5 = {
    name: "MinutesFlow",
    props: {
      // 图表数据
      data: {
        type: Object,
        require: true,
        default: () => ({
          x_range: [
            "13:00",
            "13:10",
            "13:20",
            "13:30",
            "13:40",
            "13:50",
            "14:00",
            "14:10",
            "14:20",
            "14:30",
            "14:40",
            "14:50",
            "15:00",
            "15:10",
            "15:20",
            "15:30",
            "15:40",
            "15:50"
          ],
          y_data: [
            150,
            230,
            224,
            218,
            135,
            147,
            260,
            218,
            135,
            147,
            260,
            147,
            260,
            218,
            135,
            147,
            260,
            260
          ]
        })
      },
      title: {
        type: String,
        require: true,
        default: "\u5206\u65F6\u5BA2\u6D41"
      }
    },
    watch: {
      // 更新图表数据
      data(newVal) {
        if (newVal != null) {
          this.option.series.data = newVal.y_data;
          this.option.xAxis.data = newVal.x_range;
          this.$refs.chart.setOption(this.option);
        } else {
          formatAppLog("log", "at component/MinutesFlow.nvue:42", "data \u7A7A");
        }
      }
    },
    methods: {
      init() {
        return __async(this, null, function* () {
          const chart = yield this.$refs.chart.init(echarts);
          chart.setOption(this.option);
        });
      }
    },
    data() {
      return {
        option: {
          //标题
          title: {
            show: false
          },
          grid: {
            top: 10
          },
          xAxis: {
            type: "category",
            boundaryGap: false,
            data: [
              150,
              230,
              224,
              218,
              135,
              147,
              260,
              218,
              135,
              147,
              260,
              147,
              260,
              218,
              135,
              147,
              260,
              260
            ],
            show: true,
            axisLabel: {
              color: "#fff"
            },
            axisLine: {
              show: false
            },
            nameTextStyle: {
              color: "#fff"
            },
            axisTick: {
              show: false
            }
          },
          yAxis: {
            type: "value",
            splitLine: {
              show: false
            },
            axisLabel: {
              color: "#fff"
            }
          },
          series: {
            data: [
              "13:00",
              "13:10",
              "13:20",
              "13:30",
              "13:40",
              "13:50",
              "14:00",
              "14:10",
              "14:20",
              "14:30",
              "14:40",
              "14:50",
              "15:00",
              "15:10",
              "15:20",
              "15:30",
              "15:40",
              "15:50"
            ],
            type: "line",
            color: "#0099ff",
            areaStyle: {}
          }
        }
      };
    }
  };
  function _sfc_render$3(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_l_echart = resolveEasycom((0, import_vue2.resolveDynamicComponent)("l-echart"), __easycom_0);
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
      class: "contain",
      renderWhole: true
    }, [
      (0, import_vue2.createElementVNode)(
        "u-text",
        { class: "title" },
        (0, import_vue2.toDisplayString)($props.title),
        1
        /* TEXT */
      ),
      (0, import_vue2.createVNode)(_component_l_echart, {
        ref: "chart",
        onFinished: $options.init
      }, null, 8, ["onFinished"])
    ]);
  }
  var MinutesFlow = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["render", _sfc_render$3], ["styles", [_style_0$5]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/MinutesFlow.nvue"]]);
  var _style_0$4 = { "text": { "": { "fontSize": 24, "fontWeight": "700", "color": "#ffffff", "textAlign": "center" } }, "ttt": { "": { "width": 300, "height": 340 } } };
  var _sfc_main$4 = {
    name: "CalendarFlow",
    props: {
      // 格式: data: {
      //      y_data(ps: 下个月和上个月的字符串["2023-8", "2023-10"])
      //      x_range(ps: 上个月的每天的数据[[{yyyy}-{MM}-{dd}, 231], ...])
      data: {
        type: Object,
        // TODO: 写好请求后取消注释
        require: true,
        default: () => ({
          "y_data": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          "x_range": [
            "14:04",
            "14:14",
            "14:24",
            "14:34",
            "14:44",
            "14:54",
            "15:04",
            "15:14",
            "15:24",
            "15:34",
            "15:44",
            "15:54"
          ]
        })
      },
      title: {
        type: String,
        require: true,
        default: "\u6D41\u91CF\u5206\u5E03"
      }
    },
    methods: {
      init() {
        return __async(this, null, function* () {
          const chart = yield this.$refs.chart.init(echarts);
          chart.setOption(this.option);
        });
      },
      // 计算最大最小值
      countRange() {
        this.option.calendar.range = this.data.range;
        this.option.series.data = this.data.data;
        formatAppLog("debug", "at component/CalendarFlow.nvue:56", "\u7236\u4F20\u5B50\uFF0C\u4E24\u4E2A\u6708\u7684\u6570\u636E -> ", this.data);
        let minY = Infinity;
        let maxY = -Infinity;
        this.option.series.data.forEach((DataOfDay) => {
          if (DataOfDay[1] > maxY) {
            maxY = DataOfDay[1];
          }
          if (DataOfDay[1] < minY) {
            minY = DataOfDay[1];
          }
        });
        this.option.visualMap.min = 0;
        this.option.visualMap.max = maxY;
      }
    },
    watch: {
      // 自适应图表最大值
      data(newVal) {
        if (newVal.data && newVal.range) {
          if (Array.isArray(newVal.data) && Array.isArray(newVal.range)) {
            newVal.data.push(0);
            this.option.series.data = newVal.data;
            this.option.calendar.range = newVal.range;
            this.countRange();
            this.$refs.chart.setOption(this.option);
          }
        }
      }
    },
    data() {
      return {
        option: {
          title: {
            show: false,
            top: 0,
            left: "center",
            text: this.title,
            textStyle: {
              fontSize: 8,
              color: "#249fcc"
            }
          },
          tooltip: {},
          visualMap: {
            min: 0,
            // TODO: 计算最大值
            max: 1e3,
            type: "continuous",
            orient: "horizontal",
            left: "center",
            top: 0,
            textStyle: {
              color: "#fff"
            },
            calculable: false
          },
          calendar: {
            orient: "vertical",
            top: 55,
            left: 30,
            right: 30,
            cellSize: ["auto", 18],
            // 记得修改这里为空列表([])
            // range: ['2023-08', '2023-10'],
            range: [],
            itemStyle: {
              borderWidth: 0.5
            },
            yearLabel: {
              show: false
            },
            monthLabel: {
              show: true,
              nameMap: "ZH",
              color: "#fff",
              // 设置字体颜色为白色
              fontWeight: "bolder",
              fontSize: 10
            },
            dayLabel: {
              show: true,
              nameMap: "ZH",
              color: "#fff",
              firstDay: 7,
              fontWeight: "bolder",
              fontSize: 10
            },
            textStyle: {
              color: "#fff"
            },
            splitLine: {
              show: false,
              lineStyle: {
                color: "#fff",
                width: 3
              }
            }
          },
          series: {
            type: "heatmap",
            coordinateSystem: "calendar",
            // 记得修改这里为空列表([])
            // data: this.getVirtualData('2023')
            data: []
          }
        }
      };
    }
  };
  function _sfc_render$2(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_l_echart = resolveEasycom((0, import_vue2.resolveDynamicComponent)("l-echart"), __easycom_0);
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
      class: "ttt",
      renderWhole: true
    }, [
      (0, import_vue2.createElementVNode)(
        "u-text",
        { class: "text" },
        (0, import_vue2.toDisplayString)($props.title),
        1
        /* TEXT */
      ),
      (0, import_vue2.createVNode)(_component_l_echart, {
        ref: "chart",
        onFinished: $options.init
      }, null, 8, ["onFinished"])
    ]);
  }
  var CalendarFlow = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["render", _sfc_render$2], ["styles", [_style_0$4]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/CalendarFlow.nvue"]]);
  var _style_0$3 = { "common": { "": { "overflow": "hidden" } }, "roller": { "": { "transitionProperty": "transform", "transitionDuration": 1e3 } }, "text": { "": { "fontWeight": "900" } }, "@TRANSITION": { "roller": { "property": "transform", "duration": 1e3 } } };
  var _sfc_main$3 = {
    props: {
      number: {
        type: Number,
        default: 0
      },
      size: {
        type: Number,
        default: 48
      },
      color: {
        type: String,
        default: "#ffffff"
      }
    },
    methods: {
      transform(n2) {
        const temp = this.size * n2;
        return `transform: translateY(-${temp}px); height: ${this.size};`;
      }
    },
    computed: {
      text_style() {
        return `font-size: ${this.size}px; color: ${this.color};`;
      },
      height_style() {
        return `height: ${this.size};`;
      }
    },
    data() {
      return {
        numbers: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
        stt: "font-size: 96px; color: #ffffff;"
      };
    }
  };
  function _sfc_render$1(_ctx, _cache, $props, $setup, $data, $options) {
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)(
      "view",
      {
        class: "common",
        style: (0, import_vue2.normalizeStyle)($options.height_style),
        renderWhole: true
      },
      [
        ((0, import_vue2.openBlock)(true), (0, import_vue2.createElementBlock)(
          import_vue2.Fragment,
          null,
          (0, import_vue2.renderList)($data.numbers, (num) => {
            return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)(
              "view",
              {
                class: "roller",
                key: num,
                style: (0, import_vue2.normalizeStyle)($options.transform($props.number))
              },
              [
                (0, import_vue2.createElementVNode)(
                  "u-text",
                  {
                    class: "text",
                    style: (0, import_vue2.normalizeStyle)($options.text_style)
                  },
                  (0, import_vue2.toDisplayString)(num),
                  5
                  /* TEXT, STYLE */
                )
              ],
              4
              /* STYLE */
            );
          }),
          128
          /* KEYED_FRAGMENT */
        ))
      ],
      4
      /* STYLE */
    );
  }
  var SingleCountTo = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["render", _sfc_render$1], ["styles", [_style_0$3]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/SingleCountTo.vue"]]);
  var _style_0$2 = { "common": { "": { "overflow": "hidden", "display": "flex", "flexDirection": "row", "justifyContent": "center" } } };
  var _sfc_main$2 = {
    name: "CountTo",
    components: {
      SingleCountTo
    },
    props: {
      number: {
        type: Number,
        default: 0
      },
      size: {
        type: Number,
        default: 48
      },
      prefix: {
        type: Number,
        default: 3
      },
      color: {
        type: String,
        default: "#ffffff"
      }
    },
    computed: {
      height_style() {
        return `height: ${this.size};`;
      }
    }
  };
  function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
    const _component_single_count_to = (0, import_vue2.resolveComponent)("single-count-to");
    return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)(
      "view",
      {
        class: "common",
        style: (0, import_vue2.normalizeStyle)($options.height_style),
        renderWhole: true
      },
      [
        ((0, import_vue2.openBlock)(true), (0, import_vue2.createElementBlock)(
          import_vue2.Fragment,
          null,
          (0, import_vue2.renderList)($props.number.toString().padStart($props.prefix, "0").split(""), (n2, i2) => {
            return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", null, [
              ((0, import_vue2.openBlock)(), (0, import_vue2.createBlock)(_component_single_count_to, {
                key: i2,
                number: parseInt(n2),
                color: $props.color,
                size: $props.size
              }, null, 8, ["number", "color", "size"]))
            ]);
          }),
          256
          /* UNKEYED_FRAGMENT */
        ))
      ],
      4
      /* STYLE */
    );
  }
  var CountTo = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["render", _sfc_render], ["styles", [_style_0$2]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/CountTo.vue"]]);
  var _sfc_main$1 = /* @__PURE__ */ (0, import_vue2.defineComponent)({
    __name: "RealTime",
    props: {
      number: {
        type: Number
      },
      total: {
        type: Number
      },
      title: {
        type: String,
        require: true,
        default: "\u666F\u533A\u4EBA\u6570"
      },
      text: {
        type: String,
        require: true,
        default: "\u4ECA\u65E5\u5165\u56ED"
      }
    },
    setup(__props) {
      const props = __props;
      return (_ctx, _cache) => {
        return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("view", {
          class: "main",
          renderWhole: true
        }, [
          (0, import_vue2.createVNode)(CountTo, {
            number: props.number,
            size: 106
          }, null, 8, ["number"]),
          (0, import_vue2.createElementVNode)(
            "u-text",
            { class: "common mid_text distance-1" },
            (0, import_vue2.toDisplayString)(__props.title),
            1
            /* TEXT */
          ),
          (0, import_vue2.createElementVNode)(
            "u-text",
            { class: "common mini_text distance-2" },
            (0, import_vue2.toDisplayString)(__props.text) + " " + (0, import_vue2.toDisplayString)(props.total) + " \u4EBA",
            1
            /* TEXT */
          )
        ]);
      };
    }
  });
  var _style_0$1 = { "main": { "": { "width": 320, "display": "flex", "justifyContent": "center" } }, "common": { "": { "textAlign": "center", "color": "#ffffff" } }, "mid_text": { "": { "fontSize": 30, "fontWeight": "700" } }, "mini_text": { "": { "fontSize": 24, "fontWeight": "600" } }, "distance-1": { "": { "marginTop": 35 } }, "distance-2": { "": { "marginTop": 15 } } };
  var RealTime = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["styles", [_style_0$1]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/component/RealTime.nvue"]]);
  function inRange(a2, min, max) {
    return min <= a2 && a2 <= max;
  }
  function codePointsToString(code_points) {
    var s2 = "";
    for (var i2 = 0; i2 < code_points.length; ++i2) {
      var cp2 = code_points[i2];
      if (cp2 <= 65535) {
        s2 += String.fromCharCode(cp2);
      } else {
        cp2 -= 65536;
        s2 += String.fromCharCode(
          (cp2 >> 10) + 55296,
          (cp2 & 1023) + 56320
        );
      }
    }
    return s2;
  }
  function decoderError(fatal, opt_code_point) {
    if (fatal)
      throw TypeError("Decoder error");
    return opt_code_point || 65533;
  }
  function convertCodeUnitToBytes(code_unit, utf16be) {
    const byte1 = code_unit >> 8;
    const byte2 = code_unit & 255;
    if (utf16be)
      return [byte1, byte2];
    return [byte2, byte1];
  }
  function isASCIIByte(a2) {
    return 0 <= a2 && a2 <= 127;
  }
  var end_of_stream = -1;
  var finished = -1;
  var encodings = [
    {
      encodings: [
        {
          labels: [
            "unicode-1-1-utf-8",
            "utf-8",
            "utf8"
          ],
          name: "UTF-8"
        }
      ],
      heading: "The Encoding"
    },
    {
      encodings: [
        {
          labels: [
            "866",
            "cp866",
            "csibm866",
            "ibm866"
          ],
          name: "IBM866"
        },
        {
          labels: [
            "csisolatin2",
            "iso-8859-2",
            "iso-ir-101",
            "iso8859-2",
            "iso88592",
            "iso_8859-2",
            "iso_8859-2:1987",
            "l2",
            "latin2"
          ],
          name: "ISO-8859-2"
        },
        {
          labels: [
            "csisolatin3",
            "iso-8859-3",
            "iso-ir-109",
            "iso8859-3",
            "iso88593",
            "iso_8859-3",
            "iso_8859-3:1988",
            "l3",
            "latin3"
          ],
          name: "ISO-8859-3"
        },
        {
          labels: [
            "csisolatin4",
            "iso-8859-4",
            "iso-ir-110",
            "iso8859-4",
            "iso88594",
            "iso_8859-4",
            "iso_8859-4:1988",
            "l4",
            "latin4"
          ],
          name: "ISO-8859-4"
        },
        {
          labels: [
            "csisolatincyrillic",
            "cyrillic",
            "iso-8859-5",
            "iso-ir-144",
            "iso8859-5",
            "iso88595",
            "iso_8859-5",
            "iso_8859-5:1988"
          ],
          name: "ISO-8859-5"
        },
        {
          labels: [
            "arabic",
            "asmo-708",
            "csiso88596e",
            "csiso88596i",
            "csisolatinarabic",
            "ecma-114",
            "iso-8859-6",
            "iso-8859-6-e",
            "iso-8859-6-i",
            "iso-ir-127",
            "iso8859-6",
            "iso88596",
            "iso_8859-6",
            "iso_8859-6:1987"
          ],
          name: "ISO-8859-6"
        },
        {
          labels: [
            "csisolatingreek",
            "ecma-118",
            "elot_928",
            "greek",
            "greek8",
            "iso-8859-7",
            "iso-ir-126",
            "iso8859-7",
            "iso88597",
            "iso_8859-7",
            "iso_8859-7:1987",
            "sun_eu_greek"
          ],
          name: "ISO-8859-7"
        },
        {
          labels: [
            "csiso88598e",
            "csisolatinhebrew",
            "hebrew",
            "iso-8859-8",
            "iso-8859-8-e",
            "iso-ir-138",
            "iso8859-8",
            "iso88598",
            "iso_8859-8",
            "iso_8859-8:1988",
            "visual"
          ],
          name: "ISO-8859-8"
        },
        {
          labels: [
            "csiso88598i",
            "iso-8859-8-i",
            "logical"
          ],
          name: "ISO-8859-8-I"
        },
        {
          labels: [
            "csisolatin6",
            "iso-8859-10",
            "iso-ir-157",
            "iso8859-10",
            "iso885910",
            "l6",
            "latin6"
          ],
          name: "ISO-8859-10"
        },
        {
          labels: [
            "iso-8859-13",
            "iso8859-13",
            "iso885913"
          ],
          name: "ISO-8859-13"
        },
        {
          labels: [
            "iso-8859-14",
            "iso8859-14",
            "iso885914"
          ],
          name: "ISO-8859-14"
        },
        {
          labels: [
            "csisolatin9",
            "iso-8859-15",
            "iso8859-15",
            "iso885915",
            "iso_8859-15",
            "l9"
          ],
          name: "ISO-8859-15"
        },
        {
          labels: [
            "iso-8859-16"
          ],
          name: "ISO-8859-16"
        },
        {
          labels: [
            "cskoi8r",
            "koi",
            "koi8",
            "koi8-r",
            "koi8_r"
          ],
          name: "KOI8-R"
        },
        {
          labels: [
            "koi8-ru",
            "koi8-u"
          ],
          name: "KOI8-U"
        },
        {
          labels: [
            "csmacintosh",
            "mac",
            "macintosh",
            "x-mac-roman"
          ],
          name: "macintosh"
        },
        {
          labels: [
            "dos-874",
            "iso-8859-11",
            "iso8859-11",
            "iso885911",
            "tis-620",
            "windows-874"
          ],
          name: "windows-874"
        },
        {
          labels: [
            "cp1250",
            "windows-1250",
            "x-cp1250"
          ],
          name: "windows-1250"
        },
        {
          labels: [
            "cp1251",
            "windows-1251",
            "x-cp1251"
          ],
          name: "windows-1251"
        },
        {
          labels: [
            "ansi_x3.4-1968",
            "ascii",
            "cp1252",
            "cp819",
            "csisolatin1",
            "ibm819",
            "iso-8859-1",
            "iso-ir-100",
            "iso8859-1",
            "iso88591",
            "iso_8859-1",
            "iso_8859-1:1987",
            "l1",
            "latin1",
            "us-ascii",
            "windows-1252",
            "x-cp1252"
          ],
          name: "windows-1252"
        },
        {
          labels: [
            "cp1253",
            "windows-1253",
            "x-cp1253"
          ],
          name: "windows-1253"
        },
        {
          labels: [
            "cp1254",
            "csisolatin5",
            "iso-8859-9",
            "iso-ir-148",
            "iso8859-9",
            "iso88599",
            "iso_8859-9",
            "iso_8859-9:1989",
            "l5",
            "latin5",
            "windows-1254",
            "x-cp1254"
          ],
          name: "windows-1254"
        },
        {
          labels: [
            "cp1255",
            "windows-1255",
            "x-cp1255"
          ],
          name: "windows-1255"
        },
        {
          labels: [
            "cp1256",
            "windows-1256",
            "x-cp1256"
          ],
          name: "windows-1256"
        },
        {
          labels: [
            "cp1257",
            "windows-1257",
            "x-cp1257"
          ],
          name: "windows-1257"
        },
        {
          labels: [
            "cp1258",
            "windows-1258",
            "x-cp1258"
          ],
          name: "windows-1258"
        },
        {
          labels: [
            "x-mac-cyrillic",
            "x-mac-ukrainian"
          ],
          name: "x-mac-cyrillic"
        }
      ],
      heading: "Legacy single-byte encodings"
    },
    {
      encodings: [
        {
          labels: [
            "chinese",
            "csgb2312",
            "csiso58gb231280",
            "gb2312",
            "gb_2312",
            "gb_2312-80",
            "gbk",
            "iso-ir-58",
            "x-gbk"
          ],
          name: "GBK"
        },
        {
          labels: [
            "gb18030"
          ],
          name: "gb18030"
        }
      ],
      heading: "Legacy multi-byte Chinese (simplified) encodings"
    },
    {
      encodings: [
        {
          labels: [
            "big5",
            "big5-hkscs",
            "cn-big5",
            "csbig5",
            "x-x-big5"
          ],
          name: "Big5"
        }
      ],
      heading: "Legacy multi-byte Chinese (traditional) encodings"
    },
    {
      encodings: [
        {
          labels: [
            "cseucpkdfmtjapanese",
            "euc-jp",
            "x-euc-jp"
          ],
          name: "EUC-JP"
        },
        {
          labels: [
            "csiso2022jp",
            "iso-2022-jp"
          ],
          name: "ISO-2022-JP"
        },
        {
          labels: [
            "csshiftjis",
            "ms932",
            "ms_kanji",
            "shift-jis",
            "shift_jis",
            "sjis",
            "windows-31j",
            "x-sjis"
          ],
          name: "Shift_JIS"
        }
      ],
      heading: "Legacy multi-byte Japanese encodings"
    },
    {
      encodings: [
        {
          labels: [
            "cseuckr",
            "csksc56011987",
            "euc-kr",
            "iso-ir-149",
            "korean",
            "ks_c_5601-1987",
            "ks_c_5601-1989",
            "ksc5601",
            "ksc_5601",
            "windows-949"
          ],
          name: "EUC-KR"
        }
      ],
      heading: "Legacy multi-byte Korean encodings"
    },
    {
      encodings: [
        {
          labels: [
            "csiso2022kr",
            "hz-gb-2312",
            "iso-2022-cn",
            "iso-2022-cn-ext",
            "iso-2022-kr"
          ],
          name: "replacement"
        },
        {
          labels: [
            "utf-16be"
          ],
          name: "UTF-16BE"
        },
        {
          labels: [
            "utf-16",
            "utf-16le"
          ],
          name: "UTF-16LE"
        },
        {
          labels: [
            "x-user-defined"
          ],
          name: "x-user-defined"
        }
      ],
      heading: "Legacy miscellaneous encodings"
    }
  ];
  var UTF8Decoder = class {
    /**
     * @param {{fatal: boolean}} options
     */
    constructor(options) {
      const { fatal } = options;
      let utf8_code_point = 0, utf8_bytes_seen = 0, utf8_bytes_needed = 0, utf8_lower_boundary = 128, utf8_upper_boundary = 191;
      this.handler = function(stream, bite) {
        if (bite === end_of_stream && utf8_bytes_needed !== 0) {
          utf8_bytes_needed = 0;
          return decoderError(fatal);
        }
        if (bite === end_of_stream)
          return finished;
        if (utf8_bytes_needed === 0) {
          if (inRange(bite, 0, 127)) {
            return bite;
          } else if (inRange(bite, 194, 223)) {
            utf8_bytes_needed = 1;
            utf8_code_point = bite & 31;
          } else if (inRange(bite, 224, 239)) {
            if (bite === 224)
              utf8_lower_boundary = 160;
            if (bite === 237)
              utf8_upper_boundary = 159;
            utf8_bytes_needed = 2;
            utf8_code_point = bite & 15;
          } else if (inRange(bite, 240, 244)) {
            if (bite === 240)
              utf8_lower_boundary = 144;
            if (bite === 244)
              utf8_upper_boundary = 143;
            utf8_bytes_needed = 3;
            utf8_code_point = bite & 7;
          } else {
            return decoderError(fatal);
          }
          return null;
        }
        if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {
          utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;
          utf8_lower_boundary = 128;
          utf8_upper_boundary = 191;
          stream.prepend(bite);
          return decoderError(fatal);
        }
        utf8_lower_boundary = 128;
        utf8_upper_boundary = 191;
        utf8_code_point = utf8_code_point << 6 | bite & 63;
        utf8_bytes_seen += 1;
        if (utf8_bytes_seen !== utf8_bytes_needed)
          return null;
        var code_point = utf8_code_point;
        utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;
        return code_point;
      };
    }
  };
  var UTF16Decoder = class {
    /**
     * @param {boolean} utf16_be True if big-endian, false if little-endian.
     * @param {{fatal: boolean}} options
     */
    constructor(utf16_be, options) {
      const { fatal } = options;
      this.utf16_be = utf16_be;
      this.fatal = fatal;
      this.utf16_lead_byte = null;
      this.utf16_lead_surrogate = null;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && (this.utf16_lead_byte !== null || this.utf16_lead_surrogate !== null)) {
        return decoderError(this.fatal);
      }
      if (bite === end_of_stream && this.utf16_lead_byte === null && this.utf16_lead_surrogate === null) {
        return finished;
      }
      if (this.utf16_lead_byte === null) {
        this.utf16_lead_byte = bite;
        return null;
      }
      let code_unit;
      if (this.utf16_be) {
        code_unit = (this.utf16_lead_byte << 8) + bite;
      } else {
        code_unit = (bite << 8) + this.utf16_lead_byte;
      }
      this.utf16_lead_byte = null;
      if (this.utf16_lead_surrogate !== null) {
        const lead_surrogate = this.utf16_lead_surrogate;
        this.utf16_lead_surrogate = null;
        if (inRange(code_unit, 56320, 57343)) {
          return 65536 + (lead_surrogate - 55296) * 1024 + (code_unit - 56320);
        }
        stream.prepend(convertCodeUnitToBytes(code_unit, this.utf16_be));
        return decoderError(this.fatal);
      }
      if (inRange(code_unit, 55296, 56319)) {
        this.utf16_lead_surrogate = code_unit;
        return null;
      }
      if (inRange(code_unit, 56320, 57343))
        return decoderError(this.fatal);
      return code_unit;
    }
  };
  var Indexes = {
    "big5": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 17392, 19506, 17923, 17830, 17784, 160359, 19831, 17843, 162993, 19682, 163013, 15253, 18230, 18244, 19527, 19520, 148159, 144919, 160594, 159371, 159954, 19543, 172881, 18255, 17882, 19589, 162924, 19719, 19108, 18081, 158499, 29221, 154196, 137827, 146950, 147297, 26189, 22267, null, 32149, 22813, 166841, 15860, 38708, 162799, 23515, 138590, 23204, 13861, 171696, 23249, 23479, 23804, 26478, 34195, 170309, 29793, 29853, 14453, 138579, 145054, 155681, 16108, 153822, 15093, 31484, 40855, 147809, 166157, 143850, 133770, 143966, 17162, 33924, 40854, 37935, 18736, 34323, 22678, 38730, 37400, 31184, 31282, 26208, 27177, 34973, 29772, 31685, 26498, 31276, 21071, 36934, 13542, 29636, 155065, 29894, 40903, 22451, 18735, 21580, 16689, 145038, 22552, 31346, 162661, 35727, 18094, 159368, 16769, 155033, 31662, 140476, 40904, 140481, 140489, 140492, 40905, 34052, 144827, 16564, 40906, 17633, 175615, 25281, 28782, 40907, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 12736, 12737, 12738, 12739, 12740, 131340, 12741, 131281, 131277, 12742, 12743, 131275, 139240, 12744, 131274, 12745, 12746, 12747, 12748, 131342, 12749, 12750, 256, 193, 461, 192, 274, 201, 282, 200, 332, 211, 465, 210, null, 7870, null, 7872, 202, 257, 225, 462, 224, 593, 275, 233, 283, 232, 299, 237, 464, 236, 333, 243, 466, 242, 363, 250, 468, 249, 470, 472, 474, 476, 252, null, 7871, null, 7873, 234, 609, 9178, 9179, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 172969, 135493, null, 25866, null, null, 20029, 28381, 40270, 37343, null, null, 161589, 25745, 20250, 20264, 20392, 20822, 20852, 20892, 20964, 21153, 21160, 21307, 21326, 21457, 21464, 22242, 22768, 22788, 22791, 22834, 22836, 23398, 23454, 23455, 23706, 24198, 24635, 25993, 26622, 26628, 26725, 27982, 28860, 30005, 32420, 32428, 32442, 32455, 32463, 32479, 32518, 32567, 33402, 33487, 33647, 35270, 35774, 35810, 36710, 36711, 36718, 29713, 31996, 32205, 26950, 31433, 21031, null, null, null, null, 37260, 30904, 37214, 32956, null, 36107, 33014, 133607, null, null, 32927, 40647, 19661, 40393, 40460, 19518, 171510, 159758, 40458, 172339, 13761, null, 28314, 33342, 29977, null, 18705, 39532, 39567, 40857, 31111, 164972, 138698, 132560, 142054, 20004, 20097, 20096, 20103, 20159, 20203, 20279, 13388, 20413, 15944, 20483, 20616, 13437, 13459, 13477, 20870, 22789, 20955, 20988, 20997, 20105, 21113, 21136, 21287, 13767, 21417, 13649, 21424, 13651, 21442, 21539, 13677, 13682, 13953, 21651, 21667, 21684, 21689, 21712, 21743, 21784, 21795, 21800, 13720, 21823, 13733, 13759, 21975, 13765, 163204, 21797, null, 134210, 134421, 151851, 21904, 142534, 14828, 131905, 36422, 150968, 169189, 16467, 164030, 30586, 142392, 14900, 18389, 164189, 158194, 151018, 25821, 134524, 135092, 134357, 135412, 25741, 36478, 134806, 134155, 135012, 142505, 164438, 148691, null, 134470, 170573, 164073, 18420, 151207, 142530, 39602, 14951, 169460, 16365, 13574, 152263, 169940, 161992, 142660, 40302, 38933, null, 17369, 155813, 25780, 21731, 142668, 142282, 135287, 14843, 135279, 157402, 157462, 162208, 25834, 151634, 134211, 36456, 139681, 166732, 132913, null, 18443, 131497, 16378, 22643, 142733, null, 148936, 132348, 155799, 134988, 134550, 21881, 16571, 17338, null, 19124, 141926, 135325, 33194, 39157, 134556, 25465, 14846, 141173, 36288, 22177, 25724, 15939, null, 173569, 134665, 142031, 142537, null, 135368, 145858, 14738, 14854, 164507, 13688, 155209, 139463, 22098, 134961, 142514, 169760, 13500, 27709, 151099, null, null, 161140, 142987, 139784, 173659, 167117, 134778, 134196, 157724, 32659, 135375, 141315, 141625, 13819, 152035, 134796, 135053, 134826, 16275, 134960, 134471, 135503, 134732, null, 134827, 134057, 134472, 135360, 135485, 16377, 140950, 25650, 135085, 144372, 161337, 142286, 134526, 134527, 142417, 142421, 14872, 134808, 135367, 134958, 173618, 158544, 167122, 167321, 167114, 38314, 21708, 33476, 21945, null, 171715, 39974, 39606, 161630, 142830, 28992, 33133, 33004, 23580, 157042, 33076, 14231, 21343, 164029, 37302, 134906, 134671, 134775, 134907, 13789, 151019, 13833, 134358, 22191, 141237, 135369, 134672, 134776, 135288, 135496, 164359, 136277, 134777, 151120, 142756, 23124, 135197, 135198, 135413, 135414, 22428, 134673, 161428, 164557, 135093, 134779, 151934, 14083, 135094, 135552, 152280, 172733, 149978, 137274, 147831, 164476, 22681, 21096, 13850, 153405, 31666, 23400, 18432, 19244, 40743, 18919, 39967, 39821, 154484, 143677, 22011, 13810, 22153, 20008, 22786, 138177, 194680, 38737, 131206, 20059, 20155, 13630, 23587, 24401, 24516, 14586, 25164, 25909, 27514, 27701, 27706, 28780, 29227, 20012, 29357, 149737, 32594, 31035, 31993, 32595, 156266, 13505, null, 156491, 32770, 32896, 157202, 158033, 21341, 34916, 35265, 161970, 35744, 36125, 38021, 38264, 38271, 38376, 167439, 38886, 39029, 39118, 39134, 39267, 17e4, 40060, 40479, 40644, 27503, 63751, 20023, 131207, 38429, 25143, 38050, null, 20539, 28158, 171123, 40870, 15817, 34959, 147790, 28791, 23797, 19232, 152013, 13657, 154928, 24866, 166450, 36775, 37366, 29073, 26393, 29626, 144001, 172295, 15499, 137600, 19216, 30948, 29698, 20910, 165647, 16393, 27235, 172730, 16931, 34319, 133743, 31274, 170311, 166634, 38741, 28749, 21284, 139390, 37876, 30425, 166371, 40871, 30685, 20131, 20464, 20668, 20015, 20247, 40872, 21556, 32139, 22674, 22736, 138678, 24210, 24217, 24514, 141074, 25995, 144377, 26905, 27203, 146531, 27903, null, 29184, 148741, 29580, 16091, 150035, 23317, 29881, 35715, 154788, 153237, 31379, 31724, 31939, 32364, 33528, 34199, 40873, 34960, 40874, 36537, 40875, 36815, 34143, 39392, 37409, 40876, 167353, 136255, 16497, 17058, 23066, null, null, null, 39016, 26475, 17014, 22333, null, 34262, 149883, 33471, 160013, 19585, 159092, 23931, 158485, 159678, 40877, 40878, 23446, 40879, 26343, 32347, 28247, 31178, 15752, 17603, 143958, 141206, 17306, 17718, null, 23765, 146202, 35577, 23672, 15634, 144721, 23928, 40882, 29015, 17752, 147692, 138787, 19575, 14712, 13386, 131492, 158785, 35532, 20404, 131641, 22975, 33132, 38998, 170234, 24379, 134047, null, 139713, 166253, 16642, 18107, 168057, 16135, 40883, 172469, 16632, 14294, 18167, 158790, 16764, 165554, 160767, 17773, 14548, 152730, 17761, 17691, 19849, 19579, 19830, 17898, 16328, 150287, 13921, 17630, 17597, 16877, 23870, 23880, 23894, 15868, 14351, 23972, 23993, 14368, 14392, 24130, 24253, 24357, 24451, 14600, 14612, 14655, 14669, 24791, 24893, 23781, 14729, 25015, 25017, 25039, 14776, 25132, 25232, 25317, 25368, 14840, 22193, 14851, 25570, 25595, 25607, 25690, 14923, 25792, 23829, 22049, 40863, 14999, 25990, 15037, 26111, 26195, 15090, 26258, 15138, 26390, 15170, 26532, 26624, 15192, 26698, 26756, 15218, 15217, 15227, 26889, 26947, 29276, 26980, 27039, 27013, 15292, 27094, 15325, 27237, 27252, 27249, 27266, 15340, 27289, 15346, 27307, 27317, 27348, 27382, 27521, 27585, 27626, 27765, 27818, 15563, 27906, 27910, 27942, 28033, 15599, 28068, 28081, 28181, 28184, 28201, 28294, 166336, 28347, 28386, 28378, 40831, 28392, 28393, 28452, 28468, 15686, 147265, 28545, 28606, 15722, 15733, 29111, 23705, 15754, 28716, 15761, 28752, 28756, 28783, 28799, 28809, 131877, 17345, 13809, 134872, 147159, 22462, 159443, 28990, 153568, 13902, 27042, 166889, 23412, 31305, 153825, 169177, 31333, 31357, 154028, 31419, 31408, 31426, 31427, 29137, 156813, 16842, 31450, 31453, 31466, 16879, 21682, 154625, 31499, 31573, 31529, 152334, 154878, 31650, 31599, 33692, 154548, 158847, 31696, 33825, 31634, 31672, 154912, 15789, 154725, 33938, 31738, 31750, 31797, 154817, 31812, 31875, 149634, 31910, 26237, 148856, 31945, 31943, 31974, 31860, 31987, 31989, 31950, 32359, 17693, 159300, 32093, 159446, 29837, 32137, 32171, 28981, 32179, 32210, 147543, 155689, 32228, 15635, 32245, 137209, 32229, 164717, 32285, 155937, 155994, 32366, 32402, 17195, 37996, 32295, 32576, 32577, 32583, 31030, 156368, 39393, 32663, 156497, 32675, 136801, 131176, 17756, 145254, 17667, 164666, 32762, 156809, 32773, 32776, 32797, 32808, 32815, 172167, 158915, 32827, 32828, 32865, 141076, 18825, 157222, 146915, 157416, 26405, 32935, 166472, 33031, 33050, 22704, 141046, 27775, 156824, 151480, 25831, 136330, 33304, 137310, 27219, 150117, 150165, 17530, 33321, 133901, 158290, 146814, 20473, 136445, 34018, 33634, 158474, 149927, 144688, 137075, 146936, 33450, 26907, 194964, 16859, 34123, 33488, 33562, 134678, 137140, 14017, 143741, 144730, 33403, 33506, 33560, 147083, 159139, 158469, 158615, 144846, 15807, 33565, 21996, 33669, 17675, 159141, 33708, 33729, 33747, 13438, 159444, 27223, 34138, 13462, 159298, 143087, 33880, 154596, 33905, 15827, 17636, 27303, 33866, 146613, 31064, 33960, 158614, 159351, 159299, 34014, 33807, 33681, 17568, 33939, 34020, 154769, 16960, 154816, 17731, 34100, 23282, 159385, 17703, 34163, 17686, 26559, 34326, 165413, 165435, 34241, 159880, 34306, 136578, 159949, 194994, 17770, 34344, 13896, 137378, 21495, 160666, 34430, 34673, 172280, 34798, 142375, 34737, 34778, 34831, 22113, 34412, 26710, 17935, 34885, 34886, 161248, 146873, 161252, 34910, 34972, 18011, 34996, 34997, 25537, 35013, 30583, 161551, 35207, 35210, 35238, 35241, 35239, 35260, 166437, 35303, 162084, 162493, 35484, 30611, 37374, 35472, 162393, 31465, 162618, 147343, 18195, 162616, 29052, 35596, 35615, 152624, 152933, 35647, 35660, 35661, 35497, 150138, 35728, 35739, 35503, 136927, 17941, 34895, 35995, 163156, 163215, 195028, 14117, 163155, 36054, 163224, 163261, 36114, 36099, 137488, 36059, 28764, 36113, 150729, 16080, 36215, 36265, 163842, 135188, 149898, 15228, 164284, 160012, 31463, 36525, 36534, 36547, 37588, 36633, 36653, 164709, 164882, 36773, 37635, 172703, 133712, 36787, 18730, 166366, 165181, 146875, 24312, 143970, 36857, 172052, 165564, 165121, 140069, 14720, 159447, 36919, 165180, 162494, 36961, 165228, 165387, 37032, 165651, 37060, 165606, 37038, 37117, 37223, 15088, 37289, 37316, 31916, 166195, 138889, 37390, 27807, 37441, 37474, 153017, 37561, 166598, 146587, 166668, 153051, 134449, 37676, 37739, 166625, 166891, 28815, 23235, 166626, 166629, 18789, 37444, 166892, 166969, 166911, 37747, 37979, 36540, 38277, 38310, 37926, 38304, 28662, 17081, 140922, 165592, 135804, 146990, 18911, 27676, 38523, 38550, 16748, 38563, 159445, 25050, 38582, 30965, 166624, 38589, 21452, 18849, 158904, 131700, 156688, 168111, 168165, 150225, 137493, 144138, 38705, 34370, 38710, 18959, 17725, 17797, 150249, 28789, 23361, 38683, 38748, 168405, 38743, 23370, 168427, 38751, 37925, 20688, 143543, 143548, 38793, 38815, 38833, 38846, 38848, 38866, 38880, 152684, 38894, 29724, 169011, 38911, 38901, 168989, 162170, 19153, 38964, 38963, 38987, 39014, 15118, 160117, 15697, 132656, 147804, 153350, 39114, 39095, 39112, 39111, 19199, 159015, 136915, 21936, 39137, 39142, 39148, 37752, 39225, 150057, 19314, 170071, 170245, 39413, 39436, 39483, 39440, 39512, 153381, 14020, 168113, 170965, 39648, 39650, 170757, 39668, 19470, 39700, 39725, 165376, 20532, 39732, 158120, 14531, 143485, 39760, 39744, 171326, 23109, 137315, 39822, 148043, 39938, 39935, 39948, 171624, 40404, 171959, 172434, 172459, 172257, 172323, 172511, 40318, 40323, 172340, 40462, 26760, 40388, 139611, 172435, 172576, 137531, 172595, 40249, 172217, 172724, 40592, 40597, 40606, 40610, 19764, 40618, 40623, 148324, 40641, 15200, 14821, 15645, 20274, 14270, 166955, 40706, 40712, 19350, 37924, 159138, 40727, 40726, 40761, 22175, 22154, 40773, 39352, 168075, 38898, 33919, 40802, 40809, 31452, 40846, 29206, 19390, 149877, 149947, 29047, 150008, 148296, 150097, 29598, 166874, 137466, 31135, 166270, 167478, 37737, 37875, 166468, 37612, 37761, 37835, 166252, 148665, 29207, 16107, 30578, 31299, 28880, 148595, 148472, 29054, 137199, 28835, 137406, 144793, 16071, 137349, 152623, 137208, 14114, 136955, 137273, 14049, 137076, 137425, 155467, 14115, 136896, 22363, 150053, 136190, 135848, 136134, 136374, 34051, 145062, 34051, 33877, 149908, 160101, 146993, 152924, 147195, 159826, 17652, 145134, 170397, 159526, 26617, 14131, 15381, 15847, 22636, 137506, 26640, 16471, 145215, 147681, 147595, 147727, 158753, 21707, 22174, 157361, 22162, 135135, 134056, 134669, 37830, 166675, 37788, 20216, 20779, 14361, 148534, 20156, 132197, 131967, 20299, 20362, 153169, 23144, 131499, 132043, 14745, 131850, 132116, 13365, 20265, 131776, 167603, 131701, 35546, 131596, 20120, 20685, 20749, 20386, 20227, 150030, 147082, 20290, 20526, 20588, 20609, 20428, 20453, 20568, 20732, 20825, 20827, 20829, 20830, 28278, 144789, 147001, 147135, 28018, 137348, 147081, 20904, 20931, 132576, 17629, 132259, 132242, 132241, 36218, 166556, 132878, 21081, 21156, 133235, 21217, 37742, 18042, 29068, 148364, 134176, 149932, 135396, 27089, 134685, 29817, 16094, 29849, 29716, 29782, 29592, 19342, 150204, 147597, 21456, 13700, 29199, 147657, 21940, 131909, 21709, 134086, 22301, 37469, 38644, 37734, 22493, 22413, 22399, 13886, 22731, 23193, 166470, 136954, 137071, 136976, 23084, 22968, 37519, 23166, 23247, 23058, 153926, 137715, 137313, 148117, 14069, 27909, 29763, 23073, 155267, 23169, 166871, 132115, 37856, 29836, 135939, 28933, 18802, 37896, 166395, 37821, 14240, 23582, 23710, 24158, 24136, 137622, 137596, 146158, 24269, 23375, 137475, 137476, 14081, 137376, 14045, 136958, 14035, 33066, 166471, 138682, 144498, 166312, 24332, 24334, 137511, 137131, 23147, 137019, 23364, 34324, 161277, 34912, 24702, 141408, 140843, 24539, 16056, 140719, 140734, 168072, 159603, 25024, 131134, 131142, 140827, 24985, 24984, 24693, 142491, 142599, 149204, 168269, 25713, 149093, 142186, 14889, 142114, 144464, 170218, 142968, 25399, 173147, 25782, 25393, 25553, 149987, 142695, 25252, 142497, 25659, 25963, 26994, 15348, 143502, 144045, 149897, 144043, 21773, 144096, 137433, 169023, 26318, 144009, 143795, 15072, 16784, 152964, 166690, 152975, 136956, 152923, 152613, 30958, 143619, 137258, 143924, 13412, 143887, 143746, 148169, 26254, 159012, 26219, 19347, 26160, 161904, 138731, 26211, 144082, 144097, 26142, 153714, 14545, 145466, 145340, 15257, 145314, 144382, 29904, 15254, 26511, 149034, 26806, 26654, 15300, 27326, 14435, 145365, 148615, 27187, 27218, 27337, 27397, 137490, 25873, 26776, 27212, 15319, 27258, 27479, 147392, 146586, 37792, 37618, 166890, 166603, 37513, 163870, 166364, 37991, 28069, 28427, 149996, 28007, 147327, 15759, 28164, 147516, 23101, 28170, 22599, 27940, 30786, 28987, 148250, 148086, 28913, 29264, 29319, 29332, 149391, 149285, 20857, 150180, 132587, 29818, 147192, 144991, 150090, 149783, 155617, 16134, 16049, 150239, 166947, 147253, 24743, 16115, 29900, 29756, 37767, 29751, 17567, 159210, 17745, 30083, 16227, 150745, 150790, 16216, 30037, 30323, 173510, 15129, 29800, 166604, 149931, 149902, 15099, 15821, 150094, 16127, 149957, 149747, 37370, 22322, 37698, 166627, 137316, 20703, 152097, 152039, 30584, 143922, 30478, 30479, 30587, 149143, 145281, 14942, 149744, 29752, 29851, 16063, 150202, 150215, 16584, 150166, 156078, 37639, 152961, 30750, 30861, 30856, 30930, 29648, 31065, 161601, 153315, 16654, 31131, 33942, 31141, 27181, 147194, 31290, 31220, 16750, 136934, 16690, 37429, 31217, 134476, 149900, 131737, 146874, 137070, 13719, 21867, 13680, 13994, 131540, 134157, 31458, 23129, 141045, 154287, 154268, 23053, 131675, 30960, 23082, 154566, 31486, 16889, 31837, 31853, 16913, 154547, 155324, 155302, 31949, 150009, 137136, 31886, 31868, 31918, 27314, 32220, 32263, 32211, 32590, 156257, 155996, 162632, 32151, 155266, 17002, 158581, 133398, 26582, 131150, 144847, 22468, 156690, 156664, 149858, 32733, 31527, 133164, 154345, 154947, 31500, 155150, 39398, 34373, 39523, 27164, 144447, 14818, 150007, 157101, 39455, 157088, 33920, 160039, 158929, 17642, 33079, 17410, 32966, 33033, 33090, 157620, 39107, 158274, 33378, 33381, 158289, 33875, 159143, 34320, 160283, 23174, 16767, 137280, 23339, 137377, 23268, 137432, 34464, 195004, 146831, 34861, 160802, 23042, 34926, 20293, 34951, 35007, 35046, 35173, 35149, 153219, 35156, 161669, 161668, 166901, 166873, 166812, 166393, 16045, 33955, 18165, 18127, 14322, 35389, 35356, 169032, 24397, 37419, 148100, 26068, 28969, 28868, 137285, 40301, 35999, 36073, 163292, 22938, 30659, 23024, 17262, 14036, 36394, 36519, 150537, 36656, 36682, 17140, 27736, 28603, 140065, 18587, 28537, 28299, 137178, 39913, 14005, 149807, 37051, 37015, 21873, 18694, 37307, 37892, 166475, 16482, 166652, 37927, 166941, 166971, 34021, 35371, 38297, 38311, 38295, 38294, 167220, 29765, 16066, 149759, 150082, 148458, 16103, 143909, 38543, 167655, 167526, 167525, 16076, 149997, 150136, 147438, 29714, 29803, 16124, 38721, 168112, 26695, 18973, 168083, 153567, 38749, 37736, 166281, 166950, 166703, 156606, 37562, 23313, 35689, 18748, 29689, 147995, 38811, 38769, 39224, 134950, 24001, 166853, 150194, 38943, 169178, 37622, 169431, 37349, 17600, 166736, 150119, 166756, 39132, 166469, 16128, 37418, 18725, 33812, 39227, 39245, 162566, 15869, 39323, 19311, 39338, 39516, 166757, 153800, 27279, 39457, 23294, 39471, 170225, 19344, 170312, 39356, 19389, 19351, 37757, 22642, 135938, 22562, 149944, 136424, 30788, 141087, 146872, 26821, 15741, 37976, 14631, 24912, 141185, 141675, 24839, 40015, 40019, 40059, 39989, 39952, 39807, 39887, 171565, 39839, 172533, 172286, 40225, 19630, 147716, 40472, 19632, 40204, 172468, 172269, 172275, 170287, 40357, 33981, 159250, 159711, 158594, 34300, 17715, 159140, 159364, 159216, 33824, 34286, 159232, 145367, 155748, 31202, 144796, 144960, 18733, 149982, 15714, 37851, 37566, 37704, 131775, 30905, 37495, 37965, 20452, 13376, 36964, 152925, 30781, 30804, 30902, 30795, 137047, 143817, 149825, 13978, 20338, 28634, 28633, 28702, 28702, 21524, 147893, 22459, 22771, 22410, 40214, 22487, 28980, 13487, 147884, 29163, 158784, 151447, 23336, 137141, 166473, 24844, 23246, 23051, 17084, 148616, 14124, 19323, 166396, 37819, 37816, 137430, 134941, 33906, 158912, 136211, 148218, 142374, 148417, 22932, 146871, 157505, 32168, 155995, 155812, 149945, 149899, 166394, 37605, 29666, 16105, 29876, 166755, 137375, 16097, 150195, 27352, 29683, 29691, 16086, 150078, 150164, 137177, 150118, 132007, 136228, 149989, 29768, 149782, 28837, 149878, 37508, 29670, 37727, 132350, 37681, 166606, 166422, 37766, 166887, 153045, 18741, 166530, 29035, 149827, 134399, 22180, 132634, 134123, 134328, 21762, 31172, 137210, 32254, 136898, 150096, 137298, 17710, 37889, 14090, 166592, 149933, 22960, 137407, 137347, 160900, 23201, 14050, 146779, 14e3, 37471, 23161, 166529, 137314, 37748, 15565, 133812, 19094, 14730, 20724, 15721, 15692, 136092, 29045, 17147, 164376, 28175, 168164, 17643, 27991, 163407, 28775, 27823, 15574, 147437, 146989, 28162, 28428, 15727, 132085, 30033, 14012, 13512, 18048, 16090, 18545, 22980, 37486, 18750, 36673, 166940, 158656, 22546, 22472, 14038, 136274, 28926, 148322, 150129, 143331, 135856, 140221, 26809, 26983, 136088, 144613, 162804, 145119, 166531, 145366, 144378, 150687, 27162, 145069, 158903, 33854, 17631, 17614, 159014, 159057, 158850, 159710, 28439, 160009, 33597, 137018, 33773, 158848, 159827, 137179, 22921, 23170, 137139, 23137, 23153, 137477, 147964, 14125, 23023, 137020, 14023, 29070, 37776, 26266, 148133, 23150, 23083, 148115, 27179, 147193, 161590, 148571, 148170, 28957, 148057, 166369, 20400, 159016, 23746, 148686, 163405, 148413, 27148, 148054, 135940, 28838, 28979, 148457, 15781, 27871, 194597, 150095, 32357, 23019, 23855, 15859, 24412, 150109, 137183, 32164, 33830, 21637, 146170, 144128, 131604, 22398, 133333, 132633, 16357, 139166, 172726, 28675, 168283, 23920, 29583, 31955, 166489, 168992, 20424, 32743, 29389, 29456, 162548, 29496, 29497, 153334, 29505, 29512, 16041, 162584, 36972, 29173, 149746, 29665, 33270, 16074, 30476, 16081, 27810, 22269, 29721, 29726, 29727, 16098, 16112, 16116, 16122, 29907, 16142, 16211, 30018, 30061, 30066, 30093, 16252, 30152, 30172, 16320, 30285, 16343, 30324, 16348, 30330, 151388, 29064, 22051, 35200, 22633, 16413, 30531, 16441, 26465, 16453, 13787, 30616, 16490, 16495, 23646, 30654, 30667, 22770, 30744, 28857, 30748, 16552, 30777, 30791, 30801, 30822, 33864, 152885, 31027, 26627, 31026, 16643, 16649, 31121, 31129, 36795, 31238, 36796, 16743, 31377, 16818, 31420, 33401, 16836, 31439, 31451, 16847, 20001, 31586, 31596, 31611, 31762, 31771, 16992, 17018, 31867, 31900, 17036, 31928, 17044, 31981, 36755, 28864, 134351, 32207, 32212, 32208, 32253, 32686, 32692, 29343, 17303, 32800, 32805, 31545, 32814, 32817, 32852, 15820, 22452, 28832, 32951, 33001, 17389, 33036, 29482, 33038, 33042, 30048, 33044, 17409, 15161, 33110, 33113, 33114, 17427, 22586, 33148, 33156, 17445, 33171, 17453, 33189, 22511, 33217, 33252, 33364, 17551, 33446, 33398, 33482, 33496, 33535, 17584, 33623, 38505, 27018, 33797, 28917, 33892, 24803, 33928, 17668, 33982, 34017, 34040, 34064, 34104, 34130, 17723, 34159, 34160, 34272, 17783, 34418, 34450, 34482, 34543, 38469, 34699, 17926, 17943, 34990, 35071, 35108, 35143, 35217, 162151, 35369, 35384, 35476, 35508, 35921, 36052, 36082, 36124, 18328, 22623, 36291, 18413, 20206, 36410, 21976, 22356, 36465, 22005, 36528, 18487, 36558, 36578, 36580, 36589, 36594, 36791, 36801, 36810, 36812, 36915, 39364, 18605, 39136, 37395, 18718, 37416, 37464, 37483, 37553, 37550, 37567, 37603, 37611, 37619, 37620, 37629, 37699, 37764, 37805, 18757, 18769, 40639, 37911, 21249, 37917, 37933, 37950, 18794, 37972, 38009, 38189, 38306, 18855, 38388, 38451, 18917, 26528, 18980, 38720, 18997, 38834, 38850, 22100, 19172, 24808, 39097, 19225, 39153, 22596, 39182, 39193, 20916, 39196, 39223, 39234, 39261, 39266, 19312, 39365, 19357, 39484, 39695, 31363, 39785, 39809, 39901, 39921, 39924, 19565, 39968, 14191, 138178, 40265, 39994, 40702, 22096, 40339, 40381, 40384, 40444, 38134, 36790, 40571, 40620, 40625, 40637, 40646, 38108, 40674, 40689, 40696, 31432, 40772, 131220, 131767, 132e3, 26906, 38083, 22956, 132311, 22592, 38081, 14265, 132565, 132629, 132726, 136890, 22359, 29043, 133826, 133837, 134079, 21610, 194619, 134091, 21662, 134139, 134203, 134227, 134245, 134268, 24807, 134285, 22138, 134325, 134365, 134381, 134511, 134578, 134600, 26965, 39983, 34725, 134660, 134670, 134871, 135056, 134957, 134771, 23584, 135100, 24075, 135260, 135247, 135286, 26398, 135291, 135304, 135318, 13895, 135359, 135379, 135471, 135483, 21348, 33965, 135907, 136053, 135990, 35713, 136567, 136729, 137155, 137159, 20088, 28859, 137261, 137578, 137773, 137797, 138282, 138352, 138412, 138952, 25283, 138965, 139029, 29080, 26709, 139333, 27113, 14024, 139900, 140247, 140282, 141098, 141425, 141647, 33533, 141671, 141715, 142037, 35237, 142056, 36768, 142094, 38840, 142143, 38983, 39613, 142412, null, 142472, 142519, 154600, 142600, 142610, 142775, 142741, 142914, 143220, 143308, 143411, 143462, 144159, 144350, 24497, 26184, 26303, 162425, 144743, 144883, 29185, 149946, 30679, 144922, 145174, 32391, 131910, 22709, 26382, 26904, 146087, 161367, 155618, 146961, 147129, 161278, 139418, 18640, 19128, 147737, 166554, 148206, 148237, 147515, 148276, 148374, 150085, 132554, 20946, 132625, 22943, 138920, 15294, 146687, 148484, 148694, 22408, 149108, 14747, 149295, 165352, 170441, 14178, 139715, 35678, 166734, 39382, 149522, 149755, 150037, 29193, 150208, 134264, 22885, 151205, 151430, 132985, 36570, 151596, 21135, 22335, 29041, 152217, 152601, 147274, 150183, 21948, 152646, 152686, 158546, 37332, 13427, 152895, 161330, 152926, 18200, 152930, 152934, 153543, 149823, 153693, 20582, 13563, 144332, 24798, 153859, 18300, 166216, 154286, 154505, 154630, 138640, 22433, 29009, 28598, 155906, 162834, 36950, 156082, 151450, 35682, 156674, 156746, 23899, 158711, 36662, 156804, 137500, 35562, 150006, 156808, 147439, 156946, 19392, 157119, 157365, 141083, 37989, 153569, 24981, 23079, 194765, 20411, 22201, 148769, 157436, 20074, 149812, 38486, 28047, 158909, 13848, 35191, 157593, 157806, 156689, 157790, 29151, 157895, 31554, 168128, 133649, 157990, 37124, 158009, 31301, 40432, 158202, 39462, 158253, 13919, 156777, 131105, 31107, 158260, 158555, 23852, 144665, 33743, 158621, 18128, 158884, 30011, 34917, 159150, 22710, 14108, 140685, 159819, 160205, 15444, 160384, 160389, 37505, 139642, 160395, 37680, 160486, 149968, 27705, 38047, 160848, 134904, 34855, 35061, 141606, 164979, 137137, 28344, 150058, 137248, 14756, 14009, 23568, 31203, 17727, 26294, 171181, 170148, 35139, 161740, 161880, 22230, 16607, 136714, 14753, 145199, 164072, 136133, 29101, 33638, 162269, 168360, 23143, 19639, 159919, 166315, 162301, 162314, 162571, 163174, 147834, 31555, 31102, 163849, 28597, 172767, 27139, 164632, 21410, 159239, 37823, 26678, 38749, 164207, 163875, 158133, 136173, 143919, 163912, 23941, 166960, 163971, 22293, 38947, 166217, 23979, 149896, 26046, 27093, 21458, 150181, 147329, 15377, 26422, 163984, 164084, 164142, 139169, 164175, 164233, 164271, 164378, 164614, 164655, 164746, 13770, 164968, 165546, 18682, 25574, 166230, 30728, 37461, 166328, 17394, 166375, 17375, 166376, 166726, 166868, 23032, 166921, 36619, 167877, 168172, 31569, 168208, 168252, 15863, 168286, 150218, 36816, 29327, 22155, 169191, 169449, 169392, 169400, 169778, 170193, 170313, 170346, 170435, 170536, 170766, 171354, 171419, 32415, 171768, 171811, 19620, 38215, 172691, 29090, 172799, 19857, 36882, 173515, 19868, 134300, 36798, 21953, 36794, 140464, 36793, 150163, 17673, 32383, 28502, 27313, 20202, 13540, 166700, 161949, 14138, 36480, 137205, 163876, 166764, 166809, 162366, 157359, 15851, 161365, 146615, 153141, 153942, 20122, 155265, 156248, 22207, 134765, 36366, 23405, 147080, 150686, 25566, 25296, 137206, 137339, 25904, 22061, 154698, 21530, 152337, 15814, 171416, 19581, 22050, 22046, 32585, 155352, 22901, 146752, 34672, 19996, 135146, 134473, 145082, 33047, 40286, 36120, 30267, 40005, 30286, 30649, 37701, 21554, 33096, 33527, 22053, 33074, 33816, 32957, 21994, 31074, 22083, 21526, 134813, 13774, 22021, 22001, 26353, 164578, 13869, 30004, 22e3, 21946, 21655, 21874, 134209, 134294, 24272, 151880, 134774, 142434, 134818, 40619, 32090, 21982, 135285, 25245, 38765, 21652, 36045, 29174, 37238, 25596, 25529, 25598, 21865, 142147, 40050, 143027, 20890, 13535, 134567, 20903, 21581, 21790, 21779, 30310, 36397, 157834, 30129, 32950, 34820, 34694, 35015, 33206, 33820, 135361, 17644, 29444, 149254, 23440, 33547, 157843, 22139, 141044, 163119, 147875, 163187, 159440, 160438, 37232, 135641, 37384, 146684, 173737, 134828, 134905, 29286, 138402, 18254, 151490, 163833, 135147, 16634, 40029, 25887, 142752, 18675, 149472, 171388, 135148, 134666, 24674, 161187, 135149, null, 155720, 135559, 29091, 32398, 40272, 19994, 19972, 13687, 23309, 27826, 21351, 13996, 14812, 21373, 13989, 149016, 22682, 150382, 33325, 21579, 22442, 154261, 133497, null, 14930, 140389, 29556, 171692, 19721, 39917, 146686, 171824, 19547, 151465, 169374, 171998, 33884, 146870, 160434, 157619, 145184, 25390, 32037, 147191, 146988, 14890, 36872, 21196, 15988, 13946, 17897, 132238, 30272, 23280, 134838, 30842, 163630, 22695, 16575, 22140, 39819, 23924, 30292, 173108, 40581, 19681, 30201, 14331, 24857, 143578, 148466, null, 22109, 135849, 22439, 149859, 171526, 21044, 159918, 13741, 27722, 40316, 31830, 39737, 22494, 137068, 23635, 25811, 169168, 156469, 160100, 34477, 134440, 159010, 150242, 134513, null, 20990, 139023, 23950, 38659, 138705, 40577, 36940, 31519, 39682, 23761, 31651, 25192, 25397, 39679, 31695, 39722, 31870, 39726, 31810, 31878, 39957, 31740, 39689, 40727, 39963, 149822, 40794, 21875, 23491, 20477, 40600, 20466, 21088, 15878, 21201, 22375, 20566, 22967, 24082, 38856, 40363, 36700, 21609, 38836, 39232, 38842, 21292, 24880, 26924, 21466, 39946, 40194, 19515, 38465, 27008, 20646, 30022, 137069, 39386, 21107, null, 37209, 38529, 37212, null, 37201, 167575, 25471, 159011, 27338, 22033, 37262, 30074, 25221, 132092, 29519, 31856, 154657, 146685, null, 149785, 30422, 39837, 20010, 134356, 33726, 34882, null, 23626, 27072, 20717, 22394, 21023, 24053, 20174, 27697, 131570, 20281, 21660, 21722, 21146, 36226, 13822, 24332, 13811, null, 27474, 37244, 40869, 39831, 38958, 39092, 39610, 40616, 40580, 29050, 31508, null, 27642, 34840, 32632, null, 22048, 173642, 36471, 40787, null, 36308, 36431, 40476, 36353, 25218, 164733, 36392, 36469, 31443, 150135, 31294, 30936, 27882, 35431, 30215, 166490, 40742, 27854, 34774, 30147, 172722, 30803, 194624, 36108, 29410, 29553, 35629, 29442, 29937, 36075, 150203, 34351, 24506, 34976, 17591, null, 137275, 159237, null, 35454, 140571, null, 24829, 30311, 39639, 40260, 37742, 39823, 34805, null, 34831, 36087, 29484, 38689, 39856, 13782, 29362, 19463, 31825, 39242, 155993, 24921, 19460, 40598, 24957, null, 22367, 24943, 25254, 25145, 25294, 14940, 25058, 21418, 144373, 25444, 26626, 13778, 23895, 166850, 36826, 167481, null, 20697, 138566, 30982, 21298, 38456, 134971, 16485, null, 30718, null, 31938, 155418, 31962, 31277, 32870, 32867, 32077, 29957, 29938, 35220, 33306, 26380, 32866, 160902, 32859, 29936, 33027, 30500, 35209, 157644, 30035, 159441, 34729, 34766, 33224, 34700, 35401, 36013, 35651, 30507, 29944, 34010, 13877, 27058, 36262, null, 35241, 29800, 28089, 34753, 147473, 29927, 15835, 29046, 24740, 24988, 15569, 29026, 24695, null, 32625, 166701, 29264, 24809, 19326, 21024, 15384, 146631, 155351, 161366, 152881, 137540, 135934, 170243, 159196, 159917, 23745, 156077, 166415, 145015, 131310, 157766, 151310, 17762, 23327, 156492, 40784, 40614, 156267, 12288, 65292, 12289, 12290, 65294, 8231, 65307, 65306, 65311, 65281, 65072, 8230, 8229, 65104, 65105, 65106, 183, 65108, 65109, 65110, 65111, 65372, 8211, 65073, 8212, 65075, 9588, 65076, 65103, 65288, 65289, 65077, 65078, 65371, 65373, 65079, 65080, 12308, 12309, 65081, 65082, 12304, 12305, 65083, 65084, 12298, 12299, 65085, 65086, 12296, 12297, 65087, 65088, 12300, 12301, 65089, 65090, 12302, 12303, 65091, 65092, 65113, 65114, 65115, 65116, 65117, 65118, 8216, 8217, 8220, 8221, 12317, 12318, 8245, 8242, 65283, 65286, 65290, 8251, 167, 12291, 9675, 9679, 9651, 9650, 9678, 9734, 9733, 9671, 9670, 9633, 9632, 9661, 9660, 12963, 8453, 175, 65507, 65343, 717, 65097, 65098, 65101, 65102, 65099, 65100, 65119, 65120, 65121, 65291, 65293, 215, 247, 177, 8730, 65308, 65310, 65309, 8806, 8807, 8800, 8734, 8786, 8801, 65122, 65123, 65124, 65125, 65126, 65374, 8745, 8746, 8869, 8736, 8735, 8895, 13266, 13265, 8747, 8750, 8757, 8756, 9792, 9794, 8853, 8857, 8593, 8595, 8592, 8594, 8598, 8599, 8601, 8600, 8741, 8739, 65295, 65340, 8725, 65128, 65284, 65509, 12306, 65504, 65505, 65285, 65312, 8451, 8457, 65129, 65130, 65131, 13269, 13212, 13213, 13214, 13262, 13217, 13198, 13199, 13252, 176, 20825, 20827, 20830, 20829, 20833, 20835, 21991, 29929, 31950, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9615, 9614, 9613, 9612, 9611, 9610, 9609, 9532, 9524, 9516, 9508, 9500, 9620, 9472, 9474, 9621, 9484, 9488, 9492, 9496, 9581, 9582, 9584, 9583, 9552, 9566, 9578, 9569, 9698, 9699, 9701, 9700, 9585, 9586, 9587, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 21313, 21316, 21317, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 729, 713, 714, 711, 715, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9224, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9249, 8364, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19968, 20057, 19969, 19971, 20035, 20061, 20102, 20108, 20154, 20799, 20837, 20843, 20960, 20992, 20993, 21147, 21269, 21313, 21340, 21448, 19977, 19979, 19976, 19978, 20011, 20024, 20961, 20037, 20040, 20063, 20062, 20110, 20129, 20800, 20995, 21242, 21315, 21449, 21475, 22303, 22763, 22805, 22823, 22899, 23376, 23377, 23379, 23544, 23567, 23586, 23608, 23665, 24029, 24037, 24049, 24050, 24051, 24062, 24178, 24318, 24331, 24339, 25165, 19985, 19984, 19981, 20013, 20016, 20025, 20043, 23609, 20104, 20113, 20117, 20114, 20116, 20130, 20161, 20160, 20163, 20166, 20167, 20173, 20170, 20171, 20164, 20803, 20801, 20839, 20845, 20846, 20844, 20887, 20982, 20998, 20999, 21e3, 21243, 21246, 21247, 21270, 21305, 21320, 21319, 21317, 21342, 21380, 21451, 21450, 21453, 22764, 22825, 22827, 22826, 22829, 23380, 23569, 23588, 23610, 23663, 24052, 24187, 24319, 24340, 24341, 24515, 25096, 25142, 25163, 25166, 25903, 25991, 26007, 26020, 26041, 26085, 26352, 26376, 26408, 27424, 27490, 27513, 27595, 27604, 27611, 27663, 27700, 28779, 29226, 29238, 29243, 29255, 29273, 29275, 29356, 29579, 19993, 19990, 19989, 19988, 19992, 20027, 20045, 20047, 20046, 20197, 20184, 20180, 20181, 20182, 20183, 20195, 20196, 20185, 20190, 20805, 20804, 20873, 20874, 20908, 20985, 20986, 20984, 21002, 21152, 21151, 21253, 21254, 21271, 21277, 20191, 21322, 21321, 21345, 21344, 21359, 21358, 21435, 21487, 21476, 21491, 21484, 21486, 21481, 21480, 21500, 21496, 21493, 21483, 21478, 21482, 21490, 21489, 21488, 21477, 21485, 21499, 22235, 22234, 22806, 22830, 22833, 22900, 22902, 23381, 23427, 23612, 24040, 24039, 24038, 24066, 24067, 24179, 24188, 24321, 24344, 24343, 24517, 25098, 25171, 25172, 25170, 25169, 26021, 26086, 26414, 26412, 26410, 26411, 26413, 27491, 27597, 27665, 27664, 27704, 27713, 27712, 27710, 29359, 29572, 29577, 29916, 29926, 29976, 29983, 29992, 29993, 3e4, 30001, 30002, 30003, 30091, 30333, 30382, 30399, 30446, 30683, 30690, 30707, 31034, 31166, 31348, 31435, 19998, 19999, 20050, 20051, 20073, 20121, 20132, 20134, 20133, 20223, 20233, 20249, 20234, 20245, 20237, 20240, 20241, 20239, 20210, 20214, 20219, 20208, 20211, 20221, 20225, 20235, 20809, 20807, 20806, 20808, 20840, 20849, 20877, 20912, 21015, 21009, 21010, 21006, 21014, 21155, 21256, 21281, 21280, 21360, 21361, 21513, 21519, 21516, 21514, 21520, 21505, 21515, 21508, 21521, 21517, 21512, 21507, 21518, 21510, 21522, 22240, 22238, 22237, 22323, 22320, 22312, 22317, 22316, 22319, 22313, 22809, 22810, 22839, 22840, 22916, 22904, 22915, 22909, 22905, 22914, 22913, 23383, 23384, 23431, 23432, 23429, 23433, 23546, 23574, 23673, 24030, 24070, 24182, 24180, 24335, 24347, 24537, 24534, 25102, 25100, 25101, 25104, 25187, 25179, 25176, 25910, 26089, 26088, 26092, 26093, 26354, 26355, 26377, 26429, 26420, 26417, 26421, 27425, 27492, 27515, 27670, 27741, 27735, 27737, 27743, 27744, 27728, 27733, 27745, 27739, 27725, 27726, 28784, 29279, 29277, 30334, 31481, 31859, 31992, 32566, 32650, 32701, 32769, 32771, 32780, 32786, 32819, 32895, 32905, 32907, 32908, 33251, 33258, 33267, 33276, 33292, 33307, 33311, 33390, 33394, 33406, 34411, 34880, 34892, 34915, 35199, 38433, 20018, 20136, 20301, 20303, 20295, 20311, 20318, 20276, 20315, 20309, 20272, 20304, 20305, 20285, 20282, 20280, 20291, 20308, 20284, 20294, 20323, 20316, 20320, 20271, 20302, 20278, 20313, 20317, 20296, 20314, 20812, 20811, 20813, 20853, 20918, 20919, 21029, 21028, 21033, 21034, 21032, 21163, 21161, 21162, 21164, 21283, 21363, 21365, 21533, 21549, 21534, 21566, 21542, 21582, 21543, 21574, 21571, 21555, 21576, 21570, 21531, 21545, 21578, 21561, 21563, 21560, 21550, 21557, 21558, 21536, 21564, 21568, 21553, 21547, 21535, 21548, 22250, 22256, 22244, 22251, 22346, 22353, 22336, 22349, 22343, 22350, 22334, 22352, 22351, 22331, 22767, 22846, 22941, 22930, 22952, 22942, 22947, 22937, 22934, 22925, 22948, 22931, 22922, 22949, 23389, 23388, 23386, 23387, 23436, 23435, 23439, 23596, 23616, 23617, 23615, 23614, 23696, 23697, 23700, 23692, 24043, 24076, 24207, 24199, 24202, 24311, 24324, 24351, 24420, 24418, 24439, 24441, 24536, 24524, 24535, 24525, 24561, 24555, 24568, 24554, 25106, 25105, 25220, 25239, 25238, 25216, 25206, 25225, 25197, 25226, 25212, 25214, 25209, 25203, 25234, 25199, 25240, 25198, 25237, 25235, 25233, 25222, 25913, 25915, 25912, 26097, 26356, 26463, 26446, 26447, 26448, 26449, 26460, 26454, 26462, 26441, 26438, 26464, 26451, 26455, 27493, 27599, 27714, 27742, 27801, 27777, 27784, 27785, 27781, 27803, 27754, 27770, 27792, 27760, 27788, 27752, 27798, 27794, 27773, 27779, 27762, 27774, 27764, 27782, 27766, 27789, 27796, 27800, 27778, 28790, 28796, 28797, 28792, 29282, 29281, 29280, 29380, 29378, 29590, 29996, 29995, 30007, 30008, 30338, 30447, 30691, 31169, 31168, 31167, 31350, 31995, 32597, 32918, 32915, 32925, 32920, 32923, 32922, 32946, 33391, 33426, 33419, 33421, 35211, 35282, 35328, 35895, 35910, 35925, 35997, 36196, 36208, 36275, 36523, 36554, 36763, 36784, 36802, 36806, 36805, 36804, 24033, 37009, 37026, 37034, 37030, 37027, 37193, 37318, 37324, 38450, 38446, 38449, 38442, 38444, 20006, 20054, 20083, 20107, 20123, 20126, 20139, 20140, 20335, 20381, 20365, 20339, 20351, 20332, 20379, 20363, 20358, 20355, 20336, 20341, 20360, 20329, 20347, 20374, 20350, 20367, 20369, 20346, 20820, 20818, 20821, 20841, 20855, 20854, 20856, 20925, 20989, 21051, 21048, 21047, 21050, 21040, 21038, 21046, 21057, 21182, 21179, 21330, 21332, 21331, 21329, 21350, 21367, 21368, 21369, 21462, 21460, 21463, 21619, 21621, 21654, 21624, 21653, 21632, 21627, 21623, 21636, 21650, 21638, 21628, 21648, 21617, 21622, 21644, 21658, 21602, 21608, 21643, 21629, 21646, 22266, 22403, 22391, 22378, 22377, 22369, 22374, 22372, 22396, 22812, 22857, 22855, 22856, 22852, 22868, 22974, 22971, 22996, 22969, 22958, 22993, 22982, 22992, 22989, 22987, 22995, 22986, 22959, 22963, 22994, 22981, 23391, 23396, 23395, 23447, 23450, 23448, 23452, 23449, 23451, 23578, 23624, 23621, 23622, 23735, 23713, 23736, 23721, 23723, 23729, 23731, 24088, 24090, 24086, 24085, 24091, 24081, 24184, 24218, 24215, 24220, 24213, 24214, 24310, 24358, 24359, 24361, 24448, 24449, 24447, 24444, 24541, 24544, 24573, 24565, 24575, 24591, 24596, 24623, 24629, 24598, 24618, 24597, 24609, 24615, 24617, 24619, 24603, 25110, 25109, 25151, 25150, 25152, 25215, 25289, 25292, 25284, 25279, 25282, 25273, 25298, 25307, 25259, 25299, 25300, 25291, 25288, 25256, 25277, 25276, 25296, 25305, 25287, 25293, 25269, 25306, 25265, 25304, 25302, 25303, 25286, 25260, 25294, 25918, 26023, 26044, 26106, 26132, 26131, 26124, 26118, 26114, 26126, 26112, 26127, 26133, 26122, 26119, 26381, 26379, 26477, 26507, 26517, 26481, 26524, 26483, 26487, 26503, 26525, 26519, 26479, 26480, 26495, 26505, 26494, 26512, 26485, 26522, 26515, 26492, 26474, 26482, 27427, 27494, 27495, 27519, 27667, 27675, 27875, 27880, 27891, 27825, 27852, 27877, 27827, 27837, 27838, 27836, 27874, 27819, 27861, 27859, 27832, 27844, 27833, 27841, 27822, 27863, 27845, 27889, 27839, 27835, 27873, 27867, 27850, 27820, 27887, 27868, 27862, 27872, 28821, 28814, 28818, 28810, 28825, 29228, 29229, 29240, 29256, 29287, 29289, 29376, 29390, 29401, 29399, 29392, 29609, 29608, 29599, 29611, 29605, 30013, 30109, 30105, 30106, 30340, 30402, 30450, 30452, 30693, 30717, 31038, 31040, 31041, 31177, 31176, 31354, 31353, 31482, 31998, 32596, 32652, 32651, 32773, 32954, 32933, 32930, 32945, 32929, 32939, 32937, 32948, 32938, 32943, 33253, 33278, 33293, 33459, 33437, 33433, 33453, 33469, 33439, 33465, 33457, 33452, 33445, 33455, 33464, 33443, 33456, 33470, 33463, 34382, 34417, 21021, 34920, 36555, 36814, 36820, 36817, 37045, 37048, 37041, 37046, 37319, 37329, 38263, 38272, 38428, 38464, 38463, 38459, 38468, 38466, 38585, 38632, 38738, 38750, 20127, 20141, 20142, 20449, 20405, 20399, 20415, 20448, 20433, 20431, 20445, 20419, 20406, 20440, 20447, 20426, 20439, 20398, 20432, 20420, 20418, 20442, 20430, 20446, 20407, 20823, 20882, 20881, 20896, 21070, 21059, 21066, 21069, 21068, 21067, 21063, 21191, 21193, 21187, 21185, 21261, 21335, 21371, 21402, 21467, 21676, 21696, 21672, 21710, 21705, 21688, 21670, 21683, 21703, 21698, 21693, 21674, 21697, 21700, 21704, 21679, 21675, 21681, 21691, 21673, 21671, 21695, 22271, 22402, 22411, 22432, 22435, 22434, 22478, 22446, 22419, 22869, 22865, 22863, 22862, 22864, 23004, 23e3, 23039, 23011, 23016, 23043, 23013, 23018, 23002, 23014, 23041, 23035, 23401, 23459, 23462, 23460, 23458, 23461, 23553, 23630, 23631, 23629, 23627, 23769, 23762, 24055, 24093, 24101, 24095, 24189, 24224, 24230, 24314, 24328, 24365, 24421, 24456, 24453, 24458, 24459, 24455, 24460, 24457, 24594, 24605, 24608, 24613, 24590, 24616, 24653, 24688, 24680, 24674, 24646, 24643, 24684, 24683, 24682, 24676, 25153, 25308, 25366, 25353, 25340, 25325, 25345, 25326, 25341, 25351, 25329, 25335, 25327, 25324, 25342, 25332, 25361, 25346, 25919, 25925, 26027, 26045, 26082, 26149, 26157, 26144, 26151, 26159, 26143, 26152, 26161, 26148, 26359, 26623, 26579, 26609, 26580, 26576, 26604, 26550, 26543, 26613, 26601, 26607, 26564, 26577, 26548, 26586, 26597, 26552, 26575, 26590, 26611, 26544, 26585, 26594, 26589, 26578, 27498, 27523, 27526, 27573, 27602, 27607, 27679, 27849, 27915, 27954, 27946, 27969, 27941, 27916, 27953, 27934, 27927, 27963, 27965, 27966, 27958, 27931, 27893, 27961, 27943, 27960, 27945, 27950, 27957, 27918, 27947, 28843, 28858, 28851, 28844, 28847, 28845, 28856, 28846, 28836, 29232, 29298, 29295, 29300, 29417, 29408, 29409, 29623, 29642, 29627, 29618, 29645, 29632, 29619, 29978, 29997, 30031, 30028, 30030, 30027, 30123, 30116, 30117, 30114, 30115, 30328, 30342, 30343, 30344, 30408, 30406, 30403, 30405, 30465, 30457, 30456, 30473, 30475, 30462, 30460, 30471, 30684, 30722, 30740, 30732, 30733, 31046, 31049, 31048, 31047, 31161, 31162, 31185, 31186, 31179, 31359, 31361, 31487, 31485, 31869, 32002, 32005, 32e3, 32009, 32007, 32004, 32006, 32568, 32654, 32703, 32772, 32784, 32781, 32785, 32822, 32982, 32997, 32986, 32963, 32964, 32972, 32993, 32987, 32974, 32990, 32996, 32989, 33268, 33314, 33511, 33539, 33541, 33507, 33499, 33510, 33540, 33509, 33538, 33545, 33490, 33495, 33521, 33537, 33500, 33492, 33489, 33502, 33491, 33503, 33519, 33542, 34384, 34425, 34427, 34426, 34893, 34923, 35201, 35284, 35336, 35330, 35331, 35998, 36e3, 36212, 36211, 36276, 36557, 36556, 36848, 36838, 36834, 36842, 36837, 36845, 36843, 36836, 36840, 37066, 37070, 37057, 37059, 37195, 37194, 37325, 38274, 38480, 38475, 38476, 38477, 38754, 38761, 38859, 38893, 38899, 38913, 39080, 39131, 39135, 39318, 39321, 20056, 20147, 20492, 20493, 20515, 20463, 20518, 20517, 20472, 20521, 20502, 20486, 20540, 20511, 20506, 20498, 20497, 20474, 20480, 20500, 20520, 20465, 20513, 20491, 20505, 20504, 20467, 20462, 20525, 20522, 20478, 20523, 20489, 20860, 20900, 20901, 20898, 20941, 20940, 20934, 20939, 21078, 21084, 21076, 21083, 21085, 21290, 21375, 21407, 21405, 21471, 21736, 21776, 21761, 21815, 21756, 21733, 21746, 21766, 21754, 21780, 21737, 21741, 21729, 21769, 21742, 21738, 21734, 21799, 21767, 21757, 21775, 22275, 22276, 22466, 22484, 22475, 22467, 22537, 22799, 22871, 22872, 22874, 23057, 23064, 23068, 23071, 23067, 23059, 23020, 23072, 23075, 23081, 23077, 23052, 23049, 23403, 23640, 23472, 23475, 23478, 23476, 23470, 23477, 23481, 23480, 23556, 23633, 23637, 23632, 23789, 23805, 23803, 23786, 23784, 23792, 23798, 23809, 23796, 24046, 24109, 24107, 24235, 24237, 24231, 24369, 24466, 24465, 24464, 24665, 24675, 24677, 24656, 24661, 24685, 24681, 24687, 24708, 24735, 24730, 24717, 24724, 24716, 24709, 24726, 25159, 25331, 25352, 25343, 25422, 25406, 25391, 25429, 25410, 25414, 25423, 25417, 25402, 25424, 25405, 25386, 25387, 25384, 25421, 25420, 25928, 25929, 26009, 26049, 26053, 26178, 26185, 26191, 26179, 26194, 26188, 26181, 26177, 26360, 26388, 26389, 26391, 26657, 26680, 26696, 26694, 26707, 26681, 26690, 26708, 26665, 26803, 26647, 26700, 26705, 26685, 26612, 26704, 26688, 26684, 26691, 26666, 26693, 26643, 26648, 26689, 27530, 27529, 27575, 27683, 27687, 27688, 27686, 27684, 27888, 28010, 28053, 28040, 28039, 28006, 28024, 28023, 27993, 28051, 28012, 28041, 28014, 27994, 28020, 28009, 28044, 28042, 28025, 28037, 28005, 28052, 28874, 28888, 28900, 28889, 28872, 28879, 29241, 29305, 29436, 29433, 29437, 29432, 29431, 29574, 29677, 29705, 29678, 29664, 29674, 29662, 30036, 30045, 30044, 30042, 30041, 30142, 30149, 30151, 30130, 30131, 30141, 30140, 30137, 30146, 30136, 30347, 30384, 30410, 30413, 30414, 30505, 30495, 30496, 30504, 30697, 30768, 30759, 30776, 30749, 30772, 30775, 30757, 30765, 30752, 30751, 30770, 31061, 31056, 31072, 31071, 31062, 31070, 31069, 31063, 31066, 31204, 31203, 31207, 31199, 31206, 31209, 31192, 31364, 31368, 31449, 31494, 31505, 31881, 32033, 32023, 32011, 32010, 32032, 32034, 32020, 32016, 32021, 32026, 32028, 32013, 32025, 32027, 32570, 32607, 32660, 32709, 32705, 32774, 32792, 32789, 32793, 32791, 32829, 32831, 33009, 33026, 33008, 33029, 33005, 33012, 33030, 33016, 33011, 33032, 33021, 33034, 33020, 33007, 33261, 33260, 33280, 33296, 33322, 33323, 33320, 33324, 33467, 33579, 33618, 33620, 33610, 33592, 33616, 33609, 33589, 33588, 33615, 33586, 33593, 33590, 33559, 33600, 33585, 33576, 33603, 34388, 34442, 34474, 34451, 34468, 34473, 34444, 34467, 34460, 34928, 34935, 34945, 34946, 34941, 34937, 35352, 35344, 35342, 35340, 35349, 35338, 35351, 35347, 35350, 35343, 35345, 35912, 35962, 35961, 36001, 36002, 36215, 36524, 36562, 36564, 36559, 36785, 36865, 36870, 36855, 36864, 36858, 36852, 36867, 36861, 36869, 36856, 37013, 37089, 37085, 37090, 37202, 37197, 37196, 37336, 37341, 37335, 37340, 37337, 38275, 38498, 38499, 38497, 38491, 38493, 38500, 38488, 38494, 38587, 39138, 39340, 39592, 39640, 39717, 39730, 39740, 20094, 20602, 20605, 20572, 20551, 20547, 20556, 20570, 20553, 20581, 20598, 20558, 20565, 20597, 20596, 20599, 20559, 20495, 20591, 20589, 20828, 20885, 20976, 21098, 21103, 21202, 21209, 21208, 21205, 21264, 21263, 21273, 21311, 21312, 21310, 21443, 26364, 21830, 21866, 21862, 21828, 21854, 21857, 21827, 21834, 21809, 21846, 21839, 21845, 21807, 21860, 21816, 21806, 21852, 21804, 21859, 21811, 21825, 21847, 22280, 22283, 22281, 22495, 22533, 22538, 22534, 22496, 22500, 22522, 22530, 22581, 22519, 22521, 22816, 22882, 23094, 23105, 23113, 23142, 23146, 23104, 23100, 23138, 23130, 23110, 23114, 23408, 23495, 23493, 23492, 23490, 23487, 23494, 23561, 23560, 23559, 23648, 23644, 23645, 23815, 23814, 23822, 23835, 23830, 23842, 23825, 23849, 23828, 23833, 23844, 23847, 23831, 24034, 24120, 24118, 24115, 24119, 24247, 24248, 24246, 24245, 24254, 24373, 24375, 24407, 24428, 24425, 24427, 24471, 24473, 24478, 24472, 24481, 24480, 24476, 24703, 24739, 24713, 24736, 24744, 24779, 24756, 24806, 24765, 24773, 24763, 24757, 24796, 24764, 24792, 24789, 24774, 24799, 24760, 24794, 24775, 25114, 25115, 25160, 25504, 25511, 25458, 25494, 25506, 25509, 25463, 25447, 25496, 25514, 25457, 25513, 25481, 25475, 25499, 25451, 25512, 25476, 25480, 25497, 25505, 25516, 25490, 25487, 25472, 25467, 25449, 25448, 25466, 25949, 25942, 25937, 25945, 25943, 21855, 25935, 25944, 25941, 25940, 26012, 26011, 26028, 26063, 26059, 26060, 26062, 26205, 26202, 26212, 26216, 26214, 26206, 26361, 21207, 26395, 26753, 26799, 26786, 26771, 26805, 26751, 26742, 26801, 26791, 26775, 26800, 26755, 26820, 26797, 26758, 26757, 26772, 26781, 26792, 26783, 26785, 26754, 27442, 27578, 27627, 27628, 27691, 28046, 28092, 28147, 28121, 28082, 28129, 28108, 28132, 28155, 28154, 28165, 28103, 28107, 28079, 28113, 28078, 28126, 28153, 28088, 28151, 28149, 28101, 28114, 28186, 28085, 28122, 28139, 28120, 28138, 28145, 28142, 28136, 28102, 28100, 28074, 28140, 28095, 28134, 28921, 28937, 28938, 28925, 28911, 29245, 29309, 29313, 29468, 29467, 29462, 29459, 29465, 29575, 29701, 29706, 29699, 29702, 29694, 29709, 29920, 29942, 29943, 29980, 29986, 30053, 30054, 30050, 30064, 30095, 30164, 30165, 30133, 30154, 30157, 30350, 30420, 30418, 30427, 30519, 30526, 30524, 30518, 30520, 30522, 30827, 30787, 30798, 31077, 31080, 31085, 31227, 31378, 31381, 31520, 31528, 31515, 31532, 31526, 31513, 31518, 31534, 31890, 31895, 31893, 32070, 32067, 32113, 32046, 32057, 32060, 32064, 32048, 32051, 32068, 32047, 32066, 32050, 32049, 32573, 32670, 32666, 32716, 32718, 32722, 32796, 32842, 32838, 33071, 33046, 33059, 33067, 33065, 33072, 33060, 33282, 33333, 33335, 33334, 33337, 33678, 33694, 33688, 33656, 33698, 33686, 33725, 33707, 33682, 33674, 33683, 33673, 33696, 33655, 33659, 33660, 33670, 33703, 34389, 24426, 34503, 34496, 34486, 34500, 34485, 34502, 34507, 34481, 34479, 34505, 34899, 34974, 34952, 34987, 34962, 34966, 34957, 34955, 35219, 35215, 35370, 35357, 35363, 35365, 35377, 35373, 35359, 35355, 35362, 35913, 35930, 36009, 36012, 36011, 36008, 36010, 36007, 36199, 36198, 36286, 36282, 36571, 36575, 36889, 36877, 36890, 36887, 36899, 36895, 36893, 36880, 36885, 36894, 36896, 36879, 36898, 36886, 36891, 36884, 37096, 37101, 37117, 37207, 37326, 37365, 37350, 37347, 37351, 37357, 37353, 38281, 38506, 38517, 38515, 38520, 38512, 38516, 38518, 38519, 38508, 38592, 38634, 38633, 31456, 31455, 38914, 38915, 39770, 40165, 40565, 40575, 40613, 40635, 20642, 20621, 20613, 20633, 20625, 20608, 20630, 20632, 20634, 26368, 20977, 21106, 21108, 21109, 21097, 21214, 21213, 21211, 21338, 21413, 21883, 21888, 21927, 21884, 21898, 21917, 21912, 21890, 21916, 21930, 21908, 21895, 21899, 21891, 21939, 21934, 21919, 21822, 21938, 21914, 21947, 21932, 21937, 21886, 21897, 21931, 21913, 22285, 22575, 22570, 22580, 22564, 22576, 22577, 22561, 22557, 22560, 22777, 22778, 22880, 23159, 23194, 23167, 23186, 23195, 23207, 23411, 23409, 23506, 23500, 23507, 23504, 23562, 23563, 23601, 23884, 23888, 23860, 23879, 24061, 24133, 24125, 24128, 24131, 24190, 24266, 24257, 24258, 24260, 24380, 24429, 24489, 24490, 24488, 24785, 24801, 24754, 24758, 24800, 24860, 24867, 24826, 24853, 24816, 24827, 24820, 24936, 24817, 24846, 24822, 24841, 24832, 24850, 25119, 25161, 25507, 25484, 25551, 25536, 25577, 25545, 25542, 25549, 25554, 25571, 25552, 25569, 25558, 25581, 25582, 25462, 25588, 25578, 25563, 25682, 25562, 25593, 25950, 25958, 25954, 25955, 26001, 26e3, 26031, 26222, 26224, 26228, 26230, 26223, 26257, 26234, 26238, 26231, 26366, 26367, 26399, 26397, 26874, 26837, 26848, 26840, 26839, 26885, 26847, 26869, 26862, 26855, 26873, 26834, 26866, 26851, 26827, 26829, 26893, 26898, 26894, 26825, 26842, 26990, 26875, 27454, 27450, 27453, 27544, 27542, 27580, 27631, 27694, 27695, 27692, 28207, 28216, 28244, 28193, 28210, 28263, 28234, 28192, 28197, 28195, 28187, 28251, 28248, 28196, 28246, 28270, 28205, 28198, 28271, 28212, 28237, 28218, 28204, 28227, 28189, 28222, 28363, 28297, 28185, 28238, 28259, 28228, 28274, 28265, 28255, 28953, 28954, 28966, 28976, 28961, 28982, 29038, 28956, 29260, 29316, 29312, 29494, 29477, 29492, 29481, 29754, 29738, 29747, 29730, 29733, 29749, 29750, 29748, 29743, 29723, 29734, 29736, 29989, 29990, 30059, 30058, 30178, 30171, 30179, 30169, 30168, 30174, 30176, 30331, 30332, 30358, 30355, 30388, 30428, 30543, 30701, 30813, 30828, 30831, 31245, 31240, 31243, 31237, 31232, 31384, 31383, 31382, 31461, 31459, 31561, 31574, 31558, 31568, 31570, 31572, 31565, 31563, 31567, 31569, 31903, 31909, 32094, 32080, 32104, 32085, 32043, 32110, 32114, 32097, 32102, 32098, 32112, 32115, 21892, 32724, 32725, 32779, 32850, 32901, 33109, 33108, 33099, 33105, 33102, 33081, 33094, 33086, 33100, 33107, 33140, 33298, 33308, 33769, 33795, 33784, 33805, 33760, 33733, 33803, 33729, 33775, 33777, 33780, 33879, 33802, 33776, 33804, 33740, 33789, 33778, 33738, 33848, 33806, 33796, 33756, 33799, 33748, 33759, 34395, 34527, 34521, 34541, 34516, 34523, 34532, 34512, 34526, 34903, 35009, 35010, 34993, 35203, 35222, 35387, 35424, 35413, 35422, 35388, 35393, 35412, 35419, 35408, 35398, 35380, 35386, 35382, 35414, 35937, 35970, 36015, 36028, 36019, 36029, 36033, 36027, 36032, 36020, 36023, 36022, 36031, 36024, 36234, 36229, 36225, 36302, 36317, 36299, 36314, 36305, 36300, 36315, 36294, 36603, 36600, 36604, 36764, 36910, 36917, 36913, 36920, 36914, 36918, 37122, 37109, 37129, 37118, 37219, 37221, 37327, 37396, 37397, 37411, 37385, 37406, 37389, 37392, 37383, 37393, 38292, 38287, 38283, 38289, 38291, 38290, 38286, 38538, 38542, 38539, 38525, 38533, 38534, 38541, 38514, 38532, 38593, 38597, 38596, 38598, 38599, 38639, 38642, 38860, 38917, 38918, 38920, 39143, 39146, 39151, 39145, 39154, 39149, 39342, 39341, 40643, 40653, 40657, 20098, 20653, 20661, 20658, 20659, 20677, 20670, 20652, 20663, 20667, 20655, 20679, 21119, 21111, 21117, 21215, 21222, 21220, 21218, 21219, 21295, 21983, 21992, 21971, 21990, 21966, 21980, 21959, 21969, 21987, 21988, 21999, 21978, 21985, 21957, 21958, 21989, 21961, 22290, 22291, 22622, 22609, 22616, 22615, 22618, 22612, 22635, 22604, 22637, 22602, 22626, 22610, 22603, 22887, 23233, 23241, 23244, 23230, 23229, 23228, 23219, 23234, 23218, 23913, 23919, 24140, 24185, 24265, 24264, 24338, 24409, 24492, 24494, 24858, 24847, 24904, 24863, 24819, 24859, 24825, 24833, 24840, 24910, 24908, 24900, 24909, 24894, 24884, 24871, 24845, 24838, 24887, 25121, 25122, 25619, 25662, 25630, 25642, 25645, 25661, 25644, 25615, 25628, 25620, 25613, 25654, 25622, 25623, 25606, 25964, 26015, 26032, 26263, 26249, 26247, 26248, 26262, 26244, 26264, 26253, 26371, 27028, 26989, 26970, 26999, 26976, 26964, 26997, 26928, 27010, 26954, 26984, 26987, 26974, 26963, 27001, 27014, 26973, 26979, 26971, 27463, 27506, 27584, 27583, 27603, 27645, 28322, 28335, 28371, 28342, 28354, 28304, 28317, 28359, 28357, 28325, 28312, 28348, 28346, 28331, 28369, 28310, 28316, 28356, 28372, 28330, 28327, 28340, 29006, 29017, 29033, 29028, 29001, 29031, 29020, 29036, 29030, 29004, 29029, 29022, 28998, 29032, 29014, 29242, 29266, 29495, 29509, 29503, 29502, 29807, 29786, 29781, 29791, 29790, 29761, 29759, 29785, 29787, 29788, 30070, 30072, 30208, 30192, 30209, 30194, 30193, 30202, 30207, 30196, 30195, 30430, 30431, 30555, 30571, 30566, 30558, 30563, 30585, 30570, 30572, 30556, 30565, 30568, 30562, 30702, 30862, 30896, 30871, 30872, 30860, 30857, 30844, 30865, 30867, 30847, 31098, 31103, 31105, 33836, 31165, 31260, 31258, 31264, 31252, 31263, 31262, 31391, 31392, 31607, 31680, 31584, 31598, 31591, 31921, 31923, 31925, 32147, 32121, 32145, 32129, 32143, 32091, 32622, 32617, 32618, 32626, 32681, 32680, 32676, 32854, 32856, 32902, 32900, 33137, 33136, 33144, 33125, 33134, 33139, 33131, 33145, 33146, 33126, 33285, 33351, 33922, 33911, 33853, 33841, 33909, 33894, 33899, 33865, 33900, 33883, 33852, 33845, 33889, 33891, 33897, 33901, 33862, 34398, 34396, 34399, 34553, 34579, 34568, 34567, 34560, 34558, 34555, 34562, 34563, 34566, 34570, 34905, 35039, 35028, 35033, 35036, 35032, 35037, 35041, 35018, 35029, 35026, 35228, 35299, 35435, 35442, 35443, 35430, 35433, 35440, 35463, 35452, 35427, 35488, 35441, 35461, 35437, 35426, 35438, 35436, 35449, 35451, 35390, 35432, 35938, 35978, 35977, 36042, 36039, 36040, 36036, 36018, 36035, 36034, 36037, 36321, 36319, 36328, 36335, 36339, 36346, 36330, 36324, 36326, 36530, 36611, 36617, 36606, 36618, 36767, 36786, 36939, 36938, 36947, 36930, 36948, 36924, 36949, 36944, 36935, 36943, 36942, 36941, 36945, 36926, 36929, 37138, 37143, 37228, 37226, 37225, 37321, 37431, 37463, 37432, 37437, 37440, 37438, 37467, 37451, 37476, 37457, 37428, 37449, 37453, 37445, 37433, 37439, 37466, 38296, 38552, 38548, 38549, 38605, 38603, 38601, 38602, 38647, 38651, 38649, 38646, 38742, 38772, 38774, 38928, 38929, 38931, 38922, 38930, 38924, 39164, 39156, 39165, 39166, 39347, 39345, 39348, 39649, 40169, 40578, 40718, 40723, 40736, 20711, 20718, 20709, 20694, 20717, 20698, 20693, 20687, 20689, 20721, 20686, 20713, 20834, 20979, 21123, 21122, 21297, 21421, 22014, 22016, 22043, 22039, 22013, 22036, 22022, 22025, 22029, 22030, 22007, 22038, 22047, 22024, 22032, 22006, 22296, 22294, 22645, 22654, 22659, 22675, 22666, 22649, 22661, 22653, 22781, 22821, 22818, 22820, 22890, 22889, 23265, 23270, 23273, 23255, 23254, 23256, 23267, 23413, 23518, 23527, 23521, 23525, 23526, 23528, 23522, 23524, 23519, 23565, 23650, 23940, 23943, 24155, 24163, 24149, 24151, 24148, 24275, 24278, 24330, 24390, 24432, 24505, 24903, 24895, 24907, 24951, 24930, 24931, 24927, 24922, 24920, 24949, 25130, 25735, 25688, 25684, 25764, 25720, 25695, 25722, 25681, 25703, 25652, 25709, 25723, 25970, 26017, 26071, 26070, 26274, 26280, 26269, 27036, 27048, 27029, 27073, 27054, 27091, 27083, 27035, 27063, 27067, 27051, 27060, 27088, 27085, 27053, 27084, 27046, 27075, 27043, 27465, 27468, 27699, 28467, 28436, 28414, 28435, 28404, 28457, 28478, 28448, 28460, 28431, 28418, 28450, 28415, 28399, 28422, 28465, 28472, 28466, 28451, 28437, 28459, 28463, 28552, 28458, 28396, 28417, 28402, 28364, 28407, 29076, 29081, 29053, 29066, 29060, 29074, 29246, 29330, 29334, 29508, 29520, 29796, 29795, 29802, 29808, 29805, 29956, 30097, 30247, 30221, 30219, 30217, 30227, 30433, 30435, 30596, 30589, 30591, 30561, 30913, 30879, 30887, 30899, 30889, 30883, 31118, 31119, 31117, 31278, 31281, 31402, 31401, 31469, 31471, 31649, 31637, 31627, 31605, 31639, 31645, 31636, 31631, 31672, 31623, 31620, 31929, 31933, 31934, 32187, 32176, 32156, 32189, 32190, 32160, 32202, 32180, 32178, 32177, 32186, 32162, 32191, 32181, 32184, 32173, 32210, 32199, 32172, 32624, 32736, 32737, 32735, 32862, 32858, 32903, 33104, 33152, 33167, 33160, 33162, 33151, 33154, 33255, 33274, 33287, 33300, 33310, 33355, 33993, 33983, 33990, 33988, 33945, 33950, 33970, 33948, 33995, 33976, 33984, 34003, 33936, 33980, 34001, 33994, 34623, 34588, 34619, 34594, 34597, 34612, 34584, 34645, 34615, 34601, 35059, 35074, 35060, 35065, 35064, 35069, 35048, 35098, 35055, 35494, 35468, 35486, 35491, 35469, 35489, 35475, 35492, 35498, 35493, 35496, 35480, 35473, 35482, 35495, 35946, 35981, 35980, 36051, 36049, 36050, 36203, 36249, 36245, 36348, 36628, 36626, 36629, 36627, 36771, 36960, 36952, 36956, 36963, 36953, 36958, 36962, 36957, 36955, 37145, 37144, 37150, 37237, 37240, 37239, 37236, 37496, 37504, 37509, 37528, 37526, 37499, 37523, 37532, 37544, 37500, 37521, 38305, 38312, 38313, 38307, 38309, 38308, 38553, 38556, 38555, 38604, 38610, 38656, 38780, 38789, 38902, 38935, 38936, 39087, 39089, 39171, 39173, 39180, 39177, 39361, 39599, 39600, 39654, 39745, 39746, 40180, 40182, 40179, 40636, 40763, 40778, 20740, 20736, 20731, 20725, 20729, 20738, 20744, 20745, 20741, 20956, 21127, 21128, 21129, 21133, 21130, 21232, 21426, 22062, 22075, 22073, 22066, 22079, 22068, 22057, 22099, 22094, 22103, 22132, 22070, 22063, 22064, 22656, 22687, 22686, 22707, 22684, 22702, 22697, 22694, 22893, 23305, 23291, 23307, 23285, 23308, 23304, 23534, 23532, 23529, 23531, 23652, 23653, 23965, 23956, 24162, 24159, 24161, 24290, 24282, 24287, 24285, 24291, 24288, 24392, 24433, 24503, 24501, 24950, 24935, 24942, 24925, 24917, 24962, 24956, 24944, 24939, 24958, 24999, 24976, 25003, 24974, 25004, 24986, 24996, 24980, 25006, 25134, 25705, 25711, 25721, 25758, 25778, 25736, 25744, 25776, 25765, 25747, 25749, 25769, 25746, 25774, 25773, 25771, 25754, 25772, 25753, 25762, 25779, 25973, 25975, 25976, 26286, 26283, 26292, 26289, 27171, 27167, 27112, 27137, 27166, 27161, 27133, 27169, 27155, 27146, 27123, 27138, 27141, 27117, 27153, 27472, 27470, 27556, 27589, 27590, 28479, 28540, 28548, 28497, 28518, 28500, 28550, 28525, 28507, 28536, 28526, 28558, 28538, 28528, 28516, 28567, 28504, 28373, 28527, 28512, 28511, 29087, 29100, 29105, 29096, 29270, 29339, 29518, 29527, 29801, 29835, 29827, 29822, 29824, 30079, 30240, 30249, 30239, 30244, 30246, 30241, 30242, 30362, 30394, 30436, 30606, 30599, 30604, 30609, 30603, 30923, 30917, 30906, 30922, 30910, 30933, 30908, 30928, 31295, 31292, 31296, 31293, 31287, 31291, 31407, 31406, 31661, 31665, 31684, 31668, 31686, 31687, 31681, 31648, 31692, 31946, 32224, 32244, 32239, 32251, 32216, 32236, 32221, 32232, 32227, 32218, 32222, 32233, 32158, 32217, 32242, 32249, 32629, 32631, 32687, 32745, 32806, 33179, 33180, 33181, 33184, 33178, 33176, 34071, 34109, 34074, 34030, 34092, 34093, 34067, 34065, 34083, 34081, 34068, 34028, 34085, 34047, 34054, 34690, 34676, 34678, 34656, 34662, 34680, 34664, 34649, 34647, 34636, 34643, 34907, 34909, 35088, 35079, 35090, 35091, 35093, 35082, 35516, 35538, 35527, 35524, 35477, 35531, 35576, 35506, 35529, 35522, 35519, 35504, 35542, 35533, 35510, 35513, 35547, 35916, 35918, 35948, 36064, 36062, 36070, 36068, 36076, 36077, 36066, 36067, 36060, 36074, 36065, 36205, 36255, 36259, 36395, 36368, 36381, 36386, 36367, 36393, 36383, 36385, 36382, 36538, 36637, 36635, 36639, 36649, 36646, 36650, 36636, 36638, 36645, 36969, 36974, 36968, 36973, 36983, 37168, 37165, 37159, 37169, 37255, 37257, 37259, 37251, 37573, 37563, 37559, 37610, 37548, 37604, 37569, 37555, 37564, 37586, 37575, 37616, 37554, 38317, 38321, 38660, 38662, 38663, 38665, 38752, 38797, 38795, 38799, 38945, 38955, 38940, 39091, 39178, 39187, 39186, 39192, 39389, 39376, 39391, 39387, 39377, 39381, 39378, 39385, 39607, 39662, 39663, 39719, 39749, 39748, 39799, 39791, 40198, 40201, 40195, 40617, 40638, 40654, 22696, 40786, 20754, 20760, 20756, 20752, 20757, 20864, 20906, 20957, 21137, 21139, 21235, 22105, 22123, 22137, 22121, 22116, 22136, 22122, 22120, 22117, 22129, 22127, 22124, 22114, 22134, 22721, 22718, 22727, 22725, 22894, 23325, 23348, 23416, 23536, 23566, 24394, 25010, 24977, 25001, 24970, 25037, 25014, 25022, 25034, 25032, 25136, 25797, 25793, 25803, 25787, 25788, 25818, 25796, 25799, 25794, 25805, 25791, 25810, 25812, 25790, 25972, 26310, 26313, 26297, 26308, 26311, 26296, 27197, 27192, 27194, 27225, 27243, 27224, 27193, 27204, 27234, 27233, 27211, 27207, 27189, 27231, 27208, 27481, 27511, 27653, 28610, 28593, 28577, 28611, 28580, 28609, 28583, 28595, 28608, 28601, 28598, 28582, 28576, 28596, 29118, 29129, 29136, 29138, 29128, 29141, 29113, 29134, 29145, 29148, 29123, 29124, 29544, 29852, 29859, 29848, 29855, 29854, 29922, 29964, 29965, 30260, 30264, 30266, 30439, 30437, 30624, 30622, 30623, 30629, 30952, 30938, 30956, 30951, 31142, 31309, 31310, 31302, 31308, 31307, 31418, 31705, 31761, 31689, 31716, 31707, 31713, 31721, 31718, 31957, 31958, 32266, 32273, 32264, 32283, 32291, 32286, 32285, 32265, 32272, 32633, 32690, 32752, 32753, 32750, 32808, 33203, 33193, 33192, 33275, 33288, 33368, 33369, 34122, 34137, 34120, 34152, 34153, 34115, 34121, 34157, 34154, 34142, 34691, 34719, 34718, 34722, 34701, 34913, 35114, 35122, 35109, 35115, 35105, 35242, 35238, 35558, 35578, 35563, 35569, 35584, 35548, 35559, 35566, 35582, 35585, 35586, 35575, 35565, 35571, 35574, 35580, 35947, 35949, 35987, 36084, 36420, 36401, 36404, 36418, 36409, 36405, 36667, 36655, 36664, 36659, 36776, 36774, 36981, 36980, 36984, 36978, 36988, 36986, 37172, 37266, 37664, 37686, 37624, 37683, 37679, 37666, 37628, 37675, 37636, 37658, 37648, 37670, 37665, 37653, 37678, 37657, 38331, 38567, 38568, 38570, 38613, 38670, 38673, 38678, 38669, 38675, 38671, 38747, 38748, 38758, 38808, 38960, 38968, 38971, 38967, 38957, 38969, 38948, 39184, 39208, 39198, 39195, 39201, 39194, 39405, 39394, 39409, 39608, 39612, 39675, 39661, 39720, 39825, 40213, 40227, 40230, 40232, 40210, 40219, 40664, 40660, 40845, 40860, 20778, 20767, 20769, 20786, 21237, 22158, 22144, 22160, 22149, 22151, 22159, 22741, 22739, 22737, 22734, 23344, 23338, 23332, 23418, 23607, 23656, 23996, 23994, 23997, 23992, 24171, 24396, 24509, 25033, 25026, 25031, 25062, 25035, 25138, 25140, 25806, 25802, 25816, 25824, 25840, 25830, 25836, 25841, 25826, 25837, 25986, 25987, 26329, 26326, 27264, 27284, 27268, 27298, 27292, 27355, 27299, 27262, 27287, 27280, 27296, 27484, 27566, 27610, 27656, 28632, 28657, 28639, 28640, 28635, 28644, 28651, 28655, 28544, 28652, 28641, 28649, 28629, 28654, 28656, 29159, 29151, 29166, 29158, 29157, 29165, 29164, 29172, 29152, 29237, 29254, 29552, 29554, 29865, 29872, 29862, 29864, 30278, 30274, 30284, 30442, 30643, 30634, 30640, 30636, 30631, 30637, 30703, 30967, 30970, 30964, 30959, 30977, 31143, 31146, 31319, 31423, 31751, 31757, 31742, 31735, 31756, 31712, 31968, 31964, 31966, 31970, 31967, 31961, 31965, 32302, 32318, 32326, 32311, 32306, 32323, 32299, 32317, 32305, 32325, 32321, 32308, 32313, 32328, 32309, 32319, 32303, 32580, 32755, 32764, 32881, 32882, 32880, 32879, 32883, 33222, 33219, 33210, 33218, 33216, 33215, 33213, 33225, 33214, 33256, 33289, 33393, 34218, 34180, 34174, 34204, 34193, 34196, 34223, 34203, 34183, 34216, 34186, 34407, 34752, 34769, 34739, 34770, 34758, 34731, 34747, 34746, 34760, 34763, 35131, 35126, 35140, 35128, 35133, 35244, 35598, 35607, 35609, 35611, 35594, 35616, 35613, 35588, 35600, 35905, 35903, 35955, 36090, 36093, 36092, 36088, 36091, 36264, 36425, 36427, 36424, 36426, 36676, 36670, 36674, 36677, 36671, 36991, 36989, 36996, 36993, 36994, 36992, 37177, 37283, 37278, 37276, 37709, 37762, 37672, 37749, 37706, 37733, 37707, 37656, 37758, 37740, 37723, 37744, 37722, 37716, 38346, 38347, 38348, 38344, 38342, 38577, 38584, 38614, 38684, 38686, 38816, 38867, 38982, 39094, 39221, 39425, 39423, 39854, 39851, 39850, 39853, 40251, 40255, 40587, 40655, 40670, 40668, 40669, 40667, 40766, 40779, 21474, 22165, 22190, 22745, 22744, 23352, 24413, 25059, 25139, 25844, 25842, 25854, 25862, 25850, 25851, 25847, 26039, 26332, 26406, 27315, 27308, 27331, 27323, 27320, 27330, 27310, 27311, 27487, 27512, 27567, 28681, 28683, 28670, 28678, 28666, 28689, 28687, 29179, 29180, 29182, 29176, 29559, 29557, 29863, 29887, 29973, 30294, 30296, 30290, 30653, 30655, 30651, 30652, 30990, 31150, 31329, 31330, 31328, 31428, 31429, 31787, 31783, 31786, 31774, 31779, 31777, 31975, 32340, 32341, 32350, 32346, 32353, 32338, 32345, 32584, 32761, 32763, 32887, 32886, 33229, 33231, 33290, 34255, 34217, 34253, 34256, 34249, 34224, 34234, 34233, 34214, 34799, 34796, 34802, 34784, 35206, 35250, 35316, 35624, 35641, 35628, 35627, 35920, 36101, 36441, 36451, 36454, 36452, 36447, 36437, 36544, 36681, 36685, 36999, 36995, 37e3, 37291, 37292, 37328, 37780, 37770, 37782, 37794, 37811, 37806, 37804, 37808, 37784, 37786, 37783, 38356, 38358, 38352, 38357, 38626, 38620, 38617, 38619, 38622, 38692, 38819, 38822, 38829, 38905, 38989, 38991, 38988, 38990, 38995, 39098, 39230, 39231, 39229, 39214, 39333, 39438, 39617, 39683, 39686, 39759, 39758, 39757, 39882, 39881, 39933, 39880, 39872, 40273, 40285, 40288, 40672, 40725, 40748, 20787, 22181, 22750, 22751, 22754, 23541, 40848, 24300, 25074, 25079, 25078, 25077, 25856, 25871, 26336, 26333, 27365, 27357, 27354, 27347, 28699, 28703, 28712, 28698, 28701, 28693, 28696, 29190, 29197, 29272, 29346, 29560, 29562, 29885, 29898, 29923, 30087, 30086, 30303, 30305, 30663, 31001, 31153, 31339, 31337, 31806, 31807, 31800, 31805, 31799, 31808, 32363, 32365, 32377, 32361, 32362, 32645, 32371, 32694, 32697, 32696, 33240, 34281, 34269, 34282, 34261, 34276, 34277, 34295, 34811, 34821, 34829, 34809, 34814, 35168, 35167, 35158, 35166, 35649, 35676, 35672, 35657, 35674, 35662, 35663, 35654, 35673, 36104, 36106, 36476, 36466, 36487, 36470, 36460, 36474, 36468, 36692, 36686, 36781, 37002, 37003, 37297, 37294, 37857, 37841, 37855, 37827, 37832, 37852, 37853, 37846, 37858, 37837, 37848, 37860, 37847, 37864, 38364, 38580, 38627, 38698, 38695, 38753, 38876, 38907, 39006, 39e3, 39003, 39100, 39237, 39241, 39446, 39449, 39693, 39912, 39911, 39894, 39899, 40329, 40289, 40306, 40298, 40300, 40594, 40599, 40595, 40628, 21240, 22184, 22199, 22198, 22196, 22204, 22756, 23360, 23363, 23421, 23542, 24009, 25080, 25082, 25880, 25876, 25881, 26342, 26407, 27372, 28734, 28720, 28722, 29200, 29563, 29903, 30306, 30309, 31014, 31018, 31020, 31019, 31431, 31478, 31820, 31811, 31821, 31983, 31984, 36782, 32381, 32380, 32386, 32588, 32768, 33242, 33382, 34299, 34297, 34321, 34298, 34310, 34315, 34311, 34314, 34836, 34837, 35172, 35258, 35320, 35696, 35692, 35686, 35695, 35679, 35691, 36111, 36109, 36489, 36481, 36485, 36482, 37300, 37323, 37912, 37891, 37885, 38369, 38704, 39108, 39250, 39249, 39336, 39467, 39472, 39479, 39477, 39955, 39949, 40569, 40629, 40680, 40751, 40799, 40803, 40801, 20791, 20792, 22209, 22208, 22210, 22804, 23660, 24013, 25084, 25086, 25885, 25884, 26005, 26345, 27387, 27396, 27386, 27570, 28748, 29211, 29351, 29910, 29908, 30313, 30675, 31824, 32399, 32396, 32700, 34327, 34349, 34330, 34851, 34850, 34849, 34847, 35178, 35180, 35261, 35700, 35703, 35709, 36115, 36490, 36493, 36491, 36703, 36783, 37306, 37934, 37939, 37941, 37946, 37944, 37938, 37931, 38370, 38712, 38713, 38706, 38911, 39015, 39013, 39255, 39493, 39491, 39488, 39486, 39631, 39764, 39761, 39981, 39973, 40367, 40372, 40386, 40376, 40605, 40687, 40729, 40796, 40806, 40807, 20796, 20795, 22216, 22218, 22217, 23423, 24020, 24018, 24398, 25087, 25892, 27402, 27489, 28753, 28760, 29568, 29924, 30090, 30318, 30316, 31155, 31840, 31839, 32894, 32893, 33247, 35186, 35183, 35324, 35712, 36118, 36119, 36497, 36499, 36705, 37192, 37956, 37969, 37970, 38717, 38718, 38851, 38849, 39019, 39253, 39509, 39501, 39634, 39706, 40009, 39985, 39998, 39995, 40403, 40407, 40756, 40812, 40810, 40852, 22220, 24022, 25088, 25891, 25899, 25898, 26348, 27408, 29914, 31434, 31844, 31843, 31845, 32403, 32406, 32404, 33250, 34360, 34367, 34865, 35722, 37008, 37007, 37987, 37984, 37988, 38760, 39023, 39260, 39514, 39515, 39511, 39635, 39636, 39633, 40020, 40023, 40022, 40421, 40607, 40692, 22225, 22761, 25900, 28766, 30321, 30322, 30679, 32592, 32648, 34870, 34873, 34914, 35731, 35730, 35734, 33399, 36123, 37312, 37994, 38722, 38728, 38724, 38854, 39024, 39519, 39714, 39768, 40031, 40441, 40442, 40572, 40573, 40711, 40823, 40818, 24307, 27414, 28771, 31852, 31854, 34875, 35264, 36513, 37313, 38002, 38e3, 39025, 39262, 39638, 39715, 40652, 28772, 30682, 35738, 38007, 38857, 39522, 39525, 32412, 35740, 36522, 37317, 38013, 38014, 38012, 40055, 40056, 40695, 35924, 38015, 40474, 29224, 39530, 39729, 40475, 40478, 31858, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 20022, 20031, 20101, 20128, 20866, 20886, 20907, 21241, 21304, 21353, 21430, 22794, 23424, 24027, 12083, 24191, 24308, 24400, 24417, 25908, 26080, 30098, 30326, 36789, 38582, 168, 710, 12541, 12542, 12445, 12446, 12291, 20189, 12293, 12294, 12295, 12540, 65339, 65341, 10045, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8679, 8632, 8633, 12751, 131276, 20058, 131210, 20994, 17553, 40880, 20872, 40881, 161287, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 65506, 65508, 65287, 65282, 12849, 8470, 8481, 12443, 12444, 11904, 11908, 11910, 11911, 11912, 11914, 11916, 11917, 11925, 11932, 11933, 11941, 11943, 11946, 11948, 11950, 11958, 11964, 11966, 11974, 11978, 11980, 11981, 11983, 11990, 11991, 11998, 12003, null, null, null, 643, 592, 603, 596, 629, 339, 248, 331, 650, 618, 20034, 20060, 20981, 21274, 21378, 19975, 19980, 20039, 20109, 22231, 64012, 23662, 24435, 19983, 20871, 19982, 20014, 20115, 20162, 20169, 20168, 20888, 21244, 21356, 21433, 22304, 22787, 22828, 23568, 24063, 26081, 27571, 27596, 27668, 29247, 20017, 20028, 20200, 20188, 20201, 20193, 20189, 20186, 21004, 21276, 21324, 22306, 22307, 22807, 22831, 23425, 23428, 23570, 23611, 23668, 23667, 24068, 24192, 24194, 24521, 25097, 25168, 27669, 27702, 27715, 27711, 27707, 29358, 29360, 29578, 31160, 32906, 38430, 20238, 20248, 20268, 20213, 20244, 20209, 20224, 20215, 20232, 20253, 20226, 20229, 20258, 20243, 20228, 20212, 20242, 20913, 21011, 21001, 21008, 21158, 21282, 21279, 21325, 21386, 21511, 22241, 22239, 22318, 22314, 22324, 22844, 22912, 22908, 22917, 22907, 22910, 22903, 22911, 23382, 23573, 23589, 23676, 23674, 23675, 23678, 24031, 24181, 24196, 24322, 24346, 24436, 24533, 24532, 24527, 25180, 25182, 25188, 25185, 25190, 25186, 25177, 25184, 25178, 25189, 26095, 26094, 26430, 26425, 26424, 26427, 26426, 26431, 26428, 26419, 27672, 27718, 27730, 27740, 27727, 27722, 27732, 27723, 27724, 28785, 29278, 29364, 29365, 29582, 29994, 30335, 31349, 32593, 33400, 33404, 33408, 33405, 33407, 34381, 35198, 37017, 37015, 37016, 37019, 37012, 38434, 38436, 38432, 38435, 20310, 20283, 20322, 20297, 20307, 20324, 20286, 20327, 20306, 20319, 20289, 20312, 20269, 20275, 20287, 20321, 20879, 20921, 21020, 21022, 21025, 21165, 21166, 21257, 21347, 21362, 21390, 21391, 21552, 21559, 21546, 21588, 21573, 21529, 21532, 21541, 21528, 21565, 21583, 21569, 21544, 21540, 21575, 22254, 22247, 22245, 22337, 22341, 22348, 22345, 22347, 22354, 22790, 22848, 22950, 22936, 22944, 22935, 22926, 22946, 22928, 22927, 22951, 22945, 23438, 23442, 23592, 23594, 23693, 23695, 23688, 23691, 23689, 23698, 23690, 23686, 23699, 23701, 24032, 24074, 24078, 24203, 24201, 24204, 24200, 24205, 24325, 24349, 24440, 24438, 24530, 24529, 24528, 24557, 24552, 24558, 24563, 24545, 24548, 24547, 24570, 24559, 24567, 24571, 24576, 24564, 25146, 25219, 25228, 25230, 25231, 25236, 25223, 25201, 25211, 25210, 25200, 25217, 25224, 25207, 25213, 25202, 25204, 25911, 26096, 26100, 26099, 26098, 26101, 26437, 26439, 26457, 26453, 26444, 26440, 26461, 26445, 26458, 26443, 27600, 27673, 27674, 27768, 27751, 27755, 27780, 27787, 27791, 27761, 27759, 27753, 27802, 27757, 27783, 27797, 27804, 27750, 27763, 27749, 27771, 27790, 28788, 28794, 29283, 29375, 29373, 29379, 29382, 29377, 29370, 29381, 29589, 29591, 29587, 29588, 29586, 30010, 30009, 30100, 30101, 30337, 31037, 32820, 32917, 32921, 32912, 32914, 32924, 33424, 33423, 33413, 33422, 33425, 33427, 33418, 33411, 33412, 35960, 36809, 36799, 37023, 37025, 37029, 37022, 37031, 37024, 38448, 38440, 38447, 38445, 20019, 20376, 20348, 20357, 20349, 20352, 20359, 20342, 20340, 20361, 20356, 20343, 20300, 20375, 20330, 20378, 20345, 20353, 20344, 20368, 20380, 20372, 20382, 20370, 20354, 20373, 20331, 20334, 20894, 20924, 20926, 21045, 21042, 21043, 21062, 21041, 21180, 21258, 21259, 21308, 21394, 21396, 21639, 21631, 21633, 21649, 21634, 21640, 21611, 21626, 21630, 21605, 21612, 21620, 21606, 21645, 21615, 21601, 21600, 21656, 21603, 21607, 21604, 22263, 22265, 22383, 22386, 22381, 22379, 22385, 22384, 22390, 22400, 22389, 22395, 22387, 22388, 22370, 22376, 22397, 22796, 22853, 22965, 22970, 22991, 22990, 22962, 22988, 22977, 22966, 22972, 22979, 22998, 22961, 22973, 22976, 22984, 22964, 22983, 23394, 23397, 23443, 23445, 23620, 23623, 23726, 23716, 23712, 23733, 23727, 23720, 23724, 23711, 23715, 23725, 23714, 23722, 23719, 23709, 23717, 23734, 23728, 23718, 24087, 24084, 24089, 24360, 24354, 24355, 24356, 24404, 24450, 24446, 24445, 24542, 24549, 24621, 24614, 24601, 24626, 24587, 24628, 24586, 24599, 24627, 24602, 24606, 24620, 24610, 24589, 24592, 24622, 24595, 24593, 24588, 24585, 24604, 25108, 25149, 25261, 25268, 25297, 25278, 25258, 25270, 25290, 25262, 25267, 25263, 25275, 25257, 25264, 25272, 25917, 26024, 26043, 26121, 26108, 26116, 26130, 26120, 26107, 26115, 26123, 26125, 26117, 26109, 26129, 26128, 26358, 26378, 26501, 26476, 26510, 26514, 26486, 26491, 26520, 26502, 26500, 26484, 26509, 26508, 26490, 26527, 26513, 26521, 26499, 26493, 26497, 26488, 26489, 26516, 27429, 27520, 27518, 27614, 27677, 27795, 27884, 27883, 27886, 27865, 27830, 27860, 27821, 27879, 27831, 27856, 27842, 27834, 27843, 27846, 27885, 27890, 27858, 27869, 27828, 27786, 27805, 27776, 27870, 27840, 27952, 27853, 27847, 27824, 27897, 27855, 27881, 27857, 28820, 28824, 28805, 28819, 28806, 28804, 28817, 28822, 28802, 28826, 28803, 29290, 29398, 29387, 29400, 29385, 29404, 29394, 29396, 29402, 29388, 29393, 29604, 29601, 29613, 29606, 29602, 29600, 29612, 29597, 29917, 29928, 30015, 30016, 30014, 30092, 30104, 30383, 30451, 30449, 30448, 30453, 30712, 30716, 30713, 30715, 30714, 30711, 31042, 31039, 31173, 31352, 31355, 31483, 31861, 31997, 32821, 32911, 32942, 32931, 32952, 32949, 32941, 33312, 33440, 33472, 33451, 33434, 33432, 33435, 33461, 33447, 33454, 33468, 33438, 33466, 33460, 33448, 33441, 33449, 33474, 33444, 33475, 33462, 33442, 34416, 34415, 34413, 34414, 35926, 36818, 36811, 36819, 36813, 36822, 36821, 36823, 37042, 37044, 37039, 37043, 37040, 38457, 38461, 38460, 38458, 38467, 20429, 20421, 20435, 20402, 20425, 20427, 20417, 20436, 20444, 20441, 20411, 20403, 20443, 20423, 20438, 20410, 20416, 20409, 20460, 21060, 21065, 21184, 21186, 21309, 21372, 21399, 21398, 21401, 21400, 21690, 21665, 21677, 21669, 21711, 21699, 33549, 21687, 21678, 21718, 21686, 21701, 21702, 21664, 21616, 21692, 21666, 21694, 21618, 21726, 21680, 22453, 22430, 22431, 22436, 22412, 22423, 22429, 22427, 22420, 22424, 22415, 22425, 22437, 22426, 22421, 22772, 22797, 22867, 23009, 23006, 23022, 23040, 23025, 23005, 23034, 23037, 23036, 23030, 23012, 23026, 23031, 23003, 23017, 23027, 23029, 23008, 23038, 23028, 23021, 23464, 23628, 23760, 23768, 23756, 23767, 23755, 23771, 23774, 23770, 23753, 23751, 23754, 23766, 23763, 23764, 23759, 23752, 23750, 23758, 23775, 23800, 24057, 24097, 24098, 24099, 24096, 24100, 24240, 24228, 24226, 24219, 24227, 24229, 24327, 24366, 24406, 24454, 24631, 24633, 24660, 24690, 24670, 24645, 24659, 24647, 24649, 24667, 24652, 24640, 24642, 24671, 24612, 24644, 24664, 24678, 24686, 25154, 25155, 25295, 25357, 25355, 25333, 25358, 25347, 25323, 25337, 25359, 25356, 25336, 25334, 25344, 25363, 25364, 25338, 25365, 25339, 25328, 25921, 25923, 26026, 26047, 26166, 26145, 26162, 26165, 26140, 26150, 26146, 26163, 26155, 26170, 26141, 26164, 26169, 26158, 26383, 26384, 26561, 26610, 26568, 26554, 26588, 26555, 26616, 26584, 26560, 26551, 26565, 26603, 26596, 26591, 26549, 26573, 26547, 26615, 26614, 26606, 26595, 26562, 26553, 26574, 26599, 26608, 26546, 26620, 26566, 26605, 26572, 26542, 26598, 26587, 26618, 26569, 26570, 26563, 26602, 26571, 27432, 27522, 27524, 27574, 27606, 27608, 27616, 27680, 27681, 27944, 27956, 27949, 27935, 27964, 27967, 27922, 27914, 27866, 27955, 27908, 27929, 27962, 27930, 27921, 27904, 27933, 27970, 27905, 27928, 27959, 27907, 27919, 27968, 27911, 27936, 27948, 27912, 27938, 27913, 27920, 28855, 28831, 28862, 28849, 28848, 28833, 28852, 28853, 28841, 29249, 29257, 29258, 29292, 29296, 29299, 29294, 29386, 29412, 29416, 29419, 29407, 29418, 29414, 29411, 29573, 29644, 29634, 29640, 29637, 29625, 29622, 29621, 29620, 29675, 29631, 29639, 29630, 29635, 29638, 29624, 29643, 29932, 29934, 29998, 30023, 30024, 30119, 30122, 30329, 30404, 30472, 30467, 30468, 30469, 30474, 30455, 30459, 30458, 30695, 30696, 30726, 30737, 30738, 30725, 30736, 30735, 30734, 30729, 30723, 30739, 31050, 31052, 31051, 31045, 31044, 31189, 31181, 31183, 31190, 31182, 31360, 31358, 31441, 31488, 31489, 31866, 31864, 31865, 31871, 31872, 31873, 32003, 32008, 32001, 32600, 32657, 32653, 32702, 32775, 32782, 32783, 32788, 32823, 32984, 32967, 32992, 32977, 32968, 32962, 32976, 32965, 32995, 32985, 32988, 32970, 32981, 32969, 32975, 32983, 32998, 32973, 33279, 33313, 33428, 33497, 33534, 33529, 33543, 33512, 33536, 33493, 33594, 33515, 33494, 33524, 33516, 33505, 33522, 33525, 33548, 33531, 33526, 33520, 33514, 33508, 33504, 33530, 33523, 33517, 34423, 34420, 34428, 34419, 34881, 34894, 34919, 34922, 34921, 35283, 35332, 35335, 36210, 36835, 36833, 36846, 36832, 37105, 37053, 37055, 37077, 37061, 37054, 37063, 37067, 37064, 37332, 37331, 38484, 38479, 38481, 38483, 38474, 38478, 20510, 20485, 20487, 20499, 20514, 20528, 20507, 20469, 20468, 20531, 20535, 20524, 20470, 20471, 20503, 20508, 20512, 20519, 20533, 20527, 20529, 20494, 20826, 20884, 20883, 20938, 20932, 20933, 20936, 20942, 21089, 21082, 21074, 21086, 21087, 21077, 21090, 21197, 21262, 21406, 21798, 21730, 21783, 21778, 21735, 21747, 21732, 21786, 21759, 21764, 21768, 21739, 21777, 21765, 21745, 21770, 21755, 21751, 21752, 21728, 21774, 21763, 21771, 22273, 22274, 22476, 22578, 22485, 22482, 22458, 22470, 22461, 22460, 22456, 22454, 22463, 22471, 22480, 22457, 22465, 22798, 22858, 23065, 23062, 23085, 23086, 23061, 23055, 23063, 23050, 23070, 23091, 23404, 23463, 23469, 23468, 23555, 23638, 23636, 23788, 23807, 23790, 23793, 23799, 23808, 23801, 24105, 24104, 24232, 24238, 24234, 24236, 24371, 24368, 24423, 24669, 24666, 24679, 24641, 24738, 24712, 24704, 24722, 24705, 24733, 24707, 24725, 24731, 24727, 24711, 24732, 24718, 25113, 25158, 25330, 25360, 25430, 25388, 25412, 25413, 25398, 25411, 25572, 25401, 25419, 25418, 25404, 25385, 25409, 25396, 25432, 25428, 25433, 25389, 25415, 25395, 25434, 25425, 25400, 25431, 25408, 25416, 25930, 25926, 26054, 26051, 26052, 26050, 26186, 26207, 26183, 26193, 26386, 26387, 26655, 26650, 26697, 26674, 26675, 26683, 26699, 26703, 26646, 26673, 26652, 26677, 26667, 26669, 26671, 26702, 26692, 26676, 26653, 26642, 26644, 26662, 26664, 26670, 26701, 26682, 26661, 26656, 27436, 27439, 27437, 27441, 27444, 27501, 32898, 27528, 27622, 27620, 27624, 27619, 27618, 27623, 27685, 28026, 28003, 28004, 28022, 27917, 28001, 28050, 27992, 28002, 28013, 28015, 28049, 28045, 28143, 28031, 28038, 27998, 28007, 28e3, 28055, 28016, 28028, 27999, 28034, 28056, 27951, 28008, 28043, 28030, 28032, 28036, 27926, 28035, 28027, 28029, 28021, 28048, 28892, 28883, 28881, 28893, 28875, 32569, 28898, 28887, 28882, 28894, 28896, 28884, 28877, 28869, 28870, 28871, 28890, 28878, 28897, 29250, 29304, 29303, 29302, 29440, 29434, 29428, 29438, 29430, 29427, 29435, 29441, 29651, 29657, 29669, 29654, 29628, 29671, 29667, 29673, 29660, 29650, 29659, 29652, 29661, 29658, 29655, 29656, 29672, 29918, 29919, 29940, 29941, 29985, 30043, 30047, 30128, 30145, 30139, 30148, 30144, 30143, 30134, 30138, 30346, 30409, 30493, 30491, 30480, 30483, 30482, 30499, 30481, 30485, 30489, 30490, 30498, 30503, 30755, 30764, 30754, 30773, 30767, 30760, 30766, 30763, 30753, 30761, 30771, 30762, 30769, 31060, 31067, 31055, 31068, 31059, 31058, 31057, 31211, 31212, 31200, 31214, 31213, 31210, 31196, 31198, 31197, 31366, 31369, 31365, 31371, 31372, 31370, 31367, 31448, 31504, 31492, 31507, 31493, 31503, 31496, 31498, 31502, 31497, 31506, 31876, 31889, 31882, 31884, 31880, 31885, 31877, 32030, 32029, 32017, 32014, 32024, 32022, 32019, 32031, 32018, 32015, 32012, 32604, 32609, 32606, 32608, 32605, 32603, 32662, 32658, 32707, 32706, 32704, 32790, 32830, 32825, 33018, 33010, 33017, 33013, 33025, 33019, 33024, 33281, 33327, 33317, 33587, 33581, 33604, 33561, 33617, 33573, 33622, 33599, 33601, 33574, 33564, 33570, 33602, 33614, 33563, 33578, 33544, 33596, 33613, 33558, 33572, 33568, 33591, 33583, 33577, 33607, 33605, 33612, 33619, 33566, 33580, 33611, 33575, 33608, 34387, 34386, 34466, 34472, 34454, 34445, 34449, 34462, 34439, 34455, 34438, 34443, 34458, 34437, 34469, 34457, 34465, 34471, 34453, 34456, 34446, 34461, 34448, 34452, 34883, 34884, 34925, 34933, 34934, 34930, 34944, 34929, 34943, 34927, 34947, 34942, 34932, 34940, 35346, 35911, 35927, 35963, 36004, 36003, 36214, 36216, 36277, 36279, 36278, 36561, 36563, 36862, 36853, 36866, 36863, 36859, 36868, 36860, 36854, 37078, 37088, 37081, 37082, 37091, 37087, 37093, 37080, 37083, 37079, 37084, 37092, 37200, 37198, 37199, 37333, 37346, 37338, 38492, 38495, 38588, 39139, 39647, 39727, 20095, 20592, 20586, 20577, 20574, 20576, 20563, 20555, 20573, 20594, 20552, 20557, 20545, 20571, 20554, 20578, 20501, 20549, 20575, 20585, 20587, 20579, 20580, 20550, 20544, 20590, 20595, 20567, 20561, 20944, 21099, 21101, 21100, 21102, 21206, 21203, 21293, 21404, 21877, 21878, 21820, 21837, 21840, 21812, 21802, 21841, 21858, 21814, 21813, 21808, 21842, 21829, 21772, 21810, 21861, 21838, 21817, 21832, 21805, 21819, 21824, 21835, 22282, 22279, 22523, 22548, 22498, 22518, 22492, 22516, 22528, 22509, 22525, 22536, 22520, 22539, 22515, 22479, 22535, 22510, 22499, 22514, 22501, 22508, 22497, 22542, 22524, 22544, 22503, 22529, 22540, 22513, 22505, 22512, 22541, 22532, 22876, 23136, 23128, 23125, 23143, 23134, 23096, 23093, 23149, 23120, 23135, 23141, 23148, 23123, 23140, 23127, 23107, 23133, 23122, 23108, 23131, 23112, 23182, 23102, 23117, 23097, 23116, 23152, 23145, 23111, 23121, 23126, 23106, 23132, 23410, 23406, 23489, 23488, 23641, 23838, 23819, 23837, 23834, 23840, 23820, 23848, 23821, 23846, 23845, 23823, 23856, 23826, 23843, 23839, 23854, 24126, 24116, 24241, 24244, 24249, 24242, 24243, 24374, 24376, 24475, 24470, 24479, 24714, 24720, 24710, 24766, 24752, 24762, 24787, 24788, 24783, 24804, 24793, 24797, 24776, 24753, 24795, 24759, 24778, 24767, 24771, 24781, 24768, 25394, 25445, 25482, 25474, 25469, 25533, 25502, 25517, 25501, 25495, 25515, 25486, 25455, 25479, 25488, 25454, 25519, 25461, 25500, 25453, 25518, 25468, 25508, 25403, 25503, 25464, 25477, 25473, 25489, 25485, 25456, 25939, 26061, 26213, 26209, 26203, 26201, 26204, 26210, 26392, 26745, 26759, 26768, 26780, 26733, 26734, 26798, 26795, 26966, 26735, 26787, 26796, 26793, 26741, 26740, 26802, 26767, 26743, 26770, 26748, 26731, 26738, 26794, 26752, 26737, 26750, 26779, 26774, 26763, 26784, 26761, 26788, 26744, 26747, 26769, 26764, 26762, 26749, 27446, 27443, 27447, 27448, 27537, 27535, 27533, 27534, 27532, 27690, 28096, 28075, 28084, 28083, 28276, 28076, 28137, 28130, 28087, 28150, 28116, 28160, 28104, 28128, 28127, 28118, 28094, 28133, 28124, 28125, 28123, 28148, 28106, 28093, 28141, 28144, 28090, 28117, 28098, 28111, 28105, 28112, 28146, 28115, 28157, 28119, 28109, 28131, 28091, 28922, 28941, 28919, 28951, 28916, 28940, 28912, 28932, 28915, 28944, 28924, 28927, 28934, 28947, 28928, 28920, 28918, 28939, 28930, 28942, 29310, 29307, 29308, 29311, 29469, 29463, 29447, 29457, 29464, 29450, 29448, 29439, 29455, 29470, 29576, 29686, 29688, 29685, 29700, 29697, 29693, 29703, 29696, 29690, 29692, 29695, 29708, 29707, 29684, 29704, 30052, 30051, 30158, 30162, 30159, 30155, 30156, 30161, 30160, 30351, 30345, 30419, 30521, 30511, 30509, 30513, 30514, 30516, 30515, 30525, 30501, 30523, 30517, 30792, 30802, 30793, 30797, 30794, 30796, 30758, 30789, 30800, 31076, 31079, 31081, 31082, 31075, 31083, 31073, 31163, 31226, 31224, 31222, 31223, 31375, 31380, 31376, 31541, 31559, 31540, 31525, 31536, 31522, 31524, 31539, 31512, 31530, 31517, 31537, 31531, 31533, 31535, 31538, 31544, 31514, 31523, 31892, 31896, 31894, 31907, 32053, 32061, 32056, 32054, 32058, 32069, 32044, 32041, 32065, 32071, 32062, 32063, 32074, 32059, 32040, 32611, 32661, 32668, 32669, 32667, 32714, 32715, 32717, 32720, 32721, 32711, 32719, 32713, 32799, 32798, 32795, 32839, 32835, 32840, 33048, 33061, 33049, 33051, 33069, 33055, 33068, 33054, 33057, 33045, 33063, 33053, 33058, 33297, 33336, 33331, 33338, 33332, 33330, 33396, 33680, 33699, 33704, 33677, 33658, 33651, 33700, 33652, 33679, 33665, 33685, 33689, 33653, 33684, 33705, 33661, 33667, 33676, 33693, 33691, 33706, 33675, 33662, 33701, 33711, 33672, 33687, 33712, 33663, 33702, 33671, 33710, 33654, 33690, 34393, 34390, 34495, 34487, 34498, 34497, 34501, 34490, 34480, 34504, 34489, 34483, 34488, 34508, 34484, 34491, 34492, 34499, 34493, 34494, 34898, 34953, 34965, 34984, 34978, 34986, 34970, 34961, 34977, 34975, 34968, 34983, 34969, 34971, 34967, 34980, 34988, 34956, 34963, 34958, 35202, 35286, 35289, 35285, 35376, 35367, 35372, 35358, 35897, 35899, 35932, 35933, 35965, 36005, 36221, 36219, 36217, 36284, 36290, 36281, 36287, 36289, 36568, 36574, 36573, 36572, 36567, 36576, 36577, 36900, 36875, 36881, 36892, 36876, 36897, 37103, 37098, 37104, 37108, 37106, 37107, 37076, 37099, 37100, 37097, 37206, 37208, 37210, 37203, 37205, 37356, 37364, 37361, 37363, 37368, 37348, 37369, 37354, 37355, 37367, 37352, 37358, 38266, 38278, 38280, 38524, 38509, 38507, 38513, 38511, 38591, 38762, 38916, 39141, 39319, 20635, 20629, 20628, 20638, 20619, 20643, 20611, 20620, 20622, 20637, 20584, 20636, 20626, 20610, 20615, 20831, 20948, 21266, 21265, 21412, 21415, 21905, 21928, 21925, 21933, 21879, 22085, 21922, 21907, 21896, 21903, 21941, 21889, 21923, 21906, 21924, 21885, 21900, 21926, 21887, 21909, 21921, 21902, 22284, 22569, 22583, 22553, 22558, 22567, 22563, 22568, 22517, 22600, 22565, 22556, 22555, 22579, 22591, 22582, 22574, 22585, 22584, 22573, 22572, 22587, 22881, 23215, 23188, 23199, 23162, 23202, 23198, 23160, 23206, 23164, 23205, 23212, 23189, 23214, 23095, 23172, 23178, 23191, 23171, 23179, 23209, 23163, 23165, 23180, 23196, 23183, 23187, 23197, 23530, 23501, 23499, 23508, 23505, 23498, 23502, 23564, 23600, 23863, 23875, 23915, 23873, 23883, 23871, 23861, 23889, 23886, 23893, 23859, 23866, 23890, 23869, 23857, 23897, 23874, 23865, 23881, 23864, 23868, 23858, 23862, 23872, 23877, 24132, 24129, 24408, 24486, 24485, 24491, 24777, 24761, 24780, 24802, 24782, 24772, 24852, 24818, 24842, 24854, 24837, 24821, 24851, 24824, 24828, 24830, 24769, 24835, 24856, 24861, 24848, 24831, 24836, 24843, 25162, 25492, 25521, 25520, 25550, 25573, 25576, 25583, 25539, 25757, 25587, 25546, 25568, 25590, 25557, 25586, 25589, 25697, 25567, 25534, 25565, 25564, 25540, 25560, 25555, 25538, 25543, 25548, 25547, 25544, 25584, 25559, 25561, 25906, 25959, 25962, 25956, 25948, 25960, 25957, 25996, 26013, 26014, 26030, 26064, 26066, 26236, 26220, 26235, 26240, 26225, 26233, 26218, 26226, 26369, 26892, 26835, 26884, 26844, 26922, 26860, 26858, 26865, 26895, 26838, 26871, 26859, 26852, 26870, 26899, 26896, 26867, 26849, 26887, 26828, 26888, 26992, 26804, 26897, 26863, 26822, 26900, 26872, 26832, 26877, 26876, 26856, 26891, 26890, 26903, 26830, 26824, 26845, 26846, 26854, 26868, 26833, 26886, 26836, 26857, 26901, 26917, 26823, 27449, 27451, 27455, 27452, 27540, 27543, 27545, 27541, 27581, 27632, 27634, 27635, 27696, 28156, 28230, 28231, 28191, 28233, 28296, 28220, 28221, 28229, 28258, 28203, 28223, 28225, 28253, 28275, 28188, 28211, 28235, 28224, 28241, 28219, 28163, 28206, 28254, 28264, 28252, 28257, 28209, 28200, 28256, 28273, 28267, 28217, 28194, 28208, 28243, 28261, 28199, 28280, 28260, 28279, 28245, 28281, 28242, 28262, 28213, 28214, 28250, 28960, 28958, 28975, 28923, 28974, 28977, 28963, 28965, 28962, 28978, 28959, 28968, 28986, 28955, 29259, 29274, 29320, 29321, 29318, 29317, 29323, 29458, 29451, 29488, 29474, 29489, 29491, 29479, 29490, 29485, 29478, 29475, 29493, 29452, 29742, 29740, 29744, 29739, 29718, 29722, 29729, 29741, 29745, 29732, 29731, 29725, 29737, 29728, 29746, 29947, 29999, 30063, 30060, 30183, 30170, 30177, 30182, 30173, 30175, 30180, 30167, 30357, 30354, 30426, 30534, 30535, 30532, 30541, 30533, 30538, 30542, 30539, 30540, 30686, 30700, 30816, 30820, 30821, 30812, 30829, 30833, 30826, 30830, 30832, 30825, 30824, 30814, 30818, 31092, 31091, 31090, 31088, 31234, 31242, 31235, 31244, 31236, 31385, 31462, 31460, 31562, 31547, 31556, 31560, 31564, 31566, 31552, 31576, 31557, 31906, 31902, 31912, 31905, 32088, 32111, 32099, 32083, 32086, 32103, 32106, 32079, 32109, 32092, 32107, 32082, 32084, 32105, 32081, 32095, 32078, 32574, 32575, 32613, 32614, 32674, 32672, 32673, 32727, 32849, 32847, 32848, 33022, 32980, 33091, 33098, 33106, 33103, 33095, 33085, 33101, 33082, 33254, 33262, 33271, 33272, 33273, 33284, 33340, 33341, 33343, 33397, 33595, 33743, 33785, 33827, 33728, 33768, 33810, 33767, 33764, 33788, 33782, 33808, 33734, 33736, 33771, 33763, 33727, 33793, 33757, 33765, 33752, 33791, 33761, 33739, 33742, 33750, 33781, 33737, 33801, 33807, 33758, 33809, 33798, 33730, 33779, 33749, 33786, 33735, 33745, 33770, 33811, 33731, 33772, 33774, 33732, 33787, 33751, 33762, 33819, 33755, 33790, 34520, 34530, 34534, 34515, 34531, 34522, 34538, 34525, 34539, 34524, 34540, 34537, 34519, 34536, 34513, 34888, 34902, 34901, 35002, 35031, 35001, 35e3, 35008, 35006, 34998, 35004, 34999, 35005, 34994, 35073, 35017, 35221, 35224, 35223, 35293, 35290, 35291, 35406, 35405, 35385, 35417, 35392, 35415, 35416, 35396, 35397, 35410, 35400, 35409, 35402, 35404, 35407, 35935, 35969, 35968, 36026, 36030, 36016, 36025, 36021, 36228, 36224, 36233, 36312, 36307, 36301, 36295, 36310, 36316, 36303, 36309, 36313, 36296, 36311, 36293, 36591, 36599, 36602, 36601, 36582, 36590, 36581, 36597, 36583, 36584, 36598, 36587, 36593, 36588, 36596, 36585, 36909, 36916, 36911, 37126, 37164, 37124, 37119, 37116, 37128, 37113, 37115, 37121, 37120, 37127, 37125, 37123, 37217, 37220, 37215, 37218, 37216, 37377, 37386, 37413, 37379, 37402, 37414, 37391, 37388, 37376, 37394, 37375, 37373, 37382, 37380, 37415, 37378, 37404, 37412, 37401, 37399, 37381, 37398, 38267, 38285, 38284, 38288, 38535, 38526, 38536, 38537, 38531, 38528, 38594, 38600, 38595, 38641, 38640, 38764, 38768, 38766, 38919, 39081, 39147, 40166, 40697, 20099, 20100, 20150, 20669, 20671, 20678, 20654, 20676, 20682, 20660, 20680, 20674, 20656, 20673, 20666, 20657, 20683, 20681, 20662, 20664, 20951, 21114, 21112, 21115, 21116, 21955, 21979, 21964, 21968, 21963, 21962, 21981, 21952, 21972, 21956, 21993, 21951, 21970, 21901, 21967, 21973, 21986, 21974, 21960, 22002, 21965, 21977, 21954, 22292, 22611, 22632, 22628, 22607, 22605, 22601, 22639, 22613, 22606, 22621, 22617, 22629, 22619, 22589, 22627, 22641, 22780, 23239, 23236, 23243, 23226, 23224, 23217, 23221, 23216, 23231, 23240, 23227, 23238, 23223, 23232, 23242, 23220, 23222, 23245, 23225, 23184, 23510, 23512, 23513, 23583, 23603, 23921, 23907, 23882, 23909, 23922, 23916, 23902, 23912, 23911, 23906, 24048, 24143, 24142, 24138, 24141, 24139, 24261, 24268, 24262, 24267, 24263, 24384, 24495, 24493, 24823, 24905, 24906, 24875, 24901, 24886, 24882, 24878, 24902, 24879, 24911, 24873, 24896, 25120, 37224, 25123, 25125, 25124, 25541, 25585, 25579, 25616, 25618, 25609, 25632, 25636, 25651, 25667, 25631, 25621, 25624, 25657, 25655, 25634, 25635, 25612, 25638, 25648, 25640, 25665, 25653, 25647, 25610, 25626, 25664, 25637, 25639, 25611, 25575, 25627, 25646, 25633, 25614, 25967, 26002, 26067, 26246, 26252, 26261, 26256, 26251, 26250, 26265, 26260, 26232, 26400, 26982, 26975, 26936, 26958, 26978, 26993, 26943, 26949, 26986, 26937, 26946, 26967, 26969, 27002, 26952, 26953, 26933, 26988, 26931, 26941, 26981, 26864, 27e3, 26932, 26985, 26944, 26991, 26948, 26998, 26968, 26945, 26996, 26956, 26939, 26955, 26935, 26972, 26959, 26961, 26930, 26962, 26927, 27003, 26940, 27462, 27461, 27459, 27458, 27464, 27457, 27547, 64013, 27643, 27644, 27641, 27639, 27640, 28315, 28374, 28360, 28303, 28352, 28319, 28307, 28308, 28320, 28337, 28345, 28358, 28370, 28349, 28353, 28318, 28361, 28343, 28336, 28365, 28326, 28367, 28338, 28350, 28355, 28380, 28376, 28313, 28306, 28302, 28301, 28324, 28321, 28351, 28339, 28368, 28362, 28311, 28334, 28323, 28999, 29012, 29010, 29027, 29024, 28993, 29021, 29026, 29042, 29048, 29034, 29025, 28994, 29016, 28995, 29003, 29040, 29023, 29008, 29011, 28996, 29005, 29018, 29263, 29325, 29324, 29329, 29328, 29326, 29500, 29506, 29499, 29498, 29504, 29514, 29513, 29764, 29770, 29771, 29778, 29777, 29783, 29760, 29775, 29776, 29774, 29762, 29766, 29773, 29780, 29921, 29951, 29950, 29949, 29981, 30073, 30071, 27011, 30191, 30223, 30211, 30199, 30206, 30204, 30201, 30200, 30224, 30203, 30198, 30189, 30197, 30205, 30361, 30389, 30429, 30549, 30559, 30560, 30546, 30550, 30554, 30569, 30567, 30548, 30553, 30573, 30688, 30855, 30874, 30868, 30863, 30852, 30869, 30853, 30854, 30881, 30851, 30841, 30873, 30848, 30870, 30843, 31100, 31106, 31101, 31097, 31249, 31256, 31257, 31250, 31255, 31253, 31266, 31251, 31259, 31248, 31395, 31394, 31390, 31467, 31590, 31588, 31597, 31604, 31593, 31602, 31589, 31603, 31601, 31600, 31585, 31608, 31606, 31587, 31922, 31924, 31919, 32136, 32134, 32128, 32141, 32127, 32133, 32122, 32142, 32123, 32131, 32124, 32140, 32148, 32132, 32125, 32146, 32621, 32619, 32615, 32616, 32620, 32678, 32677, 32679, 32731, 32732, 32801, 33124, 33120, 33143, 33116, 33129, 33115, 33122, 33138, 26401, 33118, 33142, 33127, 33135, 33092, 33121, 33309, 33353, 33348, 33344, 33346, 33349, 34033, 33855, 33878, 33910, 33913, 33935, 33933, 33893, 33873, 33856, 33926, 33895, 33840, 33869, 33917, 33882, 33881, 33908, 33907, 33885, 34055, 33886, 33847, 33850, 33844, 33914, 33859, 33912, 33842, 33861, 33833, 33753, 33867, 33839, 33858, 33837, 33887, 33904, 33849, 33870, 33868, 33874, 33903, 33989, 33934, 33851, 33863, 33846, 33843, 33896, 33918, 33860, 33835, 33888, 33876, 33902, 33872, 34571, 34564, 34551, 34572, 34554, 34518, 34549, 34637, 34552, 34574, 34569, 34561, 34550, 34573, 34565, 35030, 35019, 35021, 35022, 35038, 35035, 35034, 35020, 35024, 35205, 35227, 35295, 35301, 35300, 35297, 35296, 35298, 35292, 35302, 35446, 35462, 35455, 35425, 35391, 35447, 35458, 35460, 35445, 35459, 35457, 35444, 35450, 35900, 35915, 35914, 35941, 35940, 35942, 35974, 35972, 35973, 36044, 36200, 36201, 36241, 36236, 36238, 36239, 36237, 36243, 36244, 36240, 36242, 36336, 36320, 36332, 36337, 36334, 36304, 36329, 36323, 36322, 36327, 36338, 36331, 36340, 36614, 36607, 36609, 36608, 36613, 36615, 36616, 36610, 36619, 36946, 36927, 36932, 36937, 36925, 37136, 37133, 37135, 37137, 37142, 37140, 37131, 37134, 37230, 37231, 37448, 37458, 37424, 37434, 37478, 37427, 37477, 37470, 37507, 37422, 37450, 37446, 37485, 37484, 37455, 37472, 37479, 37487, 37430, 37473, 37488, 37425, 37460, 37475, 37456, 37490, 37454, 37459, 37452, 37462, 37426, 38303, 38300, 38302, 38299, 38546, 38547, 38545, 38551, 38606, 38650, 38653, 38648, 38645, 38771, 38775, 38776, 38770, 38927, 38925, 38926, 39084, 39158, 39161, 39343, 39346, 39344, 39349, 39597, 39595, 39771, 40170, 40173, 40167, 40576, 40701, 20710, 20692, 20695, 20712, 20723, 20699, 20714, 20701, 20708, 20691, 20716, 20720, 20719, 20707, 20704, 20952, 21120, 21121, 21225, 21227, 21296, 21420, 22055, 22037, 22028, 22034, 22012, 22031, 22044, 22017, 22035, 22018, 22010, 22045, 22020, 22015, 22009, 22665, 22652, 22672, 22680, 22662, 22657, 22655, 22644, 22667, 22650, 22663, 22673, 22670, 22646, 22658, 22664, 22651, 22676, 22671, 22782, 22891, 23260, 23278, 23269, 23253, 23274, 23258, 23277, 23275, 23283, 23266, 23264, 23259, 23276, 23262, 23261, 23257, 23272, 23263, 23415, 23520, 23523, 23651, 23938, 23936, 23933, 23942, 23930, 23937, 23927, 23946, 23945, 23944, 23934, 23932, 23949, 23929, 23935, 24152, 24153, 24147, 24280, 24273, 24279, 24270, 24284, 24277, 24281, 24274, 24276, 24388, 24387, 24431, 24502, 24876, 24872, 24897, 24926, 24945, 24947, 24914, 24915, 24946, 24940, 24960, 24948, 24916, 24954, 24923, 24933, 24891, 24938, 24929, 24918, 25129, 25127, 25131, 25643, 25677, 25691, 25693, 25716, 25718, 25714, 25715, 25725, 25717, 25702, 25766, 25678, 25730, 25694, 25692, 25675, 25683, 25696, 25680, 25727, 25663, 25708, 25707, 25689, 25701, 25719, 25971, 26016, 26273, 26272, 26271, 26373, 26372, 26402, 27057, 27062, 27081, 27040, 27086, 27030, 27056, 27052, 27068, 27025, 27033, 27022, 27047, 27021, 27049, 27070, 27055, 27071, 27076, 27069, 27044, 27092, 27065, 27082, 27034, 27087, 27059, 27027, 27050, 27041, 27038, 27097, 27031, 27024, 27074, 27061, 27045, 27078, 27466, 27469, 27467, 27550, 27551, 27552, 27587, 27588, 27646, 28366, 28405, 28401, 28419, 28453, 28408, 28471, 28411, 28462, 28425, 28494, 28441, 28442, 28455, 28440, 28475, 28434, 28397, 28426, 28470, 28531, 28409, 28398, 28461, 28480, 28464, 28476, 28469, 28395, 28423, 28430, 28483, 28421, 28413, 28406, 28473, 28444, 28412, 28474, 28447, 28429, 28446, 28424, 28449, 29063, 29072, 29065, 29056, 29061, 29058, 29071, 29051, 29062, 29057, 29079, 29252, 29267, 29335, 29333, 29331, 29507, 29517, 29521, 29516, 29794, 29811, 29809, 29813, 29810, 29799, 29806, 29952, 29954, 29955, 30077, 30096, 30230, 30216, 30220, 30229, 30225, 30218, 30228, 30392, 30593, 30588, 30597, 30594, 30574, 30592, 30575, 30590, 30595, 30898, 30890, 30900, 30893, 30888, 30846, 30891, 30878, 30885, 30880, 30892, 30882, 30884, 31128, 31114, 31115, 31126, 31125, 31124, 31123, 31127, 31112, 31122, 31120, 31275, 31306, 31280, 31279, 31272, 31270, 31400, 31403, 31404, 31470, 31624, 31644, 31626, 31633, 31632, 31638, 31629, 31628, 31643, 31630, 31621, 31640, 21124, 31641, 31652, 31618, 31931, 31935, 31932, 31930, 32167, 32183, 32194, 32163, 32170, 32193, 32192, 32197, 32157, 32206, 32196, 32198, 32203, 32204, 32175, 32185, 32150, 32188, 32159, 32166, 32174, 32169, 32161, 32201, 32627, 32738, 32739, 32741, 32734, 32804, 32861, 32860, 33161, 33158, 33155, 33159, 33165, 33164, 33163, 33301, 33943, 33956, 33953, 33951, 33978, 33998, 33986, 33964, 33966, 33963, 33977, 33972, 33985, 33997, 33962, 33946, 33969, 34e3, 33949, 33959, 33979, 33954, 33940, 33991, 33996, 33947, 33961, 33967, 33960, 34006, 33944, 33974, 33999, 33952, 34007, 34004, 34002, 34011, 33968, 33937, 34401, 34611, 34595, 34600, 34667, 34624, 34606, 34590, 34593, 34585, 34587, 34627, 34604, 34625, 34622, 34630, 34592, 34610, 34602, 34605, 34620, 34578, 34618, 34609, 34613, 34626, 34598, 34599, 34616, 34596, 34586, 34608, 34577, 35063, 35047, 35057, 35058, 35066, 35070, 35054, 35068, 35062, 35067, 35056, 35052, 35051, 35229, 35233, 35231, 35230, 35305, 35307, 35304, 35499, 35481, 35467, 35474, 35471, 35478, 35901, 35944, 35945, 36053, 36047, 36055, 36246, 36361, 36354, 36351, 36365, 36349, 36362, 36355, 36359, 36358, 36357, 36350, 36352, 36356, 36624, 36625, 36622, 36621, 37155, 37148, 37152, 37154, 37151, 37149, 37146, 37156, 37153, 37147, 37242, 37234, 37241, 37235, 37541, 37540, 37494, 37531, 37498, 37536, 37524, 37546, 37517, 37542, 37530, 37547, 37497, 37527, 37503, 37539, 37614, 37518, 37506, 37525, 37538, 37501, 37512, 37537, 37514, 37510, 37516, 37529, 37543, 37502, 37511, 37545, 37533, 37515, 37421, 38558, 38561, 38655, 38744, 38781, 38778, 38782, 38787, 38784, 38786, 38779, 38788, 38785, 38783, 38862, 38861, 38934, 39085, 39086, 39170, 39168, 39175, 39325, 39324, 39363, 39353, 39355, 39354, 39362, 39357, 39367, 39601, 39651, 39655, 39742, 39743, 39776, 39777, 39775, 40177, 40178, 40181, 40615, 20735, 20739, 20784, 20728, 20742, 20743, 20726, 20734, 20747, 20748, 20733, 20746, 21131, 21132, 21233, 21231, 22088, 22082, 22092, 22069, 22081, 22090, 22089, 22086, 22104, 22106, 22080, 22067, 22077, 22060, 22078, 22072, 22058, 22074, 22298, 22699, 22685, 22705, 22688, 22691, 22703, 22700, 22693, 22689, 22783, 23295, 23284, 23293, 23287, 23286, 23299, 23288, 23298, 23289, 23297, 23303, 23301, 23311, 23655, 23961, 23959, 23967, 23954, 23970, 23955, 23957, 23968, 23964, 23969, 23962, 23966, 24169, 24157, 24160, 24156, 32243, 24283, 24286, 24289, 24393, 24498, 24971, 24963, 24953, 25009, 25008, 24994, 24969, 24987, 24979, 25007, 25005, 24991, 24978, 25002, 24993, 24973, 24934, 25011, 25133, 25710, 25712, 25750, 25760, 25733, 25751, 25756, 25743, 25739, 25738, 25740, 25763, 25759, 25704, 25777, 25752, 25974, 25978, 25977, 25979, 26034, 26035, 26293, 26288, 26281, 26290, 26295, 26282, 26287, 27136, 27142, 27159, 27109, 27128, 27157, 27121, 27108, 27168, 27135, 27116, 27106, 27163, 27165, 27134, 27175, 27122, 27118, 27156, 27127, 27111, 27200, 27144, 27110, 27131, 27149, 27132, 27115, 27145, 27140, 27160, 27173, 27151, 27126, 27174, 27143, 27124, 27158, 27473, 27557, 27555, 27554, 27558, 27649, 27648, 27647, 27650, 28481, 28454, 28542, 28551, 28614, 28562, 28557, 28553, 28556, 28514, 28495, 28549, 28506, 28566, 28534, 28524, 28546, 28501, 28530, 28498, 28496, 28503, 28564, 28563, 28509, 28416, 28513, 28523, 28541, 28519, 28560, 28499, 28555, 28521, 28543, 28565, 28515, 28535, 28522, 28539, 29106, 29103, 29083, 29104, 29088, 29082, 29097, 29109, 29085, 29093, 29086, 29092, 29089, 29098, 29084, 29095, 29107, 29336, 29338, 29528, 29522, 29534, 29535, 29536, 29533, 29531, 29537, 29530, 29529, 29538, 29831, 29833, 29834, 29830, 29825, 29821, 29829, 29832, 29820, 29817, 29960, 29959, 30078, 30245, 30238, 30233, 30237, 30236, 30243, 30234, 30248, 30235, 30364, 30365, 30366, 30363, 30605, 30607, 30601, 30600, 30925, 30907, 30927, 30924, 30929, 30926, 30932, 30920, 30915, 30916, 30921, 31130, 31137, 31136, 31132, 31138, 31131, 27510, 31289, 31410, 31412, 31411, 31671, 31691, 31678, 31660, 31694, 31663, 31673, 31690, 31669, 31941, 31944, 31948, 31947, 32247, 32219, 32234, 32231, 32215, 32225, 32259, 32250, 32230, 32246, 32241, 32240, 32238, 32223, 32630, 32684, 32688, 32685, 32749, 32747, 32746, 32748, 32742, 32744, 32868, 32871, 33187, 33183, 33182, 33173, 33186, 33177, 33175, 33302, 33359, 33363, 33362, 33360, 33358, 33361, 34084, 34107, 34063, 34048, 34089, 34062, 34057, 34061, 34079, 34058, 34087, 34076, 34043, 34091, 34042, 34056, 34060, 34036, 34090, 34034, 34069, 34039, 34027, 34035, 34044, 34066, 34026, 34025, 34070, 34046, 34088, 34077, 34094, 34050, 34045, 34078, 34038, 34097, 34086, 34023, 34024, 34032, 34031, 34041, 34072, 34080, 34096, 34059, 34073, 34095, 34402, 34646, 34659, 34660, 34679, 34785, 34675, 34648, 34644, 34651, 34642, 34657, 34650, 34641, 34654, 34669, 34666, 34640, 34638, 34655, 34653, 34671, 34668, 34682, 34670, 34652, 34661, 34639, 34683, 34677, 34658, 34663, 34665, 34906, 35077, 35084, 35092, 35083, 35095, 35096, 35097, 35078, 35094, 35089, 35086, 35081, 35234, 35236, 35235, 35309, 35312, 35308, 35535, 35526, 35512, 35539, 35537, 35540, 35541, 35515, 35543, 35518, 35520, 35525, 35544, 35523, 35514, 35517, 35545, 35902, 35917, 35983, 36069, 36063, 36057, 36072, 36058, 36061, 36071, 36256, 36252, 36257, 36251, 36384, 36387, 36389, 36388, 36398, 36373, 36379, 36374, 36369, 36377, 36390, 36391, 36372, 36370, 36376, 36371, 36380, 36375, 36378, 36652, 36644, 36632, 36634, 36640, 36643, 36630, 36631, 36979, 36976, 36975, 36967, 36971, 37167, 37163, 37161, 37162, 37170, 37158, 37166, 37253, 37254, 37258, 37249, 37250, 37252, 37248, 37584, 37571, 37572, 37568, 37593, 37558, 37583, 37617, 37599, 37592, 37609, 37591, 37597, 37580, 37615, 37570, 37608, 37578, 37576, 37582, 37606, 37581, 37589, 37577, 37600, 37598, 37607, 37585, 37587, 37557, 37601, 37574, 37556, 38268, 38316, 38315, 38318, 38320, 38564, 38562, 38611, 38661, 38664, 38658, 38746, 38794, 38798, 38792, 38864, 38863, 38942, 38941, 38950, 38953, 38952, 38944, 38939, 38951, 39090, 39176, 39162, 39185, 39188, 39190, 39191, 39189, 39388, 39373, 39375, 39379, 39380, 39374, 39369, 39382, 39384, 39371, 39383, 39372, 39603, 39660, 39659, 39667, 39666, 39665, 39750, 39747, 39783, 39796, 39793, 39782, 39798, 39797, 39792, 39784, 39780, 39788, 40188, 40186, 40189, 40191, 40183, 40199, 40192, 40185, 40187, 40200, 40197, 40196, 40579, 40659, 40719, 40720, 20764, 20755, 20759, 20762, 20753, 20958, 21300, 21473, 22128, 22112, 22126, 22131, 22118, 22115, 22125, 22130, 22110, 22135, 22300, 22299, 22728, 22717, 22729, 22719, 22714, 22722, 22716, 22726, 23319, 23321, 23323, 23329, 23316, 23315, 23312, 23318, 23336, 23322, 23328, 23326, 23535, 23980, 23985, 23977, 23975, 23989, 23984, 23982, 23978, 23976, 23986, 23981, 23983, 23988, 24167, 24168, 24166, 24175, 24297, 24295, 24294, 24296, 24293, 24395, 24508, 24989, 25e3, 24982, 25029, 25012, 25030, 25025, 25036, 25018, 25023, 25016, 24972, 25815, 25814, 25808, 25807, 25801, 25789, 25737, 25795, 25819, 25843, 25817, 25907, 25983, 25980, 26018, 26312, 26302, 26304, 26314, 26315, 26319, 26301, 26299, 26298, 26316, 26403, 27188, 27238, 27209, 27239, 27186, 27240, 27198, 27229, 27245, 27254, 27227, 27217, 27176, 27226, 27195, 27199, 27201, 27242, 27236, 27216, 27215, 27220, 27247, 27241, 27232, 27196, 27230, 27222, 27221, 27213, 27214, 27206, 27477, 27476, 27478, 27559, 27562, 27563, 27592, 27591, 27652, 27651, 27654, 28589, 28619, 28579, 28615, 28604, 28622, 28616, 28510, 28612, 28605, 28574, 28618, 28584, 28676, 28581, 28590, 28602, 28588, 28586, 28623, 28607, 28600, 28578, 28617, 28587, 28621, 28591, 28594, 28592, 29125, 29122, 29119, 29112, 29142, 29120, 29121, 29131, 29140, 29130, 29127, 29135, 29117, 29144, 29116, 29126, 29146, 29147, 29341, 29342, 29545, 29542, 29543, 29548, 29541, 29547, 29546, 29823, 29850, 29856, 29844, 29842, 29845, 29857, 29963, 30080, 30255, 30253, 30257, 30269, 30259, 30268, 30261, 30258, 30256, 30395, 30438, 30618, 30621, 30625, 30620, 30619, 30626, 30627, 30613, 30617, 30615, 30941, 30953, 30949, 30954, 30942, 30947, 30939, 30945, 30946, 30957, 30943, 30944, 31140, 31300, 31304, 31303, 31414, 31416, 31413, 31409, 31415, 31710, 31715, 31719, 31709, 31701, 31717, 31706, 31720, 31737, 31700, 31722, 31714, 31708, 31723, 31704, 31711, 31954, 31956, 31959, 31952, 31953, 32274, 32289, 32279, 32268, 32287, 32288, 32275, 32270, 32284, 32277, 32282, 32290, 32267, 32271, 32278, 32269, 32276, 32293, 32292, 32579, 32635, 32636, 32634, 32689, 32751, 32810, 32809, 32876, 33201, 33190, 33198, 33209, 33205, 33195, 33200, 33196, 33204, 33202, 33207, 33191, 33266, 33365, 33366, 33367, 34134, 34117, 34155, 34125, 34131, 34145, 34136, 34112, 34118, 34148, 34113, 34146, 34116, 34129, 34119, 34147, 34110, 34139, 34161, 34126, 34158, 34165, 34133, 34151, 34144, 34188, 34150, 34141, 34132, 34149, 34156, 34403, 34405, 34404, 34715, 34703, 34711, 34707, 34706, 34696, 34689, 34710, 34712, 34681, 34695, 34723, 34693, 34704, 34705, 34717, 34692, 34708, 34716, 34714, 34697, 35102, 35110, 35120, 35117, 35118, 35111, 35121, 35106, 35113, 35107, 35119, 35116, 35103, 35313, 35552, 35554, 35570, 35572, 35573, 35549, 35604, 35556, 35551, 35568, 35528, 35550, 35553, 35560, 35583, 35567, 35579, 35985, 35986, 35984, 36085, 36078, 36081, 36080, 36083, 36204, 36206, 36261, 36263, 36403, 36414, 36408, 36416, 36421, 36406, 36412, 36413, 36417, 36400, 36415, 36541, 36662, 36654, 36661, 36658, 36665, 36663, 36660, 36982, 36985, 36987, 36998, 37114, 37171, 37173, 37174, 37267, 37264, 37265, 37261, 37263, 37671, 37662, 37640, 37663, 37638, 37647, 37754, 37688, 37692, 37659, 37667, 37650, 37633, 37702, 37677, 37646, 37645, 37579, 37661, 37626, 37669, 37651, 37625, 37623, 37684, 37634, 37668, 37631, 37673, 37689, 37685, 37674, 37652, 37644, 37643, 37630, 37641, 37632, 37627, 37654, 38332, 38349, 38334, 38329, 38330, 38326, 38335, 38325, 38333, 38569, 38612, 38667, 38674, 38672, 38809, 38807, 38804, 38896, 38904, 38965, 38959, 38962, 39204, 39199, 39207, 39209, 39326, 39406, 39404, 39397, 39396, 39408, 39395, 39402, 39401, 39399, 39609, 39615, 39604, 39611, 39670, 39674, 39673, 39671, 39731, 39808, 39813, 39815, 39804, 39806, 39803, 39810, 39827, 39826, 39824, 39802, 39829, 39805, 39816, 40229, 40215, 40224, 40222, 40212, 40233, 40221, 40216, 40226, 40208, 40217, 40223, 40584, 40582, 40583, 40622, 40621, 40661, 40662, 40698, 40722, 40765, 20774, 20773, 20770, 20772, 20768, 20777, 21236, 22163, 22156, 22157, 22150, 22148, 22147, 22142, 22146, 22143, 22145, 22742, 22740, 22735, 22738, 23341, 23333, 23346, 23331, 23340, 23335, 23334, 23343, 23342, 23419, 23537, 23538, 23991, 24172, 24170, 24510, 24507, 25027, 25013, 25020, 25063, 25056, 25061, 25060, 25064, 25054, 25839, 25833, 25827, 25835, 25828, 25832, 25985, 25984, 26038, 26074, 26322, 27277, 27286, 27265, 27301, 27273, 27295, 27291, 27297, 27294, 27271, 27283, 27278, 27285, 27267, 27304, 27300, 27281, 27263, 27302, 27290, 27269, 27276, 27282, 27483, 27565, 27657, 28620, 28585, 28660, 28628, 28643, 28636, 28653, 28647, 28646, 28638, 28658, 28637, 28642, 28648, 29153, 29169, 29160, 29170, 29156, 29168, 29154, 29555, 29550, 29551, 29847, 29874, 29867, 29840, 29866, 29869, 29873, 29861, 29871, 29968, 29969, 29970, 29967, 30084, 30275, 30280, 30281, 30279, 30372, 30441, 30645, 30635, 30642, 30647, 30646, 30644, 30641, 30632, 30704, 30963, 30973, 30978, 30971, 30972, 30962, 30981, 30969, 30974, 30980, 31147, 31144, 31324, 31323, 31318, 31320, 31316, 31322, 31422, 31424, 31425, 31749, 31759, 31730, 31744, 31743, 31739, 31758, 31732, 31755, 31731, 31746, 31753, 31747, 31745, 31736, 31741, 31750, 31728, 31729, 31760, 31754, 31976, 32301, 32316, 32322, 32307, 38984, 32312, 32298, 32329, 32320, 32327, 32297, 32332, 32304, 32315, 32310, 32324, 32314, 32581, 32639, 32638, 32637, 32756, 32754, 32812, 33211, 33220, 33228, 33226, 33221, 33223, 33212, 33257, 33371, 33370, 33372, 34179, 34176, 34191, 34215, 34197, 34208, 34187, 34211, 34171, 34212, 34202, 34206, 34167, 34172, 34185, 34209, 34170, 34168, 34135, 34190, 34198, 34182, 34189, 34201, 34205, 34177, 34210, 34178, 34184, 34181, 34169, 34166, 34200, 34192, 34207, 34408, 34750, 34730, 34733, 34757, 34736, 34732, 34745, 34741, 34748, 34734, 34761, 34755, 34754, 34764, 34743, 34735, 34756, 34762, 34740, 34742, 34751, 34744, 34749, 34782, 34738, 35125, 35123, 35132, 35134, 35137, 35154, 35127, 35138, 35245, 35247, 35246, 35314, 35315, 35614, 35608, 35606, 35601, 35589, 35595, 35618, 35599, 35602, 35605, 35591, 35597, 35592, 35590, 35612, 35603, 35610, 35919, 35952, 35954, 35953, 35951, 35989, 35988, 36089, 36207, 36430, 36429, 36435, 36432, 36428, 36423, 36675, 36672, 36997, 36990, 37176, 37274, 37282, 37275, 37273, 37279, 37281, 37277, 37280, 37793, 37763, 37807, 37732, 37718, 37703, 37756, 37720, 37724, 37750, 37705, 37712, 37713, 37728, 37741, 37775, 37708, 37738, 37753, 37719, 37717, 37714, 37711, 37745, 37751, 37755, 37729, 37726, 37731, 37735, 37760, 37710, 37721, 38343, 38336, 38345, 38339, 38341, 38327, 38574, 38576, 38572, 38688, 38687, 38680, 38685, 38681, 38810, 38817, 38812, 38814, 38813, 38869, 38868, 38897, 38977, 38980, 38986, 38985, 38981, 38979, 39205, 39211, 39212, 39210, 39219, 39218, 39215, 39213, 39217, 39216, 39320, 39331, 39329, 39426, 39418, 39412, 39415, 39417, 39416, 39414, 39419, 39421, 39422, 39420, 39427, 39614, 39678, 39677, 39681, 39676, 39752, 39834, 39848, 39838, 39835, 39846, 39841, 39845, 39844, 39814, 39842, 39840, 39855, 40243, 40257, 40295, 40246, 40238, 40239, 40241, 40248, 40240, 40261, 40258, 40259, 40254, 40247, 40256, 40253, 32757, 40237, 40586, 40585, 40589, 40624, 40648, 40666, 40699, 40703, 40740, 40739, 40738, 40788, 40864, 20785, 20781, 20782, 22168, 22172, 22167, 22170, 22173, 22169, 22896, 23356, 23657, 23658, 24e3, 24173, 24174, 25048, 25055, 25069, 25070, 25073, 25066, 25072, 25067, 25046, 25065, 25855, 25860, 25853, 25848, 25857, 25859, 25852, 26004, 26075, 26330, 26331, 26328, 27333, 27321, 27325, 27361, 27334, 27322, 27318, 27319, 27335, 27316, 27309, 27486, 27593, 27659, 28679, 28684, 28685, 28673, 28677, 28692, 28686, 28671, 28672, 28667, 28710, 28668, 28663, 28682, 29185, 29183, 29177, 29187, 29181, 29558, 29880, 29888, 29877, 29889, 29886, 29878, 29883, 29890, 29972, 29971, 30300, 30308, 30297, 30288, 30291, 30295, 30298, 30374, 30397, 30444, 30658, 30650, 30975, 30988, 30995, 30996, 30985, 30992, 30994, 30993, 31149, 31148, 31327, 31772, 31785, 31769, 31776, 31775, 31789, 31773, 31782, 31784, 31778, 31781, 31792, 32348, 32336, 32342, 32355, 32344, 32354, 32351, 32337, 32352, 32343, 32339, 32693, 32691, 32759, 32760, 32885, 33233, 33234, 33232, 33375, 33374, 34228, 34246, 34240, 34243, 34242, 34227, 34229, 34237, 34247, 34244, 34239, 34251, 34254, 34248, 34245, 34225, 34230, 34258, 34340, 34232, 34231, 34238, 34409, 34791, 34790, 34786, 34779, 34795, 34794, 34789, 34783, 34803, 34788, 34772, 34780, 34771, 34797, 34776, 34787, 34724, 34775, 34777, 34817, 34804, 34792, 34781, 35155, 35147, 35151, 35148, 35142, 35152, 35153, 35145, 35626, 35623, 35619, 35635, 35632, 35637, 35655, 35631, 35644, 35646, 35633, 35621, 35639, 35622, 35638, 35630, 35620, 35643, 35645, 35642, 35906, 35957, 35993, 35992, 35991, 36094, 36100, 36098, 36096, 36444, 36450, 36448, 36439, 36438, 36446, 36453, 36455, 36443, 36442, 36449, 36445, 36457, 36436, 36678, 36679, 36680, 36683, 37160, 37178, 37179, 37182, 37288, 37285, 37287, 37295, 37290, 37813, 37772, 37778, 37815, 37787, 37789, 37769, 37799, 37774, 37802, 37790, 37798, 37781, 37768, 37785, 37791, 37773, 37809, 37777, 37810, 37796, 37800, 37812, 37795, 37797, 38354, 38355, 38353, 38579, 38615, 38618, 24002, 38623, 38616, 38621, 38691, 38690, 38693, 38828, 38830, 38824, 38827, 38820, 38826, 38818, 38821, 38871, 38873, 38870, 38872, 38906, 38992, 38993, 38994, 39096, 39233, 39228, 39226, 39439, 39435, 39433, 39437, 39428, 39441, 39434, 39429, 39431, 39430, 39616, 39644, 39688, 39684, 39685, 39721, 39733, 39754, 39756, 39755, 39879, 39878, 39875, 39871, 39873, 39861, 39864, 39891, 39862, 39876, 39865, 39869, 40284, 40275, 40271, 40266, 40283, 40267, 40281, 40278, 40268, 40279, 40274, 40276, 40287, 40280, 40282, 40590, 40588, 40671, 40705, 40704, 40726, 40741, 40747, 40746, 40745, 40744, 40780, 40789, 20788, 20789, 21142, 21239, 21428, 22187, 22189, 22182, 22183, 22186, 22188, 22746, 22749, 22747, 22802, 23357, 23358, 23359, 24003, 24176, 24511, 25083, 25863, 25872, 25869, 25865, 25868, 25870, 25988, 26078, 26077, 26334, 27367, 27360, 27340, 27345, 27353, 27339, 27359, 27356, 27344, 27371, 27343, 27341, 27358, 27488, 27568, 27660, 28697, 28711, 28704, 28694, 28715, 28705, 28706, 28707, 28713, 28695, 28708, 28700, 28714, 29196, 29194, 29191, 29186, 29189, 29349, 29350, 29348, 29347, 29345, 29899, 29893, 29879, 29891, 29974, 30304, 30665, 30666, 30660, 30705, 31005, 31003, 31009, 31004, 30999, 31006, 31152, 31335, 31336, 31795, 31804, 31801, 31788, 31803, 31980, 31978, 32374, 32373, 32376, 32368, 32375, 32367, 32378, 32370, 32372, 32360, 32587, 32586, 32643, 32646, 32695, 32765, 32766, 32888, 33239, 33237, 33380, 33377, 33379, 34283, 34289, 34285, 34265, 34273, 34280, 34266, 34263, 34284, 34290, 34296, 34264, 34271, 34275, 34268, 34257, 34288, 34278, 34287, 34270, 34274, 34816, 34810, 34819, 34806, 34807, 34825, 34828, 34827, 34822, 34812, 34824, 34815, 34826, 34818, 35170, 35162, 35163, 35159, 35169, 35164, 35160, 35165, 35161, 35208, 35255, 35254, 35318, 35664, 35656, 35658, 35648, 35667, 35670, 35668, 35659, 35669, 35665, 35650, 35666, 35671, 35907, 35959, 35958, 35994, 36102, 36103, 36105, 36268, 36266, 36269, 36267, 36461, 36472, 36467, 36458, 36463, 36475, 36546, 36690, 36689, 36687, 36688, 36691, 36788, 37184, 37183, 37296, 37293, 37854, 37831, 37839, 37826, 37850, 37840, 37881, 37868, 37836, 37849, 37801, 37862, 37834, 37844, 37870, 37859, 37845, 37828, 37838, 37824, 37842, 37863, 38269, 38362, 38363, 38625, 38697, 38699, 38700, 38696, 38694, 38835, 38839, 38838, 38877, 38878, 38879, 39004, 39001, 39005, 38999, 39103, 39101, 39099, 39102, 39240, 39239, 39235, 39334, 39335, 39450, 39445, 39461, 39453, 39460, 39451, 39458, 39456, 39463, 39459, 39454, 39452, 39444, 39618, 39691, 39690, 39694, 39692, 39735, 39914, 39915, 39904, 39902, 39908, 39910, 39906, 39920, 39892, 39895, 39916, 39900, 39897, 39909, 39893, 39905, 39898, 40311, 40321, 40330, 40324, 40328, 40305, 40320, 40312, 40326, 40331, 40332, 40317, 40299, 40308, 40309, 40304, 40297, 40325, 40307, 40315, 40322, 40303, 40313, 40319, 40327, 40296, 40596, 40593, 40640, 40700, 40749, 40768, 40769, 40781, 40790, 40791, 40792, 21303, 22194, 22197, 22195, 22755, 23365, 24006, 24007, 24302, 24303, 24512, 24513, 25081, 25879, 25878, 25877, 25875, 26079, 26344, 26339, 26340, 27379, 27376, 27370, 27368, 27385, 27377, 27374, 27375, 28732, 28725, 28719, 28727, 28724, 28721, 28738, 28728, 28735, 28730, 28729, 28736, 28731, 28723, 28737, 29203, 29204, 29352, 29565, 29564, 29882, 30379, 30378, 30398, 30445, 30668, 30670, 30671, 30669, 30706, 31013, 31011, 31015, 31016, 31012, 31017, 31154, 31342, 31340, 31341, 31479, 31817, 31816, 31818, 31815, 31813, 31982, 32379, 32382, 32385, 32384, 32698, 32767, 32889, 33243, 33241, 33291, 33384, 33385, 34338, 34303, 34305, 34302, 34331, 34304, 34294, 34308, 34313, 34309, 34316, 34301, 34841, 34832, 34833, 34839, 34835, 34838, 35171, 35174, 35257, 35319, 35680, 35690, 35677, 35688, 35683, 35685, 35687, 35693, 36270, 36486, 36488, 36484, 36697, 36694, 36695, 36693, 36696, 36698, 37005, 37187, 37185, 37303, 37301, 37298, 37299, 37899, 37907, 37883, 37920, 37903, 37908, 37886, 37909, 37904, 37928, 37913, 37901, 37877, 37888, 37879, 37895, 37902, 37910, 37906, 37882, 37897, 37880, 37898, 37887, 37884, 37900, 37878, 37905, 37894, 38366, 38368, 38367, 38702, 38703, 38841, 38843, 38909, 38910, 39008, 39010, 39011, 39007, 39105, 39106, 39248, 39246, 39257, 39244, 39243, 39251, 39474, 39476, 39473, 39468, 39466, 39478, 39465, 39470, 39480, 39469, 39623, 39626, 39622, 39696, 39698, 39697, 39947, 39944, 39927, 39941, 39954, 39928, 4e4, 39943, 39950, 39942, 39959, 39956, 39945, 40351, 40345, 40356, 40349, 40338, 40344, 40336, 40347, 40352, 40340, 40348, 40362, 40343, 40353, 40346, 40354, 40360, 40350, 40355, 40383, 40361, 40342, 40358, 40359, 40601, 40603, 40602, 40677, 40676, 40679, 40678, 40752, 40750, 40795, 40800, 40798, 40797, 40793, 40849, 20794, 20793, 21144, 21143, 22211, 22205, 22206, 23368, 23367, 24011, 24015, 24305, 25085, 25883, 27394, 27388, 27395, 27384, 27392, 28739, 28740, 28746, 28744, 28745, 28741, 28742, 29213, 29210, 29209, 29566, 29975, 30314, 30672, 31021, 31025, 31023, 31828, 31827, 31986, 32394, 32391, 32392, 32395, 32390, 32397, 32589, 32699, 32816, 33245, 34328, 34346, 34342, 34335, 34339, 34332, 34329, 34343, 34350, 34337, 34336, 34345, 34334, 34341, 34857, 34845, 34843, 34848, 34852, 34844, 34859, 34890, 35181, 35177, 35182, 35179, 35322, 35705, 35704, 35653, 35706, 35707, 36112, 36116, 36271, 36494, 36492, 36702, 36699, 36701, 37190, 37188, 37189, 37305, 37951, 37947, 37942, 37929, 37949, 37948, 37936, 37945, 37930, 37943, 37932, 37952, 37937, 38373, 38372, 38371, 38709, 38714, 38847, 38881, 39012, 39113, 39110, 39104, 39256, 39254, 39481, 39485, 39494, 39492, 39490, 39489, 39482, 39487, 39629, 39701, 39703, 39704, 39702, 39738, 39762, 39979, 39965, 39964, 39980, 39971, 39976, 39977, 39972, 39969, 40375, 40374, 40380, 40385, 40391, 40394, 40399, 40382, 40389, 40387, 40379, 40373, 40398, 40377, 40378, 40364, 40392, 40369, 40365, 40396, 40371, 40397, 40370, 40570, 40604, 40683, 40686, 40685, 40731, 40728, 40730, 40753, 40782, 40805, 40804, 40850, 20153, 22214, 22213, 22219, 22897, 23371, 23372, 24021, 24017, 24306, 25889, 25888, 25894, 25890, 27403, 27400, 27401, 27661, 28757, 28758, 28759, 28754, 29214, 29215, 29353, 29567, 29912, 29909, 29913, 29911, 30317, 30381, 31029, 31156, 31344, 31345, 31831, 31836, 31833, 31835, 31834, 31988, 31985, 32401, 32591, 32647, 33246, 33387, 34356, 34357, 34355, 34348, 34354, 34358, 34860, 34856, 34854, 34858, 34853, 35185, 35263, 35262, 35323, 35710, 35716, 35714, 35718, 35717, 35711, 36117, 36501, 36500, 36506, 36498, 36496, 36502, 36503, 36704, 36706, 37191, 37964, 37968, 37962, 37963, 37967, 37959, 37957, 37960, 37961, 37958, 38719, 38883, 39018, 39017, 39115, 39252, 39259, 39502, 39507, 39508, 39500, 39503, 39496, 39498, 39497, 39506, 39504, 39632, 39705, 39723, 39739, 39766, 39765, 40006, 40008, 39999, 40004, 39993, 39987, 40001, 39996, 39991, 39988, 39986, 39997, 39990, 40411, 40402, 40414, 40410, 40395, 40400, 40412, 40401, 40415, 40425, 40409, 40408, 40406, 40437, 40405, 40413, 40630, 40688, 40757, 40755, 40754, 40770, 40811, 40853, 40866, 20797, 21145, 22760, 22759, 22898, 23373, 24024, 34863, 24399, 25089, 25091, 25092, 25897, 25893, 26006, 26347, 27409, 27410, 27407, 27594, 28763, 28762, 29218, 29570, 29569, 29571, 30320, 30676, 31847, 31846, 32405, 33388, 34362, 34368, 34361, 34364, 34353, 34363, 34366, 34864, 34866, 34862, 34867, 35190, 35188, 35187, 35326, 35724, 35726, 35723, 35720, 35909, 36121, 36504, 36708, 36707, 37308, 37986, 37973, 37981, 37975, 37982, 38852, 38853, 38912, 39510, 39513, 39710, 39711, 39712, 40018, 40024, 40016, 40010, 40013, 40011, 40021, 40025, 40012, 40014, 40443, 40439, 40431, 40419, 40427, 40440, 40420, 40438, 40417, 40430, 40422, 40434, 40432, 40418, 40428, 40436, 40435, 40424, 40429, 40642, 40656, 40690, 40691, 40710, 40732, 40760, 40759, 40758, 40771, 40783, 40817, 40816, 40814, 40815, 22227, 22221, 23374, 23661, 25901, 26349, 26350, 27411, 28767, 28769, 28765, 28768, 29219, 29915, 29925, 30677, 31032, 31159, 31158, 31850, 32407, 32649, 33389, 34371, 34872, 34871, 34869, 34891, 35732, 35733, 36510, 36511, 36512, 36509, 37310, 37309, 37314, 37995, 37992, 37993, 38629, 38726, 38723, 38727, 38855, 38885, 39518, 39637, 39769, 40035, 40039, 40038, 40034, 40030, 40032, 40450, 40446, 40455, 40451, 40454, 40453, 40448, 40449, 40457, 40447, 40445, 40452, 40608, 40734, 40774, 40820, 40821, 40822, 22228, 25902, 26040, 27416, 27417, 27415, 27418, 28770, 29222, 29354, 30680, 30681, 31033, 31849, 31851, 31990, 32410, 32408, 32411, 32409, 33248, 33249, 34374, 34375, 34376, 35193, 35194, 35196, 35195, 35327, 35736, 35737, 36517, 36516, 36515, 37998, 37997, 37999, 38001, 38003, 38729, 39026, 39263, 40040, 40046, 40045, 40459, 40461, 40464, 40463, 40466, 40465, 40609, 40693, 40713, 40775, 40824, 40827, 40826, 40825, 22302, 28774, 31855, 34876, 36274, 36518, 37315, 38004, 38008, 38006, 38005, 39520, 40052, 40051, 40049, 40053, 40468, 40467, 40694, 40714, 40868, 28776, 28773, 31991, 34410, 34878, 34877, 34879, 35742, 35996, 36521, 36553, 38731, 39027, 39028, 39116, 39265, 39339, 39524, 39526, 39527, 39716, 40469, 40471, 40776, 25095, 27422, 29223, 34380, 36520, 38018, 38016, 38017, 39529, 39528, 39726, 40473, 29225, 34379, 35743, 38019, 40057, 40631, 30325, 39531, 40058, 40477, 28777, 28778, 40612, 40830, 40777, 40856, 30849, 37561, 35023, 22715, 24658, 31911, 23290, 9556, 9574, 9559, 9568, 9580, 9571, 9562, 9577, 9565, 9554, 9572, 9557, 9566, 9578, 9569, 9560, 9575, 9563, 9555, 9573, 9558, 9567, 9579, 9570, 9561, 9576, 9564, 9553, 9552, 9581, 9582, 9584, 9583, 65517, 132423, 37595, 132575, 147397, 34124, 17077, 29679, 20917, 13897, 149826, 166372, 37700, 137691, 33518, 146632, 30780, 26436, 25311, 149811, 166314, 131744, 158643, 135941, 20395, 140525, 20488, 159017, 162436, 144896, 150193, 140563, 20521, 131966, 24484, 131968, 131911, 28379, 132127, 20605, 20737, 13434, 20750, 39020, 14147, 33814, 149924, 132231, 20832, 144308, 20842, 134143, 139516, 131813, 140592, 132494, 143923, 137603, 23426, 34685, 132531, 146585, 20914, 20920, 40244, 20937, 20943, 20945, 15580, 20947, 150182, 20915, 20962, 21314, 20973, 33741, 26942, 145197, 24443, 21003, 21030, 21052, 21173, 21079, 21140, 21177, 21189, 31765, 34114, 21216, 34317, 158483, 21253, 166622, 21833, 28377, 147328, 133460, 147436, 21299, 21316, 134114, 27851, 136998, 26651, 29653, 24650, 16042, 14540, 136936, 29149, 17570, 21357, 21364, 165547, 21374, 21375, 136598, 136723, 30694, 21395, 166555, 21408, 21419, 21422, 29607, 153458, 16217, 29596, 21441, 21445, 27721, 20041, 22526, 21465, 15019, 134031, 21472, 147435, 142755, 21494, 134263, 21523, 28793, 21803, 26199, 27995, 21613, 158547, 134516, 21853, 21647, 21668, 18342, 136973, 134877, 15796, 134477, 166332, 140952, 21831, 19693, 21551, 29719, 21894, 21929, 22021, 137431, 147514, 17746, 148533, 26291, 135348, 22071, 26317, 144010, 26276, 26285, 22093, 22095, 30961, 22257, 38791, 21502, 22272, 22255, 22253, 166758, 13859, 135759, 22342, 147877, 27758, 28811, 22338, 14001, 158846, 22502, 136214, 22531, 136276, 148323, 22566, 150517, 22620, 22698, 13665, 22752, 22748, 135740, 22779, 23551, 22339, 172368, 148088, 37843, 13729, 22815, 26790, 14019, 28249, 136766, 23076, 21843, 136850, 34053, 22985, 134478, 158849, 159018, 137180, 23001, 137211, 137138, 159142, 28017, 137256, 136917, 23033, 159301, 23211, 23139, 14054, 149929, 23159, 14088, 23190, 29797, 23251, 159649, 140628, 15749, 137489, 14130, 136888, 24195, 21200, 23414, 25992, 23420, 162318, 16388, 18525, 131588, 23509, 24928, 137780, 154060, 132517, 23539, 23453, 19728, 23557, 138052, 23571, 29646, 23572, 138405, 158504, 23625, 18653, 23685, 23785, 23791, 23947, 138745, 138807, 23824, 23832, 23878, 138916, 23738, 24023, 33532, 14381, 149761, 139337, 139635, 33415, 14390, 15298, 24110, 27274, 24181, 24186, 148668, 134355, 21414, 20151, 24272, 21416, 137073, 24073, 24308, 164994, 24313, 24315, 14496, 24316, 26686, 37915, 24333, 131521, 194708, 15070, 18606, 135994, 24378, 157832, 140240, 24408, 140401, 24419, 38845, 159342, 24434, 37696, 166454, 24487, 23990, 15711, 152144, 139114, 159992, 140904, 37334, 131742, 166441, 24625, 26245, 137335, 14691, 15815, 13881, 22416, 141236, 31089, 15936, 24734, 24740, 24755, 149890, 149903, 162387, 29860, 20705, 23200, 24932, 33828, 24898, 194726, 159442, 24961, 20980, 132694, 24967, 23466, 147383, 141407, 25043, 166813, 170333, 25040, 14642, 141696, 141505, 24611, 24924, 25886, 25483, 131352, 25285, 137072, 25301, 142861, 25452, 149983, 14871, 25656, 25592, 136078, 137212, 25744, 28554, 142902, 38932, 147596, 153373, 25825, 25829, 38011, 14950, 25658, 14935, 25933, 28438, 150056, 150051, 25989, 25965, 25951, 143486, 26037, 149824, 19255, 26065, 16600, 137257, 26080, 26083, 24543, 144384, 26136, 143863, 143864, 26180, 143780, 143781, 26187, 134773, 26215, 152038, 26227, 26228, 138813, 143921, 165364, 143816, 152339, 30661, 141559, 39332, 26370, 148380, 150049, 15147, 27130, 145346, 26462, 26471, 26466, 147917, 168173, 26583, 17641, 26658, 28240, 37436, 26625, 144358, 159136, 26717, 144495, 27105, 27147, 166623, 26995, 26819, 144845, 26881, 26880, 15666, 14849, 144956, 15232, 26540, 26977, 166474, 17148, 26934, 27032, 15265, 132041, 33635, 20624, 27129, 144985, 139562, 27205, 145155, 27293, 15347, 26545, 27336, 168348, 15373, 27421, 133411, 24798, 27445, 27508, 141261, 28341, 146139, 132021, 137560, 14144, 21537, 146266, 27617, 147196, 27612, 27703, 140427, 149745, 158545, 27738, 33318, 27769, 146876, 17605, 146877, 147876, 149772, 149760, 146633, 14053, 15595, 134450, 39811, 143865, 140433, 32655, 26679, 159013, 159137, 159211, 28054, 27996, 28284, 28420, 149887, 147589, 159346, 34099, 159604, 20935, 27804, 28189, 33838, 166689, 28207, 146991, 29779, 147330, 31180, 28239, 23185, 143435, 28664, 14093, 28573, 146992, 28410, 136343, 147517, 17749, 37872, 28484, 28508, 15694, 28532, 168304, 15675, 28575, 147780, 28627, 147601, 147797, 147513, 147440, 147380, 147775, 20959, 147798, 147799, 147776, 156125, 28747, 28798, 28839, 28801, 28876, 28885, 28886, 28895, 16644, 15848, 29108, 29078, 148087, 28971, 28997, 23176, 29002, 29038, 23708, 148325, 29007, 37730, 148161, 28972, 148570, 150055, 150050, 29114, 166888, 28861, 29198, 37954, 29205, 22801, 37955, 29220, 37697, 153093, 29230, 29248, 149876, 26813, 29269, 29271, 15957, 143428, 26637, 28477, 29314, 29482, 29483, 149539, 165931, 18669, 165892, 29480, 29486, 29647, 29610, 134202, 158254, 29641, 29769, 147938, 136935, 150052, 26147, 14021, 149943, 149901, 150011, 29687, 29717, 26883, 150054, 29753, 132547, 16087, 29788, 141485, 29792, 167602, 29767, 29668, 29814, 33721, 29804, 14128, 29812, 37873, 27180, 29826, 18771, 150156, 147807, 150137, 166799, 23366, 166915, 137374, 29896, 137608, 29966, 29929, 29982, 167641, 137803, 23511, 167596, 37765, 30029, 30026, 30055, 30062, 151426, 16132, 150803, 30094, 29789, 30110, 30132, 30210, 30252, 30289, 30287, 30319, 30326, 156661, 30352, 33263, 14328, 157969, 157966, 30369, 30373, 30391, 30412, 159647, 33890, 151709, 151933, 138780, 30494, 30502, 30528, 25775, 152096, 30552, 144044, 30639, 166244, 166248, 136897, 30708, 30729, 136054, 150034, 26826, 30895, 30919, 30931, 38565, 31022, 153056, 30935, 31028, 30897, 161292, 36792, 34948, 166699, 155779, 140828, 31110, 35072, 26882, 31104, 153687, 31133, 162617, 31036, 31145, 28202, 160038, 16040, 31174, 168205, 31188],
    "euc-kr": [44034, 44035, 44037, 44038, 44043, 44044, 44045, 44046, 44047, 44056, 44062, 44063, 44065, 44066, 44067, 44069, 44070, 44071, 44072, 44073, 44074, 44075, 44078, 44082, 44083, 44084, null, null, null, null, null, null, 44085, 44086, 44087, 44090, 44091, 44093, 44094, 44095, 44097, 44098, 44099, 44100, 44101, 44102, 44103, 44104, 44105, 44106, 44108, 44110, 44111, 44112, 44113, 44114, 44115, 44117, null, null, null, null, null, null, 44118, 44119, 44121, 44122, 44123, 44125, 44126, 44127, 44128, 44129, 44130, 44131, 44132, 44133, 44134, 44135, 44136, 44137, 44138, 44139, 44140, 44141, 44142, 44143, 44146, 44147, 44149, 44150, 44153, 44155, 44156, 44157, 44158, 44159, 44162, 44167, 44168, 44173, 44174, 44175, 44177, 44178, 44179, 44181, 44182, 44183, 44184, 44185, 44186, 44187, 44190, 44194, 44195, 44196, 44197, 44198, 44199, 44203, 44205, 44206, 44209, 44210, 44211, 44212, 44213, 44214, 44215, 44218, 44222, 44223, 44224, 44226, 44227, 44229, 44230, 44231, 44233, 44234, 44235, 44237, 44238, 44239, 44240, 44241, 44242, 44243, 44244, 44246, 44248, 44249, 44250, 44251, 44252, 44253, 44254, 44255, 44258, 44259, 44261, 44262, 44265, 44267, 44269, 44270, 44274, 44276, 44279, 44280, 44281, 44282, 44283, 44286, 44287, 44289, 44290, 44291, 44293, 44295, 44296, 44297, 44298, 44299, 44302, 44304, 44306, 44307, 44308, 44309, 44310, 44311, 44313, 44314, 44315, 44317, 44318, 44319, 44321, 44322, 44323, 44324, 44325, 44326, 44327, 44328, 44330, 44331, 44334, 44335, 44336, 44337, 44338, 44339, null, null, null, null, null, null, 44342, 44343, 44345, 44346, 44347, 44349, 44350, 44351, 44352, 44353, 44354, 44355, 44358, 44360, 44362, 44363, 44364, 44365, 44366, 44367, 44369, 44370, 44371, 44373, 44374, 44375, null, null, null, null, null, null, 44377, 44378, 44379, 44380, 44381, 44382, 44383, 44384, 44386, 44388, 44389, 44390, 44391, 44392, 44393, 44394, 44395, 44398, 44399, 44401, 44402, 44407, 44408, 44409, 44410, 44414, 44416, 44419, 44420, 44421, 44422, 44423, 44426, 44427, 44429, 44430, 44431, 44433, 44434, 44435, 44436, 44437, 44438, 44439, 44440, 44441, 44442, 44443, 44446, 44447, 44448, 44449, 44450, 44451, 44453, 44454, 44455, 44456, 44457, 44458, 44459, 44460, 44461, 44462, 44463, 44464, 44465, 44466, 44467, 44468, 44469, 44470, 44472, 44473, 44474, 44475, 44476, 44477, 44478, 44479, 44482, 44483, 44485, 44486, 44487, 44489, 44490, 44491, 44492, 44493, 44494, 44495, 44498, 44500, 44501, 44502, 44503, 44504, 44505, 44506, 44507, 44509, 44510, 44511, 44513, 44514, 44515, 44517, 44518, 44519, 44520, 44521, 44522, 44523, 44524, 44525, 44526, 44527, 44528, 44529, 44530, 44531, 44532, 44533, 44534, 44535, 44538, 44539, 44541, 44542, 44546, 44547, 44548, 44549, 44550, 44551, 44554, 44556, 44558, 44559, 44560, 44561, 44562, 44563, 44565, 44566, 44567, 44568, 44569, 44570, 44571, 44572, null, null, null, null, null, null, 44573, 44574, 44575, 44576, 44577, 44578, 44579, 44580, 44581, 44582, 44583, 44584, 44585, 44586, 44587, 44588, 44589, 44590, 44591, 44594, 44595, 44597, 44598, 44601, 44603, 44604, null, null, null, null, null, null, 44605, 44606, 44607, 44610, 44612, 44615, 44616, 44617, 44619, 44623, 44625, 44626, 44627, 44629, 44631, 44632, 44633, 44634, 44635, 44638, 44642, 44643, 44644, 44646, 44647, 44650, 44651, 44653, 44654, 44655, 44657, 44658, 44659, 44660, 44661, 44662, 44663, 44666, 44670, 44671, 44672, 44673, 44674, 44675, 44678, 44679, 44680, 44681, 44682, 44683, 44685, 44686, 44687, 44688, 44689, 44690, 44691, 44692, 44693, 44694, 44695, 44696, 44697, 44698, 44699, 44700, 44701, 44702, 44703, 44704, 44705, 44706, 44707, 44708, 44709, 44710, 44711, 44712, 44713, 44714, 44715, 44716, 44717, 44718, 44719, 44720, 44721, 44722, 44723, 44724, 44725, 44726, 44727, 44728, 44729, 44730, 44731, 44735, 44737, 44738, 44739, 44741, 44742, 44743, 44744, 44745, 44746, 44747, 44750, 44754, 44755, 44756, 44757, 44758, 44759, 44762, 44763, 44765, 44766, 44767, 44768, 44769, 44770, 44771, 44772, 44773, 44774, 44775, 44777, 44778, 44780, 44782, 44783, 44784, 44785, 44786, 44787, 44789, 44790, 44791, 44793, 44794, 44795, 44797, 44798, 44799, 44800, 44801, 44802, 44803, 44804, 44805, null, null, null, null, null, null, 44806, 44809, 44810, 44811, 44812, 44814, 44815, 44817, 44818, 44819, 44820, 44821, 44822, 44823, 44824, 44825, 44826, 44827, 44828, 44829, 44830, 44831, 44832, 44833, 44834, 44835, null, null, null, null, null, null, 44836, 44837, 44838, 44839, 44840, 44841, 44842, 44843, 44846, 44847, 44849, 44851, 44853, 44854, 44855, 44856, 44857, 44858, 44859, 44862, 44864, 44868, 44869, 44870, 44871, 44874, 44875, 44876, 44877, 44878, 44879, 44881, 44882, 44883, 44884, 44885, 44886, 44887, 44888, 44889, 44890, 44891, 44894, 44895, 44896, 44897, 44898, 44899, 44902, 44903, 44904, 44905, 44906, 44907, 44908, 44909, 44910, 44911, 44912, 44913, 44914, 44915, 44916, 44917, 44918, 44919, 44920, 44922, 44923, 44924, 44925, 44926, 44927, 44929, 44930, 44931, 44933, 44934, 44935, 44937, 44938, 44939, 44940, 44941, 44942, 44943, 44946, 44947, 44948, 44950, 44951, 44952, 44953, 44954, 44955, 44957, 44958, 44959, 44960, 44961, 44962, 44963, 44964, 44965, 44966, 44967, 44968, 44969, 44970, 44971, 44972, 44973, 44974, 44975, 44976, 44977, 44978, 44979, 44980, 44981, 44982, 44983, 44986, 44987, 44989, 44990, 44991, 44993, 44994, 44995, 44996, 44997, 44998, 45002, 45004, 45007, 45008, 45009, 45010, 45011, 45013, 45014, 45015, 45016, 45017, 45018, 45019, 45021, 45022, 45023, 45024, 45025, null, null, null, null, null, null, 45026, 45027, 45028, 45029, 45030, 45031, 45034, 45035, 45036, 45037, 45038, 45039, 45042, 45043, 45045, 45046, 45047, 45049, 45050, 45051, 45052, 45053, 45054, 45055, 45058, 45059, null, null, null, null, null, null, 45061, 45062, 45063, 45064, 45065, 45066, 45067, 45069, 45070, 45071, 45073, 45074, 45075, 45077, 45078, 45079, 45080, 45081, 45082, 45083, 45086, 45087, 45088, 45089, 45090, 45091, 45092, 45093, 45094, 45095, 45097, 45098, 45099, 45100, 45101, 45102, 45103, 45104, 45105, 45106, 45107, 45108, 45109, 45110, 45111, 45112, 45113, 45114, 45115, 45116, 45117, 45118, 45119, 45120, 45121, 45122, 45123, 45126, 45127, 45129, 45131, 45133, 45135, 45136, 45137, 45138, 45142, 45144, 45146, 45147, 45148, 45150, 45151, 45152, 45153, 45154, 45155, 45156, 45157, 45158, 45159, 45160, 45161, 45162, 45163, 45164, 45165, 45166, 45167, 45168, 45169, 45170, 45171, 45172, 45173, 45174, 45175, 45176, 45177, 45178, 45179, 45182, 45183, 45185, 45186, 45187, 45189, 45190, 45191, 45192, 45193, 45194, 45195, 45198, 45200, 45202, 45203, 45204, 45205, 45206, 45207, 45211, 45213, 45214, 45219, 45220, 45221, 45222, 45223, 45226, 45232, 45234, 45238, 45239, 45241, 45242, 45243, 45245, 45246, 45247, 45248, 45249, 45250, 45251, 45254, 45258, 45259, 45260, 45261, 45262, 45263, 45266, null, null, null, null, null, null, 45267, 45269, 45270, 45271, 45273, 45274, 45275, 45276, 45277, 45278, 45279, 45281, 45282, 45283, 45284, 45286, 45287, 45288, 45289, 45290, 45291, 45292, 45293, 45294, 45295, 45296, null, null, null, null, null, null, 45297, 45298, 45299, 45300, 45301, 45302, 45303, 45304, 45305, 45306, 45307, 45308, 45309, 45310, 45311, 45312, 45313, 45314, 45315, 45316, 45317, 45318, 45319, 45322, 45325, 45326, 45327, 45329, 45332, 45333, 45334, 45335, 45338, 45342, 45343, 45344, 45345, 45346, 45350, 45351, 45353, 45354, 45355, 45357, 45358, 45359, 45360, 45361, 45362, 45363, 45366, 45370, 45371, 45372, 45373, 45374, 45375, 45378, 45379, 45381, 45382, 45383, 45385, 45386, 45387, 45388, 45389, 45390, 45391, 45394, 45395, 45398, 45399, 45401, 45402, 45403, 45405, 45406, 45407, 45409, 45410, 45411, 45412, 45413, 45414, 45415, 45416, 45417, 45418, 45419, 45420, 45421, 45422, 45423, 45424, 45425, 45426, 45427, 45428, 45429, 45430, 45431, 45434, 45435, 45437, 45438, 45439, 45441, 45443, 45444, 45445, 45446, 45447, 45450, 45452, 45454, 45455, 45456, 45457, 45461, 45462, 45463, 45465, 45466, 45467, 45469, 45470, 45471, 45472, 45473, 45474, 45475, 45476, 45477, 45478, 45479, 45481, 45482, 45483, 45484, 45485, 45486, 45487, 45488, 45489, 45490, 45491, 45492, 45493, 45494, 45495, 45496, null, null, null, null, null, null, 45497, 45498, 45499, 45500, 45501, 45502, 45503, 45504, 45505, 45506, 45507, 45508, 45509, 45510, 45511, 45512, 45513, 45514, 45515, 45517, 45518, 45519, 45521, 45522, 45523, 45525, null, null, null, null, null, null, 45526, 45527, 45528, 45529, 45530, 45531, 45534, 45536, 45537, 45538, 45539, 45540, 45541, 45542, 45543, 45546, 45547, 45549, 45550, 45551, 45553, 45554, 45555, 45556, 45557, 45558, 45559, 45560, 45562, 45564, 45566, 45567, 45568, 45569, 45570, 45571, 45574, 45575, 45577, 45578, 45581, 45582, 45583, 45584, 45585, 45586, 45587, 45590, 45592, 45594, 45595, 45596, 45597, 45598, 45599, 45601, 45602, 45603, 45604, 45605, 45606, 45607, 45608, 45609, 45610, 45611, 45612, 45613, 45614, 45615, 45616, 45617, 45618, 45619, 45621, 45622, 45623, 45624, 45625, 45626, 45627, 45629, 45630, 45631, 45632, 45633, 45634, 45635, 45636, 45637, 45638, 45639, 45640, 45641, 45642, 45643, 45644, 45645, 45646, 45647, 45648, 45649, 45650, 45651, 45652, 45653, 45654, 45655, 45657, 45658, 45659, 45661, 45662, 45663, 45665, 45666, 45667, 45668, 45669, 45670, 45671, 45674, 45675, 45676, 45677, 45678, 45679, 45680, 45681, 45682, 45683, 45686, 45687, 45688, 45689, 45690, 45691, 45693, 45694, 45695, 45696, 45697, 45698, 45699, 45702, 45703, 45704, 45706, 45707, 45708, 45709, 45710, null, null, null, null, null, null, 45711, 45714, 45715, 45717, 45718, 45719, 45723, 45724, 45725, 45726, 45727, 45730, 45732, 45735, 45736, 45737, 45739, 45741, 45742, 45743, 45745, 45746, 45747, 45749, 45750, 45751, null, null, null, null, null, null, 45752, 45753, 45754, 45755, 45756, 45757, 45758, 45759, 45760, 45761, 45762, 45763, 45764, 45765, 45766, 45767, 45770, 45771, 45773, 45774, 45775, 45777, 45779, 45780, 45781, 45782, 45783, 45786, 45788, 45790, 45791, 45792, 45793, 45795, 45799, 45801, 45802, 45808, 45809, 45810, 45814, 45820, 45821, 45822, 45826, 45827, 45829, 45830, 45831, 45833, 45834, 45835, 45836, 45837, 45838, 45839, 45842, 45846, 45847, 45848, 45849, 45850, 45851, 45853, 45854, 45855, 45856, 45857, 45858, 45859, 45860, 45861, 45862, 45863, 45864, 45865, 45866, 45867, 45868, 45869, 45870, 45871, 45872, 45873, 45874, 45875, 45876, 45877, 45878, 45879, 45880, 45881, 45882, 45883, 45884, 45885, 45886, 45887, 45888, 45889, 45890, 45891, 45892, 45893, 45894, 45895, 45896, 45897, 45898, 45899, 45900, 45901, 45902, 45903, 45904, 45905, 45906, 45907, 45911, 45913, 45914, 45917, 45920, 45921, 45922, 45923, 45926, 45928, 45930, 45932, 45933, 45935, 45938, 45939, 45941, 45942, 45943, 45945, 45946, 45947, 45948, 45949, 45950, 45951, 45954, 45958, 45959, 45960, 45961, 45962, 45963, 45965, null, null, null, null, null, null, 45966, 45967, 45969, 45970, 45971, 45973, 45974, 45975, 45976, 45977, 45978, 45979, 45980, 45981, 45982, 45983, 45986, 45987, 45988, 45989, 45990, 45991, 45993, 45994, 45995, 45997, null, null, null, null, null, null, 45998, 45999, 46e3, 46001, 46002, 46003, 46004, 46005, 46006, 46007, 46008, 46009, 46010, 46011, 46012, 46013, 46014, 46015, 46016, 46017, 46018, 46019, 46022, 46023, 46025, 46026, 46029, 46031, 46033, 46034, 46035, 46038, 46040, 46042, 46044, 46046, 46047, 46049, 46050, 46051, 46053, 46054, 46055, 46057, 46058, 46059, 46060, 46061, 46062, 46063, 46064, 46065, 46066, 46067, 46068, 46069, 46070, 46071, 46072, 46073, 46074, 46075, 46077, 46078, 46079, 46080, 46081, 46082, 46083, 46084, 46085, 46086, 46087, 46088, 46089, 46090, 46091, 46092, 46093, 46094, 46095, 46097, 46098, 46099, 46100, 46101, 46102, 46103, 46105, 46106, 46107, 46109, 46110, 46111, 46113, 46114, 46115, 46116, 46117, 46118, 46119, 46122, 46124, 46125, 46126, 46127, 46128, 46129, 46130, 46131, 46133, 46134, 46135, 46136, 46137, 46138, 46139, 46140, 46141, 46142, 46143, 46144, 46145, 46146, 46147, 46148, 46149, 46150, 46151, 46152, 46153, 46154, 46155, 46156, 46157, 46158, 46159, 46162, 46163, 46165, 46166, 46167, 46169, 46170, 46171, 46172, 46173, 46174, 46175, 46178, 46180, 46182, null, null, null, null, null, null, 46183, 46184, 46185, 46186, 46187, 46189, 46190, 46191, 46192, 46193, 46194, 46195, 46196, 46197, 46198, 46199, 46200, 46201, 46202, 46203, 46204, 46205, 46206, 46207, 46209, 46210, null, null, null, null, null, null, 46211, 46212, 46213, 46214, 46215, 46217, 46218, 46219, 46220, 46221, 46222, 46223, 46224, 46225, 46226, 46227, 46228, 46229, 46230, 46231, 46232, 46233, 46234, 46235, 46236, 46238, 46239, 46240, 46241, 46242, 46243, 46245, 46246, 46247, 46249, 46250, 46251, 46253, 46254, 46255, 46256, 46257, 46258, 46259, 46260, 46262, 46264, 46266, 46267, 46268, 46269, 46270, 46271, 46273, 46274, 46275, 46277, 46278, 46279, 46281, 46282, 46283, 46284, 46285, 46286, 46287, 46289, 46290, 46291, 46292, 46294, 46295, 46296, 46297, 46298, 46299, 46302, 46303, 46305, 46306, 46309, 46311, 46312, 46313, 46314, 46315, 46318, 46320, 46322, 46323, 46324, 46325, 46326, 46327, 46329, 46330, 46331, 46332, 46333, 46334, 46335, 46336, 46337, 46338, 46339, 46340, 46341, 46342, 46343, 46344, 46345, 46346, 46347, 46348, 46349, 46350, 46351, 46352, 46353, 46354, 46355, 46358, 46359, 46361, 46362, 46365, 46366, 46367, 46368, 46369, 46370, 46371, 46374, 46379, 46380, 46381, 46382, 46383, 46386, 46387, 46389, 46390, 46391, 46393, 46394, 46395, 46396, 46397, 46398, 46399, 46402, 46406, null, null, null, null, null, null, 46407, 46408, 46409, 46410, 46414, 46415, 46417, 46418, 46419, 46421, 46422, 46423, 46424, 46425, 46426, 46427, 46430, 46434, 46435, 46436, 46437, 46438, 46439, 46440, 46441, 46442, null, null, null, null, null, null, 46443, 46444, 46445, 46446, 46447, 46448, 46449, 46450, 46451, 46452, 46453, 46454, 46455, 46456, 46457, 46458, 46459, 46460, 46461, 46462, 46463, 46464, 46465, 46466, 46467, 46468, 46469, 46470, 46471, 46472, 46473, 46474, 46475, 46476, 46477, 46478, 46479, 46480, 46481, 46482, 46483, 46484, 46485, 46486, 46487, 46488, 46489, 46490, 46491, 46492, 46493, 46494, 46495, 46498, 46499, 46501, 46502, 46503, 46505, 46508, 46509, 46510, 46511, 46514, 46518, 46519, 46520, 46521, 46522, 46526, 46527, 46529, 46530, 46531, 46533, 46534, 46535, 46536, 46537, 46538, 46539, 46542, 46546, 46547, 46548, 46549, 46550, 46551, 46553, 46554, 46555, 46556, 46557, 46558, 46559, 46560, 46561, 46562, 46563, 46564, 46565, 46566, 46567, 46568, 46569, 46570, 46571, 46573, 46574, 46575, 46576, 46577, 46578, 46579, 46580, 46581, 46582, 46583, 46584, 46585, 46586, 46587, 46588, 46589, 46590, 46591, 46592, 46593, 46594, 46595, 46596, 46597, 46598, 46599, 46600, 46601, 46602, 46603, 46604, 46605, 46606, 46607, 46610, 46611, 46613, 46614, 46615, 46617, 46618, 46619, 46620, 46621, null, null, null, null, null, null, 46622, 46623, 46624, 46625, 46626, 46627, 46628, 46630, 46631, 46632, 46633, 46634, 46635, 46637, 46638, 46639, 46640, 46641, 46642, 46643, 46645, 46646, 46647, 46648, 46649, 46650, null, null, null, null, null, null, 46651, 46652, 46653, 46654, 46655, 46656, 46657, 46658, 46659, 46660, 46661, 46662, 46663, 46665, 46666, 46667, 46668, 46669, 46670, 46671, 46672, 46673, 46674, 46675, 46676, 46677, 46678, 46679, 46680, 46681, 46682, 46683, 46684, 46685, 46686, 46687, 46688, 46689, 46690, 46691, 46693, 46694, 46695, 46697, 46698, 46699, 46700, 46701, 46702, 46703, 46704, 46705, 46706, 46707, 46708, 46709, 46710, 46711, 46712, 46713, 46714, 46715, 46716, 46717, 46718, 46719, 46720, 46721, 46722, 46723, 46724, 46725, 46726, 46727, 46728, 46729, 46730, 46731, 46732, 46733, 46734, 46735, 46736, 46737, 46738, 46739, 46740, 46741, 46742, 46743, 46744, 46745, 46746, 46747, 46750, 46751, 46753, 46754, 46755, 46757, 46758, 46759, 46760, 46761, 46762, 46765, 46766, 46767, 46768, 46770, 46771, 46772, 46773, 46774, 46775, 46776, 46777, 46778, 46779, 46780, 46781, 46782, 46783, 46784, 46785, 46786, 46787, 46788, 46789, 46790, 46791, 46792, 46793, 46794, 46795, 46796, 46797, 46798, 46799, 46800, 46801, 46802, 46803, 46805, 46806, 46807, 46808, 46809, 46810, 46811, 46812, 46813, null, null, null, null, null, null, 46814, 46815, 46816, 46817, 46818, 46819, 46820, 46821, 46822, 46823, 46824, 46825, 46826, 46827, 46828, 46829, 46830, 46831, 46833, 46834, 46835, 46837, 46838, 46839, 46841, 46842, null, null, null, null, null, null, 46843, 46844, 46845, 46846, 46847, 46850, 46851, 46852, 46854, 46855, 46856, 46857, 46858, 46859, 46860, 46861, 46862, 46863, 46864, 46865, 46866, 46867, 46868, 46869, 46870, 46871, 46872, 46873, 46874, 46875, 46876, 46877, 46878, 46879, 46880, 46881, 46882, 46883, 46884, 46885, 46886, 46887, 46890, 46891, 46893, 46894, 46897, 46898, 46899, 46900, 46901, 46902, 46903, 46906, 46908, 46909, 46910, 46911, 46912, 46913, 46914, 46915, 46917, 46918, 46919, 46921, 46922, 46923, 46925, 46926, 46927, 46928, 46929, 46930, 46931, 46934, 46935, 46936, 46937, 46938, 46939, 46940, 46941, 46942, 46943, 46945, 46946, 46947, 46949, 46950, 46951, 46953, 46954, 46955, 46956, 46957, 46958, 46959, 46962, 46964, 46966, 46967, 46968, 46969, 46970, 46971, 46974, 46975, 46977, 46978, 46979, 46981, 46982, 46983, 46984, 46985, 46986, 46987, 46990, 46995, 46996, 46997, 47002, 47003, 47005, 47006, 47007, 47009, 47010, 47011, 47012, 47013, 47014, 47015, 47018, 47022, 47023, 47024, 47025, 47026, 47027, 47030, 47031, 47033, 47034, 47035, 47036, 47037, 47038, 47039, 47040, 47041, null, null, null, null, null, null, 47042, 47043, 47044, 47045, 47046, 47048, 47050, 47051, 47052, 47053, 47054, 47055, 47056, 47057, 47058, 47059, 47060, 47061, 47062, 47063, 47064, 47065, 47066, 47067, 47068, 47069, null, null, null, null, null, null, 47070, 47071, 47072, 47073, 47074, 47075, 47076, 47077, 47078, 47079, 47080, 47081, 47082, 47083, 47086, 47087, 47089, 47090, 47091, 47093, 47094, 47095, 47096, 47097, 47098, 47099, 47102, 47106, 47107, 47108, 47109, 47110, 47114, 47115, 47117, 47118, 47119, 47121, 47122, 47123, 47124, 47125, 47126, 47127, 47130, 47132, 47134, 47135, 47136, 47137, 47138, 47139, 47142, 47143, 47145, 47146, 47147, 47149, 47150, 47151, 47152, 47153, 47154, 47155, 47158, 47162, 47163, 47164, 47165, 47166, 47167, 47169, 47170, 47171, 47173, 47174, 47175, 47176, 47177, 47178, 47179, 47180, 47181, 47182, 47183, 47184, 47186, 47188, 47189, 47190, 47191, 47192, 47193, 47194, 47195, 47198, 47199, 47201, 47202, 47203, 47205, 47206, 47207, 47208, 47209, 47210, 47211, 47214, 47216, 47218, 47219, 47220, 47221, 47222, 47223, 47225, 47226, 47227, 47229, 47230, 47231, 47232, 47233, 47234, 47235, 47236, 47237, 47238, 47239, 47240, 47241, 47242, 47243, 47244, 47246, 47247, 47248, 47249, 47250, 47251, 47252, 47253, 47254, 47255, 47256, 47257, 47258, 47259, 47260, 47261, 47262, 47263, null, null, null, null, null, null, 47264, 47265, 47266, 47267, 47268, 47269, 47270, 47271, 47273, 47274, 47275, 47276, 47277, 47278, 47279, 47281, 47282, 47283, 47285, 47286, 47287, 47289, 47290, 47291, 47292, 47293, null, null, null, null, null, null, 47294, 47295, 47298, 47300, 47302, 47303, 47304, 47305, 47306, 47307, 47309, 47310, 47311, 47313, 47314, 47315, 47317, 47318, 47319, 47320, 47321, 47322, 47323, 47324, 47326, 47328, 47330, 47331, 47332, 47333, 47334, 47335, 47338, 47339, 47341, 47342, 47343, 47345, 47346, 47347, 47348, 47349, 47350, 47351, 47354, 47356, 47358, 47359, 47360, 47361, 47362, 47363, 47365, 47366, 47367, 47368, 47369, 47370, 47371, 47372, 47373, 47374, 47375, 47376, 47377, 47378, 47379, 47380, 47381, 47382, 47383, 47385, 47386, 47387, 47388, 47389, 47390, 47391, 47393, 47394, 47395, 47396, 47397, 47398, 47399, 47400, 47401, 47402, 47403, 47404, 47405, 47406, 47407, 47408, 47409, 47410, 47411, 47412, 47413, 47414, 47415, 47416, 47417, 47418, 47419, 47422, 47423, 47425, 47426, 47427, 47429, 47430, 47431, 47432, 47433, 47434, 47435, 47437, 47438, 47440, 47442, 47443, 47444, 47445, 47446, 47447, 47450, 47451, 47453, 47454, 47455, 47457, 47458, 47459, 47460, 47461, 47462, 47463, 47466, 47468, 47470, 47471, 47472, 47473, 47474, 47475, 47478, 47479, 47481, 47482, 47483, 47485, null, null, null, null, null, null, 47486, 47487, 47488, 47489, 47490, 47491, 47494, 47496, 47499, 47500, 47503, 47504, 47505, 47506, 47507, 47508, 47509, 47510, 47511, 47512, 47513, 47514, 47515, 47516, 47517, 47518, null, null, null, null, null, null, 47519, 47520, 47521, 47522, 47523, 47524, 47525, 47526, 47527, 47528, 47529, 47530, 47531, 47534, 47535, 47537, 47538, 47539, 47541, 47542, 47543, 47544, 47545, 47546, 47547, 47550, 47552, 47554, 47555, 47556, 47557, 47558, 47559, 47562, 47563, 47565, 47571, 47572, 47573, 47574, 47575, 47578, 47580, 47583, 47584, 47586, 47590, 47591, 47593, 47594, 47595, 47597, 47598, 47599, 47600, 47601, 47602, 47603, 47606, 47611, 47612, 47613, 47614, 47615, 47618, 47619, 47620, 47621, 47622, 47623, 47625, 47626, 47627, 47628, 47629, 47630, 47631, 47632, 47633, 47634, 47635, 47636, 47638, 47639, 47640, 47641, 47642, 47643, 47644, 47645, 47646, 47647, 47648, 47649, 47650, 47651, 47652, 47653, 47654, 47655, 47656, 47657, 47658, 47659, 47660, 47661, 47662, 47663, 47664, 47665, 47666, 47667, 47668, 47669, 47670, 47671, 47674, 47675, 47677, 47678, 47679, 47681, 47683, 47684, 47685, 47686, 47687, 47690, 47692, 47695, 47696, 47697, 47698, 47702, 47703, 47705, 47706, 47707, 47709, 47710, 47711, 47712, 47713, 47714, 47715, 47718, 47722, 47723, 47724, 47725, 47726, 47727, null, null, null, null, null, null, 47730, 47731, 47733, 47734, 47735, 47737, 47738, 47739, 47740, 47741, 47742, 47743, 47744, 47745, 47746, 47750, 47752, 47753, 47754, 47755, 47757, 47758, 47759, 47760, 47761, 47762, null, null, null, null, null, null, 47763, 47764, 47765, 47766, 47767, 47768, 47769, 47770, 47771, 47772, 47773, 47774, 47775, 47776, 47777, 47778, 47779, 47780, 47781, 47782, 47783, 47786, 47789, 47790, 47791, 47793, 47795, 47796, 47797, 47798, 47799, 47802, 47804, 47806, 47807, 47808, 47809, 47810, 47811, 47813, 47814, 47815, 47817, 47818, 47819, 47820, 47821, 47822, 47823, 47824, 47825, 47826, 47827, 47828, 47829, 47830, 47831, 47834, 47835, 47836, 47837, 47838, 47839, 47840, 47841, 47842, 47843, 47844, 47845, 47846, 47847, 47848, 47849, 47850, 47851, 47852, 47853, 47854, 47855, 47856, 47857, 47858, 47859, 47860, 47861, 47862, 47863, 47864, 47865, 47866, 47867, 47869, 47870, 47871, 47873, 47874, 47875, 47877, 47878, 47879, 47880, 47881, 47882, 47883, 47884, 47886, 47888, 47890, 47891, 47892, 47893, 47894, 47895, 47897, 47898, 47899, 47901, 47902, 47903, 47905, 47906, 47907, 47908, 47909, 47910, 47911, 47912, 47914, 47916, 47917, 47918, 47919, 47920, 47921, 47922, 47923, 47927, 47929, 47930, 47935, 47936, 47937, 47938, 47939, 47942, 47944, 47946, 47947, 47948, 47950, 47953, 47954, null, null, null, null, null, null, 47955, 47957, 47958, 47959, 47961, 47962, 47963, 47964, 47965, 47966, 47967, 47968, 47970, 47972, 47973, 47974, 47975, 47976, 47977, 47978, 47979, 47981, 47982, 47983, 47984, 47985, null, null, null, null, null, null, 47986, 47987, 47988, 47989, 47990, 47991, 47992, 47993, 47994, 47995, 47996, 47997, 47998, 47999, 48e3, 48001, 48002, 48003, 48004, 48005, 48006, 48007, 48009, 48010, 48011, 48013, 48014, 48015, 48017, 48018, 48019, 48020, 48021, 48022, 48023, 48024, 48025, 48026, 48027, 48028, 48029, 48030, 48031, 48032, 48033, 48034, 48035, 48037, 48038, 48039, 48041, 48042, 48043, 48045, 48046, 48047, 48048, 48049, 48050, 48051, 48053, 48054, 48056, 48057, 48058, 48059, 48060, 48061, 48062, 48063, 48065, 48066, 48067, 48069, 48070, 48071, 48073, 48074, 48075, 48076, 48077, 48078, 48079, 48081, 48082, 48084, 48085, 48086, 48087, 48088, 48089, 48090, 48091, 48092, 48093, 48094, 48095, 48096, 48097, 48098, 48099, 48100, 48101, 48102, 48103, 48104, 48105, 48106, 48107, 48108, 48109, 48110, 48111, 48112, 48113, 48114, 48115, 48116, 48117, 48118, 48119, 48122, 48123, 48125, 48126, 48129, 48131, 48132, 48133, 48134, 48135, 48138, 48142, 48144, 48146, 48147, 48153, 48154, 48160, 48161, 48162, 48163, 48166, 48168, 48170, 48171, 48172, 48174, 48175, 48178, 48179, 48181, null, null, null, null, null, null, 48182, 48183, 48185, 48186, 48187, 48188, 48189, 48190, 48191, 48194, 48198, 48199, 48200, 48202, 48203, 48206, 48207, 48209, 48210, 48211, 48212, 48213, 48214, 48215, 48216, 48217, null, null, null, null, null, null, 48218, 48219, 48220, 48222, 48223, 48224, 48225, 48226, 48227, 48228, 48229, 48230, 48231, 48232, 48233, 48234, 48235, 48236, 48237, 48238, 48239, 48240, 48241, 48242, 48243, 48244, 48245, 48246, 48247, 48248, 48249, 48250, 48251, 48252, 48253, 48254, 48255, 48256, 48257, 48258, 48259, 48262, 48263, 48265, 48266, 48269, 48271, 48272, 48273, 48274, 48275, 48278, 48280, 48283, 48284, 48285, 48286, 48287, 48290, 48291, 48293, 48294, 48297, 48298, 48299, 48300, 48301, 48302, 48303, 48306, 48310, 48311, 48312, 48313, 48314, 48315, 48318, 48319, 48321, 48322, 48323, 48325, 48326, 48327, 48328, 48329, 48330, 48331, 48332, 48334, 48338, 48339, 48340, 48342, 48343, 48345, 48346, 48347, 48349, 48350, 48351, 48352, 48353, 48354, 48355, 48356, 48357, 48358, 48359, 48360, 48361, 48362, 48363, 48364, 48365, 48366, 48367, 48368, 48369, 48370, 48371, 48375, 48377, 48378, 48379, 48381, 48382, 48383, 48384, 48385, 48386, 48387, 48390, 48392, 48394, 48395, 48396, 48397, 48398, 48399, 48401, 48402, 48403, 48405, 48406, 48407, 48408, 48409, 48410, 48411, 48412, 48413, null, null, null, null, null, null, 48414, 48415, 48416, 48417, 48418, 48419, 48421, 48422, 48423, 48424, 48425, 48426, 48427, 48429, 48430, 48431, 48432, 48433, 48434, 48435, 48436, 48437, 48438, 48439, 48440, 48441, null, null, null, null, null, null, 48442, 48443, 48444, 48445, 48446, 48447, 48449, 48450, 48451, 48452, 48453, 48454, 48455, 48458, 48459, 48461, 48462, 48463, 48465, 48466, 48467, 48468, 48469, 48470, 48471, 48474, 48475, 48476, 48477, 48478, 48479, 48480, 48481, 48482, 48483, 48485, 48486, 48487, 48489, 48490, 48491, 48492, 48493, 48494, 48495, 48496, 48497, 48498, 48499, 48500, 48501, 48502, 48503, 48504, 48505, 48506, 48507, 48508, 48509, 48510, 48511, 48514, 48515, 48517, 48518, 48523, 48524, 48525, 48526, 48527, 48530, 48532, 48534, 48535, 48536, 48539, 48541, 48542, 48543, 48544, 48545, 48546, 48547, 48549, 48550, 48551, 48552, 48553, 48554, 48555, 48556, 48557, 48558, 48559, 48561, 48562, 48563, 48564, 48565, 48566, 48567, 48569, 48570, 48571, 48572, 48573, 48574, 48575, 48576, 48577, 48578, 48579, 48580, 48581, 48582, 48583, 48584, 48585, 48586, 48587, 48588, 48589, 48590, 48591, 48592, 48593, 48594, 48595, 48598, 48599, 48601, 48602, 48603, 48605, 48606, 48607, 48608, 48609, 48610, 48611, 48612, 48613, 48614, 48615, 48616, 48618, 48619, 48620, 48621, 48622, 48623, 48625, null, null, null, null, null, null, 48626, 48627, 48629, 48630, 48631, 48633, 48634, 48635, 48636, 48637, 48638, 48639, 48641, 48642, 48644, 48646, 48647, 48648, 48649, 48650, 48651, 48654, 48655, 48657, 48658, 48659, null, null, null, null, null, null, 48661, 48662, 48663, 48664, 48665, 48666, 48667, 48670, 48672, 48673, 48674, 48675, 48676, 48677, 48678, 48679, 48680, 48681, 48682, 48683, 48684, 48685, 48686, 48687, 48688, 48689, 48690, 48691, 48692, 48693, 48694, 48695, 48696, 48697, 48698, 48699, 48700, 48701, 48702, 48703, 48704, 48705, 48706, 48707, 48710, 48711, 48713, 48714, 48715, 48717, 48719, 48720, 48721, 48722, 48723, 48726, 48728, 48732, 48733, 48734, 48735, 48738, 48739, 48741, 48742, 48743, 48745, 48747, 48748, 48749, 48750, 48751, 48754, 48758, 48759, 48760, 48761, 48762, 48766, 48767, 48769, 48770, 48771, 48773, 48774, 48775, 48776, 48777, 48778, 48779, 48782, 48786, 48787, 48788, 48789, 48790, 48791, 48794, 48795, 48796, 48797, 48798, 48799, 48800, 48801, 48802, 48803, 48804, 48805, 48806, 48807, 48809, 48810, 48811, 48812, 48813, 48814, 48815, 48816, 48817, 48818, 48819, 48820, 48821, 48822, 48823, 48824, 48825, 48826, 48827, 48828, 48829, 48830, 48831, 48832, 48833, 48834, 48835, 48836, 48837, 48838, 48839, 48840, 48841, 48842, 48843, 48844, 48845, 48846, 48847, 48850, 48851, null, null, null, null, null, null, 48853, 48854, 48857, 48858, 48859, 48860, 48861, 48862, 48863, 48865, 48866, 48870, 48871, 48872, 48873, 48874, 48875, 48877, 48878, 48879, 48880, 48881, 48882, 48883, 48884, 48885, null, null, null, null, null, null, 48886, 48887, 48888, 48889, 48890, 48891, 48892, 48893, 48894, 48895, 48896, 48898, 48899, 48900, 48901, 48902, 48903, 48906, 48907, 48908, 48909, 48910, 48911, 48912, 48913, 48914, 48915, 48916, 48917, 48918, 48919, 48922, 48926, 48927, 48928, 48929, 48930, 48931, 48932, 48933, 48934, 48935, 48936, 48937, 48938, 48939, 48940, 48941, 48942, 48943, 48944, 48945, 48946, 48947, 48948, 48949, 48950, 48951, 48952, 48953, 48954, 48955, 48956, 48957, 48958, 48959, 48962, 48963, 48965, 48966, 48967, 48969, 48970, 48971, 48972, 48973, 48974, 48975, 48978, 48979, 48980, 48982, 48983, 48984, 48985, 48986, 48987, 48988, 48989, 48990, 48991, 48992, 48993, 48994, 48995, 48996, 48997, 48998, 48999, 49e3, 49001, 49002, 49003, 49004, 49005, 49006, 49007, 49008, 49009, 49010, 49011, 49012, 49013, 49014, 49015, 49016, 49017, 49018, 49019, 49020, 49021, 49022, 49023, 49024, 49025, 49026, 49027, 49028, 49029, 49030, 49031, 49032, 49033, 49034, 49035, 49036, 49037, 49038, 49039, 49040, 49041, 49042, 49043, 49045, 49046, 49047, 49048, 49049, 49050, 49051, 49052, 49053, null, null, null, null, null, null, 49054, 49055, 49056, 49057, 49058, 49059, 49060, 49061, 49062, 49063, 49064, 49065, 49066, 49067, 49068, 49069, 49070, 49071, 49073, 49074, 49075, 49076, 49077, 49078, 49079, 49080, null, null, null, null, null, null, 49081, 49082, 49083, 49084, 49085, 49086, 49087, 49088, 49089, 49090, 49091, 49092, 49094, 49095, 49096, 49097, 49098, 49099, 49102, 49103, 49105, 49106, 49107, 49109, 49110, 49111, 49112, 49113, 49114, 49115, 49117, 49118, 49120, 49122, 49123, 49124, 49125, 49126, 49127, 49128, 49129, 49130, 49131, 49132, 49133, 49134, 49135, 49136, 49137, 49138, 49139, 49140, 49141, 49142, 49143, 49144, 49145, 49146, 49147, 49148, 49149, 49150, 49151, 49152, 49153, 49154, 49155, 49156, 49157, 49158, 49159, 49160, 49161, 49162, 49163, 49164, 49165, 49166, 49167, 49168, 49169, 49170, 49171, 49172, 49173, 49174, 49175, 49176, 49177, 49178, 49179, 49180, 49181, 49182, 49183, 49184, 49185, 49186, 49187, 49188, 49189, 49190, 49191, 49192, 49193, 49194, 49195, 49196, 49197, 49198, 49199, 49200, 49201, 49202, 49203, 49204, 49205, 49206, 49207, 49208, 49209, 49210, 49211, 49213, 49214, 49215, 49216, 49217, 49218, 49219, 49220, 49221, 49222, 49223, 49224, 49225, 49226, 49227, 49228, 49229, 49230, 49231, 49232, 49234, 49235, 49236, 49237, 49238, 49239, 49241, 49242, 49243, null, null, null, null, null, null, 49245, 49246, 49247, 49249, 49250, 49251, 49252, 49253, 49254, 49255, 49258, 49259, 49260, 49261, 49262, 49263, 49264, 49265, 49266, 49267, 49268, 49269, 49270, 49271, 49272, 49273, null, null, null, null, null, null, 49274, 49275, 49276, 49277, 49278, 49279, 49280, 49281, 49282, 49283, 49284, 49285, 49286, 49287, 49288, 49289, 49290, 49291, 49292, 49293, 49294, 49295, 49298, 49299, 49301, 49302, 49303, 49305, 49306, 49307, 49308, 49309, 49310, 49311, 49314, 49316, 49318, 49319, 49320, 49321, 49322, 49323, 49326, 49329, 49330, 49335, 49336, 49337, 49338, 49339, 49342, 49346, 49347, 49348, 49350, 49351, 49354, 49355, 49357, 49358, 49359, 49361, 49362, 49363, 49364, 49365, 49366, 49367, 49370, 49374, 49375, 49376, 49377, 49378, 49379, 49382, 49383, 49385, 49386, 49387, 49389, 49390, 49391, 49392, 49393, 49394, 49395, 49398, 49400, 49402, 49403, 49404, 49405, 49406, 49407, 49409, 49410, 49411, 49413, 49414, 49415, 49417, 49418, 49419, 49420, 49421, 49422, 49423, 49425, 49426, 49427, 49428, 49430, 49431, 49432, 49433, 49434, 49435, 49441, 49442, 49445, 49448, 49449, 49450, 49451, 49454, 49458, 49459, 49460, 49461, 49463, 49466, 49467, 49469, 49470, 49471, 49473, 49474, 49475, 49476, 49477, 49478, 49479, 49482, 49486, 49487, 49488, 49489, 49490, 49491, 49494, 49495, null, null, null, null, null, null, 49497, 49498, 49499, 49501, 49502, 49503, 49504, 49505, 49506, 49507, 49510, 49514, 49515, 49516, 49517, 49518, 49519, 49521, 49522, 49523, 49525, 49526, 49527, 49529, 49530, 49531, null, null, null, null, null, null, 49532, 49533, 49534, 49535, 49536, 49537, 49538, 49539, 49540, 49542, 49543, 49544, 49545, 49546, 49547, 49551, 49553, 49554, 49555, 49557, 49559, 49560, 49561, 49562, 49563, 49566, 49568, 49570, 49571, 49572, 49574, 49575, 49578, 49579, 49581, 49582, 49583, 49585, 49586, 49587, 49588, 49589, 49590, 49591, 49592, 49593, 49594, 49595, 49596, 49598, 49599, 49600, 49601, 49602, 49603, 49605, 49606, 49607, 49609, 49610, 49611, 49613, 49614, 49615, 49616, 49617, 49618, 49619, 49621, 49622, 49625, 49626, 49627, 49628, 49629, 49630, 49631, 49633, 49634, 49635, 49637, 49638, 49639, 49641, 49642, 49643, 49644, 49645, 49646, 49647, 49650, 49652, 49653, 49654, 49655, 49656, 49657, 49658, 49659, 49662, 49663, 49665, 49666, 49667, 49669, 49670, 49671, 49672, 49673, 49674, 49675, 49678, 49680, 49682, 49683, 49684, 49685, 49686, 49687, 49690, 49691, 49693, 49694, 49697, 49698, 49699, 49700, 49701, 49702, 49703, 49706, 49708, 49710, 49712, 49715, 49717, 49718, 49719, 49720, 49721, 49722, 49723, 49724, 49725, 49726, 49727, 49728, 49729, 49730, 49731, 49732, 49733, null, null, null, null, null, null, 49734, 49735, 49737, 49738, 49739, 49740, 49741, 49742, 49743, 49746, 49747, 49749, 49750, 49751, 49753, 49754, 49755, 49756, 49757, 49758, 49759, 49761, 49762, 49763, 49764, 49766, null, null, null, null, null, null, 49767, 49768, 49769, 49770, 49771, 49774, 49775, 49777, 49778, 49779, 49781, 49782, 49783, 49784, 49785, 49786, 49787, 49790, 49792, 49794, 49795, 49796, 49797, 49798, 49799, 49802, 49803, 49804, 49805, 49806, 49807, 49809, 49810, 49811, 49812, 49813, 49814, 49815, 49817, 49818, 49820, 49822, 49823, 49824, 49825, 49826, 49827, 49830, 49831, 49833, 49834, 49835, 49838, 49839, 49840, 49841, 49842, 49843, 49846, 49848, 49850, 49851, 49852, 49853, 49854, 49855, 49856, 49857, 49858, 49859, 49860, 49861, 49862, 49863, 49864, 49865, 49866, 49867, 49868, 49869, 49870, 49871, 49872, 49873, 49874, 49875, 49876, 49877, 49878, 49879, 49880, 49881, 49882, 49883, 49886, 49887, 49889, 49890, 49893, 49894, 49895, 49896, 49897, 49898, 49902, 49904, 49906, 49907, 49908, 49909, 49911, 49914, 49917, 49918, 49919, 49921, 49922, 49923, 49924, 49925, 49926, 49927, 49930, 49931, 49934, 49935, 49936, 49937, 49938, 49942, 49943, 49945, 49946, 49947, 49949, 49950, 49951, 49952, 49953, 49954, 49955, 49958, 49959, 49962, 49963, 49964, 49965, 49966, 49967, 49968, 49969, 49970, null, null, null, null, null, null, 49971, 49972, 49973, 49974, 49975, 49976, 49977, 49978, 49979, 49980, 49981, 49982, 49983, 49984, 49985, 49986, 49987, 49988, 49990, 49991, 49992, 49993, 49994, 49995, 49996, 49997, null, null, null, null, null, null, 49998, 49999, 5e4, 50001, 50002, 50003, 50004, 50005, 50006, 50007, 50008, 50009, 50010, 50011, 50012, 50013, 50014, 50015, 50016, 50017, 50018, 50019, 50020, 50021, 50022, 50023, 50026, 50027, 50029, 50030, 50031, 50033, 50035, 50036, 50037, 50038, 50039, 50042, 50043, 50046, 50047, 50048, 50049, 50050, 50051, 50053, 50054, 50055, 50057, 50058, 50059, 50061, 50062, 50063, 50064, 50065, 50066, 50067, 50068, 50069, 50070, 50071, 50072, 50073, 50074, 50075, 50076, 50077, 50078, 50079, 50080, 50081, 50082, 50083, 50084, 50085, 50086, 50087, 50088, 50089, 50090, 50091, 50092, 50093, 50094, 50095, 50096, 50097, 50098, 50099, 50100, 50101, 50102, 50103, 50104, 50105, 50106, 50107, 50108, 50109, 50110, 50111, 50113, 50114, 50115, 50116, 50117, 50118, 50119, 50120, 50121, 50122, 50123, 50124, 50125, 50126, 50127, 50128, 50129, 50130, 50131, 50132, 50133, 50134, 50135, 50138, 50139, 50141, 50142, 50145, 50147, 50148, 50149, 50150, 50151, 50154, 50155, 50156, 50158, 50159, 50160, 50161, 50162, 50163, 50166, 50167, 50169, 50170, 50171, 50172, 50173, 50174, null, null, null, null, null, null, 50175, 50176, 50177, 50178, 50179, 50180, 50181, 50182, 50183, 50185, 50186, 50187, 50188, 50189, 50190, 50191, 50193, 50194, 50195, 50196, 50197, 50198, 50199, 50200, 50201, 50202, null, null, null, null, null, null, 50203, 50204, 50205, 50206, 50207, 50208, 50209, 50210, 50211, 50213, 50214, 50215, 50216, 50217, 50218, 50219, 50221, 50222, 50223, 50225, 50226, 50227, 50229, 50230, 50231, 50232, 50233, 50234, 50235, 50238, 50239, 50240, 50241, 50242, 50243, 50244, 50245, 50246, 50247, 50249, 50250, 50251, 50252, 50253, 50254, 50255, 50256, 50257, 50258, 50259, 50260, 50261, 50262, 50263, 50264, 50265, 50266, 50267, 50268, 50269, 50270, 50271, 50272, 50273, 50274, 50275, 50278, 50279, 50281, 50282, 50283, 50285, 50286, 50287, 50288, 50289, 50290, 50291, 50294, 50295, 50296, 50298, 50299, 50300, 50301, 50302, 50303, 50305, 50306, 50307, 50308, 50309, 50310, 50311, 50312, 50313, 50314, 50315, 50316, 50317, 50318, 50319, 50320, 50321, 50322, 50323, 50325, 50326, 50327, 50328, 50329, 50330, 50331, 50333, 50334, 50335, 50336, 50337, 50338, 50339, 50340, 50341, 50342, 50343, 50344, 50345, 50346, 50347, 50348, 50349, 50350, 50351, 50352, 50353, 50354, 50355, 50356, 50357, 50358, 50359, 50361, 50362, 50363, 50365, 50366, 50367, 50368, 50369, 50370, 50371, 50372, 50373, null, null, null, null, null, null, 50374, 50375, 50376, 50377, 50378, 50379, 50380, 50381, 50382, 50383, 50384, 50385, 50386, 50387, 50388, 50389, 50390, 50391, 50392, 50393, 50394, 50395, 50396, 50397, 50398, 50399, null, null, null, null, null, null, 50400, 50401, 50402, 50403, 50404, 50405, 50406, 50407, 50408, 50410, 50411, 50412, 50413, 50414, 50415, 50418, 50419, 50421, 50422, 50423, 50425, 50427, 50428, 50429, 50430, 50434, 50435, 50436, 50437, 50438, 50439, 50440, 50441, 50442, 50443, 50445, 50446, 50447, 50449, 50450, 50451, 50453, 50454, 50455, 50456, 50457, 50458, 50459, 50461, 50462, 50463, 50464, 50465, 50466, 50467, 50468, 50469, 50470, 50471, 50474, 50475, 50477, 50478, 50479, 50481, 50482, 50483, 50484, 50485, 50486, 50487, 50490, 50492, 50494, 50495, 50496, 50497, 50498, 50499, 50502, 50503, 50507, 50511, 50512, 50513, 50514, 50518, 50522, 50523, 50524, 50527, 50530, 50531, 50533, 50534, 50535, 50537, 50538, 50539, 50540, 50541, 50542, 50543, 50546, 50550, 50551, 50552, 50553, 50554, 50555, 50558, 50559, 50561, 50562, 50563, 50565, 50566, 50568, 50569, 50570, 50571, 50574, 50576, 50578, 50579, 50580, 50582, 50585, 50586, 50587, 50589, 50590, 50591, 50593, 50594, 50595, 50596, 50597, 50598, 50599, 50600, 50602, 50603, 50604, 50605, 50606, 50607, 50608, 50609, 50610, 50611, 50614, null, null, null, null, null, null, 50615, 50618, 50623, 50624, 50625, 50626, 50627, 50635, 50637, 50639, 50642, 50643, 50645, 50646, 50647, 50649, 50650, 50651, 50652, 50653, 50654, 50655, 50658, 50660, 50662, 50663, null, null, null, null, null, null, 50664, 50665, 50666, 50667, 50671, 50673, 50674, 50675, 50677, 50680, 50681, 50682, 50683, 50690, 50691, 50692, 50697, 50698, 50699, 50701, 50702, 50703, 50705, 50706, 50707, 50708, 50709, 50710, 50711, 50714, 50717, 50718, 50719, 50720, 50721, 50722, 50723, 50726, 50727, 50729, 50730, 50731, 50735, 50737, 50738, 50742, 50744, 50746, 50748, 50749, 50750, 50751, 50754, 50755, 50757, 50758, 50759, 50761, 50762, 50763, 50764, 50765, 50766, 50767, 50770, 50774, 50775, 50776, 50777, 50778, 50779, 50782, 50783, 50785, 50786, 50787, 50788, 50789, 50790, 50791, 50792, 50793, 50794, 50795, 50797, 50798, 50800, 50802, 50803, 50804, 50805, 50806, 50807, 50810, 50811, 50813, 50814, 50815, 50817, 50818, 50819, 50820, 50821, 50822, 50823, 50826, 50828, 50830, 50831, 50832, 50833, 50834, 50835, 50838, 50839, 50841, 50842, 50843, 50845, 50846, 50847, 50848, 50849, 50850, 50851, 50854, 50856, 50858, 50859, 50860, 50861, 50862, 50863, 50866, 50867, 50869, 50870, 50871, 50875, 50876, 50877, 50878, 50879, 50882, 50884, 50886, 50887, 50888, 50889, 50890, 50891, 50894, null, null, null, null, null, null, 50895, 50897, 50898, 50899, 50901, 50902, 50903, 50904, 50905, 50906, 50907, 50910, 50911, 50914, 50915, 50916, 50917, 50918, 50919, 50922, 50923, 50925, 50926, 50927, 50929, 50930, null, null, null, null, null, null, 50931, 50932, 50933, 50934, 50935, 50938, 50939, 50940, 50942, 50943, 50944, 50945, 50946, 50947, 50950, 50951, 50953, 50954, 50955, 50957, 50958, 50959, 50960, 50961, 50962, 50963, 50966, 50968, 50970, 50971, 50972, 50973, 50974, 50975, 50978, 50979, 50981, 50982, 50983, 50985, 50986, 50987, 50988, 50989, 50990, 50991, 50994, 50996, 50998, 51e3, 51001, 51002, 51003, 51006, 51007, 51009, 51010, 51011, 51013, 51014, 51015, 51016, 51017, 51019, 51022, 51024, 51033, 51034, 51035, 51037, 51038, 51039, 51041, 51042, 51043, 51044, 51045, 51046, 51047, 51049, 51050, 51052, 51053, 51054, 51055, 51056, 51057, 51058, 51059, 51062, 51063, 51065, 51066, 51067, 51071, 51072, 51073, 51074, 51078, 51083, 51084, 51085, 51087, 51090, 51091, 51093, 51097, 51099, 51100, 51101, 51102, 51103, 51106, 51111, 51112, 51113, 51114, 51115, 51118, 51119, 51121, 51122, 51123, 51125, 51126, 51127, 51128, 51129, 51130, 51131, 51134, 51138, 51139, 51140, 51141, 51142, 51143, 51146, 51147, 51149, 51151, 51153, 51154, 51155, 51156, 51157, 51158, 51159, 51161, 51162, 51163, 51164, null, null, null, null, null, null, 51166, 51167, 51168, 51169, 51170, 51171, 51173, 51174, 51175, 51177, 51178, 51179, 51181, 51182, 51183, 51184, 51185, 51186, 51187, 51188, 51189, 51190, 51191, 51192, 51193, 51194, null, null, null, null, null, null, 51195, 51196, 51197, 51198, 51199, 51202, 51203, 51205, 51206, 51207, 51209, 51211, 51212, 51213, 51214, 51215, 51218, 51220, 51223, 51224, 51225, 51226, 51227, 51230, 51231, 51233, 51234, 51235, 51237, 51238, 51239, 51240, 51241, 51242, 51243, 51246, 51248, 51250, 51251, 51252, 51253, 51254, 51255, 51257, 51258, 51259, 51261, 51262, 51263, 51265, 51266, 51267, 51268, 51269, 51270, 51271, 51274, 51275, 51278, 51279, 51280, 51281, 51282, 51283, 51285, 51286, 51287, 51288, 51289, 51290, 51291, 51292, 51293, 51294, 51295, 51296, 51297, 51298, 51299, 51300, 51301, 51302, 51303, 51304, 51305, 51306, 51307, 51308, 51309, 51310, 51311, 51314, 51315, 51317, 51318, 51319, 51321, 51323, 51324, 51325, 51326, 51327, 51330, 51332, 51336, 51337, 51338, 51342, 51343, 51344, 51345, 51346, 51347, 51349, 51350, 51351, 51352, 51353, 51354, 51355, 51356, 51358, 51360, 51362, 51363, 51364, 51365, 51366, 51367, 51369, 51370, 51371, 51372, 51373, 51374, 51375, 51376, 51377, 51378, 51379, 51380, 51381, 51382, 51383, 51384, 51385, 51386, 51387, 51390, 51391, 51392, 51393, null, null, null, null, null, null, 51394, 51395, 51397, 51398, 51399, 51401, 51402, 51403, 51405, 51406, 51407, 51408, 51409, 51410, 51411, 51414, 51416, 51418, 51419, 51420, 51421, 51422, 51423, 51426, 51427, 51429, null, null, null, null, null, null, 51430, 51431, 51432, 51433, 51434, 51435, 51436, 51437, 51438, 51439, 51440, 51441, 51442, 51443, 51444, 51446, 51447, 51448, 51449, 51450, 51451, 51454, 51455, 51457, 51458, 51459, 51463, 51464, 51465, 51466, 51467, 51470, 12288, 12289, 12290, 183, 8229, 8230, 168, 12291, 173, 8213, 8741, 65340, 8764, 8216, 8217, 8220, 8221, 12308, 12309, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12304, 12305, 177, 215, 247, 8800, 8804, 8805, 8734, 8756, 176, 8242, 8243, 8451, 8491, 65504, 65505, 65509, 9794, 9792, 8736, 8869, 8978, 8706, 8711, 8801, 8786, 167, 8251, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 9661, 9660, 8594, 8592, 8593, 8595, 8596, 12307, 8810, 8811, 8730, 8765, 8733, 8757, 8747, 8748, 8712, 8715, 8838, 8839, 8834, 8835, 8746, 8745, 8743, 8744, 65506, 51472, 51474, 51475, 51476, 51477, 51478, 51479, 51481, 51482, 51483, 51484, 51485, 51486, 51487, 51488, 51489, 51490, 51491, 51492, 51493, 51494, 51495, 51496, 51497, 51498, 51499, null, null, null, null, null, null, 51501, 51502, 51503, 51504, 51505, 51506, 51507, 51509, 51510, 51511, 51512, 51513, 51514, 51515, 51516, 51517, 51518, 51519, 51520, 51521, 51522, 51523, 51524, 51525, 51526, 51527, null, null, null, null, null, null, 51528, 51529, 51530, 51531, 51532, 51533, 51534, 51535, 51538, 51539, 51541, 51542, 51543, 51545, 51546, 51547, 51548, 51549, 51550, 51551, 51554, 51556, 51557, 51558, 51559, 51560, 51561, 51562, 51563, 51565, 51566, 51567, 8658, 8660, 8704, 8707, 180, 65374, 711, 728, 733, 730, 729, 184, 731, 161, 191, 720, 8750, 8721, 8719, 164, 8457, 8240, 9665, 9664, 9655, 9654, 9828, 9824, 9825, 9829, 9831, 9827, 8857, 9672, 9635, 9680, 9681, 9618, 9636, 9637, 9640, 9639, 9638, 9641, 9832, 9743, 9742, 9756, 9758, 182, 8224, 8225, 8597, 8599, 8601, 8598, 8600, 9837, 9833, 9834, 9836, 12927, 12828, 8470, 13255, 8482, 13250, 13272, 8481, 8364, 174, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 51569, 51570, 51571, 51573, 51574, 51575, 51576, 51577, 51578, 51579, 51581, 51582, 51583, 51584, 51585, 51586, 51587, 51588, 51589, 51590, 51591, 51594, 51595, 51597, 51598, 51599, null, null, null, null, null, null, 51601, 51602, 51603, 51604, 51605, 51606, 51607, 51610, 51612, 51614, 51615, 51616, 51617, 51618, 51619, 51620, 51621, 51622, 51623, 51624, 51625, 51626, 51627, 51628, 51629, 51630, null, null, null, null, null, null, 51631, 51632, 51633, 51634, 51635, 51636, 51637, 51638, 51639, 51640, 51641, 51642, 51643, 51644, 51645, 51646, 51647, 51650, 51651, 51653, 51654, 51657, 51659, 51660, 51661, 51662, 51663, 51666, 51668, 51671, 51672, 51675, 65281, 65282, 65283, 65284, 65285, 65286, 65287, 65288, 65289, 65290, 65291, 65292, 65293, 65294, 65295, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65306, 65307, 65308, 65309, 65310, 65311, 65312, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65510, 65341, 65342, 65343, 65344, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65371, 65372, 65373, 65507, 51678, 51679, 51681, 51683, 51685, 51686, 51688, 51689, 51690, 51691, 51694, 51698, 51699, 51700, 51701, 51702, 51703, 51706, 51707, 51709, 51710, 51711, 51713, 51714, 51715, 51716, null, null, null, null, null, null, 51717, 51718, 51719, 51722, 51726, 51727, 51728, 51729, 51730, 51731, 51733, 51734, 51735, 51737, 51738, 51739, 51740, 51741, 51742, 51743, 51744, 51745, 51746, 51747, 51748, 51749, null, null, null, null, null, null, 51750, 51751, 51752, 51754, 51755, 51756, 51757, 51758, 51759, 51760, 51761, 51762, 51763, 51764, 51765, 51766, 51767, 51768, 51769, 51770, 51771, 51772, 51773, 51774, 51775, 51776, 51777, 51778, 51779, 51780, 51781, 51782, 12593, 12594, 12595, 12596, 12597, 12598, 12599, 12600, 12601, 12602, 12603, 12604, 12605, 12606, 12607, 12608, 12609, 12610, 12611, 12612, 12613, 12614, 12615, 12616, 12617, 12618, 12619, 12620, 12621, 12622, 12623, 12624, 12625, 12626, 12627, 12628, 12629, 12630, 12631, 12632, 12633, 12634, 12635, 12636, 12637, 12638, 12639, 12640, 12641, 12642, 12643, 12644, 12645, 12646, 12647, 12648, 12649, 12650, 12651, 12652, 12653, 12654, 12655, 12656, 12657, 12658, 12659, 12660, 12661, 12662, 12663, 12664, 12665, 12666, 12667, 12668, 12669, 12670, 12671, 12672, 12673, 12674, 12675, 12676, 12677, 12678, 12679, 12680, 12681, 12682, 12683, 12684, 12685, 12686, 51783, 51784, 51785, 51786, 51787, 51790, 51791, 51793, 51794, 51795, 51797, 51798, 51799, 51800, 51801, 51802, 51803, 51806, 51810, 51811, 51812, 51813, 51814, 51815, 51817, 51818, null, null, null, null, null, null, 51819, 51820, 51821, 51822, 51823, 51824, 51825, 51826, 51827, 51828, 51829, 51830, 51831, 51832, 51833, 51834, 51835, 51836, 51838, 51839, 51840, 51841, 51842, 51843, 51845, 51846, null, null, null, null, null, null, 51847, 51848, 51849, 51850, 51851, 51852, 51853, 51854, 51855, 51856, 51857, 51858, 51859, 51860, 51861, 51862, 51863, 51865, 51866, 51867, 51868, 51869, 51870, 51871, 51872, 51873, 51874, 51875, 51876, 51877, 51878, 51879, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, null, null, null, null, null, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, null, null, null, null, null, null, null, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, null, null, null, null, null, null, null, null, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, null, null, null, null, null, null, 51880, 51881, 51882, 51883, 51884, 51885, 51886, 51887, 51888, 51889, 51890, 51891, 51892, 51893, 51894, 51895, 51896, 51897, 51898, 51899, 51902, 51903, 51905, 51906, 51907, 51909, null, null, null, null, null, null, 51910, 51911, 51912, 51913, 51914, 51915, 51918, 51920, 51922, 51924, 51925, 51926, 51927, 51930, 51931, 51932, 51933, 51934, 51935, 51937, 51938, 51939, 51940, 51941, 51942, 51943, null, null, null, null, null, null, 51944, 51945, 51946, 51947, 51949, 51950, 51951, 51952, 51953, 51954, 51955, 51957, 51958, 51959, 51960, 51961, 51962, 51963, 51964, 51965, 51966, 51967, 51968, 51969, 51970, 51971, 51972, 51973, 51974, 51975, 51977, 51978, 9472, 9474, 9484, 9488, 9496, 9492, 9500, 9516, 9508, 9524, 9532, 9473, 9475, 9487, 9491, 9499, 9495, 9507, 9523, 9515, 9531, 9547, 9504, 9519, 9512, 9527, 9535, 9501, 9520, 9509, 9528, 9538, 9490, 9489, 9498, 9497, 9494, 9493, 9486, 9485, 9502, 9503, 9505, 9506, 9510, 9511, 9513, 9514, 9517, 9518, 9521, 9522, 9525, 9526, 9529, 9530, 9533, 9534, 9536, 9537, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 51979, 51980, 51981, 51982, 51983, 51985, 51986, 51987, 51989, 51990, 51991, 51993, 51994, 51995, 51996, 51997, 51998, 51999, 52002, 52003, 52004, 52005, 52006, 52007, 52008, 52009, null, null, null, null, null, null, 52010, 52011, 52012, 52013, 52014, 52015, 52016, 52017, 52018, 52019, 52020, 52021, 52022, 52023, 52024, 52025, 52026, 52027, 52028, 52029, 52030, 52031, 52032, 52034, 52035, 52036, null, null, null, null, null, null, 52037, 52038, 52039, 52042, 52043, 52045, 52046, 52047, 52049, 52050, 52051, 52052, 52053, 52054, 52055, 52058, 52059, 52060, 52062, 52063, 52064, 52065, 52066, 52067, 52069, 52070, 52071, 52072, 52073, 52074, 52075, 52076, 13205, 13206, 13207, 8467, 13208, 13252, 13219, 13220, 13221, 13222, 13209, 13210, 13211, 13212, 13213, 13214, 13215, 13216, 13217, 13218, 13258, 13197, 13198, 13199, 13263, 13192, 13193, 13256, 13223, 13224, 13232, 13233, 13234, 13235, 13236, 13237, 13238, 13239, 13240, 13241, 13184, 13185, 13186, 13187, 13188, 13242, 13243, 13244, 13245, 13246, 13247, 13200, 13201, 13202, 13203, 13204, 8486, 13248, 13249, 13194, 13195, 13196, 13270, 13253, 13229, 13230, 13231, 13275, 13225, 13226, 13227, 13228, 13277, 13264, 13267, 13251, 13257, 13276, 13254, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52077, 52078, 52079, 52080, 52081, 52082, 52083, 52084, 52085, 52086, 52087, 52090, 52091, 52092, 52093, 52094, 52095, 52096, 52097, 52098, 52099, 52100, 52101, 52102, 52103, 52104, null, null, null, null, null, null, 52105, 52106, 52107, 52108, 52109, 52110, 52111, 52112, 52113, 52114, 52115, 52116, 52117, 52118, 52119, 52120, 52121, 52122, 52123, 52125, 52126, 52127, 52128, 52129, 52130, 52131, null, null, null, null, null, null, 52132, 52133, 52134, 52135, 52136, 52137, 52138, 52139, 52140, 52141, 52142, 52143, 52144, 52145, 52146, 52147, 52148, 52149, 52150, 52151, 52153, 52154, 52155, 52156, 52157, 52158, 52159, 52160, 52161, 52162, 52163, 52164, 198, 208, 170, 294, null, 306, null, 319, 321, 216, 338, 186, 222, 358, 330, null, 12896, 12897, 12898, 12899, 12900, 12901, 12902, 12903, 12904, 12905, 12906, 12907, 12908, 12909, 12910, 12911, 12912, 12913, 12914, 12915, 12916, 12917, 12918, 12919, 12920, 12921, 12922, 12923, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 189, 8531, 8532, 188, 190, 8539, 8540, 8541, 8542, 52165, 52166, 52167, 52168, 52169, 52170, 52171, 52172, 52173, 52174, 52175, 52176, 52177, 52178, 52179, 52181, 52182, 52183, 52184, 52185, 52186, 52187, 52188, 52189, 52190, 52191, null, null, null, null, null, null, 52192, 52193, 52194, 52195, 52197, 52198, 52200, 52202, 52203, 52204, 52205, 52206, 52207, 52208, 52209, 52210, 52211, 52212, 52213, 52214, 52215, 52216, 52217, 52218, 52219, 52220, null, null, null, null, null, null, 52221, 52222, 52223, 52224, 52225, 52226, 52227, 52228, 52229, 52230, 52231, 52232, 52233, 52234, 52235, 52238, 52239, 52241, 52242, 52243, 52245, 52246, 52247, 52248, 52249, 52250, 52251, 52254, 52255, 52256, 52259, 52260, 230, 273, 240, 295, 305, 307, 312, 320, 322, 248, 339, 223, 254, 359, 331, 329, 12800, 12801, 12802, 12803, 12804, 12805, 12806, 12807, 12808, 12809, 12810, 12811, 12812, 12813, 12814, 12815, 12816, 12817, 12818, 12819, 12820, 12821, 12822, 12823, 12824, 12825, 12826, 12827, 9372, 9373, 9374, 9375, 9376, 9377, 9378, 9379, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 185, 178, 179, 8308, 8319, 8321, 8322, 8323, 8324, 52261, 52262, 52266, 52267, 52269, 52271, 52273, 52274, 52275, 52276, 52277, 52278, 52279, 52282, 52287, 52288, 52289, 52290, 52291, 52294, 52295, 52297, 52298, 52299, 52301, 52302, null, null, null, null, null, null, 52303, 52304, 52305, 52306, 52307, 52310, 52314, 52315, 52316, 52317, 52318, 52319, 52321, 52322, 52323, 52325, 52327, 52329, 52330, 52331, 52332, 52333, 52334, 52335, 52337, 52338, null, null, null, null, null, null, 52339, 52340, 52342, 52343, 52344, 52345, 52346, 52347, 52348, 52349, 52350, 52351, 52352, 52353, 52354, 52355, 52356, 52357, 52358, 52359, 52360, 52361, 52362, 52363, 52364, 52365, 52366, 52367, 52368, 52369, 52370, 52371, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, null, null, null, null, null, null, null, null, null, null, null, 52372, 52373, 52374, 52375, 52378, 52379, 52381, 52382, 52383, 52385, 52386, 52387, 52388, 52389, 52390, 52391, 52394, 52398, 52399, 52400, 52401, 52402, 52403, 52406, 52407, 52409, null, null, null, null, null, null, 52410, 52411, 52413, 52414, 52415, 52416, 52417, 52418, 52419, 52422, 52424, 52426, 52427, 52428, 52429, 52430, 52431, 52433, 52434, 52435, 52437, 52438, 52439, 52440, 52441, 52442, null, null, null, null, null, null, 52443, 52444, 52445, 52446, 52447, 52448, 52449, 52450, 52451, 52453, 52454, 52455, 52456, 52457, 52458, 52459, 52461, 52462, 52463, 52465, 52466, 52467, 52468, 52469, 52470, 52471, 52472, 52473, 52474, 52475, 52476, 52477, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, null, null, null, null, null, null, null, null, 52478, 52479, 52480, 52482, 52483, 52484, 52485, 52486, 52487, 52490, 52491, 52493, 52494, 52495, 52497, 52498, 52499, 52500, 52501, 52502, 52503, 52506, 52508, 52510, 52511, 52512, null, null, null, null, null, null, 52513, 52514, 52515, 52517, 52518, 52519, 52521, 52522, 52523, 52525, 52526, 52527, 52528, 52529, 52530, 52531, 52532, 52533, 52534, 52535, 52536, 52538, 52539, 52540, 52541, 52542, null, null, null, null, null, null, 52543, 52544, 52545, 52546, 52547, 52548, 52549, 52550, 52551, 52552, 52553, 52554, 52555, 52556, 52557, 52558, 52559, 52560, 52561, 52562, 52563, 52564, 52565, 52566, 52567, 52568, 52569, 52570, 52571, 52573, 52574, 52575, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, null, null, null, null, null, null, null, null, null, null, null, null, null, 52577, 52578, 52579, 52581, 52582, 52583, 52584, 52585, 52586, 52587, 52590, 52592, 52594, 52595, 52596, 52597, 52598, 52599, 52601, 52602, 52603, 52604, 52605, 52606, 52607, 52608, null, null, null, null, null, null, 52609, 52610, 52611, 52612, 52613, 52614, 52615, 52617, 52618, 52619, 52620, 52621, 52622, 52623, 52624, 52625, 52626, 52627, 52630, 52631, 52633, 52634, 52635, 52637, 52638, 52639, null, null, null, null, null, null, 52640, 52641, 52642, 52643, 52646, 52648, 52650, 52651, 52652, 52653, 52654, 52655, 52657, 52658, 52659, 52660, 52661, 52662, 52663, 52664, 52665, 52666, 52667, 52668, 52669, 52670, 52671, 52672, 52673, 52674, 52675, 52677, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52678, 52679, 52680, 52681, 52682, 52683, 52685, 52686, 52687, 52689, 52690, 52691, 52692, 52693, 52694, 52695, 52696, 52697, 52698, 52699, 52700, 52701, 52702, 52703, 52704, 52705, null, null, null, null, null, null, 52706, 52707, 52708, 52709, 52710, 52711, 52713, 52714, 52715, 52717, 52718, 52719, 52721, 52722, 52723, 52724, 52725, 52726, 52727, 52730, 52732, 52734, 52735, 52736, 52737, 52738, null, null, null, null, null, null, 52739, 52741, 52742, 52743, 52745, 52746, 52747, 52749, 52750, 52751, 52752, 52753, 52754, 52755, 52757, 52758, 52759, 52760, 52762, 52763, 52764, 52765, 52766, 52767, 52770, 52771, 52773, 52774, 52775, 52777, 52778, 52779, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52780, 52781, 52782, 52783, 52786, 52788, 52790, 52791, 52792, 52793, 52794, 52795, 52796, 52797, 52798, 52799, 52800, 52801, 52802, 52803, 52804, 52805, 52806, 52807, 52808, 52809, null, null, null, null, null, null, 52810, 52811, 52812, 52813, 52814, 52815, 52816, 52817, 52818, 52819, 52820, 52821, 52822, 52823, 52826, 52827, 52829, 52830, 52834, 52835, 52836, 52837, 52838, 52839, 52842, 52844, null, null, null, null, null, null, 52846, 52847, 52848, 52849, 52850, 52851, 52854, 52855, 52857, 52858, 52859, 52861, 52862, 52863, 52864, 52865, 52866, 52867, 52870, 52872, 52874, 52875, 52876, 52877, 52878, 52879, 52882, 52883, 52885, 52886, 52887, 52889, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 52890, 52891, 52892, 52893, 52894, 52895, 52898, 52902, 52903, 52904, 52905, 52906, 52907, 52910, 52911, 52912, 52913, 52914, 52915, 52916, 52917, 52918, 52919, 52920, 52921, 52922, null, null, null, null, null, null, 52923, 52924, 52925, 52926, 52927, 52928, 52930, 52931, 52932, 52933, 52934, 52935, 52936, 52937, 52938, 52939, 52940, 52941, 52942, 52943, 52944, 52945, 52946, 52947, 52948, 52949, null, null, null, null, null, null, 52950, 52951, 52952, 52953, 52954, 52955, 52956, 52957, 52958, 52959, 52960, 52961, 52962, 52963, 52966, 52967, 52969, 52970, 52973, 52974, 52975, 52976, 52977, 52978, 52979, 52982, 52986, 52987, 52988, 52989, 52990, 52991, 44032, 44033, 44036, 44039, 44040, 44041, 44042, 44048, 44049, 44050, 44051, 44052, 44053, 44054, 44055, 44057, 44058, 44059, 44060, 44061, 44064, 44068, 44076, 44077, 44079, 44080, 44081, 44088, 44089, 44092, 44096, 44107, 44109, 44116, 44120, 44124, 44144, 44145, 44148, 44151, 44152, 44154, 44160, 44161, 44163, 44164, 44165, 44166, 44169, 44170, 44171, 44172, 44176, 44180, 44188, 44189, 44191, 44192, 44193, 44200, 44201, 44202, 44204, 44207, 44208, 44216, 44217, 44219, 44220, 44221, 44225, 44228, 44232, 44236, 44245, 44247, 44256, 44257, 44260, 44263, 44264, 44266, 44268, 44271, 44272, 44273, 44275, 44277, 44278, 44284, 44285, 44288, 44292, 44294, 52994, 52995, 52997, 52998, 52999, 53001, 53002, 53003, 53004, 53005, 53006, 53007, 53010, 53012, 53014, 53015, 53016, 53017, 53018, 53019, 53021, 53022, 53023, 53025, 53026, 53027, null, null, null, null, null, null, 53029, 53030, 53031, 53032, 53033, 53034, 53035, 53038, 53042, 53043, 53044, 53045, 53046, 53047, 53049, 53050, 53051, 53052, 53053, 53054, 53055, 53056, 53057, 53058, 53059, 53060, null, null, null, null, null, null, 53061, 53062, 53063, 53064, 53065, 53066, 53067, 53068, 53069, 53070, 53071, 53072, 53073, 53074, 53075, 53078, 53079, 53081, 53082, 53083, 53085, 53086, 53087, 53088, 53089, 53090, 53091, 53094, 53096, 53098, 53099, 53100, 44300, 44301, 44303, 44305, 44312, 44316, 44320, 44329, 44332, 44333, 44340, 44341, 44344, 44348, 44356, 44357, 44359, 44361, 44368, 44372, 44376, 44385, 44387, 44396, 44397, 44400, 44403, 44404, 44405, 44406, 44411, 44412, 44413, 44415, 44417, 44418, 44424, 44425, 44428, 44432, 44444, 44445, 44452, 44471, 44480, 44481, 44484, 44488, 44496, 44497, 44499, 44508, 44512, 44516, 44536, 44537, 44540, 44543, 44544, 44545, 44552, 44553, 44555, 44557, 44564, 44592, 44593, 44596, 44599, 44600, 44602, 44608, 44609, 44611, 44613, 44614, 44618, 44620, 44621, 44622, 44624, 44628, 44630, 44636, 44637, 44639, 44640, 44641, 44645, 44648, 44649, 44652, 44656, 44664, 53101, 53102, 53103, 53106, 53107, 53109, 53110, 53111, 53113, 53114, 53115, 53116, 53117, 53118, 53119, 53121, 53122, 53123, 53124, 53126, 53127, 53128, 53129, 53130, 53131, 53133, null, null, null, null, null, null, 53134, 53135, 53136, 53137, 53138, 53139, 53140, 53141, 53142, 53143, 53144, 53145, 53146, 53147, 53148, 53149, 53150, 53151, 53152, 53154, 53155, 53156, 53157, 53158, 53159, 53161, null, null, null, null, null, null, 53162, 53163, 53164, 53165, 53166, 53167, 53169, 53170, 53171, 53172, 53173, 53174, 53175, 53176, 53177, 53178, 53179, 53180, 53181, 53182, 53183, 53184, 53185, 53186, 53187, 53189, 53190, 53191, 53192, 53193, 53194, 53195, 44665, 44667, 44668, 44669, 44676, 44677, 44684, 44732, 44733, 44734, 44736, 44740, 44748, 44749, 44751, 44752, 44753, 44760, 44761, 44764, 44776, 44779, 44781, 44788, 44792, 44796, 44807, 44808, 44813, 44816, 44844, 44845, 44848, 44850, 44852, 44860, 44861, 44863, 44865, 44866, 44867, 44872, 44873, 44880, 44892, 44893, 44900, 44901, 44921, 44928, 44932, 44936, 44944, 44945, 44949, 44956, 44984, 44985, 44988, 44992, 44999, 45e3, 45001, 45003, 45005, 45006, 45012, 45020, 45032, 45033, 45040, 45041, 45044, 45048, 45056, 45057, 45060, 45068, 45072, 45076, 45084, 45085, 45096, 45124, 45125, 45128, 45130, 45132, 45134, 45139, 45140, 45141, 45143, 45145, 53196, 53197, 53198, 53199, 53200, 53201, 53202, 53203, 53204, 53205, 53206, 53207, 53208, 53209, 53210, 53211, 53212, 53213, 53214, 53215, 53218, 53219, 53221, 53222, 53223, 53225, null, null, null, null, null, null, 53226, 53227, 53228, 53229, 53230, 53231, 53234, 53236, 53238, 53239, 53240, 53241, 53242, 53243, 53245, 53246, 53247, 53249, 53250, 53251, 53253, 53254, 53255, 53256, 53257, 53258, null, null, null, null, null, null, 53259, 53260, 53261, 53262, 53263, 53264, 53266, 53267, 53268, 53269, 53270, 53271, 53273, 53274, 53275, 53276, 53277, 53278, 53279, 53280, 53281, 53282, 53283, 53284, 53285, 53286, 53287, 53288, 53289, 53290, 53291, 53292, 45149, 45180, 45181, 45184, 45188, 45196, 45197, 45199, 45201, 45208, 45209, 45210, 45212, 45215, 45216, 45217, 45218, 45224, 45225, 45227, 45228, 45229, 45230, 45231, 45233, 45235, 45236, 45237, 45240, 45244, 45252, 45253, 45255, 45256, 45257, 45264, 45265, 45268, 45272, 45280, 45285, 45320, 45321, 45323, 45324, 45328, 45330, 45331, 45336, 45337, 45339, 45340, 45341, 45347, 45348, 45349, 45352, 45356, 45364, 45365, 45367, 45368, 45369, 45376, 45377, 45380, 45384, 45392, 45393, 45396, 45397, 45400, 45404, 45408, 45432, 45433, 45436, 45440, 45442, 45448, 45449, 45451, 45453, 45458, 45459, 45460, 45464, 45468, 45480, 45516, 45520, 45524, 45532, 45533, 53294, 53295, 53296, 53297, 53298, 53299, 53302, 53303, 53305, 53306, 53307, 53309, 53310, 53311, 53312, 53313, 53314, 53315, 53318, 53320, 53322, 53323, 53324, 53325, 53326, 53327, null, null, null, null, null, null, 53329, 53330, 53331, 53333, 53334, 53335, 53337, 53338, 53339, 53340, 53341, 53342, 53343, 53345, 53346, 53347, 53348, 53349, 53350, 53351, 53352, 53353, 53354, 53355, 53358, 53359, null, null, null, null, null, null, 53361, 53362, 53363, 53365, 53366, 53367, 53368, 53369, 53370, 53371, 53374, 53375, 53376, 53378, 53379, 53380, 53381, 53382, 53383, 53384, 53385, 53386, 53387, 53388, 53389, 53390, 53391, 53392, 53393, 53394, 53395, 53396, 45535, 45544, 45545, 45548, 45552, 45561, 45563, 45565, 45572, 45573, 45576, 45579, 45580, 45588, 45589, 45591, 45593, 45600, 45620, 45628, 45656, 45660, 45664, 45672, 45673, 45684, 45685, 45692, 45700, 45701, 45705, 45712, 45713, 45716, 45720, 45721, 45722, 45728, 45729, 45731, 45733, 45734, 45738, 45740, 45744, 45748, 45768, 45769, 45772, 45776, 45778, 45784, 45785, 45787, 45789, 45794, 45796, 45797, 45798, 45800, 45803, 45804, 45805, 45806, 45807, 45811, 45812, 45813, 45815, 45816, 45817, 45818, 45819, 45823, 45824, 45825, 45828, 45832, 45840, 45841, 45843, 45844, 45845, 45852, 45908, 45909, 45910, 45912, 45915, 45916, 45918, 45919, 45924, 45925, 53397, 53398, 53399, 53400, 53401, 53402, 53403, 53404, 53405, 53406, 53407, 53408, 53409, 53410, 53411, 53414, 53415, 53417, 53418, 53419, 53421, 53422, 53423, 53424, 53425, 53426, null, null, null, null, null, null, 53427, 53430, 53432, 53434, 53435, 53436, 53437, 53438, 53439, 53442, 53443, 53445, 53446, 53447, 53450, 53451, 53452, 53453, 53454, 53455, 53458, 53462, 53463, 53464, 53465, 53466, null, null, null, null, null, null, 53467, 53470, 53471, 53473, 53474, 53475, 53477, 53478, 53479, 53480, 53481, 53482, 53483, 53486, 53490, 53491, 53492, 53493, 53494, 53495, 53497, 53498, 53499, 53500, 53501, 53502, 53503, 53504, 53505, 53506, 53507, 53508, 45927, 45929, 45931, 45934, 45936, 45937, 45940, 45944, 45952, 45953, 45955, 45956, 45957, 45964, 45968, 45972, 45984, 45985, 45992, 45996, 46020, 46021, 46024, 46027, 46028, 46030, 46032, 46036, 46037, 46039, 46041, 46043, 46045, 46048, 46052, 46056, 46076, 46096, 46104, 46108, 46112, 46120, 46121, 46123, 46132, 46160, 46161, 46164, 46168, 46176, 46177, 46179, 46181, 46188, 46208, 46216, 46237, 46244, 46248, 46252, 46261, 46263, 46265, 46272, 46276, 46280, 46288, 46293, 46300, 46301, 46304, 46307, 46308, 46310, 46316, 46317, 46319, 46321, 46328, 46356, 46357, 46360, 46363, 46364, 46372, 46373, 46375, 46376, 46377, 46378, 46384, 46385, 46388, 46392, 53509, 53510, 53511, 53512, 53513, 53514, 53515, 53516, 53518, 53519, 53520, 53521, 53522, 53523, 53524, 53525, 53526, 53527, 53528, 53529, 53530, 53531, 53532, 53533, 53534, 53535, null, null, null, null, null, null, 53536, 53537, 53538, 53539, 53540, 53541, 53542, 53543, 53544, 53545, 53546, 53547, 53548, 53549, 53550, 53551, 53554, 53555, 53557, 53558, 53559, 53561, 53563, 53564, 53565, 53566, null, null, null, null, null, null, 53567, 53570, 53574, 53575, 53576, 53577, 53578, 53579, 53582, 53583, 53585, 53586, 53587, 53589, 53590, 53591, 53592, 53593, 53594, 53595, 53598, 53600, 53602, 53603, 53604, 53605, 53606, 53607, 53609, 53610, 53611, 53613, 46400, 46401, 46403, 46404, 46405, 46411, 46412, 46413, 46416, 46420, 46428, 46429, 46431, 46432, 46433, 46496, 46497, 46500, 46504, 46506, 46507, 46512, 46513, 46515, 46516, 46517, 46523, 46524, 46525, 46528, 46532, 46540, 46541, 46543, 46544, 46545, 46552, 46572, 46608, 46609, 46612, 46616, 46629, 46636, 46644, 46664, 46692, 46696, 46748, 46749, 46752, 46756, 46763, 46764, 46769, 46804, 46832, 46836, 46840, 46848, 46849, 46853, 46888, 46889, 46892, 46895, 46896, 46904, 46905, 46907, 46916, 46920, 46924, 46932, 46933, 46944, 46948, 46952, 46960, 46961, 46963, 46965, 46972, 46973, 46976, 46980, 46988, 46989, 46991, 46992, 46993, 46994, 46998, 46999, 53614, 53615, 53616, 53617, 53618, 53619, 53620, 53621, 53622, 53623, 53624, 53625, 53626, 53627, 53629, 53630, 53631, 53632, 53633, 53634, 53635, 53637, 53638, 53639, 53641, 53642, null, null, null, null, null, null, 53643, 53644, 53645, 53646, 53647, 53648, 53649, 53650, 53651, 53652, 53653, 53654, 53655, 53656, 53657, 53658, 53659, 53660, 53661, 53662, 53663, 53666, 53667, 53669, 53670, 53671, null, null, null, null, null, null, 53673, 53674, 53675, 53676, 53677, 53678, 53679, 53682, 53684, 53686, 53687, 53688, 53689, 53691, 53693, 53694, 53695, 53697, 53698, 53699, 53700, 53701, 53702, 53703, 53704, 53705, 53706, 53707, 53708, 53709, 53710, 53711, 47e3, 47001, 47004, 47008, 47016, 47017, 47019, 47020, 47021, 47028, 47029, 47032, 47047, 47049, 47084, 47085, 47088, 47092, 47100, 47101, 47103, 47104, 47105, 47111, 47112, 47113, 47116, 47120, 47128, 47129, 47131, 47133, 47140, 47141, 47144, 47148, 47156, 47157, 47159, 47160, 47161, 47168, 47172, 47185, 47187, 47196, 47197, 47200, 47204, 47212, 47213, 47215, 47217, 47224, 47228, 47245, 47272, 47280, 47284, 47288, 47296, 47297, 47299, 47301, 47308, 47312, 47316, 47325, 47327, 47329, 47336, 47337, 47340, 47344, 47352, 47353, 47355, 47357, 47364, 47384, 47392, 47420, 47421, 47424, 47428, 47436, 47439, 47441, 47448, 47449, 47452, 47456, 47464, 47465, 53712, 53713, 53714, 53715, 53716, 53717, 53718, 53719, 53721, 53722, 53723, 53724, 53725, 53726, 53727, 53728, 53729, 53730, 53731, 53732, 53733, 53734, 53735, 53736, 53737, 53738, null, null, null, null, null, null, 53739, 53740, 53741, 53742, 53743, 53744, 53745, 53746, 53747, 53749, 53750, 53751, 53753, 53754, 53755, 53756, 53757, 53758, 53759, 53760, 53761, 53762, 53763, 53764, 53765, 53766, null, null, null, null, null, null, 53768, 53770, 53771, 53772, 53773, 53774, 53775, 53777, 53778, 53779, 53780, 53781, 53782, 53783, 53784, 53785, 53786, 53787, 53788, 53789, 53790, 53791, 53792, 53793, 53794, 53795, 53796, 53797, 53798, 53799, 53800, 53801, 47467, 47469, 47476, 47477, 47480, 47484, 47492, 47493, 47495, 47497, 47498, 47501, 47502, 47532, 47533, 47536, 47540, 47548, 47549, 47551, 47553, 47560, 47561, 47564, 47566, 47567, 47568, 47569, 47570, 47576, 47577, 47579, 47581, 47582, 47585, 47587, 47588, 47589, 47592, 47596, 47604, 47605, 47607, 47608, 47609, 47610, 47616, 47617, 47624, 47637, 47672, 47673, 47676, 47680, 47682, 47688, 47689, 47691, 47693, 47694, 47699, 47700, 47701, 47704, 47708, 47716, 47717, 47719, 47720, 47721, 47728, 47729, 47732, 47736, 47747, 47748, 47749, 47751, 47756, 47784, 47785, 47787, 47788, 47792, 47794, 47800, 47801, 47803, 47805, 47812, 47816, 47832, 47833, 47868, 53802, 53803, 53806, 53807, 53809, 53810, 53811, 53813, 53814, 53815, 53816, 53817, 53818, 53819, 53822, 53824, 53826, 53827, 53828, 53829, 53830, 53831, 53833, 53834, 53835, 53836, null, null, null, null, null, null, 53837, 53838, 53839, 53840, 53841, 53842, 53843, 53844, 53845, 53846, 53847, 53848, 53849, 53850, 53851, 53853, 53854, 53855, 53856, 53857, 53858, 53859, 53861, 53862, 53863, 53864, null, null, null, null, null, null, 53865, 53866, 53867, 53868, 53869, 53870, 53871, 53872, 53873, 53874, 53875, 53876, 53877, 53878, 53879, 53880, 53881, 53882, 53883, 53884, 53885, 53886, 53887, 53890, 53891, 53893, 53894, 53895, 53897, 53898, 53899, 53900, 47872, 47876, 47885, 47887, 47889, 47896, 47900, 47904, 47913, 47915, 47924, 47925, 47926, 47928, 47931, 47932, 47933, 47934, 47940, 47941, 47943, 47945, 47949, 47951, 47952, 47956, 47960, 47969, 47971, 47980, 48008, 48012, 48016, 48036, 48040, 48044, 48052, 48055, 48064, 48068, 48072, 48080, 48083, 48120, 48121, 48124, 48127, 48128, 48130, 48136, 48137, 48139, 48140, 48141, 48143, 48145, 48148, 48149, 48150, 48151, 48152, 48155, 48156, 48157, 48158, 48159, 48164, 48165, 48167, 48169, 48173, 48176, 48177, 48180, 48184, 48192, 48193, 48195, 48196, 48197, 48201, 48204, 48205, 48208, 48221, 48260, 48261, 48264, 48267, 48268, 48270, 48276, 48277, 48279, 53901, 53902, 53903, 53906, 53907, 53908, 53910, 53911, 53912, 53913, 53914, 53915, 53917, 53918, 53919, 53921, 53922, 53923, 53925, 53926, 53927, 53928, 53929, 53930, 53931, 53933, null, null, null, null, null, null, 53934, 53935, 53936, 53938, 53939, 53940, 53941, 53942, 53943, 53946, 53947, 53949, 53950, 53953, 53955, 53956, 53957, 53958, 53959, 53962, 53964, 53965, 53966, 53967, 53968, 53969, null, null, null, null, null, null, 53970, 53971, 53973, 53974, 53975, 53977, 53978, 53979, 53981, 53982, 53983, 53984, 53985, 53986, 53987, 53990, 53991, 53992, 53993, 53994, 53995, 53996, 53997, 53998, 53999, 54002, 54003, 54005, 54006, 54007, 54009, 54010, 48281, 48282, 48288, 48289, 48292, 48295, 48296, 48304, 48305, 48307, 48308, 48309, 48316, 48317, 48320, 48324, 48333, 48335, 48336, 48337, 48341, 48344, 48348, 48372, 48373, 48374, 48376, 48380, 48388, 48389, 48391, 48393, 48400, 48404, 48420, 48428, 48448, 48456, 48457, 48460, 48464, 48472, 48473, 48484, 48488, 48512, 48513, 48516, 48519, 48520, 48521, 48522, 48528, 48529, 48531, 48533, 48537, 48538, 48540, 48548, 48560, 48568, 48596, 48597, 48600, 48604, 48617, 48624, 48628, 48632, 48640, 48643, 48645, 48652, 48653, 48656, 48660, 48668, 48669, 48671, 48708, 48709, 48712, 48716, 48718, 48724, 48725, 48727, 48729, 48730, 48731, 48736, 48737, 48740, 54011, 54012, 54013, 54014, 54015, 54018, 54020, 54022, 54023, 54024, 54025, 54026, 54027, 54031, 54033, 54034, 54035, 54037, 54039, 54040, 54041, 54042, 54043, 54046, 54050, 54051, null, null, null, null, null, null, 54052, 54054, 54055, 54058, 54059, 54061, 54062, 54063, 54065, 54066, 54067, 54068, 54069, 54070, 54071, 54074, 54078, 54079, 54080, 54081, 54082, 54083, 54086, 54087, 54088, 54089, null, null, null, null, null, null, 54090, 54091, 54092, 54093, 54094, 54095, 54096, 54097, 54098, 54099, 54100, 54101, 54102, 54103, 54104, 54105, 54106, 54107, 54108, 54109, 54110, 54111, 54112, 54113, 54114, 54115, 54116, 54117, 54118, 54119, 54120, 54121, 48744, 48746, 48752, 48753, 48755, 48756, 48757, 48763, 48764, 48765, 48768, 48772, 48780, 48781, 48783, 48784, 48785, 48792, 48793, 48808, 48848, 48849, 48852, 48855, 48856, 48864, 48867, 48868, 48869, 48876, 48897, 48904, 48905, 48920, 48921, 48923, 48924, 48925, 48960, 48961, 48964, 48968, 48976, 48977, 48981, 49044, 49072, 49093, 49100, 49101, 49104, 49108, 49116, 49119, 49121, 49212, 49233, 49240, 49244, 49248, 49256, 49257, 49296, 49297, 49300, 49304, 49312, 49313, 49315, 49317, 49324, 49325, 49327, 49328, 49331, 49332, 49333, 49334, 49340, 49341, 49343, 49344, 49345, 49349, 49352, 49353, 49356, 49360, 49368, 49369, 49371, 49372, 49373, 49380, 54122, 54123, 54124, 54125, 54126, 54127, 54128, 54129, 54130, 54131, 54132, 54133, 54134, 54135, 54136, 54137, 54138, 54139, 54142, 54143, 54145, 54146, 54147, 54149, 54150, 54151, null, null, null, null, null, null, 54152, 54153, 54154, 54155, 54158, 54162, 54163, 54164, 54165, 54166, 54167, 54170, 54171, 54173, 54174, 54175, 54177, 54178, 54179, 54180, 54181, 54182, 54183, 54186, 54188, 54190, null, null, null, null, null, null, 54191, 54192, 54193, 54194, 54195, 54197, 54198, 54199, 54201, 54202, 54203, 54205, 54206, 54207, 54208, 54209, 54210, 54211, 54214, 54215, 54218, 54219, 54220, 54221, 54222, 54223, 54225, 54226, 54227, 54228, 54229, 54230, 49381, 49384, 49388, 49396, 49397, 49399, 49401, 49408, 49412, 49416, 49424, 49429, 49436, 49437, 49438, 49439, 49440, 49443, 49444, 49446, 49447, 49452, 49453, 49455, 49456, 49457, 49462, 49464, 49465, 49468, 49472, 49480, 49481, 49483, 49484, 49485, 49492, 49493, 49496, 49500, 49508, 49509, 49511, 49512, 49513, 49520, 49524, 49528, 49541, 49548, 49549, 49550, 49552, 49556, 49558, 49564, 49565, 49567, 49569, 49573, 49576, 49577, 49580, 49584, 49597, 49604, 49608, 49612, 49620, 49623, 49624, 49632, 49636, 49640, 49648, 49649, 49651, 49660, 49661, 49664, 49668, 49676, 49677, 49679, 49681, 49688, 49689, 49692, 49695, 49696, 49704, 49705, 49707, 49709, 54231, 54233, 54234, 54235, 54236, 54237, 54238, 54239, 54240, 54242, 54244, 54245, 54246, 54247, 54248, 54249, 54250, 54251, 54254, 54255, 54257, 54258, 54259, 54261, 54262, 54263, null, null, null, null, null, null, 54264, 54265, 54266, 54267, 54270, 54272, 54274, 54275, 54276, 54277, 54278, 54279, 54281, 54282, 54283, 54284, 54285, 54286, 54287, 54288, 54289, 54290, 54291, 54292, 54293, 54294, null, null, null, null, null, null, 54295, 54296, 54297, 54298, 54299, 54300, 54302, 54303, 54304, 54305, 54306, 54307, 54308, 54309, 54310, 54311, 54312, 54313, 54314, 54315, 54316, 54317, 54318, 54319, 54320, 54321, 54322, 54323, 54324, 54325, 54326, 54327, 49711, 49713, 49714, 49716, 49736, 49744, 49745, 49748, 49752, 49760, 49765, 49772, 49773, 49776, 49780, 49788, 49789, 49791, 49793, 49800, 49801, 49808, 49816, 49819, 49821, 49828, 49829, 49832, 49836, 49837, 49844, 49845, 49847, 49849, 49884, 49885, 49888, 49891, 49892, 49899, 49900, 49901, 49903, 49905, 49910, 49912, 49913, 49915, 49916, 49920, 49928, 49929, 49932, 49933, 49939, 49940, 49941, 49944, 49948, 49956, 49957, 49960, 49961, 49989, 50024, 50025, 50028, 50032, 50034, 50040, 50041, 50044, 50045, 50052, 50056, 50060, 50112, 50136, 50137, 50140, 50143, 50144, 50146, 50152, 50153, 50157, 50164, 50165, 50168, 50184, 50192, 50212, 50220, 50224, 54328, 54329, 54330, 54331, 54332, 54333, 54334, 54335, 54337, 54338, 54339, 54341, 54342, 54343, 54344, 54345, 54346, 54347, 54348, 54349, 54350, 54351, 54352, 54353, 54354, 54355, null, null, null, null, null, null, 54356, 54357, 54358, 54359, 54360, 54361, 54362, 54363, 54365, 54366, 54367, 54369, 54370, 54371, 54373, 54374, 54375, 54376, 54377, 54378, 54379, 54380, 54382, 54384, 54385, 54386, null, null, null, null, null, null, 54387, 54388, 54389, 54390, 54391, 54394, 54395, 54397, 54398, 54401, 54403, 54404, 54405, 54406, 54407, 54410, 54412, 54414, 54415, 54416, 54417, 54418, 54419, 54421, 54422, 54423, 54424, 54425, 54426, 54427, 54428, 54429, 50228, 50236, 50237, 50248, 50276, 50277, 50280, 50284, 50292, 50293, 50297, 50304, 50324, 50332, 50360, 50364, 50409, 50416, 50417, 50420, 50424, 50426, 50431, 50432, 50433, 50444, 50448, 50452, 50460, 50472, 50473, 50476, 50480, 50488, 50489, 50491, 50493, 50500, 50501, 50504, 50505, 50506, 50508, 50509, 50510, 50515, 50516, 50517, 50519, 50520, 50521, 50525, 50526, 50528, 50529, 50532, 50536, 50544, 50545, 50547, 50548, 50549, 50556, 50557, 50560, 50564, 50567, 50572, 50573, 50575, 50577, 50581, 50583, 50584, 50588, 50592, 50601, 50612, 50613, 50616, 50617, 50619, 50620, 50621, 50622, 50628, 50629, 50630, 50631, 50632, 50633, 50634, 50636, 50638, 54430, 54431, 54432, 54433, 54434, 54435, 54436, 54437, 54438, 54439, 54440, 54442, 54443, 54444, 54445, 54446, 54447, 54448, 54449, 54450, 54451, 54452, 54453, 54454, 54455, 54456, null, null, null, null, null, null, 54457, 54458, 54459, 54460, 54461, 54462, 54463, 54464, 54465, 54466, 54467, 54468, 54469, 54470, 54471, 54472, 54473, 54474, 54475, 54477, 54478, 54479, 54481, 54482, 54483, 54485, null, null, null, null, null, null, 54486, 54487, 54488, 54489, 54490, 54491, 54493, 54494, 54496, 54497, 54498, 54499, 54500, 54501, 54502, 54503, 54505, 54506, 54507, 54509, 54510, 54511, 54513, 54514, 54515, 54516, 54517, 54518, 54519, 54521, 54522, 54524, 50640, 50641, 50644, 50648, 50656, 50657, 50659, 50661, 50668, 50669, 50670, 50672, 50676, 50678, 50679, 50684, 50685, 50686, 50687, 50688, 50689, 50693, 50694, 50695, 50696, 50700, 50704, 50712, 50713, 50715, 50716, 50724, 50725, 50728, 50732, 50733, 50734, 50736, 50739, 50740, 50741, 50743, 50745, 50747, 50752, 50753, 50756, 50760, 50768, 50769, 50771, 50772, 50773, 50780, 50781, 50784, 50796, 50799, 50801, 50808, 50809, 50812, 50816, 50824, 50825, 50827, 50829, 50836, 50837, 50840, 50844, 50852, 50853, 50855, 50857, 50864, 50865, 50868, 50872, 50873, 50874, 50880, 50881, 50883, 50885, 50892, 50893, 50896, 50900, 50908, 50909, 50912, 50913, 50920, 54526, 54527, 54528, 54529, 54530, 54531, 54533, 54534, 54535, 54537, 54538, 54539, 54541, 54542, 54543, 54544, 54545, 54546, 54547, 54550, 54552, 54553, 54554, 54555, 54556, 54557, null, null, null, null, null, null, 54558, 54559, 54560, 54561, 54562, 54563, 54564, 54565, 54566, 54567, 54568, 54569, 54570, 54571, 54572, 54573, 54574, 54575, 54576, 54577, 54578, 54579, 54580, 54581, 54582, 54583, null, null, null, null, null, null, 54584, 54585, 54586, 54587, 54590, 54591, 54593, 54594, 54595, 54597, 54598, 54599, 54600, 54601, 54602, 54603, 54606, 54608, 54610, 54611, 54612, 54613, 54614, 54615, 54618, 54619, 54621, 54622, 54623, 54625, 54626, 54627, 50921, 50924, 50928, 50936, 50937, 50941, 50948, 50949, 50952, 50956, 50964, 50965, 50967, 50969, 50976, 50977, 50980, 50984, 50992, 50993, 50995, 50997, 50999, 51004, 51005, 51008, 51012, 51018, 51020, 51021, 51023, 51025, 51026, 51027, 51028, 51029, 51030, 51031, 51032, 51036, 51040, 51048, 51051, 51060, 51061, 51064, 51068, 51069, 51070, 51075, 51076, 51077, 51079, 51080, 51081, 51082, 51086, 51088, 51089, 51092, 51094, 51095, 51096, 51098, 51104, 51105, 51107, 51108, 51109, 51110, 51116, 51117, 51120, 51124, 51132, 51133, 51135, 51136, 51137, 51144, 51145, 51148, 51150, 51152, 51160, 51165, 51172, 51176, 51180, 51200, 51201, 51204, 51208, 51210, 54628, 54630, 54631, 54634, 54636, 54638, 54639, 54640, 54641, 54642, 54643, 54646, 54647, 54649, 54650, 54651, 54653, 54654, 54655, 54656, 54657, 54658, 54659, 54662, 54666, 54667, null, null, null, null, null, null, 54668, 54669, 54670, 54671, 54673, 54674, 54675, 54676, 54677, 54678, 54679, 54680, 54681, 54682, 54683, 54684, 54685, 54686, 54687, 54688, 54689, 54690, 54691, 54692, 54694, 54695, null, null, null, null, null, null, 54696, 54697, 54698, 54699, 54700, 54701, 54702, 54703, 54704, 54705, 54706, 54707, 54708, 54709, 54710, 54711, 54712, 54713, 54714, 54715, 54716, 54717, 54718, 54719, 54720, 54721, 54722, 54723, 54724, 54725, 54726, 54727, 51216, 51217, 51219, 51221, 51222, 51228, 51229, 51232, 51236, 51244, 51245, 51247, 51249, 51256, 51260, 51264, 51272, 51273, 51276, 51277, 51284, 51312, 51313, 51316, 51320, 51322, 51328, 51329, 51331, 51333, 51334, 51335, 51339, 51340, 51341, 51348, 51357, 51359, 51361, 51368, 51388, 51389, 51396, 51400, 51404, 51412, 51413, 51415, 51417, 51424, 51425, 51428, 51445, 51452, 51453, 51456, 51460, 51461, 51462, 51468, 51469, 51471, 51473, 51480, 51500, 51508, 51536, 51537, 51540, 51544, 51552, 51553, 51555, 51564, 51568, 51572, 51580, 51592, 51593, 51596, 51600, 51608, 51609, 51611, 51613, 51648, 51649, 51652, 51655, 51656, 51658, 51664, 51665, 51667, 54730, 54731, 54733, 54734, 54735, 54737, 54739, 54740, 54741, 54742, 54743, 54746, 54748, 54750, 54751, 54752, 54753, 54754, 54755, 54758, 54759, 54761, 54762, 54763, 54765, 54766, null, null, null, null, null, null, 54767, 54768, 54769, 54770, 54771, 54774, 54776, 54778, 54779, 54780, 54781, 54782, 54783, 54786, 54787, 54789, 54790, 54791, 54793, 54794, 54795, 54796, 54797, 54798, 54799, 54802, null, null, null, null, null, null, 54806, 54807, 54808, 54809, 54810, 54811, 54813, 54814, 54815, 54817, 54818, 54819, 54821, 54822, 54823, 54824, 54825, 54826, 54827, 54828, 54830, 54831, 54832, 54833, 54834, 54835, 54836, 54837, 54838, 54839, 54842, 54843, 51669, 51670, 51673, 51674, 51676, 51677, 51680, 51682, 51684, 51687, 51692, 51693, 51695, 51696, 51697, 51704, 51705, 51708, 51712, 51720, 51721, 51723, 51724, 51725, 51732, 51736, 51753, 51788, 51789, 51792, 51796, 51804, 51805, 51807, 51808, 51809, 51816, 51837, 51844, 51864, 51900, 51901, 51904, 51908, 51916, 51917, 51919, 51921, 51923, 51928, 51929, 51936, 51948, 51956, 51976, 51984, 51988, 51992, 52e3, 52001, 52033, 52040, 52041, 52044, 52048, 52056, 52057, 52061, 52068, 52088, 52089, 52124, 52152, 52180, 52196, 52199, 52201, 52236, 52237, 52240, 52244, 52252, 52253, 52257, 52258, 52263, 52264, 52265, 52268, 52270, 52272, 52280, 52281, 52283, 54845, 54846, 54847, 54849, 54850, 54851, 54852, 54854, 54855, 54858, 54860, 54862, 54863, 54864, 54866, 54867, 54870, 54871, 54873, 54874, 54875, 54877, 54878, 54879, 54880, 54881, null, null, null, null, null, null, 54882, 54883, 54884, 54885, 54886, 54888, 54890, 54891, 54892, 54893, 54894, 54895, 54898, 54899, 54901, 54902, 54903, 54904, 54905, 54906, 54907, 54908, 54909, 54910, 54911, 54912, null, null, null, null, null, null, 54913, 54914, 54916, 54918, 54919, 54920, 54921, 54922, 54923, 54926, 54927, 54929, 54930, 54931, 54933, 54934, 54935, 54936, 54937, 54938, 54939, 54940, 54942, 54944, 54946, 54947, 54948, 54949, 54950, 54951, 54953, 54954, 52284, 52285, 52286, 52292, 52293, 52296, 52300, 52308, 52309, 52311, 52312, 52313, 52320, 52324, 52326, 52328, 52336, 52341, 52376, 52377, 52380, 52384, 52392, 52393, 52395, 52396, 52397, 52404, 52405, 52408, 52412, 52420, 52421, 52423, 52425, 52432, 52436, 52452, 52460, 52464, 52481, 52488, 52489, 52492, 52496, 52504, 52505, 52507, 52509, 52516, 52520, 52524, 52537, 52572, 52576, 52580, 52588, 52589, 52591, 52593, 52600, 52616, 52628, 52629, 52632, 52636, 52644, 52645, 52647, 52649, 52656, 52676, 52684, 52688, 52712, 52716, 52720, 52728, 52729, 52731, 52733, 52740, 52744, 52748, 52756, 52761, 52768, 52769, 52772, 52776, 52784, 52785, 52787, 52789, 54955, 54957, 54958, 54959, 54961, 54962, 54963, 54964, 54965, 54966, 54967, 54968, 54970, 54972, 54973, 54974, 54975, 54976, 54977, 54978, 54979, 54982, 54983, 54985, 54986, 54987, null, null, null, null, null, null, 54989, 54990, 54991, 54992, 54994, 54995, 54997, 54998, 55e3, 55002, 55003, 55004, 55005, 55006, 55007, 55009, 55010, 55011, 55013, 55014, 55015, 55017, 55018, 55019, 55020, 55021, null, null, null, null, null, null, 55022, 55023, 55025, 55026, 55027, 55028, 55030, 55031, 55032, 55033, 55034, 55035, 55038, 55039, 55041, 55042, 55043, 55045, 55046, 55047, 55048, 55049, 55050, 55051, 55052, 55053, 55054, 55055, 55056, 55058, 55059, 55060, 52824, 52825, 52828, 52831, 52832, 52833, 52840, 52841, 52843, 52845, 52852, 52853, 52856, 52860, 52868, 52869, 52871, 52873, 52880, 52881, 52884, 52888, 52896, 52897, 52899, 52900, 52901, 52908, 52909, 52929, 52964, 52965, 52968, 52971, 52972, 52980, 52981, 52983, 52984, 52985, 52992, 52993, 52996, 53e3, 53008, 53009, 53011, 53013, 53020, 53024, 53028, 53036, 53037, 53039, 53040, 53041, 53048, 53076, 53077, 53080, 53084, 53092, 53093, 53095, 53097, 53104, 53105, 53108, 53112, 53120, 53125, 53132, 53153, 53160, 53168, 53188, 53216, 53217, 53220, 53224, 53232, 53233, 53235, 53237, 53244, 53248, 53252, 53265, 53272, 53293, 53300, 53301, 53304, 53308, 55061, 55062, 55063, 55066, 55067, 55069, 55070, 55071, 55073, 55074, 55075, 55076, 55077, 55078, 55079, 55082, 55084, 55086, 55087, 55088, 55089, 55090, 55091, 55094, 55095, 55097, null, null, null, null, null, null, 55098, 55099, 55101, 55102, 55103, 55104, 55105, 55106, 55107, 55109, 55110, 55112, 55114, 55115, 55116, 55117, 55118, 55119, 55122, 55123, 55125, 55130, 55131, 55132, 55133, 55134, null, null, null, null, null, null, 55135, 55138, 55140, 55142, 55143, 55144, 55146, 55147, 55149, 55150, 55151, 55153, 55154, 55155, 55157, 55158, 55159, 55160, 55161, 55162, 55163, 55166, 55167, 55168, 55170, 55171, 55172, 55173, 55174, 55175, 55178, 55179, 53316, 53317, 53319, 53321, 53328, 53332, 53336, 53344, 53356, 53357, 53360, 53364, 53372, 53373, 53377, 53412, 53413, 53416, 53420, 53428, 53429, 53431, 53433, 53440, 53441, 53444, 53448, 53449, 53456, 53457, 53459, 53460, 53461, 53468, 53469, 53472, 53476, 53484, 53485, 53487, 53488, 53489, 53496, 53517, 53552, 53553, 53556, 53560, 53562, 53568, 53569, 53571, 53572, 53573, 53580, 53581, 53584, 53588, 53596, 53597, 53599, 53601, 53608, 53612, 53628, 53636, 53640, 53664, 53665, 53668, 53672, 53680, 53681, 53683, 53685, 53690, 53692, 53696, 53720, 53748, 53752, 53767, 53769, 53776, 53804, 53805, 53808, 53812, 53820, 53821, 53823, 53825, 53832, 53852, 55181, 55182, 55183, 55185, 55186, 55187, 55188, 55189, 55190, 55191, 55194, 55196, 55198, 55199, 55200, 55201, 55202, 55203, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 53860, 53888, 53889, 53892, 53896, 53904, 53905, 53909, 53916, 53920, 53924, 53932, 53937, 53944, 53945, 53948, 53951, 53952, 53954, 53960, 53961, 53963, 53972, 53976, 53980, 53988, 53989, 54e3, 54001, 54004, 54008, 54016, 54017, 54019, 54021, 54028, 54029, 54030, 54032, 54036, 54038, 54044, 54045, 54047, 54048, 54049, 54053, 54056, 54057, 54060, 54064, 54072, 54073, 54075, 54076, 54077, 54084, 54085, 54140, 54141, 54144, 54148, 54156, 54157, 54159, 54160, 54161, 54168, 54169, 54172, 54176, 54184, 54185, 54187, 54189, 54196, 54200, 54204, 54212, 54213, 54216, 54217, 54224, 54232, 54241, 54243, 54252, 54253, 54256, 54260, 54268, 54269, 54271, 54273, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 54280, 54301, 54336, 54340, 54364, 54368, 54372, 54381, 54383, 54392, 54393, 54396, 54399, 54400, 54402, 54408, 54409, 54411, 54413, 54420, 54441, 54476, 54480, 54484, 54492, 54495, 54504, 54508, 54512, 54520, 54523, 54525, 54532, 54536, 54540, 54548, 54549, 54551, 54588, 54589, 54592, 54596, 54604, 54605, 54607, 54609, 54616, 54617, 54620, 54624, 54629, 54632, 54633, 54635, 54637, 54644, 54645, 54648, 54652, 54660, 54661, 54663, 54664, 54665, 54672, 54693, 54728, 54729, 54732, 54736, 54738, 54744, 54745, 54747, 54749, 54756, 54757, 54760, 54764, 54772, 54773, 54775, 54777, 54784, 54785, 54788, 54792, 54800, 54801, 54803, 54804, 54805, 54812, 54816, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 54820, 54829, 54840, 54841, 54844, 54848, 54853, 54856, 54857, 54859, 54861, 54865, 54868, 54869, 54872, 54876, 54887, 54889, 54896, 54897, 54900, 54915, 54917, 54924, 54925, 54928, 54932, 54941, 54943, 54945, 54952, 54956, 54960, 54969, 54971, 54980, 54981, 54984, 54988, 54993, 54996, 54999, 55001, 55008, 55012, 55016, 55024, 55029, 55036, 55037, 55040, 55044, 55057, 55064, 55065, 55068, 55072, 55080, 55081, 55083, 55085, 55092, 55093, 55096, 55100, 55108, 55111, 55113, 55120, 55121, 55124, 55126, 55127, 55128, 55129, 55136, 55137, 55139, 55141, 55145, 55148, 55152, 55156, 55164, 55165, 55169, 55176, 55177, 55180, 55184, 55192, 55193, 55195, 55197, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20285, 20339, 20551, 20729, 21152, 21487, 21621, 21733, 22025, 23233, 23478, 26247, 26550, 26551, 26607, 27468, 29634, 30146, 31292, 33499, 33540, 34903, 34952, 35382, 36040, 36303, 36603, 36838, 39381, 21051, 21364, 21508, 24682, 24932, 27580, 29647, 33050, 35258, 35282, 38307, 20355, 21002, 22718, 22904, 23014, 24178, 24185, 25031, 25536, 26438, 26604, 26751, 28567, 30286, 30475, 30965, 31240, 31487, 31777, 32925, 33390, 33393, 35563, 38291, 20075, 21917, 26359, 28212, 30883, 31469, 33883, 35088, 34638, 38824, 21208, 22350, 22570, 23884, 24863, 25022, 25121, 25954, 26577, 27204, 28187, 29976, 30131, 30435, 30640, 32058, 37039, 37969, 37970, 40853, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21283, 23724, 30002, 32987, 37440, 38296, 21083, 22536, 23004, 23713, 23831, 24247, 24378, 24394, 24951, 27743, 30074, 30086, 31968, 32115, 32177, 32652, 33108, 33313, 34193, 35137, 35611, 37628, 38477, 40007, 20171, 20215, 20491, 20977, 22607, 24887, 24894, 24936, 25913, 27114, 28433, 30117, 30342, 30422, 31623, 33445, 33995, 63744, 37799, 38283, 21888, 23458, 22353, 63745, 31923, 32697, 37301, 20520, 21435, 23621, 24040, 25298, 25454, 25818, 25831, 28192, 28844, 31067, 36317, 36382, 63746, 36989, 37445, 37624, 20094, 20214, 20581, 24062, 24314, 24838, 26967, 33137, 34388, 36423, 37749, 39467, 20062, 20625, 26480, 26688, 20745, 21133, 21138, 27298, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30652, 37392, 40660, 21163, 24623, 36850, 20552, 25001, 25581, 25802, 26684, 27268, 28608, 33160, 35233, 38548, 22533, 29309, 29356, 29956, 32121, 32365, 32937, 35211, 35700, 36963, 40273, 25225, 27770, 28500, 32080, 32570, 35363, 20860, 24906, 31645, 35609, 37463, 37772, 20140, 20435, 20510, 20670, 20742, 21185, 21197, 21375, 22384, 22659, 24218, 24465, 24950, 25004, 25806, 25964, 26223, 26299, 26356, 26775, 28039, 28805, 28913, 29855, 29861, 29898, 30169, 30828, 30956, 31455, 31478, 32069, 32147, 32789, 32831, 33051, 33686, 35686, 36629, 36885, 37857, 38915, 38968, 39514, 39912, 20418, 21843, 22586, 22865, 23395, 23622, 24760, 25106, 26690, 26800, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26856, 28330, 30028, 30328, 30926, 31293, 31995, 32363, 32380, 35336, 35489, 35903, 38542, 40388, 21476, 21481, 21578, 21617, 22266, 22993, 23396, 23611, 24235, 25335, 25911, 25925, 25970, 26272, 26543, 27073, 27837, 30204, 30352, 30590, 31295, 32660, 32771, 32929, 33167, 33510, 33533, 33776, 34241, 34865, 34996, 35493, 63747, 36764, 37678, 38599, 39015, 39640, 40723, 21741, 26011, 26354, 26767, 31296, 35895, 40288, 22256, 22372, 23825, 26118, 26801, 26829, 28414, 29736, 34974, 39908, 27752, 63748, 39592, 20379, 20844, 20849, 21151, 23380, 24037, 24656, 24685, 25329, 25511, 25915, 29657, 31354, 34467, 36002, 38799, 20018, 23521, 25096, 26524, 29916, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31185, 33747, 35463, 35506, 36328, 36942, 37707, 38982, 24275, 27112, 34303, 37101, 63749, 20896, 23448, 23532, 24931, 26874, 27454, 28748, 29743, 29912, 31649, 32592, 33733, 35264, 36011, 38364, 39208, 21038, 24669, 25324, 36866, 20362, 20809, 21281, 22745, 24291, 26336, 27960, 28826, 29378, 29654, 31568, 33009, 37979, 21350, 25499, 32619, 20054, 20608, 22602, 22750, 24618, 24871, 25296, 27088, 39745, 23439, 32024, 32945, 36703, 20132, 20689, 21676, 21932, 23308, 23968, 24039, 25898, 25934, 26657, 27211, 29409, 30350, 30703, 32094, 32761, 33184, 34126, 34527, 36611, 36686, 37066, 39171, 39509, 39851, 19992, 20037, 20061, 20167, 20465, 20855, 21246, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21312, 21475, 21477, 21646, 22036, 22389, 22434, 23495, 23943, 24272, 25084, 25304, 25937, 26552, 26601, 27083, 27472, 27590, 27628, 27714, 28317, 28792, 29399, 29590, 29699, 30655, 30697, 31350, 32127, 32777, 33276, 33285, 33290, 33503, 34914, 35635, 36092, 36544, 36881, 37041, 37476, 37558, 39378, 39493, 40169, 40407, 40860, 22283, 23616, 33738, 38816, 38827, 40628, 21531, 31384, 32676, 35033, 36557, 37089, 22528, 23624, 25496, 31391, 23470, 24339, 31353, 31406, 33422, 36524, 20518, 21048, 21240, 21367, 22280, 25331, 25458, 27402, 28099, 30519, 21413, 29527, 34152, 36470, 38357, 26426, 27331, 28528, 35437, 36556, 39243, 63750, 26231, 27512, 36020, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 39740, 63751, 21483, 22317, 22862, 25542, 27131, 29674, 30789, 31418, 31429, 31998, 33909, 35215, 36211, 36917, 38312, 21243, 22343, 30023, 31584, 33740, 37406, 63752, 27224, 20811, 21067, 21127, 25119, 26840, 26997, 38553, 20677, 21156, 21220, 25027, 26020, 26681, 27135, 29822, 31563, 33465, 33771, 35250, 35641, 36817, 39241, 63753, 20170, 22935, 25810, 26129, 27278, 29748, 31105, 31165, 33449, 34942, 34943, 35167, 63754, 37670, 20235, 21450, 24613, 25201, 27762, 32026, 32102, 20120, 20834, 30684, 32943, 20225, 20238, 20854, 20864, 21980, 22120, 22331, 22522, 22524, 22804, 22855, 22931, 23492, 23696, 23822, 24049, 24190, 24524, 25216, 26071, 26083, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26398, 26399, 26462, 26827, 26820, 27231, 27450, 27683, 27773, 27778, 28103, 29592, 29734, 29738, 29826, 29859, 30072, 30079, 30849, 30959, 31041, 31047, 31048, 31098, 31637, 32e3, 32186, 32648, 32774, 32813, 32908, 35352, 35663, 35912, 36215, 37665, 37668, 39138, 39249, 39438, 39439, 39525, 40594, 32202, 20342, 21513, 25326, 26708, 37329, 21931, 20794, 63755, 63756, 23068, 25062, 63757, 25295, 25343, 63758, 63759, 63760, 63761, 63762, 63763, 37027, 63764, 63765, 63766, 63767, 63768, 35582, 63769, 63770, 63771, 63772, 26262, 63773, 29014, 63774, 63775, 38627, 63776, 25423, 25466, 21335, 63777, 26511, 26976, 28275, 63778, 30007, 63779, 63780, 63781, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32013, 63782, 63783, 34930, 22218, 23064, 63784, 63785, 63786, 63787, 63788, 20035, 63789, 20839, 22856, 26608, 32784, 63790, 22899, 24180, 25754, 31178, 24565, 24684, 25288, 25467, 23527, 23511, 21162, 63791, 22900, 24361, 24594, 63792, 63793, 63794, 29785, 63795, 63796, 63797, 63798, 63799, 63800, 39377, 63801, 63802, 63803, 63804, 63805, 63806, 63807, 63808, 63809, 63810, 63811, 28611, 63812, 63813, 33215, 36786, 24817, 63814, 63815, 33126, 63816, 63817, 23615, 63818, 63819, 63820, 63821, 63822, 63823, 63824, 63825, 23273, 35365, 26491, 32016, 63826, 63827, 63828, 63829, 63830, 63831, 33021, 63832, 63833, 23612, 27877, 21311, 28346, 22810, 33590, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20025, 20150, 20294, 21934, 22296, 22727, 24406, 26039, 26086, 27264, 27573, 28237, 30701, 31471, 31774, 32222, 34507, 34962, 37170, 37723, 25787, 28606, 29562, 30136, 36948, 21846, 22349, 25018, 25812, 26311, 28129, 28251, 28525, 28601, 30192, 32835, 33213, 34113, 35203, 35527, 35674, 37663, 27795, 30035, 31572, 36367, 36957, 21776, 22530, 22616, 24162, 25095, 25758, 26848, 30070, 31958, 34739, 40680, 20195, 22408, 22382, 22823, 23565, 23729, 24118, 24453, 25140, 25825, 29619, 33274, 34955, 36024, 38538, 40667, 23429, 24503, 24755, 20498, 20992, 21040, 22294, 22581, 22615, 23566, 23648, 23798, 23947, 24230, 24466, 24764, 25361, 25481, 25623, 26691, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26873, 27330, 28120, 28193, 28372, 28644, 29182, 30428, 30585, 31153, 31291, 33796, 35241, 36077, 36339, 36424, 36867, 36884, 36947, 37117, 37709, 38518, 38876, 27602, 28678, 29272, 29346, 29544, 30563, 31167, 31716, 32411, 35712, 22697, 24775, 25958, 26109, 26302, 27788, 28958, 29129, 35930, 38931, 20077, 31361, 20189, 20908, 20941, 21205, 21516, 24999, 26481, 26704, 26847, 27934, 28540, 30140, 30643, 31461, 33012, 33891, 37509, 20828, 26007, 26460, 26515, 30168, 31431, 33651, 63834, 35910, 36887, 38957, 23663, 33216, 33434, 36929, 36975, 37389, 24471, 23965, 27225, 29128, 30331, 31561, 34276, 35588, 37159, 39472, 21895, 25078, 63835, 30313, 32645, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 34367, 34746, 35064, 37007, 63836, 27931, 28889, 29662, 32097, 33853, 63837, 37226, 39409, 63838, 20098, 21365, 27396, 27410, 28734, 29211, 34349, 40478, 21068, 36771, 23888, 25829, 25900, 27414, 28651, 31811, 32412, 34253, 35172, 35261, 25289, 33240, 34847, 24266, 26391, 28010, 29436, 29701, 29807, 34690, 37086, 20358, 23821, 24480, 33802, 20919, 25504, 30053, 20142, 20486, 20841, 20937, 26753, 27153, 31918, 31921, 31975, 33391, 35538, 36635, 37327, 20406, 20791, 21237, 21570, 24300, 24942, 25150, 26053, 27354, 28670, 31018, 34268, 34851, 38317, 39522, 39530, 40599, 40654, 21147, 26310, 27511, 28701, 31019, 36706, 38722, 24976, 25088, 25891, 28451, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29001, 29833, 32244, 32879, 34030, 36646, 36899, 37706, 20925, 21015, 21155, 27916, 28872, 35010, 24265, 25986, 27566, 28610, 31806, 29557, 20196, 20278, 22265, 63839, 23738, 23994, 24604, 29618, 31533, 32666, 32718, 32838, 36894, 37428, 38646, 38728, 38936, 40801, 20363, 28583, 31150, 37300, 38583, 21214, 63840, 25736, 25796, 27347, 28510, 28696, 29200, 30439, 32769, 34310, 34396, 36335, 36613, 38706, 39791, 40442, 40565, 30860, 31103, 32160, 33737, 37636, 40575, 40595, 35542, 22751, 24324, 26407, 28711, 29903, 31840, 32894, 20769, 28712, 29282, 30922, 36034, 36058, 36084, 38647, 20102, 20698, 23534, 24278, 26009, 29134, 30274, 30637, 32842, 34044, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36988, 39719, 40845, 22744, 23105, 23650, 27155, 28122, 28431, 30267, 32047, 32311, 34078, 35128, 37860, 38475, 21129, 26066, 26611, 27060, 27969, 28316, 28687, 29705, 29792, 30041, 30244, 30827, 35628, 39006, 20845, 25134, 38520, 20374, 20523, 23833, 28138, 32184, 36650, 24459, 24900, 26647, 63841, 38534, 21202, 32907, 20956, 20940, 26974, 31260, 32190, 33777, 38517, 20442, 21033, 21400, 21519, 21774, 23653, 24743, 26446, 26792, 28012, 29313, 29432, 29702, 29827, 63842, 30178, 31852, 32633, 32696, 33673, 35023, 35041, 37324, 37328, 38626, 39881, 21533, 28542, 29136, 29848, 34298, 36522, 38563, 40023, 40607, 26519, 28107, 29747, 33256, 38678, 30764, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31435, 31520, 31890, 25705, 29802, 30194, 30908, 30952, 39340, 39764, 40635, 23518, 24149, 28448, 33180, 33707, 37e3, 19975, 21325, 23081, 24018, 24398, 24930, 25405, 26217, 26364, 28415, 28459, 28771, 30622, 33836, 34067, 34875, 36627, 39237, 39995, 21788, 25273, 26411, 27819, 33545, 35178, 38778, 20129, 22916, 24536, 24537, 26395, 32178, 32596, 33426, 33579, 33725, 36638, 37017, 22475, 22969, 23186, 23504, 26151, 26522, 26757, 27599, 29028, 32629, 36023, 36067, 36993, 39749, 33032, 35978, 38476, 39488, 40613, 23391, 27667, 29467, 30450, 30431, 33804, 20906, 35219, 20813, 20885, 21193, 26825, 27796, 30468, 30496, 32191, 32236, 38754, 40629, 28357, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 34065, 20901, 21517, 21629, 26126, 26269, 26919, 28319, 30399, 30609, 33559, 33986, 34719, 37225, 37528, 40180, 34946, 20398, 20882, 21215, 22982, 24125, 24917, 25720, 25721, 26286, 26576, 27169, 27597, 27611, 29279, 29281, 29761, 30520, 30683, 32791, 33468, 33541, 35584, 35624, 35980, 26408, 27792, 29287, 30446, 30566, 31302, 40361, 27519, 27794, 22818, 26406, 33945, 21359, 22675, 22937, 24287, 25551, 26164, 26483, 28218, 29483, 31447, 33495, 37672, 21209, 24043, 25006, 25035, 25098, 25287, 25771, 26080, 26969, 27494, 27595, 28961, 29687, 30045, 32326, 33310, 33538, 34154, 35491, 36031, 38695, 40289, 22696, 40664, 20497, 21006, 21563, 21839, 25991, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 27766, 32010, 32011, 32862, 34442, 38272, 38639, 21247, 27797, 29289, 21619, 23194, 23614, 23883, 24396, 24494, 26410, 26806, 26979, 28220, 28228, 30473, 31859, 32654, 34183, 35598, 36855, 38753, 40692, 23735, 24758, 24845, 25003, 25935, 26107, 26108, 27665, 27887, 29599, 29641, 32225, 38292, 23494, 34588, 35600, 21085, 21338, 25293, 25615, 25778, 26420, 27192, 27850, 29632, 29854, 31636, 31893, 32283, 33162, 33334, 34180, 36843, 38649, 39361, 20276, 21322, 21453, 21467, 25292, 25644, 25856, 26001, 27075, 27886, 28504, 29677, 30036, 30242, 30436, 30460, 30928, 30971, 31020, 32070, 33324, 34784, 36820, 38930, 39151, 21187, 25300, 25765, 28196, 28497, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30332, 36299, 37297, 37474, 39662, 39747, 20515, 20621, 22346, 22952, 23592, 24135, 24439, 25151, 25918, 26041, 26049, 26121, 26507, 27036, 28354, 30917, 32033, 32938, 33152, 33323, 33459, 33953, 34444, 35370, 35607, 37030, 38450, 40848, 20493, 20467, 63843, 22521, 24472, 25308, 25490, 26479, 28227, 28953, 30403, 32972, 32986, 35060, 35061, 35097, 36064, 36649, 37197, 38506, 20271, 20336, 24091, 26575, 26658, 30333, 30334, 39748, 24161, 27146, 29033, 29140, 30058, 63844, 32321, 34115, 34281, 39132, 20240, 31567, 32624, 38309, 20961, 24070, 26805, 27710, 27726, 27867, 29359, 31684, 33539, 27861, 29754, 20731, 21128, 22721, 25816, 27287, 29863, 30294, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 30887, 34327, 38370, 38713, 63845, 21342, 24321, 35722, 36776, 36783, 37002, 21029, 30629, 40009, 40712, 19993, 20482, 20853, 23643, 24183, 26142, 26170, 26564, 26821, 28851, 29953, 30149, 31177, 31453, 36647, 39200, 39432, 20445, 22561, 22577, 23542, 26222, 27493, 27921, 28282, 28541, 29668, 29995, 33769, 35036, 35091, 35676, 36628, 20239, 20693, 21264, 21340, 23443, 24489, 26381, 31119, 33145, 33583, 34068, 35079, 35206, 36665, 36667, 39333, 39954, 26412, 20086, 20472, 22857, 23553, 23791, 23792, 25447, 26834, 28925, 29090, 29739, 32299, 34028, 34562, 36898, 37586, 40179, 19981, 20184, 20463, 20613, 21078, 21103, 21542, 21648, 22496, 22827, 23142, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 23386, 23413, 23500, 24220, 63846, 25206, 25975, 26023, 28014, 28325, 29238, 31526, 31807, 32566, 33104, 33105, 33178, 33344, 33433, 33705, 35331, 36e3, 36070, 36091, 36212, 36282, 37096, 37340, 38428, 38468, 39385, 40167, 21271, 20998, 21545, 22132, 22707, 22868, 22894, 24575, 24996, 25198, 26128, 27774, 28954, 30406, 31881, 31966, 32027, 33452, 36033, 38640, 63847, 20315, 24343, 24447, 25282, 23849, 26379, 26842, 30844, 32323, 40300, 19989, 20633, 21269, 21290, 21329, 22915, 23138, 24199, 24754, 24970, 25161, 25209, 26e3, 26503, 27047, 27604, 27606, 27607, 27608, 27832, 63848, 29749, 30202, 30738, 30865, 31189, 31192, 31875, 32203, 32737, 32933, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 33086, 33218, 33778, 34586, 35048, 35513, 35692, 36027, 37145, 38750, 39131, 40763, 22188, 23338, 24428, 25996, 27315, 27567, 27996, 28657, 28693, 29277, 29613, 36007, 36051, 38971, 24977, 27703, 32856, 39425, 20045, 20107, 20123, 20181, 20282, 20284, 20351, 20447, 20735, 21490, 21496, 21766, 21987, 22235, 22763, 22882, 23057, 23531, 23546, 23556, 24051, 24107, 24473, 24605, 25448, 26012, 26031, 26614, 26619, 26797, 27515, 27801, 27863, 28195, 28681, 29509, 30722, 31038, 31040, 31072, 31169, 31721, 32023, 32114, 32902, 33293, 33678, 34001, 34503, 35039, 35408, 35422, 35613, 36060, 36198, 36781, 37034, 39164, 39391, 40605, 21066, 63849, 26388, 63850, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20632, 21034, 23665, 25955, 27733, 29642, 29987, 30109, 31639, 33948, 37240, 38704, 20087, 25746, 27578, 29022, 34217, 19977, 63851, 26441, 26862, 28183, 33439, 34072, 34923, 25591, 28545, 37394, 39087, 19978, 20663, 20687, 20767, 21830, 21930, 22039, 23360, 23577, 23776, 24120, 24202, 24224, 24258, 24819, 26705, 27233, 28248, 29245, 29248, 29376, 30456, 31077, 31665, 32724, 35059, 35316, 35443, 35937, 36062, 38684, 22622, 29885, 36093, 21959, 63852, 31329, 32034, 33394, 29298, 29983, 29989, 63853, 31513, 22661, 22779, 23996, 24207, 24246, 24464, 24661, 25234, 25471, 25933, 26257, 26329, 26360, 26646, 26866, 29312, 29790, 31598, 32110, 32214, 32626, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32997, 33298, 34223, 35199, 35475, 36893, 37604, 40653, 40736, 22805, 22893, 24109, 24796, 26132, 26227, 26512, 27728, 28101, 28511, 30707, 30889, 33990, 37323, 37675, 20185, 20682, 20808, 21892, 23307, 23459, 25159, 25982, 26059, 28210, 29053, 29697, 29764, 29831, 29887, 30316, 31146, 32218, 32341, 32680, 33146, 33203, 33337, 34330, 34796, 35445, 36323, 36984, 37521, 37925, 39245, 39854, 21352, 23633, 26964, 27844, 27945, 28203, 33292, 34203, 35131, 35373, 35498, 38634, 40807, 21089, 26297, 27570, 32406, 34814, 36109, 38275, 38493, 25885, 28041, 29166, 63854, 22478, 22995, 23468, 24615, 24826, 25104, 26143, 26207, 29481, 29689, 30427, 30465, 31596, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32854, 32882, 33125, 35488, 37266, 19990, 21218, 27506, 27927, 31237, 31545, 32048, 63855, 36016, 21484, 22063, 22609, 23477, 23567, 23569, 24034, 25152, 25475, 25620, 26157, 26803, 27836, 28040, 28335, 28703, 28836, 29138, 29990, 30095, 30094, 30233, 31505, 31712, 31787, 32032, 32057, 34092, 34157, 34311, 35380, 36877, 36961, 37045, 37559, 38902, 39479, 20439, 23660, 26463, 28049, 31903, 32396, 35606, 36118, 36895, 23403, 24061, 25613, 33984, 36956, 39137, 29575, 23435, 24730, 26494, 28126, 35359, 35494, 36865, 38924, 21047, 63856, 28753, 30862, 37782, 34928, 37335, 20462, 21463, 22013, 22234, 22402, 22781, 23234, 23432, 23723, 23744, 24101, 24833, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 25101, 25163, 25480, 25628, 25910, 25976, 27193, 27530, 27700, 27929, 28465, 29159, 29417, 29560, 29703, 29874, 30246, 30561, 31168, 31319, 31466, 31929, 32143, 32172, 32353, 32670, 33065, 33585, 33936, 34010, 34282, 34966, 35504, 35728, 36664, 36930, 36995, 37228, 37526, 37561, 38539, 38567, 38568, 38614, 38656, 38920, 39318, 39635, 39706, 21460, 22654, 22809, 23408, 23487, 28113, 28506, 29087, 29729, 29881, 32901, 33789, 24033, 24455, 24490, 24642, 26092, 26642, 26991, 27219, 27529, 27957, 28147, 29667, 30462, 30636, 31565, 32020, 33059, 33308, 33600, 34036, 34147, 35426, 35524, 37255, 37662, 38918, 39348, 25100, 34899, 36848, 37477, 23815, 23847, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 23913, 29791, 33181, 34664, 28629, 25342, 32722, 35126, 35186, 19998, 20056, 20711, 21213, 21319, 25215, 26119, 32361, 34821, 38494, 20365, 21273, 22070, 22987, 23204, 23608, 23630, 23629, 24066, 24337, 24643, 26045, 26159, 26178, 26558, 26612, 29468, 30690, 31034, 32709, 33940, 33997, 35222, 35430, 35433, 35553, 35925, 35962, 22516, 23508, 24335, 24687, 25325, 26893, 27542, 28252, 29060, 31698, 34645, 35672, 36606, 39135, 39166, 20280, 20353, 20449, 21627, 23072, 23480, 24892, 26032, 26216, 29180, 30003, 31070, 32051, 33102, 33251, 33688, 34218, 34254, 34563, 35338, 36523, 36763, 63857, 36805, 22833, 23460, 23526, 24713, 23529, 23563, 24515, 27777, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63858, 28145, 28683, 29978, 33455, 35574, 20160, 21313, 63859, 38617, 27663, 20126, 20420, 20818, 21854, 23077, 23784, 25105, 29273, 33469, 33706, 34558, 34905, 35357, 38463, 38597, 39187, 40201, 40285, 22538, 23731, 23997, 24132, 24801, 24853, 25569, 27138, 28197, 37122, 37716, 38990, 39952, 40823, 23433, 23736, 25353, 26191, 26696, 30524, 38593, 38797, 38996, 39839, 26017, 35585, 36555, 38332, 21813, 23721, 24022, 24245, 26263, 30284, 33780, 38343, 22739, 25276, 29390, 40232, 20208, 22830, 24591, 26171, 27523, 31207, 40230, 21395, 21696, 22467, 23830, 24859, 26326, 28079, 30861, 33406, 38552, 38724, 21380, 25212, 25494, 28082, 32266, 33099, 38989, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 27387, 32588, 40367, 40474, 20063, 20539, 20918, 22812, 24825, 25590, 26928, 29242, 32822, 63860, 37326, 24369, 63861, 63862, 32004, 33509, 33903, 33979, 34277, 36493, 63863, 20335, 63864, 63865, 22756, 23363, 24665, 25562, 25880, 25965, 26264, 63866, 26954, 27171, 27915, 28673, 29036, 30162, 30221, 31155, 31344, 63867, 32650, 63868, 35140, 63869, 35731, 37312, 38525, 63870, 39178, 22276, 24481, 26044, 28417, 30208, 31142, 35486, 39341, 39770, 40812, 20740, 25014, 25233, 27277, 33222, 20547, 22576, 24422, 28937, 35328, 35578, 23420, 34326, 20474, 20796, 22196, 22852, 25513, 28153, 23978, 26989, 20870, 20104, 20313, 63871, 63872, 63873, 22914, 63874, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63875, 27487, 27741, 63876, 29877, 30998, 63877, 33287, 33349, 33593, 36671, 36701, 63878, 39192, 63879, 63880, 63881, 20134, 63882, 22495, 24441, 26131, 63883, 63884, 30123, 32377, 35695, 63885, 36870, 39515, 22181, 22567, 23032, 23071, 23476, 63886, 24310, 63887, 63888, 25424, 25403, 63889, 26941, 27783, 27839, 28046, 28051, 28149, 28436, 63890, 28895, 28982, 29017, 63891, 29123, 29141, 63892, 30799, 30831, 63893, 31605, 32227, 63894, 32303, 63895, 34893, 36575, 63896, 63897, 63898, 37467, 63899, 40182, 63900, 63901, 63902, 24709, 28037, 63903, 29105, 63904, 63905, 38321, 21421, 63906, 63907, 63908, 26579, 63909, 28814, 28976, 29744, 33398, 33490, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63910, 38331, 39653, 40573, 26308, 63911, 29121, 33865, 63912, 63913, 22603, 63914, 63915, 23992, 24433, 63916, 26144, 26254, 27001, 27054, 27704, 27891, 28214, 28481, 28634, 28699, 28719, 29008, 29151, 29552, 63917, 29787, 63918, 29908, 30408, 31310, 32403, 63919, 63920, 33521, 35424, 36814, 63921, 37704, 63922, 38681, 63923, 63924, 20034, 20522, 63925, 21e3, 21473, 26355, 27757, 28618, 29450, 30591, 31330, 33454, 34269, 34306, 63926, 35028, 35427, 35709, 35947, 63927, 37555, 63928, 38675, 38928, 20116, 20237, 20425, 20658, 21320, 21566, 21555, 21978, 22626, 22714, 22887, 23067, 23524, 24735, 63929, 25034, 25942, 26111, 26212, 26791, 27738, 28595, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 28879, 29100, 29522, 31613, 34568, 35492, 39986, 40711, 23627, 27779, 29508, 29577, 37434, 28331, 29797, 30239, 31337, 32277, 34314, 20800, 22725, 25793, 29934, 29973, 30320, 32705, 37013, 38605, 39252, 28198, 29926, 31401, 31402, 33253, 34521, 34680, 35355, 23113, 23436, 23451, 26785, 26880, 28003, 29609, 29715, 29740, 30871, 32233, 32747, 33048, 33109, 33694, 35916, 38446, 38929, 26352, 24448, 26106, 26505, 27754, 29579, 20525, 23043, 27498, 30702, 22806, 23916, 24013, 29477, 30031, 63930, 63931, 20709, 20985, 22575, 22829, 22934, 23002, 23525, 63932, 63933, 23970, 25303, 25622, 25747, 25854, 63934, 26332, 63935, 27208, 63936, 29183, 29796, 63937, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31368, 31407, 32327, 32350, 32768, 33136, 63938, 34799, 35201, 35616, 36953, 63939, 36992, 39250, 24958, 27442, 28020, 32287, 35109, 36785, 20433, 20653, 20887, 21191, 22471, 22665, 23481, 24248, 24898, 27029, 28044, 28263, 28342, 29076, 29794, 29992, 29996, 32883, 33592, 33993, 36362, 37780, 37854, 63940, 20110, 20305, 20598, 20778, 21448, 21451, 21491, 23431, 23507, 23588, 24858, 24962, 26100, 29275, 29591, 29760, 30402, 31056, 31121, 31161, 32006, 32701, 33419, 34261, 34398, 36802, 36935, 37109, 37354, 38533, 38632, 38633, 21206, 24423, 26093, 26161, 26671, 29020, 31286, 37057, 38922, 20113, 63941, 27218, 27550, 28560, 29065, 32792, 33464, 34131, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36939, 38549, 38642, 38907, 34074, 39729, 20112, 29066, 38596, 20803, 21407, 21729, 22291, 22290, 22435, 23195, 23236, 23491, 24616, 24895, 25588, 27781, 27961, 28274, 28304, 29232, 29503, 29783, 33489, 34945, 36677, 36960, 63942, 38498, 39e3, 40219, 26376, 36234, 37470, 20301, 20553, 20702, 21361, 22285, 22996, 23041, 23561, 24944, 26256, 28205, 29234, 29771, 32239, 32963, 33806, 33894, 34111, 34655, 34907, 35096, 35586, 36949, 38859, 39759, 20083, 20369, 20754, 20842, 63943, 21807, 21929, 23418, 23461, 24188, 24189, 24254, 24736, 24799, 24840, 24841, 25540, 25912, 26377, 63944, 26580, 26586, 63945, 26977, 26978, 27833, 27943, 63946, 28216, 63947, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 28641, 29494, 29495, 63948, 29788, 30001, 63949, 30290, 63950, 63951, 32173, 33278, 33848, 35029, 35480, 35547, 35565, 36400, 36418, 36938, 36926, 36986, 37193, 37321, 37742, 63952, 63953, 22537, 63954, 27603, 32905, 32946, 63955, 63956, 20801, 22891, 23609, 63957, 63958, 28516, 29607, 32996, 36103, 63959, 37399, 38287, 63960, 63961, 63962, 63963, 32895, 25102, 28700, 32104, 34701, 63964, 22432, 24681, 24903, 27575, 35518, 37504, 38577, 20057, 21535, 28139, 34093, 38512, 38899, 39150, 25558, 27875, 37009, 20957, 25033, 33210, 40441, 20381, 20506, 20736, 23452, 24847, 25087, 25836, 26885, 27589, 30097, 30691, 32681, 33380, 34191, 34811, 34915, 35516, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 35696, 37291, 20108, 20197, 20234, 63965, 63966, 22839, 23016, 63967, 24050, 24347, 24411, 24609, 63968, 63969, 63970, 63971, 29246, 29669, 63972, 30064, 30157, 63973, 31227, 63974, 32780, 32819, 32900, 33505, 33617, 63975, 63976, 36029, 36019, 36999, 63977, 63978, 39156, 39180, 63979, 63980, 28727, 30410, 32714, 32716, 32764, 35610, 20154, 20161, 20995, 21360, 63981, 21693, 22240, 23035, 23493, 24341, 24525, 28270, 63982, 63983, 32106, 33589, 63984, 34451, 35469, 63985, 38765, 38775, 63986, 63987, 19968, 20314, 20350, 22777, 26085, 28322, 36920, 37808, 39353, 20219, 22764, 22922, 23001, 24641, 63988, 63989, 31252, 63990, 33615, 36035, 20837, 21316, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 63991, 63992, 63993, 20173, 21097, 23381, 33471, 20180, 21050, 21672, 22985, 23039, 23376, 23383, 23388, 24675, 24904, 28363, 28825, 29038, 29574, 29943, 30133, 30913, 32043, 32773, 33258, 33576, 34071, 34249, 35566, 36039, 38604, 20316, 21242, 22204, 26027, 26152, 28796, 28856, 29237, 32189, 33421, 37196, 38592, 40306, 23409, 26855, 27544, 28538, 30430, 23697, 26283, 28507, 31668, 31786, 34870, 38620, 19976, 20183, 21280, 22580, 22715, 22767, 22892, 23559, 24115, 24196, 24373, 25484, 26290, 26454, 27167, 27299, 27404, 28479, 29254, 63994, 29520, 29835, 31456, 31911, 33144, 33247, 33255, 33674, 33900, 34083, 34196, 34255, 35037, 36115, 37292, 38263, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38556, 20877, 21705, 22312, 23472, 25165, 26448, 26685, 26771, 28221, 28371, 28797, 32289, 35009, 36001, 36617, 40779, 40782, 29229, 31631, 35533, 37658, 20295, 20302, 20786, 21632, 22992, 24213, 25269, 26485, 26990, 27159, 27822, 28186, 29401, 29482, 30141, 31672, 32053, 33511, 33785, 33879, 34295, 35419, 36015, 36487, 36889, 37048, 38606, 40799, 21219, 21514, 23265, 23490, 25688, 25973, 28404, 29380, 63995, 30340, 31309, 31515, 31821, 32318, 32735, 33659, 35627, 36042, 36196, 36321, 36447, 36842, 36857, 36969, 37841, 20291, 20346, 20659, 20840, 20856, 21069, 21098, 22625, 22652, 22880, 23560, 23637, 24283, 24731, 25136, 26643, 27583, 27656, 28593, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29006, 29728, 3e4, 30008, 30033, 30322, 31564, 31627, 31661, 31686, 32399, 35438, 36670, 36681, 37439, 37523, 37666, 37931, 38651, 39002, 39019, 39198, 20999, 25130, 25240, 27993, 30308, 31434, 31680, 32118, 21344, 23742, 24215, 28472, 28857, 31896, 38673, 39822, 40670, 25509, 25722, 34678, 19969, 20117, 20141, 20572, 20597, 21576, 22979, 23450, 24128, 24237, 24311, 24449, 24773, 25402, 25919, 25972, 26060, 26230, 26232, 26622, 26984, 27273, 27491, 27712, 28096, 28136, 28191, 28254, 28702, 28833, 29582, 29693, 30010, 30555, 30855, 31118, 31243, 31357, 31934, 32142, 33351, 35330, 35562, 35998, 37165, 37194, 37336, 37478, 37580, 37664, 38662, 38742, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38748, 38914, 40718, 21046, 21137, 21884, 22564, 24093, 24351, 24716, 25552, 26799, 28639, 31085, 31532, 33229, 34234, 35069, 35576, 36420, 37261, 38500, 38555, 38717, 38988, 40778, 20430, 20806, 20939, 21161, 22066, 24340, 24427, 25514, 25805, 26089, 26177, 26362, 26361, 26397, 26781, 26839, 27133, 28437, 28526, 29031, 29157, 29226, 29866, 30522, 31062, 31066, 31199, 31264, 31381, 31895, 31967, 32068, 32368, 32903, 34299, 34468, 35412, 35519, 36249, 36481, 36896, 36973, 37347, 38459, 38613, 40165, 26063, 31751, 36275, 37827, 23384, 23562, 21330, 25305, 29469, 20519, 23447, 24478, 24752, 24939, 26837, 28121, 29742, 31278, 32066, 32156, 32305, 33131, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36394, 36405, 37758, 37912, 20304, 22352, 24038, 24231, 25387, 32618, 20027, 20303, 20367, 20570, 23005, 32964, 21610, 21608, 22014, 22863, 23449, 24030, 24282, 26205, 26417, 26609, 26666, 27880, 27954, 28234, 28557, 28855, 29664, 30087, 31820, 32002, 32044, 32162, 33311, 34523, 35387, 35461, 36208, 36490, 36659, 36913, 37198, 37202, 37956, 39376, 31481, 31909, 20426, 20737, 20934, 22472, 23535, 23803, 26201, 27197, 27994, 28310, 28652, 28940, 30063, 31459, 34850, 36897, 36981, 38603, 39423, 33537, 20013, 20210, 34886, 37325, 21373, 27355, 26987, 27713, 33914, 22686, 24974, 26366, 25327, 28893, 29969, 30151, 32338, 33976, 35657, 36104, 20043, 21482, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21675, 22320, 22336, 24535, 25345, 25351, 25711, 25903, 26088, 26234, 26525, 26547, 27490, 27744, 27802, 28460, 30693, 30757, 31049, 31063, 32025, 32930, 33026, 33267, 33437, 33463, 34584, 35468, 63996, 36100, 36286, 36978, 30452, 31257, 31287, 32340, 32887, 21767, 21972, 22645, 25391, 25634, 26185, 26187, 26733, 27035, 27524, 27941, 28337, 29645, 29800, 29857, 30043, 30137, 30433, 30494, 30603, 31206, 32265, 32285, 33275, 34095, 34967, 35386, 36049, 36587, 36784, 36914, 37805, 38499, 38515, 38663, 20356, 21489, 23018, 23241, 24089, 26702, 29894, 30142, 31209, 31378, 33187, 34541, 36074, 36300, 36845, 26015, 26389, 63997, 22519, 28503, 32221, 36655, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 37878, 38598, 24501, 25074, 28548, 19988, 20376, 20511, 21449, 21983, 23919, 24046, 27425, 27492, 30923, 31642, 63998, 36425, 36554, 36974, 25417, 25662, 30528, 31364, 37679, 38015, 40810, 25776, 28591, 29158, 29864, 29914, 31428, 31762, 32386, 31922, 32408, 35738, 36106, 38013, 39184, 39244, 21049, 23519, 25830, 26413, 32046, 20717, 21443, 22649, 24920, 24921, 25082, 26028, 31449, 35730, 35734, 20489, 20513, 21109, 21809, 23100, 24288, 24432, 24884, 25950, 26124, 26166, 26274, 27085, 28356, 28466, 29462, 30241, 31379, 33081, 33369, 33750, 33980, 20661, 22512, 23488, 23528, 24425, 25505, 30758, 32181, 33756, 34081, 37319, 37365, 20874, 26613, 31574, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36012, 20932, 22971, 24765, 34389, 20508, 63999, 21076, 23610, 24957, 25114, 25299, 25842, 26021, 28364, 30240, 33034, 36448, 38495, 38587, 20191, 21315, 21912, 22825, 24029, 25797, 27849, 28154, 29588, 31359, 33307, 34214, 36068, 36368, 36983, 37351, 38369, 38433, 38854, 20984, 21746, 21894, 24505, 25764, 28552, 32180, 36639, 36685, 37941, 20681, 23574, 27838, 28155, 29979, 30651, 31805, 31844, 35449, 35522, 22558, 22974, 24086, 25463, 29266, 30090, 30571, 35548, 36028, 36626, 24307, 26228, 28152, 32893, 33729, 35531, 38737, 39894, 64e3, 21059, 26367, 28053, 28399, 32224, 35558, 36910, 36958, 39636, 21021, 21119, 21736, 24980, 25220, 25307, 26786, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 26898, 26970, 27189, 28818, 28966, 30813, 30977, 30990, 31186, 31245, 32918, 33400, 33493, 33609, 34121, 35970, 36229, 37218, 37259, 37294, 20419, 22225, 29165, 30679, 34560, 35320, 23544, 24534, 26449, 37032, 21474, 22618, 23541, 24740, 24961, 25696, 32317, 32880, 34085, 37507, 25774, 20652, 23828, 26368, 22684, 25277, 25512, 26894, 27e3, 27166, 28267, 30394, 31179, 33467, 33833, 35535, 36264, 36861, 37138, 37195, 37276, 37648, 37656, 37786, 38619, 39478, 39949, 19985, 30044, 31069, 31482, 31569, 31689, 32302, 33988, 36441, 36468, 36600, 36880, 26149, 26943, 29763, 20986, 26414, 40668, 20805, 24544, 27798, 34802, 34909, 34935, 24756, 33205, 33795, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 36101, 21462, 21561, 22068, 23094, 23601, 28810, 32736, 32858, 33030, 33261, 36259, 37257, 39519, 40434, 20596, 20164, 21408, 24827, 28204, 23652, 20360, 20516, 21988, 23769, 24159, 24677, 26772, 27835, 28100, 29118, 30164, 30196, 30305, 31258, 31305, 32199, 32251, 32622, 33268, 34473, 36636, 38601, 39347, 40786, 21063, 21189, 39149, 35242, 19971, 26578, 28422, 20405, 23522, 26517, 27784, 28024, 29723, 30759, 37341, 37756, 34756, 31204, 31281, 24555, 20182, 21668, 21822, 22702, 22949, 24816, 25171, 25302, 26422, 26965, 33333, 38464, 39345, 39389, 20524, 21331, 21828, 22396, 64001, 25176, 64002, 25826, 26219, 26589, 28609, 28655, 29730, 29752, 35351, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 37944, 21585, 22022, 22374, 24392, 24986, 27470, 28760, 28845, 32187, 35477, 22890, 33067, 25506, 30472, 32829, 36010, 22612, 25645, 27067, 23445, 24081, 28271, 64003, 34153, 20812, 21488, 22826, 24608, 24907, 27526, 27760, 27888, 31518, 32974, 33492, 36294, 37040, 39089, 64004, 25799, 28580, 25745, 25860, 20814, 21520, 22303, 35342, 24927, 26742, 64005, 30171, 31570, 32113, 36890, 22534, 27084, 33151, 35114, 36864, 38969, 20600, 22871, 22956, 25237, 36879, 39722, 24925, 29305, 38358, 22369, 23110, 24052, 25226, 25773, 25850, 26487, 27874, 27966, 29228, 29750, 30772, 32631, 33453, 36315, 38935, 21028, 22338, 26495, 29256, 29923, 36009, 36774, 37393, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 38442, 20843, 21485, 25420, 20329, 21764, 24726, 25943, 27803, 28031, 29260, 29437, 31255, 35207, 35997, 24429, 28558, 28921, 33192, 24846, 20415, 20559, 25153, 29255, 31687, 32232, 32745, 36941, 38829, 39449, 36022, 22378, 24179, 26544, 33805, 35413, 21536, 23318, 24163, 24290, 24330, 25987, 32954, 34109, 38281, 38491, 20296, 21253, 21261, 21263, 21638, 21754, 22275, 24067, 24598, 25243, 25265, 25429, 64006, 27873, 28006, 30129, 30770, 32990, 33071, 33502, 33889, 33970, 34957, 35090, 36875, 37610, 39165, 39825, 24133, 26292, 26333, 28689, 29190, 64007, 20469, 21117, 24426, 24915, 26451, 27161, 28418, 29922, 31080, 34920, 35961, 39111, 39108, 39491, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 21697, 31263, 26963, 35575, 35914, 39080, 39342, 24444, 25259, 30130, 30382, 34987, 36991, 38466, 21305, 24380, 24517, 27852, 29644, 30050, 30091, 31558, 33534, 39325, 20047, 36924, 19979, 20309, 21414, 22799, 24264, 26160, 27827, 29781, 33655, 34662, 36032, 36944, 38686, 39957, 22737, 23416, 34384, 35604, 40372, 23506, 24680, 24717, 26097, 27735, 28450, 28579, 28698, 32597, 32752, 38289, 38290, 38480, 38867, 21106, 36676, 20989, 21547, 21688, 21859, 21898, 27323, 28085, 32216, 33382, 37532, 38519, 40569, 21512, 21704, 30418, 34532, 38308, 38356, 38492, 20130, 20233, 23022, 23270, 24055, 24658, 25239, 26477, 26689, 27782, 28207, 32568, 32923, 33322, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 64008, 64009, 38917, 20133, 20565, 21683, 22419, 22874, 23401, 23475, 25032, 26999, 28023, 28707, 34809, 35299, 35442, 35559, 36994, 39405, 39608, 21182, 26680, 20502, 24184, 26447, 33607, 34892, 20139, 21521, 22190, 29670, 37141, 38911, 39177, 39255, 39321, 22099, 22687, 34395, 35377, 25010, 27382, 29563, 36562, 27463, 38570, 39511, 22869, 29184, 36203, 38761, 20436, 23796, 24358, 25080, 26203, 27883, 28843, 29572, 29625, 29694, 30505, 30541, 32067, 32098, 32291, 33335, 34898, 64010, 36066, 37449, 39023, 23377, 31348, 34880, 38913, 23244, 20448, 21332, 22846, 23805, 25406, 28025, 29433, 33029, 33031, 33698, 37583, 38960, 20136, 20804, 21009, 22411, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24418, 27842, 28366, 28677, 28752, 28847, 29074, 29673, 29801, 33610, 34722, 34913, 36872, 37026, 37795, 39336, 20846, 24407, 24800, 24935, 26291, 34137, 36426, 37295, 38795, 20046, 20114, 21628, 22741, 22778, 22909, 23733, 24359, 25142, 25160, 26122, 26215, 27627, 28009, 28111, 28246, 28408, 28564, 28640, 28649, 28765, 29392, 29733, 29786, 29920, 30355, 31068, 31946, 32286, 32993, 33446, 33899, 33983, 34382, 34399, 34676, 35703, 35946, 37804, 38912, 39013, 24785, 25110, 37239, 23130, 26127, 28151, 28222, 29759, 39746, 24573, 24794, 31503, 21700, 24344, 27742, 27859, 27946, 28888, 32005, 34425, 35340, 40251, 21270, 21644, 23301, 27194, 28779, 30069, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 31117, 31166, 33457, 33775, 35441, 35649, 36008, 38772, 64011, 25844, 25899, 30906, 30907, 31339, 20024, 21914, 22864, 23462, 24187, 24739, 25563, 27489, 26213, 26707, 28185, 29029, 29872, 32008, 36996, 39529, 39973, 27963, 28369, 29502, 35905, 38346, 20976, 24140, 24488, 24653, 24822, 24880, 24908, 26179, 26180, 27045, 27841, 28255, 28361, 28514, 29004, 29852, 30343, 31681, 31783, 33618, 34647, 36945, 38541, 40643, 21295, 22238, 24315, 24458, 24674, 24724, 25079, 26214, 26371, 27292, 28142, 28590, 28784, 29546, 32362, 33214, 33588, 34516, 35496, 36036, 21123, 29554, 23446, 27243, 37892, 21742, 22150, 23389, 25928, 25989, 26313, 26783, 28045, 28102, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 29243, 32948, 37237, 39501, 20399, 20505, 21402, 21518, 21564, 21897, 21957, 24127, 24460, 26429, 29030, 29661, 36869, 21211, 21235, 22628, 22734, 28932, 29071, 29179, 34224, 35347, 26248, 34216, 21927, 26244, 29002, 33841, 21321, 21913, 27585, 24409, 24509, 25582, 26249, 28999, 35569, 36637, 40638, 20241, 25658, 28875, 30054, 34407, 24676, 35662, 40440, 20807, 20982, 21256, 27958, 33016, 40657, 26133, 27427, 28824, 30165, 21507, 23673, 32007, 35350, 27424, 27453, 27462, 21560, 24688, 27965, 32725, 33288, 20694, 20958, 21916, 22123, 22221, 23020, 23305, 24076, 24985, 24984, 25137, 26206, 26342, 29081, 29113, 29114, 29351, 31143, 31232, 32690, 35440, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    "gb18030": [19970, 19972, 19973, 19974, 19983, 19986, 19991, 19999, 2e4, 20001, 20003, 20006, 20009, 20014, 20015, 20017, 20019, 20021, 20023, 20028, 20032, 20033, 20034, 20036, 20038, 20042, 20049, 20053, 20055, 20058, 20059, 20066, 20067, 20068, 20069, 20071, 20072, 20074, 20075, 20076, 20077, 20078, 20079, 20082, 20084, 20085, 20086, 20087, 20088, 20089, 20090, 20091, 20092, 20093, 20095, 20096, 20097, 20098, 20099, 20100, 20101, 20103, 20106, 20112, 20118, 20119, 20121, 20124, 20125, 20126, 20131, 20138, 20143, 20144, 20145, 20148, 20150, 20151, 20152, 20153, 20156, 20157, 20158, 20168, 20172, 20175, 20176, 20178, 20186, 20187, 20188, 20192, 20194, 20198, 20199, 20201, 20205, 20206, 20207, 20209, 20212, 20216, 20217, 20218, 20220, 20222, 20224, 20226, 20227, 20228, 20229, 20230, 20231, 20232, 20235, 20236, 20242, 20243, 20244, 20245, 20246, 20252, 20253, 20257, 20259, 20264, 20265, 20268, 20269, 20270, 20273, 20275, 20277, 20279, 20281, 20283, 20286, 20287, 20288, 20289, 20290, 20292, 20293, 20295, 20296, 20297, 20298, 20299, 20300, 20306, 20308, 20310, 20321, 20322, 20326, 20328, 20330, 20331, 20333, 20334, 20337, 20338, 20341, 20343, 20344, 20345, 20346, 20349, 20352, 20353, 20354, 20357, 20358, 20359, 20362, 20364, 20366, 20368, 20370, 20371, 20373, 20374, 20376, 20377, 20378, 20380, 20382, 20383, 20385, 20386, 20388, 20395, 20397, 20400, 20401, 20402, 20403, 20404, 20406, 20407, 20408, 20409, 20410, 20411, 20412, 20413, 20414, 20416, 20417, 20418, 20422, 20423, 20424, 20425, 20427, 20428, 20429, 20434, 20435, 20436, 20437, 20438, 20441, 20443, 20448, 20450, 20452, 20453, 20455, 20459, 20460, 20464, 20466, 20468, 20469, 20470, 20471, 20473, 20475, 20476, 20477, 20479, 20480, 20481, 20482, 20483, 20484, 20485, 20486, 20487, 20488, 20489, 20490, 20491, 20494, 20496, 20497, 20499, 20501, 20502, 20503, 20507, 20509, 20510, 20512, 20514, 20515, 20516, 20519, 20523, 20527, 20528, 20529, 20530, 20531, 20532, 20533, 20534, 20535, 20536, 20537, 20539, 20541, 20543, 20544, 20545, 20546, 20548, 20549, 20550, 20553, 20554, 20555, 20557, 20560, 20561, 20562, 20563, 20564, 20566, 20567, 20568, 20569, 20571, 20573, 20574, 20575, 20576, 20577, 20578, 20579, 20580, 20582, 20583, 20584, 20585, 20586, 20587, 20589, 20590, 20591, 20592, 20593, 20594, 20595, 20596, 20597, 20600, 20601, 20602, 20604, 20605, 20609, 20610, 20611, 20612, 20614, 20615, 20617, 20618, 20619, 20620, 20622, 20623, 20624, 20625, 20626, 20627, 20628, 20629, 20630, 20631, 20632, 20633, 20634, 20635, 20636, 20637, 20638, 20639, 20640, 20641, 20642, 20644, 20646, 20650, 20651, 20653, 20654, 20655, 20656, 20657, 20659, 20660, 20661, 20662, 20663, 20664, 20665, 20668, 20669, 20670, 20671, 20672, 20673, 20674, 20675, 20676, 20677, 20678, 20679, 20680, 20681, 20682, 20683, 20684, 20685, 20686, 20688, 20689, 20690, 20691, 20692, 20693, 20695, 20696, 20697, 20699, 20700, 20701, 20702, 20703, 20704, 20705, 20706, 20707, 20708, 20709, 20712, 20713, 20714, 20715, 20719, 20720, 20721, 20722, 20724, 20726, 20727, 20728, 20729, 20730, 20732, 20733, 20734, 20735, 20736, 20737, 20738, 20739, 20740, 20741, 20744, 20745, 20746, 20748, 20749, 20750, 20751, 20752, 20753, 20755, 20756, 20757, 20758, 20759, 20760, 20761, 20762, 20763, 20764, 20765, 20766, 20767, 20768, 20770, 20771, 20772, 20773, 20774, 20775, 20776, 20777, 20778, 20779, 20780, 20781, 20782, 20783, 20784, 20785, 20786, 20787, 20788, 20789, 20790, 20791, 20792, 20793, 20794, 20795, 20796, 20797, 20798, 20802, 20807, 20810, 20812, 20814, 20815, 20816, 20818, 20819, 20823, 20824, 20825, 20827, 20829, 20830, 20831, 20832, 20833, 20835, 20836, 20838, 20839, 20841, 20842, 20847, 20850, 20858, 20862, 20863, 20867, 20868, 20870, 20871, 20874, 20875, 20878, 20879, 20880, 20881, 20883, 20884, 20888, 20890, 20893, 20894, 20895, 20897, 20899, 20902, 20903, 20904, 20905, 20906, 20909, 20910, 20916, 20920, 20921, 20922, 20926, 20927, 20929, 20930, 20931, 20933, 20936, 20938, 20941, 20942, 20944, 20946, 20947, 20948, 20949, 20950, 20951, 20952, 20953, 20954, 20956, 20958, 20959, 20962, 20963, 20965, 20966, 20967, 20968, 20969, 20970, 20972, 20974, 20977, 20978, 20980, 20983, 20990, 20996, 20997, 21001, 21003, 21004, 21007, 21008, 21011, 21012, 21013, 21020, 21022, 21023, 21025, 21026, 21027, 21029, 21030, 21031, 21034, 21036, 21039, 21041, 21042, 21044, 21045, 21052, 21054, 21060, 21061, 21062, 21063, 21064, 21065, 21067, 21070, 21071, 21074, 21075, 21077, 21079, 21080, 21081, 21082, 21083, 21085, 21087, 21088, 21090, 21091, 21092, 21094, 21096, 21099, 21100, 21101, 21102, 21104, 21105, 21107, 21108, 21109, 21110, 21111, 21112, 21113, 21114, 21115, 21116, 21118, 21120, 21123, 21124, 21125, 21126, 21127, 21129, 21130, 21131, 21132, 21133, 21134, 21135, 21137, 21138, 21140, 21141, 21142, 21143, 21144, 21145, 21146, 21148, 21156, 21157, 21158, 21159, 21166, 21167, 21168, 21172, 21173, 21174, 21175, 21176, 21177, 21178, 21179, 21180, 21181, 21184, 21185, 21186, 21188, 21189, 21190, 21192, 21194, 21196, 21197, 21198, 21199, 21201, 21203, 21204, 21205, 21207, 21209, 21210, 21211, 21212, 21213, 21214, 21216, 21217, 21218, 21219, 21221, 21222, 21223, 21224, 21225, 21226, 21227, 21228, 21229, 21230, 21231, 21233, 21234, 21235, 21236, 21237, 21238, 21239, 21240, 21243, 21244, 21245, 21249, 21250, 21251, 21252, 21255, 21257, 21258, 21259, 21260, 21262, 21265, 21266, 21267, 21268, 21272, 21275, 21276, 21278, 21279, 21282, 21284, 21285, 21287, 21288, 21289, 21291, 21292, 21293, 21295, 21296, 21297, 21298, 21299, 21300, 21301, 21302, 21303, 21304, 21308, 21309, 21312, 21314, 21316, 21318, 21323, 21324, 21325, 21328, 21332, 21336, 21337, 21339, 21341, 21349, 21352, 21354, 21356, 21357, 21362, 21366, 21369, 21371, 21372, 21373, 21374, 21376, 21377, 21379, 21383, 21384, 21386, 21390, 21391, 21392, 21393, 21394, 21395, 21396, 21398, 21399, 21401, 21403, 21404, 21406, 21408, 21409, 21412, 21415, 21418, 21419, 21420, 21421, 21423, 21424, 21425, 21426, 21427, 21428, 21429, 21431, 21432, 21433, 21434, 21436, 21437, 21438, 21440, 21443, 21444, 21445, 21446, 21447, 21454, 21455, 21456, 21458, 21459, 21461, 21466, 21468, 21469, 21470, 21473, 21474, 21479, 21492, 21498, 21502, 21503, 21504, 21506, 21509, 21511, 21515, 21524, 21528, 21529, 21530, 21532, 21538, 21540, 21541, 21546, 21552, 21555, 21558, 21559, 21562, 21565, 21567, 21569, 21570, 21572, 21573, 21575, 21577, 21580, 21581, 21582, 21583, 21585, 21594, 21597, 21598, 21599, 21600, 21601, 21603, 21605, 21607, 21609, 21610, 21611, 21612, 21613, 21614, 21615, 21616, 21620, 21625, 21626, 21630, 21631, 21633, 21635, 21637, 21639, 21640, 21641, 21642, 21645, 21649, 21651, 21655, 21656, 21660, 21662, 21663, 21664, 21665, 21666, 21669, 21678, 21680, 21682, 21685, 21686, 21687, 21689, 21690, 21692, 21694, 21699, 21701, 21706, 21707, 21718, 21720, 21723, 21728, 21729, 21730, 21731, 21732, 21739, 21740, 21743, 21744, 21745, 21748, 21749, 21750, 21751, 21752, 21753, 21755, 21758, 21760, 21762, 21763, 21764, 21765, 21768, 21770, 21771, 21772, 21773, 21774, 21778, 21779, 21781, 21782, 21783, 21784, 21785, 21786, 21788, 21789, 21790, 21791, 21793, 21797, 21798, 21800, 21801, 21803, 21805, 21810, 21812, 21813, 21814, 21816, 21817, 21818, 21819, 21821, 21824, 21826, 21829, 21831, 21832, 21835, 21836, 21837, 21838, 21839, 21841, 21842, 21843, 21844, 21847, 21848, 21849, 21850, 21851, 21853, 21854, 21855, 21856, 21858, 21859, 21864, 21865, 21867, 21871, 21872, 21873, 21874, 21875, 21876, 21881, 21882, 21885, 21887, 21893, 21894, 21900, 21901, 21902, 21904, 21906, 21907, 21909, 21910, 21911, 21914, 21915, 21918, 21920, 21921, 21922, 21923, 21924, 21925, 21926, 21928, 21929, 21930, 21931, 21932, 21933, 21934, 21935, 21936, 21938, 21940, 21942, 21944, 21946, 21948, 21951, 21952, 21953, 21954, 21955, 21958, 21959, 21960, 21962, 21963, 21966, 21967, 21968, 21973, 21975, 21976, 21977, 21978, 21979, 21982, 21984, 21986, 21991, 21993, 21997, 21998, 22e3, 22001, 22004, 22006, 22008, 22009, 22010, 22011, 22012, 22015, 22018, 22019, 22020, 22021, 22022, 22023, 22026, 22027, 22029, 22032, 22033, 22034, 22035, 22036, 22037, 22038, 22039, 22041, 22042, 22044, 22045, 22048, 22049, 22050, 22053, 22054, 22056, 22057, 22058, 22059, 22062, 22063, 22064, 22067, 22069, 22071, 22072, 22074, 22076, 22077, 22078, 22080, 22081, 22082, 22083, 22084, 22085, 22086, 22087, 22088, 22089, 22090, 22091, 22095, 22096, 22097, 22098, 22099, 22101, 22102, 22106, 22107, 22109, 22110, 22111, 22112, 22113, 22115, 22117, 22118, 22119, 22125, 22126, 22127, 22128, 22130, 22131, 22132, 22133, 22135, 22136, 22137, 22138, 22141, 22142, 22143, 22144, 22145, 22146, 22147, 22148, 22151, 22152, 22153, 22154, 22155, 22156, 22157, 22160, 22161, 22162, 22164, 22165, 22166, 22167, 22168, 22169, 22170, 22171, 22172, 22173, 22174, 22175, 22176, 22177, 22178, 22180, 22181, 22182, 22183, 22184, 22185, 22186, 22187, 22188, 22189, 22190, 22192, 22193, 22194, 22195, 22196, 22197, 22198, 22200, 22201, 22202, 22203, 22205, 22206, 22207, 22208, 22209, 22210, 22211, 22212, 22213, 22214, 22215, 22216, 22217, 22219, 22220, 22221, 22222, 22223, 22224, 22225, 22226, 22227, 22229, 22230, 22232, 22233, 22236, 22243, 22245, 22246, 22247, 22248, 22249, 22250, 22252, 22254, 22255, 22258, 22259, 22262, 22263, 22264, 22267, 22268, 22272, 22273, 22274, 22277, 22279, 22283, 22284, 22285, 22286, 22287, 22288, 22289, 22290, 22291, 22292, 22293, 22294, 22295, 22296, 22297, 22298, 22299, 22301, 22302, 22304, 22305, 22306, 22308, 22309, 22310, 22311, 22315, 22321, 22322, 22324, 22325, 22326, 22327, 22328, 22332, 22333, 22335, 22337, 22339, 22340, 22341, 22342, 22344, 22345, 22347, 22354, 22355, 22356, 22357, 22358, 22360, 22361, 22370, 22371, 22373, 22375, 22380, 22382, 22384, 22385, 22386, 22388, 22389, 22392, 22393, 22394, 22397, 22398, 22399, 22400, 22401, 22407, 22408, 22409, 22410, 22413, 22414, 22415, 22416, 22417, 22420, 22421, 22422, 22423, 22424, 22425, 22426, 22428, 22429, 22430, 22431, 22437, 22440, 22442, 22444, 22447, 22448, 22449, 22451, 22453, 22454, 22455, 22457, 22458, 22459, 22460, 22461, 22462, 22463, 22464, 22465, 22468, 22469, 22470, 22471, 22472, 22473, 22474, 22476, 22477, 22480, 22481, 22483, 22486, 22487, 22491, 22492, 22494, 22497, 22498, 22499, 22501, 22502, 22503, 22504, 22505, 22506, 22507, 22508, 22510, 22512, 22513, 22514, 22515, 22517, 22518, 22519, 22523, 22524, 22526, 22527, 22529, 22531, 22532, 22533, 22536, 22537, 22538, 22540, 22542, 22543, 22544, 22546, 22547, 22548, 22550, 22551, 22552, 22554, 22555, 22556, 22557, 22559, 22562, 22563, 22565, 22566, 22567, 22568, 22569, 22571, 22572, 22573, 22574, 22575, 22577, 22578, 22579, 22580, 22582, 22583, 22584, 22585, 22586, 22587, 22588, 22589, 22590, 22591, 22592, 22593, 22594, 22595, 22597, 22598, 22599, 22600, 22601, 22602, 22603, 22606, 22607, 22608, 22610, 22611, 22613, 22614, 22615, 22617, 22618, 22619, 22620, 22621, 22623, 22624, 22625, 22626, 22627, 22628, 22630, 22631, 22632, 22633, 22634, 22637, 22638, 22639, 22640, 22641, 22642, 22643, 22644, 22645, 22646, 22647, 22648, 22649, 22650, 22651, 22652, 22653, 22655, 22658, 22660, 22662, 22663, 22664, 22666, 22667, 22668, 22669, 22670, 22671, 22672, 22673, 22676, 22677, 22678, 22679, 22680, 22683, 22684, 22685, 22688, 22689, 22690, 22691, 22692, 22693, 22694, 22695, 22698, 22699, 22700, 22701, 22702, 22703, 22704, 22705, 22706, 22707, 22708, 22709, 22710, 22711, 22712, 22713, 22714, 22715, 22717, 22718, 22719, 22720, 22722, 22723, 22724, 22726, 22727, 22728, 22729, 22730, 22731, 22732, 22733, 22734, 22735, 22736, 22738, 22739, 22740, 22742, 22743, 22744, 22745, 22746, 22747, 22748, 22749, 22750, 22751, 22752, 22753, 22754, 22755, 22757, 22758, 22759, 22760, 22761, 22762, 22765, 22767, 22769, 22770, 22772, 22773, 22775, 22776, 22778, 22779, 22780, 22781, 22782, 22783, 22784, 22785, 22787, 22789, 22790, 22792, 22793, 22794, 22795, 22796, 22798, 22800, 22801, 22802, 22803, 22807, 22808, 22811, 22813, 22814, 22816, 22817, 22818, 22819, 22822, 22824, 22828, 22832, 22834, 22835, 22837, 22838, 22843, 22845, 22846, 22847, 22848, 22851, 22853, 22854, 22858, 22860, 22861, 22864, 22866, 22867, 22873, 22875, 22876, 22877, 22878, 22879, 22881, 22883, 22884, 22886, 22887, 22888, 22889, 22890, 22891, 22892, 22893, 22894, 22895, 22896, 22897, 22898, 22901, 22903, 22906, 22907, 22908, 22910, 22911, 22912, 22917, 22921, 22923, 22924, 22926, 22927, 22928, 22929, 22932, 22933, 22936, 22938, 22939, 22940, 22941, 22943, 22944, 22945, 22946, 22950, 22951, 22956, 22957, 22960, 22961, 22963, 22964, 22965, 22966, 22967, 22968, 22970, 22972, 22973, 22975, 22976, 22977, 22978, 22979, 22980, 22981, 22983, 22984, 22985, 22988, 22989, 22990, 22991, 22997, 22998, 23001, 23003, 23006, 23007, 23008, 23009, 23010, 23012, 23014, 23015, 23017, 23018, 23019, 23021, 23022, 23023, 23024, 23025, 23026, 23027, 23028, 23029, 23030, 23031, 23032, 23034, 23036, 23037, 23038, 23040, 23042, 23050, 23051, 23053, 23054, 23055, 23056, 23058, 23060, 23061, 23062, 23063, 23065, 23066, 23067, 23069, 23070, 23073, 23074, 23076, 23078, 23079, 23080, 23082, 23083, 23084, 23085, 23086, 23087, 23088, 23091, 23093, 23095, 23096, 23097, 23098, 23099, 23101, 23102, 23103, 23105, 23106, 23107, 23108, 23109, 23111, 23112, 23115, 23116, 23117, 23118, 23119, 23120, 23121, 23122, 23123, 23124, 23126, 23127, 23128, 23129, 23131, 23132, 23133, 23134, 23135, 23136, 23137, 23139, 23140, 23141, 23142, 23144, 23145, 23147, 23148, 23149, 23150, 23151, 23152, 23153, 23154, 23155, 23160, 23161, 23163, 23164, 23165, 23166, 23168, 23169, 23170, 23171, 23172, 23173, 23174, 23175, 23176, 23177, 23178, 23179, 23180, 23181, 23182, 23183, 23184, 23185, 23187, 23188, 23189, 23190, 23191, 23192, 23193, 23196, 23197, 23198, 23199, 23200, 23201, 23202, 23203, 23204, 23205, 23206, 23207, 23208, 23209, 23211, 23212, 23213, 23214, 23215, 23216, 23217, 23220, 23222, 23223, 23225, 23226, 23227, 23228, 23229, 23231, 23232, 23235, 23236, 23237, 23238, 23239, 23240, 23242, 23243, 23245, 23246, 23247, 23248, 23249, 23251, 23253, 23255, 23257, 23258, 23259, 23261, 23262, 23263, 23266, 23268, 23269, 23271, 23272, 23274, 23276, 23277, 23278, 23279, 23280, 23282, 23283, 23284, 23285, 23286, 23287, 23288, 23289, 23290, 23291, 23292, 23293, 23294, 23295, 23296, 23297, 23298, 23299, 23300, 23301, 23302, 23303, 23304, 23306, 23307, 23308, 23309, 23310, 23311, 23312, 23313, 23314, 23315, 23316, 23317, 23320, 23321, 23322, 23323, 23324, 23325, 23326, 23327, 23328, 23329, 23330, 23331, 23332, 23333, 23334, 23335, 23336, 23337, 23338, 23339, 23340, 23341, 23342, 23343, 23344, 23345, 23347, 23349, 23350, 23352, 23353, 23354, 23355, 23356, 23357, 23358, 23359, 23361, 23362, 23363, 23364, 23365, 23366, 23367, 23368, 23369, 23370, 23371, 23372, 23373, 23374, 23375, 23378, 23382, 23390, 23392, 23393, 23399, 23400, 23403, 23405, 23406, 23407, 23410, 23412, 23414, 23415, 23416, 23417, 23419, 23420, 23422, 23423, 23426, 23430, 23434, 23437, 23438, 23440, 23441, 23442, 23444, 23446, 23455, 23463, 23464, 23465, 23468, 23469, 23470, 23471, 23473, 23474, 23479, 23482, 23483, 23484, 23488, 23489, 23491, 23496, 23497, 23498, 23499, 23501, 23502, 23503, 23505, 23508, 23509, 23510, 23511, 23512, 23513, 23514, 23515, 23516, 23520, 23522, 23523, 23526, 23527, 23529, 23530, 23531, 23532, 23533, 23535, 23537, 23538, 23539, 23540, 23541, 23542, 23543, 23549, 23550, 23552, 23554, 23555, 23557, 23559, 23560, 23563, 23564, 23565, 23566, 23568, 23570, 23571, 23575, 23577, 23579, 23582, 23583, 23584, 23585, 23587, 23590, 23592, 23593, 23594, 23595, 23597, 23598, 23599, 23600, 23602, 23603, 23605, 23606, 23607, 23619, 23620, 23622, 23623, 23628, 23629, 23634, 23635, 23636, 23638, 23639, 23640, 23642, 23643, 23644, 23645, 23647, 23650, 23652, 23655, 23656, 23657, 23658, 23659, 23660, 23661, 23664, 23666, 23667, 23668, 23669, 23670, 23671, 23672, 23675, 23676, 23677, 23678, 23680, 23683, 23684, 23685, 23686, 23687, 23689, 23690, 23691, 23694, 23695, 23698, 23699, 23701, 23709, 23710, 23711, 23712, 23713, 23716, 23717, 23718, 23719, 23720, 23722, 23726, 23727, 23728, 23730, 23732, 23734, 23737, 23738, 23739, 23740, 23742, 23744, 23746, 23747, 23749, 23750, 23751, 23752, 23753, 23754, 23756, 23757, 23758, 23759, 23760, 23761, 23763, 23764, 23765, 23766, 23767, 23768, 23770, 23771, 23772, 23773, 23774, 23775, 23776, 23778, 23779, 23783, 23785, 23787, 23788, 23790, 23791, 23793, 23794, 23795, 23796, 23797, 23798, 23799, 23800, 23801, 23802, 23804, 23805, 23806, 23807, 23808, 23809, 23812, 23813, 23816, 23817, 23818, 23819, 23820, 23821, 23823, 23824, 23825, 23826, 23827, 23829, 23831, 23832, 23833, 23834, 23836, 23837, 23839, 23840, 23841, 23842, 23843, 23845, 23848, 23850, 23851, 23852, 23855, 23856, 23857, 23858, 23859, 23861, 23862, 23863, 23864, 23865, 23866, 23867, 23868, 23871, 23872, 23873, 23874, 23875, 23876, 23877, 23878, 23880, 23881, 23885, 23886, 23887, 23888, 23889, 23890, 23891, 23892, 23893, 23894, 23895, 23897, 23898, 23900, 23902, 23903, 23904, 23905, 23906, 23907, 23908, 23909, 23910, 23911, 23912, 23914, 23917, 23918, 23920, 23921, 23922, 23923, 23925, 23926, 23927, 23928, 23929, 23930, 23931, 23932, 23933, 23934, 23935, 23936, 23937, 23939, 23940, 23941, 23942, 23943, 23944, 23945, 23946, 23947, 23948, 23949, 23950, 23951, 23952, 23953, 23954, 23955, 23956, 23957, 23958, 23959, 23960, 23962, 23963, 23964, 23966, 23967, 23968, 23969, 23970, 23971, 23972, 23973, 23974, 23975, 23976, 23977, 23978, 23979, 23980, 23981, 23982, 23983, 23984, 23985, 23986, 23987, 23988, 23989, 23990, 23992, 23993, 23994, 23995, 23996, 23997, 23998, 23999, 24e3, 24001, 24002, 24003, 24004, 24006, 24007, 24008, 24009, 24010, 24011, 24012, 24014, 24015, 24016, 24017, 24018, 24019, 24020, 24021, 24022, 24023, 24024, 24025, 24026, 24028, 24031, 24032, 24035, 24036, 24042, 24044, 24045, 24048, 24053, 24054, 24056, 24057, 24058, 24059, 24060, 24063, 24064, 24068, 24071, 24073, 24074, 24075, 24077, 24078, 24082, 24083, 24087, 24094, 24095, 24096, 24097, 24098, 24099, 24100, 24101, 24104, 24105, 24106, 24107, 24108, 24111, 24112, 24114, 24115, 24116, 24117, 24118, 24121, 24122, 24126, 24127, 24128, 24129, 24131, 24134, 24135, 24136, 24137, 24138, 24139, 24141, 24142, 24143, 24144, 24145, 24146, 24147, 24150, 24151, 24152, 24153, 24154, 24156, 24157, 24159, 24160, 24163, 24164, 24165, 24166, 24167, 24168, 24169, 24170, 24171, 24172, 24173, 24174, 24175, 24176, 24177, 24181, 24183, 24185, 24190, 24193, 24194, 24195, 24197, 24200, 24201, 24204, 24205, 24206, 24210, 24216, 24219, 24221, 24225, 24226, 24227, 24228, 24232, 24233, 24234, 24235, 24236, 24238, 24239, 24240, 24241, 24242, 24244, 24250, 24251, 24252, 24253, 24255, 24256, 24257, 24258, 24259, 24260, 24261, 24262, 24263, 24264, 24267, 24268, 24269, 24270, 24271, 24272, 24276, 24277, 24279, 24280, 24281, 24282, 24284, 24285, 24286, 24287, 24288, 24289, 24290, 24291, 24292, 24293, 24294, 24295, 24297, 24299, 24300, 24301, 24302, 24303, 24304, 24305, 24306, 24307, 24309, 24312, 24313, 24315, 24316, 24317, 24325, 24326, 24327, 24329, 24332, 24333, 24334, 24336, 24338, 24340, 24342, 24345, 24346, 24348, 24349, 24350, 24353, 24354, 24355, 24356, 24360, 24363, 24364, 24366, 24368, 24370, 24371, 24372, 24373, 24374, 24375, 24376, 24379, 24381, 24382, 24383, 24385, 24386, 24387, 24388, 24389, 24390, 24391, 24392, 24393, 24394, 24395, 24396, 24397, 24398, 24399, 24401, 24404, 24409, 24410, 24411, 24412, 24414, 24415, 24416, 24419, 24421, 24423, 24424, 24427, 24430, 24431, 24434, 24436, 24437, 24438, 24440, 24442, 24445, 24446, 24447, 24451, 24454, 24461, 24462, 24463, 24465, 24467, 24468, 24470, 24474, 24475, 24477, 24478, 24479, 24480, 24482, 24483, 24484, 24485, 24486, 24487, 24489, 24491, 24492, 24495, 24496, 24497, 24498, 24499, 24500, 24502, 24504, 24505, 24506, 24507, 24510, 24511, 24512, 24513, 24514, 24519, 24520, 24522, 24523, 24526, 24531, 24532, 24533, 24538, 24539, 24540, 24542, 24543, 24546, 24547, 24549, 24550, 24552, 24553, 24556, 24559, 24560, 24562, 24563, 24564, 24566, 24567, 24569, 24570, 24572, 24583, 24584, 24585, 24587, 24588, 24592, 24593, 24595, 24599, 24600, 24602, 24606, 24607, 24610, 24611, 24612, 24620, 24621, 24622, 24624, 24625, 24626, 24627, 24628, 24630, 24631, 24632, 24633, 24634, 24637, 24638, 24640, 24644, 24645, 24646, 24647, 24648, 24649, 24650, 24652, 24654, 24655, 24657, 24659, 24660, 24662, 24663, 24664, 24667, 24668, 24670, 24671, 24672, 24673, 24677, 24678, 24686, 24689, 24690, 24692, 24693, 24695, 24702, 24704, 24705, 24706, 24709, 24710, 24711, 24712, 24714, 24715, 24718, 24719, 24720, 24721, 24723, 24725, 24727, 24728, 24729, 24732, 24734, 24737, 24738, 24740, 24741, 24743, 24745, 24746, 24750, 24752, 24755, 24757, 24758, 24759, 24761, 24762, 24765, 24766, 24767, 24768, 24769, 24770, 24771, 24772, 24775, 24776, 24777, 24780, 24781, 24782, 24783, 24784, 24786, 24787, 24788, 24790, 24791, 24793, 24795, 24798, 24801, 24802, 24803, 24804, 24805, 24810, 24817, 24818, 24821, 24823, 24824, 24827, 24828, 24829, 24830, 24831, 24834, 24835, 24836, 24837, 24839, 24842, 24843, 24844, 24848, 24849, 24850, 24851, 24852, 24854, 24855, 24856, 24857, 24859, 24860, 24861, 24862, 24865, 24866, 24869, 24872, 24873, 24874, 24876, 24877, 24878, 24879, 24880, 24881, 24882, 24883, 24884, 24885, 24886, 24887, 24888, 24889, 24890, 24891, 24892, 24893, 24894, 24896, 24897, 24898, 24899, 24900, 24901, 24902, 24903, 24905, 24907, 24909, 24911, 24912, 24914, 24915, 24916, 24918, 24919, 24920, 24921, 24922, 24923, 24924, 24926, 24927, 24928, 24929, 24931, 24932, 24933, 24934, 24937, 24938, 24939, 24940, 24941, 24942, 24943, 24945, 24946, 24947, 24948, 24950, 24952, 24953, 24954, 24955, 24956, 24957, 24958, 24959, 24960, 24961, 24962, 24963, 24964, 24965, 24966, 24967, 24968, 24969, 24970, 24972, 24973, 24975, 24976, 24977, 24978, 24979, 24981, 24982, 24983, 24984, 24985, 24986, 24987, 24988, 24990, 24991, 24992, 24993, 24994, 24995, 24996, 24997, 24998, 25002, 25003, 25005, 25006, 25007, 25008, 25009, 25010, 25011, 25012, 25013, 25014, 25016, 25017, 25018, 25019, 25020, 25021, 25023, 25024, 25025, 25027, 25028, 25029, 25030, 25031, 25033, 25036, 25037, 25038, 25039, 25040, 25043, 25045, 25046, 25047, 25048, 25049, 25050, 25051, 25052, 25053, 25054, 25055, 25056, 25057, 25058, 25059, 25060, 25061, 25063, 25064, 25065, 25066, 25067, 25068, 25069, 25070, 25071, 25072, 25073, 25074, 25075, 25076, 25078, 25079, 25080, 25081, 25082, 25083, 25084, 25085, 25086, 25088, 25089, 25090, 25091, 25092, 25093, 25095, 25097, 25107, 25108, 25113, 25116, 25117, 25118, 25120, 25123, 25126, 25127, 25128, 25129, 25131, 25133, 25135, 25136, 25137, 25138, 25141, 25142, 25144, 25145, 25146, 25147, 25148, 25154, 25156, 25157, 25158, 25162, 25167, 25168, 25173, 25174, 25175, 25177, 25178, 25180, 25181, 25182, 25183, 25184, 25185, 25186, 25188, 25189, 25192, 25201, 25202, 25204, 25205, 25207, 25208, 25210, 25211, 25213, 25217, 25218, 25219, 25221, 25222, 25223, 25224, 25227, 25228, 25229, 25230, 25231, 25232, 25236, 25241, 25244, 25245, 25246, 25251, 25254, 25255, 25257, 25258, 25261, 25262, 25263, 25264, 25266, 25267, 25268, 25270, 25271, 25272, 25274, 25278, 25280, 25281, 25283, 25291, 25295, 25297, 25301, 25309, 25310, 25312, 25313, 25316, 25322, 25323, 25328, 25330, 25333, 25336, 25337, 25338, 25339, 25344, 25347, 25348, 25349, 25350, 25354, 25355, 25356, 25357, 25359, 25360, 25362, 25363, 25364, 25365, 25367, 25368, 25369, 25372, 25382, 25383, 25385, 25388, 25389, 25390, 25392, 25393, 25395, 25396, 25397, 25398, 25399, 25400, 25403, 25404, 25406, 25407, 25408, 25409, 25412, 25415, 25416, 25418, 25425, 25426, 25427, 25428, 25430, 25431, 25432, 25433, 25434, 25435, 25436, 25437, 25440, 25444, 25445, 25446, 25448, 25450, 25451, 25452, 25455, 25456, 25458, 25459, 25460, 25461, 25464, 25465, 25468, 25469, 25470, 25471, 25473, 25475, 25476, 25477, 25478, 25483, 25485, 25489, 25491, 25492, 25493, 25495, 25497, 25498, 25499, 25500, 25501, 25502, 25503, 25505, 25508, 25510, 25515, 25519, 25521, 25522, 25525, 25526, 25529, 25531, 25533, 25535, 25536, 25537, 25538, 25539, 25541, 25543, 25544, 25546, 25547, 25548, 25553, 25555, 25556, 25557, 25559, 25560, 25561, 25562, 25563, 25564, 25565, 25567, 25570, 25572, 25573, 25574, 25575, 25576, 25579, 25580, 25582, 25583, 25584, 25585, 25587, 25589, 25591, 25593, 25594, 25595, 25596, 25598, 25603, 25604, 25606, 25607, 25608, 25609, 25610, 25613, 25614, 25617, 25618, 25621, 25622, 25623, 25624, 25625, 25626, 25629, 25631, 25634, 25635, 25636, 25637, 25639, 25640, 25641, 25643, 25646, 25647, 25648, 25649, 25650, 25651, 25653, 25654, 25655, 25656, 25657, 25659, 25660, 25662, 25664, 25666, 25667, 25673, 25675, 25676, 25677, 25678, 25679, 25680, 25681, 25683, 25685, 25686, 25687, 25689, 25690, 25691, 25692, 25693, 25695, 25696, 25697, 25698, 25699, 25700, 25701, 25702, 25704, 25706, 25707, 25708, 25710, 25711, 25712, 25713, 25714, 25715, 25716, 25717, 25718, 25719, 25723, 25724, 25725, 25726, 25727, 25728, 25729, 25731, 25734, 25736, 25737, 25738, 25739, 25740, 25741, 25742, 25743, 25744, 25747, 25748, 25751, 25752, 25754, 25755, 25756, 25757, 25759, 25760, 25761, 25762, 25763, 25765, 25766, 25767, 25768, 25770, 25771, 25775, 25777, 25778, 25779, 25780, 25782, 25785, 25787, 25789, 25790, 25791, 25793, 25795, 25796, 25798, 25799, 25800, 25801, 25802, 25803, 25804, 25807, 25809, 25811, 25812, 25813, 25814, 25817, 25818, 25819, 25820, 25821, 25823, 25824, 25825, 25827, 25829, 25831, 25832, 25833, 25834, 25835, 25836, 25837, 25838, 25839, 25840, 25841, 25842, 25843, 25844, 25845, 25846, 25847, 25848, 25849, 25850, 25851, 25852, 25853, 25854, 25855, 25857, 25858, 25859, 25860, 25861, 25862, 25863, 25864, 25866, 25867, 25868, 25869, 25870, 25871, 25872, 25873, 25875, 25876, 25877, 25878, 25879, 25881, 25882, 25883, 25884, 25885, 25886, 25887, 25888, 25889, 25890, 25891, 25892, 25894, 25895, 25896, 25897, 25898, 25900, 25901, 25904, 25905, 25906, 25907, 25911, 25914, 25916, 25917, 25920, 25921, 25922, 25923, 25924, 25926, 25927, 25930, 25931, 25933, 25934, 25936, 25938, 25939, 25940, 25943, 25944, 25946, 25948, 25951, 25952, 25953, 25956, 25957, 25959, 25960, 25961, 25962, 25965, 25966, 25967, 25969, 25971, 25973, 25974, 25976, 25977, 25978, 25979, 25980, 25981, 25982, 25983, 25984, 25985, 25986, 25987, 25988, 25989, 25990, 25992, 25993, 25994, 25997, 25998, 25999, 26002, 26004, 26005, 26006, 26008, 26010, 26013, 26014, 26016, 26018, 26019, 26022, 26024, 26026, 26028, 26030, 26033, 26034, 26035, 26036, 26037, 26038, 26039, 26040, 26042, 26043, 26046, 26047, 26048, 26050, 26055, 26056, 26057, 26058, 26061, 26064, 26065, 26067, 26068, 26069, 26072, 26073, 26074, 26075, 26076, 26077, 26078, 26079, 26081, 26083, 26084, 26090, 26091, 26098, 26099, 26100, 26101, 26104, 26105, 26107, 26108, 26109, 26110, 26111, 26113, 26116, 26117, 26119, 26120, 26121, 26123, 26125, 26128, 26129, 26130, 26134, 26135, 26136, 26138, 26139, 26140, 26142, 26145, 26146, 26147, 26148, 26150, 26153, 26154, 26155, 26156, 26158, 26160, 26162, 26163, 26167, 26168, 26169, 26170, 26171, 26173, 26175, 26176, 26178, 26180, 26181, 26182, 26183, 26184, 26185, 26186, 26189, 26190, 26192, 26193, 26200, 26201, 26203, 26204, 26205, 26206, 26208, 26210, 26211, 26213, 26215, 26217, 26218, 26219, 26220, 26221, 26225, 26226, 26227, 26229, 26232, 26233, 26235, 26236, 26237, 26239, 26240, 26241, 26243, 26245, 26246, 26248, 26249, 26250, 26251, 26253, 26254, 26255, 26256, 26258, 26259, 26260, 26261, 26264, 26265, 26266, 26267, 26268, 26270, 26271, 26272, 26273, 26274, 26275, 26276, 26277, 26278, 26281, 26282, 26283, 26284, 26285, 26287, 26288, 26289, 26290, 26291, 26293, 26294, 26295, 26296, 26298, 26299, 26300, 26301, 26303, 26304, 26305, 26306, 26307, 26308, 26309, 26310, 26311, 26312, 26313, 26314, 26315, 26316, 26317, 26318, 26319, 26320, 26321, 26322, 26323, 26324, 26325, 26326, 26327, 26328, 26330, 26334, 26335, 26336, 26337, 26338, 26339, 26340, 26341, 26343, 26344, 26346, 26347, 26348, 26349, 26350, 26351, 26353, 26357, 26358, 26360, 26362, 26363, 26365, 26369, 26370, 26371, 26372, 26373, 26374, 26375, 26380, 26382, 26383, 26385, 26386, 26387, 26390, 26392, 26393, 26394, 26396, 26398, 26400, 26401, 26402, 26403, 26404, 26405, 26407, 26409, 26414, 26416, 26418, 26419, 26422, 26423, 26424, 26425, 26427, 26428, 26430, 26431, 26433, 26436, 26437, 26439, 26442, 26443, 26445, 26450, 26452, 26453, 26455, 26456, 26457, 26458, 26459, 26461, 26466, 26467, 26468, 26470, 26471, 26475, 26476, 26478, 26481, 26484, 26486, 26488, 26489, 26490, 26491, 26493, 26496, 26498, 26499, 26501, 26502, 26504, 26506, 26508, 26509, 26510, 26511, 26513, 26514, 26515, 26516, 26518, 26521, 26523, 26527, 26528, 26529, 26532, 26534, 26537, 26540, 26542, 26545, 26546, 26548, 26553, 26554, 26555, 26556, 26557, 26558, 26559, 26560, 26562, 26565, 26566, 26567, 26568, 26569, 26570, 26571, 26572, 26573, 26574, 26581, 26582, 26583, 26587, 26591, 26593, 26595, 26596, 26598, 26599, 26600, 26602, 26603, 26605, 26606, 26610, 26613, 26614, 26615, 26616, 26617, 26618, 26619, 26620, 26622, 26625, 26626, 26627, 26628, 26630, 26637, 26640, 26642, 26644, 26645, 26648, 26649, 26650, 26651, 26652, 26654, 26655, 26656, 26658, 26659, 26660, 26661, 26662, 26663, 26664, 26667, 26668, 26669, 26670, 26671, 26672, 26673, 26676, 26677, 26678, 26682, 26683, 26687, 26695, 26699, 26701, 26703, 26706, 26710, 26711, 26712, 26713, 26714, 26715, 26716, 26717, 26718, 26719, 26730, 26732, 26733, 26734, 26735, 26736, 26737, 26738, 26739, 26741, 26744, 26745, 26746, 26747, 26748, 26749, 26750, 26751, 26752, 26754, 26756, 26759, 26760, 26761, 26762, 26763, 26764, 26765, 26766, 26768, 26769, 26770, 26772, 26773, 26774, 26776, 26777, 26778, 26779, 26780, 26781, 26782, 26783, 26784, 26785, 26787, 26788, 26789, 26793, 26794, 26795, 26796, 26798, 26801, 26802, 26804, 26806, 26807, 26808, 26809, 26810, 26811, 26812, 26813, 26814, 26815, 26817, 26819, 26820, 26821, 26822, 26823, 26824, 26826, 26828, 26830, 26831, 26832, 26833, 26835, 26836, 26838, 26839, 26841, 26843, 26844, 26845, 26846, 26847, 26849, 26850, 26852, 26853, 26854, 26855, 26856, 26857, 26858, 26859, 26860, 26861, 26863, 26866, 26867, 26868, 26870, 26871, 26872, 26875, 26877, 26878, 26879, 26880, 26882, 26883, 26884, 26886, 26887, 26888, 26889, 26890, 26892, 26895, 26897, 26899, 26900, 26901, 26902, 26903, 26904, 26905, 26906, 26907, 26908, 26909, 26910, 26913, 26914, 26915, 26917, 26918, 26919, 26920, 26921, 26922, 26923, 26924, 26926, 26927, 26929, 26930, 26931, 26933, 26934, 26935, 26936, 26938, 26939, 26940, 26942, 26944, 26945, 26947, 26948, 26949, 26950, 26951, 26952, 26953, 26954, 26955, 26956, 26957, 26958, 26959, 26960, 26961, 26962, 26963, 26965, 26966, 26968, 26969, 26971, 26972, 26975, 26977, 26978, 26980, 26981, 26983, 26984, 26985, 26986, 26988, 26989, 26991, 26992, 26994, 26995, 26996, 26997, 26998, 27002, 27003, 27005, 27006, 27007, 27009, 27011, 27013, 27018, 27019, 27020, 27022, 27023, 27024, 27025, 27026, 27027, 27030, 27031, 27033, 27034, 27037, 27038, 27039, 27040, 27041, 27042, 27043, 27044, 27045, 27046, 27049, 27050, 27052, 27054, 27055, 27056, 27058, 27059, 27061, 27062, 27064, 27065, 27066, 27068, 27069, 27070, 27071, 27072, 27074, 27075, 27076, 27077, 27078, 27079, 27080, 27081, 27083, 27085, 27087, 27089, 27090, 27091, 27093, 27094, 27095, 27096, 27097, 27098, 27100, 27101, 27102, 27105, 27106, 27107, 27108, 27109, 27110, 27111, 27112, 27113, 27114, 27115, 27116, 27118, 27119, 27120, 27121, 27123, 27124, 27125, 27126, 27127, 27128, 27129, 27130, 27131, 27132, 27134, 27136, 27137, 27138, 27139, 27140, 27141, 27142, 27143, 27144, 27145, 27147, 27148, 27149, 27150, 27151, 27152, 27153, 27154, 27155, 27156, 27157, 27158, 27161, 27162, 27163, 27164, 27165, 27166, 27168, 27170, 27171, 27172, 27173, 27174, 27175, 27177, 27179, 27180, 27181, 27182, 27184, 27186, 27187, 27188, 27190, 27191, 27192, 27193, 27194, 27195, 27196, 27199, 27200, 27201, 27202, 27203, 27205, 27206, 27208, 27209, 27210, 27211, 27212, 27213, 27214, 27215, 27217, 27218, 27219, 27220, 27221, 27222, 27223, 27226, 27228, 27229, 27230, 27231, 27232, 27234, 27235, 27236, 27238, 27239, 27240, 27241, 27242, 27243, 27244, 27245, 27246, 27247, 27248, 27250, 27251, 27252, 27253, 27254, 27255, 27256, 27258, 27259, 27261, 27262, 27263, 27265, 27266, 27267, 27269, 27270, 27271, 27272, 27273, 27274, 27275, 27276, 27277, 27279, 27282, 27283, 27284, 27285, 27286, 27288, 27289, 27290, 27291, 27292, 27293, 27294, 27295, 27297, 27298, 27299, 27300, 27301, 27302, 27303, 27304, 27306, 27309, 27310, 27311, 27312, 27313, 27314, 27315, 27316, 27317, 27318, 27319, 27320, 27321, 27322, 27323, 27324, 27325, 27326, 27327, 27328, 27329, 27330, 27331, 27332, 27333, 27334, 27335, 27336, 27337, 27338, 27339, 27340, 27341, 27342, 27343, 27344, 27345, 27346, 27347, 27348, 27349, 27350, 27351, 27352, 27353, 27354, 27355, 27356, 27357, 27358, 27359, 27360, 27361, 27362, 27363, 27364, 27365, 27366, 27367, 27368, 27369, 27370, 27371, 27372, 27373, 27374, 27375, 27376, 27377, 27378, 27379, 27380, 27381, 27382, 27383, 27384, 27385, 27386, 27387, 27388, 27389, 27390, 27391, 27392, 27393, 27394, 27395, 27396, 27397, 27398, 27399, 27400, 27401, 27402, 27403, 27404, 27405, 27406, 27407, 27408, 27409, 27410, 27411, 27412, 27413, 27414, 27415, 27416, 27417, 27418, 27419, 27420, 27421, 27422, 27423, 27429, 27430, 27432, 27433, 27434, 27435, 27436, 27437, 27438, 27439, 27440, 27441, 27443, 27444, 27445, 27446, 27448, 27451, 27452, 27453, 27455, 27456, 27457, 27458, 27460, 27461, 27464, 27466, 27467, 27469, 27470, 27471, 27472, 27473, 27474, 27475, 27476, 27477, 27478, 27479, 27480, 27482, 27483, 27484, 27485, 27486, 27487, 27488, 27489, 27496, 27497, 27499, 27500, 27501, 27502, 27503, 27504, 27505, 27506, 27507, 27508, 27509, 27510, 27511, 27512, 27514, 27517, 27518, 27519, 27520, 27525, 27528, 27532, 27534, 27535, 27536, 27537, 27540, 27541, 27543, 27544, 27545, 27548, 27549, 27550, 27551, 27552, 27554, 27555, 27556, 27557, 27558, 27559, 27560, 27561, 27563, 27564, 27565, 27566, 27567, 27568, 27569, 27570, 27574, 27576, 27577, 27578, 27579, 27580, 27581, 27582, 27584, 27587, 27588, 27590, 27591, 27592, 27593, 27594, 27596, 27598, 27600, 27601, 27608, 27610, 27612, 27613, 27614, 27615, 27616, 27618, 27619, 27620, 27621, 27622, 27623, 27624, 27625, 27628, 27629, 27630, 27632, 27633, 27634, 27636, 27638, 27639, 27640, 27642, 27643, 27644, 27646, 27647, 27648, 27649, 27650, 27651, 27652, 27656, 27657, 27658, 27659, 27660, 27662, 27666, 27671, 27676, 27677, 27678, 27680, 27683, 27685, 27691, 27692, 27693, 27697, 27699, 27702, 27703, 27705, 27706, 27707, 27708, 27710, 27711, 27715, 27716, 27717, 27720, 27723, 27724, 27725, 27726, 27727, 27729, 27730, 27731, 27734, 27736, 27737, 27738, 27746, 27747, 27749, 27750, 27751, 27755, 27756, 27757, 27758, 27759, 27761, 27763, 27765, 27767, 27768, 27770, 27771, 27772, 27775, 27776, 27780, 27783, 27786, 27787, 27789, 27790, 27793, 27794, 27797, 27798, 27799, 27800, 27802, 27804, 27805, 27806, 27808, 27810, 27816, 27820, 27823, 27824, 27828, 27829, 27830, 27831, 27834, 27840, 27841, 27842, 27843, 27846, 27847, 27848, 27851, 27853, 27854, 27855, 27857, 27858, 27864, 27865, 27866, 27868, 27869, 27871, 27876, 27878, 27879, 27881, 27884, 27885, 27890, 27892, 27897, 27903, 27904, 27906, 27907, 27909, 27910, 27912, 27913, 27914, 27917, 27919, 27920, 27921, 27923, 27924, 27925, 27926, 27928, 27932, 27933, 27935, 27936, 27937, 27938, 27939, 27940, 27942, 27944, 27945, 27948, 27949, 27951, 27952, 27956, 27958, 27959, 27960, 27962, 27967, 27968, 27970, 27972, 27977, 27980, 27984, 27989, 27990, 27991, 27992, 27995, 27997, 27999, 28001, 28002, 28004, 28005, 28007, 28008, 28011, 28012, 28013, 28016, 28017, 28018, 28019, 28021, 28022, 28025, 28026, 28027, 28029, 28030, 28031, 28032, 28033, 28035, 28036, 28038, 28039, 28042, 28043, 28045, 28047, 28048, 28050, 28054, 28055, 28056, 28057, 28058, 28060, 28066, 28069, 28076, 28077, 28080, 28081, 28083, 28084, 28086, 28087, 28089, 28090, 28091, 28092, 28093, 28094, 28097, 28098, 28099, 28104, 28105, 28106, 28109, 28110, 28111, 28112, 28114, 28115, 28116, 28117, 28119, 28122, 28123, 28124, 28127, 28130, 28131, 28133, 28135, 28136, 28137, 28138, 28141, 28143, 28144, 28146, 28148, 28149, 28150, 28152, 28154, 28157, 28158, 28159, 28160, 28161, 28162, 28163, 28164, 28166, 28167, 28168, 28169, 28171, 28175, 28178, 28179, 28181, 28184, 28185, 28187, 28188, 28190, 28191, 28194, 28198, 28199, 28200, 28202, 28204, 28206, 28208, 28209, 28211, 28213, 28214, 28215, 28217, 28219, 28220, 28221, 28222, 28223, 28224, 28225, 28226, 28229, 28230, 28231, 28232, 28233, 28234, 28235, 28236, 28239, 28240, 28241, 28242, 28245, 28247, 28249, 28250, 28252, 28253, 28254, 28256, 28257, 28258, 28259, 28260, 28261, 28262, 28263, 28264, 28265, 28266, 28268, 28269, 28271, 28272, 28273, 28274, 28275, 28276, 28277, 28278, 28279, 28280, 28281, 28282, 28283, 28284, 28285, 28288, 28289, 28290, 28292, 28295, 28296, 28298, 28299, 28300, 28301, 28302, 28305, 28306, 28307, 28308, 28309, 28310, 28311, 28313, 28314, 28315, 28317, 28318, 28320, 28321, 28323, 28324, 28326, 28328, 28329, 28331, 28332, 28333, 28334, 28336, 28339, 28341, 28344, 28345, 28348, 28350, 28351, 28352, 28355, 28356, 28357, 28358, 28360, 28361, 28362, 28364, 28365, 28366, 28368, 28370, 28374, 28376, 28377, 28379, 28380, 28381, 28387, 28391, 28394, 28395, 28396, 28397, 28398, 28399, 28400, 28401, 28402, 28403, 28405, 28406, 28407, 28408, 28410, 28411, 28412, 28413, 28414, 28415, 28416, 28417, 28419, 28420, 28421, 28423, 28424, 28426, 28427, 28428, 28429, 28430, 28432, 28433, 28434, 28438, 28439, 28440, 28441, 28442, 28443, 28444, 28445, 28446, 28447, 28449, 28450, 28451, 28453, 28454, 28455, 28456, 28460, 28462, 28464, 28466, 28468, 28469, 28471, 28472, 28473, 28474, 28475, 28476, 28477, 28479, 28480, 28481, 28482, 28483, 28484, 28485, 28488, 28489, 28490, 28492, 28494, 28495, 28496, 28497, 28498, 28499, 28500, 28501, 28502, 28503, 28505, 28506, 28507, 28509, 28511, 28512, 28513, 28515, 28516, 28517, 28519, 28520, 28521, 28522, 28523, 28524, 28527, 28528, 28529, 28531, 28533, 28534, 28535, 28537, 28539, 28541, 28542, 28543, 28544, 28545, 28546, 28547, 28549, 28550, 28551, 28554, 28555, 28559, 28560, 28561, 28562, 28563, 28564, 28565, 28566, 28567, 28568, 28569, 28570, 28571, 28573, 28574, 28575, 28576, 28578, 28579, 28580, 28581, 28582, 28584, 28585, 28586, 28587, 28588, 28589, 28590, 28591, 28592, 28593, 28594, 28596, 28597, 28599, 28600, 28602, 28603, 28604, 28605, 28606, 28607, 28609, 28611, 28612, 28613, 28614, 28615, 28616, 28618, 28619, 28620, 28621, 28622, 28623, 28624, 28627, 28628, 28629, 28630, 28631, 28632, 28633, 28634, 28635, 28636, 28637, 28639, 28642, 28643, 28644, 28645, 28646, 28647, 28648, 28649, 28650, 28651, 28652, 28653, 28656, 28657, 28658, 28659, 28660, 28661, 28662, 28663, 28664, 28665, 28666, 28667, 28668, 28669, 28670, 28671, 28672, 28673, 28674, 28675, 28676, 28677, 28678, 28679, 28680, 28681, 28682, 28683, 28684, 28685, 28686, 28687, 28688, 28690, 28691, 28692, 28693, 28694, 28695, 28696, 28697, 28700, 28701, 28702, 28703, 28704, 28705, 28706, 28708, 28709, 28710, 28711, 28712, 28713, 28714, 28715, 28716, 28717, 28718, 28719, 28720, 28721, 28722, 28723, 28724, 28726, 28727, 28728, 28730, 28731, 28732, 28733, 28734, 28735, 28736, 28737, 28738, 28739, 28740, 28741, 28742, 28743, 28744, 28745, 28746, 28747, 28749, 28750, 28752, 28753, 28754, 28755, 28756, 28757, 28758, 28759, 28760, 28761, 28762, 28763, 28764, 28765, 28767, 28768, 28769, 28770, 28771, 28772, 28773, 28774, 28775, 28776, 28777, 28778, 28782, 28785, 28786, 28787, 28788, 28791, 28793, 28794, 28795, 28797, 28801, 28802, 28803, 28804, 28806, 28807, 28808, 28811, 28812, 28813, 28815, 28816, 28817, 28819, 28823, 28824, 28826, 28827, 28830, 28831, 28832, 28833, 28834, 28835, 28836, 28837, 28838, 28839, 28840, 28841, 28842, 28848, 28850, 28852, 28853, 28854, 28858, 28862, 28863, 28868, 28869, 28870, 28871, 28873, 28875, 28876, 28877, 28878, 28879, 28880, 28881, 28882, 28883, 28884, 28885, 28886, 28887, 28890, 28892, 28893, 28894, 28896, 28897, 28898, 28899, 28901, 28906, 28910, 28912, 28913, 28914, 28915, 28916, 28917, 28918, 28920, 28922, 28923, 28924, 28926, 28927, 28928, 28929, 28930, 28931, 28932, 28933, 28934, 28935, 28936, 28939, 28940, 28941, 28942, 28943, 28945, 28946, 28948, 28951, 28955, 28956, 28957, 28958, 28959, 28960, 28961, 28962, 28963, 28964, 28965, 28967, 28968, 28969, 28970, 28971, 28972, 28973, 28974, 28978, 28979, 28980, 28981, 28983, 28984, 28985, 28986, 28987, 28988, 28989, 28990, 28991, 28992, 28993, 28994, 28995, 28996, 28998, 28999, 29e3, 29001, 29003, 29005, 29007, 29008, 29009, 29010, 29011, 29012, 29013, 29014, 29015, 29016, 29017, 29018, 29019, 29021, 29023, 29024, 29025, 29026, 29027, 29029, 29033, 29034, 29035, 29036, 29037, 29039, 29040, 29041, 29044, 29045, 29046, 29047, 29049, 29051, 29052, 29054, 29055, 29056, 29057, 29058, 29059, 29061, 29062, 29063, 29064, 29065, 29067, 29068, 29069, 29070, 29072, 29073, 29074, 29075, 29077, 29078, 29079, 29082, 29083, 29084, 29085, 29086, 29089, 29090, 29091, 29092, 29093, 29094, 29095, 29097, 29098, 29099, 29101, 29102, 29103, 29104, 29105, 29106, 29108, 29110, 29111, 29112, 29114, 29115, 29116, 29117, 29118, 29119, 29120, 29121, 29122, 29124, 29125, 29126, 29127, 29128, 29129, 29130, 29131, 29132, 29133, 29135, 29136, 29137, 29138, 29139, 29142, 29143, 29144, 29145, 29146, 29147, 29148, 29149, 29150, 29151, 29153, 29154, 29155, 29156, 29158, 29160, 29161, 29162, 29163, 29164, 29165, 29167, 29168, 29169, 29170, 29171, 29172, 29173, 29174, 29175, 29176, 29178, 29179, 29180, 29181, 29182, 29183, 29184, 29185, 29186, 29187, 29188, 29189, 29191, 29192, 29193, 29194, 29195, 29196, 29197, 29198, 29199, 29200, 29201, 29202, 29203, 29204, 29205, 29206, 29207, 29208, 29209, 29210, 29211, 29212, 29214, 29215, 29216, 29217, 29218, 29219, 29220, 29221, 29222, 29223, 29225, 29227, 29229, 29230, 29231, 29234, 29235, 29236, 29242, 29244, 29246, 29248, 29249, 29250, 29251, 29252, 29253, 29254, 29257, 29258, 29259, 29262, 29263, 29264, 29265, 29267, 29268, 29269, 29271, 29272, 29274, 29276, 29278, 29280, 29283, 29284, 29285, 29288, 29290, 29291, 29292, 29293, 29296, 29297, 29299, 29300, 29302, 29303, 29304, 29307, 29308, 29309, 29314, 29315, 29317, 29318, 29319, 29320, 29321, 29324, 29326, 29328, 29329, 29331, 29332, 29333, 29334, 29335, 29336, 29337, 29338, 29339, 29340, 29341, 29342, 29344, 29345, 29346, 29347, 29348, 29349, 29350, 29351, 29352, 29353, 29354, 29355, 29358, 29361, 29362, 29363, 29365, 29370, 29371, 29372, 29373, 29374, 29375, 29376, 29381, 29382, 29383, 29385, 29386, 29387, 29388, 29391, 29393, 29395, 29396, 29397, 29398, 29400, 29402, 29403, 58566, 58567, 58568, 58569, 58570, 58571, 58572, 58573, 58574, 58575, 58576, 58577, 58578, 58579, 58580, 58581, 58582, 58583, 58584, 58585, 58586, 58587, 58588, 58589, 58590, 58591, 58592, 58593, 58594, 58595, 58596, 58597, 58598, 58599, 58600, 58601, 58602, 58603, 58604, 58605, 58606, 58607, 58608, 58609, 58610, 58611, 58612, 58613, 58614, 58615, 58616, 58617, 58618, 58619, 58620, 58621, 58622, 58623, 58624, 58625, 58626, 58627, 58628, 58629, 58630, 58631, 58632, 58633, 58634, 58635, 58636, 58637, 58638, 58639, 58640, 58641, 58642, 58643, 58644, 58645, 58646, 58647, 58648, 58649, 58650, 58651, 58652, 58653, 58654, 58655, 58656, 58657, 58658, 58659, 58660, 58661, 12288, 12289, 12290, 183, 713, 711, 168, 12291, 12293, 8212, 65374, 8214, 8230, 8216, 8217, 8220, 8221, 12308, 12309, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12310, 12311, 12304, 12305, 177, 215, 247, 8758, 8743, 8744, 8721, 8719, 8746, 8745, 8712, 8759, 8730, 8869, 8741, 8736, 8978, 8857, 8747, 8750, 8801, 8780, 8776, 8765, 8733, 8800, 8814, 8815, 8804, 8805, 8734, 8757, 8756, 9794, 9792, 176, 8242, 8243, 8451, 65284, 164, 65504, 65505, 8240, 167, 8470, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 8251, 8594, 8592, 8593, 8595, 12307, 58662, 58663, 58664, 58665, 58666, 58667, 58668, 58669, 58670, 58671, 58672, 58673, 58674, 58675, 58676, 58677, 58678, 58679, 58680, 58681, 58682, 58683, 58684, 58685, 58686, 58687, 58688, 58689, 58690, 58691, 58692, 58693, 58694, 58695, 58696, 58697, 58698, 58699, 58700, 58701, 58702, 58703, 58704, 58705, 58706, 58707, 58708, 58709, 58710, 58711, 58712, 58713, 58714, 58715, 58716, 58717, 58718, 58719, 58720, 58721, 58722, 58723, 58724, 58725, 58726, 58727, 58728, 58729, 58730, 58731, 58732, 58733, 58734, 58735, 58736, 58737, 58738, 58739, 58740, 58741, 58742, 58743, 58744, 58745, 58746, 58747, 58748, 58749, 58750, 58751, 58752, 58753, 58754, 58755, 58756, 58757, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 59238, 59239, 59240, 59241, 59242, 59243, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 8364, 59245, 12832, 12833, 12834, 12835, 12836, 12837, 12838, 12839, 12840, 12841, 59246, 59247, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 59248, 59249, 58758, 58759, 58760, 58761, 58762, 58763, 58764, 58765, 58766, 58767, 58768, 58769, 58770, 58771, 58772, 58773, 58774, 58775, 58776, 58777, 58778, 58779, 58780, 58781, 58782, 58783, 58784, 58785, 58786, 58787, 58788, 58789, 58790, 58791, 58792, 58793, 58794, 58795, 58796, 58797, 58798, 58799, 58800, 58801, 58802, 58803, 58804, 58805, 58806, 58807, 58808, 58809, 58810, 58811, 58812, 58813, 58814, 58815, 58816, 58817, 58818, 58819, 58820, 58821, 58822, 58823, 58824, 58825, 58826, 58827, 58828, 58829, 58830, 58831, 58832, 58833, 58834, 58835, 58836, 58837, 58838, 58839, 58840, 58841, 58842, 58843, 58844, 58845, 58846, 58847, 58848, 58849, 58850, 58851, 58852, 12288, 65281, 65282, 65283, 65509, 65285, 65286, 65287, 65288, 65289, 65290, 65291, 65292, 65293, 65294, 65295, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, 65306, 65307, 65308, 65309, 65310, 65311, 65312, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, 65339, 65340, 65341, 65342, 65343, 65344, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 65371, 65372, 65373, 65507, 58854, 58855, 58856, 58857, 58858, 58859, 58860, 58861, 58862, 58863, 58864, 58865, 58866, 58867, 58868, 58869, 58870, 58871, 58872, 58873, 58874, 58875, 58876, 58877, 58878, 58879, 58880, 58881, 58882, 58883, 58884, 58885, 58886, 58887, 58888, 58889, 58890, 58891, 58892, 58893, 58894, 58895, 58896, 58897, 58898, 58899, 58900, 58901, 58902, 58903, 58904, 58905, 58906, 58907, 58908, 58909, 58910, 58911, 58912, 58913, 58914, 58915, 58916, 58917, 58918, 58919, 58920, 58921, 58922, 58923, 58924, 58925, 58926, 58927, 58928, 58929, 58930, 58931, 58932, 58933, 58934, 58935, 58936, 58937, 58938, 58939, 58940, 58941, 58942, 58943, 58944, 58945, 58946, 58947, 58948, 58949, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, 59250, 59251, 59252, 59253, 59254, 59255, 59256, 59257, 59258, 59259, 59260, 58950, 58951, 58952, 58953, 58954, 58955, 58956, 58957, 58958, 58959, 58960, 58961, 58962, 58963, 58964, 58965, 58966, 58967, 58968, 58969, 58970, 58971, 58972, 58973, 58974, 58975, 58976, 58977, 58978, 58979, 58980, 58981, 58982, 58983, 58984, 58985, 58986, 58987, 58988, 58989, 58990, 58991, 58992, 58993, 58994, 58995, 58996, 58997, 58998, 58999, 59e3, 59001, 59002, 59003, 59004, 59005, 59006, 59007, 59008, 59009, 59010, 59011, 59012, 59013, 59014, 59015, 59016, 59017, 59018, 59019, 59020, 59021, 59022, 59023, 59024, 59025, 59026, 59027, 59028, 59029, 59030, 59031, 59032, 59033, 59034, 59035, 59036, 59037, 59038, 59039, 59040, 59041, 59042, 59043, 59044, 59045, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, 59261, 59262, 59263, 59264, 59265, 59266, 59267, 59268, 59046, 59047, 59048, 59049, 59050, 59051, 59052, 59053, 59054, 59055, 59056, 59057, 59058, 59059, 59060, 59061, 59062, 59063, 59064, 59065, 59066, 59067, 59068, 59069, 59070, 59071, 59072, 59073, 59074, 59075, 59076, 59077, 59078, 59079, 59080, 59081, 59082, 59083, 59084, 59085, 59086, 59087, 59088, 59089, 59090, 59091, 59092, 59093, 59094, 59095, 59096, 59097, 59098, 59099, 59100, 59101, 59102, 59103, 59104, 59105, 59106, 59107, 59108, 59109, 59110, 59111, 59112, 59113, 59114, 59115, 59116, 59117, 59118, 59119, 59120, 59121, 59122, 59123, 59124, 59125, 59126, 59127, 59128, 59129, 59130, 59131, 59132, 59133, 59134, 59135, 59136, 59137, 59138, 59139, 59140, 59141, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 59269, 59270, 59271, 59272, 59273, 59274, 59275, 59276, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, 59277, 59278, 59279, 59280, 59281, 59282, 59283, 65077, 65078, 65081, 65082, 65087, 65088, 65085, 65086, 65089, 65090, 65091, 65092, 59284, 59285, 65083, 65084, 65079, 65080, 65073, 59286, 65075, 65076, 59287, 59288, 59289, 59290, 59291, 59292, 59293, 59294, 59295, 59142, 59143, 59144, 59145, 59146, 59147, 59148, 59149, 59150, 59151, 59152, 59153, 59154, 59155, 59156, 59157, 59158, 59159, 59160, 59161, 59162, 59163, 59164, 59165, 59166, 59167, 59168, 59169, 59170, 59171, 59172, 59173, 59174, 59175, 59176, 59177, 59178, 59179, 59180, 59181, 59182, 59183, 59184, 59185, 59186, 59187, 59188, 59189, 59190, 59191, 59192, 59193, 59194, 59195, 59196, 59197, 59198, 59199, 59200, 59201, 59202, 59203, 59204, 59205, 59206, 59207, 59208, 59209, 59210, 59211, 59212, 59213, 59214, 59215, 59216, 59217, 59218, 59219, 59220, 59221, 59222, 59223, 59224, 59225, 59226, 59227, 59228, 59229, 59230, 59231, 59232, 59233, 59234, 59235, 59236, 59237, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 59296, 59297, 59298, 59299, 59300, 59301, 59302, 59303, 59304, 59305, 59306, 59307, 59308, 59309, 59310, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 59311, 59312, 59313, 59314, 59315, 59316, 59317, 59318, 59319, 59320, 59321, 59322, 59323, 714, 715, 729, 8211, 8213, 8229, 8245, 8453, 8457, 8598, 8599, 8600, 8601, 8725, 8735, 8739, 8786, 8806, 8807, 8895, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9619, 9620, 9621, 9660, 9661, 9698, 9699, 9700, 9701, 9737, 8853, 12306, 12317, 12318, 59324, 59325, 59326, 59327, 59328, 59329, 59330, 59331, 59332, 59333, 59334, 257, 225, 462, 224, 275, 233, 283, 232, 299, 237, 464, 236, 333, 243, 466, 242, 363, 250, 468, 249, 470, 472, 474, 476, 252, 234, 593, 7743, 324, 328, 505, 609, 59337, 59338, 59339, 59340, 12549, 12550, 12551, 12552, 12553, 12554, 12555, 12556, 12557, 12558, 12559, 12560, 12561, 12562, 12563, 12564, 12565, 12566, 12567, 12568, 12569, 12570, 12571, 12572, 12573, 12574, 12575, 12576, 12577, 12578, 12579, 12580, 12581, 12582, 12583, 12584, 12585, 59341, 59342, 59343, 59344, 59345, 59346, 59347, 59348, 59349, 59350, 59351, 59352, 59353, 59354, 59355, 59356, 59357, 59358, 59359, 59360, 59361, 12321, 12322, 12323, 12324, 12325, 12326, 12327, 12328, 12329, 12963, 13198, 13199, 13212, 13213, 13214, 13217, 13252, 13262, 13265, 13266, 13269, 65072, 65506, 65508, 59362, 8481, 12849, 59363, 8208, 59364, 59365, 59366, 12540, 12443, 12444, 12541, 12542, 12294, 12445, 12446, 65097, 65098, 65099, 65100, 65101, 65102, 65103, 65104, 65105, 65106, 65108, 65109, 65110, 65111, 65113, 65114, 65115, 65116, 65117, 65118, 65119, 65120, 65121, 65122, 65123, 65124, 65125, 65126, 65128, 65129, 65130, 65131, 12350, 12272, 12273, 12274, 12275, 12276, 12277, 12278, 12279, 12280, 12281, 12282, 12283, 12295, 59380, 59381, 59382, 59383, 59384, 59385, 59386, 59387, 59388, 59389, 59390, 59391, 59392, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 59393, 59394, 59395, 59396, 59397, 59398, 59399, 59400, 59401, 59402, 59403, 59404, 59405, 59406, 59407, 29404, 29405, 29407, 29410, 29411, 29412, 29413, 29414, 29415, 29418, 29419, 29429, 29430, 29433, 29437, 29438, 29439, 29440, 29442, 29444, 29445, 29446, 29447, 29448, 29449, 29451, 29452, 29453, 29455, 29456, 29457, 29458, 29460, 29464, 29465, 29466, 29471, 29472, 29475, 29476, 29478, 29479, 29480, 29485, 29487, 29488, 29490, 29491, 29493, 29494, 29498, 29499, 29500, 29501, 29504, 29505, 29506, 29507, 29508, 29509, 29510, 29511, 29512, 29513, 29514, 29515, 29516, 29518, 29519, 29521, 29523, 29524, 29525, 29526, 29528, 29529, 29530, 29531, 29532, 29533, 29534, 29535, 29537, 29538, 29539, 29540, 29541, 29542, 29543, 29544, 29545, 29546, 29547, 29550, 29552, 29553, 57344, 57345, 57346, 57347, 57348, 57349, 57350, 57351, 57352, 57353, 57354, 57355, 57356, 57357, 57358, 57359, 57360, 57361, 57362, 57363, 57364, 57365, 57366, 57367, 57368, 57369, 57370, 57371, 57372, 57373, 57374, 57375, 57376, 57377, 57378, 57379, 57380, 57381, 57382, 57383, 57384, 57385, 57386, 57387, 57388, 57389, 57390, 57391, 57392, 57393, 57394, 57395, 57396, 57397, 57398, 57399, 57400, 57401, 57402, 57403, 57404, 57405, 57406, 57407, 57408, 57409, 57410, 57411, 57412, 57413, 57414, 57415, 57416, 57417, 57418, 57419, 57420, 57421, 57422, 57423, 57424, 57425, 57426, 57427, 57428, 57429, 57430, 57431, 57432, 57433, 57434, 57435, 57436, 57437, 29554, 29555, 29556, 29557, 29558, 29559, 29560, 29561, 29562, 29563, 29564, 29565, 29567, 29568, 29569, 29570, 29571, 29573, 29574, 29576, 29578, 29580, 29581, 29583, 29584, 29586, 29587, 29588, 29589, 29591, 29592, 29593, 29594, 29596, 29597, 29598, 29600, 29601, 29603, 29604, 29605, 29606, 29607, 29608, 29610, 29612, 29613, 29617, 29620, 29621, 29622, 29624, 29625, 29628, 29629, 29630, 29631, 29633, 29635, 29636, 29637, 29638, 29639, 29643, 29644, 29646, 29650, 29651, 29652, 29653, 29654, 29655, 29656, 29658, 29659, 29660, 29661, 29663, 29665, 29666, 29667, 29668, 29670, 29672, 29674, 29675, 29676, 29678, 29679, 29680, 29681, 29683, 29684, 29685, 29686, 29687, 57438, 57439, 57440, 57441, 57442, 57443, 57444, 57445, 57446, 57447, 57448, 57449, 57450, 57451, 57452, 57453, 57454, 57455, 57456, 57457, 57458, 57459, 57460, 57461, 57462, 57463, 57464, 57465, 57466, 57467, 57468, 57469, 57470, 57471, 57472, 57473, 57474, 57475, 57476, 57477, 57478, 57479, 57480, 57481, 57482, 57483, 57484, 57485, 57486, 57487, 57488, 57489, 57490, 57491, 57492, 57493, 57494, 57495, 57496, 57497, 57498, 57499, 57500, 57501, 57502, 57503, 57504, 57505, 57506, 57507, 57508, 57509, 57510, 57511, 57512, 57513, 57514, 57515, 57516, 57517, 57518, 57519, 57520, 57521, 57522, 57523, 57524, 57525, 57526, 57527, 57528, 57529, 57530, 57531, 29688, 29689, 29690, 29691, 29692, 29693, 29694, 29695, 29696, 29697, 29698, 29700, 29703, 29704, 29707, 29708, 29709, 29710, 29713, 29714, 29715, 29716, 29717, 29718, 29719, 29720, 29721, 29724, 29725, 29726, 29727, 29728, 29729, 29731, 29732, 29735, 29737, 29739, 29741, 29743, 29745, 29746, 29751, 29752, 29753, 29754, 29755, 29757, 29758, 29759, 29760, 29762, 29763, 29764, 29765, 29766, 29767, 29768, 29769, 29770, 29771, 29772, 29773, 29774, 29775, 29776, 29777, 29778, 29779, 29780, 29782, 29784, 29789, 29792, 29793, 29794, 29795, 29796, 29797, 29798, 29799, 29800, 29801, 29802, 29803, 29804, 29806, 29807, 29809, 29810, 29811, 29812, 29813, 29816, 29817, 29818, 57532, 57533, 57534, 57535, 57536, 57537, 57538, 57539, 57540, 57541, 57542, 57543, 57544, 57545, 57546, 57547, 57548, 57549, 57550, 57551, 57552, 57553, 57554, 57555, 57556, 57557, 57558, 57559, 57560, 57561, 57562, 57563, 57564, 57565, 57566, 57567, 57568, 57569, 57570, 57571, 57572, 57573, 57574, 57575, 57576, 57577, 57578, 57579, 57580, 57581, 57582, 57583, 57584, 57585, 57586, 57587, 57588, 57589, 57590, 57591, 57592, 57593, 57594, 57595, 57596, 57597, 57598, 57599, 57600, 57601, 57602, 57603, 57604, 57605, 57606, 57607, 57608, 57609, 57610, 57611, 57612, 57613, 57614, 57615, 57616, 57617, 57618, 57619, 57620, 57621, 57622, 57623, 57624, 57625, 29819, 29820, 29821, 29823, 29826, 29828, 29829, 29830, 29832, 29833, 29834, 29836, 29837, 29839, 29841, 29842, 29843, 29844, 29845, 29846, 29847, 29848, 29849, 29850, 29851, 29853, 29855, 29856, 29857, 29858, 29859, 29860, 29861, 29862, 29866, 29867, 29868, 29869, 29870, 29871, 29872, 29873, 29874, 29875, 29876, 29877, 29878, 29879, 29880, 29881, 29883, 29884, 29885, 29886, 29887, 29888, 29889, 29890, 29891, 29892, 29893, 29894, 29895, 29896, 29897, 29898, 29899, 29900, 29901, 29902, 29903, 29904, 29905, 29907, 29908, 29909, 29910, 29911, 29912, 29913, 29914, 29915, 29917, 29919, 29921, 29925, 29927, 29928, 29929, 29930, 29931, 29932, 29933, 29936, 29937, 29938, 57626, 57627, 57628, 57629, 57630, 57631, 57632, 57633, 57634, 57635, 57636, 57637, 57638, 57639, 57640, 57641, 57642, 57643, 57644, 57645, 57646, 57647, 57648, 57649, 57650, 57651, 57652, 57653, 57654, 57655, 57656, 57657, 57658, 57659, 57660, 57661, 57662, 57663, 57664, 57665, 57666, 57667, 57668, 57669, 57670, 57671, 57672, 57673, 57674, 57675, 57676, 57677, 57678, 57679, 57680, 57681, 57682, 57683, 57684, 57685, 57686, 57687, 57688, 57689, 57690, 57691, 57692, 57693, 57694, 57695, 57696, 57697, 57698, 57699, 57700, 57701, 57702, 57703, 57704, 57705, 57706, 57707, 57708, 57709, 57710, 57711, 57712, 57713, 57714, 57715, 57716, 57717, 57718, 57719, 29939, 29941, 29944, 29945, 29946, 29947, 29948, 29949, 29950, 29952, 29953, 29954, 29955, 29957, 29958, 29959, 29960, 29961, 29962, 29963, 29964, 29966, 29968, 29970, 29972, 29973, 29974, 29975, 29979, 29981, 29982, 29984, 29985, 29986, 29987, 29988, 29990, 29991, 29994, 29998, 30004, 30006, 30009, 30012, 30013, 30015, 30017, 30018, 30019, 30020, 30022, 30023, 30025, 30026, 30029, 30032, 30033, 30034, 30035, 30037, 30038, 30039, 30040, 30045, 30046, 30047, 30048, 30049, 30050, 30051, 30052, 30055, 30056, 30057, 30059, 30060, 30061, 30062, 30063, 30064, 30065, 30067, 30069, 30070, 30071, 30074, 30075, 30076, 30077, 30078, 30080, 30081, 30082, 30084, 30085, 30087, 57720, 57721, 57722, 57723, 57724, 57725, 57726, 57727, 57728, 57729, 57730, 57731, 57732, 57733, 57734, 57735, 57736, 57737, 57738, 57739, 57740, 57741, 57742, 57743, 57744, 57745, 57746, 57747, 57748, 57749, 57750, 57751, 57752, 57753, 57754, 57755, 57756, 57757, 57758, 57759, 57760, 57761, 57762, 57763, 57764, 57765, 57766, 57767, 57768, 57769, 57770, 57771, 57772, 57773, 57774, 57775, 57776, 57777, 57778, 57779, 57780, 57781, 57782, 57783, 57784, 57785, 57786, 57787, 57788, 57789, 57790, 57791, 57792, 57793, 57794, 57795, 57796, 57797, 57798, 57799, 57800, 57801, 57802, 57803, 57804, 57805, 57806, 57807, 57808, 57809, 57810, 57811, 57812, 57813, 30088, 30089, 30090, 30092, 30093, 30094, 30096, 30099, 30101, 30104, 30107, 30108, 30110, 30114, 30118, 30119, 30120, 30121, 30122, 30125, 30134, 30135, 30138, 30139, 30143, 30144, 30145, 30150, 30155, 30156, 30158, 30159, 30160, 30161, 30163, 30167, 30169, 30170, 30172, 30173, 30175, 30176, 30177, 30181, 30185, 30188, 30189, 30190, 30191, 30194, 30195, 30197, 30198, 30199, 30200, 30202, 30203, 30205, 30206, 30210, 30212, 30214, 30215, 30216, 30217, 30219, 30221, 30222, 30223, 30225, 30226, 30227, 30228, 30230, 30234, 30236, 30237, 30238, 30241, 30243, 30247, 30248, 30252, 30254, 30255, 30257, 30258, 30262, 30263, 30265, 30266, 30267, 30269, 30273, 30274, 30276, 57814, 57815, 57816, 57817, 57818, 57819, 57820, 57821, 57822, 57823, 57824, 57825, 57826, 57827, 57828, 57829, 57830, 57831, 57832, 57833, 57834, 57835, 57836, 57837, 57838, 57839, 57840, 57841, 57842, 57843, 57844, 57845, 57846, 57847, 57848, 57849, 57850, 57851, 57852, 57853, 57854, 57855, 57856, 57857, 57858, 57859, 57860, 57861, 57862, 57863, 57864, 57865, 57866, 57867, 57868, 57869, 57870, 57871, 57872, 57873, 57874, 57875, 57876, 57877, 57878, 57879, 57880, 57881, 57882, 57883, 57884, 57885, 57886, 57887, 57888, 57889, 57890, 57891, 57892, 57893, 57894, 57895, 57896, 57897, 57898, 57899, 57900, 57901, 57902, 57903, 57904, 57905, 57906, 57907, 30277, 30278, 30279, 30280, 30281, 30282, 30283, 30286, 30287, 30288, 30289, 30290, 30291, 30293, 30295, 30296, 30297, 30298, 30299, 30301, 30303, 30304, 30305, 30306, 30308, 30309, 30310, 30311, 30312, 30313, 30314, 30316, 30317, 30318, 30320, 30321, 30322, 30323, 30324, 30325, 30326, 30327, 30329, 30330, 30332, 30335, 30336, 30337, 30339, 30341, 30345, 30346, 30348, 30349, 30351, 30352, 30354, 30356, 30357, 30359, 30360, 30362, 30363, 30364, 30365, 30366, 30367, 30368, 30369, 30370, 30371, 30373, 30374, 30375, 30376, 30377, 30378, 30379, 30380, 30381, 30383, 30384, 30387, 30389, 30390, 30391, 30392, 30393, 30394, 30395, 30396, 30397, 30398, 30400, 30401, 30403, 21834, 38463, 22467, 25384, 21710, 21769, 21696, 30353, 30284, 34108, 30702, 33406, 30861, 29233, 38552, 38797, 27688, 23433, 20474, 25353, 26263, 23736, 33018, 26696, 32942, 26114, 30414, 20985, 25942, 29100, 32753, 34948, 20658, 22885, 25034, 28595, 33453, 25420, 25170, 21485, 21543, 31494, 20843, 30116, 24052, 25300, 36299, 38774, 25226, 32793, 22365, 38712, 32610, 29240, 30333, 26575, 30334, 25670, 20336, 36133, 25308, 31255, 26001, 29677, 25644, 25203, 33324, 39041, 26495, 29256, 25198, 25292, 20276, 29923, 21322, 21150, 32458, 37030, 24110, 26758, 27036, 33152, 32465, 26834, 30917, 34444, 38225, 20621, 35876, 33502, 32990, 21253, 35090, 21093, 30404, 30407, 30409, 30411, 30412, 30419, 30421, 30425, 30426, 30428, 30429, 30430, 30432, 30433, 30434, 30435, 30436, 30438, 30439, 30440, 30441, 30442, 30443, 30444, 30445, 30448, 30451, 30453, 30454, 30455, 30458, 30459, 30461, 30463, 30464, 30466, 30467, 30469, 30470, 30474, 30476, 30478, 30479, 30480, 30481, 30482, 30483, 30484, 30485, 30486, 30487, 30488, 30491, 30492, 30493, 30494, 30497, 30499, 30500, 30501, 30503, 30506, 30507, 30508, 30510, 30512, 30513, 30514, 30515, 30516, 30521, 30523, 30525, 30526, 30527, 30530, 30532, 30533, 30534, 30536, 30537, 30538, 30539, 30540, 30541, 30542, 30543, 30546, 30547, 30548, 30549, 30550, 30551, 30552, 30553, 30556, 34180, 38649, 20445, 22561, 39281, 23453, 25265, 25253, 26292, 35961, 40077, 29190, 26479, 30865, 24754, 21329, 21271, 36744, 32972, 36125, 38049, 20493, 29384, 22791, 24811, 28953, 34987, 22868, 33519, 26412, 31528, 23849, 32503, 29997, 27893, 36454, 36856, 36924, 40763, 27604, 37145, 31508, 24444, 30887, 34006, 34109, 27605, 27609, 27606, 24065, 24199, 30201, 38381, 25949, 24330, 24517, 36767, 22721, 33218, 36991, 38491, 38829, 36793, 32534, 36140, 25153, 20415, 21464, 21342, 36776, 36777, 36779, 36941, 26631, 24426, 33176, 34920, 40150, 24971, 21035, 30250, 24428, 25996, 28626, 28392, 23486, 25672, 20853, 20912, 26564, 19993, 31177, 39292, 28851, 30557, 30558, 30559, 30560, 30564, 30567, 30569, 30570, 30573, 30574, 30575, 30576, 30577, 30578, 30579, 30580, 30581, 30582, 30583, 30584, 30586, 30587, 30588, 30593, 30594, 30595, 30598, 30599, 30600, 30601, 30602, 30603, 30607, 30608, 30611, 30612, 30613, 30614, 30615, 30616, 30617, 30618, 30619, 30620, 30621, 30622, 30625, 30627, 30628, 30630, 30632, 30635, 30637, 30638, 30639, 30641, 30642, 30644, 30646, 30647, 30648, 30649, 30650, 30652, 30654, 30656, 30657, 30658, 30659, 30660, 30661, 30662, 30663, 30664, 30665, 30666, 30667, 30668, 30670, 30671, 30672, 30673, 30674, 30675, 30676, 30677, 30678, 30680, 30681, 30682, 30685, 30686, 30687, 30688, 30689, 30692, 30149, 24182, 29627, 33760, 25773, 25320, 38069, 27874, 21338, 21187, 25615, 38082, 31636, 20271, 24091, 33334, 33046, 33162, 28196, 27850, 39539, 25429, 21340, 21754, 34917, 22496, 19981, 24067, 27493, 31807, 37096, 24598, 25830, 29468, 35009, 26448, 25165, 36130, 30572, 36393, 37319, 24425, 33756, 34081, 39184, 21442, 34453, 27531, 24813, 24808, 28799, 33485, 33329, 20179, 27815, 34255, 25805, 31961, 27133, 26361, 33609, 21397, 31574, 20391, 20876, 27979, 23618, 36461, 25554, 21449, 33580, 33590, 26597, 30900, 25661, 23519, 23700, 24046, 35815, 25286, 26612, 35962, 25600, 25530, 34633, 39307, 35863, 32544, 38130, 20135, 38416, 39076, 26124, 29462, 30694, 30696, 30698, 30703, 30704, 30705, 30706, 30708, 30709, 30711, 30713, 30714, 30715, 30716, 30723, 30724, 30725, 30726, 30727, 30728, 30730, 30731, 30734, 30735, 30736, 30739, 30741, 30745, 30747, 30750, 30752, 30753, 30754, 30756, 30760, 30762, 30763, 30766, 30767, 30769, 30770, 30771, 30773, 30774, 30781, 30783, 30785, 30786, 30787, 30788, 30790, 30792, 30793, 30794, 30795, 30797, 30799, 30801, 30803, 30804, 30808, 30809, 30810, 30811, 30812, 30814, 30815, 30816, 30817, 30818, 30819, 30820, 30821, 30822, 30823, 30824, 30825, 30831, 30832, 30833, 30834, 30835, 30836, 30837, 30838, 30840, 30841, 30842, 30843, 30845, 30846, 30847, 30848, 30849, 30850, 30851, 22330, 23581, 24120, 38271, 20607, 32928, 21378, 25950, 30021, 21809, 20513, 36229, 25220, 38046, 26397, 22066, 28526, 24034, 21557, 28818, 36710, 25199, 25764, 25507, 24443, 28552, 37108, 33251, 36784, 23576, 26216, 24561, 27785, 38472, 36225, 34924, 25745, 31216, 22478, 27225, 25104, 21576, 20056, 31243, 24809, 28548, 35802, 25215, 36894, 39563, 31204, 21507, 30196, 25345, 21273, 27744, 36831, 24347, 39536, 32827, 40831, 20360, 23610, 36196, 32709, 26021, 28861, 20805, 20914, 34411, 23815, 23456, 25277, 37228, 30068, 36364, 31264, 24833, 31609, 20167, 32504, 30597, 19985, 33261, 21021, 20986, 27249, 21416, 36487, 38148, 38607, 28353, 38500, 26970, 30852, 30853, 30854, 30856, 30858, 30859, 30863, 30864, 30866, 30868, 30869, 30870, 30873, 30877, 30878, 30880, 30882, 30884, 30886, 30888, 30889, 30890, 30891, 30892, 30893, 30894, 30895, 30901, 30902, 30903, 30904, 30906, 30907, 30908, 30909, 30911, 30912, 30914, 30915, 30916, 30918, 30919, 30920, 30924, 30925, 30926, 30927, 30929, 30930, 30931, 30934, 30935, 30936, 30938, 30939, 30940, 30941, 30942, 30943, 30944, 30945, 30946, 30947, 30948, 30949, 30950, 30951, 30953, 30954, 30955, 30957, 30958, 30959, 30960, 30961, 30963, 30965, 30966, 30968, 30969, 30971, 30972, 30973, 30974, 30975, 30976, 30978, 30979, 30980, 30982, 30983, 30984, 30985, 30986, 30987, 30988, 30784, 20648, 30679, 25616, 35302, 22788, 25571, 24029, 31359, 26941, 20256, 33337, 21912, 20018, 30126, 31383, 24162, 24202, 38383, 21019, 21561, 28810, 25462, 38180, 22402, 26149, 26943, 37255, 21767, 28147, 32431, 34850, 25139, 32496, 30133, 33576, 30913, 38604, 36766, 24904, 29943, 35789, 27492, 21050, 36176, 27425, 32874, 33905, 22257, 21254, 20174, 19995, 20945, 31895, 37259, 31751, 20419, 36479, 31713, 31388, 25703, 23828, 20652, 33030, 30209, 31929, 28140, 32736, 26449, 23384, 23544, 30923, 25774, 25619, 25514, 25387, 38169, 25645, 36798, 31572, 30249, 25171, 22823, 21574, 27513, 20643, 25140, 24102, 27526, 20195, 36151, 34955, 24453, 36910, 30989, 30990, 30991, 30992, 30993, 30994, 30996, 30997, 30998, 30999, 31e3, 31001, 31002, 31003, 31004, 31005, 31007, 31008, 31009, 31010, 31011, 31013, 31014, 31015, 31016, 31017, 31018, 31019, 31020, 31021, 31022, 31023, 31024, 31025, 31026, 31027, 31029, 31030, 31031, 31032, 31033, 31037, 31039, 31042, 31043, 31044, 31045, 31047, 31050, 31051, 31052, 31053, 31054, 31055, 31056, 31057, 31058, 31060, 31061, 31064, 31065, 31073, 31075, 31076, 31078, 31081, 31082, 31083, 31084, 31086, 31088, 31089, 31090, 31091, 31092, 31093, 31094, 31097, 31099, 31100, 31101, 31102, 31103, 31106, 31107, 31110, 31111, 31112, 31113, 31115, 31116, 31117, 31118, 31120, 31121, 31122, 24608, 32829, 25285, 20025, 21333, 37112, 25528, 32966, 26086, 27694, 20294, 24814, 28129, 35806, 24377, 34507, 24403, 25377, 20826, 33633, 26723, 20992, 25443, 36424, 20498, 23707, 31095, 23548, 21040, 31291, 24764, 36947, 30423, 24503, 24471, 30340, 36460, 28783, 30331, 31561, 30634, 20979, 37011, 22564, 20302, 28404, 36842, 25932, 31515, 29380, 28068, 32735, 23265, 25269, 24213, 22320, 33922, 31532, 24093, 24351, 36882, 32532, 39072, 25474, 28359, 30872, 28857, 20856, 38747, 22443, 30005, 20291, 30008, 24215, 24806, 22880, 28096, 27583, 30857, 21500, 38613, 20939, 20993, 25481, 21514, 38035, 35843, 36300, 29241, 30879, 34678, 36845, 35853, 21472, 31123, 31124, 31125, 31126, 31127, 31128, 31129, 31131, 31132, 31133, 31134, 31135, 31136, 31137, 31138, 31139, 31140, 31141, 31142, 31144, 31145, 31146, 31147, 31148, 31149, 31150, 31151, 31152, 31153, 31154, 31156, 31157, 31158, 31159, 31160, 31164, 31167, 31170, 31172, 31173, 31175, 31176, 31178, 31180, 31182, 31183, 31184, 31187, 31188, 31190, 31191, 31193, 31194, 31195, 31196, 31197, 31198, 31200, 31201, 31202, 31205, 31208, 31210, 31212, 31214, 31217, 31218, 31219, 31220, 31221, 31222, 31223, 31225, 31226, 31228, 31230, 31231, 31233, 31236, 31237, 31239, 31240, 31241, 31242, 31244, 31247, 31248, 31249, 31250, 31251, 31253, 31254, 31256, 31257, 31259, 31260, 19969, 30447, 21486, 38025, 39030, 40718, 38189, 23450, 35746, 20002, 19996, 20908, 33891, 25026, 21160, 26635, 20375, 24683, 20923, 27934, 20828, 25238, 26007, 38497, 35910, 36887, 30168, 37117, 30563, 27602, 29322, 29420, 35835, 22581, 30585, 36172, 26460, 38208, 32922, 24230, 28193, 22930, 31471, 30701, 38203, 27573, 26029, 32526, 22534, 20817, 38431, 23545, 22697, 21544, 36466, 25958, 39039, 22244, 38045, 30462, 36929, 25479, 21702, 22810, 22842, 22427, 36530, 26421, 36346, 33333, 21057, 24816, 22549, 34558, 23784, 40517, 20420, 39069, 35769, 23077, 24694, 21380, 25212, 36943, 37122, 39295, 24681, 32780, 20799, 32819, 23572, 39285, 27953, 20108, 31261, 31263, 31265, 31266, 31268, 31269, 31270, 31271, 31272, 31273, 31274, 31275, 31276, 31277, 31278, 31279, 31280, 31281, 31282, 31284, 31285, 31286, 31288, 31290, 31294, 31296, 31297, 31298, 31299, 31300, 31301, 31303, 31304, 31305, 31306, 31307, 31308, 31309, 31310, 31311, 31312, 31314, 31315, 31316, 31317, 31318, 31320, 31321, 31322, 31323, 31324, 31325, 31326, 31327, 31328, 31329, 31330, 31331, 31332, 31333, 31334, 31335, 31336, 31337, 31338, 31339, 31340, 31341, 31342, 31343, 31345, 31346, 31347, 31349, 31355, 31356, 31357, 31358, 31362, 31365, 31367, 31369, 31370, 31371, 31372, 31374, 31375, 31376, 31379, 31380, 31385, 31386, 31387, 31390, 31393, 31394, 36144, 21457, 32602, 31567, 20240, 20047, 38400, 27861, 29648, 34281, 24070, 30058, 32763, 27146, 30718, 38034, 32321, 20961, 28902, 21453, 36820, 33539, 36137, 29359, 39277, 27867, 22346, 33459, 26041, 32938, 25151, 38450, 22952, 20223, 35775, 32442, 25918, 33778, 38750, 21857, 39134, 32933, 21290, 35837, 21536, 32954, 24223, 27832, 36153, 33452, 37210, 21545, 27675, 20998, 32439, 22367, 28954, 27774, 31881, 22859, 20221, 24575, 24868, 31914, 20016, 23553, 26539, 34562, 23792, 38155, 39118, 30127, 28925, 36898, 20911, 32541, 35773, 22857, 20964, 20315, 21542, 22827, 25975, 32932, 23413, 25206, 25282, 36752, 24133, 27679, 31526, 20239, 20440, 26381, 31395, 31396, 31399, 31401, 31402, 31403, 31406, 31407, 31408, 31409, 31410, 31412, 31413, 31414, 31415, 31416, 31417, 31418, 31419, 31420, 31421, 31422, 31424, 31425, 31426, 31427, 31428, 31429, 31430, 31431, 31432, 31433, 31434, 31436, 31437, 31438, 31439, 31440, 31441, 31442, 31443, 31444, 31445, 31447, 31448, 31450, 31451, 31452, 31453, 31457, 31458, 31460, 31463, 31464, 31465, 31466, 31467, 31468, 31470, 31472, 31473, 31474, 31475, 31476, 31477, 31478, 31479, 31480, 31483, 31484, 31486, 31488, 31489, 31490, 31493, 31495, 31497, 31500, 31501, 31502, 31504, 31506, 31507, 31510, 31511, 31512, 31514, 31516, 31517, 31519, 31521, 31522, 31523, 31527, 31529, 31533, 28014, 28074, 31119, 34993, 24343, 29995, 25242, 36741, 20463, 37340, 26023, 33071, 33105, 24220, 33104, 36212, 21103, 35206, 36171, 22797, 20613, 20184, 38428, 29238, 33145, 36127, 23500, 35747, 38468, 22919, 32538, 21648, 22134, 22030, 35813, 25913, 27010, 38041, 30422, 28297, 24178, 29976, 26438, 26577, 31487, 32925, 36214, 24863, 31174, 25954, 36195, 20872, 21018, 38050, 32568, 32923, 32434, 23703, 28207, 26464, 31705, 30347, 39640, 33167, 32660, 31957, 25630, 38224, 31295, 21578, 21733, 27468, 25601, 25096, 40509, 33011, 30105, 21106, 38761, 33883, 26684, 34532, 38401, 38548, 38124, 20010, 21508, 32473, 26681, 36319, 32789, 26356, 24218, 32697, 31535, 31536, 31538, 31540, 31541, 31542, 31543, 31545, 31547, 31549, 31551, 31552, 31553, 31554, 31555, 31556, 31558, 31560, 31562, 31565, 31566, 31571, 31573, 31575, 31577, 31580, 31582, 31583, 31585, 31587, 31588, 31589, 31590, 31591, 31592, 31593, 31594, 31595, 31596, 31597, 31599, 31600, 31603, 31604, 31606, 31608, 31610, 31612, 31613, 31615, 31617, 31618, 31619, 31620, 31622, 31623, 31624, 31625, 31626, 31627, 31628, 31630, 31631, 31633, 31634, 31635, 31638, 31640, 31641, 31642, 31643, 31646, 31647, 31648, 31651, 31652, 31653, 31662, 31663, 31664, 31666, 31667, 31669, 31670, 31671, 31673, 31674, 31675, 31676, 31677, 31678, 31679, 31680, 31682, 31683, 31684, 22466, 32831, 26775, 24037, 25915, 21151, 24685, 40858, 20379, 36524, 20844, 23467, 24339, 24041, 27742, 25329, 36129, 20849, 38057, 21246, 27807, 33503, 29399, 22434, 26500, 36141, 22815, 36764, 33735, 21653, 31629, 20272, 27837, 23396, 22993, 40723, 21476, 34506, 39592, 35895, 32929, 25925, 39038, 22266, 38599, 21038, 29916, 21072, 23521, 25346, 35074, 20054, 25296, 24618, 26874, 20851, 23448, 20896, 35266, 31649, 39302, 32592, 24815, 28748, 36143, 20809, 24191, 36891, 29808, 35268, 22317, 30789, 24402, 40863, 38394, 36712, 39740, 35809, 30328, 26690, 26588, 36330, 36149, 21053, 36746, 28378, 26829, 38149, 37101, 22269, 26524, 35065, 36807, 21704, 31685, 31688, 31689, 31690, 31691, 31693, 31694, 31695, 31696, 31698, 31700, 31701, 31702, 31703, 31704, 31707, 31708, 31710, 31711, 31712, 31714, 31715, 31716, 31719, 31720, 31721, 31723, 31724, 31725, 31727, 31728, 31730, 31731, 31732, 31733, 31734, 31736, 31737, 31738, 31739, 31741, 31743, 31744, 31745, 31746, 31747, 31748, 31749, 31750, 31752, 31753, 31754, 31757, 31758, 31760, 31761, 31762, 31763, 31764, 31765, 31767, 31768, 31769, 31770, 31771, 31772, 31773, 31774, 31776, 31777, 31778, 31779, 31780, 31781, 31784, 31785, 31787, 31788, 31789, 31790, 31791, 31792, 31793, 31794, 31795, 31796, 31797, 31798, 31799, 31801, 31802, 31803, 31804, 31805, 31806, 31810, 39608, 23401, 28023, 27686, 20133, 23475, 39559, 37219, 25e3, 37039, 38889, 21547, 28085, 23506, 20989, 21898, 32597, 32752, 25788, 25421, 26097, 25022, 24717, 28938, 27735, 27721, 22831, 26477, 33322, 22741, 22158, 35946, 27627, 37085, 22909, 32791, 21495, 28009, 21621, 21917, 33655, 33743, 26680, 31166, 21644, 20309, 21512, 30418, 35977, 38402, 27827, 28088, 36203, 35088, 40548, 36154, 22079, 40657, 30165, 24456, 29408, 24680, 21756, 20136, 27178, 34913, 24658, 36720, 21700, 28888, 34425, 40511, 27946, 23439, 24344, 32418, 21897, 20399, 29492, 21564, 21402, 20505, 21518, 21628, 20046, 24573, 29786, 22774, 33899, 32993, 34676, 29392, 31946, 28246, 31811, 31812, 31813, 31814, 31815, 31816, 31817, 31818, 31819, 31820, 31822, 31823, 31824, 31825, 31826, 31827, 31828, 31829, 31830, 31831, 31832, 31833, 31834, 31835, 31836, 31837, 31838, 31839, 31840, 31841, 31842, 31843, 31844, 31845, 31846, 31847, 31848, 31849, 31850, 31851, 31852, 31853, 31854, 31855, 31856, 31857, 31858, 31861, 31862, 31863, 31864, 31865, 31866, 31870, 31871, 31872, 31873, 31874, 31875, 31876, 31877, 31878, 31879, 31880, 31882, 31883, 31884, 31885, 31886, 31887, 31888, 31891, 31892, 31894, 31897, 31898, 31899, 31904, 31905, 31907, 31910, 31911, 31912, 31913, 31915, 31916, 31917, 31919, 31920, 31924, 31925, 31926, 31927, 31928, 31930, 31931, 24359, 34382, 21804, 25252, 20114, 27818, 25143, 33457, 21719, 21326, 29502, 28369, 30011, 21010, 21270, 35805, 27088, 24458, 24576, 28142, 22351, 27426, 29615, 26707, 36824, 32531, 25442, 24739, 21796, 30186, 35938, 28949, 28067, 23462, 24187, 33618, 24908, 40644, 30970, 34647, 31783, 30343, 20976, 24822, 29004, 26179, 24140, 24653, 35854, 28784, 25381, 36745, 24509, 24674, 34516, 22238, 27585, 24724, 24935, 21321, 24800, 26214, 36159, 31229, 20250, 28905, 27719, 35763, 35826, 32472, 33636, 26127, 23130, 39746, 27985, 28151, 35905, 27963, 20249, 28779, 33719, 25110, 24785, 38669, 36135, 31096, 20987, 22334, 22522, 26426, 30072, 31293, 31215, 31637, 31935, 31936, 31938, 31939, 31940, 31942, 31945, 31947, 31950, 31951, 31952, 31953, 31954, 31955, 31956, 31960, 31962, 31963, 31965, 31966, 31969, 31970, 31971, 31972, 31973, 31974, 31975, 31977, 31978, 31979, 31980, 31981, 31982, 31984, 31985, 31986, 31987, 31988, 31989, 31990, 31991, 31993, 31994, 31996, 31997, 31998, 31999, 32e3, 32001, 32002, 32003, 32004, 32005, 32006, 32007, 32008, 32009, 32011, 32012, 32013, 32014, 32015, 32016, 32017, 32018, 32019, 32020, 32021, 32022, 32023, 32024, 32025, 32026, 32027, 32028, 32029, 32030, 32031, 32033, 32035, 32036, 32037, 32038, 32040, 32041, 32042, 32044, 32045, 32046, 32048, 32049, 32050, 32051, 32052, 32053, 32054, 32908, 39269, 36857, 28608, 35749, 40481, 23020, 32489, 32521, 21513, 26497, 26840, 36753, 31821, 38598, 21450, 24613, 30142, 27762, 21363, 23241, 32423, 25380, 20960, 33034, 24049, 34015, 25216, 20864, 23395, 20238, 31085, 21058, 24760, 27982, 23492, 23490, 35745, 35760, 26082, 24524, 38469, 22931, 32487, 32426, 22025, 26551, 22841, 20339, 23478, 21152, 33626, 39050, 36158, 30002, 38078, 20551, 31292, 20215, 26550, 39550, 23233, 27516, 30417, 22362, 23574, 31546, 38388, 29006, 20860, 32937, 33392, 22904, 32516, 33575, 26816, 26604, 30897, 30839, 25315, 25441, 31616, 20461, 21098, 20943, 33616, 27099, 37492, 36341, 36145, 35265, 38190, 31661, 20214, 32055, 32056, 32057, 32058, 32059, 32060, 32061, 32062, 32063, 32064, 32065, 32066, 32067, 32068, 32069, 32070, 32071, 32072, 32073, 32074, 32075, 32076, 32077, 32078, 32079, 32080, 32081, 32082, 32083, 32084, 32085, 32086, 32087, 32088, 32089, 32090, 32091, 32092, 32093, 32094, 32095, 32096, 32097, 32098, 32099, 32100, 32101, 32102, 32103, 32104, 32105, 32106, 32107, 32108, 32109, 32111, 32112, 32113, 32114, 32115, 32116, 32117, 32118, 32120, 32121, 32122, 32123, 32124, 32125, 32126, 32127, 32128, 32129, 32130, 32131, 32132, 32133, 32134, 32135, 32136, 32137, 32138, 32139, 32140, 32141, 32142, 32143, 32144, 32145, 32146, 32147, 32148, 32149, 32150, 32151, 32152, 20581, 33328, 21073, 39279, 28176, 28293, 28071, 24314, 20725, 23004, 23558, 27974, 27743, 30086, 33931, 26728, 22870, 35762, 21280, 37233, 38477, 34121, 26898, 30977, 28966, 33014, 20132, 37066, 27975, 39556, 23047, 22204, 25605, 38128, 30699, 20389, 33050, 29409, 35282, 39290, 32564, 32478, 21119, 25945, 37237, 36735, 36739, 21483, 31382, 25581, 25509, 30342, 31224, 34903, 38454, 25130, 21163, 33410, 26708, 26480, 25463, 30571, 31469, 27905, 32467, 35299, 22992, 25106, 34249, 33445, 30028, 20511, 20171, 30117, 35819, 23626, 24062, 31563, 26020, 37329, 20170, 27941, 35167, 32039, 38182, 20165, 35880, 36827, 38771, 26187, 31105, 36817, 28908, 28024, 32153, 32154, 32155, 32156, 32157, 32158, 32159, 32160, 32161, 32162, 32163, 32164, 32165, 32167, 32168, 32169, 32170, 32171, 32172, 32173, 32175, 32176, 32177, 32178, 32179, 32180, 32181, 32182, 32183, 32184, 32185, 32186, 32187, 32188, 32189, 32190, 32191, 32192, 32193, 32194, 32195, 32196, 32197, 32198, 32199, 32200, 32201, 32202, 32203, 32204, 32205, 32206, 32207, 32208, 32209, 32210, 32211, 32212, 32213, 32214, 32215, 32216, 32217, 32218, 32219, 32220, 32221, 32222, 32223, 32224, 32225, 32226, 32227, 32228, 32229, 32230, 32231, 32232, 32233, 32234, 32235, 32236, 32237, 32238, 32239, 32240, 32241, 32242, 32243, 32244, 32245, 32246, 32247, 32248, 32249, 32250, 23613, 21170, 33606, 20834, 33550, 30555, 26230, 40120, 20140, 24778, 31934, 31923, 32463, 20117, 35686, 26223, 39048, 38745, 22659, 25964, 38236, 24452, 30153, 38742, 31455, 31454, 20928, 28847, 31384, 25578, 31350, 32416, 29590, 38893, 20037, 28792, 20061, 37202, 21417, 25937, 26087, 33276, 33285, 21646, 23601, 30106, 38816, 25304, 29401, 30141, 23621, 39545, 33738, 23616, 21632, 30697, 20030, 27822, 32858, 25298, 25454, 24040, 20855, 36317, 36382, 38191, 20465, 21477, 24807, 28844, 21095, 25424, 40515, 23071, 20518, 30519, 21367, 32482, 25733, 25899, 25225, 25496, 20500, 29237, 35273, 20915, 35776, 32477, 22343, 33740, 38055, 20891, 21531, 23803, 32251, 32252, 32253, 32254, 32255, 32256, 32257, 32258, 32259, 32260, 32261, 32262, 32263, 32264, 32265, 32266, 32267, 32268, 32269, 32270, 32271, 32272, 32273, 32274, 32275, 32276, 32277, 32278, 32279, 32280, 32281, 32282, 32283, 32284, 32285, 32286, 32287, 32288, 32289, 32290, 32291, 32292, 32293, 32294, 32295, 32296, 32297, 32298, 32299, 32300, 32301, 32302, 32303, 32304, 32305, 32306, 32307, 32308, 32309, 32310, 32311, 32312, 32313, 32314, 32316, 32317, 32318, 32319, 32320, 32322, 32323, 32324, 32325, 32326, 32328, 32329, 32330, 32331, 32332, 32333, 32334, 32335, 32336, 32337, 32338, 32339, 32340, 32341, 32342, 32343, 32344, 32345, 32346, 32347, 32348, 32349, 20426, 31459, 27994, 37089, 39567, 21888, 21654, 21345, 21679, 24320, 25577, 26999, 20975, 24936, 21002, 22570, 21208, 22350, 30733, 30475, 24247, 24951, 31968, 25179, 25239, 20130, 28821, 32771, 25335, 28900, 38752, 22391, 33499, 26607, 26869, 30933, 39063, 31185, 22771, 21683, 21487, 28212, 20811, 21051, 23458, 35838, 32943, 21827, 22438, 24691, 22353, 21549, 31354, 24656, 23380, 25511, 25248, 21475, 25187, 23495, 26543, 21741, 31391, 33510, 37239, 24211, 35044, 22840, 22446, 25358, 36328, 33007, 22359, 31607, 20393, 24555, 23485, 27454, 21281, 31568, 29378, 26694, 30719, 30518, 26103, 20917, 20111, 30420, 23743, 31397, 33909, 22862, 39745, 20608, 32350, 32351, 32352, 32353, 32354, 32355, 32356, 32357, 32358, 32359, 32360, 32361, 32362, 32363, 32364, 32365, 32366, 32367, 32368, 32369, 32370, 32371, 32372, 32373, 32374, 32375, 32376, 32377, 32378, 32379, 32380, 32381, 32382, 32383, 32384, 32385, 32387, 32388, 32389, 32390, 32391, 32392, 32393, 32394, 32395, 32396, 32397, 32398, 32399, 32400, 32401, 32402, 32403, 32404, 32405, 32406, 32407, 32408, 32409, 32410, 32412, 32413, 32414, 32430, 32436, 32443, 32444, 32470, 32484, 32492, 32505, 32522, 32528, 32542, 32567, 32569, 32571, 32572, 32573, 32574, 32575, 32576, 32577, 32579, 32582, 32583, 32584, 32585, 32586, 32587, 32588, 32589, 32590, 32591, 32594, 32595, 39304, 24871, 28291, 22372, 26118, 25414, 22256, 25324, 25193, 24275, 38420, 22403, 25289, 21895, 34593, 33098, 36771, 21862, 33713, 26469, 36182, 34013, 23146, 26639, 25318, 31726, 38417, 20848, 28572, 35888, 25597, 35272, 25042, 32518, 28866, 28389, 29701, 27028, 29436, 24266, 37070, 26391, 28010, 25438, 21171, 29282, 32769, 20332, 23013, 37226, 28889, 28061, 21202, 20048, 38647, 38253, 34174, 30922, 32047, 20769, 22418, 25794, 32907, 31867, 27882, 26865, 26974, 20919, 21400, 26792, 29313, 40654, 31729, 29432, 31163, 28435, 29702, 26446, 37324, 40100, 31036, 33673, 33620, 21519, 26647, 20029, 21385, 21169, 30782, 21382, 21033, 20616, 20363, 20432, 32598, 32601, 32603, 32604, 32605, 32606, 32608, 32611, 32612, 32613, 32614, 32615, 32619, 32620, 32621, 32623, 32624, 32627, 32629, 32630, 32631, 32632, 32634, 32635, 32636, 32637, 32639, 32640, 32642, 32643, 32644, 32645, 32646, 32647, 32648, 32649, 32651, 32653, 32655, 32656, 32657, 32658, 32659, 32661, 32662, 32663, 32664, 32665, 32667, 32668, 32672, 32674, 32675, 32677, 32678, 32680, 32681, 32682, 32683, 32684, 32685, 32686, 32689, 32691, 32692, 32693, 32694, 32695, 32698, 32699, 32702, 32704, 32706, 32707, 32708, 32710, 32711, 32712, 32713, 32715, 32717, 32719, 32720, 32721, 32722, 32723, 32726, 32727, 32729, 32730, 32731, 32732, 32733, 32734, 32738, 32739, 30178, 31435, 31890, 27813, 38582, 21147, 29827, 21737, 20457, 32852, 33714, 36830, 38256, 24265, 24604, 28063, 24088, 25947, 33080, 38142, 24651, 28860, 32451, 31918, 20937, 26753, 31921, 33391, 20004, 36742, 37327, 26238, 20142, 35845, 25769, 32842, 20698, 30103, 29134, 23525, 36797, 28518, 20102, 25730, 38243, 24278, 26009, 21015, 35010, 28872, 21155, 29454, 29747, 26519, 30967, 38678, 20020, 37051, 40158, 28107, 20955, 36161, 21533, 25294, 29618, 33777, 38646, 40836, 38083, 20278, 32666, 20940, 28789, 38517, 23725, 39046, 21478, 20196, 28316, 29705, 27060, 30827, 39311, 30041, 21016, 30244, 27969, 26611, 20845, 40857, 32843, 21657, 31548, 31423, 32740, 32743, 32744, 32746, 32747, 32748, 32749, 32751, 32754, 32756, 32757, 32758, 32759, 32760, 32761, 32762, 32765, 32766, 32767, 32770, 32775, 32776, 32777, 32778, 32782, 32783, 32785, 32787, 32794, 32795, 32797, 32798, 32799, 32801, 32803, 32804, 32811, 32812, 32813, 32814, 32815, 32816, 32818, 32820, 32825, 32826, 32828, 32830, 32832, 32833, 32836, 32837, 32839, 32840, 32841, 32846, 32847, 32848, 32849, 32851, 32853, 32854, 32855, 32857, 32859, 32860, 32861, 32862, 32863, 32864, 32865, 32866, 32867, 32868, 32869, 32870, 32871, 32872, 32875, 32876, 32877, 32878, 32879, 32880, 32882, 32883, 32884, 32885, 32886, 32887, 32888, 32889, 32890, 32891, 32892, 32893, 38534, 22404, 25314, 38471, 27004, 23044, 25602, 31699, 28431, 38475, 33446, 21346, 39045, 24208, 28809, 25523, 21348, 34383, 40065, 40595, 30860, 38706, 36335, 36162, 40575, 28510, 31108, 24405, 38470, 25134, 39540, 21525, 38109, 20387, 26053, 23653, 23649, 32533, 34385, 27695, 24459, 29575, 28388, 32511, 23782, 25371, 23402, 28390, 21365, 20081, 25504, 30053, 25249, 36718, 20262, 20177, 27814, 32438, 35770, 33821, 34746, 32599, 36923, 38179, 31657, 39585, 35064, 33853, 27931, 39558, 32476, 22920, 40635, 29595, 30721, 34434, 39532, 39554, 22043, 21527, 22475, 20080, 40614, 21334, 36808, 33033, 30610, 39314, 34542, 28385, 34067, 26364, 24930, 28459, 32894, 32897, 32898, 32901, 32904, 32906, 32909, 32910, 32911, 32912, 32913, 32914, 32916, 32917, 32919, 32921, 32926, 32931, 32934, 32935, 32936, 32940, 32944, 32947, 32949, 32950, 32952, 32953, 32955, 32965, 32967, 32968, 32969, 32970, 32971, 32975, 32976, 32977, 32978, 32979, 32980, 32981, 32984, 32991, 32992, 32994, 32995, 32998, 33006, 33013, 33015, 33017, 33019, 33022, 33023, 33024, 33025, 33027, 33028, 33029, 33031, 33032, 33035, 33036, 33045, 33047, 33049, 33051, 33052, 33053, 33055, 33056, 33057, 33058, 33059, 33060, 33061, 33062, 33063, 33064, 33065, 33066, 33067, 33069, 33070, 33072, 33075, 33076, 33077, 33079, 33081, 33082, 33083, 33084, 33085, 33087, 35881, 33426, 33579, 30450, 27667, 24537, 33725, 29483, 33541, 38170, 27611, 30683, 38086, 21359, 33538, 20882, 24125, 35980, 36152, 20040, 29611, 26522, 26757, 37238, 38665, 29028, 27809, 30473, 23186, 38209, 27599, 32654, 26151, 23504, 22969, 23194, 38376, 38391, 20204, 33804, 33945, 27308, 30431, 38192, 29467, 26790, 23391, 30511, 37274, 38753, 31964, 36855, 35868, 24357, 31859, 31192, 35269, 27852, 34588, 23494, 24130, 26825, 30496, 32501, 20885, 20813, 21193, 23081, 32517, 38754, 33495, 25551, 30596, 34256, 31186, 28218, 24217, 22937, 34065, 28781, 27665, 25279, 30399, 25935, 24751, 38397, 26126, 34719, 40483, 38125, 21517, 21629, 35884, 25720, 33088, 33089, 33090, 33091, 33092, 33093, 33095, 33097, 33101, 33102, 33103, 33106, 33110, 33111, 33112, 33115, 33116, 33117, 33118, 33119, 33121, 33122, 33123, 33124, 33126, 33128, 33130, 33131, 33132, 33135, 33138, 33139, 33141, 33142, 33143, 33144, 33153, 33155, 33156, 33157, 33158, 33159, 33161, 33163, 33164, 33165, 33166, 33168, 33170, 33171, 33172, 33173, 33174, 33175, 33177, 33178, 33182, 33183, 33184, 33185, 33186, 33188, 33189, 33191, 33193, 33195, 33196, 33197, 33198, 33199, 33200, 33201, 33202, 33204, 33205, 33206, 33207, 33208, 33209, 33212, 33213, 33214, 33215, 33220, 33221, 33223, 33224, 33225, 33227, 33229, 33230, 33231, 33232, 33233, 33234, 33235, 25721, 34321, 27169, 33180, 30952, 25705, 39764, 25273, 26411, 33707, 22696, 40664, 27819, 28448, 23518, 38476, 35851, 29279, 26576, 25287, 29281, 20137, 22982, 27597, 22675, 26286, 24149, 21215, 24917, 26408, 30446, 30566, 29287, 31302, 25343, 21738, 21584, 38048, 37027, 23068, 32435, 27670, 20035, 22902, 32784, 22856, 21335, 30007, 38590, 22218, 25376, 33041, 24700, 38393, 28118, 21602, 39297, 20869, 23273, 33021, 22958, 38675, 20522, 27877, 23612, 25311, 20320, 21311, 33147, 36870, 28346, 34091, 25288, 24180, 30910, 25781, 25467, 24565, 23064, 37247, 40479, 23615, 25423, 32834, 23421, 21870, 38218, 38221, 28037, 24744, 26592, 29406, 20957, 23425, 33236, 33237, 33238, 33239, 33240, 33241, 33242, 33243, 33244, 33245, 33246, 33247, 33248, 33249, 33250, 33252, 33253, 33254, 33256, 33257, 33259, 33262, 33263, 33264, 33265, 33266, 33269, 33270, 33271, 33272, 33273, 33274, 33277, 33279, 33283, 33287, 33288, 33289, 33290, 33291, 33294, 33295, 33297, 33299, 33301, 33302, 33303, 33304, 33305, 33306, 33309, 33312, 33316, 33317, 33318, 33319, 33321, 33326, 33330, 33338, 33340, 33341, 33343, 33344, 33345, 33346, 33347, 33349, 33350, 33352, 33354, 33356, 33357, 33358, 33360, 33361, 33362, 33363, 33364, 33365, 33366, 33367, 33369, 33371, 33372, 33373, 33374, 33376, 33377, 33378, 33379, 33380, 33381, 33382, 33383, 33385, 25319, 27870, 29275, 25197, 38062, 32445, 33043, 27987, 20892, 24324, 22900, 21162, 24594, 22899, 26262, 34384, 30111, 25386, 25062, 31983, 35834, 21734, 27431, 40485, 27572, 34261, 21589, 20598, 27812, 21866, 36276, 29228, 24085, 24597, 29750, 25293, 25490, 29260, 24472, 28227, 27966, 25856, 28504, 30424, 30928, 30460, 30036, 21028, 21467, 20051, 24222, 26049, 32810, 32982, 25243, 21638, 21032, 28846, 34957, 36305, 27873, 21624, 32986, 22521, 35060, 36180, 38506, 37197, 20329, 27803, 21943, 30406, 30768, 25256, 28921, 28558, 24429, 34028, 26842, 30844, 31735, 33192, 26379, 40527, 25447, 30896, 22383, 30738, 38713, 25209, 25259, 21128, 29749, 27607, 33386, 33387, 33388, 33389, 33393, 33397, 33398, 33399, 33400, 33403, 33404, 33408, 33409, 33411, 33413, 33414, 33415, 33417, 33420, 33424, 33427, 33428, 33429, 33430, 33434, 33435, 33438, 33440, 33442, 33443, 33447, 33458, 33461, 33462, 33466, 33467, 33468, 33471, 33472, 33474, 33475, 33477, 33478, 33481, 33488, 33494, 33497, 33498, 33501, 33506, 33511, 33512, 33513, 33514, 33516, 33517, 33518, 33520, 33522, 33523, 33525, 33526, 33528, 33530, 33532, 33533, 33534, 33535, 33536, 33546, 33547, 33549, 33552, 33554, 33555, 33558, 33560, 33561, 33565, 33566, 33567, 33568, 33569, 33570, 33571, 33572, 33573, 33574, 33577, 33578, 33582, 33584, 33586, 33591, 33595, 33597, 21860, 33086, 30130, 30382, 21305, 30174, 20731, 23617, 35692, 31687, 20559, 29255, 39575, 39128, 28418, 29922, 31080, 25735, 30629, 25340, 39057, 36139, 21697, 32856, 20050, 22378, 33529, 33805, 24179, 20973, 29942, 35780, 23631, 22369, 27900, 39047, 23110, 30772, 39748, 36843, 31893, 21078, 25169, 38138, 20166, 33670, 33889, 33769, 33970, 22484, 26420, 22275, 26222, 28006, 35889, 26333, 28689, 26399, 27450, 26646, 25114, 22971, 19971, 20932, 28422, 26578, 27791, 20854, 26827, 22855, 27495, 30054, 23822, 33040, 40784, 26071, 31048, 31041, 39569, 36215, 23682, 20062, 20225, 21551, 22865, 30732, 22120, 27668, 36804, 24323, 27773, 27875, 35755, 25488, 33598, 33599, 33601, 33602, 33604, 33605, 33608, 33610, 33611, 33612, 33613, 33614, 33619, 33621, 33622, 33623, 33624, 33625, 33629, 33634, 33648, 33649, 33650, 33651, 33652, 33653, 33654, 33657, 33658, 33662, 33663, 33664, 33665, 33666, 33667, 33668, 33671, 33672, 33674, 33675, 33676, 33677, 33679, 33680, 33681, 33684, 33685, 33686, 33687, 33689, 33690, 33693, 33695, 33697, 33698, 33699, 33700, 33701, 33702, 33703, 33708, 33709, 33710, 33711, 33717, 33723, 33726, 33727, 33730, 33731, 33732, 33734, 33736, 33737, 33739, 33741, 33742, 33744, 33745, 33746, 33747, 33749, 33751, 33753, 33754, 33755, 33758, 33762, 33763, 33764, 33766, 33767, 33768, 33771, 33772, 33773, 24688, 27965, 29301, 25190, 38030, 38085, 21315, 36801, 31614, 20191, 35878, 20094, 40660, 38065, 38067, 21069, 28508, 36963, 27973, 35892, 22545, 23884, 27424, 27465, 26538, 21595, 33108, 32652, 22681, 34103, 24378, 25250, 27207, 38201, 25970, 24708, 26725, 30631, 20052, 20392, 24039, 38808, 25772, 32728, 23789, 20431, 31373, 20999, 33540, 19988, 24623, 31363, 38054, 20405, 20146, 31206, 29748, 21220, 33465, 25810, 31165, 23517, 27777, 38738, 36731, 27682, 20542, 21375, 28165, 25806, 26228, 27696, 24773, 39031, 35831, 24198, 29756, 31351, 31179, 19992, 37041, 29699, 27714, 22234, 37195, 27845, 36235, 21306, 34502, 26354, 36527, 23624, 39537, 28192, 33774, 33775, 33779, 33780, 33781, 33782, 33783, 33786, 33787, 33788, 33790, 33791, 33792, 33794, 33797, 33799, 33800, 33801, 33802, 33808, 33810, 33811, 33812, 33813, 33814, 33815, 33817, 33818, 33819, 33822, 33823, 33824, 33825, 33826, 33827, 33833, 33834, 33835, 33836, 33837, 33838, 33839, 33840, 33842, 33843, 33844, 33845, 33846, 33847, 33849, 33850, 33851, 33854, 33855, 33856, 33857, 33858, 33859, 33860, 33861, 33863, 33864, 33865, 33866, 33867, 33868, 33869, 33870, 33871, 33872, 33874, 33875, 33876, 33877, 33878, 33880, 33885, 33886, 33887, 33888, 33890, 33892, 33893, 33894, 33895, 33896, 33898, 33902, 33903, 33904, 33906, 33908, 33911, 33913, 33915, 33916, 21462, 23094, 40843, 36259, 21435, 22280, 39079, 26435, 37275, 27849, 20840, 30154, 25331, 29356, 21048, 21149, 32570, 28820, 30264, 21364, 40522, 27063, 30830, 38592, 35033, 32676, 28982, 29123, 20873, 26579, 29924, 22756, 25880, 22199, 35753, 39286, 25200, 32469, 24825, 28909, 22764, 20161, 20154, 24525, 38887, 20219, 35748, 20995, 22922, 32427, 25172, 20173, 26085, 25102, 33592, 33993, 33635, 34701, 29076, 28342, 23481, 32466, 20887, 25545, 26580, 32905, 33593, 34837, 20754, 23418, 22914, 36785, 20083, 27741, 20837, 35109, 36719, 38446, 34122, 29790, 38160, 38384, 28070, 33509, 24369, 25746, 27922, 33832, 33134, 40131, 22622, 36187, 19977, 21441, 33917, 33918, 33919, 33920, 33921, 33923, 33924, 33925, 33926, 33930, 33933, 33935, 33936, 33937, 33938, 33939, 33940, 33941, 33942, 33944, 33946, 33947, 33949, 33950, 33951, 33952, 33954, 33955, 33956, 33957, 33958, 33959, 33960, 33961, 33962, 33963, 33964, 33965, 33966, 33968, 33969, 33971, 33973, 33974, 33975, 33979, 33980, 33982, 33984, 33986, 33987, 33989, 33990, 33991, 33992, 33995, 33996, 33998, 33999, 34002, 34004, 34005, 34007, 34008, 34009, 34010, 34011, 34012, 34014, 34017, 34018, 34020, 34023, 34024, 34025, 34026, 34027, 34029, 34030, 34031, 34033, 34034, 34035, 34036, 34037, 34038, 34039, 34040, 34041, 34042, 34043, 34045, 34046, 34048, 34049, 34050, 20254, 25955, 26705, 21971, 20007, 25620, 39578, 25195, 23234, 29791, 33394, 28073, 26862, 20711, 33678, 30722, 26432, 21049, 27801, 32433, 20667, 21861, 29022, 31579, 26194, 29642, 33515, 26441, 23665, 21024, 29053, 34923, 38378, 38485, 25797, 36193, 33203, 21892, 27733, 25159, 32558, 22674, 20260, 21830, 36175, 26188, 19978, 23578, 35059, 26786, 25422, 31245, 28903, 33421, 21242, 38902, 23569, 21736, 37045, 32461, 22882, 36170, 34503, 33292, 33293, 36198, 25668, 23556, 24913, 28041, 31038, 35774, 30775, 30003, 21627, 20280, 36523, 28145, 23072, 32453, 31070, 27784, 23457, 23158, 29978, 32958, 24910, 28183, 22768, 29983, 29989, 29298, 21319, 32499, 34051, 34052, 34053, 34054, 34055, 34056, 34057, 34058, 34059, 34061, 34062, 34063, 34064, 34066, 34068, 34069, 34070, 34072, 34073, 34075, 34076, 34077, 34078, 34080, 34082, 34083, 34084, 34085, 34086, 34087, 34088, 34089, 34090, 34093, 34094, 34095, 34096, 34097, 34098, 34099, 34100, 34101, 34102, 34110, 34111, 34112, 34113, 34114, 34116, 34117, 34118, 34119, 34123, 34124, 34125, 34126, 34127, 34128, 34129, 34130, 34131, 34132, 34133, 34135, 34136, 34138, 34139, 34140, 34141, 34143, 34144, 34145, 34146, 34147, 34149, 34150, 34151, 34153, 34154, 34155, 34156, 34157, 34158, 34159, 34160, 34161, 34163, 34165, 34166, 34167, 34168, 34172, 34173, 34175, 34176, 34177, 30465, 30427, 21097, 32988, 22307, 24072, 22833, 29422, 26045, 28287, 35799, 23608, 34417, 21313, 30707, 25342, 26102, 20160, 39135, 34432, 23454, 35782, 21490, 30690, 20351, 23630, 39542, 22987, 24335, 31034, 22763, 19990, 26623, 20107, 25325, 35475, 36893, 21183, 26159, 21980, 22124, 36866, 20181, 20365, 37322, 39280, 27663, 24066, 24643, 23460, 35270, 35797, 25910, 25163, 39318, 23432, 23551, 25480, 21806, 21463, 30246, 20861, 34092, 26530, 26803, 27530, 25234, 36755, 21460, 33298, 28113, 30095, 20070, 36174, 23408, 29087, 34223, 26257, 26329, 32626, 34560, 40653, 40736, 23646, 26415, 36848, 26641, 26463, 25101, 31446, 22661, 24246, 25968, 28465, 34178, 34179, 34182, 34184, 34185, 34186, 34187, 34188, 34189, 34190, 34192, 34193, 34194, 34195, 34196, 34197, 34198, 34199, 34200, 34201, 34202, 34205, 34206, 34207, 34208, 34209, 34210, 34211, 34213, 34214, 34215, 34217, 34219, 34220, 34221, 34225, 34226, 34227, 34228, 34229, 34230, 34232, 34234, 34235, 34236, 34237, 34238, 34239, 34240, 34242, 34243, 34244, 34245, 34246, 34247, 34248, 34250, 34251, 34252, 34253, 34254, 34257, 34258, 34260, 34262, 34263, 34264, 34265, 34266, 34267, 34269, 34270, 34271, 34272, 34273, 34274, 34275, 34277, 34278, 34279, 34280, 34282, 34283, 34284, 34285, 34286, 34287, 34288, 34289, 34290, 34291, 34292, 34293, 34294, 34295, 34296, 24661, 21047, 32781, 25684, 34928, 29993, 24069, 26643, 25332, 38684, 21452, 29245, 35841, 27700, 30561, 31246, 21550, 30636, 39034, 33308, 35828, 30805, 26388, 28865, 26031, 25749, 22070, 24605, 31169, 21496, 19997, 27515, 32902, 23546, 21987, 22235, 20282, 20284, 39282, 24051, 26494, 32824, 24578, 39042, 36865, 23435, 35772, 35829, 25628, 33368, 25822, 22013, 33487, 37221, 20439, 32032, 36895, 31903, 20723, 22609, 28335, 23487, 35785, 32899, 37240, 33948, 31639, 34429, 38539, 38543, 32485, 39635, 30862, 23681, 31319, 36930, 38567, 31071, 23385, 25439, 31499, 34001, 26797, 21766, 32553, 29712, 32034, 38145, 25152, 22604, 20182, 23427, 22905, 22612, 34297, 34298, 34300, 34301, 34302, 34304, 34305, 34306, 34307, 34308, 34310, 34311, 34312, 34313, 34314, 34315, 34316, 34317, 34318, 34319, 34320, 34322, 34323, 34324, 34325, 34327, 34328, 34329, 34330, 34331, 34332, 34333, 34334, 34335, 34336, 34337, 34338, 34339, 34340, 34341, 34342, 34344, 34346, 34347, 34348, 34349, 34350, 34351, 34352, 34353, 34354, 34355, 34356, 34357, 34358, 34359, 34361, 34362, 34363, 34365, 34366, 34367, 34368, 34369, 34370, 34371, 34372, 34373, 34374, 34375, 34376, 34377, 34378, 34379, 34380, 34386, 34387, 34389, 34390, 34391, 34392, 34393, 34395, 34396, 34397, 34399, 34400, 34401, 34403, 34404, 34405, 34406, 34407, 34408, 34409, 34410, 29549, 25374, 36427, 36367, 32974, 33492, 25260, 21488, 27888, 37214, 22826, 24577, 27760, 22349, 25674, 36138, 30251, 28393, 22363, 27264, 30192, 28525, 35885, 35848, 22374, 27631, 34962, 30899, 25506, 21497, 28845, 27748, 22616, 25642, 22530, 26848, 33179, 21776, 31958, 20504, 36538, 28108, 36255, 28907, 25487, 28059, 28372, 32486, 33796, 26691, 36867, 28120, 38518, 35752, 22871, 29305, 34276, 33150, 30140, 35466, 26799, 21076, 36386, 38161, 25552, 39064, 36420, 21884, 20307, 26367, 22159, 24789, 28053, 21059, 23625, 22825, 28155, 22635, 3e4, 29980, 24684, 33300, 33094, 25361, 26465, 36834, 30522, 36339, 36148, 38081, 24086, 21381, 21548, 28867, 34413, 34415, 34416, 34418, 34419, 34420, 34421, 34422, 34423, 34424, 34435, 34436, 34437, 34438, 34439, 34440, 34441, 34446, 34447, 34448, 34449, 34450, 34452, 34454, 34455, 34456, 34457, 34458, 34459, 34462, 34463, 34464, 34465, 34466, 34469, 34470, 34475, 34477, 34478, 34482, 34483, 34487, 34488, 34489, 34491, 34492, 34493, 34494, 34495, 34497, 34498, 34499, 34501, 34504, 34508, 34509, 34514, 34515, 34517, 34518, 34519, 34522, 34524, 34525, 34528, 34529, 34530, 34531, 34533, 34534, 34535, 34536, 34538, 34539, 34540, 34543, 34549, 34550, 34551, 34554, 34555, 34556, 34557, 34559, 34561, 34564, 34565, 34566, 34571, 34572, 34574, 34575, 34576, 34577, 34580, 34582, 27712, 24311, 20572, 20141, 24237, 25402, 33351, 36890, 26704, 37230, 30643, 21516, 38108, 24420, 31461, 26742, 25413, 31570, 32479, 30171, 20599, 25237, 22836, 36879, 20984, 31171, 31361, 22270, 24466, 36884, 28034, 23648, 22303, 21520, 20820, 28237, 22242, 25512, 39059, 33151, 34581, 35114, 36864, 21534, 23663, 33216, 25302, 25176, 33073, 40501, 38464, 39534, 39548, 26925, 22949, 25299, 21822, 25366, 21703, 34521, 27964, 23043, 29926, 34972, 27498, 22806, 35916, 24367, 28286, 29609, 39037, 20024, 28919, 23436, 30871, 25405, 26202, 30358, 24779, 23451, 23113, 19975, 33109, 27754, 29579, 20129, 26505, 32593, 24448, 26106, 26395, 24536, 22916, 23041, 34585, 34587, 34589, 34591, 34592, 34596, 34598, 34599, 34600, 34602, 34603, 34604, 34605, 34607, 34608, 34610, 34611, 34613, 34614, 34616, 34617, 34618, 34620, 34621, 34624, 34625, 34626, 34627, 34628, 34629, 34630, 34634, 34635, 34637, 34639, 34640, 34641, 34642, 34644, 34645, 34646, 34648, 34650, 34651, 34652, 34653, 34654, 34655, 34657, 34658, 34662, 34663, 34664, 34665, 34666, 34667, 34668, 34669, 34671, 34673, 34674, 34675, 34677, 34679, 34680, 34681, 34682, 34687, 34688, 34689, 34692, 34694, 34695, 34697, 34698, 34700, 34702, 34703, 34704, 34705, 34706, 34708, 34709, 34710, 34712, 34713, 34714, 34715, 34716, 34717, 34718, 34720, 34721, 34722, 34723, 34724, 24013, 24494, 21361, 38886, 36829, 26693, 22260, 21807, 24799, 20026, 28493, 32500, 33479, 33806, 22996, 20255, 20266, 23614, 32428, 26410, 34074, 21619, 30031, 32963, 21890, 39759, 20301, 28205, 35859, 23561, 24944, 21355, 30239, 28201, 34442, 25991, 38395, 32441, 21563, 31283, 32010, 38382, 21985, 32705, 29934, 25373, 34583, 28065, 31389, 25105, 26017, 21351, 25569, 27779, 24043, 21596, 38056, 20044, 27745, 35820, 23627, 26080, 33436, 26791, 21566, 21556, 27595, 27494, 20116, 25410, 21320, 33310, 20237, 20398, 22366, 25098, 38654, 26212, 29289, 21247, 21153, 24735, 35823, 26132, 29081, 26512, 35199, 30802, 30717, 26224, 22075, 21560, 38177, 29306, 34725, 34726, 34727, 34729, 34730, 34734, 34736, 34737, 34738, 34740, 34742, 34743, 34744, 34745, 34747, 34748, 34750, 34751, 34753, 34754, 34755, 34756, 34757, 34759, 34760, 34761, 34764, 34765, 34766, 34767, 34768, 34772, 34773, 34774, 34775, 34776, 34777, 34778, 34780, 34781, 34782, 34783, 34785, 34786, 34787, 34788, 34790, 34791, 34792, 34793, 34795, 34796, 34797, 34799, 34800, 34801, 34802, 34803, 34804, 34805, 34806, 34807, 34808, 34810, 34811, 34812, 34813, 34815, 34816, 34817, 34818, 34820, 34821, 34822, 34823, 34824, 34825, 34827, 34828, 34829, 34830, 34831, 34832, 34833, 34834, 34836, 34839, 34840, 34841, 34842, 34844, 34845, 34846, 34847, 34848, 34851, 31232, 24687, 24076, 24713, 33181, 22805, 24796, 29060, 28911, 28330, 27728, 29312, 27268, 34989, 24109, 20064, 23219, 21916, 38115, 27927, 31995, 38553, 25103, 32454, 30606, 34430, 21283, 38686, 36758, 26247, 23777, 20384, 29421, 19979, 21414, 22799, 21523, 25472, 38184, 20808, 20185, 40092, 32420, 21688, 36132, 34900, 33335, 38386, 28046, 24358, 23244, 26174, 38505, 29616, 29486, 21439, 33146, 39301, 32673, 23466, 38519, 38480, 32447, 30456, 21410, 38262, 39321, 31665, 35140, 28248, 20065, 32724, 31077, 35814, 24819, 21709, 20139, 39033, 24055, 27233, 20687, 21521, 35937, 33831, 30813, 38660, 21066, 21742, 22179, 38144, 28040, 23477, 28102, 26195, 34852, 34853, 34854, 34855, 34856, 34857, 34858, 34859, 34860, 34861, 34862, 34863, 34864, 34865, 34867, 34868, 34869, 34870, 34871, 34872, 34874, 34875, 34877, 34878, 34879, 34881, 34882, 34883, 34886, 34887, 34888, 34889, 34890, 34891, 34894, 34895, 34896, 34897, 34898, 34899, 34901, 34902, 34904, 34906, 34907, 34908, 34909, 34910, 34911, 34912, 34918, 34919, 34922, 34925, 34927, 34929, 34931, 34932, 34933, 34934, 34936, 34937, 34938, 34939, 34940, 34944, 34947, 34950, 34951, 34953, 34954, 34956, 34958, 34959, 34960, 34961, 34963, 34964, 34965, 34967, 34968, 34969, 34970, 34971, 34973, 34974, 34975, 34976, 34977, 34979, 34981, 34982, 34983, 34984, 34985, 34986, 23567, 23389, 26657, 32918, 21880, 31505, 25928, 26964, 20123, 27463, 34638, 38795, 21327, 25375, 25658, 37034, 26012, 32961, 35856, 20889, 26800, 21368, 34809, 25032, 27844, 27899, 35874, 23633, 34218, 33455, 38156, 27427, 36763, 26032, 24571, 24515, 20449, 34885, 26143, 33125, 29481, 24826, 20852, 21009, 22411, 24418, 37026, 34892, 37266, 24184, 26447, 24615, 22995, 20804, 20982, 33016, 21256, 27769, 38596, 29066, 20241, 20462, 32670, 26429, 21957, 38152, 31168, 34966, 32483, 22687, 25100, 38656, 34394, 22040, 39035, 24464, 35768, 33988, 37207, 21465, 26093, 24207, 30044, 24676, 32110, 23167, 32490, 32493, 36713, 21927, 23459, 24748, 26059, 29572, 34988, 34990, 34991, 34992, 34994, 34995, 34996, 34997, 34998, 35e3, 35001, 35002, 35003, 35005, 35006, 35007, 35008, 35011, 35012, 35015, 35016, 35018, 35019, 35020, 35021, 35023, 35024, 35025, 35027, 35030, 35031, 35034, 35035, 35036, 35037, 35038, 35040, 35041, 35046, 35047, 35049, 35050, 35051, 35052, 35053, 35054, 35055, 35058, 35061, 35062, 35063, 35066, 35067, 35069, 35071, 35072, 35073, 35075, 35076, 35077, 35078, 35079, 35080, 35081, 35083, 35084, 35085, 35086, 35087, 35089, 35092, 35093, 35094, 35095, 35096, 35100, 35101, 35102, 35103, 35104, 35106, 35107, 35108, 35110, 35111, 35112, 35113, 35116, 35117, 35118, 35119, 35121, 35122, 35123, 35125, 35127, 36873, 30307, 30505, 32474, 38772, 34203, 23398, 31348, 38634, 34880, 21195, 29071, 24490, 26092, 35810, 23547, 39535, 24033, 27529, 27739, 35757, 35759, 36874, 36805, 21387, 25276, 40486, 40493, 21568, 20011, 33469, 29273, 34460, 23830, 34905, 28079, 38597, 21713, 20122, 35766, 28937, 21693, 38409, 28895, 28153, 30416, 20005, 30740, 34578, 23721, 24310, 35328, 39068, 38414, 28814, 27839, 22852, 25513, 30524, 34893, 28436, 33395, 22576, 29141, 21388, 30746, 38593, 21761, 24422, 28976, 23476, 35866, 39564, 27523, 22830, 40495, 31207, 26472, 25196, 20335, 30113, 32650, 27915, 38451, 27687, 20208, 30162, 20859, 26679, 28478, 36992, 33136, 22934, 29814, 35128, 35129, 35130, 35131, 35132, 35133, 35134, 35135, 35136, 35138, 35139, 35141, 35142, 35143, 35144, 35145, 35146, 35147, 35148, 35149, 35150, 35151, 35152, 35153, 35154, 35155, 35156, 35157, 35158, 35159, 35160, 35161, 35162, 35163, 35164, 35165, 35168, 35169, 35170, 35171, 35172, 35173, 35175, 35176, 35177, 35178, 35179, 35180, 35181, 35182, 35183, 35184, 35185, 35186, 35187, 35188, 35189, 35190, 35191, 35192, 35193, 35194, 35196, 35197, 35198, 35200, 35202, 35204, 35205, 35207, 35208, 35209, 35210, 35211, 35212, 35213, 35214, 35215, 35216, 35217, 35218, 35219, 35220, 35221, 35222, 35223, 35224, 35225, 35226, 35227, 35228, 35229, 35230, 35231, 35232, 35233, 25671, 23591, 36965, 31377, 35875, 23002, 21676, 33280, 33647, 35201, 32768, 26928, 22094, 32822, 29239, 37326, 20918, 20063, 39029, 25494, 19994, 21494, 26355, 33099, 22812, 28082, 19968, 22777, 21307, 25558, 38129, 20381, 20234, 34915, 39056, 22839, 36951, 31227, 20202, 33008, 30097, 27778, 23452, 23016, 24413, 26885, 34433, 20506, 24050, 20057, 30691, 20197, 33402, 25233, 26131, 37009, 23673, 20159, 24441, 33222, 36920, 32900, 30123, 20134, 35028, 24847, 27589, 24518, 20041, 30410, 28322, 35811, 35758, 35850, 35793, 24322, 32764, 32716, 32462, 33589, 33643, 22240, 27575, 38899, 38452, 23035, 21535, 38134, 28139, 23493, 39278, 23609, 24341, 38544, 35234, 35235, 35236, 35237, 35238, 35239, 35240, 35241, 35242, 35243, 35244, 35245, 35246, 35247, 35248, 35249, 35250, 35251, 35252, 35253, 35254, 35255, 35256, 35257, 35258, 35259, 35260, 35261, 35262, 35263, 35264, 35267, 35277, 35283, 35284, 35285, 35287, 35288, 35289, 35291, 35293, 35295, 35296, 35297, 35298, 35300, 35303, 35304, 35305, 35306, 35308, 35309, 35310, 35312, 35313, 35314, 35316, 35317, 35318, 35319, 35320, 35321, 35322, 35323, 35324, 35325, 35326, 35327, 35329, 35330, 35331, 35332, 35333, 35334, 35336, 35337, 35338, 35339, 35340, 35341, 35342, 35343, 35344, 35345, 35346, 35347, 35348, 35349, 35350, 35351, 35352, 35353, 35354, 35355, 35356, 35357, 21360, 33521, 27185, 23156, 40560, 24212, 32552, 33721, 33828, 33829, 33639, 34631, 36814, 36194, 30408, 24433, 39062, 30828, 26144, 21727, 25317, 20323, 33219, 30152, 24248, 38605, 36362, 34553, 21647, 27891, 28044, 27704, 24703, 21191, 29992, 24189, 20248, 24736, 24551, 23588, 30001, 37038, 38080, 29369, 27833, 28216, 37193, 26377, 21451, 21491, 20305, 37321, 35825, 21448, 24188, 36802, 28132, 20110, 30402, 27014, 34398, 24858, 33286, 20313, 20446, 36926, 40060, 24841, 28189, 28180, 38533, 20104, 23089, 38632, 19982, 23679, 31161, 23431, 35821, 32701, 29577, 22495, 33419, 37057, 21505, 36935, 21947, 23786, 24481, 24840, 27442, 29425, 32946, 35465, 35358, 35359, 35360, 35361, 35362, 35363, 35364, 35365, 35366, 35367, 35368, 35369, 35370, 35371, 35372, 35373, 35374, 35375, 35376, 35377, 35378, 35379, 35380, 35381, 35382, 35383, 35384, 35385, 35386, 35387, 35388, 35389, 35391, 35392, 35393, 35394, 35395, 35396, 35397, 35398, 35399, 35401, 35402, 35403, 35404, 35405, 35406, 35407, 35408, 35409, 35410, 35411, 35412, 35413, 35414, 35415, 35416, 35417, 35418, 35419, 35420, 35421, 35422, 35423, 35424, 35425, 35426, 35427, 35428, 35429, 35430, 35431, 35432, 35433, 35434, 35435, 35436, 35437, 35438, 35439, 35440, 35441, 35442, 35443, 35444, 35445, 35446, 35447, 35448, 35450, 35451, 35452, 35453, 35454, 35455, 35456, 28020, 23507, 35029, 39044, 35947, 39533, 40499, 28170, 20900, 20803, 22435, 34945, 21407, 25588, 36757, 22253, 21592, 22278, 29503, 28304, 32536, 36828, 33489, 24895, 24616, 38498, 26352, 32422, 36234, 36291, 38053, 23731, 31908, 26376, 24742, 38405, 32792, 20113, 37095, 21248, 38504, 20801, 36816, 34164, 37213, 26197, 38901, 23381, 21277, 30776, 26434, 26685, 21705, 28798, 23472, 36733, 20877, 22312, 21681, 25874, 26242, 36190, 36163, 33039, 33900, 36973, 31967, 20991, 34299, 26531, 26089, 28577, 34468, 36481, 22122, 36896, 30338, 28790, 29157, 36131, 25321, 21017, 27901, 36156, 24590, 22686, 24974, 26366, 36192, 25166, 21939, 28195, 26413, 36711, 35457, 35458, 35459, 35460, 35461, 35462, 35463, 35464, 35467, 35468, 35469, 35470, 35471, 35472, 35473, 35474, 35476, 35477, 35478, 35479, 35480, 35481, 35482, 35483, 35484, 35485, 35486, 35487, 35488, 35489, 35490, 35491, 35492, 35493, 35494, 35495, 35496, 35497, 35498, 35499, 35500, 35501, 35502, 35503, 35504, 35505, 35506, 35507, 35508, 35509, 35510, 35511, 35512, 35513, 35514, 35515, 35516, 35517, 35518, 35519, 35520, 35521, 35522, 35523, 35524, 35525, 35526, 35527, 35528, 35529, 35530, 35531, 35532, 35533, 35534, 35535, 35536, 35537, 35538, 35539, 35540, 35541, 35542, 35543, 35544, 35545, 35546, 35547, 35548, 35549, 35550, 35551, 35552, 35553, 35554, 35555, 38113, 38392, 30504, 26629, 27048, 21643, 20045, 28856, 35784, 25688, 25995, 23429, 31364, 20538, 23528, 30651, 27617, 35449, 31896, 27838, 30415, 26025, 36759, 23853, 23637, 34360, 26632, 21344, 25112, 31449, 28251, 32509, 27167, 31456, 24432, 28467, 24352, 25484, 28072, 26454, 19976, 24080, 36134, 20183, 32960, 30260, 38556, 25307, 26157, 25214, 27836, 36213, 29031, 32617, 20806, 32903, 21484, 36974, 25240, 21746, 34544, 36761, 32773, 38167, 34071, 36825, 27993, 29645, 26015, 30495, 29956, 30759, 33275, 36126, 38024, 20390, 26517, 30137, 35786, 38663, 25391, 38215, 38453, 33976, 25379, 30529, 24449, 29424, 20105, 24596, 25972, 25327, 27491, 25919, 35556, 35557, 35558, 35559, 35560, 35561, 35562, 35563, 35564, 35565, 35566, 35567, 35568, 35569, 35570, 35571, 35572, 35573, 35574, 35575, 35576, 35577, 35578, 35579, 35580, 35581, 35582, 35583, 35584, 35585, 35586, 35587, 35588, 35589, 35590, 35592, 35593, 35594, 35595, 35596, 35597, 35598, 35599, 35600, 35601, 35602, 35603, 35604, 35605, 35606, 35607, 35608, 35609, 35610, 35611, 35612, 35613, 35614, 35615, 35616, 35617, 35618, 35619, 35620, 35621, 35623, 35624, 35625, 35626, 35627, 35628, 35629, 35630, 35631, 35632, 35633, 35634, 35635, 35636, 35637, 35638, 35639, 35640, 35641, 35642, 35643, 35644, 35645, 35646, 35647, 35648, 35649, 35650, 35651, 35652, 35653, 24103, 30151, 37073, 35777, 33437, 26525, 25903, 21553, 34584, 30693, 32930, 33026, 27713, 20043, 32455, 32844, 30452, 26893, 27542, 25191, 20540, 20356, 22336, 25351, 27490, 36286, 21482, 26088, 32440, 24535, 25370, 25527, 33267, 33268, 32622, 24092, 23769, 21046, 26234, 31209, 31258, 36136, 28825, 30164, 28382, 27835, 31378, 20013, 30405, 24544, 38047, 34935, 32456, 31181, 32959, 37325, 20210, 20247, 33311, 21608, 24030, 27954, 35788, 31909, 36724, 32920, 24090, 21650, 30385, 23449, 26172, 39588, 29664, 26666, 34523, 26417, 29482, 35832, 35803, 36880, 31481, 28891, 29038, 25284, 30633, 22065, 20027, 33879, 26609, 21161, 34496, 36142, 38136, 31569, 35654, 35655, 35656, 35657, 35658, 35659, 35660, 35661, 35662, 35663, 35664, 35665, 35666, 35667, 35668, 35669, 35670, 35671, 35672, 35673, 35674, 35675, 35676, 35677, 35678, 35679, 35680, 35681, 35682, 35683, 35684, 35685, 35687, 35688, 35689, 35690, 35691, 35693, 35694, 35695, 35696, 35697, 35698, 35699, 35700, 35701, 35702, 35703, 35704, 35705, 35706, 35707, 35708, 35709, 35710, 35711, 35712, 35713, 35714, 35715, 35716, 35717, 35718, 35719, 35720, 35721, 35722, 35723, 35724, 35725, 35726, 35727, 35728, 35729, 35730, 35731, 35732, 35733, 35734, 35735, 35736, 35737, 35738, 35739, 35740, 35741, 35742, 35743, 35756, 35761, 35771, 35783, 35792, 35818, 35849, 35870, 20303, 27880, 31069, 39547, 25235, 29226, 25341, 19987, 30742, 36716, 25776, 36186, 31686, 26729, 24196, 35013, 22918, 25758, 22766, 29366, 26894, 38181, 36861, 36184, 22368, 32512, 35846, 20934, 25417, 25305, 21331, 26700, 29730, 33537, 37196, 21828, 30528, 28796, 27978, 20857, 21672, 36164, 23039, 28363, 28100, 23388, 32043, 20180, 31869, 28371, 23376, 33258, 28173, 23383, 39683, 26837, 36394, 23447, 32508, 24635, 32437, 37049, 36208, 22863, 25549, 31199, 36275, 21330, 26063, 31062, 35781, 38459, 32452, 38075, 32386, 22068, 37257, 26368, 32618, 23562, 36981, 26152, 24038, 20304, 26590, 20570, 20316, 22352, 24231, 59408, 59409, 59410, 59411, 59412, 35896, 35897, 35898, 35899, 35900, 35901, 35902, 35903, 35904, 35906, 35907, 35908, 35909, 35912, 35914, 35915, 35917, 35918, 35919, 35920, 35921, 35922, 35923, 35924, 35926, 35927, 35928, 35929, 35931, 35932, 35933, 35934, 35935, 35936, 35939, 35940, 35941, 35942, 35943, 35944, 35945, 35948, 35949, 35950, 35951, 35952, 35953, 35954, 35956, 35957, 35958, 35959, 35963, 35964, 35965, 35966, 35967, 35968, 35969, 35971, 35972, 35974, 35975, 35976, 35979, 35981, 35982, 35983, 35984, 35985, 35986, 35987, 35989, 35990, 35991, 35993, 35994, 35995, 35996, 35997, 35998, 35999, 36e3, 36001, 36002, 36003, 36004, 36005, 36006, 36007, 36008, 36009, 36010, 36011, 36012, 36013, 20109, 19980, 20800, 19984, 24319, 21317, 19989, 20120, 19998, 39730, 23404, 22121, 20008, 31162, 20031, 21269, 20039, 22829, 29243, 21358, 27664, 22239, 32996, 39319, 27603, 30590, 40727, 20022, 20127, 40720, 20060, 20073, 20115, 33416, 23387, 21868, 22031, 20164, 21389, 21405, 21411, 21413, 21422, 38757, 36189, 21274, 21493, 21286, 21294, 21310, 36188, 21350, 21347, 20994, 21e3, 21006, 21037, 21043, 21055, 21056, 21068, 21086, 21089, 21084, 33967, 21117, 21122, 21121, 21136, 21139, 20866, 32596, 20155, 20163, 20169, 20162, 20200, 20193, 20203, 20190, 20251, 20211, 20258, 20324, 20213, 20261, 20263, 20233, 20267, 20318, 20327, 25912, 20314, 20317, 36014, 36015, 36016, 36017, 36018, 36019, 36020, 36021, 36022, 36023, 36024, 36025, 36026, 36027, 36028, 36029, 36030, 36031, 36032, 36033, 36034, 36035, 36036, 36037, 36038, 36039, 36040, 36041, 36042, 36043, 36044, 36045, 36046, 36047, 36048, 36049, 36050, 36051, 36052, 36053, 36054, 36055, 36056, 36057, 36058, 36059, 36060, 36061, 36062, 36063, 36064, 36065, 36066, 36067, 36068, 36069, 36070, 36071, 36072, 36073, 36074, 36075, 36076, 36077, 36078, 36079, 36080, 36081, 36082, 36083, 36084, 36085, 36086, 36087, 36088, 36089, 36090, 36091, 36092, 36093, 36094, 36095, 36096, 36097, 36098, 36099, 36100, 36101, 36102, 36103, 36104, 36105, 36106, 36107, 36108, 36109, 20319, 20311, 20274, 20285, 20342, 20340, 20369, 20361, 20355, 20367, 20350, 20347, 20394, 20348, 20396, 20372, 20454, 20456, 20458, 20421, 20442, 20451, 20444, 20433, 20447, 20472, 20521, 20556, 20467, 20524, 20495, 20526, 20525, 20478, 20508, 20492, 20517, 20520, 20606, 20547, 20565, 20552, 20558, 20588, 20603, 20645, 20647, 20649, 20666, 20694, 20742, 20717, 20716, 20710, 20718, 20743, 20747, 20189, 27709, 20312, 20325, 20430, 40864, 27718, 31860, 20846, 24061, 40649, 39320, 20865, 22804, 21241, 21261, 35335, 21264, 20971, 22809, 20821, 20128, 20822, 20147, 34926, 34980, 20149, 33044, 35026, 31104, 23348, 34819, 32696, 20907, 20913, 20925, 20924, 36110, 36111, 36112, 36113, 36114, 36115, 36116, 36117, 36118, 36119, 36120, 36121, 36122, 36123, 36124, 36128, 36177, 36178, 36183, 36191, 36197, 36200, 36201, 36202, 36204, 36206, 36207, 36209, 36210, 36216, 36217, 36218, 36219, 36220, 36221, 36222, 36223, 36224, 36226, 36227, 36230, 36231, 36232, 36233, 36236, 36237, 36238, 36239, 36240, 36242, 36243, 36245, 36246, 36247, 36248, 36249, 36250, 36251, 36252, 36253, 36254, 36256, 36257, 36258, 36260, 36261, 36262, 36263, 36264, 36265, 36266, 36267, 36268, 36269, 36270, 36271, 36272, 36274, 36278, 36279, 36281, 36283, 36285, 36288, 36289, 36290, 36293, 36295, 36296, 36297, 36298, 36301, 36304, 36306, 36307, 36308, 20935, 20886, 20898, 20901, 35744, 35750, 35751, 35754, 35764, 35765, 35767, 35778, 35779, 35787, 35791, 35790, 35794, 35795, 35796, 35798, 35800, 35801, 35804, 35807, 35808, 35812, 35816, 35817, 35822, 35824, 35827, 35830, 35833, 35836, 35839, 35840, 35842, 35844, 35847, 35852, 35855, 35857, 35858, 35860, 35861, 35862, 35865, 35867, 35864, 35869, 35871, 35872, 35873, 35877, 35879, 35882, 35883, 35886, 35887, 35890, 35891, 35893, 35894, 21353, 21370, 38429, 38434, 38433, 38449, 38442, 38461, 38460, 38466, 38473, 38484, 38495, 38503, 38508, 38514, 38516, 38536, 38541, 38551, 38576, 37015, 37019, 37021, 37017, 37036, 37025, 37044, 37043, 37046, 37050, 36309, 36312, 36313, 36316, 36320, 36321, 36322, 36325, 36326, 36327, 36329, 36333, 36334, 36336, 36337, 36338, 36340, 36342, 36348, 36350, 36351, 36352, 36353, 36354, 36355, 36356, 36358, 36359, 36360, 36363, 36365, 36366, 36368, 36369, 36370, 36371, 36373, 36374, 36375, 36376, 36377, 36378, 36379, 36380, 36384, 36385, 36388, 36389, 36390, 36391, 36392, 36395, 36397, 36400, 36402, 36403, 36404, 36406, 36407, 36408, 36411, 36412, 36414, 36415, 36419, 36421, 36422, 36428, 36429, 36430, 36431, 36432, 36435, 36436, 36437, 36438, 36439, 36440, 36442, 36443, 36444, 36445, 36446, 36447, 36448, 36449, 36450, 36451, 36452, 36453, 36455, 36456, 36458, 36459, 36462, 36465, 37048, 37040, 37071, 37061, 37054, 37072, 37060, 37063, 37075, 37094, 37090, 37084, 37079, 37083, 37099, 37103, 37118, 37124, 37154, 37150, 37155, 37169, 37167, 37177, 37187, 37190, 21005, 22850, 21154, 21164, 21165, 21182, 21759, 21200, 21206, 21232, 21471, 29166, 30669, 24308, 20981, 20988, 39727, 21430, 24321, 30042, 24047, 22348, 22441, 22433, 22654, 22716, 22725, 22737, 22313, 22316, 22314, 22323, 22329, 22318, 22319, 22364, 22331, 22338, 22377, 22405, 22379, 22406, 22396, 22395, 22376, 22381, 22390, 22387, 22445, 22436, 22412, 22450, 22479, 22439, 22452, 22419, 22432, 22485, 22488, 22490, 22489, 22482, 22456, 22516, 22511, 22520, 22500, 22493, 36467, 36469, 36471, 36472, 36473, 36474, 36475, 36477, 36478, 36480, 36482, 36483, 36484, 36486, 36488, 36489, 36490, 36491, 36492, 36493, 36494, 36497, 36498, 36499, 36501, 36502, 36503, 36504, 36505, 36506, 36507, 36509, 36511, 36512, 36513, 36514, 36515, 36516, 36517, 36518, 36519, 36520, 36521, 36522, 36525, 36526, 36528, 36529, 36531, 36532, 36533, 36534, 36535, 36536, 36537, 36539, 36540, 36541, 36542, 36543, 36544, 36545, 36546, 36547, 36548, 36549, 36550, 36551, 36552, 36553, 36554, 36555, 36556, 36557, 36559, 36560, 36561, 36562, 36563, 36564, 36565, 36566, 36567, 36568, 36569, 36570, 36571, 36572, 36573, 36574, 36575, 36576, 36577, 36578, 36579, 36580, 22539, 22541, 22525, 22509, 22528, 22558, 22553, 22596, 22560, 22629, 22636, 22657, 22665, 22682, 22656, 39336, 40729, 25087, 33401, 33405, 33407, 33423, 33418, 33448, 33412, 33422, 33425, 33431, 33433, 33451, 33464, 33470, 33456, 33480, 33482, 33507, 33432, 33463, 33454, 33483, 33484, 33473, 33449, 33460, 33441, 33450, 33439, 33476, 33486, 33444, 33505, 33545, 33527, 33508, 33551, 33543, 33500, 33524, 33490, 33496, 33548, 33531, 33491, 33553, 33562, 33542, 33556, 33557, 33504, 33493, 33564, 33617, 33627, 33628, 33544, 33682, 33596, 33588, 33585, 33691, 33630, 33583, 33615, 33607, 33603, 33631, 33600, 33559, 33632, 33581, 33594, 33587, 33638, 33637, 36581, 36582, 36583, 36584, 36585, 36586, 36587, 36588, 36589, 36590, 36591, 36592, 36593, 36594, 36595, 36596, 36597, 36598, 36599, 36600, 36601, 36602, 36603, 36604, 36605, 36606, 36607, 36608, 36609, 36610, 36611, 36612, 36613, 36614, 36615, 36616, 36617, 36618, 36619, 36620, 36621, 36622, 36623, 36624, 36625, 36626, 36627, 36628, 36629, 36630, 36631, 36632, 36633, 36634, 36635, 36636, 36637, 36638, 36639, 36640, 36641, 36642, 36643, 36644, 36645, 36646, 36647, 36648, 36649, 36650, 36651, 36652, 36653, 36654, 36655, 36656, 36657, 36658, 36659, 36660, 36661, 36662, 36663, 36664, 36665, 36666, 36667, 36668, 36669, 36670, 36671, 36672, 36673, 36674, 36675, 36676, 33640, 33563, 33641, 33644, 33642, 33645, 33646, 33712, 33656, 33715, 33716, 33696, 33706, 33683, 33692, 33669, 33660, 33718, 33705, 33661, 33720, 33659, 33688, 33694, 33704, 33722, 33724, 33729, 33793, 33765, 33752, 22535, 33816, 33803, 33757, 33789, 33750, 33820, 33848, 33809, 33798, 33748, 33759, 33807, 33795, 33784, 33785, 33770, 33733, 33728, 33830, 33776, 33761, 33884, 33873, 33882, 33881, 33907, 33927, 33928, 33914, 33929, 33912, 33852, 33862, 33897, 33910, 33932, 33934, 33841, 33901, 33985, 33997, 34e3, 34022, 33981, 34003, 33994, 33983, 33978, 34016, 33953, 33977, 33972, 33943, 34021, 34019, 34060, 29965, 34104, 34032, 34105, 34079, 34106, 36677, 36678, 36679, 36680, 36681, 36682, 36683, 36684, 36685, 36686, 36687, 36688, 36689, 36690, 36691, 36692, 36693, 36694, 36695, 36696, 36697, 36698, 36699, 36700, 36701, 36702, 36703, 36704, 36705, 36706, 36707, 36708, 36709, 36714, 36736, 36748, 36754, 36765, 36768, 36769, 36770, 36772, 36773, 36774, 36775, 36778, 36780, 36781, 36782, 36783, 36786, 36787, 36788, 36789, 36791, 36792, 36794, 36795, 36796, 36799, 36800, 36803, 36806, 36809, 36810, 36811, 36812, 36813, 36815, 36818, 36822, 36823, 36826, 36832, 36833, 36835, 36839, 36844, 36847, 36849, 36850, 36852, 36853, 36854, 36858, 36859, 36860, 36862, 36863, 36871, 36872, 36876, 36878, 36883, 36885, 36888, 34134, 34107, 34047, 34044, 34137, 34120, 34152, 34148, 34142, 34170, 30626, 34115, 34162, 34171, 34212, 34216, 34183, 34191, 34169, 34222, 34204, 34181, 34233, 34231, 34224, 34259, 34241, 34268, 34303, 34343, 34309, 34345, 34326, 34364, 24318, 24328, 22844, 22849, 32823, 22869, 22874, 22872, 21263, 23586, 23589, 23596, 23604, 25164, 25194, 25247, 25275, 25290, 25306, 25303, 25326, 25378, 25334, 25401, 25419, 25411, 25517, 25590, 25457, 25466, 25486, 25524, 25453, 25516, 25482, 25449, 25518, 25532, 25586, 25592, 25568, 25599, 25540, 25566, 25550, 25682, 25542, 25534, 25669, 25665, 25611, 25627, 25632, 25612, 25638, 25633, 25694, 25732, 25709, 25750, 36889, 36892, 36899, 36900, 36901, 36903, 36904, 36905, 36906, 36907, 36908, 36912, 36913, 36914, 36915, 36916, 36919, 36921, 36922, 36925, 36927, 36928, 36931, 36933, 36934, 36936, 36937, 36938, 36939, 36940, 36942, 36948, 36949, 36950, 36953, 36954, 36956, 36957, 36958, 36959, 36960, 36961, 36964, 36966, 36967, 36969, 36970, 36971, 36972, 36975, 36976, 36977, 36978, 36979, 36982, 36983, 36984, 36985, 36986, 36987, 36988, 36990, 36993, 36996, 36997, 36998, 36999, 37001, 37002, 37004, 37005, 37006, 37007, 37008, 37010, 37012, 37014, 37016, 37018, 37020, 37022, 37023, 37024, 37028, 37029, 37031, 37032, 37033, 37035, 37037, 37042, 37047, 37052, 37053, 37055, 37056, 25722, 25783, 25784, 25753, 25786, 25792, 25808, 25815, 25828, 25826, 25865, 25893, 25902, 24331, 24530, 29977, 24337, 21343, 21489, 21501, 21481, 21480, 21499, 21522, 21526, 21510, 21579, 21586, 21587, 21588, 21590, 21571, 21537, 21591, 21593, 21539, 21554, 21634, 21652, 21623, 21617, 21604, 21658, 21659, 21636, 21622, 21606, 21661, 21712, 21677, 21698, 21684, 21714, 21671, 21670, 21715, 21716, 21618, 21667, 21717, 21691, 21695, 21708, 21721, 21722, 21724, 21673, 21674, 21668, 21725, 21711, 21726, 21787, 21735, 21792, 21757, 21780, 21747, 21794, 21795, 21775, 21777, 21799, 21802, 21863, 21903, 21941, 21833, 21869, 21825, 21845, 21823, 21840, 21820, 37058, 37059, 37062, 37064, 37065, 37067, 37068, 37069, 37074, 37076, 37077, 37078, 37080, 37081, 37082, 37086, 37087, 37088, 37091, 37092, 37093, 37097, 37098, 37100, 37102, 37104, 37105, 37106, 37107, 37109, 37110, 37111, 37113, 37114, 37115, 37116, 37119, 37120, 37121, 37123, 37125, 37126, 37127, 37128, 37129, 37130, 37131, 37132, 37133, 37134, 37135, 37136, 37137, 37138, 37139, 37140, 37141, 37142, 37143, 37144, 37146, 37147, 37148, 37149, 37151, 37152, 37153, 37156, 37157, 37158, 37159, 37160, 37161, 37162, 37163, 37164, 37165, 37166, 37168, 37170, 37171, 37172, 37173, 37174, 37175, 37176, 37178, 37179, 37180, 37181, 37182, 37183, 37184, 37185, 37186, 37188, 21815, 21846, 21877, 21878, 21879, 21811, 21808, 21852, 21899, 21970, 21891, 21937, 21945, 21896, 21889, 21919, 21886, 21974, 21905, 21883, 21983, 21949, 21950, 21908, 21913, 21994, 22007, 21961, 22047, 21969, 21995, 21996, 21972, 21990, 21981, 21956, 21999, 21989, 22002, 22003, 21964, 21965, 21992, 22005, 21988, 36756, 22046, 22024, 22028, 22017, 22052, 22051, 22014, 22016, 22055, 22061, 22104, 22073, 22103, 22060, 22093, 22114, 22105, 22108, 22092, 22100, 22150, 22116, 22129, 22123, 22139, 22140, 22149, 22163, 22191, 22228, 22231, 22237, 22241, 22261, 22251, 22265, 22271, 22276, 22282, 22281, 22300, 24079, 24089, 24084, 24081, 24113, 24123, 24124, 37189, 37191, 37192, 37201, 37203, 37204, 37205, 37206, 37208, 37209, 37211, 37212, 37215, 37216, 37222, 37223, 37224, 37227, 37229, 37235, 37242, 37243, 37244, 37248, 37249, 37250, 37251, 37252, 37254, 37256, 37258, 37262, 37263, 37267, 37268, 37269, 37270, 37271, 37272, 37273, 37276, 37277, 37278, 37279, 37280, 37281, 37284, 37285, 37286, 37287, 37288, 37289, 37291, 37292, 37296, 37297, 37298, 37299, 37302, 37303, 37304, 37305, 37307, 37308, 37309, 37310, 37311, 37312, 37313, 37314, 37315, 37316, 37317, 37318, 37320, 37323, 37328, 37330, 37331, 37332, 37333, 37334, 37335, 37336, 37337, 37338, 37339, 37341, 37342, 37343, 37344, 37345, 37346, 37347, 37348, 37349, 24119, 24132, 24148, 24155, 24158, 24161, 23692, 23674, 23693, 23696, 23702, 23688, 23704, 23705, 23697, 23706, 23708, 23733, 23714, 23741, 23724, 23723, 23729, 23715, 23745, 23735, 23748, 23762, 23780, 23755, 23781, 23810, 23811, 23847, 23846, 23854, 23844, 23838, 23814, 23835, 23896, 23870, 23860, 23869, 23916, 23899, 23919, 23901, 23915, 23883, 23882, 23913, 23924, 23938, 23961, 23965, 35955, 23991, 24005, 24435, 24439, 24450, 24455, 24457, 24460, 24469, 24473, 24476, 24488, 24493, 24501, 24508, 34914, 24417, 29357, 29360, 29364, 29367, 29368, 29379, 29377, 29390, 29389, 29394, 29416, 29423, 29417, 29426, 29428, 29431, 29441, 29427, 29443, 29434, 37350, 37351, 37352, 37353, 37354, 37355, 37356, 37357, 37358, 37359, 37360, 37361, 37362, 37363, 37364, 37365, 37366, 37367, 37368, 37369, 37370, 37371, 37372, 37373, 37374, 37375, 37376, 37377, 37378, 37379, 37380, 37381, 37382, 37383, 37384, 37385, 37386, 37387, 37388, 37389, 37390, 37391, 37392, 37393, 37394, 37395, 37396, 37397, 37398, 37399, 37400, 37401, 37402, 37403, 37404, 37405, 37406, 37407, 37408, 37409, 37410, 37411, 37412, 37413, 37414, 37415, 37416, 37417, 37418, 37419, 37420, 37421, 37422, 37423, 37424, 37425, 37426, 37427, 37428, 37429, 37430, 37431, 37432, 37433, 37434, 37435, 37436, 37437, 37438, 37439, 37440, 37441, 37442, 37443, 37444, 37445, 29435, 29463, 29459, 29473, 29450, 29470, 29469, 29461, 29474, 29497, 29477, 29484, 29496, 29489, 29520, 29517, 29527, 29536, 29548, 29551, 29566, 33307, 22821, 39143, 22820, 22786, 39267, 39271, 39272, 39273, 39274, 39275, 39276, 39284, 39287, 39293, 39296, 39300, 39303, 39306, 39309, 39312, 39313, 39315, 39316, 39317, 24192, 24209, 24203, 24214, 24229, 24224, 24249, 24245, 24254, 24243, 36179, 24274, 24273, 24283, 24296, 24298, 33210, 24516, 24521, 24534, 24527, 24579, 24558, 24580, 24545, 24548, 24574, 24581, 24582, 24554, 24557, 24568, 24601, 24629, 24614, 24603, 24591, 24589, 24617, 24619, 24586, 24639, 24609, 24696, 24697, 24699, 24698, 24642, 37446, 37447, 37448, 37449, 37450, 37451, 37452, 37453, 37454, 37455, 37456, 37457, 37458, 37459, 37460, 37461, 37462, 37463, 37464, 37465, 37466, 37467, 37468, 37469, 37470, 37471, 37472, 37473, 37474, 37475, 37476, 37477, 37478, 37479, 37480, 37481, 37482, 37483, 37484, 37485, 37486, 37487, 37488, 37489, 37490, 37491, 37493, 37494, 37495, 37496, 37497, 37498, 37499, 37500, 37501, 37502, 37503, 37504, 37505, 37506, 37507, 37508, 37509, 37510, 37511, 37512, 37513, 37514, 37515, 37516, 37517, 37519, 37520, 37521, 37522, 37523, 37524, 37525, 37526, 37527, 37528, 37529, 37530, 37531, 37532, 37533, 37534, 37535, 37536, 37537, 37538, 37539, 37540, 37541, 37542, 37543, 24682, 24701, 24726, 24730, 24749, 24733, 24707, 24722, 24716, 24731, 24812, 24763, 24753, 24797, 24792, 24774, 24794, 24756, 24864, 24870, 24853, 24867, 24820, 24832, 24846, 24875, 24906, 24949, 25004, 24980, 24999, 25015, 25044, 25077, 24541, 38579, 38377, 38379, 38385, 38387, 38389, 38390, 38396, 38398, 38403, 38404, 38406, 38408, 38410, 38411, 38412, 38413, 38415, 38418, 38421, 38422, 38423, 38425, 38426, 20012, 29247, 25109, 27701, 27732, 27740, 27722, 27811, 27781, 27792, 27796, 27788, 27752, 27753, 27764, 27766, 27782, 27817, 27856, 27860, 27821, 27895, 27896, 27889, 27863, 27826, 27872, 27862, 27898, 27883, 27886, 27825, 27859, 27887, 27902, 37544, 37545, 37546, 37547, 37548, 37549, 37551, 37552, 37553, 37554, 37555, 37556, 37557, 37558, 37559, 37560, 37561, 37562, 37563, 37564, 37565, 37566, 37567, 37568, 37569, 37570, 37571, 37572, 37573, 37574, 37575, 37577, 37578, 37579, 37580, 37581, 37582, 37583, 37584, 37585, 37586, 37587, 37588, 37589, 37590, 37591, 37592, 37593, 37594, 37595, 37596, 37597, 37598, 37599, 37600, 37601, 37602, 37603, 37604, 37605, 37606, 37607, 37608, 37609, 37610, 37611, 37612, 37613, 37614, 37615, 37616, 37617, 37618, 37619, 37620, 37621, 37622, 37623, 37624, 37625, 37626, 37627, 37628, 37629, 37630, 37631, 37632, 37633, 37634, 37635, 37636, 37637, 37638, 37639, 37640, 37641, 27961, 27943, 27916, 27971, 27976, 27911, 27908, 27929, 27918, 27947, 27981, 27950, 27957, 27930, 27983, 27986, 27988, 27955, 28049, 28015, 28062, 28064, 27998, 28051, 28052, 27996, 28e3, 28028, 28003, 28186, 28103, 28101, 28126, 28174, 28095, 28128, 28177, 28134, 28125, 28121, 28182, 28075, 28172, 28078, 28203, 28270, 28238, 28267, 28338, 28255, 28294, 28243, 28244, 28210, 28197, 28228, 28383, 28337, 28312, 28384, 28461, 28386, 28325, 28327, 28349, 28347, 28343, 28375, 28340, 28367, 28303, 28354, 28319, 28514, 28486, 28487, 28452, 28437, 28409, 28463, 28470, 28491, 28532, 28458, 28425, 28457, 28553, 28557, 28556, 28536, 28530, 28540, 28538, 28625, 37642, 37643, 37644, 37645, 37646, 37647, 37648, 37649, 37650, 37651, 37652, 37653, 37654, 37655, 37656, 37657, 37658, 37659, 37660, 37661, 37662, 37663, 37664, 37665, 37666, 37667, 37668, 37669, 37670, 37671, 37672, 37673, 37674, 37675, 37676, 37677, 37678, 37679, 37680, 37681, 37682, 37683, 37684, 37685, 37686, 37687, 37688, 37689, 37690, 37691, 37692, 37693, 37695, 37696, 37697, 37698, 37699, 37700, 37701, 37702, 37703, 37704, 37705, 37706, 37707, 37708, 37709, 37710, 37711, 37712, 37713, 37714, 37715, 37716, 37717, 37718, 37719, 37720, 37721, 37722, 37723, 37724, 37725, 37726, 37727, 37728, 37729, 37730, 37731, 37732, 37733, 37734, 37735, 37736, 37737, 37739, 28617, 28583, 28601, 28598, 28610, 28641, 28654, 28638, 28640, 28655, 28698, 28707, 28699, 28729, 28725, 28751, 28766, 23424, 23428, 23445, 23443, 23461, 23480, 29999, 39582, 25652, 23524, 23534, 35120, 23536, 36423, 35591, 36790, 36819, 36821, 36837, 36846, 36836, 36841, 36838, 36851, 36840, 36869, 36868, 36875, 36902, 36881, 36877, 36886, 36897, 36917, 36918, 36909, 36911, 36932, 36945, 36946, 36944, 36968, 36952, 36962, 36955, 26297, 36980, 36989, 36994, 37e3, 36995, 37003, 24400, 24407, 24406, 24408, 23611, 21675, 23632, 23641, 23409, 23651, 23654, 32700, 24362, 24361, 24365, 33396, 24380, 39739, 23662, 22913, 22915, 22925, 22953, 22954, 22947, 37740, 37741, 37742, 37743, 37744, 37745, 37746, 37747, 37748, 37749, 37750, 37751, 37752, 37753, 37754, 37755, 37756, 37757, 37758, 37759, 37760, 37761, 37762, 37763, 37764, 37765, 37766, 37767, 37768, 37769, 37770, 37771, 37772, 37773, 37774, 37776, 37777, 37778, 37779, 37780, 37781, 37782, 37783, 37784, 37785, 37786, 37787, 37788, 37789, 37790, 37791, 37792, 37793, 37794, 37795, 37796, 37797, 37798, 37799, 37800, 37801, 37802, 37803, 37804, 37805, 37806, 37807, 37808, 37809, 37810, 37811, 37812, 37813, 37814, 37815, 37816, 37817, 37818, 37819, 37820, 37821, 37822, 37823, 37824, 37825, 37826, 37827, 37828, 37829, 37830, 37831, 37832, 37833, 37835, 37836, 37837, 22935, 22986, 22955, 22942, 22948, 22994, 22962, 22959, 22999, 22974, 23045, 23046, 23005, 23048, 23011, 23e3, 23033, 23052, 23049, 23090, 23092, 23057, 23075, 23059, 23104, 23143, 23114, 23125, 23100, 23138, 23157, 33004, 23210, 23195, 23159, 23162, 23230, 23275, 23218, 23250, 23252, 23224, 23264, 23267, 23281, 23254, 23270, 23256, 23260, 23305, 23319, 23318, 23346, 23351, 23360, 23573, 23580, 23386, 23397, 23411, 23377, 23379, 23394, 39541, 39543, 39544, 39546, 39551, 39549, 39552, 39553, 39557, 39560, 39562, 39568, 39570, 39571, 39574, 39576, 39579, 39580, 39581, 39583, 39584, 39586, 39587, 39589, 39591, 32415, 32417, 32419, 32421, 32424, 32425, 37838, 37839, 37840, 37841, 37842, 37843, 37844, 37845, 37847, 37848, 37849, 37850, 37851, 37852, 37853, 37854, 37855, 37856, 37857, 37858, 37859, 37860, 37861, 37862, 37863, 37864, 37865, 37866, 37867, 37868, 37869, 37870, 37871, 37872, 37873, 37874, 37875, 37876, 37877, 37878, 37879, 37880, 37881, 37882, 37883, 37884, 37885, 37886, 37887, 37888, 37889, 37890, 37891, 37892, 37893, 37894, 37895, 37896, 37897, 37898, 37899, 37900, 37901, 37902, 37903, 37904, 37905, 37906, 37907, 37908, 37909, 37910, 37911, 37912, 37913, 37914, 37915, 37916, 37917, 37918, 37919, 37920, 37921, 37922, 37923, 37924, 37925, 37926, 37927, 37928, 37929, 37930, 37931, 37932, 37933, 37934, 32429, 32432, 32446, 32448, 32449, 32450, 32457, 32459, 32460, 32464, 32468, 32471, 32475, 32480, 32481, 32488, 32491, 32494, 32495, 32497, 32498, 32525, 32502, 32506, 32507, 32510, 32513, 32514, 32515, 32519, 32520, 32523, 32524, 32527, 32529, 32530, 32535, 32537, 32540, 32539, 32543, 32545, 32546, 32547, 32548, 32549, 32550, 32551, 32554, 32555, 32556, 32557, 32559, 32560, 32561, 32562, 32563, 32565, 24186, 30079, 24027, 30014, 37013, 29582, 29585, 29614, 29602, 29599, 29647, 29634, 29649, 29623, 29619, 29632, 29641, 29640, 29669, 29657, 39036, 29706, 29673, 29671, 29662, 29626, 29682, 29711, 29738, 29787, 29734, 29733, 29736, 29744, 29742, 29740, 37935, 37936, 37937, 37938, 37939, 37940, 37941, 37942, 37943, 37944, 37945, 37946, 37947, 37948, 37949, 37951, 37952, 37953, 37954, 37955, 37956, 37957, 37958, 37959, 37960, 37961, 37962, 37963, 37964, 37965, 37966, 37967, 37968, 37969, 37970, 37971, 37972, 37973, 37974, 37975, 37976, 37977, 37978, 37979, 37980, 37981, 37982, 37983, 37984, 37985, 37986, 37987, 37988, 37989, 37990, 37991, 37992, 37993, 37994, 37996, 37997, 37998, 37999, 38e3, 38001, 38002, 38003, 38004, 38005, 38006, 38007, 38008, 38009, 38010, 38011, 38012, 38013, 38014, 38015, 38016, 38017, 38018, 38019, 38020, 38033, 38038, 38040, 38087, 38095, 38099, 38100, 38106, 38118, 38139, 38172, 38176, 29723, 29722, 29761, 29788, 29783, 29781, 29785, 29815, 29805, 29822, 29852, 29838, 29824, 29825, 29831, 29835, 29854, 29864, 29865, 29840, 29863, 29906, 29882, 38890, 38891, 38892, 26444, 26451, 26462, 26440, 26473, 26533, 26503, 26474, 26483, 26520, 26535, 26485, 26536, 26526, 26541, 26507, 26487, 26492, 26608, 26633, 26584, 26634, 26601, 26544, 26636, 26585, 26549, 26586, 26547, 26589, 26624, 26563, 26552, 26594, 26638, 26561, 26621, 26674, 26675, 26720, 26721, 26702, 26722, 26692, 26724, 26755, 26653, 26709, 26726, 26689, 26727, 26688, 26686, 26698, 26697, 26665, 26805, 26767, 26740, 26743, 26771, 26731, 26818, 26990, 26876, 26911, 26912, 26873, 38183, 38195, 38205, 38211, 38216, 38219, 38229, 38234, 38240, 38254, 38260, 38261, 38263, 38264, 38265, 38266, 38267, 38268, 38269, 38270, 38272, 38273, 38274, 38275, 38276, 38277, 38278, 38279, 38280, 38281, 38282, 38283, 38284, 38285, 38286, 38287, 38288, 38289, 38290, 38291, 38292, 38293, 38294, 38295, 38296, 38297, 38298, 38299, 38300, 38301, 38302, 38303, 38304, 38305, 38306, 38307, 38308, 38309, 38310, 38311, 38312, 38313, 38314, 38315, 38316, 38317, 38318, 38319, 38320, 38321, 38322, 38323, 38324, 38325, 38326, 38327, 38328, 38329, 38330, 38331, 38332, 38333, 38334, 38335, 38336, 38337, 38338, 38339, 38340, 38341, 38342, 38343, 38344, 38345, 38346, 38347, 26916, 26864, 26891, 26881, 26967, 26851, 26896, 26993, 26937, 26976, 26946, 26973, 27012, 26987, 27008, 27032, 27e3, 26932, 27084, 27015, 27016, 27086, 27017, 26982, 26979, 27001, 27035, 27047, 27067, 27051, 27053, 27092, 27057, 27073, 27082, 27103, 27029, 27104, 27021, 27135, 27183, 27117, 27159, 27160, 27237, 27122, 27204, 27198, 27296, 27216, 27227, 27189, 27278, 27257, 27197, 27176, 27224, 27260, 27281, 27280, 27305, 27287, 27307, 29495, 29522, 27521, 27522, 27527, 27524, 27538, 27539, 27533, 27546, 27547, 27553, 27562, 36715, 36717, 36721, 36722, 36723, 36725, 36726, 36728, 36727, 36729, 36730, 36732, 36734, 36737, 36738, 36740, 36743, 36747, 38348, 38349, 38350, 38351, 38352, 38353, 38354, 38355, 38356, 38357, 38358, 38359, 38360, 38361, 38362, 38363, 38364, 38365, 38366, 38367, 38368, 38369, 38370, 38371, 38372, 38373, 38374, 38375, 38380, 38399, 38407, 38419, 38424, 38427, 38430, 38432, 38435, 38436, 38437, 38438, 38439, 38440, 38441, 38443, 38444, 38445, 38447, 38448, 38455, 38456, 38457, 38458, 38462, 38465, 38467, 38474, 38478, 38479, 38481, 38482, 38483, 38486, 38487, 38488, 38489, 38490, 38492, 38493, 38494, 38496, 38499, 38501, 38502, 38507, 38509, 38510, 38511, 38512, 38513, 38515, 38520, 38521, 38522, 38523, 38524, 38525, 38526, 38527, 38528, 38529, 38530, 38531, 38532, 38535, 38537, 38538, 36749, 36750, 36751, 36760, 36762, 36558, 25099, 25111, 25115, 25119, 25122, 25121, 25125, 25124, 25132, 33255, 29935, 29940, 29951, 29967, 29969, 29971, 25908, 26094, 26095, 26096, 26122, 26137, 26482, 26115, 26133, 26112, 28805, 26359, 26141, 26164, 26161, 26166, 26165, 32774, 26207, 26196, 26177, 26191, 26198, 26209, 26199, 26231, 26244, 26252, 26279, 26269, 26302, 26331, 26332, 26342, 26345, 36146, 36147, 36150, 36155, 36157, 36160, 36165, 36166, 36168, 36169, 36167, 36173, 36181, 36185, 35271, 35274, 35275, 35276, 35278, 35279, 35280, 35281, 29294, 29343, 29277, 29286, 29295, 29310, 29311, 29316, 29323, 29325, 29327, 29330, 25352, 25394, 25520, 38540, 38542, 38545, 38546, 38547, 38549, 38550, 38554, 38555, 38557, 38558, 38559, 38560, 38561, 38562, 38563, 38564, 38565, 38566, 38568, 38569, 38570, 38571, 38572, 38573, 38574, 38575, 38577, 38578, 38580, 38581, 38583, 38584, 38586, 38587, 38591, 38594, 38595, 38600, 38602, 38603, 38608, 38609, 38611, 38612, 38614, 38615, 38616, 38617, 38618, 38619, 38620, 38621, 38622, 38623, 38625, 38626, 38627, 38628, 38629, 38630, 38631, 38635, 38636, 38637, 38638, 38640, 38641, 38642, 38644, 38645, 38648, 38650, 38651, 38652, 38653, 38655, 38658, 38659, 38661, 38666, 38667, 38668, 38672, 38673, 38674, 38676, 38677, 38679, 38680, 38681, 38682, 38683, 38685, 38687, 38688, 25663, 25816, 32772, 27626, 27635, 27645, 27637, 27641, 27653, 27655, 27654, 27661, 27669, 27672, 27673, 27674, 27681, 27689, 27684, 27690, 27698, 25909, 25941, 25963, 29261, 29266, 29270, 29232, 34402, 21014, 32927, 32924, 32915, 32956, 26378, 32957, 32945, 32939, 32941, 32948, 32951, 32999, 33e3, 33001, 33002, 32987, 32962, 32964, 32985, 32973, 32983, 26384, 32989, 33003, 33009, 33012, 33005, 33037, 33038, 33010, 33020, 26389, 33042, 35930, 33078, 33054, 33068, 33048, 33074, 33096, 33100, 33107, 33140, 33113, 33114, 33137, 33120, 33129, 33148, 33149, 33133, 33127, 22605, 23221, 33160, 33154, 33169, 28373, 33187, 33194, 33228, 26406, 33226, 33211, 38689, 38690, 38691, 38692, 38693, 38694, 38695, 38696, 38697, 38699, 38700, 38702, 38703, 38705, 38707, 38708, 38709, 38710, 38711, 38714, 38715, 38716, 38717, 38719, 38720, 38721, 38722, 38723, 38724, 38725, 38726, 38727, 38728, 38729, 38730, 38731, 38732, 38733, 38734, 38735, 38736, 38737, 38740, 38741, 38743, 38744, 38746, 38748, 38749, 38751, 38755, 38756, 38758, 38759, 38760, 38762, 38763, 38764, 38765, 38766, 38767, 38768, 38769, 38770, 38773, 38775, 38776, 38777, 38778, 38779, 38781, 38782, 38783, 38784, 38785, 38786, 38787, 38788, 38790, 38791, 38792, 38793, 38794, 38796, 38798, 38799, 38800, 38803, 38805, 38806, 38807, 38809, 38810, 38811, 38812, 38813, 33217, 33190, 27428, 27447, 27449, 27459, 27462, 27481, 39121, 39122, 39123, 39125, 39129, 39130, 27571, 24384, 27586, 35315, 26e3, 40785, 26003, 26044, 26054, 26052, 26051, 26060, 26062, 26066, 26070, 28800, 28828, 28822, 28829, 28859, 28864, 28855, 28843, 28849, 28904, 28874, 28944, 28947, 28950, 28975, 28977, 29043, 29020, 29032, 28997, 29042, 29002, 29048, 29050, 29080, 29107, 29109, 29096, 29088, 29152, 29140, 29159, 29177, 29213, 29224, 28780, 28952, 29030, 29113, 25150, 25149, 25155, 25160, 25161, 31035, 31040, 31046, 31049, 31067, 31068, 31059, 31066, 31074, 31063, 31072, 31087, 31079, 31098, 31109, 31114, 31130, 31143, 31155, 24529, 24528, 38814, 38815, 38817, 38818, 38820, 38821, 38822, 38823, 38824, 38825, 38826, 38828, 38830, 38832, 38833, 38835, 38837, 38838, 38839, 38840, 38841, 38842, 38843, 38844, 38845, 38846, 38847, 38848, 38849, 38850, 38851, 38852, 38853, 38854, 38855, 38856, 38857, 38858, 38859, 38860, 38861, 38862, 38863, 38864, 38865, 38866, 38867, 38868, 38869, 38870, 38871, 38872, 38873, 38874, 38875, 38876, 38877, 38878, 38879, 38880, 38881, 38882, 38883, 38884, 38885, 38888, 38894, 38895, 38896, 38897, 38898, 38900, 38903, 38904, 38905, 38906, 38907, 38908, 38909, 38910, 38911, 38912, 38913, 38914, 38915, 38916, 38917, 38918, 38919, 38920, 38921, 38922, 38923, 38924, 38925, 38926, 24636, 24669, 24666, 24679, 24641, 24665, 24675, 24747, 24838, 24845, 24925, 25001, 24989, 25035, 25041, 25094, 32896, 32895, 27795, 27894, 28156, 30710, 30712, 30720, 30729, 30743, 30744, 30737, 26027, 30765, 30748, 30749, 30777, 30778, 30779, 30751, 30780, 30757, 30764, 30755, 30761, 30798, 30829, 30806, 30807, 30758, 30800, 30791, 30796, 30826, 30875, 30867, 30874, 30855, 30876, 30881, 30883, 30898, 30905, 30885, 30932, 30937, 30921, 30956, 30962, 30981, 30964, 30995, 31012, 31006, 31028, 40859, 40697, 40699, 40700, 30449, 30468, 30477, 30457, 30471, 30472, 30490, 30498, 30489, 30509, 30502, 30517, 30520, 30544, 30545, 30535, 30531, 30554, 30568, 38927, 38928, 38929, 38930, 38931, 38932, 38933, 38934, 38935, 38936, 38937, 38938, 38939, 38940, 38941, 38942, 38943, 38944, 38945, 38946, 38947, 38948, 38949, 38950, 38951, 38952, 38953, 38954, 38955, 38956, 38957, 38958, 38959, 38960, 38961, 38962, 38963, 38964, 38965, 38966, 38967, 38968, 38969, 38970, 38971, 38972, 38973, 38974, 38975, 38976, 38977, 38978, 38979, 38980, 38981, 38982, 38983, 38984, 38985, 38986, 38987, 38988, 38989, 38990, 38991, 38992, 38993, 38994, 38995, 38996, 38997, 38998, 38999, 39e3, 39001, 39002, 39003, 39004, 39005, 39006, 39007, 39008, 39009, 39010, 39011, 39012, 39013, 39014, 39015, 39016, 39017, 39018, 39019, 39020, 39021, 39022, 30562, 30565, 30591, 30605, 30589, 30592, 30604, 30609, 30623, 30624, 30640, 30645, 30653, 30010, 30016, 30030, 30027, 30024, 30043, 30066, 30073, 30083, 32600, 32609, 32607, 35400, 32616, 32628, 32625, 32633, 32641, 32638, 30413, 30437, 34866, 38021, 38022, 38023, 38027, 38026, 38028, 38029, 38031, 38032, 38036, 38039, 38037, 38042, 38043, 38044, 38051, 38052, 38059, 38058, 38061, 38060, 38063, 38064, 38066, 38068, 38070, 38071, 38072, 38073, 38074, 38076, 38077, 38079, 38084, 38088, 38089, 38090, 38091, 38092, 38093, 38094, 38096, 38097, 38098, 38101, 38102, 38103, 38105, 38104, 38107, 38110, 38111, 38112, 38114, 38116, 38117, 38119, 38120, 38122, 39023, 39024, 39025, 39026, 39027, 39028, 39051, 39054, 39058, 39061, 39065, 39075, 39080, 39081, 39082, 39083, 39084, 39085, 39086, 39087, 39088, 39089, 39090, 39091, 39092, 39093, 39094, 39095, 39096, 39097, 39098, 39099, 39100, 39101, 39102, 39103, 39104, 39105, 39106, 39107, 39108, 39109, 39110, 39111, 39112, 39113, 39114, 39115, 39116, 39117, 39119, 39120, 39124, 39126, 39127, 39131, 39132, 39133, 39136, 39137, 39138, 39139, 39140, 39141, 39142, 39145, 39146, 39147, 39148, 39149, 39150, 39151, 39152, 39153, 39154, 39155, 39156, 39157, 39158, 39159, 39160, 39161, 39162, 39163, 39164, 39165, 39166, 39167, 39168, 39169, 39170, 39171, 39172, 39173, 39174, 39175, 38121, 38123, 38126, 38127, 38131, 38132, 38133, 38135, 38137, 38140, 38141, 38143, 38147, 38146, 38150, 38151, 38153, 38154, 38157, 38158, 38159, 38162, 38163, 38164, 38165, 38166, 38168, 38171, 38173, 38174, 38175, 38178, 38186, 38187, 38185, 38188, 38193, 38194, 38196, 38198, 38199, 38200, 38204, 38206, 38207, 38210, 38197, 38212, 38213, 38214, 38217, 38220, 38222, 38223, 38226, 38227, 38228, 38230, 38231, 38232, 38233, 38235, 38238, 38239, 38237, 38241, 38242, 38244, 38245, 38246, 38247, 38248, 38249, 38250, 38251, 38252, 38255, 38257, 38258, 38259, 38202, 30695, 30700, 38601, 31189, 31213, 31203, 31211, 31238, 23879, 31235, 31234, 31262, 31252, 39176, 39177, 39178, 39179, 39180, 39182, 39183, 39185, 39186, 39187, 39188, 39189, 39190, 39191, 39192, 39193, 39194, 39195, 39196, 39197, 39198, 39199, 39200, 39201, 39202, 39203, 39204, 39205, 39206, 39207, 39208, 39209, 39210, 39211, 39212, 39213, 39215, 39216, 39217, 39218, 39219, 39220, 39221, 39222, 39223, 39224, 39225, 39226, 39227, 39228, 39229, 39230, 39231, 39232, 39233, 39234, 39235, 39236, 39237, 39238, 39239, 39240, 39241, 39242, 39243, 39244, 39245, 39246, 39247, 39248, 39249, 39250, 39251, 39254, 39255, 39256, 39257, 39258, 39259, 39260, 39261, 39262, 39263, 39264, 39265, 39266, 39268, 39270, 39283, 39288, 39289, 39291, 39294, 39298, 39299, 39305, 31289, 31287, 31313, 40655, 39333, 31344, 30344, 30350, 30355, 30361, 30372, 29918, 29920, 29996, 40480, 40482, 40488, 40489, 40490, 40491, 40492, 40498, 40497, 40502, 40504, 40503, 40505, 40506, 40510, 40513, 40514, 40516, 40518, 40519, 40520, 40521, 40523, 40524, 40526, 40529, 40533, 40535, 40538, 40539, 40540, 40542, 40547, 40550, 40551, 40552, 40553, 40554, 40555, 40556, 40561, 40557, 40563, 30098, 30100, 30102, 30112, 30109, 30124, 30115, 30131, 30132, 30136, 30148, 30129, 30128, 30147, 30146, 30166, 30157, 30179, 30184, 30182, 30180, 30187, 30183, 30211, 30193, 30204, 30207, 30224, 30208, 30213, 30220, 30231, 30218, 30245, 30232, 30229, 30233, 39308, 39310, 39322, 39323, 39324, 39325, 39326, 39327, 39328, 39329, 39330, 39331, 39332, 39334, 39335, 39337, 39338, 39339, 39340, 39341, 39342, 39343, 39344, 39345, 39346, 39347, 39348, 39349, 39350, 39351, 39352, 39353, 39354, 39355, 39356, 39357, 39358, 39359, 39360, 39361, 39362, 39363, 39364, 39365, 39366, 39367, 39368, 39369, 39370, 39371, 39372, 39373, 39374, 39375, 39376, 39377, 39378, 39379, 39380, 39381, 39382, 39383, 39384, 39385, 39386, 39387, 39388, 39389, 39390, 39391, 39392, 39393, 39394, 39395, 39396, 39397, 39398, 39399, 39400, 39401, 39402, 39403, 39404, 39405, 39406, 39407, 39408, 39409, 39410, 39411, 39412, 39413, 39414, 39415, 39416, 39417, 30235, 30268, 30242, 30240, 30272, 30253, 30256, 30271, 30261, 30275, 30270, 30259, 30285, 30302, 30292, 30300, 30294, 30315, 30319, 32714, 31462, 31352, 31353, 31360, 31366, 31368, 31381, 31398, 31392, 31404, 31400, 31405, 31411, 34916, 34921, 34930, 34941, 34943, 34946, 34978, 35014, 34999, 35004, 35017, 35042, 35022, 35043, 35045, 35057, 35098, 35068, 35048, 35070, 35056, 35105, 35097, 35091, 35099, 35082, 35124, 35115, 35126, 35137, 35174, 35195, 30091, 32997, 30386, 30388, 30684, 32786, 32788, 32790, 32796, 32800, 32802, 32805, 32806, 32807, 32809, 32808, 32817, 32779, 32821, 32835, 32838, 32845, 32850, 32873, 32881, 35203, 39032, 39040, 39043, 39418, 39419, 39420, 39421, 39422, 39423, 39424, 39425, 39426, 39427, 39428, 39429, 39430, 39431, 39432, 39433, 39434, 39435, 39436, 39437, 39438, 39439, 39440, 39441, 39442, 39443, 39444, 39445, 39446, 39447, 39448, 39449, 39450, 39451, 39452, 39453, 39454, 39455, 39456, 39457, 39458, 39459, 39460, 39461, 39462, 39463, 39464, 39465, 39466, 39467, 39468, 39469, 39470, 39471, 39472, 39473, 39474, 39475, 39476, 39477, 39478, 39479, 39480, 39481, 39482, 39483, 39484, 39485, 39486, 39487, 39488, 39489, 39490, 39491, 39492, 39493, 39494, 39495, 39496, 39497, 39498, 39499, 39500, 39501, 39502, 39503, 39504, 39505, 39506, 39507, 39508, 39509, 39510, 39511, 39512, 39513, 39049, 39052, 39053, 39055, 39060, 39066, 39067, 39070, 39071, 39073, 39074, 39077, 39078, 34381, 34388, 34412, 34414, 34431, 34426, 34428, 34427, 34472, 34445, 34443, 34476, 34461, 34471, 34467, 34474, 34451, 34473, 34486, 34500, 34485, 34510, 34480, 34490, 34481, 34479, 34505, 34511, 34484, 34537, 34545, 34546, 34541, 34547, 34512, 34579, 34526, 34548, 34527, 34520, 34513, 34563, 34567, 34552, 34568, 34570, 34573, 34569, 34595, 34619, 34590, 34597, 34606, 34586, 34622, 34632, 34612, 34609, 34601, 34615, 34623, 34690, 34594, 34685, 34686, 34683, 34656, 34672, 34636, 34670, 34699, 34643, 34659, 34684, 34660, 34649, 34661, 34707, 34735, 34728, 34770, 39514, 39515, 39516, 39517, 39518, 39519, 39520, 39521, 39522, 39523, 39524, 39525, 39526, 39527, 39528, 39529, 39530, 39531, 39538, 39555, 39561, 39565, 39566, 39572, 39573, 39577, 39590, 39593, 39594, 39595, 39596, 39597, 39598, 39599, 39602, 39603, 39604, 39605, 39609, 39611, 39613, 39614, 39615, 39619, 39620, 39622, 39623, 39624, 39625, 39626, 39629, 39630, 39631, 39632, 39634, 39636, 39637, 39638, 39639, 39641, 39642, 39643, 39644, 39645, 39646, 39648, 39650, 39651, 39652, 39653, 39655, 39656, 39657, 39658, 39660, 39662, 39664, 39665, 39666, 39667, 39668, 39669, 39670, 39671, 39672, 39674, 39676, 39677, 39678, 39679, 39680, 39681, 39682, 39684, 39685, 39686, 34758, 34696, 34693, 34733, 34711, 34691, 34731, 34789, 34732, 34741, 34739, 34763, 34771, 34749, 34769, 34752, 34762, 34779, 34794, 34784, 34798, 34838, 34835, 34814, 34826, 34843, 34849, 34873, 34876, 32566, 32578, 32580, 32581, 33296, 31482, 31485, 31496, 31491, 31492, 31509, 31498, 31531, 31503, 31559, 31544, 31530, 31513, 31534, 31537, 31520, 31525, 31524, 31539, 31550, 31518, 31576, 31578, 31557, 31605, 31564, 31581, 31584, 31598, 31611, 31586, 31602, 31601, 31632, 31654, 31655, 31672, 31660, 31645, 31656, 31621, 31658, 31644, 31650, 31659, 31668, 31697, 31681, 31692, 31709, 31706, 31717, 31718, 31722, 31756, 31742, 31740, 31759, 31766, 31755, 39687, 39689, 39690, 39691, 39692, 39693, 39694, 39696, 39697, 39698, 39700, 39701, 39702, 39703, 39704, 39705, 39706, 39707, 39708, 39709, 39710, 39712, 39713, 39714, 39716, 39717, 39718, 39719, 39720, 39721, 39722, 39723, 39724, 39725, 39726, 39728, 39729, 39731, 39732, 39733, 39734, 39735, 39736, 39737, 39738, 39741, 39742, 39743, 39744, 39750, 39754, 39755, 39756, 39758, 39760, 39762, 39763, 39765, 39766, 39767, 39768, 39769, 39770, 39771, 39772, 39773, 39774, 39775, 39776, 39777, 39778, 39779, 39780, 39781, 39782, 39783, 39784, 39785, 39786, 39787, 39788, 39789, 39790, 39791, 39792, 39793, 39794, 39795, 39796, 39797, 39798, 39799, 39800, 39801, 39802, 39803, 31775, 31786, 31782, 31800, 31809, 31808, 33278, 33281, 33282, 33284, 33260, 34884, 33313, 33314, 33315, 33325, 33327, 33320, 33323, 33336, 33339, 33331, 33332, 33342, 33348, 33353, 33355, 33359, 33370, 33375, 33384, 34942, 34949, 34952, 35032, 35039, 35166, 32669, 32671, 32679, 32687, 32688, 32690, 31868, 25929, 31889, 31901, 31900, 31902, 31906, 31922, 31932, 31933, 31937, 31943, 31948, 31949, 31944, 31941, 31959, 31976, 33390, 26280, 32703, 32718, 32725, 32741, 32737, 32742, 32745, 32750, 32755, 31992, 32119, 32166, 32174, 32327, 32411, 40632, 40628, 36211, 36228, 36244, 36241, 36273, 36199, 36205, 35911, 35913, 37194, 37200, 37198, 37199, 37220, 39804, 39805, 39806, 39807, 39808, 39809, 39810, 39811, 39812, 39813, 39814, 39815, 39816, 39817, 39818, 39819, 39820, 39821, 39822, 39823, 39824, 39825, 39826, 39827, 39828, 39829, 39830, 39831, 39832, 39833, 39834, 39835, 39836, 39837, 39838, 39839, 39840, 39841, 39842, 39843, 39844, 39845, 39846, 39847, 39848, 39849, 39850, 39851, 39852, 39853, 39854, 39855, 39856, 39857, 39858, 39859, 39860, 39861, 39862, 39863, 39864, 39865, 39866, 39867, 39868, 39869, 39870, 39871, 39872, 39873, 39874, 39875, 39876, 39877, 39878, 39879, 39880, 39881, 39882, 39883, 39884, 39885, 39886, 39887, 39888, 39889, 39890, 39891, 39892, 39893, 39894, 39895, 39896, 39897, 39898, 39899, 37218, 37217, 37232, 37225, 37231, 37245, 37246, 37234, 37236, 37241, 37260, 37253, 37264, 37261, 37265, 37282, 37283, 37290, 37293, 37294, 37295, 37301, 37300, 37306, 35925, 40574, 36280, 36331, 36357, 36441, 36457, 36277, 36287, 36284, 36282, 36292, 36310, 36311, 36314, 36318, 36302, 36303, 36315, 36294, 36332, 36343, 36344, 36323, 36345, 36347, 36324, 36361, 36349, 36372, 36381, 36383, 36396, 36398, 36387, 36399, 36410, 36416, 36409, 36405, 36413, 36401, 36425, 36417, 36418, 36433, 36434, 36426, 36464, 36470, 36476, 36463, 36468, 36485, 36495, 36500, 36496, 36508, 36510, 35960, 35970, 35978, 35973, 35992, 35988, 26011, 35286, 35294, 35290, 35292, 39900, 39901, 39902, 39903, 39904, 39905, 39906, 39907, 39908, 39909, 39910, 39911, 39912, 39913, 39914, 39915, 39916, 39917, 39918, 39919, 39920, 39921, 39922, 39923, 39924, 39925, 39926, 39927, 39928, 39929, 39930, 39931, 39932, 39933, 39934, 39935, 39936, 39937, 39938, 39939, 39940, 39941, 39942, 39943, 39944, 39945, 39946, 39947, 39948, 39949, 39950, 39951, 39952, 39953, 39954, 39955, 39956, 39957, 39958, 39959, 39960, 39961, 39962, 39963, 39964, 39965, 39966, 39967, 39968, 39969, 39970, 39971, 39972, 39973, 39974, 39975, 39976, 39977, 39978, 39979, 39980, 39981, 39982, 39983, 39984, 39985, 39986, 39987, 39988, 39989, 39990, 39991, 39992, 39993, 39994, 39995, 35301, 35307, 35311, 35390, 35622, 38739, 38633, 38643, 38639, 38662, 38657, 38664, 38671, 38670, 38698, 38701, 38704, 38718, 40832, 40835, 40837, 40838, 40839, 40840, 40841, 40842, 40844, 40702, 40715, 40717, 38585, 38588, 38589, 38606, 38610, 30655, 38624, 37518, 37550, 37576, 37694, 37738, 37834, 37775, 37950, 37995, 40063, 40066, 40069, 40070, 40071, 40072, 31267, 40075, 40078, 40080, 40081, 40082, 40084, 40085, 40090, 40091, 40094, 40095, 40096, 40097, 40098, 40099, 40101, 40102, 40103, 40104, 40105, 40107, 40109, 40110, 40112, 40113, 40114, 40115, 40116, 40117, 40118, 40119, 40122, 40123, 40124, 40125, 40132, 40133, 40134, 40135, 40138, 40139, 39996, 39997, 39998, 39999, 4e4, 40001, 40002, 40003, 40004, 40005, 40006, 40007, 40008, 40009, 40010, 40011, 40012, 40013, 40014, 40015, 40016, 40017, 40018, 40019, 40020, 40021, 40022, 40023, 40024, 40025, 40026, 40027, 40028, 40029, 40030, 40031, 40032, 40033, 40034, 40035, 40036, 40037, 40038, 40039, 40040, 40041, 40042, 40043, 40044, 40045, 40046, 40047, 40048, 40049, 40050, 40051, 40052, 40053, 40054, 40055, 40056, 40057, 40058, 40059, 40061, 40062, 40064, 40067, 40068, 40073, 40074, 40076, 40079, 40083, 40086, 40087, 40088, 40089, 40093, 40106, 40108, 40111, 40121, 40126, 40127, 40128, 40129, 40130, 40136, 40137, 40145, 40146, 40154, 40155, 40160, 40161, 40140, 40141, 40142, 40143, 40144, 40147, 40148, 40149, 40151, 40152, 40153, 40156, 40157, 40159, 40162, 38780, 38789, 38801, 38802, 38804, 38831, 38827, 38819, 38834, 38836, 39601, 39600, 39607, 40536, 39606, 39610, 39612, 39617, 39616, 39621, 39618, 39627, 39628, 39633, 39749, 39747, 39751, 39753, 39752, 39757, 39761, 39144, 39181, 39214, 39253, 39252, 39647, 39649, 39654, 39663, 39659, 39675, 39661, 39673, 39688, 39695, 39699, 39711, 39715, 40637, 40638, 32315, 40578, 40583, 40584, 40587, 40594, 37846, 40605, 40607, 40667, 40668, 40669, 40672, 40671, 40674, 40681, 40679, 40677, 40682, 40687, 40738, 40748, 40751, 40761, 40759, 40765, 40766, 40772, 40163, 40164, 40165, 40166, 40167, 40168, 40169, 40170, 40171, 40172, 40173, 40174, 40175, 40176, 40177, 40178, 40179, 40180, 40181, 40182, 40183, 40184, 40185, 40186, 40187, 40188, 40189, 40190, 40191, 40192, 40193, 40194, 40195, 40196, 40197, 40198, 40199, 40200, 40201, 40202, 40203, 40204, 40205, 40206, 40207, 40208, 40209, 40210, 40211, 40212, 40213, 40214, 40215, 40216, 40217, 40218, 40219, 40220, 40221, 40222, 40223, 40224, 40225, 40226, 40227, 40228, 40229, 40230, 40231, 40232, 40233, 40234, 40235, 40236, 40237, 40238, 40239, 40240, 40241, 40242, 40243, 40244, 40245, 40246, 40247, 40248, 40249, 40250, 40251, 40252, 40253, 40254, 40255, 40256, 40257, 40258, 57908, 57909, 57910, 57911, 57912, 57913, 57914, 57915, 57916, 57917, 57918, 57919, 57920, 57921, 57922, 57923, 57924, 57925, 57926, 57927, 57928, 57929, 57930, 57931, 57932, 57933, 57934, 57935, 57936, 57937, 57938, 57939, 57940, 57941, 57942, 57943, 57944, 57945, 57946, 57947, 57948, 57949, 57950, 57951, 57952, 57953, 57954, 57955, 57956, 57957, 57958, 57959, 57960, 57961, 57962, 57963, 57964, 57965, 57966, 57967, 57968, 57969, 57970, 57971, 57972, 57973, 57974, 57975, 57976, 57977, 57978, 57979, 57980, 57981, 57982, 57983, 57984, 57985, 57986, 57987, 57988, 57989, 57990, 57991, 57992, 57993, 57994, 57995, 57996, 57997, 57998, 57999, 58e3, 58001, 40259, 40260, 40261, 40262, 40263, 40264, 40265, 40266, 40267, 40268, 40269, 40270, 40271, 40272, 40273, 40274, 40275, 40276, 40277, 40278, 40279, 40280, 40281, 40282, 40283, 40284, 40285, 40286, 40287, 40288, 40289, 40290, 40291, 40292, 40293, 40294, 40295, 40296, 40297, 40298, 40299, 40300, 40301, 40302, 40303, 40304, 40305, 40306, 40307, 40308, 40309, 40310, 40311, 40312, 40313, 40314, 40315, 40316, 40317, 40318, 40319, 40320, 40321, 40322, 40323, 40324, 40325, 40326, 40327, 40328, 40329, 40330, 40331, 40332, 40333, 40334, 40335, 40336, 40337, 40338, 40339, 40340, 40341, 40342, 40343, 40344, 40345, 40346, 40347, 40348, 40349, 40350, 40351, 40352, 40353, 40354, 58002, 58003, 58004, 58005, 58006, 58007, 58008, 58009, 58010, 58011, 58012, 58013, 58014, 58015, 58016, 58017, 58018, 58019, 58020, 58021, 58022, 58023, 58024, 58025, 58026, 58027, 58028, 58029, 58030, 58031, 58032, 58033, 58034, 58035, 58036, 58037, 58038, 58039, 58040, 58041, 58042, 58043, 58044, 58045, 58046, 58047, 58048, 58049, 58050, 58051, 58052, 58053, 58054, 58055, 58056, 58057, 58058, 58059, 58060, 58061, 58062, 58063, 58064, 58065, 58066, 58067, 58068, 58069, 58070, 58071, 58072, 58073, 58074, 58075, 58076, 58077, 58078, 58079, 58080, 58081, 58082, 58083, 58084, 58085, 58086, 58087, 58088, 58089, 58090, 58091, 58092, 58093, 58094, 58095, 40355, 40356, 40357, 40358, 40359, 40360, 40361, 40362, 40363, 40364, 40365, 40366, 40367, 40368, 40369, 40370, 40371, 40372, 40373, 40374, 40375, 40376, 40377, 40378, 40379, 40380, 40381, 40382, 40383, 40384, 40385, 40386, 40387, 40388, 40389, 40390, 40391, 40392, 40393, 40394, 40395, 40396, 40397, 40398, 40399, 40400, 40401, 40402, 40403, 40404, 40405, 40406, 40407, 40408, 40409, 40410, 40411, 40412, 40413, 40414, 40415, 40416, 40417, 40418, 40419, 40420, 40421, 40422, 40423, 40424, 40425, 40426, 40427, 40428, 40429, 40430, 40431, 40432, 40433, 40434, 40435, 40436, 40437, 40438, 40439, 40440, 40441, 40442, 40443, 40444, 40445, 40446, 40447, 40448, 40449, 40450, 58096, 58097, 58098, 58099, 58100, 58101, 58102, 58103, 58104, 58105, 58106, 58107, 58108, 58109, 58110, 58111, 58112, 58113, 58114, 58115, 58116, 58117, 58118, 58119, 58120, 58121, 58122, 58123, 58124, 58125, 58126, 58127, 58128, 58129, 58130, 58131, 58132, 58133, 58134, 58135, 58136, 58137, 58138, 58139, 58140, 58141, 58142, 58143, 58144, 58145, 58146, 58147, 58148, 58149, 58150, 58151, 58152, 58153, 58154, 58155, 58156, 58157, 58158, 58159, 58160, 58161, 58162, 58163, 58164, 58165, 58166, 58167, 58168, 58169, 58170, 58171, 58172, 58173, 58174, 58175, 58176, 58177, 58178, 58179, 58180, 58181, 58182, 58183, 58184, 58185, 58186, 58187, 58188, 58189, 40451, 40452, 40453, 40454, 40455, 40456, 40457, 40458, 40459, 40460, 40461, 40462, 40463, 40464, 40465, 40466, 40467, 40468, 40469, 40470, 40471, 40472, 40473, 40474, 40475, 40476, 40477, 40478, 40484, 40487, 40494, 40496, 40500, 40507, 40508, 40512, 40525, 40528, 40530, 40531, 40532, 40534, 40537, 40541, 40543, 40544, 40545, 40546, 40549, 40558, 40559, 40562, 40564, 40565, 40566, 40567, 40568, 40569, 40570, 40571, 40572, 40573, 40576, 40577, 40579, 40580, 40581, 40582, 40585, 40586, 40588, 40589, 40590, 40591, 40592, 40593, 40596, 40597, 40598, 40599, 40600, 40601, 40602, 40603, 40604, 40606, 40608, 40609, 40610, 40611, 40612, 40613, 40615, 40616, 40617, 40618, 58190, 58191, 58192, 58193, 58194, 58195, 58196, 58197, 58198, 58199, 58200, 58201, 58202, 58203, 58204, 58205, 58206, 58207, 58208, 58209, 58210, 58211, 58212, 58213, 58214, 58215, 58216, 58217, 58218, 58219, 58220, 58221, 58222, 58223, 58224, 58225, 58226, 58227, 58228, 58229, 58230, 58231, 58232, 58233, 58234, 58235, 58236, 58237, 58238, 58239, 58240, 58241, 58242, 58243, 58244, 58245, 58246, 58247, 58248, 58249, 58250, 58251, 58252, 58253, 58254, 58255, 58256, 58257, 58258, 58259, 58260, 58261, 58262, 58263, 58264, 58265, 58266, 58267, 58268, 58269, 58270, 58271, 58272, 58273, 58274, 58275, 58276, 58277, 58278, 58279, 58280, 58281, 58282, 58283, 40619, 40620, 40621, 40622, 40623, 40624, 40625, 40626, 40627, 40629, 40630, 40631, 40633, 40634, 40636, 40639, 40640, 40641, 40642, 40643, 40645, 40646, 40647, 40648, 40650, 40651, 40652, 40656, 40658, 40659, 40661, 40662, 40663, 40665, 40666, 40670, 40673, 40675, 40676, 40678, 40680, 40683, 40684, 40685, 40686, 40688, 40689, 40690, 40691, 40692, 40693, 40694, 40695, 40696, 40698, 40701, 40703, 40704, 40705, 40706, 40707, 40708, 40709, 40710, 40711, 40712, 40713, 40714, 40716, 40719, 40721, 40722, 40724, 40725, 40726, 40728, 40730, 40731, 40732, 40733, 40734, 40735, 40737, 40739, 40740, 40741, 40742, 40743, 40744, 40745, 40746, 40747, 40749, 40750, 40752, 40753, 58284, 58285, 58286, 58287, 58288, 58289, 58290, 58291, 58292, 58293, 58294, 58295, 58296, 58297, 58298, 58299, 58300, 58301, 58302, 58303, 58304, 58305, 58306, 58307, 58308, 58309, 58310, 58311, 58312, 58313, 58314, 58315, 58316, 58317, 58318, 58319, 58320, 58321, 58322, 58323, 58324, 58325, 58326, 58327, 58328, 58329, 58330, 58331, 58332, 58333, 58334, 58335, 58336, 58337, 58338, 58339, 58340, 58341, 58342, 58343, 58344, 58345, 58346, 58347, 58348, 58349, 58350, 58351, 58352, 58353, 58354, 58355, 58356, 58357, 58358, 58359, 58360, 58361, 58362, 58363, 58364, 58365, 58366, 58367, 58368, 58369, 58370, 58371, 58372, 58373, 58374, 58375, 58376, 58377, 40754, 40755, 40756, 40757, 40758, 40760, 40762, 40764, 40767, 40768, 40769, 40770, 40771, 40773, 40774, 40775, 40776, 40777, 40778, 40779, 40780, 40781, 40782, 40783, 40786, 40787, 40788, 40789, 40790, 40791, 40792, 40793, 40794, 40795, 40796, 40797, 40798, 40799, 40800, 40801, 40802, 40803, 40804, 40805, 40806, 40807, 40808, 40809, 40810, 40811, 40812, 40813, 40814, 40815, 40816, 40817, 40818, 40819, 40820, 40821, 40822, 40823, 40824, 40825, 40826, 40827, 40828, 40829, 40830, 40833, 40834, 40845, 40846, 40847, 40848, 40849, 40850, 40851, 40852, 40853, 40854, 40855, 40856, 40860, 40861, 40862, 40865, 40866, 40867, 40868, 40869, 63788, 63865, 63893, 63975, 63985, 58378, 58379, 58380, 58381, 58382, 58383, 58384, 58385, 58386, 58387, 58388, 58389, 58390, 58391, 58392, 58393, 58394, 58395, 58396, 58397, 58398, 58399, 58400, 58401, 58402, 58403, 58404, 58405, 58406, 58407, 58408, 58409, 58410, 58411, 58412, 58413, 58414, 58415, 58416, 58417, 58418, 58419, 58420, 58421, 58422, 58423, 58424, 58425, 58426, 58427, 58428, 58429, 58430, 58431, 58432, 58433, 58434, 58435, 58436, 58437, 58438, 58439, 58440, 58441, 58442, 58443, 58444, 58445, 58446, 58447, 58448, 58449, 58450, 58451, 58452, 58453, 58454, 58455, 58456, 58457, 58458, 58459, 58460, 58461, 58462, 58463, 58464, 58465, 58466, 58467, 58468, 58469, 58470, 58471, 64012, 64013, 64014, 64015, 64017, 64019, 64020, 64024, 64031, 64032, 64033, 64035, 64036, 64039, 64040, 64041, 11905, 59414, 59415, 59416, 11908, 13427, 13383, 11912, 11915, 59422, 13726, 13850, 13838, 11916, 11927, 14702, 14616, 59430, 14799, 14815, 14963, 14800, 59435, 59436, 15182, 15470, 15584, 11943, 59441, 59442, 11946, 16470, 16735, 11950, 17207, 11955, 11958, 11959, 59451, 17329, 17324, 11963, 17373, 17622, 18017, 17996, 59459, 18211, 18217, 18300, 18317, 11978, 18759, 18810, 18813, 18818, 18819, 18821, 18822, 18847, 18843, 18871, 18870, 59476, 59477, 19619, 19615, 19616, 19617, 19575, 19618, 19731, 19732, 19733, 19734, 19735, 19736, 19737, 19886, 59492, 58472, 58473, 58474, 58475, 58476, 58477, 58478, 58479, 58480, 58481, 58482, 58483, 58484, 58485, 58486, 58487, 58488, 58489, 58490, 58491, 58492, 58493, 58494, 58495, 58496, 58497, 58498, 58499, 58500, 58501, 58502, 58503, 58504, 58505, 58506, 58507, 58508, 58509, 58510, 58511, 58512, 58513, 58514, 58515, 58516, 58517, 58518, 58519, 58520, 58521, 58522, 58523, 58524, 58525, 58526, 58527, 58528, 58529, 58530, 58531, 58532, 58533, 58534, 58535, 58536, 58537, 58538, 58539, 58540, 58541, 58542, 58543, 58544, 58545, 58546, 58547, 58548, 58549, 58550, 58551, 58552, 58553, 58554, 58555, 58556, 58557, 58558, 58559, 58560, 58561, 58562, 58563, 58564, 58565],
    "gb18030-ranges": [[0, 128], [36, 165], [38, 169], [45, 178], [50, 184], [81, 216], [89, 226], [95, 235], [96, 238], [100, 244], [103, 248], [104, 251], [105, 253], [109, 258], [126, 276], [133, 284], [148, 300], [172, 325], [175, 329], [179, 334], [208, 364], [306, 463], [307, 465], [308, 467], [309, 469], [310, 471], [311, 473], [312, 475], [313, 477], [341, 506], [428, 594], [443, 610], [544, 712], [545, 716], [558, 730], [741, 930], [742, 938], [749, 962], [750, 970], [805, 1026], [819, 1104], [820, 1106], [7922, 8209], [7924, 8215], [7925, 8218], [7927, 8222], [7934, 8231], [7943, 8241], [7944, 8244], [7945, 8246], [7950, 8252], [8062, 8365], [8148, 8452], [8149, 8454], [8152, 8458], [8164, 8471], [8174, 8482], [8236, 8556], [8240, 8570], [8262, 8596], [8264, 8602], [8374, 8713], [8380, 8720], [8381, 8722], [8384, 8726], [8388, 8731], [8390, 8737], [8392, 8740], [8393, 8742], [8394, 8748], [8396, 8751], [8401, 8760], [8406, 8766], [8416, 8777], [8419, 8781], [8424, 8787], [8437, 8802], [8439, 8808], [8445, 8816], [8482, 8854], [8485, 8858], [8496, 8870], [8521, 8896], [8603, 8979], [8936, 9322], [8946, 9372], [9046, 9548], [9050, 9588], [9063, 9616], [9066, 9622], [9076, 9634], [9092, 9652], [9100, 9662], [9108, 9672], [9111, 9676], [9113, 9680], [9131, 9702], [9162, 9735], [9164, 9738], [9218, 9793], [9219, 9795], [11329, 11906], [11331, 11909], [11334, 11913], [11336, 11917], [11346, 11928], [11361, 11944], [11363, 11947], [11366, 11951], [11370, 11956], [11372, 11960], [11375, 11964], [11389, 11979], [11682, 12284], [11686, 12292], [11687, 12312], [11692, 12319], [11694, 12330], [11714, 12351], [11716, 12436], [11723, 12447], [11725, 12535], [11730, 12543], [11736, 12586], [11982, 12842], [11989, 12850], [12102, 12964], [12336, 13200], [12348, 13215], [12350, 13218], [12384, 13253], [12393, 13263], [12395, 13267], [12397, 13270], [12510, 13384], [12553, 13428], [12851, 13727], [12962, 13839], [12973, 13851], [13738, 14617], [13823, 14703], [13919, 14801], [13933, 14816], [14080, 14964], [14298, 15183], [14585, 15471], [14698, 15585], [15583, 16471], [15847, 16736], [16318, 17208], [16434, 17325], [16438, 17330], [16481, 17374], [16729, 17623], [17102, 17997], [17122, 18018], [17315, 18212], [17320, 18218], [17402, 18301], [17418, 18318], [17859, 18760], [17909, 18811], [17911, 18814], [17915, 18820], [17916, 18823], [17936, 18844], [17939, 18848], [17961, 18872], [18664, 19576], [18703, 19620], [18814, 19738], [18962, 19887], [19043, 40870], [33469, 59244], [33470, 59336], [33471, 59367], [33484, 59413], [33485, 59417], [33490, 59423], [33497, 59431], [33501, 59437], [33505, 59443], [33513, 59452], [33520, 59460], [33536, 59478], [33550, 59493], [37845, 63789], [37921, 63866], [37948, 63894], [38029, 63976], [38038, 63986], [38064, 64016], [38065, 64018], [38066, 64021], [38069, 64025], [38075, 64034], [38076, 64037], [38078, 64042], [39108, 65074], [39109, 65093], [39113, 65107], [39114, 65112], [39115, 65127], [39116, 65132], [39265, 65375], [39394, 65510], [189e3, 65536]],
    "jis0208": [12288, 12289, 12290, 65292, 65294, 12539, 65306, 65307, 65311, 65281, 12443, 12444, 180, 65344, 168, 65342, 65507, 65343, 12541, 12542, 12445, 12446, 12291, 20189, 12293, 12294, 12295, 12540, 8213, 8208, 65295, 65340, 65374, 8741, 65372, 8230, 8229, 8216, 8217, 8220, 8221, 65288, 65289, 12308, 12309, 65339, 65341, 65371, 65373, 12296, 12297, 12298, 12299, 12300, 12301, 12302, 12303, 12304, 12305, 65291, 65293, 177, 215, 247, 65309, 8800, 65308, 65310, 8806, 8807, 8734, 8756, 9794, 9792, 176, 8242, 8243, 8451, 65509, 65284, 65504, 65505, 65285, 65283, 65286, 65290, 65312, 167, 9734, 9733, 9675, 9679, 9678, 9671, 9670, 9633, 9632, 9651, 9650, 9661, 9660, 8251, 12306, 8594, 8592, 8593, 8595, 12307, null, null, null, null, null, null, null, null, null, null, null, 8712, 8715, 8838, 8839, 8834, 8835, 8746, 8745, null, null, null, null, null, null, null, null, 8743, 8744, 65506, 8658, 8660, 8704, 8707, null, null, null, null, null, null, null, null, null, null, null, 8736, 8869, 8978, 8706, 8711, 8801, 8786, 8810, 8811, 8730, 8765, 8733, 8757, 8747, 8748, null, null, null, null, null, null, null, 8491, 8240, 9839, 9837, 9834, 8224, 8225, 182, null, null, null, null, 9711, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 65296, 65297, 65298, 65299, 65300, 65301, 65302, 65303, 65304, 65305, null, null, null, null, null, null, null, 65313, 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322, 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331, 65332, 65333, 65334, 65335, 65336, 65337, 65338, null, null, null, null, null, null, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352, 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361, 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, null, null, null, null, 12353, 12354, 12355, 12356, 12357, 12358, 12359, 12360, 12361, 12362, 12363, 12364, 12365, 12366, 12367, 12368, 12369, 12370, 12371, 12372, 12373, 12374, 12375, 12376, 12377, 12378, 12379, 12380, 12381, 12382, 12383, 12384, 12385, 12386, 12387, 12388, 12389, 12390, 12391, 12392, 12393, 12394, 12395, 12396, 12397, 12398, 12399, 12400, 12401, 12402, 12403, 12404, 12405, 12406, 12407, 12408, 12409, 12410, 12411, 12412, 12413, 12414, 12415, 12416, 12417, 12418, 12419, 12420, 12421, 12422, 12423, 12424, 12425, 12426, 12427, 12428, 12429, 12430, 12431, 12432, 12433, 12434, 12435, null, null, null, null, null, null, null, null, null, null, null, 12449, 12450, 12451, 12452, 12453, 12454, 12455, 12456, 12457, 12458, 12459, 12460, 12461, 12462, 12463, 12464, 12465, 12466, 12467, 12468, 12469, 12470, 12471, 12472, 12473, 12474, 12475, 12476, 12477, 12478, 12479, 12480, 12481, 12482, 12483, 12484, 12485, 12486, 12487, 12488, 12489, 12490, 12491, 12492, 12493, 12494, 12495, 12496, 12497, 12498, 12499, 12500, 12501, 12502, 12503, 12504, 12505, 12506, 12507, 12508, 12509, 12510, 12511, 12512, 12513, 12514, 12515, 12516, 12517, 12518, 12519, 12520, 12521, 12522, 12523, 12524, 12525, 12526, 12527, 12528, 12529, 12530, 12531, 12532, 12533, 12534, null, null, null, null, null, null, null, null, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, null, null, null, null, null, null, null, null, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 967, 968, 969, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1040, 1041, 1042, 1043, 1044, 1045, 1025, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1072, 1073, 1074, 1075, 1076, 1077, 1105, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, null, null, null, null, null, null, null, null, null, null, null, null, null, 9472, 9474, 9484, 9488, 9496, 9492, 9500, 9516, 9508, 9524, 9532, 9473, 9475, 9487, 9491, 9499, 9495, 9507, 9523, 9515, 9531, 9547, 9504, 9519, 9512, 9527, 9535, 9501, 9520, 9509, 9528, 9538, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, null, 13129, 13076, 13090, 13133, 13080, 13095, 13059, 13110, 13137, 13143, 13069, 13094, 13091, 13099, 13130, 13115, 13212, 13213, 13214, 13198, 13199, 13252, 13217, null, null, null, null, null, null, null, null, 13179, 12317, 12319, 8470, 13261, 8481, 12964, 12965, 12966, 12967, 12968, 12849, 12850, 12857, 13182, 13181, 13180, 8786, 8801, 8747, 8750, 8721, 8730, 8869, 8736, 8735, 8895, 8757, 8745, 8746, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 20124, 21782, 23043, 38463, 21696, 24859, 25384, 23030, 36898, 33909, 33564, 31312, 24746, 25569, 28197, 26093, 33894, 33446, 39925, 26771, 22311, 26017, 25201, 23451, 22992, 34427, 39156, 32098, 32190, 39822, 25110, 31903, 34999, 23433, 24245, 25353, 26263, 26696, 38343, 38797, 26447, 20197, 20234, 20301, 20381, 20553, 22258, 22839, 22996, 23041, 23561, 24799, 24847, 24944, 26131, 26885, 28858, 30031, 30064, 31227, 32173, 32239, 32963, 33806, 34915, 35586, 36949, 36986, 21307, 20117, 20133, 22495, 32946, 37057, 30959, 19968, 22769, 28322, 36920, 31282, 33576, 33419, 39983, 20801, 21360, 21693, 21729, 22240, 23035, 24341, 39154, 28139, 32996, 34093, 38498, 38512, 38560, 38907, 21515, 21491, 23431, 28879, 32701, 36802, 38632, 21359, 40284, 31418, 19985, 30867, 33276, 28198, 22040, 21764, 27421, 34074, 39995, 23013, 21417, 28006, 29916, 38287, 22082, 20113, 36939, 38642, 33615, 39180, 21473, 21942, 23344, 24433, 26144, 26355, 26628, 27704, 27891, 27945, 29787, 30408, 31310, 38964, 33521, 34907, 35424, 37613, 28082, 30123, 30410, 39365, 24742, 35585, 36234, 38322, 27022, 21421, 20870, 22290, 22576, 22852, 23476, 24310, 24616, 25513, 25588, 27839, 28436, 28814, 28948, 29017, 29141, 29503, 32257, 33398, 33489, 34199, 36960, 37467, 40219, 22633, 26044, 27738, 29989, 20985, 22830, 22885, 24448, 24540, 25276, 26106, 27178, 27431, 27572, 29579, 32705, 35158, 40236, 40206, 40644, 23713, 27798, 33659, 20740, 23627, 25014, 33222, 26742, 29281, 20057, 20474, 21368, 24681, 28201, 31311, 38899, 19979, 21270, 20206, 20309, 20285, 20385, 20339, 21152, 21487, 22025, 22799, 23233, 23478, 23521, 31185, 26247, 26524, 26550, 27468, 27827, 28779, 29634, 31117, 31166, 31292, 31623, 33457, 33499, 33540, 33655, 33775, 33747, 34662, 35506, 22057, 36008, 36838, 36942, 38686, 34442, 20420, 23784, 25105, 29273, 30011, 33253, 33469, 34558, 36032, 38597, 39187, 39381, 20171, 20250, 35299, 22238, 22602, 22730, 24315, 24555, 24618, 24724, 24674, 25040, 25106, 25296, 25913, 39745, 26214, 26800, 28023, 28784, 30028, 30342, 32117, 33445, 34809, 38283, 38542, 35997, 20977, 21182, 22806, 21683, 23475, 23830, 24936, 27010, 28079, 30861, 33995, 34903, 35442, 37799, 39608, 28012, 39336, 34521, 22435, 26623, 34510, 37390, 21123, 22151, 21508, 24275, 25313, 25785, 26684, 26680, 27579, 29554, 30906, 31339, 35226, 35282, 36203, 36611, 37101, 38307, 38548, 38761, 23398, 23731, 27005, 38989, 38990, 25499, 31520, 27179, 27263, 26806, 39949, 28511, 21106, 21917, 24688, 25324, 27963, 28167, 28369, 33883, 35088, 36676, 19988, 39993, 21494, 26907, 27194, 38788, 26666, 20828, 31427, 33970, 37340, 37772, 22107, 40232, 26658, 33541, 33841, 31909, 21e3, 33477, 29926, 20094, 20355, 20896, 23506, 21002, 21208, 21223, 24059, 21914, 22570, 23014, 23436, 23448, 23515, 24178, 24185, 24739, 24863, 24931, 25022, 25563, 25954, 26577, 26707, 26874, 27454, 27475, 27735, 28450, 28567, 28485, 29872, 29976, 30435, 30475, 31487, 31649, 31777, 32233, 32566, 32752, 32925, 33382, 33694, 35251, 35532, 36011, 36996, 37969, 38291, 38289, 38306, 38501, 38867, 39208, 33304, 20024, 21547, 23736, 24012, 29609, 30284, 30524, 23721, 32747, 36107, 38593, 38929, 38996, 39e3, 20225, 20238, 21361, 21916, 22120, 22522, 22855, 23305, 23492, 23696, 24076, 24190, 24524, 25582, 26426, 26071, 26082, 26399, 26827, 26820, 27231, 24112, 27589, 27671, 27773, 30079, 31048, 23395, 31232, 32e3, 24509, 35215, 35352, 36020, 36215, 36556, 36637, 39138, 39438, 39740, 20096, 20605, 20736, 22931, 23452, 25135, 25216, 25836, 27450, 29344, 30097, 31047, 32681, 34811, 35516, 35696, 25516, 33738, 38816, 21513, 21507, 21931, 26708, 27224, 35440, 30759, 26485, 40653, 21364, 23458, 33050, 34384, 36870, 19992, 20037, 20167, 20241, 21450, 21560, 23470, 24339, 24613, 25937, 26429, 27714, 27762, 27875, 28792, 29699, 31350, 31406, 31496, 32026, 31998, 32102, 26087, 29275, 21435, 23621, 24040, 25298, 25312, 25369, 28192, 34394, 35377, 36317, 37624, 28417, 31142, 39770, 20136, 20139, 20140, 20379, 20384, 20689, 20807, 31478, 20849, 20982, 21332, 21281, 21375, 21483, 21932, 22659, 23777, 24375, 24394, 24623, 24656, 24685, 25375, 25945, 27211, 27841, 29378, 29421, 30703, 33016, 33029, 33288, 34126, 37111, 37857, 38911, 39255, 39514, 20208, 20957, 23597, 26241, 26989, 23616, 26354, 26997, 29577, 26704, 31873, 20677, 21220, 22343, 24062, 37670, 26020, 27427, 27453, 29748, 31105, 31165, 31563, 32202, 33465, 33740, 34943, 35167, 35641, 36817, 37329, 21535, 37504, 20061, 20534, 21477, 21306, 29399, 29590, 30697, 33510, 36527, 39366, 39368, 39378, 20855, 24858, 34398, 21936, 31354, 20598, 23507, 36935, 38533, 20018, 27355, 37351, 23633, 23624, 25496, 31391, 27795, 38772, 36705, 31402, 29066, 38536, 31874, 26647, 32368, 26705, 37740, 21234, 21531, 34219, 35347, 32676, 36557, 37089, 21350, 34952, 31041, 20418, 20670, 21009, 20804, 21843, 22317, 29674, 22411, 22865, 24418, 24452, 24693, 24950, 24935, 25001, 25522, 25658, 25964, 26223, 26690, 28179, 30054, 31293, 31995, 32076, 32153, 32331, 32619, 33550, 33610, 34509, 35336, 35427, 35686, 36605, 38938, 40335, 33464, 36814, 39912, 21127, 25119, 25731, 28608, 38553, 26689, 20625, 27424, 27770, 28500, 31348, 32080, 34880, 35363, 26376, 20214, 20537, 20518, 20581, 20860, 21048, 21091, 21927, 22287, 22533, 23244, 24314, 25010, 25080, 25331, 25458, 26908, 27177, 29309, 29356, 29486, 30740, 30831, 32121, 30476, 32937, 35211, 35609, 36066, 36562, 36963, 37749, 38522, 38997, 39443, 40568, 20803, 21407, 21427, 24187, 24358, 28187, 28304, 29572, 29694, 32067, 33335, 35328, 35578, 38480, 20046, 20491, 21476, 21628, 22266, 22993, 23396, 24049, 24235, 24359, 25144, 25925, 26543, 28246, 29392, 31946, 34996, 32929, 32993, 33776, 34382, 35463, 36328, 37431, 38599, 39015, 40723, 20116, 20114, 20237, 21320, 21577, 21566, 23087, 24460, 24481, 24735, 26791, 27278, 29786, 30849, 35486, 35492, 35703, 37264, 20062, 39881, 20132, 20348, 20399, 20505, 20502, 20809, 20844, 21151, 21177, 21246, 21402, 21475, 21521, 21518, 21897, 22353, 22434, 22909, 23380, 23389, 23439, 24037, 24039, 24055, 24184, 24195, 24218, 24247, 24344, 24658, 24908, 25239, 25304, 25511, 25915, 26114, 26179, 26356, 26477, 26657, 26775, 27083, 27743, 27946, 28009, 28207, 28317, 30002, 30343, 30828, 31295, 31968, 32005, 32024, 32094, 32177, 32789, 32771, 32943, 32945, 33108, 33167, 33322, 33618, 34892, 34913, 35611, 36002, 36092, 37066, 37237, 37489, 30783, 37628, 38308, 38477, 38917, 39321, 39640, 40251, 21083, 21163, 21495, 21512, 22741, 25335, 28640, 35946, 36703, 40633, 20811, 21051, 21578, 22269, 31296, 37239, 40288, 40658, 29508, 28425, 33136, 29969, 24573, 24794, 39592, 29403, 36796, 27492, 38915, 20170, 22256, 22372, 22718, 23130, 24680, 25031, 26127, 26118, 26681, 26801, 28151, 30165, 32058, 33390, 39746, 20123, 20304, 21449, 21766, 23919, 24038, 24046, 26619, 27801, 29811, 30722, 35408, 37782, 35039, 22352, 24231, 25387, 20661, 20652, 20877, 26368, 21705, 22622, 22971, 23472, 24425, 25165, 25505, 26685, 27507, 28168, 28797, 37319, 29312, 30741, 30758, 31085, 25998, 32048, 33756, 35009, 36617, 38555, 21092, 22312, 26448, 32618, 36001, 20916, 22338, 38442, 22586, 27018, 32948, 21682, 23822, 22524, 30869, 40442, 20316, 21066, 21643, 25662, 26152, 26388, 26613, 31364, 31574, 32034, 37679, 26716, 39853, 31545, 21273, 20874, 21047, 23519, 25334, 25774, 25830, 26413, 27578, 34217, 38609, 30352, 39894, 25420, 37638, 39851, 30399, 26194, 19977, 20632, 21442, 23665, 24808, 25746, 25955, 26719, 29158, 29642, 29987, 31639, 32386, 34453, 35715, 36059, 37240, 39184, 26028, 26283, 27531, 20181, 20180, 20282, 20351, 21050, 21496, 21490, 21987, 22235, 22763, 22987, 22985, 23039, 23376, 23629, 24066, 24107, 24535, 24605, 25351, 25903, 23388, 26031, 26045, 26088, 26525, 27490, 27515, 27663, 29509, 31049, 31169, 31992, 32025, 32043, 32930, 33026, 33267, 35222, 35422, 35433, 35430, 35468, 35566, 36039, 36060, 38604, 39164, 27503, 20107, 20284, 20365, 20816, 23383, 23546, 24904, 25345, 26178, 27425, 28363, 27835, 29246, 29885, 30164, 30913, 31034, 32780, 32819, 33258, 33940, 36766, 27728, 40575, 24335, 35672, 40235, 31482, 36600, 23437, 38635, 19971, 21489, 22519, 22833, 23241, 23460, 24713, 28287, 28422, 30142, 36074, 23455, 34048, 31712, 20594, 26612, 33437, 23649, 34122, 32286, 33294, 20889, 23556, 25448, 36198, 26012, 29038, 31038, 32023, 32773, 35613, 36554, 36974, 34503, 37034, 20511, 21242, 23610, 26451, 28796, 29237, 37196, 37320, 37675, 33509, 23490, 24369, 24825, 20027, 21462, 23432, 25163, 26417, 27530, 29417, 29664, 31278, 33131, 36259, 37202, 39318, 20754, 21463, 21610, 23551, 25480, 27193, 32172, 38656, 22234, 21454, 21608, 23447, 23601, 24030, 20462, 24833, 25342, 27954, 31168, 31179, 32066, 32333, 32722, 33261, 33311, 33936, 34886, 35186, 35728, 36468, 36655, 36913, 37195, 37228, 38598, 37276, 20160, 20303, 20805, 21313, 24467, 25102, 26580, 27713, 28171, 29539, 32294, 37325, 37507, 21460, 22809, 23487, 28113, 31069, 32302, 31899, 22654, 29087, 20986, 34899, 36848, 20426, 23803, 26149, 30636, 31459, 33308, 39423, 20934, 24490, 26092, 26991, 27529, 28147, 28310, 28516, 30462, 32020, 24033, 36981, 37255, 38918, 20966, 21021, 25152, 26257, 26329, 28186, 24246, 32210, 32626, 26360, 34223, 34295, 35576, 21161, 21465, 22899, 24207, 24464, 24661, 37604, 38500, 20663, 20767, 21213, 21280, 21319, 21484, 21736, 21830, 21809, 22039, 22888, 22974, 23100, 23477, 23558, 23567, 23569, 23578, 24196, 24202, 24288, 24432, 25215, 25220, 25307, 25484, 25463, 26119, 26124, 26157, 26230, 26494, 26786, 27167, 27189, 27836, 28040, 28169, 28248, 28988, 28966, 29031, 30151, 30465, 30813, 30977, 31077, 31216, 31456, 31505, 31911, 32057, 32918, 33750, 33931, 34121, 34909, 35059, 35359, 35388, 35412, 35443, 35937, 36062, 37284, 37478, 37758, 37912, 38556, 38808, 19978, 19976, 19998, 20055, 20887, 21104, 22478, 22580, 22732, 23330, 24120, 24773, 25854, 26465, 26454, 27972, 29366, 30067, 31331, 33976, 35698, 37304, 37664, 22065, 22516, 39166, 25325, 26893, 27542, 29165, 32340, 32887, 33394, 35302, 39135, 34645, 36785, 23611, 20280, 20449, 20405, 21767, 23072, 23517, 23529, 24515, 24910, 25391, 26032, 26187, 26862, 27035, 28024, 28145, 30003, 30137, 30495, 31070, 31206, 32051, 33251, 33455, 34218, 35242, 35386, 36523, 36763, 36914, 37341, 38663, 20154, 20161, 20995, 22645, 22764, 23563, 29978, 23613, 33102, 35338, 36805, 38499, 38765, 31525, 35535, 38920, 37218, 22259, 21416, 36887, 21561, 22402, 24101, 25512, 27700, 28810, 30561, 31883, 32736, 34928, 36930, 37204, 37648, 37656, 38543, 29790, 39620, 23815, 23913, 25968, 26530, 36264, 38619, 25454, 26441, 26905, 33733, 38935, 38592, 35070, 28548, 25722, 23544, 19990, 28716, 30045, 26159, 20932, 21046, 21218, 22995, 24449, 24615, 25104, 25919, 25972, 26143, 26228, 26866, 26646, 27491, 28165, 29298, 29983, 30427, 31934, 32854, 22768, 35069, 35199, 35488, 35475, 35531, 36893, 37266, 38738, 38745, 25993, 31246, 33030, 38587, 24109, 24796, 25114, 26021, 26132, 26512, 30707, 31309, 31821, 32318, 33034, 36012, 36196, 36321, 36447, 30889, 20999, 25305, 25509, 25666, 25240, 35373, 31363, 31680, 35500, 38634, 32118, 33292, 34633, 20185, 20808, 21315, 21344, 23459, 23554, 23574, 24029, 25126, 25159, 25776, 26643, 26676, 27849, 27973, 27927, 26579, 28508, 29006, 29053, 26059, 31359, 31661, 32218, 32330, 32680, 33146, 33307, 33337, 34214, 35438, 36046, 36341, 36984, 36983, 37549, 37521, 38275, 39854, 21069, 21892, 28472, 28982, 20840, 31109, 32341, 33203, 31950, 22092, 22609, 23720, 25514, 26366, 26365, 26970, 29401, 30095, 30094, 30990, 31062, 31199, 31895, 32032, 32068, 34311, 35380, 38459, 36961, 40736, 20711, 21109, 21452, 21474, 20489, 21930, 22766, 22863, 29245, 23435, 23652, 21277, 24803, 24819, 25436, 25475, 25407, 25531, 25805, 26089, 26361, 24035, 27085, 27133, 28437, 29157, 20105, 30185, 30456, 31379, 31967, 32207, 32156, 32865, 33609, 33624, 33900, 33980, 34299, 35013, 36208, 36865, 36973, 37783, 38684, 39442, 20687, 22679, 24974, 33235, 34101, 36104, 36896, 20419, 20596, 21063, 21363, 24687, 25417, 26463, 28204, 36275, 36895, 20439, 23646, 36042, 26063, 32154, 21330, 34966, 20854, 25539, 23384, 23403, 23562, 25613, 26449, 36956, 20182, 22810, 22826, 27760, 35409, 21822, 22549, 22949, 24816, 25171, 26561, 33333, 26965, 38464, 39364, 39464, 20307, 22534, 23550, 32784, 23729, 24111, 24453, 24608, 24907, 25140, 26367, 27888, 28382, 32974, 33151, 33492, 34955, 36024, 36864, 36910, 38538, 40667, 39899, 20195, 21488, 22823, 31532, 37261, 38988, 40441, 28381, 28711, 21331, 21828, 23429, 25176, 25246, 25299, 27810, 28655, 29730, 35351, 37944, 28609, 35582, 33592, 20967, 34552, 21482, 21481, 20294, 36948, 36784, 22890, 33073, 24061, 31466, 36799, 26842, 35895, 29432, 40008, 27197, 35504, 20025, 21336, 22022, 22374, 25285, 25506, 26086, 27470, 28129, 28251, 28845, 30701, 31471, 31658, 32187, 32829, 32966, 34507, 35477, 37723, 22243, 22727, 24382, 26029, 26262, 27264, 27573, 30007, 35527, 20516, 30693, 22320, 24347, 24677, 26234, 27744, 30196, 31258, 32622, 33268, 34584, 36933, 39347, 31689, 30044, 31481, 31569, 33988, 36880, 31209, 31378, 33590, 23265, 30528, 20013, 20210, 23449, 24544, 25277, 26172, 26609, 27880, 34411, 34935, 35387, 37198, 37619, 39376, 27159, 28710, 29482, 33511, 33879, 36015, 19969, 20806, 20939, 21899, 23541, 24086, 24115, 24193, 24340, 24373, 24427, 24500, 25074, 25361, 26274, 26397, 28526, 29266, 30010, 30522, 32884, 33081, 33144, 34678, 35519, 35548, 36229, 36339, 37530, 38263, 38914, 40165, 21189, 25431, 30452, 26389, 27784, 29645, 36035, 37806, 38515, 27941, 22684, 26894, 27084, 36861, 37786, 30171, 36890, 22618, 26626, 25524, 27131, 20291, 28460, 26584, 36795, 34086, 32180, 37716, 26943, 28528, 22378, 22775, 23340, 32044, 29226, 21514, 37347, 40372, 20141, 20302, 20572, 20597, 21059, 35998, 21576, 22564, 23450, 24093, 24213, 24237, 24311, 24351, 24716, 25269, 25402, 25552, 26799, 27712, 30855, 31118, 31243, 32224, 33351, 35330, 35558, 36420, 36883, 37048, 37165, 37336, 40718, 27877, 25688, 25826, 25973, 28404, 30340, 31515, 36969, 37841, 28346, 21746, 24505, 25764, 36685, 36845, 37444, 20856, 22635, 22825, 23637, 24215, 28155, 32399, 29980, 36028, 36578, 39003, 28857, 20253, 27583, 28593, 3e4, 38651, 20814, 21520, 22581, 22615, 22956, 23648, 24466, 26007, 26460, 28193, 30331, 33759, 36077, 36884, 37117, 37709, 30757, 30778, 21162, 24230, 22303, 22900, 24594, 20498, 20826, 20908, 20941, 20992, 21776, 22612, 22616, 22871, 23445, 23798, 23947, 24764, 25237, 25645, 26481, 26691, 26812, 26847, 30423, 28120, 28271, 28059, 28783, 29128, 24403, 30168, 31095, 31561, 31572, 31570, 31958, 32113, 21040, 33891, 34153, 34276, 35342, 35588, 35910, 36367, 36867, 36879, 37913, 38518, 38957, 39472, 38360, 20685, 21205, 21516, 22530, 23566, 24999, 25758, 27934, 30643, 31461, 33012, 33796, 36947, 37509, 23776, 40199, 21311, 24471, 24499, 28060, 29305, 30563, 31167, 31716, 27602, 29420, 35501, 26627, 27233, 20984, 31361, 26932, 23626, 40182, 33515, 23493, 37193, 28702, 22136, 23663, 24775, 25958, 27788, 35930, 36929, 38931, 21585, 26311, 37389, 22856, 37027, 20869, 20045, 20970, 34201, 35598, 28760, 25466, 37707, 26978, 39348, 32260, 30071, 21335, 26976, 36575, 38627, 27741, 20108, 23612, 24336, 36841, 21250, 36049, 32905, 34425, 24319, 26085, 20083, 20837, 22914, 23615, 38894, 20219, 22922, 24525, 35469, 28641, 31152, 31074, 23527, 33905, 29483, 29105, 24180, 24565, 25467, 25754, 29123, 31896, 20035, 24316, 20043, 22492, 22178, 24745, 28611, 32013, 33021, 33075, 33215, 36786, 35223, 34468, 24052, 25226, 25773, 35207, 26487, 27874, 27966, 29750, 30772, 23110, 32629, 33453, 39340, 20467, 24259, 25309, 25490, 25943, 26479, 30403, 29260, 32972, 32954, 36649, 37197, 20493, 22521, 23186, 26757, 26995, 29028, 29437, 36023, 22770, 36064, 38506, 36889, 34687, 31204, 30695, 33833, 20271, 21093, 21338, 25293, 26575, 27850, 30333, 31636, 31893, 33334, 34180, 36843, 26333, 28448, 29190, 32283, 33707, 39361, 40614, 20989, 31665, 30834, 31672, 32903, 31560, 27368, 24161, 32908, 30033, 30048, 20843, 37474, 28300, 30330, 37271, 39658, 20240, 32624, 25244, 31567, 38309, 40169, 22138, 22617, 34532, 38588, 20276, 21028, 21322, 21453, 21467, 24070, 25644, 26001, 26495, 27710, 27726, 29256, 29359, 29677, 30036, 32321, 33324, 34281, 36009, 31684, 37318, 29033, 38930, 39151, 25405, 26217, 30058, 30436, 30928, 34115, 34542, 21290, 21329, 21542, 22915, 24199, 24444, 24754, 25161, 25209, 25259, 26e3, 27604, 27852, 30130, 30382, 30865, 31192, 32203, 32631, 32933, 34987, 35513, 36027, 36991, 38750, 39131, 27147, 31800, 20633, 23614, 24494, 26503, 27608, 29749, 30473, 32654, 40763, 26570, 31255, 21305, 30091, 39661, 24422, 33181, 33777, 32920, 24380, 24517, 30050, 31558, 36924, 26727, 23019, 23195, 32016, 30334, 35628, 20469, 24426, 27161, 27703, 28418, 29922, 31080, 34920, 35413, 35961, 24287, 25551, 30149, 31186, 33495, 37672, 37618, 33948, 34541, 39981, 21697, 24428, 25996, 27996, 28693, 36007, 36051, 38971, 25935, 29942, 19981, 20184, 22496, 22827, 23142, 23500, 20904, 24067, 24220, 24598, 25206, 25975, 26023, 26222, 28014, 29238, 31526, 33104, 33178, 33433, 35676, 36e3, 36070, 36212, 38428, 38468, 20398, 25771, 27494, 33310, 33889, 34154, 37096, 23553, 26963, 39080, 33914, 34135, 20239, 21103, 24489, 24133, 26381, 31119, 33145, 35079, 35206, 28149, 24343, 25173, 27832, 20175, 29289, 39826, 20998, 21563, 22132, 22707, 24996, 25198, 28954, 22894, 31881, 31966, 32027, 38640, 25991, 32862, 19993, 20341, 20853, 22592, 24163, 24179, 24330, 26564, 20006, 34109, 38281, 38491, 31859, 38913, 20731, 22721, 30294, 30887, 21029, 30629, 34065, 31622, 20559, 22793, 29255, 31687, 32232, 36794, 36820, 36941, 20415, 21193, 23081, 24321, 38829, 20445, 33303, 37610, 22275, 25429, 27497, 29995, 35036, 36628, 31298, 21215, 22675, 24917, 25098, 26286, 27597, 31807, 33769, 20515, 20472, 21253, 21574, 22577, 22857, 23453, 23792, 23791, 23849, 24214, 25265, 25447, 25918, 26041, 26379, 27861, 27873, 28921, 30770, 32299, 32990, 33459, 33804, 34028, 34562, 35090, 35370, 35914, 37030, 37586, 39165, 40179, 40300, 20047, 20129, 20621, 21078, 22346, 22952, 24125, 24536, 24537, 25151, 26292, 26395, 26576, 26834, 20882, 32033, 32938, 33192, 35584, 35980, 36031, 37502, 38450, 21536, 38956, 21271, 20693, 21340, 22696, 25778, 26420, 29287, 30566, 31302, 37350, 21187, 27809, 27526, 22528, 24140, 22868, 26412, 32763, 20961, 30406, 25705, 30952, 39764, 40635, 22475, 22969, 26151, 26522, 27598, 21737, 27097, 24149, 33180, 26517, 39850, 26622, 40018, 26717, 20134, 20451, 21448, 25273, 26411, 27819, 36804, 20397, 32365, 40639, 19975, 24930, 28288, 28459, 34067, 21619, 26410, 39749, 24051, 31637, 23724, 23494, 34588, 28234, 34001, 31252, 33032, 22937, 31885, 27665, 30496, 21209, 22818, 28961, 29279, 30683, 38695, 40289, 26891, 23167, 23064, 20901, 21517, 21629, 26126, 30431, 36855, 37528, 40180, 23018, 29277, 28357, 20813, 26825, 32191, 32236, 38754, 40634, 25720, 27169, 33538, 22916, 23391, 27611, 29467, 30450, 32178, 32791, 33945, 20786, 26408, 40665, 30446, 26466, 21247, 39173, 23588, 25147, 31870, 36016, 21839, 24758, 32011, 38272, 21249, 20063, 20918, 22812, 29242, 32822, 37326, 24357, 30690, 21380, 24441, 32004, 34220, 35379, 36493, 38742, 26611, 34222, 37971, 24841, 24840, 27833, 30290, 35565, 36664, 21807, 20305, 20778, 21191, 21451, 23461, 24189, 24736, 24962, 25558, 26377, 26586, 28263, 28044, 29494, 29495, 30001, 31056, 35029, 35480, 36938, 37009, 37109, 38596, 34701, 22805, 20104, 20313, 19982, 35465, 36671, 38928, 20653, 24188, 22934, 23481, 24248, 25562, 25594, 25793, 26332, 26954, 27096, 27915, 28342, 29076, 29992, 31407, 32650, 32768, 33865, 33993, 35201, 35617, 36362, 36965, 38525, 39178, 24958, 25233, 27442, 27779, 28020, 32716, 32764, 28096, 32645, 34746, 35064, 26469, 33713, 38972, 38647, 27931, 32097, 33853, 37226, 20081, 21365, 23888, 27396, 28651, 34253, 34349, 35239, 21033, 21519, 23653, 26446, 26792, 29702, 29827, 30178, 35023, 35041, 37324, 38626, 38520, 24459, 29575, 31435, 33870, 25504, 30053, 21129, 27969, 28316, 29705, 30041, 30827, 31890, 38534, 31452, 40845, 20406, 24942, 26053, 34396, 20102, 20142, 20698, 20001, 20940, 23534, 26009, 26753, 28092, 29471, 30274, 30637, 31260, 31975, 33391, 35538, 36988, 37327, 38517, 38936, 21147, 32209, 20523, 21400, 26519, 28107, 29136, 29747, 33256, 36650, 38563, 40023, 40607, 29792, 22593, 28057, 32047, 39006, 20196, 20278, 20363, 20919, 21169, 23994, 24604, 29618, 31036, 33491, 37428, 38583, 38646, 38666, 40599, 40802, 26278, 27508, 21015, 21155, 28872, 35010, 24265, 24651, 24976, 28451, 29001, 31806, 32244, 32879, 34030, 36899, 37676, 21570, 39791, 27347, 28809, 36034, 36335, 38706, 21172, 23105, 24266, 24324, 26391, 27004, 27028, 28010, 28431, 29282, 29436, 31725, 32769, 32894, 34635, 37070, 20845, 40595, 31108, 32907, 37682, 35542, 20525, 21644, 35441, 27498, 36036, 33031, 24785, 26528, 40434, 20121, 20120, 39952, 35435, 34241, 34152, 26880, 28286, 30871, 33109, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 24332, 19984, 19989, 20010, 20017, 20022, 20028, 20031, 20034, 20054, 20056, 20098, 20101, 35947, 20106, 33298, 24333, 20110, 20126, 20127, 20128, 20130, 20144, 20147, 20150, 20174, 20173, 20164, 20166, 20162, 20183, 20190, 20205, 20191, 20215, 20233, 20314, 20272, 20315, 20317, 20311, 20295, 20342, 20360, 20367, 20376, 20347, 20329, 20336, 20369, 20335, 20358, 20374, 20760, 20436, 20447, 20430, 20440, 20443, 20433, 20442, 20432, 20452, 20453, 20506, 20520, 20500, 20522, 20517, 20485, 20252, 20470, 20513, 20521, 20524, 20478, 20463, 20497, 20486, 20547, 20551, 26371, 20565, 20560, 20552, 20570, 20566, 20588, 20600, 20608, 20634, 20613, 20660, 20658, 20681, 20682, 20659, 20674, 20694, 20702, 20709, 20717, 20707, 20718, 20729, 20725, 20745, 20737, 20738, 20758, 20757, 20756, 20762, 20769, 20794, 20791, 20796, 20795, 20799, 20800, 20818, 20812, 20820, 20834, 31480, 20841, 20842, 20846, 20864, 20866, 22232, 20876, 20873, 20879, 20881, 20883, 20885, 20886, 20900, 20902, 20898, 20905, 20906, 20907, 20915, 20913, 20914, 20912, 20917, 20925, 20933, 20937, 20955, 20960, 34389, 20969, 20973, 20976, 20981, 20990, 20996, 21003, 21012, 21006, 21031, 21034, 21038, 21043, 21049, 21071, 21060, 21067, 21068, 21086, 21076, 21098, 21108, 21097, 21107, 21119, 21117, 21133, 21140, 21138, 21105, 21128, 21137, 36776, 36775, 21164, 21165, 21180, 21173, 21185, 21197, 21207, 21214, 21219, 21222, 39149, 21216, 21235, 21237, 21240, 21241, 21254, 21256, 30008, 21261, 21264, 21263, 21269, 21274, 21283, 21295, 21297, 21299, 21304, 21312, 21318, 21317, 19991, 21321, 21325, 20950, 21342, 21353, 21358, 22808, 21371, 21367, 21378, 21398, 21408, 21414, 21413, 21422, 21424, 21430, 21443, 31762, 38617, 21471, 26364, 29166, 21486, 21480, 21485, 21498, 21505, 21565, 21568, 21548, 21549, 21564, 21550, 21558, 21545, 21533, 21582, 21647, 21621, 21646, 21599, 21617, 21623, 21616, 21650, 21627, 21632, 21622, 21636, 21648, 21638, 21703, 21666, 21688, 21669, 21676, 21700, 21704, 21672, 21675, 21698, 21668, 21694, 21692, 21720, 21733, 21734, 21775, 21780, 21757, 21742, 21741, 21754, 21730, 21817, 21824, 21859, 21836, 21806, 21852, 21829, 21846, 21847, 21816, 21811, 21853, 21913, 21888, 21679, 21898, 21919, 21883, 21886, 21912, 21918, 21934, 21884, 21891, 21929, 21895, 21928, 21978, 21957, 21983, 21956, 21980, 21988, 21972, 22036, 22007, 22038, 22014, 22013, 22043, 22009, 22094, 22096, 29151, 22068, 22070, 22066, 22072, 22123, 22116, 22063, 22124, 22122, 22150, 22144, 22154, 22176, 22164, 22159, 22181, 22190, 22198, 22196, 22210, 22204, 22209, 22211, 22208, 22216, 22222, 22225, 22227, 22231, 22254, 22265, 22272, 22271, 22276, 22281, 22280, 22283, 22285, 22291, 22296, 22294, 21959, 22300, 22310, 22327, 22328, 22350, 22331, 22336, 22351, 22377, 22464, 22408, 22369, 22399, 22409, 22419, 22432, 22451, 22436, 22442, 22448, 22467, 22470, 22484, 22482, 22483, 22538, 22486, 22499, 22539, 22553, 22557, 22642, 22561, 22626, 22603, 22640, 27584, 22610, 22589, 22649, 22661, 22713, 22687, 22699, 22714, 22750, 22715, 22712, 22702, 22725, 22739, 22737, 22743, 22745, 22744, 22757, 22748, 22756, 22751, 22767, 22778, 22777, 22779, 22780, 22781, 22786, 22794, 22800, 22811, 26790, 22821, 22828, 22829, 22834, 22840, 22846, 31442, 22869, 22864, 22862, 22874, 22872, 22882, 22880, 22887, 22892, 22889, 22904, 22913, 22941, 20318, 20395, 22947, 22962, 22982, 23016, 23004, 22925, 23001, 23002, 23077, 23071, 23057, 23068, 23049, 23066, 23104, 23148, 23113, 23093, 23094, 23138, 23146, 23194, 23228, 23230, 23243, 23234, 23229, 23267, 23255, 23270, 23273, 23254, 23290, 23291, 23308, 23307, 23318, 23346, 23248, 23338, 23350, 23358, 23363, 23365, 23360, 23377, 23381, 23386, 23387, 23397, 23401, 23408, 23411, 23413, 23416, 25992, 23418, 23424, 23427, 23462, 23480, 23491, 23495, 23497, 23508, 23504, 23524, 23526, 23522, 23518, 23525, 23531, 23536, 23542, 23539, 23557, 23559, 23560, 23565, 23571, 23584, 23586, 23592, 23608, 23609, 23617, 23622, 23630, 23635, 23632, 23631, 23409, 23660, 23662, 20066, 23670, 23673, 23692, 23697, 23700, 22939, 23723, 23739, 23734, 23740, 23735, 23749, 23742, 23751, 23769, 23785, 23805, 23802, 23789, 23948, 23786, 23819, 23829, 23831, 23900, 23839, 23835, 23825, 23828, 23842, 23834, 23833, 23832, 23884, 23890, 23886, 23883, 23916, 23923, 23926, 23943, 23940, 23938, 23970, 23965, 23980, 23982, 23997, 23952, 23991, 23996, 24009, 24013, 24019, 24018, 24022, 24027, 24043, 24050, 24053, 24075, 24090, 24089, 24081, 24091, 24118, 24119, 24132, 24131, 24128, 24142, 24151, 24148, 24159, 24162, 24164, 24135, 24181, 24182, 24186, 40636, 24191, 24224, 24257, 24258, 24264, 24272, 24271, 24278, 24291, 24285, 24282, 24283, 24290, 24289, 24296, 24297, 24300, 24305, 24307, 24304, 24308, 24312, 24318, 24323, 24329, 24413, 24412, 24331, 24337, 24342, 24361, 24365, 24376, 24385, 24392, 24396, 24398, 24367, 24401, 24406, 24407, 24409, 24417, 24429, 24435, 24439, 24451, 24450, 24447, 24458, 24456, 24465, 24455, 24478, 24473, 24472, 24480, 24488, 24493, 24508, 24534, 24571, 24548, 24568, 24561, 24541, 24755, 24575, 24609, 24672, 24601, 24592, 24617, 24590, 24625, 24603, 24597, 24619, 24614, 24591, 24634, 24666, 24641, 24682, 24695, 24671, 24650, 24646, 24653, 24675, 24643, 24676, 24642, 24684, 24683, 24665, 24705, 24717, 24807, 24707, 24730, 24708, 24731, 24726, 24727, 24722, 24743, 24715, 24801, 24760, 24800, 24787, 24756, 24560, 24765, 24774, 24757, 24792, 24909, 24853, 24838, 24822, 24823, 24832, 24820, 24826, 24835, 24865, 24827, 24817, 24845, 24846, 24903, 24894, 24872, 24871, 24906, 24895, 24892, 24876, 24884, 24893, 24898, 24900, 24947, 24951, 24920, 24921, 24922, 24939, 24948, 24943, 24933, 24945, 24927, 24925, 24915, 24949, 24985, 24982, 24967, 25004, 24980, 24986, 24970, 24977, 25003, 25006, 25036, 25034, 25033, 25079, 25032, 25027, 25030, 25018, 25035, 32633, 25037, 25062, 25059, 25078, 25082, 25076, 25087, 25085, 25084, 25086, 25088, 25096, 25097, 25101, 25100, 25108, 25115, 25118, 25121, 25130, 25134, 25136, 25138, 25139, 25153, 25166, 25182, 25187, 25179, 25184, 25192, 25212, 25218, 25225, 25214, 25234, 25235, 25238, 25300, 25219, 25236, 25303, 25297, 25275, 25295, 25343, 25286, 25812, 25288, 25308, 25292, 25290, 25282, 25287, 25243, 25289, 25356, 25326, 25329, 25383, 25346, 25352, 25327, 25333, 25424, 25406, 25421, 25628, 25423, 25494, 25486, 25472, 25515, 25462, 25507, 25487, 25481, 25503, 25525, 25451, 25449, 25534, 25577, 25536, 25542, 25571, 25545, 25554, 25590, 25540, 25622, 25652, 25606, 25619, 25638, 25654, 25885, 25623, 25640, 25615, 25703, 25711, 25718, 25678, 25898, 25749, 25747, 25765, 25769, 25736, 25788, 25818, 25810, 25797, 25799, 25787, 25816, 25794, 25841, 25831, 33289, 25824, 25825, 25260, 25827, 25839, 25900, 25846, 25844, 25842, 25850, 25856, 25853, 25880, 25884, 25861, 25892, 25891, 25899, 25908, 25909, 25911, 25910, 25912, 30027, 25928, 25942, 25941, 25933, 25944, 25950, 25949, 25970, 25976, 25986, 25987, 35722, 26011, 26015, 26027, 26039, 26051, 26054, 26049, 26052, 26060, 26066, 26075, 26073, 26080, 26081, 26097, 26482, 26122, 26115, 26107, 26483, 26165, 26166, 26164, 26140, 26191, 26180, 26185, 26177, 26206, 26205, 26212, 26215, 26216, 26207, 26210, 26224, 26243, 26248, 26254, 26249, 26244, 26264, 26269, 26305, 26297, 26313, 26302, 26300, 26308, 26296, 26326, 26330, 26336, 26175, 26342, 26345, 26352, 26357, 26359, 26383, 26390, 26398, 26406, 26407, 38712, 26414, 26431, 26422, 26433, 26424, 26423, 26438, 26462, 26464, 26457, 26467, 26468, 26505, 26480, 26537, 26492, 26474, 26508, 26507, 26534, 26529, 26501, 26551, 26607, 26548, 26604, 26547, 26601, 26552, 26596, 26590, 26589, 26594, 26606, 26553, 26574, 26566, 26599, 27292, 26654, 26694, 26665, 26688, 26701, 26674, 26702, 26803, 26667, 26713, 26723, 26743, 26751, 26783, 26767, 26797, 26772, 26781, 26779, 26755, 27310, 26809, 26740, 26805, 26784, 26810, 26895, 26765, 26750, 26881, 26826, 26888, 26840, 26914, 26918, 26849, 26892, 26829, 26836, 26855, 26837, 26934, 26898, 26884, 26839, 26851, 26917, 26873, 26848, 26863, 26920, 26922, 26906, 26915, 26913, 26822, 27001, 26999, 26972, 27e3, 26987, 26964, 27006, 26990, 26937, 26996, 26941, 26969, 26928, 26977, 26974, 26973, 27009, 26986, 27058, 27054, 27088, 27071, 27073, 27091, 27070, 27086, 23528, 27082, 27101, 27067, 27075, 27047, 27182, 27025, 27040, 27036, 27029, 27060, 27102, 27112, 27138, 27163, 27135, 27402, 27129, 27122, 27111, 27141, 27057, 27166, 27117, 27156, 27115, 27146, 27154, 27329, 27171, 27155, 27204, 27148, 27250, 27190, 27256, 27207, 27234, 27225, 27238, 27208, 27192, 27170, 27280, 27277, 27296, 27268, 27298, 27299, 27287, 34327, 27323, 27331, 27330, 27320, 27315, 27308, 27358, 27345, 27359, 27306, 27354, 27370, 27387, 27397, 34326, 27386, 27410, 27414, 39729, 27423, 27448, 27447, 30428, 27449, 39150, 27463, 27459, 27465, 27472, 27481, 27476, 27483, 27487, 27489, 27512, 27513, 27519, 27520, 27524, 27523, 27533, 27544, 27541, 27550, 27556, 27562, 27563, 27567, 27570, 27569, 27571, 27575, 27580, 27590, 27595, 27603, 27615, 27628, 27627, 27635, 27631, 40638, 27656, 27667, 27668, 27675, 27684, 27683, 27742, 27733, 27746, 27754, 27778, 27789, 27802, 27777, 27803, 27774, 27752, 27763, 27794, 27792, 27844, 27889, 27859, 27837, 27863, 27845, 27869, 27822, 27825, 27838, 27834, 27867, 27887, 27865, 27882, 27935, 34893, 27958, 27947, 27965, 27960, 27929, 27957, 27955, 27922, 27916, 28003, 28051, 28004, 27994, 28025, 27993, 28046, 28053, 28644, 28037, 28153, 28181, 28170, 28085, 28103, 28134, 28088, 28102, 28140, 28126, 28108, 28136, 28114, 28101, 28154, 28121, 28132, 28117, 28138, 28142, 28205, 28270, 28206, 28185, 28274, 28255, 28222, 28195, 28267, 28203, 28278, 28237, 28191, 28227, 28218, 28238, 28196, 28415, 28189, 28216, 28290, 28330, 28312, 28361, 28343, 28371, 28349, 28335, 28356, 28338, 28372, 28373, 28303, 28325, 28354, 28319, 28481, 28433, 28748, 28396, 28408, 28414, 28479, 28402, 28465, 28399, 28466, 28364, 28478, 28435, 28407, 28550, 28538, 28536, 28545, 28544, 28527, 28507, 28659, 28525, 28546, 28540, 28504, 28558, 28561, 28610, 28518, 28595, 28579, 28577, 28580, 28601, 28614, 28586, 28639, 28629, 28652, 28628, 28632, 28657, 28654, 28635, 28681, 28683, 28666, 28689, 28673, 28687, 28670, 28699, 28698, 28532, 28701, 28696, 28703, 28720, 28734, 28722, 28753, 28771, 28825, 28818, 28847, 28913, 28844, 28856, 28851, 28846, 28895, 28875, 28893, 28889, 28937, 28925, 28956, 28953, 29029, 29013, 29064, 29030, 29026, 29004, 29014, 29036, 29071, 29179, 29060, 29077, 29096, 29100, 29143, 29113, 29118, 29138, 29129, 29140, 29134, 29152, 29164, 29159, 29173, 29180, 29177, 29183, 29197, 29200, 29211, 29224, 29229, 29228, 29232, 29234, 29243, 29244, 29247, 29248, 29254, 29259, 29272, 29300, 29310, 29314, 29313, 29319, 29330, 29334, 29346, 29351, 29369, 29362, 29379, 29382, 29380, 29390, 29394, 29410, 29408, 29409, 29433, 29431, 20495, 29463, 29450, 29468, 29462, 29469, 29492, 29487, 29481, 29477, 29502, 29518, 29519, 40664, 29527, 29546, 29544, 29552, 29560, 29557, 29563, 29562, 29640, 29619, 29646, 29627, 29632, 29669, 29678, 29662, 29858, 29701, 29807, 29733, 29688, 29746, 29754, 29781, 29759, 29791, 29785, 29761, 29788, 29801, 29808, 29795, 29802, 29814, 29822, 29835, 29854, 29863, 29898, 29903, 29908, 29681, 29920, 29923, 29927, 29929, 29934, 29938, 29936, 29937, 29944, 29943, 29956, 29955, 29957, 29964, 29966, 29965, 29973, 29971, 29982, 29990, 29996, 30012, 30020, 30029, 30026, 30025, 30043, 30022, 30042, 30057, 30052, 30055, 30059, 30061, 30072, 30070, 30086, 30087, 30068, 30090, 30089, 30082, 30100, 30106, 30109, 30117, 30115, 30146, 30131, 30147, 30133, 30141, 30136, 30140, 30129, 30157, 30154, 30162, 30169, 30179, 30174, 30206, 30207, 30204, 30209, 30192, 30202, 30194, 30195, 30219, 30221, 30217, 30239, 30247, 30240, 30241, 30242, 30244, 30260, 30256, 30267, 30279, 30280, 30278, 30300, 30296, 30305, 30306, 30312, 30313, 30314, 30311, 30316, 30320, 30322, 30326, 30328, 30332, 30336, 30339, 30344, 30347, 30350, 30358, 30355, 30361, 30362, 30384, 30388, 30392, 30393, 30394, 30402, 30413, 30422, 30418, 30430, 30433, 30437, 30439, 30442, 34351, 30459, 30472, 30471, 30468, 30505, 30500, 30494, 30501, 30502, 30491, 30519, 30520, 30535, 30554, 30568, 30571, 30555, 30565, 30591, 30590, 30585, 30606, 30603, 30609, 30624, 30622, 30640, 30646, 30649, 30655, 30652, 30653, 30651, 30663, 30669, 30679, 30682, 30684, 30691, 30702, 30716, 30732, 30738, 31014, 30752, 31018, 30789, 30862, 30836, 30854, 30844, 30874, 30860, 30883, 30901, 30890, 30895, 30929, 30918, 30923, 30932, 30910, 30908, 30917, 30922, 30956, 30951, 30938, 30973, 30964, 30983, 30994, 30993, 31001, 31020, 31019, 31040, 31072, 31063, 31071, 31066, 31061, 31059, 31098, 31103, 31114, 31133, 31143, 40779, 31146, 31150, 31155, 31161, 31162, 31177, 31189, 31207, 31212, 31201, 31203, 31240, 31245, 31256, 31257, 31264, 31263, 31104, 31281, 31291, 31294, 31287, 31299, 31319, 31305, 31329, 31330, 31337, 40861, 31344, 31353, 31357, 31368, 31383, 31381, 31384, 31382, 31401, 31432, 31408, 31414, 31429, 31428, 31423, 36995, 31431, 31434, 31437, 31439, 31445, 31443, 31449, 31450, 31453, 31457, 31458, 31462, 31469, 31472, 31490, 31503, 31498, 31494, 31539, 31512, 31513, 31518, 31541, 31528, 31542, 31568, 31610, 31492, 31565, 31499, 31564, 31557, 31605, 31589, 31604, 31591, 31600, 31601, 31596, 31598, 31645, 31640, 31647, 31629, 31644, 31642, 31627, 31634, 31631, 31581, 31641, 31691, 31681, 31692, 31695, 31668, 31686, 31709, 31721, 31761, 31764, 31718, 31717, 31840, 31744, 31751, 31763, 31731, 31735, 31767, 31757, 31734, 31779, 31783, 31786, 31775, 31799, 31787, 31805, 31820, 31811, 31828, 31823, 31808, 31824, 31832, 31839, 31844, 31830, 31845, 31852, 31861, 31875, 31888, 31908, 31917, 31906, 31915, 31905, 31912, 31923, 31922, 31921, 31918, 31929, 31933, 31936, 31941, 31938, 31960, 31954, 31964, 31970, 39739, 31983, 31986, 31988, 31990, 31994, 32006, 32002, 32028, 32021, 32010, 32069, 32075, 32046, 32050, 32063, 32053, 32070, 32115, 32086, 32078, 32114, 32104, 32110, 32079, 32099, 32147, 32137, 32091, 32143, 32125, 32155, 32186, 32174, 32163, 32181, 32199, 32189, 32171, 32317, 32162, 32175, 32220, 32184, 32159, 32176, 32216, 32221, 32228, 32222, 32251, 32242, 32225, 32261, 32266, 32291, 32289, 32274, 32305, 32287, 32265, 32267, 32290, 32326, 32358, 32315, 32309, 32313, 32323, 32311, 32306, 32314, 32359, 32349, 32342, 32350, 32345, 32346, 32377, 32362, 32361, 32380, 32379, 32387, 32213, 32381, 36782, 32383, 32392, 32393, 32396, 32402, 32400, 32403, 32404, 32406, 32398, 32411, 32412, 32568, 32570, 32581, 32588, 32589, 32590, 32592, 32593, 32597, 32596, 32600, 32607, 32608, 32616, 32617, 32615, 32632, 32642, 32646, 32643, 32648, 32647, 32652, 32660, 32670, 32669, 32666, 32675, 32687, 32690, 32697, 32686, 32694, 32696, 35697, 32709, 32710, 32714, 32725, 32724, 32737, 32742, 32745, 32755, 32761, 39132, 32774, 32772, 32779, 32786, 32792, 32793, 32796, 32801, 32808, 32831, 32827, 32842, 32838, 32850, 32856, 32858, 32863, 32866, 32872, 32883, 32882, 32880, 32886, 32889, 32893, 32895, 32900, 32902, 32901, 32923, 32915, 32922, 32941, 20880, 32940, 32987, 32997, 32985, 32989, 32964, 32986, 32982, 33033, 33007, 33009, 33051, 33065, 33059, 33071, 33099, 38539, 33094, 33086, 33107, 33105, 33020, 33137, 33134, 33125, 33126, 33140, 33155, 33160, 33162, 33152, 33154, 33184, 33173, 33188, 33187, 33119, 33171, 33193, 33200, 33205, 33214, 33208, 33213, 33216, 33218, 33210, 33225, 33229, 33233, 33241, 33240, 33224, 33242, 33247, 33248, 33255, 33274, 33275, 33278, 33281, 33282, 33285, 33287, 33290, 33293, 33296, 33302, 33321, 33323, 33336, 33331, 33344, 33369, 33368, 33373, 33370, 33375, 33380, 33378, 33384, 33386, 33387, 33326, 33393, 33399, 33400, 33406, 33421, 33426, 33451, 33439, 33467, 33452, 33505, 33507, 33503, 33490, 33524, 33523, 33530, 33683, 33539, 33531, 33529, 33502, 33542, 33500, 33545, 33497, 33589, 33588, 33558, 33586, 33585, 33600, 33593, 33616, 33605, 33583, 33579, 33559, 33560, 33669, 33690, 33706, 33695, 33698, 33686, 33571, 33678, 33671, 33674, 33660, 33717, 33651, 33653, 33696, 33673, 33704, 33780, 33811, 33771, 33742, 33789, 33795, 33752, 33803, 33729, 33783, 33799, 33760, 33778, 33805, 33826, 33824, 33725, 33848, 34054, 33787, 33901, 33834, 33852, 34138, 33924, 33911, 33899, 33965, 33902, 33922, 33897, 33862, 33836, 33903, 33913, 33845, 33994, 33890, 33977, 33983, 33951, 34009, 33997, 33979, 34010, 34e3, 33985, 33990, 34006, 33953, 34081, 34047, 34036, 34071, 34072, 34092, 34079, 34069, 34068, 34044, 34112, 34147, 34136, 34120, 34113, 34306, 34123, 34133, 34176, 34212, 34184, 34193, 34186, 34216, 34157, 34196, 34203, 34282, 34183, 34204, 34167, 34174, 34192, 34249, 34234, 34255, 34233, 34256, 34261, 34269, 34277, 34268, 34297, 34314, 34323, 34315, 34302, 34298, 34310, 34338, 34330, 34352, 34367, 34381, 20053, 34388, 34399, 34407, 34417, 34451, 34467, 34473, 34474, 34443, 34444, 34486, 34479, 34500, 34502, 34480, 34505, 34851, 34475, 34516, 34526, 34537, 34540, 34527, 34523, 34543, 34578, 34566, 34568, 34560, 34563, 34555, 34577, 34569, 34573, 34553, 34570, 34612, 34623, 34615, 34619, 34597, 34601, 34586, 34656, 34655, 34680, 34636, 34638, 34676, 34647, 34664, 34670, 34649, 34643, 34659, 34666, 34821, 34722, 34719, 34690, 34735, 34763, 34749, 34752, 34768, 38614, 34731, 34756, 34739, 34759, 34758, 34747, 34799, 34802, 34784, 34831, 34829, 34814, 34806, 34807, 34830, 34770, 34833, 34838, 34837, 34850, 34849, 34865, 34870, 34873, 34855, 34875, 34884, 34882, 34898, 34905, 34910, 34914, 34923, 34945, 34942, 34974, 34933, 34941, 34997, 34930, 34946, 34967, 34962, 34990, 34969, 34978, 34957, 34980, 34992, 35007, 34993, 35011, 35012, 35028, 35032, 35033, 35037, 35065, 35074, 35068, 35060, 35048, 35058, 35076, 35084, 35082, 35091, 35139, 35102, 35109, 35114, 35115, 35137, 35140, 35131, 35126, 35128, 35148, 35101, 35168, 35166, 35174, 35172, 35181, 35178, 35183, 35188, 35191, 35198, 35203, 35208, 35210, 35219, 35224, 35233, 35241, 35238, 35244, 35247, 35250, 35258, 35261, 35263, 35264, 35290, 35292, 35293, 35303, 35316, 35320, 35331, 35350, 35344, 35340, 35355, 35357, 35365, 35382, 35393, 35419, 35410, 35398, 35400, 35452, 35437, 35436, 35426, 35461, 35458, 35460, 35496, 35489, 35473, 35493, 35494, 35482, 35491, 35524, 35533, 35522, 35546, 35563, 35571, 35559, 35556, 35569, 35604, 35552, 35554, 35575, 35550, 35547, 35596, 35591, 35610, 35553, 35606, 35600, 35607, 35616, 35635, 38827, 35622, 35627, 35646, 35624, 35649, 35660, 35663, 35662, 35657, 35670, 35675, 35674, 35691, 35679, 35692, 35695, 35700, 35709, 35712, 35724, 35726, 35730, 35731, 35734, 35737, 35738, 35898, 35905, 35903, 35912, 35916, 35918, 35920, 35925, 35938, 35948, 35960, 35962, 35970, 35977, 35973, 35978, 35981, 35982, 35988, 35964, 35992, 25117, 36013, 36010, 36029, 36018, 36019, 36014, 36022, 36040, 36033, 36068, 36067, 36058, 36093, 36090, 36091, 36100, 36101, 36106, 36103, 36111, 36109, 36112, 40782, 36115, 36045, 36116, 36118, 36199, 36205, 36209, 36211, 36225, 36249, 36290, 36286, 36282, 36303, 36314, 36310, 36300, 36315, 36299, 36330, 36331, 36319, 36323, 36348, 36360, 36361, 36351, 36381, 36382, 36368, 36383, 36418, 36405, 36400, 36404, 36426, 36423, 36425, 36428, 36432, 36424, 36441, 36452, 36448, 36394, 36451, 36437, 36470, 36466, 36476, 36481, 36487, 36485, 36484, 36491, 36490, 36499, 36497, 36500, 36505, 36522, 36513, 36524, 36528, 36550, 36529, 36542, 36549, 36552, 36555, 36571, 36579, 36604, 36603, 36587, 36606, 36618, 36613, 36629, 36626, 36633, 36627, 36636, 36639, 36635, 36620, 36646, 36659, 36667, 36665, 36677, 36674, 36670, 36684, 36681, 36678, 36686, 36695, 36700, 36706, 36707, 36708, 36764, 36767, 36771, 36781, 36783, 36791, 36826, 36837, 36834, 36842, 36847, 36999, 36852, 36869, 36857, 36858, 36881, 36885, 36897, 36877, 36894, 36886, 36875, 36903, 36918, 36917, 36921, 36856, 36943, 36944, 36945, 36946, 36878, 36937, 36926, 36950, 36952, 36958, 36968, 36975, 36982, 38568, 36978, 36994, 36989, 36993, 36992, 37002, 37001, 37007, 37032, 37039, 37041, 37045, 37090, 37092, 25160, 37083, 37122, 37138, 37145, 37170, 37168, 37194, 37206, 37208, 37219, 37221, 37225, 37235, 37234, 37259, 37257, 37250, 37282, 37291, 37295, 37290, 37301, 37300, 37306, 37312, 37313, 37321, 37323, 37328, 37334, 37343, 37345, 37339, 37372, 37365, 37366, 37406, 37375, 37396, 37420, 37397, 37393, 37470, 37463, 37445, 37449, 37476, 37448, 37525, 37439, 37451, 37456, 37532, 37526, 37523, 37531, 37466, 37583, 37561, 37559, 37609, 37647, 37626, 37700, 37678, 37657, 37666, 37658, 37667, 37690, 37685, 37691, 37724, 37728, 37756, 37742, 37718, 37808, 37804, 37805, 37780, 37817, 37846, 37847, 37864, 37861, 37848, 37827, 37853, 37840, 37832, 37860, 37914, 37908, 37907, 37891, 37895, 37904, 37942, 37931, 37941, 37921, 37946, 37953, 37970, 37956, 37979, 37984, 37986, 37982, 37994, 37417, 38e3, 38005, 38007, 38013, 37978, 38012, 38014, 38017, 38015, 38274, 38279, 38282, 38292, 38294, 38296, 38297, 38304, 38312, 38311, 38317, 38332, 38331, 38329, 38334, 38346, 28662, 38339, 38349, 38348, 38357, 38356, 38358, 38364, 38369, 38373, 38370, 38433, 38440, 38446, 38447, 38466, 38476, 38479, 38475, 38519, 38492, 38494, 38493, 38495, 38502, 38514, 38508, 38541, 38552, 38549, 38551, 38570, 38567, 38577, 38578, 38576, 38580, 38582, 38584, 38585, 38606, 38603, 38601, 38605, 35149, 38620, 38669, 38613, 38649, 38660, 38662, 38664, 38675, 38670, 38673, 38671, 38678, 38681, 38692, 38698, 38704, 38713, 38717, 38718, 38724, 38726, 38728, 38722, 38729, 38748, 38752, 38756, 38758, 38760, 21202, 38763, 38769, 38777, 38789, 38780, 38785, 38778, 38790, 38795, 38799, 38800, 38812, 38824, 38822, 38819, 38835, 38836, 38851, 38854, 38856, 38859, 38876, 38893, 40783, 38898, 31455, 38902, 38901, 38927, 38924, 38968, 38948, 38945, 38967, 38973, 38982, 38991, 38987, 39019, 39023, 39024, 39025, 39028, 39027, 39082, 39087, 39089, 39094, 39108, 39107, 39110, 39145, 39147, 39171, 39177, 39186, 39188, 39192, 39201, 39197, 39198, 39204, 39200, 39212, 39214, 39229, 39230, 39234, 39241, 39237, 39248, 39243, 39249, 39250, 39244, 39253, 39319, 39320, 39333, 39341, 39342, 39356, 39391, 39387, 39389, 39384, 39377, 39405, 39406, 39409, 39410, 39419, 39416, 39425, 39439, 39429, 39394, 39449, 39467, 39479, 39493, 39490, 39488, 39491, 39486, 39509, 39501, 39515, 39511, 39519, 39522, 39525, 39524, 39529, 39531, 39530, 39597, 39600, 39612, 39616, 39631, 39633, 39635, 39636, 39646, 39647, 39650, 39651, 39654, 39663, 39659, 39662, 39668, 39665, 39671, 39675, 39686, 39704, 39706, 39711, 39714, 39715, 39717, 39719, 39720, 39721, 39722, 39726, 39727, 39730, 39748, 39747, 39759, 39757, 39758, 39761, 39768, 39796, 39827, 39811, 39825, 39830, 39831, 39839, 39840, 39848, 39860, 39872, 39882, 39865, 39878, 39887, 39889, 39890, 39907, 39906, 39908, 39892, 39905, 39994, 39922, 39921, 39920, 39957, 39956, 39945, 39955, 39948, 39942, 39944, 39954, 39946, 39940, 39982, 39963, 39973, 39972, 39969, 39984, 40007, 39986, 40006, 39998, 40026, 40032, 40039, 40054, 40056, 40167, 40172, 40176, 40201, 40200, 40171, 40195, 40198, 40234, 40230, 40367, 40227, 40223, 40260, 40213, 40210, 40257, 40255, 40254, 40262, 40264, 40285, 40286, 40292, 40273, 40272, 40281, 40306, 40329, 40327, 40363, 40303, 40314, 40346, 40356, 40361, 40370, 40388, 40385, 40379, 40376, 40378, 40390, 40399, 40386, 40409, 40403, 40440, 40422, 40429, 40431, 40445, 40474, 40475, 40478, 40565, 40569, 40573, 40577, 40584, 40587, 40588, 40594, 40597, 40593, 40605, 40613, 40617, 40632, 40618, 40621, 38753, 40652, 40654, 40655, 40656, 40660, 40668, 40670, 40669, 40672, 40677, 40680, 40687, 40692, 40694, 40695, 40697, 40699, 40700, 40701, 40711, 40712, 30391, 40725, 40737, 40748, 40766, 40778, 40786, 40788, 40803, 40799, 40800, 40801, 40806, 40807, 40812, 40810, 40823, 40818, 40822, 40853, 40860, 40864, 22575, 27079, 36953, 29796, 20956, 29081, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 32394, 35100, 37704, 37512, 34012, 20425, 28859, 26161, 26824, 37625, 26363, 24389, 20008, 20193, 20220, 20224, 20227, 20281, 20310, 20370, 20362, 20378, 20372, 20429, 20544, 20514, 20479, 20510, 20550, 20592, 20546, 20628, 20724, 20696, 20810, 20836, 20893, 20926, 20972, 21013, 21148, 21158, 21184, 21211, 21248, 21255, 21284, 21362, 21395, 21426, 21469, 64014, 21660, 21642, 21673, 21759, 21894, 22361, 22373, 22444, 22472, 22471, 64015, 64016, 22686, 22706, 22795, 22867, 22875, 22877, 22883, 22948, 22970, 23382, 23488, 29999, 23512, 23532, 23582, 23718, 23738, 23797, 23847, 23891, 64017, 23874, 23917, 23992, 23993, 24016, 24353, 24372, 24423, 24503, 24542, 24669, 24709, 24714, 24798, 24789, 24864, 24818, 24849, 24887, 24880, 24984, 25107, 25254, 25589, 25696, 25757, 25806, 25934, 26112, 26133, 26171, 26121, 26158, 26142, 26148, 26213, 26199, 26201, 64018, 26227, 26265, 26272, 26290, 26303, 26362, 26382, 63785, 26470, 26555, 26706, 26560, 26625, 26692, 26831, 64019, 26984, 64020, 27032, 27106, 27184, 27243, 27206, 27251, 27262, 27362, 27364, 27606, 27711, 27740, 27782, 27759, 27866, 27908, 28039, 28015, 28054, 28076, 28111, 28152, 28146, 28156, 28217, 28252, 28199, 28220, 28351, 28552, 28597, 28661, 28677, 28679, 28712, 28805, 28843, 28943, 28932, 29020, 28998, 28999, 64021, 29121, 29182, 29361, 29374, 29476, 64022, 29559, 29629, 29641, 29654, 29667, 29650, 29703, 29685, 29734, 29738, 29737, 29742, 29794, 29833, 29855, 29953, 30063, 30338, 30364, 30366, 30363, 30374, 64023, 30534, 21167, 30753, 30798, 30820, 30842, 31024, 64024, 64025, 64026, 31124, 64027, 31131, 31441, 31463, 64028, 31467, 31646, 64029, 32072, 32092, 32183, 32160, 32214, 32338, 32583, 32673, 64030, 33537, 33634, 33663, 33735, 33782, 33864, 33972, 34131, 34137, 34155, 64031, 34224, 64032, 64033, 34823, 35061, 35346, 35383, 35449, 35495, 35518, 35551, 64034, 35574, 35667, 35711, 36080, 36084, 36114, 36214, 64035, 36559, 64036, 64037, 36967, 37086, 64038, 37141, 37159, 37338, 37335, 37342, 37357, 37358, 37348, 37349, 37382, 37392, 37386, 37434, 37440, 37436, 37454, 37465, 37457, 37433, 37479, 37543, 37495, 37496, 37607, 37591, 37593, 37584, 64039, 37589, 37600, 37587, 37669, 37665, 37627, 64040, 37662, 37631, 37661, 37634, 37744, 37719, 37796, 37830, 37854, 37880, 37937, 37957, 37960, 38290, 63964, 64041, 38557, 38575, 38707, 38715, 38723, 38733, 38735, 38737, 38741, 38999, 39013, 64042, 64043, 39207, 64044, 39326, 39502, 39641, 39644, 39797, 39794, 39823, 39857, 39867, 39936, 40304, 40299, 64045, 40473, 40657, null, null, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 65506, 65508, 65287, 65282, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 65506, 65508, 65287, 65282, 12849, 8470, 8481, 8757, 32394, 35100, 37704, 37512, 34012, 20425, 28859, 26161, 26824, 37625, 26363, 24389, 20008, 20193, 20220, 20224, 20227, 20281, 20310, 20370, 20362, 20378, 20372, 20429, 20544, 20514, 20479, 20510, 20550, 20592, 20546, 20628, 20724, 20696, 20810, 20836, 20893, 20926, 20972, 21013, 21148, 21158, 21184, 21211, 21248, 21255, 21284, 21362, 21395, 21426, 21469, 64014, 21660, 21642, 21673, 21759, 21894, 22361, 22373, 22444, 22472, 22471, 64015, 64016, 22686, 22706, 22795, 22867, 22875, 22877, 22883, 22948, 22970, 23382, 23488, 29999, 23512, 23532, 23582, 23718, 23738, 23797, 23847, 23891, 64017, 23874, 23917, 23992, 23993, 24016, 24353, 24372, 24423, 24503, 24542, 24669, 24709, 24714, 24798, 24789, 24864, 24818, 24849, 24887, 24880, 24984, 25107, 25254, 25589, 25696, 25757, 25806, 25934, 26112, 26133, 26171, 26121, 26158, 26142, 26148, 26213, 26199, 26201, 64018, 26227, 26265, 26272, 26290, 26303, 26362, 26382, 63785, 26470, 26555, 26706, 26560, 26625, 26692, 26831, 64019, 26984, 64020, 27032, 27106, 27184, 27243, 27206, 27251, 27262, 27362, 27364, 27606, 27711, 27740, 27782, 27759, 27866, 27908, 28039, 28015, 28054, 28076, 28111, 28152, 28146, 28156, 28217, 28252, 28199, 28220, 28351, 28552, 28597, 28661, 28677, 28679, 28712, 28805, 28843, 28943, 28932, 29020, 28998, 28999, 64021, 29121, 29182, 29361, 29374, 29476, 64022, 29559, 29629, 29641, 29654, 29667, 29650, 29703, 29685, 29734, 29738, 29737, 29742, 29794, 29833, 29855, 29953, 30063, 30338, 30364, 30366, 30363, 30374, 64023, 30534, 21167, 30753, 30798, 30820, 30842, 31024, 64024, 64025, 64026, 31124, 64027, 31131, 31441, 31463, 64028, 31467, 31646, 64029, 32072, 32092, 32183, 32160, 32214, 32338, 32583, 32673, 64030, 33537, 33634, 33663, 33735, 33782, 33864, 33972, 34131, 34137, 34155, 64031, 34224, 64032, 64033, 34823, 35061, 35346, 35383, 35449, 35495, 35518, 35551, 64034, 35574, 35667, 35711, 36080, 36084, 36114, 36214, 64035, 36559, 64036, 64037, 36967, 37086, 64038, 37141, 37159, 37338, 37335, 37342, 37357, 37358, 37348, 37349, 37382, 37392, 37386, 37434, 37440, 37436, 37454, 37465, 37457, 37433, 37479, 37543, 37495, 37496, 37607, 37591, 37593, 37584, 64039, 37589, 37600, 37587, 37669, 37665, 37627, 64040, 37662, 37631, 37661, 37634, 37744, 37719, 37796, 37830, 37854, 37880, 37937, 37957, 37960, 38290, 63964, 64041, 38557, 38575, 38707, 38715, 38723, 38733, 38735, 38737, 38741, 38999, 39013, 64042, 64043, 39207, 64044, 39326, 39502, 39641, 39644, 39797, 39794, 39823, 39857, 39867, 39936, 40304, 40299, 64045, 40473, 40657, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    "jis0212": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 728, 711, 184, 729, 733, 175, 731, 730, 65374, 900, 901, null, null, null, null, null, null, null, null, 161, 166, 191, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 186, 170, 169, 174, 8482, 164, 8470, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 902, 904, 905, 906, 938, null, 908, null, 910, 939, null, 911, null, null, null, null, 940, 941, 942, 943, 970, 912, 972, 962, 973, 971, 944, 974, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 198, 272, null, 294, null, 306, null, 321, 319, null, 330, 216, 338, null, 358, 222, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 230, 273, 240, 295, 305, 307, 312, 322, 320, 329, 331, 248, 339, 223, 359, 254, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 193, 192, 196, 194, 258, 461, 256, 260, 197, 195, 262, 264, 268, 199, 266, 270, 201, 200, 203, 202, 282, 278, 274, 280, null, 284, 286, 290, 288, 292, 205, 204, 207, 206, 463, 304, 298, 302, 296, 308, 310, 313, 317, 315, 323, 327, 325, 209, 211, 210, 214, 212, 465, 336, 332, 213, 340, 344, 342, 346, 348, 352, 350, 356, 354, 218, 217, 220, 219, 364, 467, 368, 362, 370, 366, 360, 471, 475, 473, 469, 372, 221, 376, 374, 377, 381, 379, null, null, null, null, null, null, null, 225, 224, 228, 226, 259, 462, 257, 261, 229, 227, 263, 265, 269, 231, 267, 271, 233, 232, 235, 234, 283, 279, 275, 281, 501, 285, 287, null, 289, 293, 237, 236, 239, 238, 464, null, 299, 303, 297, 309, 311, 314, 318, 316, 324, 328, 326, 241, 243, 242, 246, 244, 466, 337, 333, 245, 341, 345, 343, 347, 349, 353, 351, 357, 355, 250, 249, 252, 251, 365, 468, 369, 363, 371, 367, 361, 472, 476, 474, 470, 373, 253, 255, 375, 378, 382, 380, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 19970, 19972, 19973, 19980, 19986, 19999, 20003, 20004, 20008, 20011, 20014, 20015, 20016, 20021, 20032, 20033, 20036, 20039, 20049, 20058, 20060, 20067, 20072, 20073, 20084, 20085, 20089, 20095, 20109, 20118, 20119, 20125, 20143, 20153, 20163, 20176, 20186, 20187, 20192, 20193, 20194, 20200, 20207, 20209, 20211, 20213, 20221, 20222, 20223, 20224, 20226, 20227, 20232, 20235, 20236, 20242, 20245, 20246, 20247, 20249, 20270, 20273, 20320, 20275, 20277, 20279, 20281, 20283, 20286, 20288, 20290, 20296, 20297, 20299, 20300, 20306, 20308, 20310, 20312, 20319, 20323, 20330, 20332, 20334, 20337, 20343, 20344, 20345, 20346, 20349, 20350, 20353, 20354, 20356, 20357, 20361, 20362, 20364, 20366, 20368, 20370, 20371, 20372, 20375, 20377, 20378, 20382, 20383, 20402, 20407, 20409, 20411, 20412, 20413, 20414, 20416, 20417, 20421, 20422, 20424, 20425, 20427, 20428, 20429, 20431, 20434, 20444, 20448, 20450, 20464, 20466, 20476, 20477, 20479, 20480, 20481, 20484, 20487, 20490, 20492, 20494, 20496, 20499, 20503, 20504, 20507, 20508, 20509, 20510, 20514, 20519, 20526, 20528, 20530, 20531, 20533, 20544, 20545, 20546, 20549, 20550, 20554, 20556, 20558, 20561, 20562, 20563, 20567, 20569, 20575, 20576, 20578, 20579, 20582, 20583, 20586, 20589, 20592, 20593, 20539, 20609, 20611, 20612, 20614, 20618, 20622, 20623, 20624, 20626, 20627, 20628, 20630, 20635, 20636, 20638, 20639, 20640, 20641, 20642, 20650, 20655, 20656, 20665, 20666, 20669, 20672, 20675, 20676, 20679, 20684, 20686, 20688, 20691, 20692, 20696, 20700, 20701, 20703, 20706, 20708, 20710, 20712, 20713, 20719, 20721, 20726, 20730, 20734, 20739, 20742, 20743, 20744, 20747, 20748, 20749, 20750, 20722, 20752, 20759, 20761, 20763, 20764, 20765, 20766, 20771, 20775, 20776, 20780, 20781, 20783, 20785, 20787, 20788, 20789, 20792, 20793, 20802, 20810, 20815, 20819, 20821, 20823, 20824, 20831, 20836, 20838, 20862, 20867, 20868, 20875, 20878, 20888, 20893, 20897, 20899, 20909, 20920, 20922, 20924, 20926, 20927, 20930, 20936, 20943, 20945, 20946, 20947, 20949, 20952, 20958, 20962, 20965, 20974, 20978, 20979, 20980, 20983, 20993, 20994, 20997, 21010, 21011, 21013, 21014, 21016, 21026, 21032, 21041, 21042, 21045, 21052, 21061, 21065, 21077, 21079, 21080, 21082, 21084, 21087, 21088, 21089, 21094, 21102, 21111, 21112, 21113, 21120, 21122, 21125, 21130, 21132, 21139, 21141, 21142, 21143, 21144, 21146, 21148, 21156, 21157, 21158, 21159, 21167, 21168, 21174, 21175, 21176, 21178, 21179, 21181, 21184, 21188, 21190, 21192, 21196, 21199, 21201, 21204, 21206, 21211, 21212, 21217, 21221, 21224, 21225, 21226, 21228, 21232, 21233, 21236, 21238, 21239, 21248, 21251, 21258, 21259, 21260, 21265, 21267, 21272, 21275, 21276, 21278, 21279, 21285, 21287, 21288, 21289, 21291, 21292, 21293, 21296, 21298, 21301, 21308, 21309, 21310, 21314, 21324, 21323, 21337, 21339, 21345, 21347, 21349, 21356, 21357, 21362, 21369, 21374, 21379, 21383, 21384, 21390, 21395, 21396, 21401, 21405, 21409, 21412, 21418, 21419, 21423, 21426, 21428, 21429, 21431, 21432, 21434, 21437, 21440, 21445, 21455, 21458, 21459, 21461, 21466, 21469, 21470, 21472, 21478, 21479, 21493, 21506, 21523, 21530, 21537, 21543, 21544, 21546, 21551, 21553, 21556, 21557, 21571, 21572, 21575, 21581, 21583, 21598, 21602, 21604, 21606, 21607, 21609, 21611, 21613, 21614, 21620, 21631, 21633, 21635, 21637, 21640, 21641, 21645, 21649, 21653, 21654, 21660, 21663, 21665, 21670, 21671, 21673, 21674, 21677, 21678, 21681, 21687, 21689, 21690, 21691, 21695, 21702, 21706, 21709, 21710, 21728, 21738, 21740, 21743, 21750, 21756, 21758, 21759, 21760, 21761, 21765, 21768, 21769, 21772, 21773, 21774, 21781, 21802, 21803, 21810, 21813, 21814, 21819, 21820, 21821, 21825, 21831, 21833, 21834, 21837, 21840, 21841, 21848, 21850, 21851, 21854, 21856, 21857, 21860, 21862, 21887, 21889, 21890, 21894, 21896, 21902, 21903, 21905, 21906, 21907, 21908, 21911, 21923, 21924, 21933, 21938, 21951, 21953, 21955, 21958, 21961, 21963, 21964, 21966, 21969, 21970, 21971, 21975, 21976, 21979, 21982, 21986, 21993, 22006, 22015, 22021, 22024, 22026, 22029, 22030, 22031, 22032, 22033, 22034, 22041, 22060, 22064, 22067, 22069, 22071, 22073, 22075, 22076, 22077, 22079, 22080, 22081, 22083, 22084, 22086, 22089, 22091, 22093, 22095, 22100, 22110, 22112, 22113, 22114, 22115, 22118, 22121, 22125, 22127, 22129, 22130, 22133, 22148, 22149, 22152, 22155, 22156, 22165, 22169, 22170, 22173, 22174, 22175, 22182, 22183, 22184, 22185, 22187, 22188, 22189, 22193, 22195, 22199, 22206, 22213, 22217, 22218, 22219, 22223, 22224, 22220, 22221, 22233, 22236, 22237, 22239, 22241, 22244, 22245, 22246, 22247, 22248, 22257, 22251, 22253, 22262, 22263, 22273, 22274, 22279, 22282, 22284, 22289, 22293, 22298, 22299, 22301, 22304, 22306, 22307, 22308, 22309, 22313, 22314, 22316, 22318, 22319, 22323, 22324, 22333, 22334, 22335, 22341, 22342, 22348, 22349, 22354, 22370, 22373, 22375, 22376, 22379, 22381, 22382, 22383, 22384, 22385, 22387, 22388, 22389, 22391, 22393, 22394, 22395, 22396, 22398, 22401, 22403, 22412, 22420, 22423, 22425, 22426, 22428, 22429, 22430, 22431, 22433, 22421, 22439, 22440, 22441, 22444, 22456, 22461, 22471, 22472, 22476, 22479, 22485, 22493, 22494, 22500, 22502, 22503, 22505, 22509, 22512, 22517, 22518, 22520, 22525, 22526, 22527, 22531, 22532, 22536, 22537, 22497, 22540, 22541, 22555, 22558, 22559, 22560, 22566, 22567, 22573, 22578, 22585, 22591, 22601, 22604, 22605, 22607, 22608, 22613, 22623, 22625, 22628, 22631, 22632, 22648, 22652, 22655, 22656, 22657, 22663, 22664, 22665, 22666, 22668, 22669, 22671, 22672, 22676, 22678, 22685, 22688, 22689, 22690, 22694, 22697, 22705, 22706, 22724, 22716, 22722, 22728, 22733, 22734, 22736, 22738, 22740, 22742, 22746, 22749, 22753, 22754, 22761, 22771, 22789, 22790, 22795, 22796, 22802, 22803, 22804, 34369, 22813, 22817, 22819, 22820, 22824, 22831, 22832, 22835, 22837, 22838, 22847, 22851, 22854, 22866, 22867, 22873, 22875, 22877, 22878, 22879, 22881, 22883, 22891, 22893, 22895, 22898, 22901, 22902, 22905, 22907, 22908, 22923, 22924, 22926, 22930, 22933, 22935, 22943, 22948, 22951, 22957, 22958, 22959, 22960, 22963, 22967, 22970, 22972, 22977, 22979, 22980, 22984, 22986, 22989, 22994, 23005, 23006, 23007, 23011, 23012, 23015, 23022, 23023, 23025, 23026, 23028, 23031, 23040, 23044, 23052, 23053, 23054, 23058, 23059, 23070, 23075, 23076, 23079, 23080, 23082, 23085, 23088, 23108, 23109, 23111, 23112, 23116, 23120, 23125, 23134, 23139, 23141, 23143, 23149, 23159, 23162, 23163, 23166, 23179, 23184, 23187, 23190, 23193, 23196, 23198, 23199, 23200, 23202, 23207, 23212, 23217, 23218, 23219, 23221, 23224, 23226, 23227, 23231, 23236, 23238, 23240, 23247, 23258, 23260, 23264, 23269, 23274, 23278, 23285, 23286, 23293, 23296, 23297, 23304, 23319, 23348, 23321, 23323, 23325, 23329, 23333, 23341, 23352, 23361, 23371, 23372, 23378, 23382, 23390, 23400, 23406, 23407, 23420, 23421, 23422, 23423, 23425, 23428, 23430, 23434, 23438, 23440, 23441, 23443, 23444, 23446, 23464, 23465, 23468, 23469, 23471, 23473, 23474, 23479, 23482, 23484, 23488, 23489, 23501, 23503, 23510, 23511, 23512, 23513, 23514, 23520, 23535, 23537, 23540, 23549, 23564, 23575, 23582, 23583, 23587, 23590, 23593, 23595, 23596, 23598, 23600, 23602, 23605, 23606, 23641, 23642, 23644, 23650, 23651, 23655, 23656, 23657, 23661, 23664, 23668, 23669, 23674, 23675, 23676, 23677, 23687, 23688, 23690, 23695, 23698, 23709, 23711, 23712, 23714, 23715, 23718, 23722, 23730, 23732, 23733, 23738, 23753, 23755, 23762, 23773, 23767, 23790, 23793, 23794, 23796, 23809, 23814, 23821, 23826, 23851, 23843, 23844, 23846, 23847, 23857, 23860, 23865, 23869, 23871, 23874, 23875, 23878, 23880, 23893, 23889, 23897, 23882, 23903, 23904, 23905, 23906, 23908, 23914, 23917, 23920, 23929, 23930, 23934, 23935, 23937, 23939, 23944, 23946, 23954, 23955, 23956, 23957, 23961, 23963, 23967, 23968, 23975, 23979, 23984, 23988, 23992, 23993, 24003, 24007, 24011, 24016, 24014, 24024, 24025, 24032, 24036, 24041, 24056, 24057, 24064, 24071, 24077, 24082, 24084, 24085, 24088, 24095, 24096, 24110, 24104, 24114, 24117, 24126, 24139, 24144, 24137, 24145, 24150, 24152, 24155, 24156, 24158, 24168, 24170, 24171, 24172, 24173, 24174, 24176, 24192, 24203, 24206, 24226, 24228, 24229, 24232, 24234, 24236, 24241, 24243, 24253, 24254, 24255, 24262, 24268, 24267, 24270, 24273, 24274, 24276, 24277, 24284, 24286, 24293, 24299, 24322, 24326, 24327, 24328, 24334, 24345, 24348, 24349, 24353, 24354, 24355, 24356, 24360, 24363, 24364, 24366, 24368, 24372, 24374, 24379, 24381, 24383, 24384, 24388, 24389, 24391, 24397, 24400, 24404, 24408, 24411, 24416, 24419, 24420, 24423, 24431, 24434, 24436, 24437, 24440, 24442, 24445, 24446, 24457, 24461, 24463, 24470, 24476, 24477, 24482, 24487, 24491, 24484, 24492, 24495, 24496, 24497, 24504, 24516, 24519, 24520, 24521, 24523, 24528, 24529, 24530, 24531, 24532, 24542, 24545, 24546, 24552, 24553, 24554, 24556, 24557, 24558, 24559, 24562, 24563, 24566, 24570, 24572, 24583, 24586, 24589, 24595, 24596, 24599, 24600, 24602, 24607, 24612, 24621, 24627, 24629, 24640, 24647, 24648, 24649, 24652, 24657, 24660, 24662, 24663, 24669, 24673, 24679, 24689, 24702, 24703, 24706, 24710, 24712, 24714, 24718, 24721, 24723, 24725, 24728, 24733, 24734, 24738, 24740, 24741, 24744, 24752, 24753, 24759, 24763, 24766, 24770, 24772, 24776, 24777, 24778, 24779, 24782, 24783, 24788, 24789, 24793, 24795, 24797, 24798, 24802, 24805, 24818, 24821, 24824, 24828, 24829, 24834, 24839, 24842, 24844, 24848, 24849, 24850, 24851, 24852, 24854, 24855, 24857, 24860, 24862, 24866, 24874, 24875, 24880, 24881, 24885, 24886, 24887, 24889, 24897, 24901, 24902, 24905, 24926, 24928, 24940, 24946, 24952, 24955, 24956, 24959, 24960, 24961, 24963, 24964, 24971, 24973, 24978, 24979, 24983, 24984, 24988, 24989, 24991, 24992, 24997, 25e3, 25002, 25005, 25016, 25017, 25020, 25024, 25025, 25026, 25038, 25039, 25045, 25052, 25053, 25054, 25055, 25057, 25058, 25063, 25065, 25061, 25068, 25069, 25071, 25089, 25091, 25092, 25095, 25107, 25109, 25116, 25120, 25122, 25123, 25127, 25129, 25131, 25145, 25149, 25154, 25155, 25156, 25158, 25164, 25168, 25169, 25170, 25172, 25174, 25178, 25180, 25188, 25197, 25199, 25203, 25210, 25213, 25229, 25230, 25231, 25232, 25254, 25256, 25267, 25270, 25271, 25274, 25278, 25279, 25284, 25294, 25301, 25302, 25306, 25322, 25330, 25332, 25340, 25341, 25347, 25348, 25354, 25355, 25357, 25360, 25363, 25366, 25368, 25385, 25386, 25389, 25397, 25398, 25401, 25404, 25409, 25410, 25411, 25412, 25414, 25418, 25419, 25422, 25426, 25427, 25428, 25432, 25435, 25445, 25446, 25452, 25453, 25457, 25460, 25461, 25464, 25468, 25469, 25471, 25474, 25476, 25479, 25482, 25488, 25492, 25493, 25497, 25498, 25502, 25508, 25510, 25517, 25518, 25519, 25533, 25537, 25541, 25544, 25550, 25553, 25555, 25556, 25557, 25564, 25568, 25573, 25578, 25580, 25586, 25587, 25589, 25592, 25593, 25609, 25610, 25616, 25618, 25620, 25624, 25630, 25632, 25634, 25636, 25637, 25641, 25642, 25647, 25648, 25653, 25661, 25663, 25675, 25679, 25681, 25682, 25683, 25684, 25690, 25691, 25692, 25693, 25695, 25696, 25697, 25699, 25709, 25715, 25716, 25723, 25725, 25733, 25735, 25743, 25744, 25745, 25752, 25753, 25755, 25757, 25759, 25761, 25763, 25766, 25768, 25772, 25779, 25789, 25790, 25791, 25796, 25801, 25802, 25803, 25804, 25806, 25808, 25809, 25813, 25815, 25828, 25829, 25833, 25834, 25837, 25840, 25845, 25847, 25851, 25855, 25857, 25860, 25864, 25865, 25866, 25871, 25875, 25876, 25878, 25881, 25883, 25886, 25887, 25890, 25894, 25897, 25902, 25905, 25914, 25916, 25917, 25923, 25927, 25929, 25936, 25938, 25940, 25951, 25952, 25959, 25963, 25978, 25981, 25985, 25989, 25994, 26002, 26005, 26008, 26013, 26016, 26019, 26022, 26030, 26034, 26035, 26036, 26047, 26050, 26056, 26057, 26062, 26064, 26068, 26070, 26072, 26079, 26096, 26098, 26100, 26101, 26105, 26110, 26111, 26112, 26116, 26120, 26121, 26125, 26129, 26130, 26133, 26134, 26141, 26142, 26145, 26146, 26147, 26148, 26150, 26153, 26154, 26155, 26156, 26158, 26160, 26161, 26163, 26169, 26167, 26176, 26181, 26182, 26186, 26188, 26193, 26190, 26199, 26200, 26201, 26203, 26204, 26208, 26209, 26363, 26218, 26219, 26220, 26238, 26227, 26229, 26239, 26231, 26232, 26233, 26235, 26240, 26236, 26251, 26252, 26253, 26256, 26258, 26265, 26266, 26267, 26268, 26271, 26272, 26276, 26285, 26289, 26290, 26293, 26299, 26303, 26304, 26306, 26307, 26312, 26316, 26318, 26319, 26324, 26331, 26335, 26344, 26347, 26348, 26350, 26362, 26373, 26375, 26382, 26387, 26393, 26396, 26400, 26402, 26419, 26430, 26437, 26439, 26440, 26444, 26452, 26453, 26461, 26470, 26476, 26478, 26484, 26486, 26491, 26497, 26500, 26510, 26511, 26513, 26515, 26518, 26520, 26521, 26523, 26544, 26545, 26546, 26549, 26555, 26556, 26557, 26617, 26560, 26562, 26563, 26565, 26568, 26569, 26578, 26583, 26585, 26588, 26593, 26598, 26608, 26610, 26614, 26615, 26706, 26644, 26649, 26653, 26655, 26664, 26663, 26668, 26669, 26671, 26672, 26673, 26675, 26683, 26687, 26692, 26693, 26698, 26700, 26709, 26711, 26712, 26715, 26731, 26734, 26735, 26736, 26737, 26738, 26741, 26745, 26746, 26747, 26748, 26754, 26756, 26758, 26760, 26774, 26776, 26778, 26780, 26785, 26787, 26789, 26793, 26794, 26798, 26802, 26811, 26821, 26824, 26828, 26831, 26832, 26833, 26835, 26838, 26841, 26844, 26845, 26853, 26856, 26858, 26859, 26860, 26861, 26864, 26865, 26869, 26870, 26875, 26876, 26877, 26886, 26889, 26890, 26896, 26897, 26899, 26902, 26903, 26929, 26931, 26933, 26936, 26939, 26946, 26949, 26953, 26958, 26967, 26971, 26979, 26980, 26981, 26982, 26984, 26985, 26988, 26992, 26993, 26994, 27002, 27003, 27007, 27008, 27021, 27026, 27030, 27032, 27041, 27045, 27046, 27048, 27051, 27053, 27055, 27063, 27064, 27066, 27068, 27077, 27080, 27089, 27094, 27095, 27106, 27109, 27118, 27119, 27121, 27123, 27125, 27134, 27136, 27137, 27139, 27151, 27153, 27157, 27162, 27165, 27168, 27172, 27176, 27184, 27186, 27188, 27191, 27195, 27198, 27199, 27205, 27206, 27209, 27210, 27214, 27216, 27217, 27218, 27221, 27222, 27227, 27236, 27239, 27242, 27249, 27251, 27262, 27265, 27267, 27270, 27271, 27273, 27275, 27281, 27291, 27293, 27294, 27295, 27301, 27307, 27311, 27312, 27313, 27316, 27325, 27326, 27327, 27334, 27337, 27336, 27340, 27344, 27348, 27349, 27350, 27356, 27357, 27364, 27367, 27372, 27376, 27377, 27378, 27388, 27389, 27394, 27395, 27398, 27399, 27401, 27407, 27408, 27409, 27415, 27419, 27422, 27428, 27432, 27435, 27436, 27439, 27445, 27446, 27451, 27455, 27462, 27466, 27469, 27474, 27478, 27480, 27485, 27488, 27495, 27499, 27502, 27504, 27509, 27517, 27518, 27522, 27525, 27543, 27547, 27551, 27552, 27554, 27555, 27560, 27561, 27564, 27565, 27566, 27568, 27576, 27577, 27581, 27582, 27587, 27588, 27593, 27596, 27606, 27610, 27617, 27619, 27622, 27623, 27630, 27633, 27639, 27641, 27647, 27650, 27652, 27653, 27657, 27661, 27662, 27664, 27666, 27673, 27679, 27686, 27687, 27688, 27692, 27694, 27699, 27701, 27702, 27706, 27707, 27711, 27722, 27723, 27725, 27727, 27730, 27732, 27737, 27739, 27740, 27755, 27757, 27759, 27764, 27766, 27768, 27769, 27771, 27781, 27782, 27783, 27785, 27796, 27797, 27799, 27800, 27804, 27807, 27824, 27826, 27828, 27842, 27846, 27853, 27855, 27856, 27857, 27858, 27860, 27862, 27866, 27868, 27872, 27879, 27881, 27883, 27884, 27886, 27890, 27892, 27908, 27911, 27914, 27918, 27919, 27921, 27923, 27930, 27942, 27943, 27944, 27751, 27950, 27951, 27953, 27961, 27964, 27967, 27991, 27998, 27999, 28001, 28005, 28007, 28015, 28016, 28028, 28034, 28039, 28049, 28050, 28052, 28054, 28055, 28056, 28074, 28076, 28084, 28087, 28089, 28093, 28095, 28100, 28104, 28106, 28110, 28111, 28118, 28123, 28125, 28127, 28128, 28130, 28133, 28137, 28143, 28144, 28148, 28150, 28156, 28160, 28164, 28190, 28194, 28199, 28210, 28214, 28217, 28219, 28220, 28228, 28229, 28232, 28233, 28235, 28239, 28241, 28242, 28243, 28244, 28247, 28252, 28253, 28254, 28258, 28259, 28264, 28275, 28283, 28285, 28301, 28307, 28313, 28320, 28327, 28333, 28334, 28337, 28339, 28347, 28351, 28352, 28353, 28355, 28359, 28360, 28362, 28365, 28366, 28367, 28395, 28397, 28398, 28409, 28411, 28413, 28420, 28424, 28426, 28428, 28429, 28438, 28440, 28442, 28443, 28454, 28457, 28458, 28463, 28464, 28467, 28470, 28475, 28476, 28461, 28495, 28497, 28498, 28499, 28503, 28505, 28506, 28509, 28510, 28513, 28514, 28520, 28524, 28541, 28542, 28547, 28551, 28552, 28555, 28556, 28557, 28560, 28562, 28563, 28564, 28566, 28570, 28575, 28576, 28581, 28582, 28583, 28584, 28590, 28591, 28592, 28597, 28598, 28604, 28613, 28615, 28616, 28618, 28634, 28638, 28648, 28649, 28656, 28661, 28665, 28668, 28669, 28672, 28677, 28678, 28679, 28685, 28695, 28704, 28707, 28719, 28724, 28727, 28729, 28732, 28739, 28740, 28744, 28745, 28746, 28747, 28756, 28757, 28765, 28766, 28750, 28772, 28773, 28780, 28782, 28789, 28790, 28798, 28801, 28805, 28806, 28820, 28821, 28822, 28823, 28824, 28827, 28836, 28843, 28848, 28849, 28852, 28855, 28874, 28881, 28883, 28884, 28885, 28886, 28888, 28892, 28900, 28922, 28931, 28932, 28933, 28934, 28935, 28939, 28940, 28943, 28958, 28960, 28971, 28973, 28975, 28976, 28977, 28984, 28993, 28997, 28998, 28999, 29002, 29003, 29008, 29010, 29015, 29018, 29020, 29022, 29024, 29032, 29049, 29056, 29061, 29063, 29068, 29074, 29082, 29083, 29088, 29090, 29103, 29104, 29106, 29107, 29114, 29119, 29120, 29121, 29124, 29131, 29132, 29139, 29142, 29145, 29146, 29148, 29176, 29182, 29184, 29191, 29192, 29193, 29203, 29207, 29210, 29213, 29215, 29220, 29227, 29231, 29236, 29240, 29241, 29249, 29250, 29251, 29253, 29262, 29263, 29264, 29267, 29269, 29270, 29274, 29276, 29278, 29280, 29283, 29288, 29291, 29294, 29295, 29297, 29303, 29304, 29307, 29308, 29311, 29316, 29321, 29325, 29326, 29331, 29339, 29352, 29357, 29358, 29361, 29364, 29374, 29377, 29383, 29385, 29388, 29397, 29398, 29400, 29407, 29413, 29427, 29428, 29434, 29435, 29438, 29442, 29444, 29445, 29447, 29451, 29453, 29458, 29459, 29464, 29465, 29470, 29474, 29476, 29479, 29480, 29484, 29489, 29490, 29493, 29498, 29499, 29501, 29507, 29517, 29520, 29522, 29526, 29528, 29533, 29534, 29535, 29536, 29542, 29543, 29545, 29547, 29548, 29550, 29551, 29553, 29559, 29561, 29564, 29568, 29569, 29571, 29573, 29574, 29582, 29584, 29587, 29589, 29591, 29592, 29596, 29598, 29599, 29600, 29602, 29605, 29606, 29610, 29611, 29613, 29621, 29623, 29625, 29628, 29629, 29631, 29637, 29638, 29641, 29643, 29644, 29647, 29650, 29651, 29654, 29657, 29661, 29665, 29667, 29670, 29671, 29673, 29684, 29685, 29687, 29689, 29690, 29691, 29693, 29695, 29696, 29697, 29700, 29703, 29706, 29713, 29722, 29723, 29732, 29734, 29736, 29737, 29738, 29739, 29740, 29741, 29742, 29743, 29744, 29745, 29753, 29760, 29763, 29764, 29766, 29767, 29771, 29773, 29777, 29778, 29783, 29789, 29794, 29798, 29799, 29800, 29803, 29805, 29806, 29809, 29810, 29824, 29825, 29829, 29830, 29831, 29833, 29839, 29840, 29841, 29842, 29848, 29849, 29850, 29852, 29855, 29856, 29857, 29859, 29862, 29864, 29865, 29866, 29867, 29870, 29871, 29873, 29874, 29877, 29881, 29883, 29887, 29896, 29897, 29900, 29904, 29907, 29912, 29914, 29915, 29918, 29919, 29924, 29928, 29930, 29931, 29935, 29940, 29946, 29947, 29948, 29951, 29958, 29970, 29974, 29975, 29984, 29985, 29988, 29991, 29993, 29994, 29999, 30006, 30009, 30013, 30014, 30015, 30016, 30019, 30023, 30024, 30030, 30032, 30034, 30039, 30046, 30047, 30049, 30063, 30065, 30073, 30074, 30075, 30076, 30077, 30078, 30081, 30085, 30096, 30098, 30099, 30101, 30105, 30108, 30114, 30116, 30132, 30138, 30143, 30144, 30145, 30148, 30150, 30156, 30158, 30159, 30167, 30172, 30175, 30176, 30177, 30180, 30183, 30188, 30190, 30191, 30193, 30201, 30208, 30210, 30211, 30212, 30215, 30216, 30218, 30220, 30223, 30226, 30227, 30229, 30230, 30233, 30235, 30236, 30237, 30238, 30243, 30245, 30246, 30249, 30253, 30258, 30259, 30261, 30264, 30265, 30266, 30268, 30282, 30272, 30273, 30275, 30276, 30277, 30281, 30283, 30293, 30297, 30303, 30308, 30309, 30317, 30318, 30319, 30321, 30324, 30337, 30341, 30348, 30349, 30357, 30363, 30364, 30365, 30367, 30368, 30370, 30371, 30372, 30373, 30374, 30375, 30376, 30378, 30381, 30397, 30401, 30405, 30409, 30411, 30412, 30414, 30420, 30425, 30432, 30438, 30440, 30444, 30448, 30449, 30454, 30457, 30460, 30464, 30470, 30474, 30478, 30482, 30484, 30485, 30487, 30489, 30490, 30492, 30498, 30504, 30509, 30510, 30511, 30516, 30517, 30518, 30521, 30525, 30526, 30530, 30533, 30534, 30538, 30541, 30542, 30543, 30546, 30550, 30551, 30556, 30558, 30559, 30560, 30562, 30564, 30567, 30570, 30572, 30576, 30578, 30579, 30580, 30586, 30589, 30592, 30596, 30604, 30605, 30612, 30613, 30614, 30618, 30623, 30626, 30631, 30634, 30638, 30639, 30641, 30645, 30654, 30659, 30665, 30673, 30674, 30677, 30681, 30686, 30687, 30688, 30692, 30694, 30698, 30700, 30704, 30705, 30708, 30712, 30715, 30725, 30726, 30729, 30733, 30734, 30737, 30749, 30753, 30754, 30755, 30765, 30766, 30768, 30773, 30775, 30787, 30788, 30791, 30792, 30796, 30798, 30802, 30812, 30814, 30816, 30817, 30819, 30820, 30824, 30826, 30830, 30842, 30846, 30858, 30863, 30868, 30872, 30881, 30877, 30878, 30879, 30884, 30888, 30892, 30893, 30896, 30897, 30898, 30899, 30907, 30909, 30911, 30919, 30920, 30921, 30924, 30926, 30930, 30931, 30933, 30934, 30948, 30939, 30943, 30944, 30945, 30950, 30954, 30962, 30963, 30976, 30966, 30967, 30970, 30971, 30975, 30982, 30988, 30992, 31002, 31004, 31006, 31007, 31008, 31013, 31015, 31017, 31021, 31025, 31028, 31029, 31035, 31037, 31039, 31044, 31045, 31046, 31050, 31051, 31055, 31057, 31060, 31064, 31067, 31068, 31079, 31081, 31083, 31090, 31097, 31099, 31100, 31102, 31115, 31116, 31121, 31123, 31124, 31125, 31126, 31128, 31131, 31132, 31137, 31144, 31145, 31147, 31151, 31153, 31156, 31160, 31163, 31170, 31172, 31175, 31176, 31178, 31183, 31188, 31190, 31194, 31197, 31198, 31200, 31202, 31205, 31210, 31211, 31213, 31217, 31224, 31228, 31234, 31235, 31239, 31241, 31242, 31244, 31249, 31253, 31259, 31262, 31265, 31271, 31275, 31277, 31279, 31280, 31284, 31285, 31288, 31289, 31290, 31300, 31301, 31303, 31304, 31308, 31317, 31318, 31321, 31324, 31325, 31327, 31328, 31333, 31335, 31338, 31341, 31349, 31352, 31358, 31360, 31362, 31365, 31366, 31370, 31371, 31376, 31377, 31380, 31390, 31392, 31395, 31404, 31411, 31413, 31417, 31419, 31420, 31430, 31433, 31436, 31438, 31441, 31451, 31464, 31465, 31467, 31468, 31473, 31476, 31483, 31485, 31486, 31495, 31508, 31519, 31523, 31527, 31529, 31530, 31531, 31533, 31534, 31535, 31536, 31537, 31540, 31549, 31551, 31552, 31553, 31559, 31566, 31573, 31584, 31588, 31590, 31593, 31594, 31597, 31599, 31602, 31603, 31607, 31620, 31625, 31630, 31632, 31633, 31638, 31643, 31646, 31648, 31653, 31660, 31663, 31664, 31666, 31669, 31670, 31674, 31675, 31676, 31677, 31682, 31685, 31688, 31690, 31700, 31702, 31703, 31705, 31706, 31707, 31720, 31722, 31730, 31732, 31733, 31736, 31737, 31738, 31740, 31742, 31745, 31746, 31747, 31748, 31750, 31753, 31755, 31756, 31758, 31759, 31769, 31771, 31776, 31781, 31782, 31784, 31788, 31793, 31795, 31796, 31798, 31801, 31802, 31814, 31818, 31829, 31825, 31826, 31827, 31833, 31834, 31835, 31836, 31837, 31838, 31841, 31843, 31847, 31849, 31853, 31854, 31856, 31858, 31865, 31868, 31869, 31878, 31879, 31887, 31892, 31902, 31904, 31910, 31920, 31926, 31927, 31930, 31931, 31932, 31935, 31940, 31943, 31944, 31945, 31949, 31951, 31955, 31956, 31957, 31959, 31961, 31962, 31965, 31974, 31977, 31979, 31989, 32003, 32007, 32008, 32009, 32015, 32017, 32018, 32019, 32022, 32029, 32030, 32035, 32038, 32042, 32045, 32049, 32060, 32061, 32062, 32064, 32065, 32071, 32072, 32077, 32081, 32083, 32087, 32089, 32090, 32092, 32093, 32101, 32103, 32106, 32112, 32120, 32122, 32123, 32127, 32129, 32130, 32131, 32133, 32134, 32136, 32139, 32140, 32141, 32145, 32150, 32151, 32157, 32158, 32166, 32167, 32170, 32179, 32182, 32183, 32185, 32194, 32195, 32196, 32197, 32198, 32204, 32205, 32206, 32215, 32217, 32256, 32226, 32229, 32230, 32234, 32235, 32237, 32241, 32245, 32246, 32249, 32250, 32264, 32272, 32273, 32277, 32279, 32284, 32285, 32288, 32295, 32296, 32300, 32301, 32303, 32307, 32310, 32319, 32324, 32325, 32327, 32334, 32336, 32338, 32344, 32351, 32353, 32354, 32357, 32363, 32366, 32367, 32371, 32376, 32382, 32385, 32390, 32391, 32394, 32397, 32401, 32405, 32408, 32410, 32413, 32414, 32572, 32571, 32573, 32574, 32575, 32579, 32580, 32583, 32591, 32594, 32595, 32603, 32604, 32605, 32609, 32611, 32612, 32613, 32614, 32621, 32625, 32637, 32638, 32639, 32640, 32651, 32653, 32655, 32656, 32657, 32662, 32663, 32668, 32673, 32674, 32678, 32682, 32685, 32692, 32700, 32703, 32704, 32707, 32712, 32718, 32719, 32731, 32735, 32739, 32741, 32744, 32748, 32750, 32751, 32754, 32762, 32765, 32766, 32767, 32775, 32776, 32778, 32781, 32782, 32783, 32785, 32787, 32788, 32790, 32797, 32798, 32799, 32800, 32804, 32806, 32812, 32814, 32816, 32820, 32821, 32823, 32825, 32826, 32828, 32830, 32832, 32836, 32864, 32868, 32870, 32877, 32881, 32885, 32897, 32904, 32910, 32924, 32926, 32934, 32935, 32939, 32952, 32953, 32968, 32973, 32975, 32978, 32980, 32981, 32983, 32984, 32992, 33005, 33006, 33008, 33010, 33011, 33014, 33017, 33018, 33022, 33027, 33035, 33046, 33047, 33048, 33052, 33054, 33056, 33060, 33063, 33068, 33072, 33077, 33082, 33084, 33093, 33095, 33098, 33100, 33106, 33111, 33120, 33121, 33127, 33128, 33129, 33133, 33135, 33143, 33153, 33168, 33156, 33157, 33158, 33163, 33166, 33174, 33176, 33179, 33182, 33186, 33198, 33202, 33204, 33211, 33227, 33219, 33221, 33226, 33230, 33231, 33237, 33239, 33243, 33245, 33246, 33249, 33252, 33259, 33260, 33264, 33265, 33266, 33269, 33270, 33272, 33273, 33277, 33279, 33280, 33283, 33295, 33299, 33300, 33305, 33306, 33309, 33313, 33314, 33320, 33330, 33332, 33338, 33347, 33348, 33349, 33350, 33355, 33358, 33359, 33361, 33366, 33372, 33376, 33379, 33383, 33389, 33396, 33403, 33405, 33407, 33408, 33409, 33411, 33412, 33415, 33417, 33418, 33422, 33425, 33428, 33430, 33432, 33434, 33435, 33440, 33441, 33443, 33444, 33447, 33448, 33449, 33450, 33454, 33456, 33458, 33460, 33463, 33466, 33468, 33470, 33471, 33478, 33488, 33493, 33498, 33504, 33506, 33508, 33512, 33514, 33517, 33519, 33526, 33527, 33533, 33534, 33536, 33537, 33543, 33544, 33546, 33547, 33620, 33563, 33565, 33566, 33567, 33569, 33570, 33580, 33581, 33582, 33584, 33587, 33591, 33594, 33596, 33597, 33602, 33603, 33604, 33607, 33613, 33614, 33617, 33621, 33622, 33623, 33648, 33656, 33661, 33663, 33664, 33666, 33668, 33670, 33677, 33682, 33684, 33685, 33688, 33689, 33691, 33692, 33693, 33702, 33703, 33705, 33708, 33726, 33727, 33728, 33735, 33737, 33743, 33744, 33745, 33748, 33757, 33619, 33768, 33770, 33782, 33784, 33785, 33788, 33793, 33798, 33802, 33807, 33809, 33813, 33817, 33709, 33839, 33849, 33861, 33863, 33864, 33866, 33869, 33871, 33873, 33874, 33878, 33880, 33881, 33882, 33884, 33888, 33892, 33893, 33895, 33898, 33904, 33907, 33908, 33910, 33912, 33916, 33917, 33921, 33925, 33938, 33939, 33941, 33950, 33958, 33960, 33961, 33962, 33967, 33969, 33972, 33978, 33981, 33982, 33984, 33986, 33991, 33992, 33996, 33999, 34003, 34012, 34023, 34026, 34031, 34032, 34033, 34034, 34039, 34098, 34042, 34043, 34045, 34050, 34051, 34055, 34060, 34062, 34064, 34076, 34078, 34082, 34083, 34084, 34085, 34087, 34090, 34091, 34095, 34099, 34100, 34102, 34111, 34118, 34127, 34128, 34129, 34130, 34131, 34134, 34137, 34140, 34141, 34142, 34143, 34144, 34145, 34146, 34148, 34155, 34159, 34169, 34170, 34171, 34173, 34175, 34177, 34181, 34182, 34185, 34187, 34188, 34191, 34195, 34200, 34205, 34207, 34208, 34210, 34213, 34215, 34228, 34230, 34231, 34232, 34236, 34237, 34238, 34239, 34242, 34247, 34250, 34251, 34254, 34221, 34264, 34266, 34271, 34272, 34278, 34280, 34285, 34291, 34294, 34300, 34303, 34304, 34308, 34309, 34317, 34318, 34320, 34321, 34322, 34328, 34329, 34331, 34334, 34337, 34343, 34345, 34358, 34360, 34362, 34364, 34365, 34368, 34370, 34374, 34386, 34387, 34390, 34391, 34392, 34393, 34397, 34400, 34401, 34402, 34403, 34404, 34409, 34412, 34415, 34421, 34422, 34423, 34426, 34445, 34449, 34454, 34456, 34458, 34460, 34465, 34470, 34471, 34472, 34477, 34481, 34483, 34484, 34485, 34487, 34488, 34489, 34495, 34496, 34497, 34499, 34501, 34513, 34514, 34517, 34519, 34522, 34524, 34528, 34531, 34533, 34535, 34440, 34554, 34556, 34557, 34564, 34565, 34567, 34571, 34574, 34575, 34576, 34579, 34580, 34585, 34590, 34591, 34593, 34595, 34600, 34606, 34607, 34609, 34610, 34617, 34618, 34620, 34621, 34622, 34624, 34627, 34629, 34637, 34648, 34653, 34657, 34660, 34661, 34671, 34673, 34674, 34683, 34691, 34692, 34693, 34694, 34695, 34696, 34697, 34699, 34700, 34704, 34707, 34709, 34711, 34712, 34713, 34718, 34720, 34723, 34727, 34732, 34733, 34734, 34737, 34741, 34750, 34751, 34753, 34760, 34761, 34762, 34766, 34773, 34774, 34777, 34778, 34780, 34783, 34786, 34787, 34788, 34794, 34795, 34797, 34801, 34803, 34808, 34810, 34815, 34817, 34819, 34822, 34825, 34826, 34827, 34832, 34841, 34834, 34835, 34836, 34840, 34842, 34843, 34844, 34846, 34847, 34856, 34861, 34862, 34864, 34866, 34869, 34874, 34876, 34881, 34883, 34885, 34888, 34889, 34890, 34891, 34894, 34897, 34901, 34902, 34904, 34906, 34908, 34911, 34912, 34916, 34921, 34929, 34937, 34939, 34944, 34968, 34970, 34971, 34972, 34975, 34976, 34984, 34986, 35002, 35005, 35006, 35008, 35018, 35019, 35020, 35021, 35022, 35025, 35026, 35027, 35035, 35038, 35047, 35055, 35056, 35057, 35061, 35063, 35073, 35078, 35085, 35086, 35087, 35093, 35094, 35096, 35097, 35098, 35100, 35104, 35110, 35111, 35112, 35120, 35121, 35122, 35125, 35129, 35130, 35134, 35136, 35138, 35141, 35142, 35145, 35151, 35154, 35159, 35162, 35163, 35164, 35169, 35170, 35171, 35179, 35182, 35184, 35187, 35189, 35194, 35195, 35196, 35197, 35209, 35213, 35216, 35220, 35221, 35227, 35228, 35231, 35232, 35237, 35248, 35252, 35253, 35254, 35255, 35260, 35284, 35285, 35286, 35287, 35288, 35301, 35305, 35307, 35309, 35313, 35315, 35318, 35321, 35325, 35327, 35332, 35333, 35335, 35343, 35345, 35346, 35348, 35349, 35358, 35360, 35362, 35364, 35366, 35371, 35372, 35375, 35381, 35383, 35389, 35390, 35392, 35395, 35397, 35399, 35401, 35405, 35406, 35411, 35414, 35415, 35416, 35420, 35421, 35425, 35429, 35431, 35445, 35446, 35447, 35449, 35450, 35451, 35454, 35455, 35456, 35459, 35462, 35467, 35471, 35472, 35474, 35478, 35479, 35481, 35487, 35495, 35497, 35502, 35503, 35507, 35510, 35511, 35515, 35518, 35523, 35526, 35528, 35529, 35530, 35537, 35539, 35540, 35541, 35543, 35549, 35551, 35564, 35568, 35572, 35573, 35574, 35580, 35583, 35589, 35590, 35595, 35601, 35612, 35614, 35615, 35594, 35629, 35632, 35639, 35644, 35650, 35651, 35652, 35653, 35654, 35656, 35666, 35667, 35668, 35673, 35661, 35678, 35683, 35693, 35702, 35704, 35705, 35708, 35710, 35713, 35716, 35717, 35723, 35725, 35727, 35732, 35733, 35740, 35742, 35743, 35896, 35897, 35901, 35902, 35909, 35911, 35913, 35915, 35919, 35921, 35923, 35924, 35927, 35928, 35931, 35933, 35929, 35939, 35940, 35942, 35944, 35945, 35949, 35955, 35957, 35958, 35963, 35966, 35974, 35975, 35979, 35984, 35986, 35987, 35993, 35995, 35996, 36004, 36025, 36026, 36037, 36038, 36041, 36043, 36047, 36054, 36053, 36057, 36061, 36065, 36072, 36076, 36079, 36080, 36082, 36085, 36087, 36088, 36094, 36095, 36097, 36099, 36105, 36114, 36119, 36123, 36197, 36201, 36204, 36206, 36223, 36226, 36228, 36232, 36237, 36240, 36241, 36245, 36254, 36255, 36256, 36262, 36267, 36268, 36271, 36274, 36277, 36279, 36281, 36283, 36288, 36293, 36294, 36295, 36296, 36298, 36302, 36305, 36308, 36309, 36311, 36313, 36324, 36325, 36327, 36332, 36336, 36284, 36337, 36338, 36340, 36349, 36353, 36356, 36357, 36358, 36363, 36369, 36372, 36374, 36384, 36385, 36386, 36387, 36390, 36391, 36401, 36403, 36406, 36407, 36408, 36409, 36413, 36416, 36417, 36427, 36429, 36430, 36431, 36436, 36443, 36444, 36445, 36446, 36449, 36450, 36457, 36460, 36461, 36463, 36464, 36465, 36473, 36474, 36475, 36482, 36483, 36489, 36496, 36498, 36501, 36506, 36507, 36509, 36510, 36514, 36519, 36521, 36525, 36526, 36531, 36533, 36538, 36539, 36544, 36545, 36547, 36548, 36551, 36559, 36561, 36564, 36572, 36584, 36590, 36592, 36593, 36599, 36601, 36602, 36589, 36608, 36610, 36615, 36616, 36623, 36624, 36630, 36631, 36632, 36638, 36640, 36641, 36643, 36645, 36647, 36648, 36652, 36653, 36654, 36660, 36661, 36662, 36663, 36666, 36672, 36673, 36675, 36679, 36687, 36689, 36690, 36691, 36692, 36693, 36696, 36701, 36702, 36709, 36765, 36768, 36769, 36772, 36773, 36774, 36789, 36790, 36792, 36798, 36800, 36801, 36806, 36810, 36811, 36813, 36816, 36818, 36819, 36821, 36832, 36835, 36836, 36840, 36846, 36849, 36853, 36854, 36859, 36862, 36866, 36868, 36872, 36876, 36888, 36891, 36904, 36905, 36911, 36906, 36908, 36909, 36915, 36916, 36919, 36927, 36931, 36932, 36940, 36955, 36957, 36962, 36966, 36967, 36972, 36976, 36980, 36985, 36997, 37e3, 37003, 37004, 37006, 37008, 37013, 37015, 37016, 37017, 37019, 37024, 37025, 37026, 37029, 37040, 37042, 37043, 37044, 37046, 37053, 37068, 37054, 37059, 37060, 37061, 37063, 37064, 37077, 37079, 37080, 37081, 37084, 37085, 37087, 37093, 37074, 37110, 37099, 37103, 37104, 37108, 37118, 37119, 37120, 37124, 37125, 37126, 37128, 37133, 37136, 37140, 37142, 37143, 37144, 37146, 37148, 37150, 37152, 37157, 37154, 37155, 37159, 37161, 37166, 37167, 37169, 37172, 37174, 37175, 37177, 37178, 37180, 37181, 37187, 37191, 37192, 37199, 37203, 37207, 37209, 37210, 37211, 37217, 37220, 37223, 37229, 37236, 37241, 37242, 37243, 37249, 37251, 37253, 37254, 37258, 37262, 37265, 37267, 37268, 37269, 37272, 37278, 37281, 37286, 37288, 37292, 37293, 37294, 37296, 37297, 37298, 37299, 37302, 37307, 37308, 37309, 37311, 37314, 37315, 37317, 37331, 37332, 37335, 37337, 37338, 37342, 37348, 37349, 37353, 37354, 37356, 37357, 37358, 37359, 37360, 37361, 37367, 37369, 37371, 37373, 37376, 37377, 37380, 37381, 37382, 37383, 37385, 37386, 37388, 37392, 37394, 37395, 37398, 37400, 37404, 37405, 37411, 37412, 37413, 37414, 37416, 37422, 37423, 37424, 37427, 37429, 37430, 37432, 37433, 37434, 37436, 37438, 37440, 37442, 37443, 37446, 37447, 37450, 37453, 37454, 37455, 37457, 37464, 37465, 37468, 37469, 37472, 37473, 37477, 37479, 37480, 37481, 37486, 37487, 37488, 37493, 37494, 37495, 37496, 37497, 37499, 37500, 37501, 37503, 37512, 37513, 37514, 37517, 37518, 37522, 37527, 37529, 37535, 37536, 37540, 37541, 37543, 37544, 37547, 37551, 37554, 37558, 37560, 37562, 37563, 37564, 37565, 37567, 37568, 37569, 37570, 37571, 37573, 37574, 37575, 37576, 37579, 37580, 37581, 37582, 37584, 37587, 37589, 37591, 37592, 37593, 37596, 37597, 37599, 37600, 37601, 37603, 37605, 37607, 37608, 37612, 37614, 37616, 37625, 37627, 37631, 37632, 37634, 37640, 37645, 37649, 37652, 37653, 37660, 37661, 37662, 37663, 37665, 37668, 37669, 37671, 37673, 37674, 37683, 37684, 37686, 37687, 37703, 37704, 37705, 37712, 37713, 37714, 37717, 37719, 37720, 37722, 37726, 37732, 37733, 37735, 37737, 37738, 37741, 37743, 37744, 37745, 37747, 37748, 37750, 37754, 37757, 37759, 37760, 37761, 37762, 37768, 37770, 37771, 37773, 37775, 37778, 37781, 37784, 37787, 37790, 37793, 37795, 37796, 37798, 37800, 37803, 37812, 37813, 37814, 37818, 37801, 37825, 37828, 37829, 37830, 37831, 37833, 37834, 37835, 37836, 37837, 37843, 37849, 37852, 37854, 37855, 37858, 37862, 37863, 37881, 37879, 37880, 37882, 37883, 37885, 37889, 37890, 37892, 37896, 37897, 37901, 37902, 37903, 37909, 37910, 37911, 37919, 37934, 37935, 37937, 37938, 37939, 37940, 37947, 37951, 37949, 37955, 37957, 37960, 37962, 37964, 37973, 37977, 37980, 37983, 37985, 37987, 37992, 37995, 37997, 37998, 37999, 38001, 38002, 38020, 38019, 38264, 38265, 38270, 38276, 38280, 38284, 38285, 38286, 38301, 38302, 38303, 38305, 38310, 38313, 38315, 38316, 38324, 38326, 38330, 38333, 38335, 38342, 38344, 38345, 38347, 38352, 38353, 38354, 38355, 38361, 38362, 38365, 38366, 38367, 38368, 38372, 38374, 38429, 38430, 38434, 38436, 38437, 38438, 38444, 38449, 38451, 38455, 38456, 38457, 38458, 38460, 38461, 38465, 38482, 38484, 38486, 38487, 38488, 38497, 38510, 38516, 38523, 38524, 38526, 38527, 38529, 38530, 38531, 38532, 38537, 38545, 38550, 38554, 38557, 38559, 38564, 38565, 38566, 38569, 38574, 38575, 38579, 38586, 38602, 38610, 23986, 38616, 38618, 38621, 38622, 38623, 38633, 38639, 38641, 38650, 38658, 38659, 38661, 38665, 38682, 38683, 38685, 38689, 38690, 38691, 38696, 38705, 38707, 38721, 38723, 38730, 38734, 38735, 38741, 38743, 38744, 38746, 38747, 38755, 38759, 38762, 38766, 38771, 38774, 38775, 38776, 38779, 38781, 38783, 38784, 38793, 38805, 38806, 38807, 38809, 38810, 38814, 38815, 38818, 38828, 38830, 38833, 38834, 38837, 38838, 38840, 38841, 38842, 38844, 38846, 38847, 38849, 38852, 38853, 38855, 38857, 38858, 38860, 38861, 38862, 38864, 38865, 38868, 38871, 38872, 38873, 38877, 38878, 38880, 38875, 38881, 38884, 38895, 38897, 38900, 38903, 38904, 38906, 38919, 38922, 38937, 38925, 38926, 38932, 38934, 38940, 38942, 38944, 38947, 38950, 38955, 38958, 38959, 38960, 38962, 38963, 38965, 38949, 38974, 38980, 38983, 38986, 38993, 38994, 38995, 38998, 38999, 39001, 39002, 39010, 39011, 39013, 39014, 39018, 39020, 39083, 39085, 39086, 39088, 39092, 39095, 39096, 39098, 39099, 39103, 39106, 39109, 39112, 39116, 39137, 39139, 39141, 39142, 39143, 39146, 39155, 39158, 39170, 39175, 39176, 39185, 39189, 39190, 39191, 39194, 39195, 39196, 39199, 39202, 39206, 39207, 39211, 39217, 39218, 39219, 39220, 39221, 39225, 39226, 39227, 39228, 39232, 39233, 39238, 39239, 39240, 39245, 39246, 39252, 39256, 39257, 39259, 39260, 39262, 39263, 39264, 39323, 39325, 39327, 39334, 39344, 39345, 39346, 39349, 39353, 39354, 39357, 39359, 39363, 39369, 39379, 39380, 39385, 39386, 39388, 39390, 39399, 39402, 39403, 39404, 39408, 39412, 39413, 39417, 39421, 39422, 39426, 39427, 39428, 39435, 39436, 39440, 39441, 39446, 39454, 39456, 39458, 39459, 39460, 39463, 39469, 39470, 39475, 39477, 39478, 39480, 39495, 39489, 39492, 39498, 39499, 39500, 39502, 39505, 39508, 39510, 39517, 39594, 39596, 39598, 39599, 39602, 39604, 39605, 39606, 39609, 39611, 39614, 39615, 39617, 39619, 39622, 39624, 39630, 39632, 39634, 39637, 39638, 39639, 39643, 39644, 39648, 39652, 39653, 39655, 39657, 39660, 39666, 39667, 39669, 39673, 39674, 39677, 39679, 39680, 39681, 39682, 39683, 39684, 39685, 39688, 39689, 39691, 39692, 39693, 39694, 39696, 39698, 39702, 39705, 39707, 39708, 39712, 39718, 39723, 39725, 39731, 39732, 39733, 39735, 39737, 39738, 39741, 39752, 39755, 39756, 39765, 39766, 39767, 39771, 39774, 39777, 39779, 39781, 39782, 39784, 39786, 39787, 39788, 39789, 39790, 39795, 39797, 39799, 39800, 39801, 39807, 39808, 39812, 39813, 39814, 39815, 39817, 39818, 39819, 39821, 39823, 39824, 39828, 39834, 39837, 39838, 39846, 39847, 39849, 39852, 39856, 39857, 39858, 39863, 39864, 39867, 39868, 39870, 39871, 39873, 39879, 39880, 39886, 39888, 39895, 39896, 39901, 39903, 39909, 39911, 39914, 39915, 39919, 39923, 39927, 39928, 39929, 39930, 39933, 39935, 39936, 39938, 39947, 39951, 39953, 39958, 39960, 39961, 39962, 39964, 39966, 39970, 39971, 39974, 39975, 39976, 39977, 39978, 39985, 39989, 39990, 39991, 39997, 40001, 40003, 40004, 40005, 40009, 40010, 40014, 40015, 40016, 40019, 40020, 40022, 40024, 40027, 40029, 40030, 40031, 40035, 40041, 40042, 40028, 40043, 40040, 40046, 40048, 40050, 40053, 40055, 40059, 40166, 40178, 40183, 40185, 40203, 40194, 40209, 40215, 40216, 40220, 40221, 40222, 40239, 40240, 40242, 40243, 40244, 40250, 40252, 40261, 40253, 40258, 40259, 40263, 40266, 40275, 40276, 40287, 40291, 40290, 40293, 40297, 40298, 40299, 40304, 40310, 40311, 40315, 40316, 40318, 40323, 40324, 40326, 40330, 40333, 40334, 40338, 40339, 40341, 40342, 40343, 40344, 40353, 40362, 40364, 40366, 40369, 40373, 40377, 40380, 40383, 40387, 40391, 40393, 40394, 40404, 40405, 40406, 40407, 40410, 40414, 40415, 40416, 40421, 40423, 40425, 40427, 40430, 40432, 40435, 40436, 40446, 40458, 40450, 40455, 40462, 40464, 40465, 40466, 40469, 40470, 40473, 40476, 40477, 40570, 40571, 40572, 40576, 40578, 40579, 40580, 40581, 40583, 40590, 40591, 40598, 40600, 40603, 40606, 40612, 40616, 40620, 40622, 40623, 40624, 40627, 40628, 40629, 40646, 40648, 40651, 40661, 40671, 40676, 40679, 40684, 40685, 40686, 40688, 40689, 40690, 40693, 40696, 40703, 40706, 40707, 40713, 40719, 40720, 40721, 40722, 40724, 40726, 40727, 40729, 40730, 40731, 40735, 40738, 40742, 40746, 40747, 40751, 40753, 40754, 40756, 40759, 40761, 40762, 40764, 40765, 40767, 40769, 40771, 40772, 40773, 40774, 40775, 40787, 40789, 40790, 40791, 40792, 40794, 40797, 40798, 40808, 40809, 40813, 40814, 40815, 40816, 40817, 40819, 40821, 40826, 40829, 40847, 40848, 40849, 40850, 40852, 40854, 40855, 40862, 40865, 40866, 40867, 40869, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
    "ibm866": [1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 9617, 9618, 9619, 9474, 9508, 9569, 9570, 9558, 9557, 9571, 9553, 9559, 9565, 9564, 9563, 9488, 9492, 9524, 9516, 9500, 9472, 9532, 9566, 9567, 9562, 9556, 9577, 9574, 9568, 9552, 9580, 9575, 9576, 9572, 9573, 9561, 9560, 9554, 9555, 9579, 9578, 9496, 9484, 9608, 9604, 9612, 9616, 9600, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1025, 1105, 1028, 1108, 1031, 1111, 1038, 1118, 176, 8729, 183, 8730, 8470, 164, 9632, 160],
    "iso-8859-2": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 728, 321, 164, 317, 346, 167, 168, 352, 350, 356, 377, 173, 381, 379, 176, 261, 731, 322, 180, 318, 347, 711, 184, 353, 351, 357, 378, 733, 382, 380, 340, 193, 194, 258, 196, 313, 262, 199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336, 214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228, 314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243, 244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729],
    "iso-8859-3": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 294, 728, 163, 164, null, 292, 167, 168, 304, 350, 286, 308, 173, null, 379, 176, 295, 178, 179, 180, 181, 293, 183, 184, 305, 351, 287, 309, 189, null, 380, 192, 193, 194, null, 196, 266, 264, 199, 200, 201, 202, 203, 204, 205, 206, 207, null, 209, 210, 211, 212, 288, 214, 215, 284, 217, 218, 219, 220, 364, 348, 223, 224, 225, 226, null, 228, 267, 265, 231, 232, 233, 234, 235, 236, 237, 238, 239, null, 241, 242, 243, 244, 289, 246, 247, 285, 249, 250, 251, 252, 365, 349, 729],
    "iso-8859-4": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 312, 342, 164, 296, 315, 167, 168, 352, 274, 290, 358, 173, 381, 175, 176, 261, 731, 343, 180, 297, 316, 711, 184, 353, 275, 291, 359, 330, 382, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201, 280, 203, 278, 205, 206, 298, 272, 325, 332, 310, 212, 213, 214, 215, 216, 370, 218, 219, 220, 360, 362, 223, 257, 225, 226, 227, 228, 229, 230, 303, 269, 233, 281, 235, 279, 237, 238, 299, 273, 326, 333, 311, 244, 245, 246, 247, 248, 371, 250, 251, 252, 361, 363, 729],
    "iso-8859-5": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 173, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 8470, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 167, 1118, 1119],
    "iso-8859-6": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, null, null, null, 164, null, null, null, null, null, null, null, 1548, 173, null, null, null, null, null, null, null, null, null, null, null, null, null, 1563, null, null, null, 1567, null, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, null, null, null, null, null, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, null, null, null, null, null, null, null, null, null, null, null, null, null],
    "iso-8859-7": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 8216, 8217, 163, 8364, 8367, 166, 167, 168, 169, 890, 171, 172, 173, null, 8213, 176, 177, 178, 179, 900, 901, 902, 183, 904, 905, 906, 187, 908, 189, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, null, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, null],
    "iso-8859-8": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, null, 162, 163, 164, 165, 166, 167, 168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 247, 187, 188, 189, 190, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 8215, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, null, null, 8206, 8207, null],
    "iso-8859-10": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 274, 290, 298, 296, 310, 167, 315, 272, 352, 358, 381, 173, 362, 330, 176, 261, 275, 291, 299, 297, 311, 183, 316, 273, 353, 359, 382, 8213, 363, 331, 256, 193, 194, 195, 196, 197, 198, 302, 268, 201, 280, 203, 278, 205, 206, 207, 208, 325, 332, 211, 212, 213, 214, 360, 216, 370, 218, 219, 220, 221, 222, 223, 257, 225, 226, 227, 228, 229, 230, 303, 269, 233, 281, 235, 279, 237, 238, 239, 240, 326, 333, 243, 244, 245, 246, 361, 248, 371, 250, 251, 252, 253, 254, 312],
    "iso-8859-13": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 8221, 162, 163, 164, 8222, 166, 167, 216, 169, 342, 171, 172, 173, 174, 198, 176, 177, 178, 179, 8220, 181, 182, 183, 248, 185, 343, 187, 188, 189, 190, 230, 260, 302, 256, 262, 196, 197, 280, 274, 268, 201, 377, 278, 290, 310, 298, 315, 352, 323, 325, 211, 332, 213, 214, 215, 370, 321, 346, 362, 220, 379, 381, 223, 261, 303, 257, 263, 228, 229, 281, 275, 269, 233, 378, 279, 291, 311, 299, 316, 353, 324, 326, 243, 333, 245, 246, 247, 371, 322, 347, 363, 252, 380, 382, 8217],
    "iso-8859-14": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 7682, 7683, 163, 266, 267, 7690, 167, 7808, 169, 7810, 7691, 7922, 173, 174, 376, 7710, 7711, 288, 289, 7744, 7745, 182, 7766, 7809, 7767, 7811, 7776, 7923, 7812, 7813, 7777, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 372, 209, 210, 211, 212, 213, 214, 7786, 216, 217, 218, 219, 220, 221, 374, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 373, 241, 242, 243, 244, 245, 246, 7787, 248, 249, 250, 251, 252, 253, 375, 255],
    "iso-8859-15": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 8364, 165, 352, 167, 353, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 381, 181, 182, 183, 382, 185, 186, 187, 338, 339, 376, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255],
    "iso-8859-16": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 260, 261, 321, 8364, 8222, 352, 167, 353, 169, 536, 171, 377, 173, 378, 379, 176, 177, 268, 322, 381, 8221, 182, 183, 382, 269, 537, 187, 338, 339, 376, 380, 192, 193, 194, 258, 196, 262, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 272, 323, 210, 211, 212, 336, 214, 346, 368, 217, 218, 219, 220, 280, 538, 223, 224, 225, 226, 259, 228, 263, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 273, 324, 242, 243, 244, 337, 246, 347, 369, 249, 250, 251, 252, 281, 539, 255],
    "koi8-r": [9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776, 8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 1025, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090, 1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070, 1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068, 1067, 1047, 1064, 1069, 1065, 1063, 1066],
    "koi8-u": [9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776, 8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 1108, 9556, 1110, 1111, 9559, 9560, 9561, 9562, 9563, 1169, 1118, 9566, 9567, 9568, 9569, 1025, 1028, 9571, 1030, 1031, 9574, 9575, 9576, 9577, 9578, 1168, 1038, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090, 1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070, 1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068, 1067, 1047, 1064, 1069, 1065, 1063, 1066],
    "macintosh": [196, 197, 199, 201, 209, 214, 220, 225, 224, 226, 228, 227, 229, 231, 233, 232, 234, 235, 237, 236, 238, 239, 241, 243, 242, 244, 246, 245, 250, 249, 251, 252, 8224, 176, 162, 163, 167, 8226, 182, 223, 174, 169, 8482, 180, 168, 8800, 198, 216, 8734, 177, 8804, 8805, 165, 181, 8706, 8721, 8719, 960, 8747, 170, 186, 937, 230, 248, 191, 161, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160, 192, 195, 213, 338, 339, 8211, 8212, 8220, 8221, 8216, 8217, 247, 9674, 255, 376, 8260, 8364, 8249, 8250, 64257, 64258, 8225, 183, 8218, 8222, 8240, 194, 202, 193, 203, 200, 205, 206, 207, 204, 211, 212, 63743, 210, 218, 219, 217, 305, 710, 732, 175, 728, 729, 730, 184, 733, 731, 711],
    "windows-874": [8364, 129, 130, 131, 132, 8230, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 153, 154, 155, 156, 157, 158, 159, 160, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, null, null, null, null, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, null, null, null, null],
    "windows-1250": [8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 352, 8249, 346, 356, 381, 377, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 353, 8250, 347, 357, 382, 378, 160, 711, 728, 321, 164, 260, 166, 167, 168, 169, 350, 171, 172, 173, 174, 379, 176, 177, 731, 322, 180, 181, 182, 183, 184, 261, 351, 187, 317, 733, 318, 380, 340, 193, 194, 258, 196, 313, 262, 199, 268, 201, 280, 203, 282, 205, 206, 270, 272, 323, 327, 211, 212, 336, 214, 215, 344, 366, 218, 368, 220, 221, 354, 223, 341, 225, 226, 259, 228, 314, 263, 231, 269, 233, 281, 235, 283, 237, 238, 271, 273, 324, 328, 243, 244, 337, 246, 247, 345, 367, 250, 369, 252, 253, 355, 729],
    "windows-1251": [1026, 1027, 8218, 1107, 8222, 8230, 8224, 8225, 8364, 8240, 1033, 8249, 1034, 1036, 1035, 1039, 1106, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 1113, 8250, 1114, 1116, 1115, 1119, 160, 1038, 1118, 1032, 164, 1168, 166, 167, 1025, 169, 1028, 171, 172, 173, 174, 1031, 176, 177, 1030, 1110, 1169, 181, 182, 183, 1105, 8470, 1108, 187, 1112, 1029, 1109, 1111, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103],
    "windows-1252": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 381, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 382, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255],
    "windows-1253": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 136, 8240, 138, 8249, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 154, 8250, 156, 157, 158, 159, 160, 901, 902, 163, 164, 165, 166, 167, 168, 169, null, 171, 172, 173, 174, 8213, 176, 177, 178, 179, 900, 181, 182, 183, 904, 905, 906, 187, 908, 189, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, null, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, null],
    "windows-1254": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 352, 8249, 338, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 353, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 286, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 304, 350, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 287, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 351, 255],
    "windows-1255": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 140, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 154, 8250, 156, 157, 158, 159, 160, 161, 162, 163, 8362, 165, 166, 167, 168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 247, 187, 188, 189, 190, 191, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1520, 1521, 1522, 1523, 1524, null, null, null, null, null, null, null, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, null, null, 8206, 8207, null],
    "windows-1256": [8364, 1662, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 1657, 8249, 338, 1670, 1688, 1672, 1711, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 1705, 8482, 1681, 8250, 339, 8204, 8205, 1722, 160, 1548, 162, 163, 164, 165, 166, 167, 168, 169, 1726, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 1563, 187, 188, 189, 190, 1567, 1729, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 215, 1591, 1592, 1593, 1594, 1600, 1601, 1602, 1603, 224, 1604, 226, 1605, 1606, 1607, 1608, 231, 232, 233, 234, 235, 1609, 1610, 238, 239, 1611, 1612, 1613, 1614, 244, 1615, 1616, 247, 1617, 249, 1618, 251, 252, 8206, 8207, 1746],
    "windows-1257": [8364, 129, 8218, 131, 8222, 8230, 8224, 8225, 136, 8240, 138, 8249, 140, 168, 711, 184, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 8482, 154, 8250, 156, 175, 731, 159, 160, null, 162, 163, 164, null, 166, 167, 216, 169, 342, 171, 172, 173, 174, 198, 176, 177, 178, 179, 180, 181, 182, 183, 248, 185, 343, 187, 188, 189, 190, 230, 260, 302, 256, 262, 196, 197, 280, 274, 268, 201, 377, 278, 290, 310, 298, 315, 352, 323, 325, 211, 332, 213, 214, 215, 370, 321, 346, 362, 220, 379, 381, 223, 261, 303, 257, 263, 228, 229, 281, 275, 269, 233, 378, 279, 291, 311, 299, 316, 353, 324, 326, 243, 333, 245, 246, 247, 371, 322, 347, 363, 252, 380, 382, 729],
    "windows-1258": [8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 338, 141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482, 154, 8250, 339, 157, 158, 376, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 258, 196, 197, 198, 199, 200, 201, 202, 203, 768, 205, 206, 207, 272, 209, 777, 211, 212, 416, 214, 215, 216, 217, 218, 219, 220, 431, 771, 223, 224, 225, 226, 259, 228, 229, 230, 231, 232, 233, 234, 235, 769, 237, 238, 239, 273, 241, 803, 243, 244, 417, 246, 247, 248, 249, 250, 251, 252, 432, 8363, 255],
    "x-mac-cyrillic": [1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 8224, 176, 1168, 163, 167, 8226, 182, 1030, 174, 169, 8482, 1026, 1106, 8800, 1027, 1107, 8734, 177, 8804, 8805, 1110, 181, 1169, 1032, 1028, 1108, 1031, 1111, 1033, 1113, 1034, 1114, 1112, 1029, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160, 1035, 1115, 1036, 1116, 1109, 8211, 8212, 8220, 8221, 8216, 8217, 247, 8222, 1038, 1118, 1039, 1119, 8470, 1025, 1105, 1103, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 8364]
  };
  function indexCodePointFor(pointer, i2) {
    if (!i2)
      return null;
    return i2[pointer] || null;
  }
  function index$1(name) {
    return Indexes[name];
  }
  function indexGB18030RangesCodePointFor(pointer) {
    if (pointer > 39419 && pointer < 189e3 || pointer > 1237575)
      return null;
    if (pointer === 7457)
      return 59335;
    var offset = 0;
    var code_point_offset = 0;
    var idx = index$1("gb18030-ranges");
    var i2;
    for (i2 = 0; i2 < idx.length; ++i2) {
      var entry = idx[i2];
      if (entry[0] <= pointer) {
        offset = entry[0];
        code_point_offset = entry[1];
      } else {
        break;
      }
    }
    return code_point_offset + pointer - offset;
  }
  var GB18030Decoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.gb18030_first = 0;
      this.gb18030_second = 0, this.gb18030_third = 0;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     * @return The next code point(s) decoded, or null if not enough data exists in the input stream to decode a complete code point.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && this.gb18030_first === 0 && this.gb18030_second === 0 && this.gb18030_third === 0) {
        return finished;
      }
      if (bite === end_of_stream && (this.gb18030_first !== 0 || this.gb18030_second !== 0 || this.gb18030_third !== 0)) {
        this.gb18030_first = 0;
        this.gb18030_second = 0;
        this.gb18030_third = 0;
        decoderError(this.fatal);
      }
      var code_point;
      if (this.gb18030_third !== 0) {
        code_point = null;
        if (inRange(bite, 48, 57)) {
          code_point = indexGB18030RangesCodePointFor(
            (((this.gb18030_first - 129) * 10 + this.gb18030_second - 48) * 126 + this.gb18030_third - 129) * 10 + bite - 48
          );
        }
        var buffer = [this.gb18030_second, this.gb18030_third, bite];
        this.gb18030_first = 0;
        this.gb18030_second = 0;
        this.gb18030_third = 0;
        if (code_point === null) {
          stream.prepend(buffer);
          return decoderError(this.fatal);
        }
        return code_point;
      }
      if (this.gb18030_second !== 0) {
        if (inRange(bite, 129, 254)) {
          this.gb18030_third = bite;
          return null;
        }
        stream.prepend([this.gb18030_second, bite]);
        this.gb18030_first = 0;
        this.gb18030_second = 0;
        return decoderError(this.fatal);
      }
      if (this.gb18030_first !== 0) {
        if (inRange(bite, 48, 57)) {
          this.gb18030_second = bite;
          return null;
        }
        var lead = this.gb18030_first;
        var pointer = null;
        this.gb18030_first = 0;
        var offset = bite < 127 ? 64 : 65;
        if (inRange(bite, 64, 126) || inRange(bite, 128, 254))
          pointer = (lead - 129) * 190 + (bite - offset);
        code_point = pointer === null ? null : indexCodePointFor(pointer, index$1("gb18030"));
        if (code_point === null && isASCIIByte(bite))
          stream.prepend(bite);
        if (code_point === null)
          return decoderError(this.fatal);
        return code_point;
      }
      if (isASCIIByte(bite))
        return bite;
      if (bite === 128)
        return 8364;
      if (inRange(bite, 129, 254)) {
        this.gb18030_first = bite;
        return null;
      }
      return decoderError(this.fatal);
    }
  };
  var Big5Decoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.Big5_lead = 0;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && this.Big5_lead !== 0) {
        this.Big5_lead = 0;
        return decoderError(this.fatal);
      }
      if (bite === end_of_stream && this.Big5_lead === 0)
        return finished;
      if (this.Big5_lead !== 0) {
        const lead = this.Big5_lead;
        let pointer = null;
        this.Big5_lead = 0;
        const offset = bite < 127 ? 64 : 98;
        if (inRange(bite, 64, 126) || inRange(bite, 161, 254))
          pointer = (lead - 129) * 157 + (bite - offset);
        switch (pointer) {
          case 1133:
            return [202, 772];
          case 1135:
            return [202, 780];
          case 1164:
            return [234, 772];
          case 1166:
            return [234, 780];
        }
        const code_point = pointer === null ? null : indexCodePointFor(pointer, index$1("big5"));
        if (code_point === null && isASCIIByte(bite))
          stream.prepend(bite);
        if (code_point === null)
          return decoderError(this.fatal);
        return code_point;
      }
      if (isASCIIByte(bite))
        return bite;
      if (inRange(bite, 129, 254)) {
        this.Big5_lead = bite;
        return null;
      }
      return decoderError(this.fatal);
    }
  };
  var EUCJPDecoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.eucjp_jis0212_flag = false;
      this.eucjp_lead = 0;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && this.eucjp_lead !== 0) {
        this.eucjp_lead = 0;
        return decoderError(this.fatal);
      }
      if (bite === end_of_stream && this.eucjp_lead === 0)
        return finished;
      if (this.eucjp_lead === 142 && inRange(bite, 161, 223)) {
        this.eucjp_lead = 0;
        return 65377 - 161 + bite;
      }
      if (this.eucjp_lead === 143 && inRange(bite, 161, 254)) {
        this.eucjp_jis0212_flag = true;
        this.eucjp_lead = bite;
        return null;
      }
      if (this.eucjp_lead !== 0) {
        const lead = this.eucjp_lead;
        this.eucjp_lead = 0;
        let code_point = null;
        if (inRange(lead, 161, 254) && inRange(bite, 161, 254)) {
          code_point = indexCodePointFor(
            (lead - 161) * 94 + (bite - 161),
            index$1(!this.eucjp_jis0212_flag ? "jis0208" : "jis0212")
          );
        }
        this.eucjp_jis0212_flag = false;
        if (!inRange(bite, 161, 254))
          stream.prepend(bite);
        if (code_point === null)
          return decoderError(this.fatal);
        return code_point;
      }
      if (isASCIIByte(bite))
        return bite;
      if (bite === 142 || bite === 143 || inRange(bite, 161, 254)) {
        this.eucjp_lead = bite;
        return null;
      }
      return decoderError(this.fatal);
    }
  };
  var EUCKRDecoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.euckr_lead = 0;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && this.euckr_lead !== 0) {
        this.euckr_lead = 0;
        return decoderError(this.fatal);
      }
      if (bite === end_of_stream && this.euckr_lead === 0)
        return finished;
      if (this.euckr_lead !== 0) {
        const lead = this.euckr_lead;
        let pointer = null;
        this.euckr_lead = 0;
        if (inRange(bite, 65, 254))
          pointer = (lead - 129) * 190 + (bite - 65);
        const code_point = pointer === null ? null : indexCodePointFor(pointer, index$1("euc-kr"));
        if (pointer === null && isASCIIByte(bite))
          stream.prepend(bite);
        if (code_point === null)
          return decoderError(this.fatal);
        return code_point;
      }
      if (isASCIIByte(bite))
        return bite;
      if (inRange(bite, 129, 254)) {
        this.euckr_lead = bite;
        return null;
      }
      return decoderError(this.fatal);
    }
  };
  var ISO2022JPDecoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.states = {
        ASCII: 0,
        Roman: 1,
        Katakana: 2,
        LeadByte: 3,
        TrailByte: 4,
        EscapeStart: 5,
        Escape: 6
      };
      this.iso2022jp_decoder_state = this.states.ASCII;
      this.iso2022jp_decoder_output_state = this.states.ASCII, this.iso2022jp_lead = 0;
      this.iso2022jp_output_flag = false;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      switch (this.iso2022jp_decoder_state) {
        default:
        case this.states.ASCII:
          if (bite === 27) {
            this.iso2022jp_decoder_state = this.states.EscapeStart;
            return null;
          }
          if (inRange(bite, 0, 127) && bite !== 14 && bite !== 15 && bite !== 27) {
            this.iso2022jp_output_flag = false;
            return bite;
          }
          if (bite === end_of_stream) {
            return finished;
          }
          this.iso2022jp_output_flag = false;
          return decoderError(this.fatal);
        case this.states.Roman:
          if (bite === 27) {
            this.iso2022jp_decoder_state = this.states.EscapeStart;
            return null;
          }
          if (bite === 92) {
            this.iso2022jp_output_flag = false;
            return 165;
          }
          if (bite === 126) {
            this.iso2022jp_output_flag = false;
            return 8254;
          }
          if (inRange(bite, 0, 127) && bite !== 14 && bite !== 15 && bite !== 27 && bite !== 92 && bite !== 126) {
            this.iso2022jp_output_flag = false;
            return bite;
          }
          if (bite === end_of_stream) {
            return finished;
          }
          this.iso2022jp_output_flag = false;
          return decoderError(this.fatal);
        case this.states.Katakana:
          if (bite === 27) {
            this.iso2022jp_decoder_state = this.states.EscapeStart;
            return null;
          }
          if (inRange(bite, 33, 95)) {
            this.iso2022jp_output_flag = false;
            return 65377 - 33 + bite;
          }
          if (bite === end_of_stream) {
            return finished;
          }
          this.iso2022jp_output_flag = false;
          return decoderError(this.fatal);
        case this.states.LeadByte:
          if (bite === 27) {
            this.iso2022jp_decoder_state = this.states.EscapeStart;
            return null;
          }
          if (inRange(bite, 33, 126)) {
            this.iso2022jp_output_flag = false;
            this.iso2022jp_lead = bite;
            this.iso2022jp_decoder_state = this.states.TrailByte;
            return null;
          }
          if (bite === end_of_stream) {
            return finished;
          }
          this.iso2022jp_output_flag = false;
          return decoderError(this.fatal);
        case this.states.TrailByte:
          if (bite === 27) {
            this.iso2022jp_decoder_state = this.states.EscapeStart;
            return decoderError(this.fatal);
          }
          if (inRange(bite, 33, 126)) {
            this.iso2022jp_decoder_state = this.states.LeadByte;
            const pointer = (this.iso2022jp_lead - 33) * 94 + bite - 33;
            const code_point = indexCodePointFor(pointer, index$1("jis0208"));
            if (code_point === null)
              return decoderError(this.fatal);
            return code_point;
          }
          if (bite === end_of_stream) {
            this.iso2022jp_decoder_state = this.states.LeadByte;
            stream.prepend(bite);
            return decoderError(this.fatal);
          }
          this.iso2022jp_decoder_state = this.states.LeadByte;
          return decoderError(this.fatal);
        case this.states.EscapeStart:
          if (bite === 36 || bite === 40) {
            this.iso2022jp_lead = bite;
            this.iso2022jp_decoder_state = this.states.Escape;
            return null;
          }
          stream.prepend(bite);
          this.iso2022jp_output_flag = false;
          this.iso2022jp_decoder_state = this.iso2022jp_decoder_output_state;
          return decoderError(this.fatal);
        case this.states.Escape: {
          const lead = this.iso2022jp_lead;
          this.iso2022jp_lead = 0;
          let state = null;
          if (lead === 40 && bite === 66)
            state = this.states.ASCII;
          if (lead === 40 && bite === 74)
            state = this.states.Roman;
          if (lead === 40 && bite === 73)
            state = this.states.Katakana;
          if (lead === 36 && (bite === 64 || bite === 66))
            state = this.states.LeadByte;
          if (state !== null) {
            this.iso2022jp_decoder_state = this.iso2022jp_decoder_state = state;
            const output_flag = this.iso2022jp_output_flag;
            this.iso2022jp_output_flag = true;
            return !output_flag ? null : decoderError(this.fatal);
          }
          stream.prepend([lead, bite]);
          this.iso2022jp_output_flag = false;
          this.iso2022jp_decoder_state = this.iso2022jp_decoder_output_state;
          return decoderError(this.fatal);
        }
      }
    }
  };
  var XUserDefinedDecoder = class {
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream)
        return finished;
      if (isASCIIByte(bite))
        return bite;
      return 63360 + bite - 128;
    }
  };
  var ShiftJISDecoder = class {
    constructor(options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.Shift_JIS_lead = 0;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream && this.Shift_JIS_lead !== 0) {
        this.Shift_JIS_lead = 0;
        return decoderError(this.fatal);
      }
      if (bite === end_of_stream && this.Shift_JIS_lead === 0)
        return finished;
      if (this.Shift_JIS_lead !== 0) {
        var lead = this.Shift_JIS_lead;
        var pointer = null;
        this.Shift_JIS_lead = 0;
        var offset = bite < 127 ? 64 : 65;
        var lead_offset = lead < 160 ? 129 : 193;
        if (inRange(bite, 64, 126) || inRange(bite, 128, 252))
          pointer = (lead - lead_offset) * 188 + bite - offset;
        if (inRange(pointer, 8836, 10715))
          return 57344 - 8836 + pointer;
        var code_point = pointer === null ? null : indexCodePointFor(pointer, index$1("jis0208"));
        if (code_point === null && isASCIIByte(bite))
          stream.prepend(bite);
        if (code_point === null)
          return decoderError(this.fatal);
        return code_point;
      }
      if (isASCIIByte(bite) || bite === 128)
        return bite;
      if (inRange(bite, 161, 223))
        return 65377 - 161 + bite;
      if (inRange(bite, 129, 159) || inRange(bite, 224, 252)) {
        this.Shift_JIS_lead = bite;
        return null;
      }
      return decoderError(this.fatal);
    }
  };
  var SingleByteDecoder = class {
    /**
     * @param {!Array.<number>} index The encoding index.
     * @param {{fatal: boolean}} options
     */
    constructor(index2, options) {
      const { fatal } = options;
      this.fatal = fatal;
      this.index = index2;
    }
    /**
     * @param {Stream} stream The stream of bytes being decoded.
     * @param {number} bite The next byte read from the stream.
     */
    handler(stream, bite) {
      if (bite === end_of_stream)
        return finished;
      if (isASCIIByte(bite))
        return bite;
      var code_point = this.index[bite - 128];
      if (code_point === null)
        return decoderError(this.fatal);
      return code_point;
    }
  };
  var label_to_encoding = {};
  encodings.forEach(({ encodings: encodings2 }) => {
    encodings2.forEach((encoding) => {
      encoding.labels.forEach((label) => {
        label_to_encoding[label] = encoding;
      });
    });
  });
  var decoders = {
    "UTF-8"(options) {
      return new UTF8Decoder(options);
    },
    "GBK"(options) {
      return new GB18030Decoder(options);
    },
    "gb18030"(options) {
      return new GB18030Decoder(options);
    },
    "Big5"(options) {
      return new Big5Decoder(options);
    },
    "EUC-JP"(options) {
      return new EUCJPDecoder(options);
    },
    "EUC-KR"(options) {
      return new EUCKRDecoder(options);
    },
    "ISO-2022-JP"(options) {
      return new ISO2022JPDecoder(options);
    },
    "UTF-16BE"(options) {
      return new UTF16Decoder(true, options);
    },
    "UTF-16LE"(options) {
      return new UTF16Decoder(false, options);
    },
    "x-user-defined"() {
      return new XUserDefinedDecoder();
    },
    "Shift_JIS"(options) {
      return new ShiftJISDecoder(options);
    }
  };
  encodings.forEach(({ heading, encodings: encodings2 }) => {
    if (heading != "Legacy single-byte encodings")
      return;
    encodings2.forEach((encoding) => {
      const name = encoding.name;
      const idx = index$1(name.toLowerCase());
      decoders[name] = (options) => {
        return new SingleByteDecoder(idx, options);
      };
    });
  });
  var Stream = class {
    /**
     * A stream represents an ordered sequence of tokens.
     * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide
     * the stream.
     */
    constructor(tokens) {
      this.tokens = [...tokens];
      this.tokens.reverse();
    }
    /**
     * @returns True if end-of-stream has been hit.
     */
    endOfStream() {
      return !this.tokens.length;
    }
    /**
     * When a token is read from a stream, the first token in the
     * stream must be returned and subsequently removed, and
     * end-of-stream must be returned otherwise.
     *
     * @return Get the next token from the stream, or end_of_stream.
     */
    read() {
      if (!this.tokens.length)
        return end_of_stream;
      return this.tokens.pop();
    }
    /**
     * When one or more tokens are prepended to a stream, those tokens
     * must be inserted, in given order, before the first token in the
     * stream.
     *
     * @param {(number|!Array.<number>)} token The token(s) to prepend to the
     * stream.
     */
    prepend(token) {
      if (Array.isArray(token)) {
        var tokens = (
          /**@type {!Array.<number>}*/
          token
        );
        while (tokens.length)
          this.tokens.push(tokens.pop());
      } else {
        this.tokens.push(token);
      }
    }
    /**
     * When one or more tokens are pushed to a stream, those tokens
     * must be inserted, in given order, after the last token in the
     * stream.
     *
     * @param {(number|!Array.<number>)} token The tokens(s) to push to the
     * stream.
     */
    push(token) {
      if (Array.isArray(token)) {
        const tokens = (
          /**@type {!Array.<number>}*/
          token
        );
        while (tokens.length)
          this.tokens.unshift(tokens.shift());
      } else {
        this.tokens.unshift(token);
      }
    }
  };
  var DEFAULT_ENCODING = "utf-8";
  function getEncoding(label) {
    label = String(label).trim().toLowerCase();
    if (Object.prototype.hasOwnProperty.call(label_to_encoding, label)) {
      return label_to_encoding[label];
    }
    return null;
  }
  var TextDecoder = class {
    /**
     * @param {string=} label The label of the encoding; defaults to 'utf-8'.
     * @param {Object=} options
     */
    constructor(label = DEFAULT_ENCODING, options = {}) {
      this._encoding = null;
      this._decoder = null;
      this._ignoreBOM = false;
      this._BOMseen = false;
      this._error_mode = "replacement";
      this._do_not_flush = false;
      const encoding = getEncoding(label);
      if (encoding === null || encoding.name == "replacement")
        throw RangeError("Unknown encoding: " + label);
      if (!decoders[encoding.name]) {
        throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");
      }
      this._encoding = encoding;
      if (options["fatal"])
        this._error_mode = "fatal";
      if (options["ignoreBOM"])
        this._ignoreBOM = true;
    }
    get encoding() {
      return this._encoding.name.toLowerCase();
    }
    get fatal() {
      return this._error_mode === "fatal";
    }
    get ignoreBOM() {
      return this._ignoreBOM;
    }
    /**
     * @param {BufferSource=} input The buffer of bytes to decode.
     * @param {Object=} options
     * @return The decoded string.
     */
    decode(input, options = {}) {
      let bytes;
      if (typeof input === "object" && input instanceof ArrayBuffer) {
        bytes = new Uint8Array(input);
      } else if (typeof input === "object" && "buffer" in input && input.buffer instanceof ArrayBuffer) {
        bytes = new Uint8Array(
          input.buffer,
          input.byteOffset,
          input.byteLength
        );
      } else {
        bytes = new Uint8Array(0);
      }
      if (!this._do_not_flush) {
        this._decoder = decoders[this._encoding.name]({
          fatal: this._error_mode === "fatal"
        });
        this._BOMseen = false;
      }
      this._do_not_flush = Boolean(options["stream"]);
      const input_stream = new Stream(bytes);
      const output = [];
      let result;
      while (true) {
        const token = input_stream.read();
        if (token === end_of_stream)
          break;
        result = this._decoder.handler(input_stream, token);
        if (result === finished)
          break;
        if (result !== null) {
          if (Array.isArray(result))
            output.push.apply(
              output,
              /**@type {!Array.<number>}*/
              result
            );
          else
            output.push(result);
        }
      }
      if (!this._do_not_flush) {
        do {
          result = this._decoder.handler(input_stream, input_stream.read());
          if (result === finished)
            break;
          if (result === null)
            continue;
          if (Array.isArray(result))
            output.push.apply(
              output,
              /**@type {!Array.<number>}*/
              result
            );
          else
            output.push(result);
        } while (!input_stream.endOfStream());
        this._decoder = null;
      }
      return this.serializeStream(output);
    }
    // A TextDecoder object also has an associated serialize stream
    // algorithm...
    /**
     * @param {!Array.<number>} stream
     */
    serializeStream(stream) {
      if (["UTF-8", "UTF-16LE", "UTF-16BE"].includes(this._encoding.name) && !this._ignoreBOM && !this._BOMseen) {
        if (stream.length > 0 && stream[0] === 65279) {
          this._BOMseen = true;
          stream.shift();
        } else if (stream.length > 0) {
          this._BOMseen = true;
        } else
          ;
      }
      return codePointsToString(stream);
    }
  };
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function commonjsRequire(path) {
    throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
  }
  var mqttExports = {};
  var mqtt$1 = {
    get exports() {
      return mqttExports;
    },
    set exports(v2) {
      mqttExports = v2;
    }
  };
  (function(module, exports) {
    (function(f2) {
      {
        module.exports = f2();
      }
    })(function() {
      return function() {
        function r2(e2, n2, t2) {
          function o2(i3, f2) {
            if (!n2[i3]) {
              if (!e2[i3]) {
                var c2 = "function" == typeof commonjsRequire && commonjsRequire;
                if (!f2 && c2)
                  return c2(i3, true);
                if (u2)
                  return u2(i3, true);
                var a2 = new Error("Cannot find module '" + i3 + "'");
                throw a2.code = "MODULE_NOT_FOUND", a2;
              }
              var p2 = n2[i3] = {
                exports: {}
              };
              e2[i3][0].call(p2.exports, function(r3) {
                var n3 = e2[i3][1][r3];
                return o2(n3 || r3);
              }, p2, p2.exports, r2, e2, n2, t2);
            }
            return n2[i3].exports;
          }
          for (var u2 = "function" == typeof commonjsRequire && commonjsRequire, i2 = 0; i2 < t2.length; i2++)
            o2(t2[i2]);
          return o2;
        }
        return r2;
      }()({
        1: [function(require2, module2, exports2) {
          (function(process, global2) {
            var EventEmitter = require2("events").EventEmitter;
            var Store = require2("./store");
            var mqttPacket = require2("mqtt-packet");
            var Writable = require2("readable-stream").Writable;
            var inherits = require2("inherits");
            var reInterval = require2("reinterval");
            var validations = require2("./validations");
            var xtend = require2("xtend");
            var debug = require2("debug")("mqttjs:client");
            var setImmediate = global2.setImmediate || function(callback) {
              process.nextTick(callback);
            };
            var defaultConnectOptions = {
              keepalive: 60,
              reschedulePings: true,
              protocolId: "MQTT",
              protocolVersion: 4,
              reconnectPeriod: 1e3,
              connectTimeout: 30 * 1e3,
              clean: true,
              resubscribe: true
            };
            var socketErrors = [
              "ECONNREFUSED",
              "EADDRINUSE",
              "ECONNRESET",
              "ENOTFOUND"
            ];
            var errors = {
              0: "",
              1: "Unacceptable protocol version",
              2: "Identifier rejected",
              3: "Server unavailable",
              4: "Bad username or password",
              5: "Not authorized",
              16: "No matching subscribers",
              17: "No subscription existed",
              128: "Unspecified error",
              129: "Malformed Packet",
              130: "Protocol Error",
              131: "Implementation specific error",
              132: "Unsupported Protocol Version",
              133: "Client Identifier not valid",
              134: "Bad User Name or Password",
              135: "Not authorized",
              136: "Server unavailable",
              137: "Server busy",
              138: "Banned",
              139: "Server shutting down",
              140: "Bad authentication method",
              141: "Keep Alive timeout",
              142: "Session taken over",
              143: "Topic Filter invalid",
              144: "Topic Name invalid",
              145: "Packet identifier in use",
              146: "Packet Identifier not found",
              147: "Receive Maximum exceeded",
              148: "Topic Alias invalid",
              149: "Packet too large",
              150: "Message rate too high",
              151: "Quota exceeded",
              152: "Administrative action",
              153: "Payload format invalid",
              154: "Retain not supported",
              155: "QoS not supported",
              156: "Use another server",
              157: "Server moved",
              158: "Shared Subscriptions not supported",
              159: "Connection rate exceeded",
              160: "Maximum connect time",
              161: "Subscription Identifiers not supported",
              162: "Wildcard Subscriptions not supported"
            };
            function defaultId() {
              return "mqttjs_" + Math.random().toString(16).substr(2, 8);
            }
            function sendPacket(client, packet, cb2) {
              debug("sendPacket :: packet: %O", packet);
              debug("sendPacket :: emitting `packetsend`");
              client.emit("packetsend", packet);
              debug("sendPacket :: writing to stream");
              var result = mqttPacket.writeToStream(packet, client.stream, client.options);
              debug("sendPacket :: writeToStream result %s", result);
              if (!result && cb2) {
                debug("sendPacket :: handle events on `drain` once through callback.");
                client.stream.once("drain", cb2);
              } else if (cb2) {
                debug("sendPacket :: invoking cb");
                cb2();
              }
            }
            function flush(queue) {
              if (queue) {
                debug("flush: queue exists? %b", !!queue);
                Object.keys(queue).forEach(function(messageId) {
                  if (typeof queue[messageId].cb === "function") {
                    queue[messageId].cb(new Error("Connection closed"));
                    delete queue[messageId];
                  }
                });
              }
            }
            function flushVolatile(queue) {
              if (queue) {
                debug(
                  "flushVolatile :: deleting volatile messages from the queue and setting their callbacks as error function"
                );
                Object.keys(queue).forEach(function(messageId) {
                  if (queue[messageId].volatile && typeof queue[messageId].cb === "function") {
                    queue[messageId].cb(new Error("Connection closed"));
                    delete queue[messageId];
                  }
                });
              }
            }
            function storeAndSend(client, packet, cb2, cbStorePut) {
              debug("storeAndSend :: store packet with cmd %s to outgoingStore", packet.cmd);
              client.outgoingStore.put(packet, function storedPacket(err) {
                if (err) {
                  return cb2 && cb2(err);
                }
                cbStorePut();
                sendPacket(client, packet, cb2);
              });
            }
            function nop(error) {
              debug("nop ::", error);
            }
            function MqttClient(streamBuilder, options) {
              var k2;
              var that = this;
              if (!(this instanceof MqttClient)) {
                return new MqttClient(streamBuilder, options);
              }
              this.options = options || {};
              for (k2 in defaultConnectOptions) {
                if (typeof this.options[k2] === "undefined") {
                  this.options[k2] = defaultConnectOptions[k2];
                } else {
                  this.options[k2] = options[k2];
                }
              }
              debug("MqttClient :: options.protocol", options.protocol);
              debug("MqttClient :: options.protocolVersion", options.protocolVersion);
              debug("MqttClient :: options.username", options.username);
              debug("MqttClient :: options.keepalive", options.keepalive);
              debug("MqttClient :: options.reconnectPeriod", options.reconnectPeriod);
              debug("MqttClient :: options.rejectUnauthorized", options.rejectUnauthorized);
              this.options.clientId = typeof options.clientId === "string" ? options.clientId : defaultId();
              debug("MqttClient :: clientId", this.options.clientId);
              this.options.customHandleAcks = options.protocolVersion === 5 && options.customHandleAcks ? options.customHandleAcks : function() {
                arguments[3](0);
              };
              this.streamBuilder = streamBuilder;
              this.outgoingStore = options.outgoingStore || new Store();
              this.incomingStore = options.incomingStore || new Store();
              this.queueQoSZero = options.queueQoSZero === void 0 ? true : options.queueQoSZero;
              this._resubscribeTopics = {};
              this.messageIdToTopic = {};
              this.pingTimer = null;
              this.connected = false;
              this.disconnecting = false;
              this.queue = [];
              this.connackTimer = null;
              this.reconnectTimer = null;
              this._storeProcessing = false;
              this._packetIdsDuringStoreProcessing = {};
              this.nextId = Math.max(1, Math.floor(Math.random() * 65535));
              this.outgoing = {};
              this._firstConnection = true;
              this.on("connect", function() {
                var queue = this.queue;
                function deliver() {
                  var entry = queue.shift();
                  debug("deliver :: entry %o", entry);
                  var packet = null;
                  if (!entry) {
                    return;
                  }
                  packet = entry.packet;
                  debug("deliver :: call _sendPacket for %o", packet);
                  that._sendPacket(
                    packet,
                    function(err) {
                      if (entry.cb) {
                        entry.cb(err);
                      }
                      deliver();
                    }
                  );
                }
                debug("connect :: sending queued packets");
                deliver();
              });
              this.on("close", function() {
                debug("close :: connected set to `false`");
                this.connected = false;
                debug("close :: clearing connackTimer");
                clearTimeout(this.connackTimer);
                debug("close :: clearing ping timer");
                if (that.pingTimer !== null) {
                  that.pingTimer.clear();
                  that.pingTimer = null;
                }
                debug("close :: calling _setupReconnect");
                this._setupReconnect();
              });
              EventEmitter.call(this);
              debug("MqttClient :: setting up stream");
              this._setupStream();
            }
            inherits(MqttClient, EventEmitter);
            MqttClient.prototype._setupStream = function() {
              var connectPacket;
              var that = this;
              var writable = new Writable();
              var parser = mqttPacket.parser(this.options);
              var completeParse = null;
              var packets = [];
              debug("_setupStream :: calling method to clear reconnect");
              this._clearReconnect();
              debug("_setupStream :: using streamBuilder provided to client to create stream");
              this.stream = this.streamBuilder(this);
              parser.on("packet", function(packet) {
                debug("parser :: on packet push to packets array.");
                packets.push(packet);
              });
              function nextTickWork() {
                if (packets.length) {
                  process.nextTick(work);
                } else {
                  var done = completeParse;
                  completeParse = null;
                  done();
                }
              }
              function work() {
                debug("work :: getting next packet in queue");
                var packet = packets.shift();
                if (packet) {
                  debug("work :: packet pulled from queue");
                  that._handlePacket(packet, nextTickWork);
                } else {
                  debug("work :: no packets in queue");
                  var done = completeParse;
                  completeParse = null;
                  debug("work :: done flag is %s", !!done);
                  if (done)
                    done();
                }
              }
              writable._write = function(buf, enc, done) {
                completeParse = done;
                debug("writable stream :: parsing buffer");
                parser.parse(buf);
                work();
              };
              function streamErrorHandler(error) {
                debug("streamErrorHandler :: error", error.message);
                if (socketErrors.includes(error.code)) {
                  debug("streamErrorHandler :: emitting error");
                  that.emit("error", error);
                } else {
                  nop(error);
                }
              }
              debug("_setupStream :: pipe stream to writable stream");
              this.stream.pipe(writable);
              this.stream.on("error", streamErrorHandler);
              this.stream.on("close", function() {
                debug("(%s)stream :: on close", that.options.clientId);
                flushVolatile(that.outgoing);
                debug("stream: emit close to MqttClient");
                that.emit("close");
              });
              debug("_setupStream: sending packet `connect`");
              connectPacket = Object.create(this.options);
              connectPacket.cmd = "connect";
              sendPacket(this, connectPacket);
              parser.on("error", this.emit.bind(this, "error"));
              if (this.options.properties) {
                if (!this.options.properties.authenticationMethod && this.options.properties.authenticationData) {
                  that.end(() => this.emit("error", new Error("Packet has no Authentication Method")));
                  return this;
                }
                if (this.options.properties.authenticationMethod && this.options.authPacket && typeof this.options.authPacket === "object") {
                  var authPacket = xtend({
                    cmd: "auth",
                    reasonCode: 0
                  }, this.options.authPacket);
                  sendPacket(this, authPacket);
                }
              }
              this.stream.setMaxListeners(1e3);
              clearTimeout(this.connackTimer);
              this.connackTimer = setTimeout(function() {
                debug("!!connectTimeout hit!! Calling _cleanUp with force `true`");
                that._cleanUp(true);
              }, this.options.connectTimeout);
            };
            MqttClient.prototype._handlePacket = function(packet, done) {
              var options = this.options;
              if (options.protocolVersion === 5 && options.properties && options.properties.maximumPacketSize && options.properties.maximumPacketSize < packet.length) {
                this.emit("error", new Error("exceeding packets size " + packet.cmd));
                this.end({
                  reasonCode: 149,
                  properties: {
                    reasonString: "Maximum packet size was exceeded"
                  }
                });
                return this;
              }
              debug("_handlePacket :: emitting packetreceive");
              this.emit("packetreceive", packet);
              switch (packet.cmd) {
                case "publish":
                  this._handlePublish(packet, done);
                  break;
                case "puback":
                case "pubrec":
                case "pubcomp":
                case "suback":
                case "unsuback":
                  this._handleAck(packet);
                  done();
                  break;
                case "pubrel":
                  this._handlePubrel(packet, done);
                  break;
                case "connack":
                  this._handleConnack(packet);
                  done();
                  break;
                case "pingresp":
                  this._handlePingresp(packet);
                  done();
                  break;
                case "disconnect":
                  this._handleDisconnect(packet);
                  done();
                  break;
              }
            };
            MqttClient.prototype._checkDisconnecting = function(callback) {
              if (this.disconnecting) {
                if (callback) {
                  callback(new Error("client disconnecting"));
                } else {
                  this.emit("error", new Error("client disconnecting"));
                }
              }
              return this.disconnecting;
            };
            MqttClient.prototype.publish = function(topic, message, opts, callback) {
              debug("publish :: message `%s` to topic `%s`", message, topic);
              var packet;
              var options = this.options;
              if (typeof opts === "function") {
                callback = opts;
                opts = null;
              }
              var defaultOpts = {
                qos: 0,
                retain: false,
                dup: false
              };
              opts = xtend(defaultOpts, opts);
              if (this._checkDisconnecting(callback)) {
                return this;
              }
              packet = {
                cmd: "publish",
                topic,
                payload: message,
                qos: opts.qos,
                retain: opts.retain,
                messageId: this._nextId(),
                dup: opts.dup
              };
              if (options.protocolVersion === 5) {
                packet.properties = opts.properties;
                if (!options.properties && packet.properties && packet.properties.topicAlias || opts.properties && options.properties && (opts.properties.topicAlias && options.properties.topicAliasMaximum && opts.properties.topicAlias > options.properties.topicAliasMaximum || !options.properties.topicAliasMaximum && opts.properties.topicAlias)) {
                  delete packet.properties.topicAlias;
                }
              }
              debug("publish :: qos", opts.qos);
              switch (opts.qos) {
                case 1:
                case 2:
                  this.outgoing[packet.messageId] = {
                    volatile: false,
                    cb: callback || nop
                  };
                  if (this._storeProcessing) {
                    debug("_storeProcessing enabled");
                    this._packetIdsDuringStoreProcessing[packet.messageId] = false;
                    this._storePacket(packet, void 0, opts.cbStorePut);
                  } else {
                    debug("MqttClient:publish: packet cmd: %s", packet.cmd);
                    this._sendPacket(packet, void 0, opts.cbStorePut);
                  }
                  break;
                default:
                  if (this._storeProcessing) {
                    debug("_storeProcessing enabled");
                    this._storePacket(packet, callback, opts.cbStorePut);
                  } else {
                    debug("MqttClient:publish: packet cmd: %s", packet.cmd);
                    this._sendPacket(packet, callback, opts.cbStorePut);
                  }
                  break;
              }
              return this;
            };
            MqttClient.prototype.subscribe = function() {
              var packet;
              var args = new Array(arguments.length);
              for (var i2 = 0; i2 < arguments.length; i2++) {
                args[i2] = arguments[i2];
              }
              var subs = [];
              var obj = args.shift();
              var resubscribe = obj.resubscribe;
              var callback = args.pop() || nop;
              var opts = args.pop();
              var invalidTopic;
              var that = this;
              var version = this.options.protocolVersion;
              delete obj.resubscribe;
              if (typeof obj === "string") {
                obj = [obj];
              }
              if (typeof callback !== "function") {
                opts = callback;
                callback = nop;
              }
              invalidTopic = validations.validateTopics(obj);
              if (invalidTopic !== null) {
                setImmediate(callback, new Error("Invalid topic " + invalidTopic));
                return this;
              }
              if (this._checkDisconnecting(callback)) {
                debug("subscribe: discconecting true");
                return this;
              }
              var defaultOpts = {
                qos: 0
              };
              if (version === 5) {
                defaultOpts.nl = false;
                defaultOpts.rap = false;
                defaultOpts.rh = 0;
              }
              opts = xtend(defaultOpts, opts);
              if (Array.isArray(obj)) {
                obj.forEach(function(topic) {
                  debug("subscribe: array topic %s", topic);
                  if (!that._resubscribeTopics.hasOwnProperty(topic) || that._resubscribeTopics[topic].qos < opts.qos || resubscribe) {
                    var currentOpts = {
                      topic,
                      qos: opts.qos
                    };
                    if (version === 5) {
                      currentOpts.nl = opts.nl;
                      currentOpts.rap = opts.rap;
                      currentOpts.rh = opts.rh;
                      currentOpts.properties = opts.properties;
                    }
                    debug(
                      "subscribe: pushing topic `%s` and qos `%s` to subs list",
                      currentOpts.topic,
                      currentOpts.qos
                    );
                    subs.push(currentOpts);
                  }
                });
              } else {
                Object.keys(obj).forEach(function(k2) {
                  debug("subscribe: object topic %s", k2);
                  if (!that._resubscribeTopics.hasOwnProperty(k2) || that._resubscribeTopics[k2].qos < obj[k2].qos || resubscribe) {
                    var currentOpts = {
                      topic: k2,
                      qos: obj[k2].qos
                    };
                    if (version === 5) {
                      currentOpts.nl = obj[k2].nl;
                      currentOpts.rap = obj[k2].rap;
                      currentOpts.rh = obj[k2].rh;
                      currentOpts.properties = opts.properties;
                    }
                    debug("subscribe: pushing `%s` to subs list", currentOpts);
                    subs.push(currentOpts);
                  }
                });
              }
              packet = {
                cmd: "subscribe",
                subscriptions: subs,
                qos: 1,
                retain: false,
                dup: false,
                messageId: this._nextId()
              };
              if (opts.properties) {
                packet.properties = opts.properties;
              }
              if (!subs.length) {
                callback(null, []);
                return;
              }
              if (this.options.resubscribe) {
                debug("subscribe :: resubscribe true");
                var topics = [];
                subs.forEach(function(sub) {
                  if (that.options.reconnectPeriod > 0) {
                    var topic = {
                      qos: sub.qos
                    };
                    if (version === 5) {
                      topic.nl = sub.nl || false;
                      topic.rap = sub.rap || false;
                      topic.rh = sub.rh || 0;
                      topic.properties = sub.properties;
                    }
                    that._resubscribeTopics[sub.topic] = topic;
                    topics.push(sub.topic);
                  }
                });
                that.messageIdToTopic[packet.messageId] = topics;
              }
              this.outgoing[packet.messageId] = {
                volatile: true,
                cb: function(err, packet2) {
                  if (!err) {
                    var granted = packet2.granted;
                    for (var i3 = 0; i3 < granted.length; i3 += 1) {
                      subs[i3].qos = granted[i3];
                    }
                  }
                  callback(err, subs);
                }
              };
              debug("subscribe :: call _sendPacket");
              this._sendPacket(packet);
              return this;
            };
            MqttClient.prototype.unsubscribe = function() {
              var packet = {
                cmd: "unsubscribe",
                qos: 1,
                messageId: this._nextId()
              };
              var that = this;
              var args = new Array(arguments.length);
              for (var i2 = 0; i2 < arguments.length; i2++) {
                args[i2] = arguments[i2];
              }
              var topic = args.shift();
              var callback = args.pop() || nop;
              var opts = args.pop();
              if (typeof topic === "string") {
                topic = [topic];
              }
              if (typeof callback !== "function") {
                opts = callback;
                callback = nop;
              }
              if (this._checkDisconnecting(callback)) {
                return this;
              }
              if (typeof topic === "string") {
                packet.unsubscriptions = [topic];
              } else if (Array.isArray(topic)) {
                packet.unsubscriptions = topic;
              }
              if (this.options.resubscribe) {
                packet.unsubscriptions.forEach(function(topic2) {
                  delete that._resubscribeTopics[topic2];
                });
              }
              if (typeof opts === "object" && opts.properties) {
                packet.properties = opts.properties;
              }
              this.outgoing[packet.messageId] = {
                volatile: true,
                cb: callback
              };
              debug("unsubscribe: call _sendPacket");
              this._sendPacket(packet);
              return this;
            };
            MqttClient.prototype.end = function(force, opts, cb2) {
              var that = this;
              debug("end :: (%s)", this.options.clientId);
              if (force == null || typeof force !== "boolean") {
                cb2 = opts || nop;
                opts = force;
                force = false;
                if (typeof opts !== "object") {
                  cb2 = opts;
                  opts = null;
                  if (typeof cb2 !== "function") {
                    cb2 = nop;
                  }
                }
              }
              if (typeof opts !== "object") {
                cb2 = opts;
                opts = null;
              }
              debug("end :: cb? %s", !!cb2);
              cb2 = cb2 || nop;
              function closeStores() {
                debug("end :: closeStores: closing incoming and outgoing stores");
                that.disconnected = true;
                that.incomingStore.close(function() {
                  that.outgoingStore.close(function() {
                    debug("end :: closeStores: emitting end");
                    that.emit("end");
                    if (cb2) {
                      debug("end :: closeStores: invoking callback with args");
                      cb2();
                    }
                  });
                });
                if (that._deferredReconnect) {
                  that._deferredReconnect();
                }
              }
              function finish() {
                debug("end :: (%s) :: finish :: calling _cleanUp with force %s", that.options.clientId, force);
                that._cleanUp(force, () => {
                  debug("end :: finish :: calling process.nextTick on closeStores");
                  process.nextTick(closeStores.bind(that));
                }, opts);
              }
              if (this.disconnecting) {
                cb2();
                return this;
              }
              this._clearReconnect();
              this.disconnecting = true;
              if (!force && Object.keys(this.outgoing).length > 0) {
                debug("end :: (%s) :: calling finish in 10ms once outgoing is empty", that.options.clientId);
                this.once("outgoingEmpty", setTimeout.bind(null, finish, 10));
              } else {
                debug("end :: (%s) :: immediately calling finish", that.options.clientId);
                finish();
              }
              return this;
            };
            MqttClient.prototype.removeOutgoingMessage = function(messageId) {
              var cb2 = this.outgoing[messageId] ? this.outgoing[messageId].cb : null;
              delete this.outgoing[messageId];
              this.outgoingStore.del({
                messageId
              }, function() {
                cb2(new Error("Message removed"));
              });
              return this;
            };
            MqttClient.prototype.reconnect = function(opts) {
              debug("client reconnect");
              var that = this;
              var f2 = function() {
                if (opts) {
                  that.options.incomingStore = opts.incomingStore;
                  that.options.outgoingStore = opts.outgoingStore;
                } else {
                  that.options.incomingStore = null;
                  that.options.outgoingStore = null;
                }
                that.incomingStore = that.options.incomingStore || new Store();
                that.outgoingStore = that.options.outgoingStore || new Store();
                that.disconnecting = false;
                that.disconnected = false;
                that._deferredReconnect = null;
                that._reconnect();
              };
              if (this.disconnecting && !this.disconnected) {
                this._deferredReconnect = f2;
              } else {
                f2();
              }
              return this;
            };
            MqttClient.prototype._reconnect = function() {
              debug("_reconnect: emitting reconnect to client");
              this.emit("reconnect");
              debug("_reconnect: calling _setupStream");
              this._setupStream();
            };
            MqttClient.prototype._setupReconnect = function() {
              var that = this;
              if (!that.disconnecting && !that.reconnectTimer && that.options.reconnectPeriod > 0) {
                if (!this.reconnecting) {
                  debug("_setupReconnect :: emit `offline` state");
                  this.emit("offline");
                  debug("_setupReconnect :: set `reconnecting` to `true`");
                  this.reconnecting = true;
                }
                debug("_setupReconnect :: setting reconnectTimer for %d ms", that.options.reconnectPeriod);
                that.reconnectTimer = setInterval(function() {
                  debug("reconnectTimer :: reconnect triggered!");
                  that._reconnect();
                }, that.options.reconnectPeriod);
              } else {
                debug("_setupReconnect :: doing nothing...");
              }
            };
            MqttClient.prototype._clearReconnect = function() {
              debug("_clearReconnect : clearing reconnect timer");
              if (this.reconnectTimer) {
                clearInterval(this.reconnectTimer);
                this.reconnectTimer = null;
              }
            };
            MqttClient.prototype._cleanUp = function(forced, done) {
              var opts = arguments[2];
              if (done) {
                debug("_cleanUp :: done callback provided for on stream close");
                this.stream.on("close", done);
              }
              debug("_cleanUp :: forced? %s", forced);
              if (forced) {
                if (this.options.reconnectPeriod === 0 && this.options.clean) {
                  flush(this.outgoing);
                }
                debug("_cleanUp :: (%s) :: destroying stream", this.options.clientId);
                this.stream.destroy();
              } else {
                var packet = xtend({
                  cmd: "disconnect"
                }, opts);
                debug("_cleanUp :: (%s) :: call _sendPacket with disconnect packet", this.options.clientId);
                this._sendPacket(
                  packet,
                  setImmediate.bind(
                    null,
                    this.stream.end.bind(this.stream)
                  )
                );
              }
              if (!this.disconnecting) {
                debug("_cleanUp :: client not disconnecting. Clearing and resetting reconnect.");
                this._clearReconnect();
                this._setupReconnect();
              }
              if (this.pingTimer !== null) {
                debug("_cleanUp :: clearing pingTimer");
                this.pingTimer.clear();
                this.pingTimer = null;
              }
              if (done && !this.connected) {
                debug("_cleanUp :: (%s) :: removing stream `done` callback `close` listener", this.options.clientId);
                this.stream.removeListener("close", done);
                done();
              }
            };
            MqttClient.prototype._sendPacket = function(packet, cb2, cbStorePut) {
              debug("_sendPacket :: (%s) ::  start", this.options.clientId);
              cbStorePut = cbStorePut || nop;
              if (!this.connected) {
                debug("_sendPacket :: client not connected. Storing packet offline.");
                this._storePacket(packet, cb2, cbStorePut);
                return;
              }
              this._shiftPingInterval();
              switch (packet.cmd) {
                case "publish":
                  break;
                case "pubrel":
                  storeAndSend(this, packet, cb2, cbStorePut);
                  return;
                default:
                  sendPacket(this, packet, cb2);
                  return;
              }
              switch (packet.qos) {
                case 2:
                case 1:
                  storeAndSend(this, packet, cb2, cbStorePut);
                  break;
                case 0:
                default:
                  sendPacket(this, packet, cb2);
                  break;
              }
              debug("_sendPacket :: (%s) ::  end", this.options.clientId);
            };
            MqttClient.prototype._storePacket = function(packet, cb2, cbStorePut) {
              debug("_storePacket :: packet: %o", packet);
              debug("_storePacket :: cb? %s", !!cb2);
              cbStorePut = cbStorePut || nop;
              if ((packet.qos || 0) === 0 && this.queueQoSZero || packet.cmd !== "publish") {
                this.queue.push({
                  packet,
                  cb: cb2
                });
              } else if (packet.qos > 0) {
                cb2 = this.outgoing[packet.messageId] ? this.outgoing[packet.messageId].cb : null;
                this.outgoingStore.put(packet, function(err) {
                  if (err) {
                    return cb2 && cb2(err);
                  }
                  cbStorePut();
                });
              } else if (cb2) {
                cb2(new Error("No connection to broker"));
              }
            };
            MqttClient.prototype._setupPingTimer = function() {
              debug("_setupPingTimer :: keepalive %d (seconds)", this.options.keepalive);
              var that = this;
              if (!this.pingTimer && this.options.keepalive) {
                this.pingResp = true;
                this.pingTimer = reInterval(function() {
                  that._checkPing();
                }, this.options.keepalive * 1e3);
              }
            };
            MqttClient.prototype._shiftPingInterval = function() {
              if (this.pingTimer && this.options.keepalive && this.options.reschedulePings) {
                this.pingTimer.reschedule(this.options.keepalive * 1e3);
              }
            };
            MqttClient.prototype._checkPing = function() {
              debug("_checkPing :: checking ping...");
              if (this.pingResp) {
                debug("_checkPing :: ping response received. Clearing flag and sending `pingreq`");
                this.pingResp = false;
                this._sendPacket({
                  cmd: "pingreq"
                });
              } else {
                debug("_checkPing :: calling _cleanUp with force true");
                this._cleanUp(true);
              }
            };
            MqttClient.prototype._handlePingresp = function() {
              this.pingResp = true;
            };
            MqttClient.prototype._handleConnack = function(packet) {
              debug("_handleConnack");
              var options = this.options;
              var version = options.protocolVersion;
              var rc2 = version === 5 ? packet.reasonCode : packet.returnCode;
              clearTimeout(this.connackTimer);
              if (packet.properties) {
                if (packet.properties.topicAliasMaximum) {
                  if (!options.properties) {
                    options.properties = {};
                  }
                  options.properties.topicAliasMaximum = packet.properties.topicAliasMaximum;
                }
                if (packet.properties.serverKeepAlive && options.keepalive) {
                  options.keepalive = packet.properties.serverKeepAlive;
                  this._shiftPingInterval();
                }
                if (packet.properties.maximumPacketSize) {
                  if (!options.properties) {
                    options.properties = {};
                  }
                  options.properties.maximumPacketSize = packet.properties.maximumPacketSize;
                }
              }
              if (rc2 === 0) {
                this.reconnecting = false;
                this._onConnect(packet);
              } else if (rc2 > 0) {
                var err = new Error("Connection refused: " + errors[rc2]);
                err.code = rc2;
                this.emit("error", err);
              }
            };
            MqttClient.prototype._handlePublish = function(packet, done) {
              debug("_handlePublish: packet %o", packet);
              done = typeof done !== "undefined" ? done : nop;
              var topic = packet.topic.toString();
              var message = packet.payload;
              var qos = packet.qos;
              var messageId = packet.messageId;
              var that = this;
              var options = this.options;
              var validReasonCodes = [0, 16, 128, 131, 135, 144, 145, 151, 153];
              debug("_handlePublish: qos %d", qos);
              switch (qos) {
                case 2: {
                  options.customHandleAcks(topic, message, packet, function(error, code) {
                    if (!(error instanceof Error)) {
                      code = error;
                      error = null;
                    }
                    if (error) {
                      return that.emit("error", error);
                    }
                    if (validReasonCodes.indexOf(code) === -1) {
                      return that.emit("error", new Error("Wrong reason code for pubrec"));
                    }
                    if (code) {
                      that._sendPacket({
                        cmd: "pubrec",
                        messageId,
                        reasonCode: code
                      }, done);
                    } else {
                      that.incomingStore.put(packet, function() {
                        that._sendPacket({
                          cmd: "pubrec",
                          messageId
                        }, done);
                      });
                    }
                  });
                  break;
                }
                case 1: {
                  options.customHandleAcks(topic, message, packet, function(error, code) {
                    if (!(error instanceof Error)) {
                      code = error;
                      error = null;
                    }
                    if (error) {
                      return that.emit("error", error);
                    }
                    if (validReasonCodes.indexOf(code) === -1) {
                      return that.emit("error", new Error("Wrong reason code for puback"));
                    }
                    if (!code) {
                      that.emit("message", topic, message, packet);
                    }
                    that.handleMessage(packet, function(err) {
                      if (err) {
                        return done && done(err);
                      }
                      that._sendPacket({
                        cmd: "puback",
                        messageId,
                        reasonCode: code
                      }, done);
                    });
                  });
                  break;
                }
                case 0:
                  this.emit("message", topic, message, packet);
                  this.handleMessage(packet, done);
                  break;
                default:
                  debug("_handlePublish: unknown QoS. Doing nothing.");
                  break;
              }
            };
            MqttClient.prototype.handleMessage = function(packet, callback) {
              callback();
            };
            MqttClient.prototype._handleAck = function(packet) {
              var messageId = packet.messageId;
              var type = packet.cmd;
              var response2 = null;
              var cb2 = this.outgoing[messageId] ? this.outgoing[messageId].cb : null;
              var that = this;
              var err;
              if (!cb2) {
                debug("_handleAck :: Server sent an ack in error. Ignoring.");
                return;
              }
              debug("_handleAck :: packet type", type);
              switch (type) {
                case "pubcomp":
                case "puback":
                  var pubackRC = packet.reasonCode;
                  if (pubackRC && pubackRC > 0 && pubackRC !== 16) {
                    err = new Error("Publish error: " + errors[pubackRC]);
                    err.code = pubackRC;
                    cb2(err, packet);
                  }
                  delete this.outgoing[messageId];
                  this.outgoingStore.del(packet, cb2);
                  break;
                case "pubrec":
                  response2 = {
                    cmd: "pubrel",
                    qos: 2,
                    messageId
                  };
                  var pubrecRC = packet.reasonCode;
                  if (pubrecRC && pubrecRC > 0 && pubrecRC !== 16) {
                    err = new Error("Publish error: " + errors[pubrecRC]);
                    err.code = pubrecRC;
                    cb2(err, packet);
                  } else {
                    this._sendPacket(response2);
                  }
                  break;
                case "suback":
                  delete this.outgoing[messageId];
                  for (var grantedI = 0; grantedI < packet.granted.length; grantedI++) {
                    if ((packet.granted[grantedI] & 128) !== 0) {
                      var topics = this.messageIdToTopic[messageId];
                      if (topics) {
                        topics.forEach(function(topic) {
                          delete that._resubscribeTopics[topic];
                        });
                      }
                    }
                  }
                  cb2(null, packet);
                  break;
                case "unsuback":
                  delete this.outgoing[messageId];
                  cb2(null);
                  break;
                default:
                  that.emit("error", new Error("unrecognized packet type"));
              }
              if (this.disconnecting && Object.keys(this.outgoing).length === 0) {
                this.emit("outgoingEmpty");
              }
            };
            MqttClient.prototype._handlePubrel = function(packet, callback) {
              debug("handling pubrel packet");
              callback = typeof callback !== "undefined" ? callback : nop;
              var messageId = packet.messageId;
              var that = this;
              var comp = {
                cmd: "pubcomp",
                messageId
              };
              that.incomingStore.get(packet, function(err, pub) {
                if (!err) {
                  that.emit("message", pub.topic, pub.payload, pub);
                  that.handleMessage(pub, function(err2) {
                    if (err2) {
                      return callback(err2);
                    }
                    that.incomingStore.del(pub, nop);
                    that._sendPacket(comp, callback);
                  });
                } else {
                  that._sendPacket(comp, callback);
                }
              });
            };
            MqttClient.prototype._handleDisconnect = function(packet) {
              this.emit("disconnect", packet);
            };
            MqttClient.prototype._nextId = function() {
              var id2 = this.nextId++;
              if (this.nextId === 65536) {
                this.nextId = 1;
              }
              return id2;
            };
            MqttClient.prototype.getLastMessageId = function() {
              return this.nextId === 1 ? 65535 : this.nextId - 1;
            };
            MqttClient.prototype._resubscribe = function(connack) {
              debug("_resubscribe");
              var _resubscribeTopicsKeys = Object.keys(this._resubscribeTopics);
              if (!this._firstConnection && (this.options.clean || this.options.protocolVersion === 5 && !connack.sessionPresent) && _resubscribeTopicsKeys.length > 0) {
                if (this.options.resubscribe) {
                  if (this.options.protocolVersion === 5) {
                    debug("_resubscribe: protocolVersion 5");
                    for (var topicI = 0; topicI < _resubscribeTopicsKeys.length; topicI++) {
                      var resubscribeTopic = {};
                      resubscribeTopic[_resubscribeTopicsKeys[topicI]] = this._resubscribeTopics[_resubscribeTopicsKeys[topicI]];
                      resubscribeTopic.resubscribe = true;
                      this.subscribe(resubscribeTopic, {
                        properties: resubscribeTopic[_resubscribeTopicsKeys[topicI]].properties
                      });
                    }
                  } else {
                    this._resubscribeTopics.resubscribe = true;
                    this.subscribe(this._resubscribeTopics);
                  }
                } else {
                  this._resubscribeTopics = {};
                }
              }
              this._firstConnection = false;
            };
            MqttClient.prototype._onConnect = function(packet) {
              if (this.disconnected) {
                this.emit("connect", packet);
                return;
              }
              var that = this;
              this._setupPingTimer();
              this._resubscribe(packet);
              this.connected = true;
              function startStreamProcess() {
                var outStore = that.outgoingStore.createStream();
                function clearStoreProcessing() {
                  that._storeProcessing = false;
                  that._packetIdsDuringStoreProcessing = {};
                }
                that.once("close", remove);
                outStore.on("error", function(err) {
                  clearStoreProcessing();
                  that.removeListener("close", remove);
                  that.emit("error", err);
                });
                function remove() {
                  outStore.destroy();
                  outStore = null;
                  clearStoreProcessing();
                }
                function storeDeliver() {
                  if (!outStore) {
                    return;
                  }
                  that._storeProcessing = true;
                  var packet2 = outStore.read(1);
                  var cb2;
                  if (!packet2) {
                    outStore.once("readable", storeDeliver);
                    return;
                  }
                  if (that._packetIdsDuringStoreProcessing[packet2.messageId]) {
                    storeDeliver();
                    return;
                  }
                  if (!that.disconnecting && !that.reconnectTimer) {
                    cb2 = that.outgoing[packet2.messageId] ? that.outgoing[packet2.messageId].cb : null;
                    that.outgoing[packet2.messageId] = {
                      volatile: false,
                      cb: function(err, status) {
                        if (cb2) {
                          cb2(err, status);
                        }
                        storeDeliver();
                      }
                    };
                    that._packetIdsDuringStoreProcessing[packet2.messageId] = true;
                    that._sendPacket(packet2);
                  } else if (outStore.destroy) {
                    outStore.destroy();
                  }
                }
                outStore.on("end", function() {
                  var allProcessed = true;
                  for (var id2 in that._packetIdsDuringStoreProcessing) {
                    if (!that._packetIdsDuringStoreProcessing[id2]) {
                      allProcessed = false;
                      break;
                    }
                  }
                  if (allProcessed) {
                    clearStoreProcessing();
                    that.removeListener("close", remove);
                    that.emit("connect", packet);
                  } else {
                    startStreamProcess();
                  }
                });
                storeDeliver();
              }
              startStreamProcess();
            };
            module2.exports = MqttClient;
          }).call(this, require2("_process"), typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {
          "./store": 7,
          "./validations": 8,
          "_process": 100,
          "debug": 17,
          "events": 83,
          "inherits": 88,
          "mqtt-packet": 92,
          "readable-stream": 116,
          "reinterval": 117,
          "xtend": 140
        }],
        2: [function(require2, module2, exports2) {
          (function(Buffer2) {
            var Transform = require2("readable-stream").Transform;
            var duplexify = require2("duplexify");
            var base64 = require2("base64-js");
            var my2;
            var proxy;
            var stream;
            var isInitialized = false;
            function buildProxy() {
              var proxy2 = new Transform();
              proxy2._write = function(chunk, encoding, next) {
                my2.sendSocketMessage({
                  data: chunk.buffer,
                  success: function() {
                    next();
                  },
                  fail: function() {
                    next(new Error());
                  }
                });
              };
              proxy2._flush = function socketEnd(done) {
                my2.closeSocket({
                  success: function() {
                    done();
                  }
                });
              };
              return proxy2;
            }
            function setDefaultOpts(opts) {
              if (!opts.hostname) {
                opts.hostname = "localhost";
              }
              if (!opts.path) {
                opts.path = "/";
              }
              if (!opts.wsOptions) {
                opts.wsOptions = {};
              }
            }
            function buildUrl(opts, client) {
              var protocol = opts.protocol === "alis" ? "wss" : "ws";
              var url = protocol + "://" + opts.hostname + opts.path;
              if (opts.port && opts.port !== 80 && opts.port !== 443) {
                url = protocol + "://" + opts.hostname + ":" + opts.port + opts.path;
              }
              if (typeof opts.transformWsUrl === "function") {
                url = opts.transformWsUrl(url, opts, client);
              }
              return url;
            }
            function bindEventHandler() {
              if (isInitialized)
                return;
              isInitialized = true;
              my2.onSocketOpen(function() {
                stream.setReadable(proxy);
                stream.setWritable(proxy);
                stream.emit("connect");
              });
              my2.onSocketMessage(function(res) {
                if (typeof res.data === "string") {
                  var array = base64.toByteArray(res.data);
                  var buffer = Buffer2.from(array);
                  proxy.push(buffer);
                } else {
                  var reader = new FileReader();
                  reader.addEventListener("load", function() {
                    var data = reader.result;
                    if (data instanceof ArrayBuffer)
                      data = Buffer2.from(data);
                    else
                      data = Buffer2.from(data, "utf8");
                    proxy.push(data);
                  });
                  reader.readAsArrayBuffer(res.data);
                }
              });
              my2.onSocketClose(function() {
                stream.end();
                stream.destroy();
              });
              my2.onSocketError(function(res) {
                stream.destroy(res);
              });
            }
            function buildStream(client, opts) {
              opts.hostname = opts.hostname || opts.host;
              if (!opts.hostname) {
                throw new Error("Could not determine host. Specify host manually.");
              }
              var websocketSubProtocol = opts.protocolId === "MQIsdp" && opts.protocolVersion === 3 ? "mqttv3.1" : "mqtt";
              setDefaultOpts(opts);
              var url = buildUrl(opts, client);
              my2 = opts.my;
              my2.connectSocket({
                url,
                protocols: websocketSubProtocol,
                success() {
                }
              });
              proxy = buildProxy();
              stream = duplexify.obj();
              bindEventHandler();
              return stream;
            }
            module2.exports = buildStream;
          }).call(this, require2("buffer").Buffer);
        }, {
          "base64-js": 10,
          "buffer": 12,
          "duplexify": 19,
          "readable-stream": 116
        }],
        3: [function(require2, module2, exports2) {
          var net = require2("net");
          var debug = require2("debug")("mqttjs:tcp");
          function streamBuilder(client, opts) {
            var port, host;
            opts.port = opts.port || 1883;
            opts.hostname = opts.hostname || opts.host || "localhost";
            port = opts.port;
            host = opts.hostname;
            debug("port %d and host %s", port, host);
            return net.createConnection(port, host);
          }
          module2.exports = streamBuilder;
        }, {
          "debug": 17,
          "net": 11
        }],
        4: [function(require2, module2, exports2) {
          var tls = require2("tls");
          var debug = require2("debug")("mqttjs:tls");
          function buildBuilder(mqttClient, opts) {
            var connection;
            opts.port = opts.port || 8883;
            opts.host = opts.hostname || opts.host || "localhost";
            opts.servername = opts.host;
            opts.rejectUnauthorized = opts.rejectUnauthorized !== false;
            delete opts.path;
            debug("port %d host %s rejectUnauthorized %b", opts.port, opts.host, opts.rejectUnauthorized);
            connection = tls.connect(opts);
            connection.on("secureConnect", function() {
              if (opts.rejectUnauthorized && !connection.authorized) {
                connection.emit("error", new Error("TLS not authorized"));
              } else {
                connection.removeListener("error", handleTLSerrors);
              }
            });
            function handleTLSerrors(err) {
              if (opts.rejectUnauthorized) {
                mqttClient.emit("error", err);
              }
              connection.end();
            }
            connection.on("error", handleTLSerrors);
            return connection;
          }
          module2.exports = buildBuilder;
        }, {
          "debug": 17,
          "tls": 11
        }],
        5: [function(require2, module2, exports2) {
          (function(process) {
            var debug = require2("debug")("mqttjs:ws");
            var websocket = require2("websocket-stream");
            var urlModule = require2("url");
            var WSS_OPTIONS = [
              "rejectUnauthorized",
              "ca",
              "cert",
              "key",
              "pfx",
              "passphrase"
            ];
            var IS_BROWSER = process.title === "browser";
            function buildUrl(opts, client) {
              var url = opts.protocol + "://" + opts.hostname + ":" + opts.port + opts.path;
              if (typeof opts.transformWsUrl === "function") {
                url = opts.transformWsUrl(url, opts, client);
              }
              return url;
            }
            function setDefaultOpts(opts) {
              if (!opts.hostname) {
                opts.hostname = "localhost";
              }
              if (!opts.port) {
                if (opts.protocol === "wss") {
                  opts.port = 443;
                } else {
                  opts.port = 80;
                }
              }
              if (!opts.path) {
                opts.path = "/";
              }
              if (!opts.wsOptions) {
                opts.wsOptions = {};
              }
              if (!IS_BROWSER && opts.protocol === "wss") {
                WSS_OPTIONS.forEach(function(prop) {
                  if (opts.hasOwnProperty(prop) && !opts.wsOptions.hasOwnProperty(prop)) {
                    opts.wsOptions[prop] = opts[prop];
                  }
                });
              }
            }
            function createWebSocket(client, opts) {
              debug("createWebSocket");
              var websocketSubProtocol = opts.protocolId === "MQIsdp" && opts.protocolVersion === 3 ? "mqttv3.1" : "mqtt";
              setDefaultOpts(opts);
              var url = buildUrl(opts, client);
              debug("url %s protocol %s", url, websocketSubProtocol);
              return websocket(url, [websocketSubProtocol], opts.wsOptions);
            }
            function streamBuilder(client, opts) {
              return createWebSocket(client, opts);
            }
            function browserStreamBuilder(client, opts) {
              debug("browserStreamBuilder");
              if (!opts.hostname) {
                opts.hostname = opts.host;
              }
              if (!opts.hostname) {
                if (typeof document === "undefined") {
                  throw new Error("Could not determine host. Specify host manually.");
                }
                var parsed = urlModule.parse(document.URL);
                opts.hostname = parsed.hostname;
                if (!opts.port) {
                  opts.port = parsed.port;
                }
              }
              return createWebSocket(client, opts);
            }
            if (IS_BROWSER) {
              module2.exports = browserStreamBuilder;
            } else {
              module2.exports = streamBuilder;
            }
          }).call(this, require2("_process"));
        }, {
          "_process": 100,
          "debug": 17,
          "url": 132,
          "websocket-stream": 137
        }],
        6: [function(require2, module2, exports2) {
          (function(process, Buffer2) {
            var Transform = require2("readable-stream").Transform;
            var duplexify = require2("duplexify");
            var socketTask;
            var proxy;
            var stream;
            function buildProxy() {
              var proxy2 = new Transform();
              proxy2._write = function(chunk, encoding, next) {
                socketTask.send({
                  data: chunk.buffer,
                  success: function() {
                    next();
                  },
                  fail: function(errMsg) {
                    next(new Error(errMsg));
                  }
                });
              };
              proxy2._flush = function socketEnd(done) {
                socketTask.close({
                  success: function() {
                    done();
                  }
                });
              };
              return proxy2;
            }
            function setDefaultOpts(opts) {
              if (!opts.hostname) {
                opts.hostname = "localhost";
              }
              if (!opts.path) {
                opts.path = "/";
              }
              if (!opts.wsOptions) {
                opts.wsOptions = {};
              }
            }
            function buildUrl(opts, client) {
              var protocol = opts.protocol === "wxs" ? "wss" : "ws";
              var url = protocol + "://" + opts.hostname + opts.path;
              if (opts.port && opts.port !== 80 && opts.port !== 443) {
                url = protocol + "://" + opts.hostname + ":" + opts.port + opts.path;
              }
              if (typeof opts.transformWsUrl === "function") {
                url = opts.transformWsUrl(url, opts, client);
              }
              return url;
            }
            function bindEventHandler() {
              socketTask.onOpen(function() {
                stream.setReadable(proxy);
                stream.setWritable(proxy);
                stream.emit("connect");
              });
              socketTask.onMessage(function(res) {
                var data = res.data;
                if (data instanceof ArrayBuffer)
                  data = Buffer2.from(data);
                else
                  data = Buffer2.from(data, "utf8");
                proxy.push(data);
              });
              socketTask.onClose(function() {
                stream.end();
                stream.destroy();
              });
              socketTask.onError(function(res) {
                stream.destroy(new Error(res.errMsg));
              });
            }
            function buildStream(client, opts) {
              opts.hostname = opts.hostname || opts.host;
              if (!opts.hostname) {
                throw new Error("Could not determine host. Specify host manually.");
              }
              var websocketSubProtocol = opts.protocolId === "MQIsdp" && opts.protocolVersion === 3 ? "mqttv3.1" : "mqtt";
              setDefaultOpts(opts);
              var url = buildUrl(opts, client);
              socketTask = wx.connectSocket({
                url,
                protocols: [websocketSubProtocol],
                success() {
                }
              });
              proxy = buildProxy();
              stream = duplexify.obj();
              stream._destroy = function(err, cb2) {
                socketTask.close({
                  success: function() {
                    cb2 && cb2(err);
                  }
                });
              };
              var destroyRef = stream.destroy;
              stream.destroy = function() {
                stream.destroy = destroyRef;
                var self2 = this;
                process.nextTick(function() {
                  socketTask.close({
                    fail: function() {
                      self2._destroy(new Error());
                    }
                  });
                });
              }.bind(stream);
              bindEventHandler();
              return stream;
            }
            module2.exports = buildStream;
          }).call(this, require2("_process"), require2("buffer").Buffer);
        }, {
          "_process": 100,
          "buffer": 12,
          "duplexify": 19,
          "readable-stream": 116
        }],
        7: [function(require2, module2, exports2) {
          (function(process) {
            var xtend = require2("xtend");
            var Readable = require2("readable-stream").Readable;
            var streamsOpts = {
              objectMode: true
            };
            var defaultStoreOptions = {
              clean: true
            };
            var Map2 = require2("es6-map");
            function Store(options) {
              if (!(this instanceof Store)) {
                return new Store(options);
              }
              this.options = options || {};
              this.options = xtend(defaultStoreOptions, options);
              this._inflights = new Map2();
            }
            Store.prototype.put = function(packet, cb2) {
              this._inflights.set(packet.messageId, packet);
              if (cb2) {
                cb2();
              }
              return this;
            };
            Store.prototype.createStream = function() {
              var stream = new Readable(streamsOpts);
              var destroyed = false;
              var values = [];
              var i2 = 0;
              this._inflights.forEach(function(value, key) {
                values.push(value);
              });
              stream._read = function() {
                if (!destroyed && i2 < values.length) {
                  this.push(values[i2++]);
                } else {
                  this.push(null);
                }
              };
              stream.destroy = function() {
                if (destroyed) {
                  return;
                }
                var self2 = this;
                destroyed = true;
                process.nextTick(function() {
                  self2.emit("close");
                });
              };
              return stream;
            };
            Store.prototype.del = function(packet, cb2) {
              packet = this._inflights.get(packet.messageId);
              if (packet) {
                this._inflights.delete(packet.messageId);
                cb2(null, packet);
              } else if (cb2) {
                cb2(new Error("missing packet"));
              }
              return this;
            };
            Store.prototype.get = function(packet, cb2) {
              packet = this._inflights.get(packet.messageId);
              if (packet) {
                cb2(null, packet);
              } else if (cb2) {
                cb2(new Error("missing packet"));
              }
              return this;
            };
            Store.prototype.close = function(cb2) {
              if (this.options.clean) {
                this._inflights = null;
              }
              if (cb2) {
                cb2();
              }
            };
            module2.exports = Store;
          }).call(this, require2("_process"));
        }, {
          "_process": 100,
          "es6-map": 68,
          "readable-stream": 116,
          "xtend": 140
        }],
        8: [function(require2, module2, exports2) {
          function validateTopic(topic) {
            var parts = topic.split("/");
            for (var i2 = 0; i2 < parts.length; i2++) {
              if (parts[i2] === "+") {
                continue;
              }
              if (parts[i2] === "#") {
                return i2 === parts.length - 1;
              }
              if (parts[i2].indexOf("+") !== -1 || parts[i2].indexOf("#") !== -1) {
                return false;
              }
            }
            return true;
          }
          function validateTopics(topics) {
            if (topics.length === 0) {
              return "empty_topic_list";
            }
            for (var i2 = 0; i2 < topics.length; i2++) {
              if (!validateTopic(topics[i2])) {
                return topics[i2];
              }
            }
            return null;
          }
          module2.exports = {
            validateTopics
          };
        }, {}],
        9: [function(require2, module2, exports2) {
          (function(process) {
            var MqttClient = require2("../client");
            var Store = require2("../store");
            var url = require2("url");
            var xtend = require2("xtend");
            var debug = require2("debug")("mqttjs");
            var protocols = {};
            if (process.title !== "browser") {
              protocols.mqtt = require2("./tcp");
              protocols.tcp = require2("./tcp");
              protocols.ssl = require2("./tls");
              protocols.tls = require2("./tls");
              protocols.mqtts = require2("./tls");
            } else {
              protocols.wx = require2("./wx");
              protocols.wxs = require2("./wx");
              protocols.ali = require2("./ali");
              protocols.alis = require2("./ali");
            }
            protocols.ws = require2("./ws");
            protocols.wss = require2("./ws");
            function parseAuthOptions(opts) {
              var matches;
              if (opts.auth) {
                matches = opts.auth.match(/^(.+):(.+)$/);
                if (matches) {
                  opts.username = matches[1];
                  opts.password = matches[2];
                } else {
                  opts.username = opts.auth;
                }
              }
            }
            function connect(brokerUrl, opts) {
              debug("connecting to an MQTT broker...");
              if (typeof brokerUrl === "object" && !opts) {
                opts = brokerUrl;
                brokerUrl = null;
              }
              opts = opts || {};
              if (brokerUrl) {
                var parsed = url.parse(brokerUrl, true);
                if (parsed.port != null) {
                  parsed.port = Number(parsed.port);
                }
                opts = xtend(parsed, opts);
                if (opts.protocol === null) {
                  throw new Error("Missing protocol");
                }
                opts.protocol = opts.protocol.replace(/:$/, "");
              }
              parseAuthOptions(opts);
              if (opts.query && typeof opts.query.clientId === "string") {
                opts.clientId = opts.query.clientId;
              }
              if (opts.cert && opts.key) {
                if (opts.protocol) {
                  if (["mqtts", "wss", "wxs", "alis"].indexOf(opts.protocol) === -1) {
                    switch (opts.protocol) {
                      case "mqtt":
                        opts.protocol = "mqtts";
                        break;
                      case "ws":
                        opts.protocol = "wss";
                        break;
                      case "wx":
                        opts.protocol = "wxs";
                        break;
                      case "ali":
                        opts.protocol = "alis";
                        break;
                      default:
                        throw new Error('Unknown protocol for secure connection: "' + opts.protocol + '"!');
                    }
                  }
                } else {
                  throw new Error("Missing secure protocol key");
                }
              }
              if (!protocols[opts.protocol]) {
                var isSecure = ["mqtts", "wss"].indexOf(opts.protocol) !== -1;
                opts.protocol = [
                  "mqtt",
                  "mqtts",
                  "ws",
                  "wss",
                  "wx",
                  "wxs",
                  "ali",
                  "alis"
                ].filter(function(key, index2) {
                  if (isSecure && index2 % 2 === 0) {
                    return false;
                  }
                  return typeof protocols[key] === "function";
                })[0];
              }
              if (opts.clean === false && !opts.clientId) {
                throw new Error("Missing clientId for unclean clients");
              }
              if (opts.protocol) {
                opts.defaultProtocol = opts.protocol;
              }
              function wrapper(client2) {
                if (opts.servers) {
                  if (!client2._reconnectCount || client2._reconnectCount === opts.servers.length) {
                    client2._reconnectCount = 0;
                  }
                  opts.host = opts.servers[client2._reconnectCount].host;
                  opts.port = opts.servers[client2._reconnectCount].port;
                  opts.protocol = !opts.servers[client2._reconnectCount].protocol ? opts.defaultProtocol : opts.servers[client2._reconnectCount].protocol;
                  opts.hostname = opts.host;
                  client2._reconnectCount++;
                }
                debug("calling streambuilder for", opts.protocol);
                return protocols[opts.protocol](client2, opts);
              }
              var client = new MqttClient(wrapper, opts);
              client.on("error", function() {
              });
              return client;
            }
            module2.exports = connect;
            module2.exports.connect = connect;
            module2.exports.MqttClient = MqttClient;
            module2.exports.Store = Store;
          }).call(this, require2("_process"));
        }, {
          "../client": 1,
          "../store": 7,
          "./ali": 2,
          "./tcp": 3,
          "./tls": 4,
          "./ws": 5,
          "./wx": 6,
          "_process": 100,
          "debug": 17,
          "url": 132,
          "xtend": 140
        }],
        10: [function(require2, module2, exports2) {
          exports2.byteLength = byteLength;
          exports2.toByteArray = toByteArray;
          exports2.fromByteArray = fromByteArray;
          var lookup = [];
          var revLookup = [];
          var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
          var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
          for (var i2 = 0, len = code.length; i2 < len; ++i2) {
            lookup[i2] = code[i2];
            revLookup[code.charCodeAt(i2)] = i2;
          }
          revLookup["-".charCodeAt(0)] = 62;
          revLookup["_".charCodeAt(0)] = 63;
          function getLens(b64) {
            var len2 = b64.length;
            if (len2 % 4 > 0) {
              throw new Error("Invalid string. Length must be a multiple of 4");
            }
            var validLen = b64.indexOf("=");
            if (validLen === -1)
              validLen = len2;
            var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
            return [validLen, placeHoldersLen];
          }
          function byteLength(b64) {
            var lens = getLens(b64);
            var validLen = lens[0];
            var placeHoldersLen = lens[1];
            return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
          }
          function _byteLength(b64, validLen, placeHoldersLen) {
            return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
          }
          function toByteArray(b64) {
            var tmp;
            var lens = getLens(b64);
            var validLen = lens[0];
            var placeHoldersLen = lens[1];
            var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
            var curByte = 0;
            var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
            for (var i3 = 0; i3 < len2; i3 += 4) {
              tmp = revLookup[b64.charCodeAt(i3)] << 18 | revLookup[b64.charCodeAt(i3 + 1)] << 12 | revLookup[b64.charCodeAt(i3 + 2)] << 6 | revLookup[b64.charCodeAt(i3 + 3)];
              arr[curByte++] = tmp >> 16 & 255;
              arr[curByte++] = tmp >> 8 & 255;
              arr[curByte++] = tmp & 255;
            }
            if (placeHoldersLen === 2) {
              tmp = revLookup[b64.charCodeAt(i3)] << 2 | revLookup[b64.charCodeAt(i3 + 1)] >> 4;
              arr[curByte++] = tmp & 255;
            }
            if (placeHoldersLen === 1) {
              tmp = revLookup[b64.charCodeAt(i3)] << 10 | revLookup[b64.charCodeAt(i3 + 1)] << 4 | revLookup[b64.charCodeAt(i3 + 2)] >> 2;
              arr[curByte++] = tmp >> 8 & 255;
              arr[curByte++] = tmp & 255;
            }
            return arr;
          }
          function tripletToBase64(num) {
            return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
          }
          function encodeChunk(uint8, start, end) {
            var tmp;
            var output = [];
            for (var i3 = start; i3 < end; i3 += 3) {
              tmp = (uint8[i3] << 16 & 16711680) + (uint8[i3 + 1] << 8 & 65280) + (uint8[i3 + 2] & 255);
              output.push(tripletToBase64(tmp));
            }
            return output.join("");
          }
          function fromByteArray(uint8) {
            var tmp;
            var len2 = uint8.length;
            var extraBytes = len2 % 3;
            var parts = [];
            var maxChunkLength = 16383;
            for (var i3 = 0, len22 = len2 - extraBytes; i3 < len22; i3 += maxChunkLength) {
              parts.push(encodeChunk(
                uint8,
                i3,
                i3 + maxChunkLength > len22 ? len22 : i3 + maxChunkLength
              ));
            }
            if (extraBytes === 1) {
              tmp = uint8[len2 - 1];
              parts.push(
                lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
              );
            } else if (extraBytes === 2) {
              tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
              parts.push(
                lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
              );
            }
            return parts.join("");
          }
        }, {}],
        11: [function(require2, module2, exports2) {
        }, {}],
        12: [function(require2, module2, exports2) {
          (function(Buffer2) {
            var base64 = require2("base64-js");
            var ieee754 = require2("ieee754");
            exports2.Buffer = Buffer2;
            exports2.SlowBuffer = SlowBuffer;
            exports2.INSPECT_MAX_BYTES = 50;
            var K_MAX_LENGTH = 2147483647;
            exports2.kMaxLength = K_MAX_LENGTH;
            Buffer2.TYPED_ARRAY_SUPPORT = typedArraySupport();
            if (!Buffer2.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
              formatAppLog(
                "error",
                "at node_modules/mqtt/dist/mqtt.js:2757",
                "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
              );
            }
            function typedArraySupport() {
              try {
                var arr = new Uint8Array(1);
                arr.__proto__ = {
                  __proto__: Uint8Array.prototype,
                  foo: function() {
                    return 42;
                  }
                };
                return arr.foo() === 42;
              } catch (e2) {
                return false;
              }
            }
            Object.defineProperty(Buffer2.prototype, "parent", {
              enumerable: true,
              get: function() {
                if (!Buffer2.isBuffer(this))
                  return void 0;
                return this.buffer;
              }
            });
            Object.defineProperty(Buffer2.prototype, "offset", {
              enumerable: true,
              get: function() {
                if (!Buffer2.isBuffer(this))
                  return void 0;
                return this.byteOffset;
              }
            });
            function createBuffer(length) {
              if (length > K_MAX_LENGTH) {
                throw new RangeError('The value "' + length + '" is invalid for option "size"');
              }
              var buf = new Uint8Array(length);
              buf.__proto__ = Buffer2.prototype;
              return buf;
            }
            function Buffer2(arg, encodingOrOffset, length) {
              if (typeof arg === "number") {
                if (typeof encodingOrOffset === "string") {
                  throw new TypeError(
                    'The "string" argument must be of type string. Received type number'
                  );
                }
                return allocUnsafe(arg);
              }
              return from(arg, encodingOrOffset, length);
            }
            if (typeof Symbol !== "undefined" && Symbol.species != null && Buffer2[Symbol.species] === Buffer2) {
              Object.defineProperty(Buffer2, Symbol.species, {
                value: null,
                configurable: true,
                enumerable: false,
                writable: false
              });
            }
            Buffer2.poolSize = 8192;
            function from(value, encodingOrOffset, length) {
              if (typeof value === "string") {
                return fromString(value, encodingOrOffset);
              }
              if (ArrayBuffer.isView(value)) {
                return fromArrayLike(value);
              }
              if (value == null) {
                throw TypeError(
                  "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
                );
              }
              if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
                return fromArrayBuffer(value, encodingOrOffset, length);
              }
              if (typeof value === "number") {
                throw new TypeError(
                  'The "value" argument must not be of type number. Received type number'
                );
              }
              var valueOf = value.valueOf && value.valueOf();
              if (valueOf != null && valueOf !== value) {
                return Buffer2.from(valueOf, encodingOrOffset, length);
              }
              var b2 = fromObject(value);
              if (b2)
                return b2;
              if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
                return Buffer2.from(
                  value[Symbol.toPrimitive]("string"),
                  encodingOrOffset,
                  length
                );
              }
              throw new TypeError(
                "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
              );
            }
            Buffer2.from = function(value, encodingOrOffset, length) {
              return from(value, encodingOrOffset, length);
            };
            Buffer2.prototype.__proto__ = Uint8Array.prototype;
            Buffer2.__proto__ = Uint8Array;
            function assertSize(size) {
              if (typeof size !== "number") {
                throw new TypeError('"size" argument must be of type number');
              } else if (size < 0) {
                throw new RangeError('The value "' + size + '" is invalid for option "size"');
              }
            }
            function alloc(size, fill, encoding) {
              assertSize(size);
              if (size <= 0) {
                return createBuffer(size);
              }
              if (fill !== void 0) {
                return typeof encoding === "string" ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
              }
              return createBuffer(size);
            }
            Buffer2.alloc = function(size, fill, encoding) {
              return alloc(size, fill, encoding);
            };
            function allocUnsafe(size) {
              assertSize(size);
              return createBuffer(size < 0 ? 0 : checked(size) | 0);
            }
            Buffer2.allocUnsafe = function(size) {
              return allocUnsafe(size);
            };
            Buffer2.allocUnsafeSlow = function(size) {
              return allocUnsafe(size);
            };
            function fromString(string, encoding) {
              if (typeof encoding !== "string" || encoding === "") {
                encoding = "utf8";
              }
              if (!Buffer2.isEncoding(encoding)) {
                throw new TypeError("Unknown encoding: " + encoding);
              }
              var length = byteLength(string, encoding) | 0;
              var buf = createBuffer(length);
              var actual = buf.write(string, encoding);
              if (actual !== length) {
                buf = buf.slice(0, actual);
              }
              return buf;
            }
            function fromArrayLike(array) {
              var length = array.length < 0 ? 0 : checked(array.length) | 0;
              var buf = createBuffer(length);
              for (var i2 = 0; i2 < length; i2 += 1) {
                buf[i2] = array[i2] & 255;
              }
              return buf;
            }
            function fromArrayBuffer(array, byteOffset, length) {
              if (byteOffset < 0 || array.byteLength < byteOffset) {
                throw new RangeError('"offset" is outside of buffer bounds');
              }
              if (array.byteLength < byteOffset + (length || 0)) {
                throw new RangeError('"length" is outside of buffer bounds');
              }
              var buf;
              if (byteOffset === void 0 && length === void 0) {
                buf = new Uint8Array(array);
              } else if (length === void 0) {
                buf = new Uint8Array(array, byteOffset);
              } else {
                buf = new Uint8Array(array, byteOffset, length);
              }
              buf.__proto__ = Buffer2.prototype;
              return buf;
            }
            function fromObject(obj) {
              if (Buffer2.isBuffer(obj)) {
                var len = checked(obj.length) | 0;
                var buf = createBuffer(len);
                if (buf.length === 0) {
                  return buf;
                }
                obj.copy(buf, 0, 0, len);
                return buf;
              }
              if (obj.length !== void 0) {
                if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
                  return createBuffer(0);
                }
                return fromArrayLike(obj);
              }
              if (obj.type === "Buffer" && Array.isArray(obj.data)) {
                return fromArrayLike(obj.data);
              }
            }
            function checked(length) {
              if (length >= K_MAX_LENGTH) {
                throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
              }
              return length | 0;
            }
            function SlowBuffer(length) {
              if (+length != length) {
                length = 0;
              }
              return Buffer2.alloc(+length);
            }
            Buffer2.isBuffer = function isBuffer(b2) {
              return b2 != null && b2._isBuffer === true && b2 !== Buffer2.prototype;
            };
            Buffer2.compare = function compare(a2, b2) {
              if (isInstance(a2, Uint8Array))
                a2 = Buffer2.from(a2, a2.offset, a2.byteLength);
              if (isInstance(b2, Uint8Array))
                b2 = Buffer2.from(b2, b2.offset, b2.byteLength);
              if (!Buffer2.isBuffer(a2) || !Buffer2.isBuffer(b2)) {
                throw new TypeError(
                  'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
                );
              }
              if (a2 === b2)
                return 0;
              var x2 = a2.length;
              var y2 = b2.length;
              for (var i2 = 0, len = Math.min(x2, y2); i2 < len; ++i2) {
                if (a2[i2] !== b2[i2]) {
                  x2 = a2[i2];
                  y2 = b2[i2];
                  break;
                }
              }
              if (x2 < y2)
                return -1;
              if (y2 < x2)
                return 1;
              return 0;
            };
            Buffer2.isEncoding = function isEncoding(encoding) {
              switch (String(encoding).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            };
            Buffer2.concat = function concat(list, length) {
              if (!Array.isArray(list)) {
                throw new TypeError('"list" argument must be an Array of Buffers');
              }
              if (list.length === 0) {
                return Buffer2.alloc(0);
              }
              var i2;
              if (length === void 0) {
                length = 0;
                for (i2 = 0; i2 < list.length; ++i2) {
                  length += list[i2].length;
                }
              }
              var buffer = Buffer2.allocUnsafe(length);
              var pos = 0;
              for (i2 = 0; i2 < list.length; ++i2) {
                var buf = list[i2];
                if (isInstance(buf, Uint8Array)) {
                  buf = Buffer2.from(buf);
                }
                if (!Buffer2.isBuffer(buf)) {
                  throw new TypeError('"list" argument must be an Array of Buffers');
                }
                buf.copy(buffer, pos);
                pos += buf.length;
              }
              return buffer;
            };
            function byteLength(string, encoding) {
              if (Buffer2.isBuffer(string)) {
                return string.length;
              }
              if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
                return string.byteLength;
              }
              if (typeof string !== "string") {
                throw new TypeError(
                  'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string
                );
              }
              var len = string.length;
              var mustMatch = arguments.length > 2 && arguments[2] === true;
              if (!mustMatch && len === 0)
                return 0;
              var loweredCase = false;
              for (; ; ) {
                switch (encoding) {
                  case "ascii":
                  case "latin1":
                  case "binary":
                    return len;
                  case "utf8":
                  case "utf-8":
                    return utf8ToBytes(string).length;
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return len * 2;
                  case "hex":
                    return len >>> 1;
                  case "base64":
                    return base64ToBytes(string).length;
                  default:
                    if (loweredCase) {
                      return mustMatch ? -1 : utf8ToBytes(string).length;
                    }
                    encoding = ("" + encoding).toLowerCase();
                    loweredCase = true;
                }
              }
            }
            Buffer2.byteLength = byteLength;
            function slowToString(encoding, start, end) {
              var loweredCase = false;
              if (start === void 0 || start < 0) {
                start = 0;
              }
              if (start > this.length) {
                return "";
              }
              if (end === void 0 || end > this.length) {
                end = this.length;
              }
              if (end <= 0) {
                return "";
              }
              end >>>= 0;
              start >>>= 0;
              if (end <= start) {
                return "";
              }
              if (!encoding)
                encoding = "utf8";
              while (true) {
                switch (encoding) {
                  case "hex":
                    return hexSlice(this, start, end);
                  case "utf8":
                  case "utf-8":
                    return utf8Slice(this, start, end);
                  case "ascii":
                    return asciiSlice(this, start, end);
                  case "latin1":
                  case "binary":
                    return latin1Slice(this, start, end);
                  case "base64":
                    return base64Slice(this, start, end);
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return utf16leSlice(this, start, end);
                  default:
                    if (loweredCase)
                      throw new TypeError("Unknown encoding: " + encoding);
                    encoding = (encoding + "").toLowerCase();
                    loweredCase = true;
                }
              }
            }
            Buffer2.prototype._isBuffer = true;
            function swap(b2, n2, m2) {
              var i2 = b2[n2];
              b2[n2] = b2[m2];
              b2[m2] = i2;
            }
            Buffer2.prototype.swap16 = function swap16() {
              var len = this.length;
              if (len % 2 !== 0) {
                throw new RangeError("Buffer size must be a multiple of 16-bits");
              }
              for (var i2 = 0; i2 < len; i2 += 2) {
                swap(this, i2, i2 + 1);
              }
              return this;
            };
            Buffer2.prototype.swap32 = function swap32() {
              var len = this.length;
              if (len % 4 !== 0) {
                throw new RangeError("Buffer size must be a multiple of 32-bits");
              }
              for (var i2 = 0; i2 < len; i2 += 4) {
                swap(this, i2, i2 + 3);
                swap(this, i2 + 1, i2 + 2);
              }
              return this;
            };
            Buffer2.prototype.swap64 = function swap64() {
              var len = this.length;
              if (len % 8 !== 0) {
                throw new RangeError("Buffer size must be a multiple of 64-bits");
              }
              for (var i2 = 0; i2 < len; i2 += 8) {
                swap(this, i2, i2 + 7);
                swap(this, i2 + 1, i2 + 6);
                swap(this, i2 + 2, i2 + 5);
                swap(this, i2 + 3, i2 + 4);
              }
              return this;
            };
            Buffer2.prototype.toString = function toString() {
              var length = this.length;
              if (length === 0)
                return "";
              if (arguments.length === 0)
                return utf8Slice(this, 0, length);
              return slowToString.apply(this, arguments);
            };
            Buffer2.prototype.toLocaleString = Buffer2.prototype.toString;
            Buffer2.prototype.equals = function equals(b2) {
              if (!Buffer2.isBuffer(b2))
                throw new TypeError("Argument must be a Buffer");
              if (this === b2)
                return true;
              return Buffer2.compare(this, b2) === 0;
            };
            Buffer2.prototype.inspect = function inspect() {
              var str = "";
              var max = exports2.INSPECT_MAX_BYTES;
              str = this.toString("hex", 0, max).replace(/(.{2})/g, "$1 ").trim();
              if (this.length > max)
                str += " ... ";
              return "<Buffer " + str + ">";
            };
            Buffer2.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
              if (isInstance(target, Uint8Array)) {
                target = Buffer2.from(target, target.offset, target.byteLength);
              }
              if (!Buffer2.isBuffer(target)) {
                throw new TypeError(
                  'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
                );
              }
              if (start === void 0) {
                start = 0;
              }
              if (end === void 0) {
                end = target ? target.length : 0;
              }
              if (thisStart === void 0) {
                thisStart = 0;
              }
              if (thisEnd === void 0) {
                thisEnd = this.length;
              }
              if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
                throw new RangeError("out of range index");
              }
              if (thisStart >= thisEnd && start >= end) {
                return 0;
              }
              if (thisStart >= thisEnd) {
                return -1;
              }
              if (start >= end) {
                return 1;
              }
              start >>>= 0;
              end >>>= 0;
              thisStart >>>= 0;
              thisEnd >>>= 0;
              if (this === target)
                return 0;
              var x2 = thisEnd - thisStart;
              var y2 = end - start;
              var len = Math.min(x2, y2);
              var thisCopy = this.slice(thisStart, thisEnd);
              var targetCopy = target.slice(start, end);
              for (var i2 = 0; i2 < len; ++i2) {
                if (thisCopy[i2] !== targetCopy[i2]) {
                  x2 = thisCopy[i2];
                  y2 = targetCopy[i2];
                  break;
                }
              }
              if (x2 < y2)
                return -1;
              if (y2 < x2)
                return 1;
              return 0;
            };
            function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
              if (buffer.length === 0)
                return -1;
              if (typeof byteOffset === "string") {
                encoding = byteOffset;
                byteOffset = 0;
              } else if (byteOffset > 2147483647) {
                byteOffset = 2147483647;
              } else if (byteOffset < -2147483648) {
                byteOffset = -2147483648;
              }
              byteOffset = +byteOffset;
              if (numberIsNaN(byteOffset)) {
                byteOffset = dir ? 0 : buffer.length - 1;
              }
              if (byteOffset < 0)
                byteOffset = buffer.length + byteOffset;
              if (byteOffset >= buffer.length) {
                if (dir)
                  return -1;
                else
                  byteOffset = buffer.length - 1;
              } else if (byteOffset < 0) {
                if (dir)
                  byteOffset = 0;
                else
                  return -1;
              }
              if (typeof val === "string") {
                val = Buffer2.from(val, encoding);
              }
              if (Buffer2.isBuffer(val)) {
                if (val.length === 0) {
                  return -1;
                }
                return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
              } else if (typeof val === "number") {
                val = val & 255;
                if (typeof Uint8Array.prototype.indexOf === "function") {
                  if (dir) {
                    return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
                  } else {
                    return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
                  }
                }
                return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
              }
              throw new TypeError("val must be string, number or Buffer");
            }
            function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
              var indexSize = 1;
              var arrLength = arr.length;
              var valLength = val.length;
              if (encoding !== void 0) {
                encoding = String(encoding).toLowerCase();
                if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
                  if (arr.length < 2 || val.length < 2) {
                    return -1;
                  }
                  indexSize = 2;
                  arrLength /= 2;
                  valLength /= 2;
                  byteOffset /= 2;
                }
              }
              function read(buf, i3) {
                if (indexSize === 1) {
                  return buf[i3];
                } else {
                  return buf.readUInt16BE(i3 * indexSize);
                }
              }
              var i2;
              if (dir) {
                var foundIndex = -1;
                for (i2 = byteOffset; i2 < arrLength; i2++) {
                  if (read(arr, i2) === read(val, foundIndex === -1 ? 0 : i2 - foundIndex)) {
                    if (foundIndex === -1)
                      foundIndex = i2;
                    if (i2 - foundIndex + 1 === valLength)
                      return foundIndex * indexSize;
                  } else {
                    if (foundIndex !== -1)
                      i2 -= i2 - foundIndex;
                    foundIndex = -1;
                  }
                }
              } else {
                if (byteOffset + valLength > arrLength)
                  byteOffset = arrLength - valLength;
                for (i2 = byteOffset; i2 >= 0; i2--) {
                  var found = true;
                  for (var j2 = 0; j2 < valLength; j2++) {
                    if (read(arr, i2 + j2) !== read(val, j2)) {
                      found = false;
                      break;
                    }
                  }
                  if (found)
                    return i2;
                }
              }
              return -1;
            }
            Buffer2.prototype.includes = function includes(val, byteOffset, encoding) {
              return this.indexOf(val, byteOffset, encoding) !== -1;
            };
            Buffer2.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
              return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
            };
            Buffer2.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
              return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
            };
            function hexWrite(buf, string, offset, length) {
              offset = Number(offset) || 0;
              var remaining = buf.length - offset;
              if (!length) {
                length = remaining;
              } else {
                length = Number(length);
                if (length > remaining) {
                  length = remaining;
                }
              }
              var strLen = string.length;
              if (length > strLen / 2) {
                length = strLen / 2;
              }
              for (var i2 = 0; i2 < length; ++i2) {
                var parsed = parseInt(string.substr(i2 * 2, 2), 16);
                if (numberIsNaN(parsed))
                  return i2;
                buf[offset + i2] = parsed;
              }
              return i2;
            }
            function utf8Write(buf, string, offset, length) {
              return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
            }
            function asciiWrite(buf, string, offset, length) {
              return blitBuffer(asciiToBytes(string), buf, offset, length);
            }
            function latin1Write(buf, string, offset, length) {
              return asciiWrite(buf, string, offset, length);
            }
            function base64Write(buf, string, offset, length) {
              return blitBuffer(base64ToBytes(string), buf, offset, length);
            }
            function ucs2Write(buf, string, offset, length) {
              return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
            }
            Buffer2.prototype.write = function write(string, offset, length, encoding) {
              if (offset === void 0) {
                encoding = "utf8";
                length = this.length;
                offset = 0;
              } else if (length === void 0 && typeof offset === "string") {
                encoding = offset;
                length = this.length;
                offset = 0;
              } else if (isFinite(offset)) {
                offset = offset >>> 0;
                if (isFinite(length)) {
                  length = length >>> 0;
                  if (encoding === void 0)
                    encoding = "utf8";
                } else {
                  encoding = length;
                  length = void 0;
                }
              } else {
                throw new Error(
                  "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                );
              }
              var remaining = this.length - offset;
              if (length === void 0 || length > remaining)
                length = remaining;
              if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
                throw new RangeError("Attempt to write outside buffer bounds");
              }
              if (!encoding)
                encoding = "utf8";
              var loweredCase = false;
              for (; ; ) {
                switch (encoding) {
                  case "hex":
                    return hexWrite(this, string, offset, length);
                  case "utf8":
                  case "utf-8":
                    return utf8Write(this, string, offset, length);
                  case "ascii":
                    return asciiWrite(this, string, offset, length);
                  case "latin1":
                  case "binary":
                    return latin1Write(this, string, offset, length);
                  case "base64":
                    return base64Write(this, string, offset, length);
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return ucs2Write(this, string, offset, length);
                  default:
                    if (loweredCase)
                      throw new TypeError("Unknown encoding: " + encoding);
                    encoding = ("" + encoding).toLowerCase();
                    loweredCase = true;
                }
              }
            };
            Buffer2.prototype.toJSON = function toJSON() {
              return {
                type: "Buffer",
                data: Array.prototype.slice.call(this._arr || this, 0)
              };
            };
            function base64Slice(buf, start, end) {
              if (start === 0 && end === buf.length) {
                return base64.fromByteArray(buf);
              } else {
                return base64.fromByteArray(buf.slice(start, end));
              }
            }
            function utf8Slice(buf, start, end) {
              end = Math.min(buf.length, end);
              var res = [];
              var i2 = start;
              while (i2 < end) {
                var firstByte = buf[i2];
                var codePoint = null;
                var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
                if (i2 + bytesPerSequence <= end) {
                  var secondByte, thirdByte, fourthByte, tempCodePoint;
                  switch (bytesPerSequence) {
                    case 1:
                      if (firstByte < 128) {
                        codePoint = firstByte;
                      }
                      break;
                    case 2:
                      secondByte = buf[i2 + 1];
                      if ((secondByte & 192) === 128) {
                        tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                        if (tempCodePoint > 127) {
                          codePoint = tempCodePoint;
                        }
                      }
                      break;
                    case 3:
                      secondByte = buf[i2 + 1];
                      thirdByte = buf[i2 + 2];
                      if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                        if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                          codePoint = tempCodePoint;
                        }
                      }
                      break;
                    case 4:
                      secondByte = buf[i2 + 1];
                      thirdByte = buf[i2 + 2];
                      fourthByte = buf[i2 + 3];
                      if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                        if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                          codePoint = tempCodePoint;
                        }
                      }
                  }
                }
                if (codePoint === null) {
                  codePoint = 65533;
                  bytesPerSequence = 1;
                } else if (codePoint > 65535) {
                  codePoint -= 65536;
                  res.push(codePoint >>> 10 & 1023 | 55296);
                  codePoint = 56320 | codePoint & 1023;
                }
                res.push(codePoint);
                i2 += bytesPerSequence;
              }
              return decodeCodePointsArray(res);
            }
            var MAX_ARGUMENTS_LENGTH = 4096;
            function decodeCodePointsArray(codePoints) {
              var len = codePoints.length;
              if (len <= MAX_ARGUMENTS_LENGTH) {
                return String.fromCharCode.apply(String, codePoints);
              }
              var res = "";
              var i2 = 0;
              while (i2 < len) {
                res += String.fromCharCode.apply(
                  String,
                  codePoints.slice(i2, i2 += MAX_ARGUMENTS_LENGTH)
                );
              }
              return res;
            }
            function asciiSlice(buf, start, end) {
              var ret = "";
              end = Math.min(buf.length, end);
              for (var i2 = start; i2 < end; ++i2) {
                ret += String.fromCharCode(buf[i2] & 127);
              }
              return ret;
            }
            function latin1Slice(buf, start, end) {
              var ret = "";
              end = Math.min(buf.length, end);
              for (var i2 = start; i2 < end; ++i2) {
                ret += String.fromCharCode(buf[i2]);
              }
              return ret;
            }
            function hexSlice(buf, start, end) {
              var len = buf.length;
              if (!start || start < 0)
                start = 0;
              if (!end || end < 0 || end > len)
                end = len;
              var out = "";
              for (var i2 = start; i2 < end; ++i2) {
                out += toHex(buf[i2]);
              }
              return out;
            }
            function utf16leSlice(buf, start, end) {
              var bytes = buf.slice(start, end);
              var res = "";
              for (var i2 = 0; i2 < bytes.length; i2 += 2) {
                res += String.fromCharCode(bytes[i2] + bytes[i2 + 1] * 256);
              }
              return res;
            }
            Buffer2.prototype.slice = function slice(start, end) {
              var len = this.length;
              start = ~~start;
              end = end === void 0 ? len : ~~end;
              if (start < 0) {
                start += len;
                if (start < 0)
                  start = 0;
              } else if (start > len) {
                start = len;
              }
              if (end < 0) {
                end += len;
                if (end < 0)
                  end = 0;
              } else if (end > len) {
                end = len;
              }
              if (end < start)
                end = start;
              var newBuf = this.subarray(start, end);
              newBuf.__proto__ = Buffer2.prototype;
              return newBuf;
            };
            function checkOffset(offset, ext, length) {
              if (offset % 1 !== 0 || offset < 0)
                throw new RangeError("offset is not uint");
              if (offset + ext > length)
                throw new RangeError("Trying to access beyond buffer length");
            }
            Buffer2.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert)
                checkOffset(offset, byteLength2, this.length);
              var val = this[offset];
              var mul = 1;
              var i2 = 0;
              while (++i2 < byteLength2 && (mul *= 256)) {
                val += this[offset + i2] * mul;
              }
              return val;
            };
            Buffer2.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert) {
                checkOffset(offset, byteLength2, this.length);
              }
              var val = this[offset + --byteLength2];
              var mul = 1;
              while (byteLength2 > 0 && (mul *= 256)) {
                val += this[offset + --byteLength2] * mul;
              }
              return val;
            };
            Buffer2.prototype.readUInt8 = function readUInt8(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 1, this.length);
              return this[offset];
            };
            Buffer2.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 2, this.length);
              return this[offset] | this[offset + 1] << 8;
            };
            Buffer2.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 2, this.length);
              return this[offset] << 8 | this[offset + 1];
            };
            Buffer2.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
            };
            Buffer2.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
            };
            Buffer2.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert)
                checkOffset(offset, byteLength2, this.length);
              var val = this[offset];
              var mul = 1;
              var i2 = 0;
              while (++i2 < byteLength2 && (mul *= 256)) {
                val += this[offset + i2] * mul;
              }
              mul *= 128;
              if (val >= mul)
                val -= Math.pow(2, 8 * byteLength2);
              return val;
            };
            Buffer2.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert)
                checkOffset(offset, byteLength2, this.length);
              var i2 = byteLength2;
              var mul = 1;
              var val = this[offset + --i2];
              while (i2 > 0 && (mul *= 256)) {
                val += this[offset + --i2] * mul;
              }
              mul *= 128;
              if (val >= mul)
                val -= Math.pow(2, 8 * byteLength2);
              return val;
            };
            Buffer2.prototype.readInt8 = function readInt8(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 1, this.length);
              if (!(this[offset] & 128))
                return this[offset];
              return (255 - this[offset] + 1) * -1;
            };
            Buffer2.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 2, this.length);
              var val = this[offset] | this[offset + 1] << 8;
              return val & 32768 ? val | 4294901760 : val;
            };
            Buffer2.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 2, this.length);
              var val = this[offset + 1] | this[offset] << 8;
              return val & 32768 ? val | 4294901760 : val;
            };
            Buffer2.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
            };
            Buffer2.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
            };
            Buffer2.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return ieee754.read(this, offset, true, 23, 4);
            };
            Buffer2.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 4, this.length);
              return ieee754.read(this, offset, false, 23, 4);
            };
            Buffer2.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 8, this.length);
              return ieee754.read(this, offset, true, 52, 8);
            };
            Buffer2.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
              offset = offset >>> 0;
              if (!noAssert)
                checkOffset(offset, 8, this.length);
              return ieee754.read(this, offset, false, 52, 8);
            };
            function checkInt(buf, value, offset, ext, max, min) {
              if (!Buffer2.isBuffer(buf))
                throw new TypeError('"buffer" argument must be a Buffer instance');
              if (value > max || value < min)
                throw new RangeError('"value" argument is out of bounds');
              if (offset + ext > buf.length)
                throw new RangeError("Index out of range");
            }
            Buffer2.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
              value = +value;
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
                checkInt(this, value, offset, byteLength2, maxBytes, 0);
              }
              var mul = 1;
              var i2 = 0;
              this[offset] = value & 255;
              while (++i2 < byteLength2 && (mul *= 256)) {
                this[offset + i2] = value / mul & 255;
              }
              return offset + byteLength2;
            };
            Buffer2.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
              value = +value;
              offset = offset >>> 0;
              byteLength2 = byteLength2 >>> 0;
              if (!noAssert) {
                var maxBytes = Math.pow(2, 8 * byteLength2) - 1;
                checkInt(this, value, offset, byteLength2, maxBytes, 0);
              }
              var i2 = byteLength2 - 1;
              var mul = 1;
              this[offset + i2] = value & 255;
              while (--i2 >= 0 && (mul *= 256)) {
                this[offset + i2] = value / mul & 255;
              }
              return offset + byteLength2;
            };
            Buffer2.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 1, 255, 0);
              this[offset] = value & 255;
              return offset + 1;
            };
            Buffer2.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 2, 65535, 0);
              this[offset] = value & 255;
              this[offset + 1] = value >>> 8;
              return offset + 2;
            };
            Buffer2.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 2, 65535, 0);
              this[offset] = value >>> 8;
              this[offset + 1] = value & 255;
              return offset + 2;
            };
            Buffer2.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 4294967295, 0);
              this[offset + 3] = value >>> 24;
              this[offset + 2] = value >>> 16;
              this[offset + 1] = value >>> 8;
              this[offset] = value & 255;
              return offset + 4;
            };
            Buffer2.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 4294967295, 0);
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 255;
              return offset + 4;
            };
            Buffer2.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength2 - 1);
                checkInt(this, value, offset, byteLength2, limit - 1, -limit);
              }
              var i2 = 0;
              var mul = 1;
              var sub = 0;
              this[offset] = value & 255;
              while (++i2 < byteLength2 && (mul *= 256)) {
                if (value < 0 && sub === 0 && this[offset + i2 - 1] !== 0) {
                  sub = 1;
                }
                this[offset + i2] = (value / mul >> 0) - sub & 255;
              }
              return offset + byteLength2;
            };
            Buffer2.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert) {
                var limit = Math.pow(2, 8 * byteLength2 - 1);
                checkInt(this, value, offset, byteLength2, limit - 1, -limit);
              }
              var i2 = byteLength2 - 1;
              var mul = 1;
              var sub = 0;
              this[offset + i2] = value & 255;
              while (--i2 >= 0 && (mul *= 256)) {
                if (value < 0 && sub === 0 && this[offset + i2 + 1] !== 0) {
                  sub = 1;
                }
                this[offset + i2] = (value / mul >> 0) - sub & 255;
              }
              return offset + byteLength2;
            };
            Buffer2.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 1, 127, -128);
              if (value < 0)
                value = 255 + value + 1;
              this[offset] = value & 255;
              return offset + 1;
            };
            Buffer2.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 2, 32767, -32768);
              this[offset] = value & 255;
              this[offset + 1] = value >>> 8;
              return offset + 2;
            };
            Buffer2.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 2, 32767, -32768);
              this[offset] = value >>> 8;
              this[offset + 1] = value & 255;
              return offset + 2;
            };
            Buffer2.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 2147483647, -2147483648);
              this[offset] = value & 255;
              this[offset + 1] = value >>> 8;
              this[offset + 2] = value >>> 16;
              this[offset + 3] = value >>> 24;
              return offset + 4;
            };
            Buffer2.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert)
                checkInt(this, value, offset, 4, 2147483647, -2147483648);
              if (value < 0)
                value = 4294967295 + value + 1;
              this[offset] = value >>> 24;
              this[offset + 1] = value >>> 16;
              this[offset + 2] = value >>> 8;
              this[offset + 3] = value & 255;
              return offset + 4;
            };
            function checkIEEE754(buf, value, offset, ext, max, min) {
              if (offset + ext > buf.length)
                throw new RangeError("Index out of range");
              if (offset < 0)
                throw new RangeError("Index out of range");
            }
            function writeFloat(buf, value, offset, littleEndian, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert) {
                checkIEEE754(buf, value, offset, 4);
              }
              ieee754.write(buf, value, offset, littleEndian, 23, 4);
              return offset + 4;
            }
            Buffer2.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
              return writeFloat(this, value, offset, true, noAssert);
            };
            Buffer2.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
              return writeFloat(this, value, offset, false, noAssert);
            };
            function writeDouble(buf, value, offset, littleEndian, noAssert) {
              value = +value;
              offset = offset >>> 0;
              if (!noAssert) {
                checkIEEE754(buf, value, offset, 8);
              }
              ieee754.write(buf, value, offset, littleEndian, 52, 8);
              return offset + 8;
            }
            Buffer2.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
              return writeDouble(this, value, offset, true, noAssert);
            };
            Buffer2.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
              return writeDouble(this, value, offset, false, noAssert);
            };
            Buffer2.prototype.copy = function copy(target, targetStart, start, end) {
              if (!Buffer2.isBuffer(target))
                throw new TypeError("argument should be a Buffer");
              if (!start)
                start = 0;
              if (!end && end !== 0)
                end = this.length;
              if (targetStart >= target.length)
                targetStart = target.length;
              if (!targetStart)
                targetStart = 0;
              if (end > 0 && end < start)
                end = start;
              if (end === start)
                return 0;
              if (target.length === 0 || this.length === 0)
                return 0;
              if (targetStart < 0) {
                throw new RangeError("targetStart out of bounds");
              }
              if (start < 0 || start >= this.length)
                throw new RangeError("Index out of range");
              if (end < 0)
                throw new RangeError("sourceEnd out of bounds");
              if (end > this.length)
                end = this.length;
              if (target.length - targetStart < end - start) {
                end = target.length - targetStart + start;
              }
              var len = end - start;
              if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
                this.copyWithin(targetStart, start, end);
              } else if (this === target && start < targetStart && targetStart < end) {
                for (var i2 = len - 1; i2 >= 0; --i2) {
                  target[i2 + targetStart] = this[i2 + start];
                }
              } else {
                Uint8Array.prototype.set.call(
                  target,
                  this.subarray(start, end),
                  targetStart
                );
              }
              return len;
            };
            Buffer2.prototype.fill = function fill(val, start, end, encoding) {
              if (typeof val === "string") {
                if (typeof start === "string") {
                  encoding = start;
                  start = 0;
                  end = this.length;
                } else if (typeof end === "string") {
                  encoding = end;
                  end = this.length;
                }
                if (encoding !== void 0 && typeof encoding !== "string") {
                  throw new TypeError("encoding must be a string");
                }
                if (typeof encoding === "string" && !Buffer2.isEncoding(encoding)) {
                  throw new TypeError("Unknown encoding: " + encoding);
                }
                if (val.length === 1) {
                  var code = val.charCodeAt(0);
                  if (encoding === "utf8" && code < 128 || encoding === "latin1") {
                    val = code;
                  }
                }
              } else if (typeof val === "number") {
                val = val & 255;
              }
              if (start < 0 || this.length < start || this.length < end) {
                throw new RangeError("Out of range index");
              }
              if (end <= start) {
                return this;
              }
              start = start >>> 0;
              end = end === void 0 ? this.length : end >>> 0;
              if (!val)
                val = 0;
              var i2;
              if (typeof val === "number") {
                for (i2 = start; i2 < end; ++i2) {
                  this[i2] = val;
                }
              } else {
                var bytes = Buffer2.isBuffer(val) ? val : Buffer2.from(val, encoding);
                var len = bytes.length;
                if (len === 0) {
                  throw new TypeError('The value "' + val + '" is invalid for argument "value"');
                }
                for (i2 = 0; i2 < end - start; ++i2) {
                  this[i2 + start] = bytes[i2 % len];
                }
              }
              return this;
            };
            var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
            function base64clean(str) {
              str = str.split("=")[0];
              str = str.trim().replace(INVALID_BASE64_RE, "");
              if (str.length < 2)
                return "";
              while (str.length % 4 !== 0) {
                str = str + "=";
              }
              return str;
            }
            function toHex(n2) {
              if (n2 < 16)
                return "0" + n2.toString(16);
              return n2.toString(16);
            }
            function utf8ToBytes(string, units) {
              units = units || Infinity;
              var codePoint;
              var length = string.length;
              var leadSurrogate = null;
              var bytes = [];
              for (var i2 = 0; i2 < length; ++i2) {
                codePoint = string.charCodeAt(i2);
                if (codePoint > 55295 && codePoint < 57344) {
                  if (!leadSurrogate) {
                    if (codePoint > 56319) {
                      if ((units -= 3) > -1)
                        bytes.push(239, 191, 189);
                      continue;
                    } else if (i2 + 1 === length) {
                      if ((units -= 3) > -1)
                        bytes.push(239, 191, 189);
                      continue;
                    }
                    leadSurrogate = codePoint;
                    continue;
                  }
                  if (codePoint < 56320) {
                    if ((units -= 3) > -1)
                      bytes.push(239, 191, 189);
                    leadSurrogate = codePoint;
                    continue;
                  }
                  codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
                } else if (leadSurrogate) {
                  if ((units -= 3) > -1)
                    bytes.push(239, 191, 189);
                }
                leadSurrogate = null;
                if (codePoint < 128) {
                  if ((units -= 1) < 0)
                    break;
                  bytes.push(codePoint);
                } else if (codePoint < 2048) {
                  if ((units -= 2) < 0)
                    break;
                  bytes.push(
                    codePoint >> 6 | 192,
                    codePoint & 63 | 128
                  );
                } else if (codePoint < 65536) {
                  if ((units -= 3) < 0)
                    break;
                  bytes.push(
                    codePoint >> 12 | 224,
                    codePoint >> 6 & 63 | 128,
                    codePoint & 63 | 128
                  );
                } else if (codePoint < 1114112) {
                  if ((units -= 4) < 0)
                    break;
                  bytes.push(
                    codePoint >> 18 | 240,
                    codePoint >> 12 & 63 | 128,
                    codePoint >> 6 & 63 | 128,
                    codePoint & 63 | 128
                  );
                } else {
                  throw new Error("Invalid code point");
                }
              }
              return bytes;
            }
            function asciiToBytes(str) {
              var byteArray = [];
              for (var i2 = 0; i2 < str.length; ++i2) {
                byteArray.push(str.charCodeAt(i2) & 255);
              }
              return byteArray;
            }
            function utf16leToBytes(str, units) {
              var c2, hi2, lo2;
              var byteArray = [];
              for (var i2 = 0; i2 < str.length; ++i2) {
                if ((units -= 2) < 0)
                  break;
                c2 = str.charCodeAt(i2);
                hi2 = c2 >> 8;
                lo2 = c2 % 256;
                byteArray.push(lo2);
                byteArray.push(hi2);
              }
              return byteArray;
            }
            function base64ToBytes(str) {
              return base64.toByteArray(base64clean(str));
            }
            function blitBuffer(src, dst, offset, length) {
              for (var i2 = 0; i2 < length; ++i2) {
                if (i2 + offset >= dst.length || i2 >= src.length)
                  break;
                dst[i2 + offset] = src[i2];
              }
              return i2;
            }
            function isInstance(obj, type) {
              return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
            }
            function numberIsNaN(obj) {
              return obj !== obj;
            }
          }).call(this, require2("buffer").Buffer);
        }, {
          "base64-js": 10,
          "buffer": 12,
          "ieee754": 87
        }],
        13: [function(require2, module2, exports2) {
          (function(Buffer2) {
            function isArray(arg) {
              if (Array.isArray) {
                return Array.isArray(arg);
              }
              return objectToString(arg) === "[object Array]";
            }
            exports2.isArray = isArray;
            function isBoolean(arg) {
              return typeof arg === "boolean";
            }
            exports2.isBoolean = isBoolean;
            function isNull(arg) {
              return arg === null;
            }
            exports2.isNull = isNull;
            function isNullOrUndefined(arg) {
              return arg == null;
            }
            exports2.isNullOrUndefined = isNullOrUndefined;
            function isNumber(arg) {
              return typeof arg === "number";
            }
            exports2.isNumber = isNumber;
            function isString2(arg) {
              return typeof arg === "string";
            }
            exports2.isString = isString2;
            function isSymbol(arg) {
              return typeof arg === "symbol";
            }
            exports2.isSymbol = isSymbol;
            function isUndefined(arg) {
              return arg === void 0;
            }
            exports2.isUndefined = isUndefined;
            function isRegExp(re2) {
              return objectToString(re2) === "[object RegExp]";
            }
            exports2.isRegExp = isRegExp;
            function isObject(arg) {
              return typeof arg === "object" && arg !== null;
            }
            exports2.isObject = isObject;
            function isDate(d2) {
              return objectToString(d2) === "[object Date]";
            }
            exports2.isDate = isDate;
            function isError(e2) {
              return objectToString(e2) === "[object Error]" || e2 instanceof Error;
            }
            exports2.isError = isError;
            function isFunction(arg) {
              return typeof arg === "function";
            }
            exports2.isFunction = isFunction;
            function isPrimitive(arg) {
              return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || // ES6 symbol
              typeof arg === "undefined";
            }
            exports2.isPrimitive = isPrimitive;
            exports2.isBuffer = Buffer2.isBuffer;
            function objectToString(o2) {
              return Object.prototype.toString.call(o2);
            }
          }).call(this, {
            "isBuffer": require2("../../is-buffer/index.js")
          });
        }, {
          "../../is-buffer/index.js": 89
        }],
        14: [function(require2, module2, exports2) {
          var isValue = require2("type/value/is"), ensureValue = require2("type/value/ensure"), ensurePlainFunction = require2("type/plain-function/ensure"), copy = require2("es5-ext/object/copy"), normalizeOptions = require2("es5-ext/object/normalize-options"), map = require2("es5-ext/object/map");
          var bind = Function.prototype.bind, defineProperty = Object.defineProperty, hasOwnProperty2 = Object.prototype.hasOwnProperty, define;
          define = function(name, desc, options) {
            var value = ensureValue(desc) && ensurePlainFunction(desc.value), dgs;
            dgs = copy(desc);
            delete dgs.writable;
            delete dgs.value;
            dgs.get = function() {
              if (!options.overwriteDefinition && hasOwnProperty2.call(this, name))
                return value;
              desc.value = bind.call(value, options.resolveContext ? options.resolveContext(this) : this);
              defineProperty(this, name, desc);
              return this[name];
            };
            return dgs;
          };
          module2.exports = function(props) {
            var options = normalizeOptions(arguments[1]);
            if (isValue(options.resolveContext))
              ensurePlainFunction(options.resolveContext);
            return map(props, function(desc, name) {
              return define(name, desc, options);
            });
          };
        }, {
          "es5-ext/object/copy": 41,
          "es5-ext/object/map": 49,
          "es5-ext/object/normalize-options": 50,
          "type/plain-function/ensure": 126,
          "type/value/ensure": 130,
          "type/value/is": 131
        }],
        15: [function(require2, module2, exports2) {
          var isValue = require2("type/value/is"), isPlainFunction = require2("type/plain-function/is"), assign = require2("es5-ext/object/assign"), normalizeOpts = require2("es5-ext/object/normalize-options"), contains = require2("es5-ext/string/#/contains");
          var d2 = module2.exports = function(dscr, value) {
            var c2, e2, w2, options, desc;
            if (arguments.length < 2 || typeof dscr !== "string") {
              options = value;
              value = dscr;
              dscr = null;
            } else {
              options = arguments[2];
            }
            if (isValue(dscr)) {
              c2 = contains.call(dscr, "c");
              e2 = contains.call(dscr, "e");
              w2 = contains.call(dscr, "w");
            } else {
              c2 = w2 = true;
              e2 = false;
            }
            desc = {
              value,
              configurable: c2,
              enumerable: e2,
              writable: w2
            };
            return !options ? desc : assign(normalizeOpts(options), desc);
          };
          d2.gs = function(dscr, get, set) {
            var c2, e2, options, desc;
            if (typeof dscr !== "string") {
              options = set;
              set = get;
              get = dscr;
              dscr = null;
            } else {
              options = arguments[3];
            }
            if (!isValue(get)) {
              get = void 0;
            } else if (!isPlainFunction(get)) {
              options = get;
              get = set = void 0;
            } else if (!isValue(set)) {
              set = void 0;
            } else if (!isPlainFunction(set)) {
              options = set;
              set = void 0;
            }
            if (isValue(dscr)) {
              c2 = contains.call(dscr, "c");
              e2 = contains.call(dscr, "e");
            } else {
              c2 = true;
              e2 = false;
            }
            desc = {
              get,
              set,
              configurable: c2,
              enumerable: e2
            };
            return !options ? desc : assign(normalizeOpts(options), desc);
          };
        }, {
          "es5-ext/object/assign": 38,
          "es5-ext/object/normalize-options": 50,
          "es5-ext/string/#/contains": 57,
          "type/plain-function/is": 127,
          "type/value/is": 131
        }],
        16: [function(require2, module2, exports2) {
          var s2 = 1e3;
          var m2 = s2 * 60;
          var h2 = m2 * 60;
          var d2 = h2 * 24;
          var w2 = d2 * 7;
          var y2 = d2 * 365.25;
          module2.exports = function(val, options) {
            options = options || {};
            var type = typeof val;
            if (type === "string" && val.length > 0) {
              return parse(val);
            } else if (type === "number" && isFinite(val)) {
              return options.long ? fmtLong(val) : fmtShort(val);
            }
            throw new Error(
              "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
            );
          };
          function parse(str) {
            str = String(str);
            if (str.length > 100) {
              return;
            }
            var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
              str
            );
            if (!match) {
              return;
            }
            var n2 = parseFloat(match[1]);
            var type = (match[2] || "ms").toLowerCase();
            switch (type) {
              case "years":
              case "year":
              case "yrs":
              case "yr":
              case "y":
                return n2 * y2;
              case "weeks":
              case "week":
              case "w":
                return n2 * w2;
              case "days":
              case "day":
              case "d":
                return n2 * d2;
              case "hours":
              case "hour":
              case "hrs":
              case "hr":
              case "h":
                return n2 * h2;
              case "minutes":
              case "minute":
              case "mins":
              case "min":
              case "m":
                return n2 * m2;
              case "seconds":
              case "second":
              case "secs":
              case "sec":
              case "s":
                return n2 * s2;
              case "milliseconds":
              case "millisecond":
              case "msecs":
              case "msec":
              case "ms":
                return n2;
              default:
                return void 0;
            }
          }
          function fmtShort(ms2) {
            var msAbs = Math.abs(ms2);
            if (msAbs >= d2) {
              return Math.round(ms2 / d2) + "d";
            }
            if (msAbs >= h2) {
              return Math.round(ms2 / h2) + "h";
            }
            if (msAbs >= m2) {
              return Math.round(ms2 / m2) + "m";
            }
            if (msAbs >= s2) {
              return Math.round(ms2 / s2) + "s";
            }
            return ms2 + "ms";
          }
          function fmtLong(ms2) {
            var msAbs = Math.abs(ms2);
            if (msAbs >= d2) {
              return plural(ms2, msAbs, d2, "day");
            }
            if (msAbs >= h2) {
              return plural(ms2, msAbs, h2, "hour");
            }
            if (msAbs >= m2) {
              return plural(ms2, msAbs, m2, "minute");
            }
            if (msAbs >= s2) {
              return plural(ms2, msAbs, s2, "second");
            }
            return ms2 + " ms";
          }
          function plural(ms2, msAbs, n2, name) {
            var isPlural = msAbs >= n2 * 1.5;
            return Math.round(ms2 / n2) + " " + name + (isPlural ? "s" : "");
          }
        }, {}],
        17: [function(require2, module2, exports2) {
          (function(process) {
            exports2.log = log;
            exports2.formatArgs = formatArgs;
            exports2.save = save;
            exports2.load = load;
            exports2.useColors = useColors;
            exports2.storage = localstorage();
            exports2.colors = [
              "#0000CC",
              "#0000FF",
              "#0033CC",
              "#0033FF",
              "#0066CC",
              "#0066FF",
              "#0099CC",
              "#0099FF",
              "#00CC00",
              "#00CC33",
              "#00CC66",
              "#00CC99",
              "#00CCCC",
              "#00CCFF",
              "#3300CC",
              "#3300FF",
              "#3333CC",
              "#3333FF",
              "#3366CC",
              "#3366FF",
              "#3399CC",
              "#3399FF",
              "#33CC00",
              "#33CC33",
              "#33CC66",
              "#33CC99",
              "#33CCCC",
              "#33CCFF",
              "#6600CC",
              "#6600FF",
              "#6633CC",
              "#6633FF",
              "#66CC00",
              "#66CC33",
              "#9900CC",
              "#9900FF",
              "#9933CC",
              "#9933FF",
              "#99CC00",
              "#99CC33",
              "#CC0000",
              "#CC0033",
              "#CC0066",
              "#CC0099",
              "#CC00CC",
              "#CC00FF",
              "#CC3300",
              "#CC3333",
              "#CC3366",
              "#CC3399",
              "#CC33CC",
              "#CC33FF",
              "#CC6600",
              "#CC6633",
              "#CC9900",
              "#CC9933",
              "#CCCC00",
              "#CCCC33",
              "#FF0000",
              "#FF0033",
              "#FF0066",
              "#FF0099",
              "#FF00CC",
              "#FF00FF",
              "#FF3300",
              "#FF3333",
              "#FF3366",
              "#FF3399",
              "#FF33CC",
              "#FF33FF",
              "#FF6600",
              "#FF6633",
              "#FF9900",
              "#FF9933",
              "#FFCC00",
              "#FFCC33"
            ];
            function useColors() {
              if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
                return true;
              }
              if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
                return false;
              }
              return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
              typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
              // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
              typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
              typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
            }
            function formatArgs(args) {
              args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
              if (!this.useColors) {
                return;
              }
              const c2 = "color: " + this.color;
              args.splice(1, 0, c2, "color: inherit");
              let index2 = 0;
              let lastC = 0;
              args[0].replace(/%[a-zA-Z%]/g, (match) => {
                if (match === "%%") {
                  return;
                }
                index2++;
                if (match === "%c") {
                  lastC = index2;
                }
              });
              args.splice(lastC, 0, c2);
            }
            function log(...args) {
              return typeof console === "object" && console.log && formatAppLog("log", "at node_modules/mqtt/dist/mqtt.js:5112", ...args);
            }
            function save(namespaces) {
              try {
                if (namespaces) {
                  exports2.storage.setItem("debug", namespaces);
                } else {
                  exports2.storage.removeItem("debug");
                }
              } catch (error) {
              }
            }
            function load() {
              let r2;
              try {
                r2 = exports2.storage.getItem("debug");
              } catch (error) {
              }
              if (!r2 && typeof process !== "undefined" && "env" in process) {
                r2 = process.env.DEBUG;
              }
              return r2;
            }
            function localstorage() {
              try {
                return localStorage;
              } catch (error) {
              }
            }
            module2.exports = require2("./common")(exports2);
            const {
              formatters
            } = module2.exports;
            formatters.j = function(v2) {
              try {
                return JSON.stringify(v2);
              } catch (error) {
                return "[UnexpectedJSONParseError]: " + error.message;
              }
            };
          }).call(this, require2("_process"));
        }, {
          "./common": 18,
          "_process": 100
        }],
        18: [function(require2, module2, exports2) {
          function setup(env) {
            createDebug.debug = createDebug;
            createDebug.default = createDebug;
            createDebug.coerce = coerce;
            createDebug.disable = disable;
            createDebug.enable = enable;
            createDebug.enabled = enabled;
            createDebug.humanize = require2("ms");
            Object.keys(env).forEach((key) => {
              createDebug[key] = env[key];
            });
            createDebug.instances = [];
            createDebug.names = [];
            createDebug.skips = [];
            createDebug.formatters = {};
            function selectColor(namespace) {
              let hash = 0;
              for (let i2 = 0; i2 < namespace.length; i2++) {
                hash = (hash << 5) - hash + namespace.charCodeAt(i2);
                hash |= 0;
              }
              return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
            }
            createDebug.selectColor = selectColor;
            function createDebug(namespace) {
              let prevTime;
              function debug(...args) {
                if (!debug.enabled) {
                  return;
                }
                const self2 = debug;
                const curr = Number(/* @__PURE__ */ new Date());
                const ms2 = curr - (prevTime || curr);
                self2.diff = ms2;
                self2.prev = prevTime;
                self2.curr = curr;
                prevTime = curr;
                args[0] = createDebug.coerce(args[0]);
                if (typeof args[0] !== "string") {
                  args.unshift("%O");
                }
                let index2 = 0;
                args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
                  if (match === "%%") {
                    return match;
                  }
                  index2++;
                  const formatter = createDebug.formatters[format];
                  if (typeof formatter === "function") {
                    const val = args[index2];
                    match = formatter.call(self2, val);
                    args.splice(index2, 1);
                    index2--;
                  }
                  return match;
                });
                createDebug.formatArgs.call(self2, args);
                const logFn = self2.log || createDebug.log;
                logFn.apply(self2, args);
              }
              debug.namespace = namespace;
              debug.enabled = createDebug.enabled(namespace);
              debug.useColors = createDebug.useColors();
              debug.color = selectColor(namespace);
              debug.destroy = destroy;
              debug.extend = extend;
              if (typeof createDebug.init === "function") {
                createDebug.init(debug);
              }
              createDebug.instances.push(debug);
              return debug;
            }
            function destroy() {
              const index2 = createDebug.instances.indexOf(this);
              if (index2 !== -1) {
                createDebug.instances.splice(index2, 1);
                return true;
              }
              return false;
            }
            function extend(namespace, delimiter) {
              const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
              newDebug.log = this.log;
              return newDebug;
            }
            function enable(namespaces) {
              createDebug.save(namespaces);
              createDebug.names = [];
              createDebug.skips = [];
              let i2;
              const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
              const len = split.length;
              for (i2 = 0; i2 < len; i2++) {
                if (!split[i2]) {
                  continue;
                }
                namespaces = split[i2].replace(/\*/g, ".*?");
                if (namespaces[0] === "-") {
                  createDebug.skips.push(new RegExp("^" + namespaces.substr(1) + "$"));
                } else {
                  createDebug.names.push(new RegExp("^" + namespaces + "$"));
                }
              }
              for (i2 = 0; i2 < createDebug.instances.length; i2++) {
                const instance = createDebug.instances[i2];
                instance.enabled = createDebug.enabled(instance.namespace);
              }
            }
            function disable() {
              const namespaces = [
                ...createDebug.names.map(toNamespace),
                ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
              ].join(",");
              createDebug.enable("");
              return namespaces;
            }
            function enabled(name) {
              if (name[name.length - 1] === "*") {
                return true;
              }
              let i2;
              let len;
              for (i2 = 0, len = createDebug.skips.length; i2 < len; i2++) {
                if (createDebug.skips[i2].test(name)) {
                  return false;
                }
              }
              for (i2 = 0, len = createDebug.names.length; i2 < len; i2++) {
                if (createDebug.names[i2].test(name)) {
                  return true;
                }
              }
              return false;
            }
            function toNamespace(regexp) {
              return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
            }
            function coerce(val) {
              if (val instanceof Error) {
                return val.stack || val.message;
              }
              return val;
            }
            createDebug.enable(createDebug.load());
            return createDebug;
          }
          module2.exports = setup;
        }, {
          "ms": 16
        }],
        19: [function(require2, module2, exports2) {
          (function(process, Buffer2) {
            var stream = require2("readable-stream");
            var eos = require2("end-of-stream");
            var inherits = require2("inherits");
            var shift = require2("stream-shift");
            var SIGNAL_FLUSH = Buffer2.from && Buffer2.from !== Uint8Array.from ? Buffer2.from([0]) : new Buffer2([0]);
            var onuncork = function(self2, fn2) {
              if (self2._corked)
                self2.once("uncork", fn2);
              else
                fn2();
            };
            var autoDestroy = function(self2, err) {
              if (self2._autoDestroy)
                self2.destroy(err);
            };
            var destroyer = function(self2, end2) {
              return function(err) {
                if (err)
                  autoDestroy(self2, err.message === "premature close" ? null : err);
                else if (end2 && !self2._ended)
                  self2.end();
              };
            };
            var end = function(ws2, fn2) {
              if (!ws2)
                return fn2();
              if (ws2._writableState && ws2._writableState.finished)
                return fn2();
              if (ws2._writableState)
                return ws2.end(fn2);
              ws2.end();
              fn2();
            };
            var toStreams2 = function(rs2) {
              return new stream.Readable({
                objectMode: true,
                highWaterMark: 16
              }).wrap(rs2);
            };
            var Duplexify = function(writable, readable, opts) {
              if (!(this instanceof Duplexify))
                return new Duplexify(writable, readable, opts);
              stream.Duplex.call(this, opts);
              this._writable = null;
              this._readable = null;
              this._readable2 = null;
              this._autoDestroy = !opts || opts.autoDestroy !== false;
              this._forwardDestroy = !opts || opts.destroy !== false;
              this._forwardEnd = !opts || opts.end !== false;
              this._corked = 1;
              this._ondrain = null;
              this._drained = false;
              this._forwarding = false;
              this._unwrite = null;
              this._unread = null;
              this._ended = false;
              this.destroyed = false;
              if (writable)
                this.setWritable(writable);
              if (readable)
                this.setReadable(readable);
            };
            inherits(Duplexify, stream.Duplex);
            Duplexify.obj = function(writable, readable, opts) {
              if (!opts)
                opts = {};
              opts.objectMode = true;
              opts.highWaterMark = 16;
              return new Duplexify(writable, readable, opts);
            };
            Duplexify.prototype.cork = function() {
              if (++this._corked === 1)
                this.emit("cork");
            };
            Duplexify.prototype.uncork = function() {
              if (this._corked && --this._corked === 0)
                this.emit("uncork");
            };
            Duplexify.prototype.setWritable = function(writable) {
              if (this._unwrite)
                this._unwrite();
              if (this.destroyed) {
                if (writable && writable.destroy)
                  writable.destroy();
                return;
              }
              if (writable === null || writable === false) {
                this.end();
                return;
              }
              var self2 = this;
              var unend = eos(writable, {
                writable: true,
                readable: false
              }, destroyer(this, this._forwardEnd));
              var ondrain = function() {
                var ondrain2 = self2._ondrain;
                self2._ondrain = null;
                if (ondrain2)
                  ondrain2();
              };
              var clear = function() {
                self2._writable.removeListener("drain", ondrain);
                unend();
              };
              if (this._unwrite)
                process.nextTick(ondrain);
              this._writable = writable;
              this._writable.on("drain", ondrain);
              this._unwrite = clear;
              this.uncork();
            };
            Duplexify.prototype.setReadable = function(readable) {
              if (this._unread)
                this._unread();
              if (this.destroyed) {
                if (readable && readable.destroy)
                  readable.destroy();
                return;
              }
              if (readable === null || readable === false) {
                this.push(null);
                this.resume();
                return;
              }
              var self2 = this;
              var unend = eos(readable, {
                writable: false,
                readable: true
              }, destroyer(this));
              var onreadable = function() {
                self2._forward();
              };
              var onend = function() {
                self2.push(null);
              };
              var clear = function() {
                self2._readable2.removeListener("readable", onreadable);
                self2._readable2.removeListener("end", onend);
                unend();
              };
              this._drained = true;
              this._readable = readable;
              this._readable2 = readable._readableState ? readable : toStreams2(readable);
              this._readable2.on("readable", onreadable);
              this._readable2.on("end", onend);
              this._unread = clear;
              this._forward();
            };
            Duplexify.prototype._read = function() {
              this._drained = true;
              this._forward();
            };
            Duplexify.prototype._forward = function() {
              if (this._forwarding || !this._readable2 || !this._drained)
                return;
              this._forwarding = true;
              var data;
              while (this._drained && (data = shift(this._readable2)) !== null) {
                if (this.destroyed)
                  continue;
                this._drained = this.push(data);
              }
              this._forwarding = false;
            };
            Duplexify.prototype.destroy = function(err) {
              if (this.destroyed)
                return;
              this.destroyed = true;
              var self2 = this;
              process.nextTick(function() {
                self2._destroy(err);
              });
            };
            Duplexify.prototype._destroy = function(err) {
              if (err) {
                var ondrain = this._ondrain;
                this._ondrain = null;
                if (ondrain)
                  ondrain(err);
                else
                  this.emit("error", err);
              }
              if (this._forwardDestroy) {
                if (this._readable && this._readable.destroy)
                  this._readable.destroy();
                if (this._writable && this._writable.destroy)
                  this._writable.destroy();
              }
              this.emit("close");
            };
            Duplexify.prototype._write = function(data, enc, cb2) {
              if (this.destroyed)
                return cb2();
              if (this._corked)
                return onuncork(this, this._write.bind(this, data, enc, cb2));
              if (data === SIGNAL_FLUSH)
                return this._finish(cb2);
              if (!this._writable)
                return cb2();
              if (this._writable.write(data) === false)
                this._ondrain = cb2;
              else
                cb2();
            };
            Duplexify.prototype._finish = function(cb2) {
              var self2 = this;
              this.emit("preend");
              onuncork(this, function() {
                end(self2._forwardEnd && self2._writable, function() {
                  if (self2._writableState.prefinished === false)
                    self2._writableState.prefinished = true;
                  self2.emit("prefinish");
                  onuncork(self2, cb2);
                });
              });
            };
            Duplexify.prototype.end = function(data, enc, cb2) {
              if (typeof data === "function")
                return this.end(null, null, data);
              if (typeof enc === "function")
                return this.end(data, null, enc);
              this._ended = true;
              if (data)
                this.write(data);
              if (!this._writableState.ending)
                this.write(SIGNAL_FLUSH);
              return stream.Writable.prototype.end.call(this, cb2);
            };
            module2.exports = Duplexify;
          }).call(this, require2("_process"), require2("buffer").Buffer);
        }, {
          "_process": 100,
          "buffer": 12,
          "end-of-stream": 20,
          "inherits": 88,
          "readable-stream": 116,
          "stream-shift": 119
        }],
        20: [function(require2, module2, exports2) {
          var once = require2("once");
          var noop = function() {
          };
          var isRequest = function(stream) {
            return stream.setHeader && typeof stream.abort === "function";
          };
          var isChildProcess = function(stream) {
            return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3;
          };
          var eos = function(stream, opts, callback) {
            if (typeof opts === "function")
              return eos(stream, null, opts);
            if (!opts)
              opts = {};
            callback = once(callback || noop);
            var ws2 = stream._writableState;
            var rs2 = stream._readableState;
            var readable = opts.readable || opts.readable !== false && stream.readable;
            var writable = opts.writable || opts.writable !== false && stream.writable;
            var onlegacyfinish = function() {
              if (!stream.writable)
                onfinish();
            };
            var onfinish = function() {
              writable = false;
              if (!readable)
                callback.call(stream);
            };
            var onend = function() {
              readable = false;
              if (!writable)
                callback.call(stream);
            };
            var onexit = function(exitCode) {
              callback.call(stream, exitCode ? new Error("exited with error code: " + exitCode) : null);
            };
            var onerror = function(err) {
              callback.call(stream, err);
            };
            var onclose = function() {
              if (readable && !(rs2 && rs2.ended))
                return callback.call(stream, new Error("premature close"));
              if (writable && !(ws2 && ws2.ended))
                return callback.call(stream, new Error("premature close"));
            };
            var onrequest = function() {
              stream.req.on("finish", onfinish);
            };
            if (isRequest(stream)) {
              stream.on("complete", onfinish);
              stream.on("abort", onclose);
              if (stream.req)
                onrequest();
              else
                stream.on("request", onrequest);
            } else if (writable && !ws2) {
              stream.on("end", onlegacyfinish);
              stream.on("close", onlegacyfinish);
            }
            if (isChildProcess(stream))
              stream.on("exit", onexit);
            stream.on("end", onend);
            stream.on("finish", onfinish);
            if (opts.error !== false)
              stream.on("error", onerror);
            stream.on("close", onclose);
            return function() {
              stream.removeListener("complete", onfinish);
              stream.removeListener("abort", onclose);
              stream.removeListener("request", onrequest);
              if (stream.req)
                stream.req.removeListener("finish", onfinish);
              stream.removeListener("end", onlegacyfinish);
              stream.removeListener("close", onlegacyfinish);
              stream.removeListener("finish", onfinish);
              stream.removeListener("exit", onexit);
              stream.removeListener("end", onend);
              stream.removeListener("error", onerror);
              stream.removeListener("close", onclose);
            };
          };
          module2.exports = eos;
        }, {
          "once": 98
        }],
        21: [function(require2, module2, exports2) {
          var value = require2("../../object/valid-value");
          module2.exports = function() {
            value(this).length = 0;
            return this;
          };
        }, {
          "../../object/valid-value": 56
        }],
        22: [function(require2, module2, exports2) {
          var numberIsNaN = require2("../../number/is-nan"), toPosInt = require2("../../number/to-pos-integer"), value = require2("../../object/valid-value"), indexOf = Array.prototype.indexOf, objHasOwnProperty = Object.prototype.hasOwnProperty, abs = Math.abs, floor = Math.floor;
          module2.exports = function(searchElement) {
            var i2, length, fromIndex, val;
            if (!numberIsNaN(searchElement))
              return indexOf.apply(this, arguments);
            length = toPosInt(value(this).length);
            fromIndex = arguments[1];
            if (isNaN(fromIndex))
              fromIndex = 0;
            else if (fromIndex >= 0)
              fromIndex = floor(fromIndex);
            else
              fromIndex = toPosInt(this.length) - floor(abs(fromIndex));
            for (i2 = fromIndex; i2 < length; ++i2) {
              if (objHasOwnProperty.call(this, i2)) {
                val = this[i2];
                if (numberIsNaN(val))
                  return i2;
              }
            }
            return -1;
          };
        }, {
          "../../number/is-nan": 32,
          "../../number/to-pos-integer": 36,
          "../../object/valid-value": 56
        }],
        23: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Array.from : require2("./shim");
        }, {
          "./is-implemented": 24,
          "./shim": 25
        }],
        24: [function(require2, module2, exports2) {
          module2.exports = function() {
            var from = Array.from, arr, result;
            if (typeof from !== "function")
              return false;
            arr = ["raz", "dwa"];
            result = from(arr);
            return Boolean(result && result !== arr && result[1] === "dwa");
          };
        }, {}],
        25: [function(require2, module2, exports2) {
          var iteratorSymbol = require2("es6-symbol").iterator, isArguments = require2("../../function/is-arguments"), isFunction = require2("../../function/is-function"), toPosInt = require2("../../number/to-pos-integer"), callable = require2("../../object/valid-callable"), validValue = require2("../../object/valid-value"), isValue = require2("../../object/is-value"), isString2 = require2("../../string/is-string"), isArray = Array.isArray, call = Function.prototype.call, desc = {
            configurable: true,
            enumerable: true,
            writable: true,
            value: null
          }, defineProperty = Object.defineProperty;
          module2.exports = function(arrayLike) {
            var mapFn = arguments[1], thisArg = arguments[2], Context, i2, j2, arr, length, code, iterator, result, getIterator, value;
            arrayLike = Object(validValue(arrayLike));
            if (isValue(mapFn))
              callable(mapFn);
            if (!this || this === Array || !isFunction(this)) {
              if (!mapFn) {
                if (isArguments(arrayLike)) {
                  length = arrayLike.length;
                  if (length !== 1)
                    return Array.apply(null, arrayLike);
                  arr = new Array(1);
                  arr[0] = arrayLike[0];
                  return arr;
                }
                if (isArray(arrayLike)) {
                  arr = new Array(length = arrayLike.length);
                  for (i2 = 0; i2 < length; ++i2)
                    arr[i2] = arrayLike[i2];
                  return arr;
                }
              }
              arr = [];
            } else {
              Context = this;
            }
            if (!isArray(arrayLike)) {
              if ((getIterator = arrayLike[iteratorSymbol]) !== void 0) {
                iterator = callable(getIterator).call(arrayLike);
                if (Context)
                  arr = new Context();
                result = iterator.next();
                i2 = 0;
                while (!result.done) {
                  value = mapFn ? call.call(mapFn, thisArg, result.value, i2) : result.value;
                  if (Context) {
                    desc.value = value;
                    defineProperty(arr, i2, desc);
                  } else {
                    arr[i2] = value;
                  }
                  result = iterator.next();
                  ++i2;
                }
                length = i2;
              } else if (isString2(arrayLike)) {
                length = arrayLike.length;
                if (Context)
                  arr = new Context();
                for (i2 = 0, j2 = 0; i2 < length; ++i2) {
                  value = arrayLike[i2];
                  if (i2 + 1 < length) {
                    code = value.charCodeAt(0);
                    if (code >= 55296 && code <= 56319)
                      value += arrayLike[++i2];
                  }
                  value = mapFn ? call.call(mapFn, thisArg, value, j2) : value;
                  if (Context) {
                    desc.value = value;
                    defineProperty(arr, j2, desc);
                  } else {
                    arr[j2] = value;
                  }
                  ++j2;
                }
                length = j2;
              }
            }
            if (length === void 0) {
              length = toPosInt(arrayLike.length);
              if (Context)
                arr = new Context(length);
              for (i2 = 0; i2 < length; ++i2) {
                value = mapFn ? call.call(mapFn, thisArg, arrayLike[i2], i2) : arrayLike[i2];
                if (Context) {
                  desc.value = value;
                  defineProperty(arr, i2, desc);
                } else {
                  arr[i2] = value;
                }
              }
            }
            if (Context) {
              desc.value = null;
              arr.length = length;
            }
            return arr;
          };
        }, {
          "../../function/is-arguments": 26,
          "../../function/is-function": 27,
          "../../number/to-pos-integer": 36,
          "../../object/is-value": 45,
          "../../object/valid-callable": 55,
          "../../object/valid-value": 56,
          "../../string/is-string": 60,
          "es6-symbol": 74
        }],
        26: [function(require2, module2, exports2) {
          var objToString = Object.prototype.toString, id2 = objToString.call(function() {
            return arguments;
          }());
          module2.exports = function(value) {
            return objToString.call(value) === id2;
          };
        }, {}],
        27: [function(require2, module2, exports2) {
          var objToString = Object.prototype.toString, isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);
          module2.exports = function(value) {
            return typeof value === "function" && isFunctionStringTag(objToString.call(value));
          };
        }, {}],
        28: [function(require2, module2, exports2) {
          module2.exports = function() {
          };
        }, {}],
        29: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Math.sign : require2("./shim");
        }, {
          "./is-implemented": 30,
          "./shim": 31
        }],
        30: [function(require2, module2, exports2) {
          module2.exports = function() {
            var sign = Math.sign;
            if (typeof sign !== "function")
              return false;
            return sign(10) === 1 && sign(-20) === -1;
          };
        }, {}],
        31: [function(require2, module2, exports2) {
          module2.exports = function(value) {
            value = Number(value);
            if (isNaN(value) || value === 0)
              return value;
            return value > 0 ? 1 : -1;
          };
        }, {}],
        32: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Number.isNaN : require2("./shim");
        }, {
          "./is-implemented": 33,
          "./shim": 34
        }],
        33: [function(require2, module2, exports2) {
          module2.exports = function() {
            var numberIsNaN = Number.isNaN;
            if (typeof numberIsNaN !== "function")
              return false;
            return !numberIsNaN({}) && numberIsNaN(NaN) && !numberIsNaN(34);
          };
        }, {}],
        34: [function(require2, module2, exports2) {
          module2.exports = function(value) {
            return value !== value;
          };
        }, {}],
        35: [function(require2, module2, exports2) {
          var sign = require2("../math/sign"), abs = Math.abs, floor = Math.floor;
          module2.exports = function(value) {
            if (isNaN(value))
              return 0;
            value = Number(value);
            if (value === 0 || !isFinite(value))
              return value;
            return sign(value) * floor(abs(value));
          };
        }, {
          "../math/sign": 29
        }],
        36: [function(require2, module2, exports2) {
          var toInteger = require2("./to-integer"), max = Math.max;
          module2.exports = function(value) {
            return max(0, toInteger(value));
          };
        }, {
          "./to-integer": 35
        }],
        37: [function(require2, module2, exports2) {
          var callable = require2("./valid-callable"), value = require2("./valid-value"), bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys, objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;
          module2.exports = function(method, defVal) {
            return function(obj, cb2) {
              var list, thisArg = arguments[2], compareFn = arguments[3];
              obj = Object(value(obj));
              callable(cb2);
              list = keys(obj);
              if (compareFn) {
                list.sort(typeof compareFn === "function" ? bind.call(compareFn, obj) : void 0);
              }
              if (typeof method !== "function")
                method = list[method];
              return call.call(method, list, function(key, index2) {
                if (!objPropertyIsEnumerable.call(obj, key))
                  return defVal;
                return call.call(cb2, thisArg, obj[key], key, obj, index2);
              });
            };
          };
        }, {
          "./valid-callable": 55,
          "./valid-value": 56
        }],
        38: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Object.assign : require2("./shim");
        }, {
          "./is-implemented": 39,
          "./shim": 40
        }],
        39: [function(require2, module2, exports2) {
          module2.exports = function() {
            var assign = Object.assign, obj;
            if (typeof assign !== "function")
              return false;
            obj = {
              foo: "raz"
            };
            assign(obj, {
              bar: "dwa"
            }, {
              trzy: "trzy"
            });
            return obj.foo + obj.bar + obj.trzy === "razdwatrzy";
          };
        }, {}],
        40: [function(require2, module2, exports2) {
          var keys = require2("../keys"), value = require2("../valid-value"), max = Math.max;
          module2.exports = function(dest, src) {
            var error, i2, length = max(arguments.length, 2), assign;
            dest = Object(value(dest));
            assign = function(key) {
              try {
                dest[key] = src[key];
              } catch (e2) {
                if (!error)
                  error = e2;
              }
            };
            for (i2 = 1; i2 < length; ++i2) {
              src = arguments[i2];
              keys(src).forEach(assign);
            }
            if (error !== void 0)
              throw error;
            return dest;
          };
        }, {
          "../keys": 46,
          "../valid-value": 56
        }],
        41: [function(require2, module2, exports2) {
          var aFrom = require2("../array/from"), assign = require2("./assign"), value = require2("./valid-value");
          module2.exports = function(obj) {
            var copy = Object(value(obj)), propertyNames = arguments[1], options = Object(arguments[2]);
            if (copy !== obj && !propertyNames)
              return copy;
            var result = {};
            if (propertyNames) {
              aFrom(propertyNames, function(propertyName) {
                if (options.ensure || propertyName in obj)
                  result[propertyName] = obj[propertyName];
              });
            } else {
              assign(result, obj);
            }
            return result;
          };
        }, {
          "../array/from": 23,
          "./assign": 38,
          "./valid-value": 56
        }],
        42: [function(require2, module2, exports2) {
          var create = Object.create, shim;
          if (!require2("./set-prototype-of/is-implemented")()) {
            shim = require2("./set-prototype-of/shim");
          }
          module2.exports = function() {
            var nullObject, polyProps, desc;
            if (!shim)
              return create;
            if (shim.level !== 1)
              return create;
            nullObject = {};
            polyProps = {};
            desc = {
              configurable: false,
              enumerable: false,
              writable: true,
              value: void 0
            };
            Object.getOwnPropertyNames(Object.prototype).forEach(function(name) {
              if (name === "__proto__") {
                polyProps[name] = {
                  configurable: true,
                  enumerable: false,
                  writable: true,
                  value: void 0
                };
                return;
              }
              polyProps[name] = desc;
            });
            Object.defineProperties(nullObject, polyProps);
            Object.defineProperty(shim, "nullPolyfill", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: nullObject
            });
            return function(prototype, props) {
              return create(prototype === null ? nullObject : prototype, props);
            };
          }();
        }, {
          "./set-prototype-of/is-implemented": 53,
          "./set-prototype-of/shim": 54
        }],
        43: [function(require2, module2, exports2) {
          module2.exports = require2("./_iterate")("forEach");
        }, {
          "./_iterate": 37
        }],
        44: [function(require2, module2, exports2) {
          var isValue = require2("./is-value");
          var map = {
            function: true,
            object: true
          };
          module2.exports = function(value) {
            return isValue(value) && map[typeof value] || false;
          };
        }, {
          "./is-value": 45
        }],
        45: [function(require2, module2, exports2) {
          var _undefined = require2("../function/noop")();
          module2.exports = function(val) {
            return val !== _undefined && val !== null;
          };
        }, {
          "../function/noop": 28
        }],
        46: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Object.keys : require2("./shim");
        }, {
          "./is-implemented": 47,
          "./shim": 48
        }],
        47: [function(require2, module2, exports2) {
          module2.exports = function() {
            try {
              Object.keys("primitive");
              return true;
            } catch (e2) {
              return false;
            }
          };
        }, {}],
        48: [function(require2, module2, exports2) {
          var isValue = require2("../is-value");
          var keys = Object.keys;
          module2.exports = function(object) {
            return keys(isValue(object) ? Object(object) : object);
          };
        }, {
          "../is-value": 45
        }],
        49: [function(require2, module2, exports2) {
          var callable = require2("./valid-callable"), forEach = require2("./for-each"), call = Function.prototype.call;
          module2.exports = function(obj, cb2) {
            var result = {}, thisArg = arguments[2];
            callable(cb2);
            forEach(obj, function(value, key, targetObj, index2) {
              result[key] = call.call(cb2, thisArg, value, key, targetObj, index2);
            });
            return result;
          };
        }, {
          "./for-each": 43,
          "./valid-callable": 55
        }],
        50: [function(require2, module2, exports2) {
          var isValue = require2("./is-value");
          var forEach = Array.prototype.forEach, create = Object.create;
          var process = function(src, obj) {
            var key;
            for (key in src)
              obj[key] = src[key];
          };
          module2.exports = function(opts1) {
            var result = create(null);
            forEach.call(arguments, function(options) {
              if (!isValue(options))
                return;
              process(Object(options), result);
            });
            return result;
          };
        }, {
          "./is-value": 45
        }],
        51: [function(require2, module2, exports2) {
          var forEach = Array.prototype.forEach, create = Object.create;
          module2.exports = function(arg) {
            var set = create(null);
            forEach.call(arguments, function(name) {
              set[name] = true;
            });
            return set;
          };
        }, {}],
        52: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Object.setPrototypeOf : require2("./shim");
        }, {
          "./is-implemented": 53,
          "./shim": 54
        }],
        53: [function(require2, module2, exports2) {
          var create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};
          module2.exports = function() {
            var setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;
            if (typeof setPrototypeOf !== "function")
              return false;
            return getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;
          };
        }, {}],
        54: [function(require2, module2, exports2) {
          var isObject = require2("../is-object"), value = require2("../valid-value"), objIsPrototypeOf = Object.prototype.isPrototypeOf, defineProperty = Object.defineProperty, nullDesc = {
            configurable: true,
            enumerable: false,
            writable: true,
            value: void 0
          }, validate;
          validate = function(obj, prototype) {
            value(obj);
            if (prototype === null || isObject(prototype))
              return obj;
            throw new TypeError("Prototype must be null or an object");
          };
          module2.exports = function(status) {
            var fn2, set;
            if (!status)
              return null;
            if (status.level === 2) {
              if (status.set) {
                set = status.set;
                fn2 = function(obj, prototype) {
                  set.call(validate(obj, prototype), prototype);
                  return obj;
                };
              } else {
                fn2 = function(obj, prototype) {
                  validate(obj, prototype).__proto__ = prototype;
                  return obj;
                };
              }
            } else {
              fn2 = function self2(obj, prototype) {
                var isNullBase;
                validate(obj, prototype);
                isNullBase = objIsPrototypeOf.call(self2.nullPolyfill, obj);
                if (isNullBase)
                  delete self2.nullPolyfill.__proto__;
                if (prototype === null)
                  prototype = self2.nullPolyfill;
                obj.__proto__ = prototype;
                if (isNullBase)
                  defineProperty(self2.nullPolyfill, "__proto__", nullDesc);
                return obj;
              };
            }
            return Object.defineProperty(fn2, "level", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: status.level
            });
          }(
            function() {
              var tmpObj1 = /* @__PURE__ */ Object.create(null), tmpObj2 = {}, set, desc = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__");
              if (desc) {
                try {
                  set = desc.set;
                  set.call(tmpObj1, tmpObj2);
                } catch (ignore) {
                }
                if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
                  return {
                    set,
                    level: 2
                  };
              }
              tmpObj1.__proto__ = tmpObj2;
              if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
                return {
                  level: 2
                };
              tmpObj1 = {};
              tmpObj1.__proto__ = tmpObj2;
              if (Object.getPrototypeOf(tmpObj1) === tmpObj2)
                return {
                  level: 1
                };
              return false;
            }()
          );
          require2("../create");
        }, {
          "../create": 42,
          "../is-object": 44,
          "../valid-value": 56
        }],
        55: [function(require2, module2, exports2) {
          module2.exports = function(fn2) {
            if (typeof fn2 !== "function")
              throw new TypeError(fn2 + " is not a function");
            return fn2;
          };
        }, {}],
        56: [function(require2, module2, exports2) {
          var isValue = require2("./is-value");
          module2.exports = function(value) {
            if (!isValue(value))
              throw new TypeError("Cannot use null or undefined");
            return value;
          };
        }, {
          "./is-value": 45
        }],
        57: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? String.prototype.contains : require2("./shim");
        }, {
          "./is-implemented": 58,
          "./shim": 59
        }],
        58: [function(require2, module2, exports2) {
          var str = "razdwatrzy";
          module2.exports = function() {
            if (typeof str.contains !== "function")
              return false;
            return str.contains("dwa") === true && str.contains("foo") === false;
          };
        }, {}],
        59: [function(require2, module2, exports2) {
          var indexOf = String.prototype.indexOf;
          module2.exports = function(searchString) {
            return indexOf.call(this, searchString, arguments[1]) > -1;
          };
        }, {}],
        60: [function(require2, module2, exports2) {
          var objToString = Object.prototype.toString, id2 = objToString.call("");
          module2.exports = function(value) {
            return typeof value === "string" || value && typeof value === "object" && (value instanceof String || objToString.call(value) === id2) || false;
          };
        }, {}],
        61: [function(require2, module2, exports2) {
          var setPrototypeOf = require2("es5-ext/object/set-prototype-of"), contains = require2("es5-ext/string/#/contains"), d2 = require2("d"), Symbol2 = require2("es6-symbol"), Iterator = require2("./");
          var defineProperty = Object.defineProperty, ArrayIterator;
          ArrayIterator = module2.exports = function(arr, kind) {
            if (!(this instanceof ArrayIterator))
              throw new TypeError("Constructor requires 'new'");
            Iterator.call(this, arr);
            if (!kind)
              kind = "value";
            else if (contains.call(kind, "key+value"))
              kind = "key+value";
            else if (contains.call(kind, "key"))
              kind = "key";
            else
              kind = "value";
            defineProperty(this, "__kind__", d2("", kind));
          };
          if (setPrototypeOf)
            setPrototypeOf(ArrayIterator, Iterator);
          delete ArrayIterator.prototype.constructor;
          ArrayIterator.prototype = Object.create(Iterator.prototype, {
            _resolve: d2(function(i2) {
              if (this.__kind__ === "value")
                return this.__list__[i2];
              if (this.__kind__ === "key+value")
                return [i2, this.__list__[i2]];
              return i2;
            })
          });
          defineProperty(ArrayIterator.prototype, Symbol2.toStringTag, d2("c", "Array Iterator"));
        }, {
          "./": 64,
          "d": 15,
          "es5-ext/object/set-prototype-of": 52,
          "es5-ext/string/#/contains": 57,
          "es6-symbol": 74
        }],
        62: [function(require2, module2, exports2) {
          var isArguments = require2("es5-ext/function/is-arguments"), callable = require2("es5-ext/object/valid-callable"), isString2 = require2("es5-ext/string/is-string"), get = require2("./get");
          var isArray = Array.isArray, call = Function.prototype.call, some = Array.prototype.some;
          module2.exports = function(iterable, cb2) {
            var mode, thisArg = arguments[2], result, doBreak, broken, i2, length, char, code;
            if (isArray(iterable) || isArguments(iterable))
              mode = "array";
            else if (isString2(iterable))
              mode = "string";
            else
              iterable = get(iterable);
            callable(cb2);
            doBreak = function() {
              broken = true;
            };
            if (mode === "array") {
              some.call(iterable, function(value) {
                call.call(cb2, thisArg, value, doBreak);
                return broken;
              });
              return;
            }
            if (mode === "string") {
              length = iterable.length;
              for (i2 = 0; i2 < length; ++i2) {
                char = iterable[i2];
                if (i2 + 1 < length) {
                  code = char.charCodeAt(0);
                  if (code >= 55296 && code <= 56319)
                    char += iterable[++i2];
                }
                call.call(cb2, thisArg, char, doBreak);
                if (broken)
                  break;
              }
              return;
            }
            result = iterable.next();
            while (!result.done) {
              call.call(cb2, thisArg, result.value, doBreak);
              if (broken)
                return;
              result = iterable.next();
            }
          };
        }, {
          "./get": 63,
          "es5-ext/function/is-arguments": 26,
          "es5-ext/object/valid-callable": 55,
          "es5-ext/string/is-string": 60
        }],
        63: [function(require2, module2, exports2) {
          var isArguments = require2("es5-ext/function/is-arguments"), isString2 = require2("es5-ext/string/is-string"), ArrayIterator = require2("./array"), StringIterator = require2("./string"), iterable = require2("./valid-iterable"), iteratorSymbol = require2("es6-symbol").iterator;
          module2.exports = function(obj) {
            if (typeof iterable(obj)[iteratorSymbol] === "function")
              return obj[iteratorSymbol]();
            if (isArguments(obj))
              return new ArrayIterator(obj);
            if (isString2(obj))
              return new StringIterator(obj);
            return new ArrayIterator(obj);
          };
        }, {
          "./array": 61,
          "./string": 66,
          "./valid-iterable": 67,
          "es5-ext/function/is-arguments": 26,
          "es5-ext/string/is-string": 60,
          "es6-symbol": 74
        }],
        64: [function(require2, module2, exports2) {
          var clear = require2("es5-ext/array/#/clear"), assign = require2("es5-ext/object/assign"), callable = require2("es5-ext/object/valid-callable"), value = require2("es5-ext/object/valid-value"), d2 = require2("d"), autoBind = require2("d/auto-bind"), Symbol2 = require2("es6-symbol");
          var defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, Iterator;
          module2.exports = Iterator = function(list, context) {
            if (!(this instanceof Iterator))
              throw new TypeError("Constructor requires 'new'");
            defineProperties(this, {
              __list__: d2("w", value(list)),
              __context__: d2("w", context),
              __nextIndex__: d2("w", 0)
            });
            if (!context)
              return;
            callable(context.on);
            context.on("_add", this._onAdd);
            context.on("_delete", this._onDelete);
            context.on("_clear", this._onClear);
          };
          delete Iterator.prototype.constructor;
          defineProperties(
            Iterator.prototype,
            assign(
              {
                _next: d2(function() {
                  var i2;
                  if (!this.__list__)
                    return void 0;
                  if (this.__redo__) {
                    i2 = this.__redo__.shift();
                    if (i2 !== void 0)
                      return i2;
                  }
                  if (this.__nextIndex__ < this.__list__.length)
                    return this.__nextIndex__++;
                  this._unBind();
                  return void 0;
                }),
                next: d2(function() {
                  return this._createResult(this._next());
                }),
                _createResult: d2(function(i2) {
                  if (i2 === void 0)
                    return {
                      done: true,
                      value: void 0
                    };
                  return {
                    done: false,
                    value: this._resolve(i2)
                  };
                }),
                _resolve: d2(function(i2) {
                  return this.__list__[i2];
                }),
                _unBind: d2(function() {
                  this.__list__ = null;
                  delete this.__redo__;
                  if (!this.__context__)
                    return;
                  this.__context__.off("_add", this._onAdd);
                  this.__context__.off("_delete", this._onDelete);
                  this.__context__.off("_clear", this._onClear);
                  this.__context__ = null;
                }),
                toString: d2(function() {
                  return "[object " + (this[Symbol2.toStringTag] || "Object") + "]";
                })
              },
              autoBind({
                _onAdd: d2(function(index2) {
                  if (index2 >= this.__nextIndex__)
                    return;
                  ++this.__nextIndex__;
                  if (!this.__redo__) {
                    defineProperty(this, "__redo__", d2("c", [index2]));
                    return;
                  }
                  this.__redo__.forEach(function(redo, i2) {
                    if (redo >= index2)
                      this.__redo__[i2] = ++redo;
                  }, this);
                  this.__redo__.push(index2);
                }),
                _onDelete: d2(function(index2) {
                  var i2;
                  if (index2 >= this.__nextIndex__)
                    return;
                  --this.__nextIndex__;
                  if (!this.__redo__)
                    return;
                  i2 = this.__redo__.indexOf(index2);
                  if (i2 !== -1)
                    this.__redo__.splice(i2, 1);
                  this.__redo__.forEach(function(redo, j2) {
                    if (redo > index2)
                      this.__redo__[j2] = --redo;
                  }, this);
                }),
                _onClear: d2(function() {
                  if (this.__redo__)
                    clear.call(this.__redo__);
                  this.__nextIndex__ = 0;
                })
              })
            )
          );
          defineProperty(
            Iterator.prototype,
            Symbol2.iterator,
            d2(function() {
              return this;
            })
          );
        }, {
          "d": 15,
          "d/auto-bind": 14,
          "es5-ext/array/#/clear": 21,
          "es5-ext/object/assign": 38,
          "es5-ext/object/valid-callable": 55,
          "es5-ext/object/valid-value": 56,
          "es6-symbol": 74
        }],
        65: [function(require2, module2, exports2) {
          var isArguments = require2("es5-ext/function/is-arguments"), isValue = require2("es5-ext/object/is-value"), isString2 = require2("es5-ext/string/is-string");
          var iteratorSymbol = require2("es6-symbol").iterator, isArray = Array.isArray;
          module2.exports = function(value) {
            if (!isValue(value))
              return false;
            if (isArray(value))
              return true;
            if (isString2(value))
              return true;
            if (isArguments(value))
              return true;
            return typeof value[iteratorSymbol] === "function";
          };
        }, {
          "es5-ext/function/is-arguments": 26,
          "es5-ext/object/is-value": 45,
          "es5-ext/string/is-string": 60,
          "es6-symbol": 74
        }],
        66: [function(require2, module2, exports2) {
          var setPrototypeOf = require2("es5-ext/object/set-prototype-of"), d2 = require2("d"), Symbol2 = require2("es6-symbol"), Iterator = require2("./");
          var defineProperty = Object.defineProperty, StringIterator;
          StringIterator = module2.exports = function(str) {
            if (!(this instanceof StringIterator))
              throw new TypeError("Constructor requires 'new'");
            str = String(str);
            Iterator.call(this, str);
            defineProperty(this, "__length__", d2("", str.length));
          };
          if (setPrototypeOf)
            setPrototypeOf(StringIterator, Iterator);
          delete StringIterator.prototype.constructor;
          StringIterator.prototype = Object.create(Iterator.prototype, {
            _next: d2(function() {
              if (!this.__list__)
                return void 0;
              if (this.__nextIndex__ < this.__length__)
                return this.__nextIndex__++;
              this._unBind();
              return void 0;
            }),
            _resolve: d2(function(i2) {
              var char = this.__list__[i2], code;
              if (this.__nextIndex__ === this.__length__)
                return char;
              code = char.charCodeAt(0);
              if (code >= 55296 && code <= 56319)
                return char + this.__list__[this.__nextIndex__++];
              return char;
            })
          });
          defineProperty(StringIterator.prototype, Symbol2.toStringTag, d2("c", "String Iterator"));
        }, {
          "./": 64,
          "d": 15,
          "es5-ext/object/set-prototype-of": 52,
          "es6-symbol": 74
        }],
        67: [function(require2, module2, exports2) {
          var isIterable = require2("./is-iterable");
          module2.exports = function(value) {
            if (!isIterable(value))
              throw new TypeError(value + " is not iterable");
            return value;
          };
        }, {
          "./is-iterable": 65
        }],
        68: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? Map : require2("./polyfill");
        }, {
          "./is-implemented": 69,
          "./polyfill": 73
        }],
        69: [function(require2, module2, exports2) {
          module2.exports = function() {
            var map, iterator, result;
            if (typeof Map !== "function")
              return false;
            try {
              map = /* @__PURE__ */ new Map([
                ["raz", "one"],
                ["dwa", "two"],
                ["trzy", "three"]
              ]);
            } catch (e2) {
              return false;
            }
            if (String(map) !== "[object Map]")
              return false;
            if (map.size !== 3)
              return false;
            if (typeof map.clear !== "function")
              return false;
            if (typeof map.delete !== "function")
              return false;
            if (typeof map.entries !== "function")
              return false;
            if (typeof map.forEach !== "function")
              return false;
            if (typeof map.get !== "function")
              return false;
            if (typeof map.has !== "function")
              return false;
            if (typeof map.keys !== "function")
              return false;
            if (typeof map.set !== "function")
              return false;
            if (typeof map.values !== "function")
              return false;
            iterator = map.entries();
            result = iterator.next();
            if (result.done !== false)
              return false;
            if (!result.value)
              return false;
            if (result.value[0] !== "raz")
              return false;
            if (result.value[1] !== "one")
              return false;
            return true;
          };
        }, {}],
        70: [function(require2, module2, exports2) {
          module2.exports = function() {
            if (typeof Map === "undefined")
              return false;
            return Object.prototype.toString.call(/* @__PURE__ */ new Map()) === "[object Map]";
          }();
        }, {}],
        71: [function(require2, module2, exports2) {
          module2.exports = require2("es5-ext/object/primitive-set")(
            "key",
            "value",
            "key+value"
          );
        }, {
          "es5-ext/object/primitive-set": 51
        }],
        72: [function(require2, module2, exports2) {
          var setPrototypeOf = require2("es5-ext/object/set-prototype-of"), d2 = require2("d"), Iterator = require2("es6-iterator"), toStringTagSymbol = require2("es6-symbol").toStringTag, kinds = require2("./iterator-kinds"), defineProperties = Object.defineProperties, unBind = Iterator.prototype._unBind, MapIterator;
          MapIterator = module2.exports = function(map, kind) {
            if (!(this instanceof MapIterator))
              return new MapIterator(map, kind);
            Iterator.call(this, map.__mapKeysData__, map);
            if (!kind || !kinds[kind])
              kind = "key+value";
            defineProperties(this, {
              __kind__: d2("", kind),
              __values__: d2("w", map.__mapValuesData__)
            });
          };
          if (setPrototypeOf)
            setPrototypeOf(MapIterator, Iterator);
          MapIterator.prototype = Object.create(Iterator.prototype, {
            constructor: d2(MapIterator),
            _resolve: d2(function(i2) {
              if (this.__kind__ === "value")
                return this.__values__[i2];
              if (this.__kind__ === "key")
                return this.__list__[i2];
              return [this.__list__[i2], this.__values__[i2]];
            }),
            _unBind: d2(function() {
              this.__values__ = null;
              unBind.call(this);
            }),
            toString: d2(function() {
              return "[object Map Iterator]";
            })
          });
          Object.defineProperty(
            MapIterator.prototype,
            toStringTagSymbol,
            d2("c", "Map Iterator")
          );
        }, {
          "./iterator-kinds": 71,
          "d": 15,
          "es5-ext/object/set-prototype-of": 52,
          "es6-iterator": 64,
          "es6-symbol": 74
        }],
        73: [function(require2, module2, exports2) {
          var clear = require2("es5-ext/array/#/clear"), eIndexOf = require2("es5-ext/array/#/e-index-of"), setPrototypeOf = require2("es5-ext/object/set-prototype-of"), callable = require2("es5-ext/object/valid-callable"), validValue = require2("es5-ext/object/valid-value"), d2 = require2("d"), ee2 = require2("event-emitter"), Symbol2 = require2("es6-symbol"), iterator = require2("es6-iterator/valid-iterable"), forOf = require2("es6-iterator/for-of"), Iterator = require2("./lib/iterator"), isNative = require2("./is-native-implemented"), call = Function.prototype.call, defineProperties = Object.defineProperties, getPrototypeOf = Object.getPrototypeOf, MapPoly;
          module2.exports = MapPoly = function() {
            var iterable = arguments[0], keys, values, self2;
            if (!(this instanceof MapPoly))
              throw new TypeError("Constructor requires 'new'");
            if (isNative && setPrototypeOf && Map !== MapPoly) {
              self2 = setPrototypeOf(/* @__PURE__ */ new Map(), getPrototypeOf(this));
            } else {
              self2 = this;
            }
            if (iterable != null)
              iterator(iterable);
            defineProperties(self2, {
              __mapKeysData__: d2("c", keys = []),
              __mapValuesData__: d2("c", values = [])
            });
            if (!iterable)
              return self2;
            forOf(iterable, function(value) {
              var key = validValue(value)[0];
              value = value[1];
              if (eIndexOf.call(keys, key) !== -1)
                return;
              keys.push(key);
              values.push(value);
            }, self2);
            return self2;
          };
          if (isNative) {
            if (setPrototypeOf)
              setPrototypeOf(MapPoly, Map);
            MapPoly.prototype = Object.create(Map.prototype, {
              constructor: d2(MapPoly)
            });
          }
          ee2(defineProperties(MapPoly.prototype, {
            clear: d2(function() {
              if (!this.__mapKeysData__.length)
                return;
              clear.call(this.__mapKeysData__);
              clear.call(this.__mapValuesData__);
              this.emit("_clear");
            }),
            delete: d2(function(key) {
              var index2 = eIndexOf.call(this.__mapKeysData__, key);
              if (index2 === -1)
                return false;
              this.__mapKeysData__.splice(index2, 1);
              this.__mapValuesData__.splice(index2, 1);
              this.emit("_delete", index2, key);
              return true;
            }),
            entries: d2(function() {
              return new Iterator(this, "key+value");
            }),
            forEach: d2(function(cb2) {
              var thisArg = arguments[1], iterator2, result;
              callable(cb2);
              iterator2 = this.entries();
              result = iterator2._next();
              while (result !== void 0) {
                call.call(
                  cb2,
                  thisArg,
                  this.__mapValuesData__[result],
                  this.__mapKeysData__[result],
                  this
                );
                result = iterator2._next();
              }
            }),
            get: d2(function(key) {
              var index2 = eIndexOf.call(this.__mapKeysData__, key);
              if (index2 === -1)
                return;
              return this.__mapValuesData__[index2];
            }),
            has: d2(function(key) {
              return eIndexOf.call(this.__mapKeysData__, key) !== -1;
            }),
            keys: d2(function() {
              return new Iterator(this, "key");
            }),
            set: d2(function(key, value) {
              var index2 = eIndexOf.call(this.__mapKeysData__, key), emit;
              if (index2 === -1) {
                index2 = this.__mapKeysData__.push(key) - 1;
                emit = true;
              }
              this.__mapValuesData__[index2] = value;
              if (emit)
                this.emit("_add", index2, key);
              return this;
            }),
            size: d2.gs(function() {
              return this.__mapKeysData__.length;
            }),
            values: d2(function() {
              return new Iterator(this, "value");
            }),
            toString: d2(function() {
              return "[object Map]";
            })
          }));
          Object.defineProperty(MapPoly.prototype, Symbol2.iterator, d2(function() {
            return this.entries();
          }));
          Object.defineProperty(MapPoly.prototype, Symbol2.toStringTag, d2("c", "Map"));
        }, {
          "./is-native-implemented": 70,
          "./lib/iterator": 72,
          "d": 15,
          "es5-ext/array/#/clear": 21,
          "es5-ext/array/#/e-index-of": 22,
          "es5-ext/object/set-prototype-of": 52,
          "es5-ext/object/valid-callable": 55,
          "es5-ext/object/valid-value": 56,
          "es6-iterator/for-of": 62,
          "es6-iterator/valid-iterable": 67,
          "es6-symbol": 74,
          "event-emitter": 82
        }],
        74: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? require2("ext/global-this").Symbol : require2("./polyfill");
        }, {
          "./is-implemented": 75,
          "./polyfill": 80,
          "ext/global-this": 85
        }],
        75: [function(require2, module2, exports2) {
          var global2 = require2("ext/global-this"), validTypes = {
            object: true,
            symbol: true
          };
          module2.exports = function() {
            var Symbol2 = global2.Symbol;
            var symbol;
            if (typeof Symbol2 !== "function")
              return false;
            symbol = Symbol2("test symbol");
            try {
              String(symbol);
            } catch (e2) {
              return false;
            }
            if (!validTypes[typeof Symbol2.iterator])
              return false;
            if (!validTypes[typeof Symbol2.toPrimitive])
              return false;
            if (!validTypes[typeof Symbol2.toStringTag])
              return false;
            return true;
          };
        }, {
          "ext/global-this": 85
        }],
        76: [function(require2, module2, exports2) {
          module2.exports = function(value) {
            if (!value)
              return false;
            if (typeof value === "symbol")
              return true;
            if (!value.constructor)
              return false;
            if (value.constructor.name !== "Symbol")
              return false;
            return value[value.constructor.toStringTag] === "Symbol";
          };
        }, {}],
        77: [function(require2, module2, exports2) {
          var d2 = require2("d");
          var create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;
          var created = create(null);
          module2.exports = function(desc) {
            var postfix = 0, name, ie11BugWorkaround;
            while (created[desc + (postfix || "")])
              ++postfix;
            desc += postfix || "";
            created[desc] = true;
            name = "@@" + desc;
            defineProperty(
              objPrototype,
              name,
              d2.gs(null, function(value) {
                if (ie11BugWorkaround)
                  return;
                ie11BugWorkaround = true;
                defineProperty(this, name, d2(value));
                ie11BugWorkaround = false;
              })
            );
            return name;
          };
        }, {
          "d": 15
        }],
        78: [function(require2, module2, exports2) {
          var d2 = require2("d"), NativeSymbol = require2("ext/global-this").Symbol;
          module2.exports = function(SymbolPolyfill) {
            return Object.defineProperties(SymbolPolyfill, {
              // To ensure proper interoperability with other native functions (e.g. Array.from)
              // fallback to eventual native implementation of given symbol
              hasInstance: d2(
                "",
                NativeSymbol && NativeSymbol.hasInstance || SymbolPolyfill("hasInstance")
              ),
              isConcatSpreadable: d2(
                "",
                NativeSymbol && NativeSymbol.isConcatSpreadable || SymbolPolyfill("isConcatSpreadable")
              ),
              iterator: d2("", NativeSymbol && NativeSymbol.iterator || SymbolPolyfill("iterator")),
              match: d2("", NativeSymbol && NativeSymbol.match || SymbolPolyfill("match")),
              replace: d2("", NativeSymbol && NativeSymbol.replace || SymbolPolyfill("replace")),
              search: d2("", NativeSymbol && NativeSymbol.search || SymbolPolyfill("search")),
              species: d2("", NativeSymbol && NativeSymbol.species || SymbolPolyfill("species")),
              split: d2("", NativeSymbol && NativeSymbol.split || SymbolPolyfill("split")),
              toPrimitive: d2(
                "",
                NativeSymbol && NativeSymbol.toPrimitive || SymbolPolyfill("toPrimitive")
              ),
              toStringTag: d2(
                "",
                NativeSymbol && NativeSymbol.toStringTag || SymbolPolyfill("toStringTag")
              ),
              unscopables: d2(
                "",
                NativeSymbol && NativeSymbol.unscopables || SymbolPolyfill("unscopables")
              )
            });
          };
        }, {
          "d": 15,
          "ext/global-this": 85
        }],
        79: [function(require2, module2, exports2) {
          var d2 = require2("d"), validateSymbol = require2("../../../validate-symbol");
          var registry = /* @__PURE__ */ Object.create(null);
          module2.exports = function(SymbolPolyfill) {
            return Object.defineProperties(SymbolPolyfill, {
              for: d2(function(key) {
                if (registry[key])
                  return registry[key];
                return registry[key] = SymbolPolyfill(String(key));
              }),
              keyFor: d2(function(symbol) {
                var key;
                validateSymbol(symbol);
                for (key in registry) {
                  if (registry[key] === symbol)
                    return key;
                }
                return void 0;
              })
            });
          };
        }, {
          "../../../validate-symbol": 81,
          "d": 15
        }],
        80: [function(require2, module2, exports2) {
          var d2 = require2("d"), validateSymbol = require2("./validate-symbol"), NativeSymbol = require2("ext/global-this").Symbol, generateName = require2("./lib/private/generate-name"), setupStandardSymbols = require2("./lib/private/setup/standard-symbols"), setupSymbolRegistry = require2("./lib/private/setup/symbol-registry");
          var create = Object.create, defineProperties = Object.defineProperties, defineProperty = Object.defineProperty;
          var SymbolPolyfill, HiddenSymbol, isNativeSafe;
          if (typeof NativeSymbol === "function") {
            try {
              String(NativeSymbol());
              isNativeSafe = true;
            } catch (ignore) {
            }
          } else {
            NativeSymbol = null;
          }
          HiddenSymbol = function Symbol2(description) {
            if (this instanceof HiddenSymbol)
              throw new TypeError("Symbol is not a constructor");
            return SymbolPolyfill(description);
          };
          module2.exports = SymbolPolyfill = function Symbol2(description) {
            var symbol;
            if (this instanceof Symbol2)
              throw new TypeError("Symbol is not a constructor");
            if (isNativeSafe)
              return NativeSymbol(description);
            symbol = create(HiddenSymbol.prototype);
            description = description === void 0 ? "" : String(description);
            return defineProperties(symbol, {
              __description__: d2("", description),
              __name__: d2("", generateName(description))
            });
          };
          setupStandardSymbols(SymbolPolyfill);
          setupSymbolRegistry(SymbolPolyfill);
          defineProperties(HiddenSymbol.prototype, {
            constructor: d2(SymbolPolyfill),
            toString: d2("", function() {
              return this.__name__;
            })
          });
          defineProperties(SymbolPolyfill.prototype, {
            toString: d2(function() {
              return "Symbol (" + validateSymbol(this).__description__ + ")";
            }),
            valueOf: d2(function() {
              return validateSymbol(this);
            })
          });
          defineProperty(
            SymbolPolyfill.prototype,
            SymbolPolyfill.toPrimitive,
            d2("", function() {
              var symbol = validateSymbol(this);
              if (typeof symbol === "symbol")
                return symbol;
              return symbol.toString();
            })
          );
          defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d2("c", "Symbol"));
          defineProperty(
            HiddenSymbol.prototype,
            SymbolPolyfill.toStringTag,
            d2("c", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])
          );
          defineProperty(
            HiddenSymbol.prototype,
            SymbolPolyfill.toPrimitive,
            d2("c", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])
          );
        }, {
          "./lib/private/generate-name": 77,
          "./lib/private/setup/standard-symbols": 78,
          "./lib/private/setup/symbol-registry": 79,
          "./validate-symbol": 81,
          "d": 15,
          "ext/global-this": 85
        }],
        81: [function(require2, module2, exports2) {
          var isSymbol = require2("./is-symbol");
          module2.exports = function(value) {
            if (!isSymbol(value))
              throw new TypeError(value + " is not a symbol");
            return value;
          };
        }, {
          "./is-symbol": 76
        }],
        82: [function(require2, module2, exports2) {
          var d2 = require2("d"), callable = require2("es5-ext/object/valid-callable"), apply = Function.prototype.apply, call = Function.prototype.call, create = Object.create, defineProperty = Object.defineProperty, defineProperties = Object.defineProperties, hasOwnProperty2 = Object.prototype.hasOwnProperty, descriptor = {
            configurable: true,
            enumerable: false,
            writable: true
          }, on2, once, off, emit, methods, descriptors, base;
          on2 = function(type, listener) {
            var data;
            callable(listener);
            if (!hasOwnProperty2.call(this, "__ee__")) {
              data = descriptor.value = create(null);
              defineProperty(this, "__ee__", descriptor);
              descriptor.value = null;
            } else {
              data = this.__ee__;
            }
            if (!data[type])
              data[type] = listener;
            else if (typeof data[type] === "object")
              data[type].push(listener);
            else
              data[type] = [data[type], listener];
            return this;
          };
          once = function(type, listener) {
            var once2, self2;
            callable(listener);
            self2 = this;
            on2.call(this, type, once2 = function() {
              off.call(self2, type, once2);
              apply.call(listener, this, arguments);
            });
            once2.__eeOnceListener__ = listener;
            return this;
          };
          off = function(type, listener) {
            var data, listeners, candidate, i2;
            callable(listener);
            if (!hasOwnProperty2.call(this, "__ee__"))
              return this;
            data = this.__ee__;
            if (!data[type])
              return this;
            listeners = data[type];
            if (typeof listeners === "object") {
              for (i2 = 0; candidate = listeners[i2]; ++i2) {
                if (candidate === listener || candidate.__eeOnceListener__ === listener) {
                  if (listeners.length === 2)
                    data[type] = listeners[i2 ? 0 : 1];
                  else
                    listeners.splice(i2, 1);
                }
              }
            } else {
              if (listeners === listener || listeners.__eeOnceListener__ === listener) {
                delete data[type];
              }
            }
            return this;
          };
          emit = function(type) {
            var i2, l2, listener, listeners, args;
            if (!hasOwnProperty2.call(this, "__ee__"))
              return;
            listeners = this.__ee__[type];
            if (!listeners)
              return;
            if (typeof listeners === "object") {
              l2 = arguments.length;
              args = new Array(l2 - 1);
              for (i2 = 1; i2 < l2; ++i2)
                args[i2 - 1] = arguments[i2];
              listeners = listeners.slice();
              for (i2 = 0; listener = listeners[i2]; ++i2) {
                apply.call(listener, this, args);
              }
            } else {
              switch (arguments.length) {
                case 1:
                  call.call(listeners, this);
                  break;
                case 2:
                  call.call(listeners, this, arguments[1]);
                  break;
                case 3:
                  call.call(listeners, this, arguments[1], arguments[2]);
                  break;
                default:
                  l2 = arguments.length;
                  args = new Array(l2 - 1);
                  for (i2 = 1; i2 < l2; ++i2) {
                    args[i2 - 1] = arguments[i2];
                  }
                  apply.call(listeners, this, args);
              }
            }
          };
          methods = {
            on: on2,
            once,
            off,
            emit
          };
          descriptors = {
            on: d2(on2),
            once: d2(once),
            off: d2(off),
            emit: d2(emit)
          };
          base = defineProperties({}, descriptors);
          module2.exports = exports2 = function(o2) {
            return o2 == null ? create(base) : defineProperties(Object(o2), descriptors);
          };
          exports2.methods = methods;
        }, {
          "d": 15,
          "es5-ext/object/valid-callable": 55
        }],
        83: [function(require2, module2, exports2) {
          var objectCreate = Object.create || objectCreatePolyfill;
          var objectKeys = Object.keys || objectKeysPolyfill;
          var bind = Function.prototype.bind || functionBindPolyfill;
          function EventEmitter() {
            if (!this._events || !Object.prototype.hasOwnProperty.call(this, "_events")) {
              this._events = objectCreate(null);
              this._eventsCount = 0;
            }
            this._maxListeners = this._maxListeners || void 0;
          }
          module2.exports = EventEmitter;
          EventEmitter.EventEmitter = EventEmitter;
          EventEmitter.prototype._events = void 0;
          EventEmitter.prototype._maxListeners = void 0;
          var defaultMaxListeners = 10;
          var hasDefineProperty;
          try {
            var o2 = {};
            if (Object.defineProperty)
              Object.defineProperty(o2, "x", {
                value: 0
              });
            hasDefineProperty = o2.x === 0;
          } catch (err) {
            hasDefineProperty = false;
          }
          if (hasDefineProperty) {
            Object.defineProperty(EventEmitter, "defaultMaxListeners", {
              enumerable: true,
              get: function() {
                return defaultMaxListeners;
              },
              set: function(arg) {
                if (typeof arg !== "number" || arg < 0 || arg !== arg)
                  throw new TypeError('"defaultMaxListeners" must be a positive number');
                defaultMaxListeners = arg;
              }
            });
          } else {
            EventEmitter.defaultMaxListeners = defaultMaxListeners;
          }
          EventEmitter.prototype.setMaxListeners = function setMaxListeners(n2) {
            if (typeof n2 !== "number" || n2 < 0 || isNaN(n2))
              throw new TypeError('"n" argument must be a positive number');
            this._maxListeners = n2;
            return this;
          };
          function $getMaxListeners(that) {
            if (that._maxListeners === void 0)
              return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
          }
          EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
            return $getMaxListeners(this);
          };
          function emitNone(handler, isFn, self2) {
            if (isFn)
              handler.call(self2);
            else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i2 = 0; i2 < len; ++i2)
                listeners[i2].call(self2);
            }
          }
          function emitOne(handler, isFn, self2, arg1) {
            if (isFn)
              handler.call(self2, arg1);
            else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i2 = 0; i2 < len; ++i2)
                listeners[i2].call(self2, arg1);
            }
          }
          function emitTwo(handler, isFn, self2, arg1, arg2) {
            if (isFn)
              handler.call(self2, arg1, arg2);
            else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i2 = 0; i2 < len; ++i2)
                listeners[i2].call(self2, arg1, arg2);
            }
          }
          function emitThree(handler, isFn, self2, arg1, arg2, arg3) {
            if (isFn)
              handler.call(self2, arg1, arg2, arg3);
            else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i2 = 0; i2 < len; ++i2)
                listeners[i2].call(self2, arg1, arg2, arg3);
            }
          }
          function emitMany(handler, isFn, self2, args) {
            if (isFn)
              handler.apply(self2, args);
            else {
              var len = handler.length;
              var listeners = arrayClone(handler, len);
              for (var i2 = 0; i2 < len; ++i2)
                listeners[i2].apply(self2, args);
            }
          }
          EventEmitter.prototype.emit = function emit(type) {
            var er2, handler, len, args, i2, events;
            var doError = type === "error";
            events = this._events;
            if (events)
              doError = doError && events.error == null;
            else if (!doError)
              return false;
            if (doError) {
              if (arguments.length > 1)
                er2 = arguments[1];
              if (er2 instanceof Error) {
                throw er2;
              } else {
                var err = new Error('Unhandled "error" event. (' + er2 + ")");
                err.context = er2;
                throw err;
              }
            }
            handler = events[type];
            if (!handler)
              return false;
            var isFn = typeof handler === "function";
            len = arguments.length;
            switch (len) {
              case 1:
                emitNone(handler, isFn, this);
                break;
              case 2:
                emitOne(handler, isFn, this, arguments[1]);
                break;
              case 3:
                emitTwo(handler, isFn, this, arguments[1], arguments[2]);
                break;
              case 4:
                emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);
                break;
              default:
                args = new Array(len - 1);
                for (i2 = 1; i2 < len; i2++)
                  args[i2 - 1] = arguments[i2];
                emitMany(handler, isFn, this, args);
            }
            return true;
          };
          function _addListener(target, type, listener, prepend) {
            var m2;
            var events;
            var existing;
            if (typeof listener !== "function")
              throw new TypeError('"listener" argument must be a function');
            events = target._events;
            if (!events) {
              events = target._events = objectCreate(null);
              target._eventsCount = 0;
            } else {
              if (events.newListener) {
                target.emit(
                  "newListener",
                  type,
                  listener.listener ? listener.listener : listener
                );
                events = target._events;
              }
              existing = events[type];
            }
            if (!existing) {
              existing = events[type] = listener;
              ++target._eventsCount;
            } else {
              if (typeof existing === "function") {
                existing = events[type] = prepend ? [listener, existing] : [existing, listener];
              } else {
                if (prepend) {
                  existing.unshift(listener);
                } else {
                  existing.push(listener);
                }
              }
              if (!existing.warned) {
                m2 = $getMaxListeners(target);
                if (m2 && m2 > 0 && existing.length > m2) {
                  existing.warned = true;
                  var w2 = new Error("Possible EventEmitter memory leak detected. " + existing.length + ' "' + String(type) + '" listeners added. Use emitter.setMaxListeners() to increase limit.');
                  w2.name = "MaxListenersExceededWarning";
                  w2.emitter = target;
                  w2.type = type;
                  w2.count = existing.length;
                  if (typeof console === "object" && console.warn) {
                    formatAppLog("warn", "at node_modules/mqtt/dist/mqtt.js:7929", "%s: %s", w2.name, w2.message);
                  }
                }
              }
            }
            return target;
          }
          EventEmitter.prototype.addListener = function addListener(type, listener) {
            return _addListener(this, type, listener, false);
          };
          EventEmitter.prototype.on = EventEmitter.prototype.addListener;
          EventEmitter.prototype.prependListener = function prependListener(type, listener) {
            return _addListener(this, type, listener, true);
          };
          function onceWrapper() {
            if (!this.fired) {
              this.target.removeListener(this.type, this.wrapFn);
              this.fired = true;
              switch (arguments.length) {
                case 0:
                  return this.listener.call(this.target);
                case 1:
                  return this.listener.call(this.target, arguments[0]);
                case 2:
                  return this.listener.call(this.target, arguments[0], arguments[1]);
                case 3:
                  return this.listener.call(
                    this.target,
                    arguments[0],
                    arguments[1],
                    arguments[2]
                  );
                default:
                  var args = new Array(arguments.length);
                  for (var i2 = 0; i2 < args.length; ++i2)
                    args[i2] = arguments[i2];
                  this.listener.apply(this.target, args);
              }
            }
          }
          function _onceWrap(target, type, listener) {
            var state = {
              fired: false,
              wrapFn: void 0,
              target,
              type,
              listener
            };
            var wrapped = bind.call(onceWrapper, state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
          }
          EventEmitter.prototype.once = function once(type, listener) {
            if (typeof listener !== "function")
              throw new TypeError('"listener" argument must be a function');
            this.on(type, _onceWrap(this, type, listener));
            return this;
          };
          EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
            if (typeof listener !== "function")
              throw new TypeError('"listener" argument must be a function');
            this.prependListener(type, _onceWrap(this, type, listener));
            return this;
          };
          EventEmitter.prototype.removeListener = function removeListener(type, listener) {
            var list, events, position, i2, originalListener;
            if (typeof listener !== "function")
              throw new TypeError('"listener" argument must be a function');
            events = this._events;
            if (!events)
              return this;
            list = events[type];
            if (!list)
              return this;
            if (list === listener || list.listener === listener) {
              if (--this._eventsCount === 0)
                this._events = objectCreate(null);
              else {
                delete events[type];
                if (events.removeListener)
                  this.emit("removeListener", type, list.listener || listener);
              }
            } else if (typeof list !== "function") {
              position = -1;
              for (i2 = list.length - 1; i2 >= 0; i2--) {
                if (list[i2] === listener || list[i2].listener === listener) {
                  originalListener = list[i2].listener;
                  position = i2;
                  break;
                }
              }
              if (position < 0)
                return this;
              if (position === 0)
                list.shift();
              else
                spliceOne(list, position);
              if (list.length === 1)
                events[type] = list[0];
              if (events.removeListener)
                this.emit("removeListener", type, originalListener || listener);
            }
            return this;
          };
          EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
            var listeners, events, i2;
            events = this._events;
            if (!events)
              return this;
            if (!events.removeListener) {
              if (arguments.length === 0) {
                this._events = objectCreate(null);
                this._eventsCount = 0;
              } else if (events[type]) {
                if (--this._eventsCount === 0)
                  this._events = objectCreate(null);
                else
                  delete events[type];
              }
              return this;
            }
            if (arguments.length === 0) {
              var keys = objectKeys(events);
              var key;
              for (i2 = 0; i2 < keys.length; ++i2) {
                key = keys[i2];
                if (key === "removeListener")
                  continue;
                this.removeAllListeners(key);
              }
              this.removeAllListeners("removeListener");
              this._events = objectCreate(null);
              this._eventsCount = 0;
              return this;
            }
            listeners = events[type];
            if (typeof listeners === "function") {
              this.removeListener(type, listeners);
            } else if (listeners) {
              for (i2 = listeners.length - 1; i2 >= 0; i2--) {
                this.removeListener(type, listeners[i2]);
              }
            }
            return this;
          };
          function _listeners(target, type, unwrap) {
            var events = target._events;
            if (!events)
              return [];
            var evlistener = events[type];
            if (!evlistener)
              return [];
            if (typeof evlistener === "function")
              return unwrap ? [evlistener.listener || evlistener] : [evlistener];
            return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
          }
          EventEmitter.prototype.listeners = function listeners(type) {
            return _listeners(this, type, true);
          };
          EventEmitter.prototype.rawListeners = function rawListeners(type) {
            return _listeners(this, type, false);
          };
          EventEmitter.listenerCount = function(emitter, type) {
            if (typeof emitter.listenerCount === "function") {
              return emitter.listenerCount(type);
            } else {
              return listenerCount.call(emitter, type);
            }
          };
          EventEmitter.prototype.listenerCount = listenerCount;
          function listenerCount(type) {
            var events = this._events;
            if (events) {
              var evlistener = events[type];
              if (typeof evlistener === "function") {
                return 1;
              } else if (evlistener) {
                return evlistener.length;
              }
            }
            return 0;
          }
          EventEmitter.prototype.eventNames = function eventNames() {
            return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];
          };
          function spliceOne(list, index2) {
            for (var i2 = index2, k2 = i2 + 1, n2 = list.length; k2 < n2; i2 += 1, k2 += 1)
              list[i2] = list[k2];
            list.pop();
          }
          function arrayClone(arr, n2) {
            var copy = new Array(n2);
            for (var i2 = 0; i2 < n2; ++i2)
              copy[i2] = arr[i2];
            return copy;
          }
          function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i2 = 0; i2 < ret.length; ++i2) {
              ret[i2] = arr[i2].listener || arr[i2];
            }
            return ret;
          }
          function objectCreatePolyfill(proto) {
            var F2 = function() {
            };
            F2.prototype = proto;
            return new F2();
          }
          function objectKeysPolyfill(obj) {
            for (var k2 in obj)
              if (Object.prototype.hasOwnProperty.call(obj, k2))
                ;
            return k2;
          }
          function functionBindPolyfill(context) {
            var fn2 = this;
            return function() {
              return fn2.apply(context, arguments);
            };
          }
        }, {}],
        84: [function(require2, module2, exports2) {
          var naiveFallback = function() {
            if (typeof self === "object" && self)
              return self;
            if (typeof window === "object" && window)
              return window;
            throw new Error("Unable to resolve global `this`");
          };
          module2.exports = function() {
            if (this)
              return this;
            try {
              Object.defineProperty(Object.prototype, "__global__", {
                get: function() {
                  return this;
                },
                configurable: true
              });
            } catch (error) {
              return naiveFallback();
            }
            try {
              if (!__global__)
                return naiveFallback();
              return __global__;
            } finally {
              delete Object.prototype.__global__;
            }
          }();
        }, {}],
        85: [function(require2, module2, exports2) {
          module2.exports = require2("./is-implemented")() ? globalThis : require2("./implementation");
        }, {
          "./implementation": 84,
          "./is-implemented": 86
        }],
        86: [function(require2, module2, exports2) {
          module2.exports = function() {
            if (typeof globalThis !== "object")
              return false;
            if (!globalThis)
              return false;
            return globalThis.Array === Array;
          };
        }, {}],
        87: [function(require2, module2, exports2) {
          exports2.read = function(buffer, offset, isLE, mLen, nBytes) {
            var e2, m2;
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var nBits = -7;
            var i2 = isLE ? nBytes - 1 : 0;
            var d2 = isLE ? -1 : 1;
            var s2 = buffer[offset + i2];
            i2 += d2;
            e2 = s2 & (1 << -nBits) - 1;
            s2 >>= -nBits;
            nBits += eLen;
            for (; nBits > 0; e2 = e2 * 256 + buffer[offset + i2], i2 += d2, nBits -= 8) {
            }
            m2 = e2 & (1 << -nBits) - 1;
            e2 >>= -nBits;
            nBits += mLen;
            for (; nBits > 0; m2 = m2 * 256 + buffer[offset + i2], i2 += d2, nBits -= 8) {
            }
            if (e2 === 0) {
              e2 = 1 - eBias;
            } else if (e2 === eMax) {
              return m2 ? NaN : (s2 ? -1 : 1) * Infinity;
            } else {
              m2 = m2 + Math.pow(2, mLen);
              e2 = e2 - eBias;
            }
            return (s2 ? -1 : 1) * m2 * Math.pow(2, e2 - mLen);
          };
          exports2.write = function(buffer, value, offset, isLE, mLen, nBytes) {
            var e2, m2, c2;
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var rt2 = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
            var i2 = isLE ? 0 : nBytes - 1;
            var d2 = isLE ? 1 : -1;
            var s2 = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
            value = Math.abs(value);
            if (isNaN(value) || value === Infinity) {
              m2 = isNaN(value) ? 1 : 0;
              e2 = eMax;
            } else {
              e2 = Math.floor(Math.log(value) / Math.LN2);
              if (value * (c2 = Math.pow(2, -e2)) < 1) {
                e2--;
                c2 *= 2;
              }
              if (e2 + eBias >= 1) {
                value += rt2 / c2;
              } else {
                value += rt2 * Math.pow(2, 1 - eBias);
              }
              if (value * c2 >= 2) {
                e2++;
                c2 /= 2;
              }
              if (e2 + eBias >= eMax) {
                m2 = 0;
                e2 = eMax;
              } else if (e2 + eBias >= 1) {
                m2 = (value * c2 - 1) * Math.pow(2, mLen);
                e2 = e2 + eBias;
              } else {
                m2 = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
                e2 = 0;
              }
            }
            for (; mLen >= 8; buffer[offset + i2] = m2 & 255, i2 += d2, m2 /= 256, mLen -= 8) {
            }
            e2 = e2 << mLen | m2;
            eLen += mLen;
            for (; eLen > 0; buffer[offset + i2] = e2 & 255, i2 += d2, e2 /= 256, eLen -= 8) {
            }
            buffer[offset + i2 - d2] |= s2 * 128;
          };
        }, {}],
        88: [function(require2, module2, exports2) {
          if (typeof Object.create === "function") {
            module2.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              ctor.prototype = Object.create(superCtor.prototype, {
                constructor: {
                  value: ctor,
                  enumerable: false,
                  writable: true,
                  configurable: true
                }
              });
            };
          } else {
            module2.exports = function inherits(ctor, superCtor) {
              ctor.super_ = superCtor;
              var TempCtor = function() {
              };
              TempCtor.prototype = superCtor.prototype;
              ctor.prototype = new TempCtor();
              ctor.prototype.constructor = ctor;
            };
          }
        }, {}],
        89: [function(require2, module2, exports2) {
          module2.exports = function(obj) {
            return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
          };
          function isBuffer(obj) {
            return !!obj.constructor && typeof obj.constructor.isBuffer === "function" && obj.constructor.isBuffer(obj);
          }
          function isSlowBuffer(obj) {
            return typeof obj.readFloatLE === "function" && typeof obj.slice === "function" && isBuffer(obj.slice(
              0,
              0
            ));
          }
        }, {}],
        90: [function(require2, module2, exports2) {
          var Buffer2 = require2("safe-buffer").Buffer;
          var protocol = module2.exports;
          protocol.types = {
            0: "reserved",
            1: "connect",
            2: "connack",
            3: "publish",
            4: "puback",
            5: "pubrec",
            6: "pubrel",
            7: "pubcomp",
            8: "subscribe",
            9: "suback",
            10: "unsubscribe",
            11: "unsuback",
            12: "pingreq",
            13: "pingresp",
            14: "disconnect",
            15: "auth"
          };
          protocol.codes = {};
          for (var k2 in protocol.types) {
            var v2 = protocol.types[k2];
            protocol.codes[v2] = k2;
          }
          protocol.CMD_SHIFT = 4;
          protocol.CMD_MASK = 240;
          protocol.DUP_MASK = 8;
          protocol.QOS_MASK = 3;
          protocol.QOS_SHIFT = 1;
          protocol.RETAIN_MASK = 1;
          protocol.LENGTH_MASK = 127;
          protocol.LENGTH_FIN_MASK = 128;
          protocol.SESSIONPRESENT_MASK = 1;
          protocol.SESSIONPRESENT_HEADER = Buffer2.from([protocol.SESSIONPRESENT_MASK]);
          protocol.CONNACK_HEADER = Buffer2.from([protocol.codes["connack"] << protocol.CMD_SHIFT]);
          protocol.USERNAME_MASK = 128;
          protocol.PASSWORD_MASK = 64;
          protocol.WILL_RETAIN_MASK = 32;
          protocol.WILL_QOS_MASK = 24;
          protocol.WILL_QOS_SHIFT = 3;
          protocol.WILL_FLAG_MASK = 4;
          protocol.CLEAN_SESSION_MASK = 2;
          protocol.CONNECT_HEADER = Buffer2.from([protocol.codes["connect"] << protocol.CMD_SHIFT]);
          protocol.properties = {
            sessionExpiryInterval: 17,
            willDelayInterval: 24,
            receiveMaximum: 33,
            maximumPacketSize: 39,
            topicAliasMaximum: 34,
            requestResponseInformation: 25,
            requestProblemInformation: 23,
            userProperties: 38,
            authenticationMethod: 21,
            authenticationData: 22,
            payloadFormatIndicator: 1,
            messageExpiryInterval: 2,
            contentType: 3,
            responseTopic: 8,
            correlationData: 9,
            maximumQoS: 36,
            retainAvailable: 37,
            assignedClientIdentifier: 18,
            reasonString: 31,
            wildcardSubscriptionAvailable: 40,
            subscriptionIdentifiersAvailable: 41,
            sharedSubscriptionAvailable: 42,
            serverKeepAlive: 19,
            responseInformation: 26,
            serverReference: 28,
            topicAlias: 35,
            subscriptionIdentifier: 11
          };
          protocol.propertiesCodes = {};
          for (var prop in protocol.properties) {
            var id2 = protocol.properties[prop];
            protocol.propertiesCodes[id2] = prop;
          }
          protocol.propertiesTypes = {
            sessionExpiryInterval: "int32",
            willDelayInterval: "int32",
            receiveMaximum: "int16",
            maximumPacketSize: "int32",
            topicAliasMaximum: "int16",
            requestResponseInformation: "byte",
            requestProblemInformation: "byte",
            userProperties: "pair",
            authenticationMethod: "string",
            authenticationData: "binary",
            payloadFormatIndicator: "byte",
            messageExpiryInterval: "int32",
            contentType: "string",
            responseTopic: "string",
            correlationData: "binary",
            maximumQoS: "int8",
            retainAvailable: "byte",
            assignedClientIdentifier: "string",
            reasonString: "string",
            wildcardSubscriptionAvailable: "byte",
            subscriptionIdentifiersAvailable: "byte",
            sharedSubscriptionAvailable: "byte",
            serverKeepAlive: "int32",
            responseInformation: "string",
            serverReference: "string",
            topicAlias: "int16",
            subscriptionIdentifier: "var"
          };
          function genHeader(type) {
            return [0, 1, 2].map(function(qos) {
              return [0, 1].map(function(dup) {
                return [0, 1].map(function(retain) {
                  var buf = new Buffer2(1);
                  buf.writeUInt8(
                    protocol.codes[type] << protocol.CMD_SHIFT | (dup ? protocol.DUP_MASK : 0) | qos << protocol.QOS_SHIFT | retain,
                    0,
                    true
                  );
                  return buf;
                });
              });
            });
          }
          protocol.PUBLISH_HEADER = genHeader("publish");
          protocol.SUBSCRIBE_HEADER = genHeader("subscribe");
          protocol.SUBSCRIBE_OPTIONS_QOS_MASK = 3;
          protocol.SUBSCRIBE_OPTIONS_NL_MASK = 1;
          protocol.SUBSCRIBE_OPTIONS_NL_SHIFT = 2;
          protocol.SUBSCRIBE_OPTIONS_RAP_MASK = 1;
          protocol.SUBSCRIBE_OPTIONS_RAP_SHIFT = 3;
          protocol.SUBSCRIBE_OPTIONS_RH_MASK = 3;
          protocol.SUBSCRIBE_OPTIONS_RH_SHIFT = 4;
          protocol.SUBSCRIBE_OPTIONS_RH = [0, 16, 32];
          protocol.SUBSCRIBE_OPTIONS_NL = 4;
          protocol.SUBSCRIBE_OPTIONS_RAP = 8;
          protocol.SUBSCRIBE_OPTIONS_QOS = [0, 1, 2];
          protocol.UNSUBSCRIBE_HEADER = genHeader("unsubscribe");
          protocol.ACKS = {
            unsuback: genHeader("unsuback"),
            puback: genHeader("puback"),
            pubcomp: genHeader("pubcomp"),
            pubrel: genHeader("pubrel"),
            pubrec: genHeader("pubrec")
          };
          protocol.SUBACK_HEADER = Buffer2.from([protocol.codes["suback"] << protocol.CMD_SHIFT]);
          protocol.VERSION3 = Buffer2.from([3]);
          protocol.VERSION4 = Buffer2.from([4]);
          protocol.VERSION5 = Buffer2.from([5]);
          protocol.QOS = [0, 1, 2].map(function(qos) {
            return Buffer2.from([qos]);
          });
          protocol.EMPTY = {
            pingreq: Buffer2.from([protocol.codes["pingreq"] << 4, 0]),
            pingresp: Buffer2.from([protocol.codes["pingresp"] << 4, 0]),
            disconnect: Buffer2.from([protocol.codes["disconnect"] << 4, 0])
          };
        }, {
          "safe-buffer": 118
        }],
        91: [function(require2, module2, exports2) {
          var Buffer2 = require2("safe-buffer").Buffer;
          var writeToStream = require2("./writeToStream");
          var EE2 = require2("events").EventEmitter;
          var inherits = require2("inherits");
          function generate(packet, opts) {
            var stream = new Accumulator();
            writeToStream(packet, stream, opts);
            return stream.concat();
          }
          function Accumulator() {
            this._array = new Array(20);
            this._i = 0;
          }
          inherits(Accumulator, EE2);
          Accumulator.prototype.write = function(chunk) {
            this._array[this._i++] = chunk;
            return true;
          };
          Accumulator.prototype.concat = function() {
            var length = 0;
            var lengths = new Array(this._array.length);
            var list = this._array;
            var pos = 0;
            var i2;
            var result;
            for (i2 = 0; i2 < list.length && list[i2] !== void 0; i2++) {
              if (typeof list[i2] !== "string")
                lengths[i2] = list[i2].length;
              else
                lengths[i2] = Buffer2.byteLength(list[i2]);
              length += lengths[i2];
            }
            result = Buffer2.allocUnsafe(length);
            for (i2 = 0; i2 < list.length && list[i2] !== void 0; i2++) {
              if (typeof list[i2] !== "string") {
                list[i2].copy(result, pos);
                pos += lengths[i2];
              } else {
                result.write(list[i2], pos);
                pos += lengths[i2];
              }
            }
            return result;
          };
          module2.exports = generate;
        }, {
          "./writeToStream": 97,
          "events": 83,
          "inherits": 88,
          "safe-buffer": 118
        }],
        92: [function(require2, module2, exports2) {
          exports2.parser = require2("./parser");
          exports2.generate = require2("./generate");
          exports2.writeToStream = require2("./writeToStream");
        }, {
          "./generate": 91,
          "./parser": 96,
          "./writeToStream": 97
        }],
        93: [function(require2, module2, exports2) {
          var DuplexStream = require2("readable-stream/duplex"), util = require2("util"), Buffer2 = require2("safe-buffer").Buffer;
          function BufferList(callback) {
            if (!(this instanceof BufferList))
              return new BufferList(callback);
            this._bufs = [];
            this.length = 0;
            if (typeof callback == "function") {
              this._callback = callback;
              var piper = function piper2(err) {
                if (this._callback) {
                  this._callback(err);
                  this._callback = null;
                }
              }.bind(this);
              this.on("pipe", function onPipe(src) {
                src.on("error", piper);
              });
              this.on("unpipe", function onUnpipe(src) {
                src.removeListener("error", piper);
              });
            } else {
              this.append(callback);
            }
            DuplexStream.call(this);
          }
          util.inherits(BufferList, DuplexStream);
          BufferList.prototype._offset = function _offset(offset) {
            var tot = 0, i2 = 0, _t2;
            if (offset === 0)
              return [0, 0];
            for (; i2 < this._bufs.length; i2++) {
              _t2 = tot + this._bufs[i2].length;
              if (offset < _t2 || i2 == this._bufs.length - 1)
                return [i2, offset - tot];
              tot = _t2;
            }
          };
          BufferList.prototype.append = function append(buf) {
            var i2 = 0;
            if (Buffer2.isBuffer(buf)) {
              this._appendBuffer(buf);
            } else if (Array.isArray(buf)) {
              for (; i2 < buf.length; i2++)
                this.append(buf[i2]);
            } else if (buf instanceof BufferList) {
              for (; i2 < buf._bufs.length; i2++)
                this.append(buf._bufs[i2]);
            } else if (buf != null) {
              if (typeof buf == "number")
                buf = buf.toString();
              this._appendBuffer(Buffer2.from(buf));
            }
            return this;
          };
          BufferList.prototype._appendBuffer = function appendBuffer(buf) {
            this._bufs.push(buf);
            this.length += buf.length;
          };
          BufferList.prototype._write = function _write(buf, encoding, callback) {
            this._appendBuffer(buf);
            if (typeof callback == "function")
              callback();
          };
          BufferList.prototype._read = function _read(size) {
            if (!this.length)
              return this.push(null);
            size = Math.min(size, this.length);
            this.push(this.slice(0, size));
            this.consume(size);
          };
          BufferList.prototype.end = function end(chunk) {
            DuplexStream.prototype.end.call(this, chunk);
            if (this._callback) {
              this._callback(null, this.slice());
              this._callback = null;
            }
          };
          BufferList.prototype.get = function get(index2) {
            return this.slice(index2, index2 + 1)[0];
          };
          BufferList.prototype.slice = function slice(start, end) {
            if (typeof start == "number" && start < 0)
              start += this.length;
            if (typeof end == "number" && end < 0)
              end += this.length;
            return this.copy(null, 0, start, end);
          };
          BufferList.prototype.copy = function copy(dst, dstStart, srcStart, srcEnd) {
            if (typeof srcStart != "number" || srcStart < 0)
              srcStart = 0;
            if (typeof srcEnd != "number" || srcEnd > this.length)
              srcEnd = this.length;
            if (srcStart >= this.length)
              return dst || Buffer2.alloc(0);
            if (srcEnd <= 0)
              return dst || Buffer2.alloc(0);
            var copy2 = !!dst, off = this._offset(srcStart), len = srcEnd - srcStart, bytes = len, bufoff = copy2 && dstStart || 0, start = off[1], l2, i2;
            if (srcStart === 0 && srcEnd == this.length) {
              if (!copy2) {
                return this._bufs.length === 1 ? this._bufs[0] : Buffer2.concat(this._bufs, this.length);
              }
              for (i2 = 0; i2 < this._bufs.length; i2++) {
                this._bufs[i2].copy(dst, bufoff);
                bufoff += this._bufs[i2].length;
              }
              return dst;
            }
            if (bytes <= this._bufs[off[0]].length - start) {
              return copy2 ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes) : this._bufs[off[0]].slice(start, start + bytes);
            }
            if (!copy2)
              dst = Buffer2.allocUnsafe(len);
            for (i2 = off[0]; i2 < this._bufs.length; i2++) {
              l2 = this._bufs[i2].length - start;
              if (bytes > l2) {
                this._bufs[i2].copy(dst, bufoff, start);
              } else {
                this._bufs[i2].copy(dst, bufoff, start, start + bytes);
                break;
              }
              bufoff += l2;
              bytes -= l2;
              if (start)
                start = 0;
            }
            return dst;
          };
          BufferList.prototype.shallowSlice = function shallowSlice(start, end) {
            start = start || 0;
            end = end || this.length;
            if (start < 0)
              start += this.length;
            if (end < 0)
              end += this.length;
            var startOffset = this._offset(start), endOffset = this._offset(end), buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1);
            if (endOffset[1] == 0)
              buffers.pop();
            else
              buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1]);
            if (startOffset[1] != 0)
              buffers[0] = buffers[0].slice(startOffset[1]);
            return new BufferList(buffers);
          };
          BufferList.prototype.toString = function toString(encoding, start, end) {
            return this.slice(start, end).toString(encoding);
          };
          BufferList.prototype.consume = function consume(bytes) {
            while (this._bufs.length) {
              if (bytes >= this._bufs[0].length) {
                bytes -= this._bufs[0].length;
                this.length -= this._bufs[0].length;
                this._bufs.shift();
              } else {
                this._bufs[0] = this._bufs[0].slice(bytes);
                this.length -= bytes;
                break;
              }
            }
            return this;
          };
          BufferList.prototype.duplicate = function duplicate() {
            var i2 = 0, copy = new BufferList();
            for (; i2 < this._bufs.length; i2++)
              copy.append(this._bufs[i2]);
            return copy;
          };
          BufferList.prototype.destroy = function destroy() {
            this._bufs.length = 0;
            this.length = 0;
            this.push(null);
          };
          (function() {
            var methods = {
              "readDoubleBE": 8,
              "readDoubleLE": 8,
              "readFloatBE": 4,
              "readFloatLE": 4,
              "readInt32BE": 4,
              "readInt32LE": 4,
              "readUInt32BE": 4,
              "readUInt32LE": 4,
              "readInt16BE": 2,
              "readInt16LE": 2,
              "readUInt16BE": 2,
              "readUInt16LE": 2,
              "readInt8": 1,
              "readUInt8": 1
            };
            for (var m2 in methods) {
              (function(m3) {
                BufferList.prototype[m3] = function(offset) {
                  return this.slice(offset, offset + methods[m3])[m3](0);
                };
              })(m2);
            }
          })();
          module2.exports = BufferList;
        }, {
          "readable-stream/duplex": 105,
          "safe-buffer": 118,
          "util": 136
        }],
        94: [function(require2, module2, exports2) {
          var Buffer2 = require2("safe-buffer").Buffer;
          var max = 65536;
          var cache = {};
          function generateBuffer(i2) {
            var buffer = Buffer2.allocUnsafe(2);
            buffer.writeUInt8(i2 >> 8, 0);
            buffer.writeUInt8(i2 & 255, 0 + 1);
            return buffer;
          }
          function generateCache() {
            for (var i2 = 0; i2 < max; i2++) {
              cache[i2] = generateBuffer(i2);
            }
          }
          function calcVariableByteIntLength(length) {
            if (length >= 0 && length < 128)
              return 1;
            else if (length >= 128 && length < 16384)
              return 2;
            else if (length >= 16384 && length < 2097152)
              return 3;
            else if (length >= 2097152 && length < 268435456)
              return 4;
            else
              return 0;
          }
          function genBufVariableByteInt(num) {
            var digit = 0;
            var pos = 0;
            var length = calcVariableByteIntLength(num);
            var buffer = Buffer2.allocUnsafe(length);
            do {
              digit = num % 128 | 0;
              num = num / 128 | 0;
              if (num > 0)
                digit = digit | 128;
              buffer.writeUInt8(digit, pos++);
            } while (num > 0);
            return {
              data: buffer,
              length
            };
          }
          function generate4ByteBuffer(num) {
            var buffer = Buffer2.allocUnsafe(4);
            buffer.writeUInt32BE(num, 0);
            return buffer;
          }
          module2.exports = {
            cache,
            generateCache,
            generateNumber: generateBuffer,
            genBufVariableByteInt,
            generate4ByteBuffer
          };
        }, {
          "safe-buffer": 118
        }],
        95: [function(require2, module2, exports2) {
          function Packet() {
            this.cmd = null;
            this.retain = false;
            this.qos = 0;
            this.dup = false;
            this.length = -1;
            this.topic = null;
            this.payload = null;
          }
          module2.exports = Packet;
        }, {}],
        96: [function(require2, module2, exports2) {
          var bl2 = require2("bl");
          var inherits = require2("inherits");
          var EE2 = require2("events").EventEmitter;
          var Packet = require2("./packet");
          var constants = require2("./constants");
          function Parser(opt) {
            if (!(this instanceof Parser))
              return new Parser(opt);
            this.settings = opt || {};
            this._states = [
              "_parseHeader",
              "_parseLength",
              "_parsePayload",
              "_newPacket"
            ];
            this._resetState();
          }
          inherits(Parser, EE2);
          Parser.prototype._resetState = function() {
            this.packet = new Packet();
            this.error = null;
            this._list = bl2();
            this._stateCounter = 0;
          };
          Parser.prototype.parse = function(buf) {
            if (this.error)
              this._resetState();
            this._list.append(buf);
            while ((this.packet.length !== -1 || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error) {
              this._stateCounter++;
              if (this._stateCounter >= this._states.length)
                this._stateCounter = 0;
            }
            return this._list.length;
          };
          Parser.prototype._parseHeader = function() {
            var zero = this._list.readUInt8(0);
            this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT];
            this.packet.retain = (zero & constants.RETAIN_MASK) !== 0;
            this.packet.qos = zero >> constants.QOS_SHIFT & constants.QOS_MASK;
            this.packet.dup = (zero & constants.DUP_MASK) !== 0;
            this._list.consume(1);
            return true;
          };
          Parser.prototype._parseLength = function() {
            var result = this._parseVarByteNum(true);
            if (result) {
              this.packet.length = result.value;
              this._list.consume(result.bytes);
            }
            return !!result;
          };
          Parser.prototype._parsePayload = function() {
            var result = false;
            if (this.packet.length === 0 || this._list.length >= this.packet.length) {
              this._pos = 0;
              switch (this.packet.cmd) {
                case "connect":
                  this._parseConnect();
                  break;
                case "connack":
                  this._parseConnack();
                  break;
                case "publish":
                  this._parsePublish();
                  break;
                case "puback":
                case "pubrec":
                case "pubrel":
                case "pubcomp":
                  this._parseConfirmation();
                  break;
                case "subscribe":
                  this._parseSubscribe();
                  break;
                case "suback":
                  this._parseSuback();
                  break;
                case "unsubscribe":
                  this._parseUnsubscribe();
                  break;
                case "unsuback":
                  this._parseUnsuback();
                  break;
                case "pingreq":
                case "pingresp":
                  break;
                case "disconnect":
                  this._parseDisconnect();
                  break;
                case "auth":
                  this._parseAuth();
                  break;
                default:
                  this._emitError(new Error("Not supported"));
              }
              result = true;
            }
            return result;
          };
          Parser.prototype._parseConnect = function() {
            var protocolId;
            var clientId;
            var topic;
            var payload;
            var password;
            var username;
            var flags = {};
            var packet = this.packet;
            protocolId = this._parseString();
            if (protocolId === null)
              return this._emitError(new Error("Cannot parse protocolId"));
            if (protocolId !== "MQTT" && protocolId !== "MQIsdp") {
              return this._emitError(new Error("Invalid protocolId"));
            }
            packet.protocolId = protocolId;
            if (this._pos >= this._list.length)
              return this._emitError(new Error("Packet too short"));
            packet.protocolVersion = this._list.readUInt8(this._pos);
            if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {
              return this._emitError(new Error("Invalid protocol version"));
            }
            this._pos++;
            if (this._pos >= this._list.length) {
              return this._emitError(new Error("Packet too short"));
            }
            flags.username = this._list.readUInt8(this._pos) & constants.USERNAME_MASK;
            flags.password = this._list.readUInt8(this._pos) & constants.PASSWORD_MASK;
            flags.will = this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK;
            if (flags.will) {
              packet.will = {};
              packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0;
              packet.will.qos = (this._list.readUInt8(this._pos) & constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT;
            }
            packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0;
            this._pos++;
            packet.keepalive = this._parseNum();
            if (packet.keepalive === -1)
              return this._emitError(new Error("Packet too short"));
            if (packet.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            clientId = this._parseString();
            if (clientId === null)
              return this._emitError(new Error("Packet too short"));
            packet.clientId = clientId;
            if (flags.will) {
              if (packet.protocolVersion === 5) {
                var willProperties = this._parseProperties();
                if (Object.getOwnPropertyNames(willProperties).length) {
                  packet.will.properties = willProperties;
                }
              }
              topic = this._parseString();
              if (topic === null)
                return this._emitError(new Error("Cannot parse will topic"));
              packet.will.topic = topic;
              payload = this._parseBuffer();
              if (payload === null)
                return this._emitError(new Error("Cannot parse will payload"));
              packet.will.payload = payload;
            }
            if (flags.username) {
              username = this._parseString();
              if (username === null)
                return this._emitError(new Error("Cannot parse username"));
              packet.username = username;
            }
            if (flags.password) {
              password = this._parseBuffer();
              if (password === null)
                return this._emitError(new Error("Cannot parse password"));
              packet.password = password;
            }
            this.settings = packet;
            return packet;
          };
          Parser.prototype._parseConnack = function() {
            var packet = this.packet;
            if (this._list.length < 2)
              return null;
            packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK);
            if (this.settings.protocolVersion === 5) {
              packet.reasonCode = this._list.readUInt8(this._pos++);
            } else {
              packet.returnCode = this._list.readUInt8(this._pos++);
            }
            if (packet.returnCode === -1 || packet.reasonCode === -1)
              return this._emitError(new Error(
                "Cannot parse return code"
              ));
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
          };
          Parser.prototype._parsePublish = function() {
            var packet = this.packet;
            packet.topic = this._parseString();
            if (packet.topic === null)
              return this._emitError(new Error("Cannot parse topic"));
            if (packet.qos > 0) {
              if (!this._parseMessageId()) {
                return;
              }
            }
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            packet.payload = this._list.slice(this._pos, packet.length);
          };
          Parser.prototype._parseSubscribe = function() {
            var packet = this.packet;
            var topic;
            var options;
            var qos;
            var rh2;
            var rap;
            var nl2;
            var subscription;
            if (packet.qos !== 1) {
              return this._emitError(new Error("Wrong subscribe header"));
            }
            packet.subscriptions = [];
            if (!this._parseMessageId()) {
              return;
            }
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            while (this._pos < packet.length) {
              topic = this._parseString();
              if (topic === null)
                return this._emitError(new Error("Cannot parse topic"));
              options = this._parseByte();
              qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK;
              nl2 = (options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0;
              rap = (options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0;
              rh2 = options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT & constants.SUBSCRIBE_OPTIONS_RH_MASK;
              subscription = {
                topic,
                qos
              };
              if (this.settings.protocolVersion === 5) {
                subscription.nl = nl2;
                subscription.rap = rap;
                subscription.rh = rh2;
              }
              packet.subscriptions.push(subscription);
            }
          };
          Parser.prototype._parseSuback = function() {
            var packet = this.packet;
            this.packet.granted = [];
            if (!this._parseMessageId()) {
              return;
            }
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            while (this._pos < this.packet.length) {
              this.packet.granted.push(this._list.readUInt8(this._pos++));
            }
          };
          Parser.prototype._parseUnsubscribe = function() {
            var packet = this.packet;
            packet.unsubscriptions = [];
            if (!this._parseMessageId()) {
              return;
            }
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            while (this._pos < packet.length) {
              var topic;
              topic = this._parseString();
              if (topic === null)
                return this._emitError(new Error("Cannot parse topic"));
              packet.unsubscriptions.push(topic);
            }
          };
          Parser.prototype._parseUnsuback = function() {
            var packet = this.packet;
            if (!this._parseMessageId())
              return this._emitError(new Error("Cannot parse messageId"));
            if (this.settings.protocolVersion === 5) {
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
              packet.granted = [];
              while (this._pos < this.packet.length) {
                this.packet.granted.push(this._list.readUInt8(this._pos++));
              }
            }
          };
          Parser.prototype._parseConfirmation = function() {
            var packet = this.packet;
            this._parseMessageId();
            if (this.settings.protocolVersion === 5) {
              if (packet.length > 2) {
                packet.reasonCode = this._parseByte();
                var properties = this._parseProperties();
                if (Object.getOwnPropertyNames(properties).length) {
                  packet.properties = properties;
                }
              }
            }
            return true;
          };
          Parser.prototype._parseDisconnect = function() {
            var packet = this.packet;
            if (this.settings.protocolVersion === 5) {
              packet.reasonCode = this._parseByte();
              var properties = this._parseProperties();
              if (Object.getOwnPropertyNames(properties).length) {
                packet.properties = properties;
              }
            }
            return true;
          };
          Parser.prototype._parseAuth = function() {
            var packet = this.packet;
            if (this.settings.protocolVersion !== 5) {
              return this._emitError(new Error("Not supported auth packet for this version MQTT"));
            }
            packet.reasonCode = this._parseByte();
            var properties = this._parseProperties();
            if (Object.getOwnPropertyNames(properties).length) {
              packet.properties = properties;
            }
            return true;
          };
          Parser.prototype._parseMessageId = function() {
            var packet = this.packet;
            packet.messageId = this._parseNum();
            if (packet.messageId === null) {
              this._emitError(new Error("Cannot parse messageId"));
              return false;
            }
            return true;
          };
          Parser.prototype._parseString = function(maybeBuffer) {
            var length = this._parseNum();
            var result;
            var end = length + this._pos;
            if (length === -1 || end > this._list.length || end > this.packet.length)
              return null;
            result = this._list.toString("utf8", this._pos, end);
            this._pos += length;
            return result;
          };
          Parser.prototype._parseStringPair = function() {
            return {
              name: this._parseString(),
              value: this._parseString()
            };
          };
          Parser.prototype._parseBuffer = function() {
            var length = this._parseNum();
            var result;
            var end = length + this._pos;
            if (length === -1 || end > this._list.length || end > this.packet.length)
              return null;
            result = this._list.slice(this._pos, end);
            this._pos += length;
            return result;
          };
          Parser.prototype._parseNum = function() {
            if (this._list.length - this._pos < 2)
              return -1;
            var result = this._list.readUInt16BE(this._pos);
            this._pos += 2;
            return result;
          };
          Parser.prototype._parse4ByteNum = function() {
            if (this._list.length - this._pos < 4)
              return -1;
            var result = this._list.readUInt32BE(this._pos);
            this._pos += 4;
            return result;
          };
          Parser.prototype._parseVarByteNum = function(fullInfoFlag) {
            var bytes = 0;
            var mul = 1;
            var length = 0;
            var result = true;
            var current;
            var padding = this._pos ? this._pos : 0;
            while (bytes < 5) {
              current = this._list.readUInt8(padding + bytes++);
              length += mul * (current & constants.LENGTH_MASK);
              mul *= 128;
              if ((current & constants.LENGTH_FIN_MASK) === 0)
                break;
              if (this._list.length <= bytes) {
                result = false;
                break;
              }
            }
            if (padding) {
              this._pos += bytes;
            }
            result = result ? fullInfoFlag ? {
              bytes,
              value: length
            } : length : false;
            return result;
          };
          Parser.prototype._parseByte = function() {
            var result = this._list.readUInt8(this._pos);
            this._pos++;
            return result;
          };
          Parser.prototype._parseByType = function(type) {
            switch (type) {
              case "byte": {
                return this._parseByte() !== 0;
              }
              case "int8": {
                return this._parseByte();
              }
              case "int16": {
                return this._parseNum();
              }
              case "int32": {
                return this._parse4ByteNum();
              }
              case "var": {
                return this._parseVarByteNum();
              }
              case "string": {
                return this._parseString();
              }
              case "pair": {
                return this._parseStringPair();
              }
              case "binary": {
                return this._parseBuffer();
              }
            }
          };
          Parser.prototype._parseProperties = function() {
            var length = this._parseVarByteNum();
            var start = this._pos;
            var end = start + length;
            var result = {};
            while (this._pos < end) {
              var type = this._parseByte();
              var name = constants.propertiesCodes[type];
              if (!name) {
                this._emitError(new Error("Unknown property"));
                return false;
              }
              if (name === "userProperties") {
                if (!result[name]) {
                  result[name] = {};
                }
                var currentUserProperty = this._parseByType(constants.propertiesTypes[name]);
                result[name][currentUserProperty.name] = currentUserProperty.value;
                continue;
              }
              result[name] = this._parseByType(constants.propertiesTypes[name]);
            }
            return result;
          };
          Parser.prototype._newPacket = function() {
            if (this.packet) {
              this._list.consume(this.packet.length);
              this.emit("packet", this.packet);
            }
            this.packet = new Packet();
            this._pos = 0;
            return true;
          };
          Parser.prototype._emitError = function(err) {
            this.error = err;
            this.emit("error", err);
          };
          module2.exports = Parser;
        }, {
          "./constants": 90,
          "./packet": 95,
          "bl": 93,
          "events": 83,
          "inherits": 88
        }],
        97: [function(require2, module2, exports2) {
          var protocol = require2("./constants");
          var Buffer2 = require2("safe-buffer").Buffer;
          var empty = Buffer2.allocUnsafe(0);
          var zeroBuf = Buffer2.from([0]);
          var numbers = require2("./numbers");
          var nextTick = require2("process-nextick-args").nextTick;
          var numCache = numbers.cache;
          var generateNumber = numbers.generateNumber;
          var generateCache = numbers.generateCache;
          var genBufVariableByteInt = numbers.genBufVariableByteInt;
          var generate4ByteBuffer = numbers.generate4ByteBuffer;
          var writeNumber = writeNumberCached;
          var toGenerate = true;
          function generate(packet, stream, opts) {
            if (stream.cork) {
              stream.cork();
              nextTick(uncork, stream);
            }
            if (toGenerate) {
              toGenerate = false;
              generateCache();
            }
            switch (packet.cmd) {
              case "connect":
                return connect(packet, stream);
              case "connack":
                return connack(packet, stream, opts);
              case "publish":
                return publish(packet, stream, opts);
              case "puback":
              case "pubrec":
              case "pubrel":
              case "pubcomp":
                return confirmation(packet, stream, opts);
              case "subscribe":
                return subscribe2(packet, stream, opts);
              case "suback":
                return suback(packet, stream, opts);
              case "unsubscribe":
                return unsubscribe(packet, stream, opts);
              case "unsuback":
                return unsuback(packet, stream, opts);
              case "pingreq":
              case "pingresp":
                return emptyPacket(packet, stream);
              case "disconnect":
                return disconnect(packet, stream, opts);
              case "auth":
                return auth(packet, stream, opts);
              default:
                stream.emit("error", new Error("Unknown command"));
                return false;
            }
          }
          Object.defineProperty(generate, "cacheNumbers", {
            get: function() {
              return writeNumber === writeNumberCached;
            },
            set: function(value) {
              if (value) {
                if (!numCache || Object.keys(numCache).length === 0)
                  toGenerate = true;
                writeNumber = writeNumberCached;
              } else {
                toGenerate = false;
                writeNumber = writeNumberGenerated;
              }
            }
          });
          function uncork(stream) {
            stream.uncork();
          }
          function connect(packet, stream, opts) {
            var settings = packet || {};
            var protocolId = settings.protocolId || "MQTT";
            var protocolVersion = settings.protocolVersion || 4;
            var will = settings.will;
            var clean = settings.clean;
            var keepalive = settings.keepalive || 0;
            var clientId = settings.clientId || "";
            var username = settings.username;
            var password = settings.password;
            var properties = settings.properties;
            if (clean === void 0)
              clean = true;
            var length = 0;
            if (!protocolId || typeof protocolId !== "string" && !Buffer2.isBuffer(protocolId)) {
              stream.emit("error", new Error("Invalid protocolId"));
              return false;
            } else
              length += protocolId.length + 2;
            if (protocolVersion !== 3 && protocolVersion !== 4 && protocolVersion !== 5) {
              stream.emit("error", new Error("Invalid protocol version"));
              return false;
            } else
              length += 1;
            if ((typeof clientId === "string" || Buffer2.isBuffer(clientId)) && (clientId || protocolVersion === 4) && (clientId || clean)) {
              length += clientId.length + 2;
            } else {
              if (protocolVersion < 4) {
                stream.emit("error", new Error("clientId must be supplied before 3.1.1"));
                return false;
              }
              if (clean * 1 === 0) {
                stream.emit("error", new Error("clientId must be given if cleanSession set to 0"));
                return false;
              }
            }
            if (typeof keepalive !== "number" || keepalive < 0 || keepalive > 65535 || keepalive % 1 !== 0) {
              stream.emit("error", new Error("Invalid keepalive"));
              return false;
            } else
              length += 2;
            length += 1;
            if (protocolVersion === 5) {
              var propertiesData = getProperties(stream, properties);
              length += propertiesData.length;
            }
            if (will) {
              if (typeof will !== "object") {
                stream.emit("error", new Error("Invalid will"));
                return false;
              }
              if (!will.topic || typeof will.topic !== "string") {
                stream.emit("error", new Error("Invalid will topic"));
                return false;
              } else {
                length += Buffer2.byteLength(will.topic) + 2;
              }
              if (will.payload) {
                if (will.payload.length >= 0) {
                  if (typeof will.payload === "string") {
                    length += Buffer2.byteLength(will.payload) + 2;
                  } else {
                    length += will.payload.length + 2;
                  }
                } else {
                  stream.emit("error", new Error("Invalid will payload"));
                  return false;
                }
                var willProperties = {};
                if (protocolVersion === 5) {
                  willProperties = getProperties(stream, will.properties);
                  length += willProperties.length;
                }
              }
            }
            var providedUsername = false;
            if (username != null) {
              if (isStringOrBuffer(username)) {
                providedUsername = true;
                length += Buffer2.byteLength(username) + 2;
              } else {
                stream.emit("error", new Error("Invalid username"));
                return false;
              }
            }
            if (password != null) {
              if (!providedUsername) {
                stream.emit("error", new Error("Username is required to use password"));
                return false;
              }
              if (isStringOrBuffer(password)) {
                length += byteLength(password) + 2;
              } else {
                stream.emit("error", new Error("Invalid password"));
                return false;
              }
            }
            stream.write(protocol.CONNECT_HEADER);
            writeVarByteInt(stream, length);
            writeStringOrBuffer(stream, protocolId);
            stream.write(
              protocolVersion === 4 ? protocol.VERSION4 : protocolVersion === 5 ? protocol.VERSION5 : protocol.VERSION3
            );
            var flags = 0;
            flags |= username != null ? protocol.USERNAME_MASK : 0;
            flags |= password != null ? protocol.PASSWORD_MASK : 0;
            flags |= will && will.retain ? protocol.WILL_RETAIN_MASK : 0;
            flags |= will && will.qos ? will.qos << protocol.WILL_QOS_SHIFT : 0;
            flags |= will ? protocol.WILL_FLAG_MASK : 0;
            flags |= clean ? protocol.CLEAN_SESSION_MASK : 0;
            stream.write(Buffer2.from([flags]));
            writeNumber(stream, keepalive);
            if (protocolVersion === 5) {
              propertiesData.write();
            }
            writeStringOrBuffer(stream, clientId);
            if (will) {
              if (protocolVersion === 5) {
                willProperties.write();
              }
              writeString(stream, will.topic);
              writeStringOrBuffer(stream, will.payload);
            }
            if (username != null) {
              writeStringOrBuffer(stream, username);
            }
            if (password != null) {
              writeStringOrBuffer(stream, password);
            }
            return true;
          }
          function connack(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var rc2 = version === 5 ? settings.reasonCode : settings.returnCode;
            var properties = settings.properties;
            var length = 2;
            if (typeof rc2 !== "number") {
              stream.emit("error", new Error("Invalid return code"));
              return false;
            }
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getProperties(stream, properties);
              length += propertiesData.length;
            }
            stream.write(protocol.CONNACK_HEADER);
            writeVarByteInt(stream, length);
            stream.write(settings.sessionPresent ? protocol.SESSIONPRESENT_HEADER : zeroBuf);
            stream.write(Buffer2.from([rc2]));
            if (propertiesData != null) {
              propertiesData.write();
            }
            return true;
          }
          function publish(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var qos = settings.qos || 0;
            var retain = settings.retain ? protocol.RETAIN_MASK : 0;
            var topic = settings.topic;
            var payload = settings.payload || empty;
            var id2 = settings.messageId;
            var properties = settings.properties;
            var length = 0;
            if (typeof topic === "string")
              length += Buffer2.byteLength(topic) + 2;
            else if (Buffer2.isBuffer(topic))
              length += topic.length + 2;
            else {
              stream.emit("error", new Error("Invalid topic"));
              return false;
            }
            if (!Buffer2.isBuffer(payload))
              length += Buffer2.byteLength(payload);
            else
              length += payload.length;
            if (qos && typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            } else if (qos)
              length += 2;
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getProperties(stream, properties);
              length += propertiesData.length;
            }
            stream.write(protocol.PUBLISH_HEADER[qos][settings.dup ? 1 : 0][retain ? 1 : 0]);
            writeVarByteInt(stream, length);
            writeNumber(stream, byteLength(topic));
            stream.write(topic);
            if (qos > 0)
              writeNumber(stream, id2);
            if (propertiesData != null) {
              propertiesData.write();
            }
            return stream.write(payload);
          }
          function confirmation(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var type = settings.cmd || "puback";
            var id2 = settings.messageId;
            var dup = settings.dup && type === "pubrel" ? protocol.DUP_MASK : 0;
            var qos = 0;
            var reasonCode = settings.reasonCode;
            var properties = settings.properties;
            var length = version === 5 ? 3 : 2;
            if (type === "pubrel")
              qos = 1;
            if (typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            }
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);
              if (!propertiesData) {
                return false;
              }
              length += propertiesData.length;
            }
            stream.write(protocol.ACKS[type][qos][dup][0]);
            writeVarByteInt(stream, length);
            writeNumber(stream, id2);
            if (version === 5) {
              stream.write(Buffer2.from([reasonCode]));
            }
            if (propertiesData !== null) {
              propertiesData.write();
            }
            return true;
          }
          function subscribe2(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var dup = settings.dup ? protocol.DUP_MASK : 0;
            var id2 = settings.messageId;
            var subs = settings.subscriptions;
            var properties = settings.properties;
            var length = 0;
            if (typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            } else
              length += 2;
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getProperties(stream, properties);
              length += propertiesData.length;
            }
            if (typeof subs === "object" && subs.length) {
              for (var i2 = 0; i2 < subs.length; i2 += 1) {
                var itopic = subs[i2].topic;
                var iqos = subs[i2].qos;
                if (typeof itopic !== "string") {
                  stream.emit("error", new Error("Invalid subscriptions - invalid topic"));
                  return false;
                }
                if (typeof iqos !== "number") {
                  stream.emit("error", new Error("Invalid subscriptions - invalid qos"));
                  return false;
                }
                if (version === 5) {
                  var nl2 = subs[i2].nl || false;
                  if (typeof nl2 !== "boolean") {
                    stream.emit("error", new Error("Invalid subscriptions - invalid No Local"));
                    return false;
                  }
                  var rap = subs[i2].rap || false;
                  if (typeof rap !== "boolean") {
                    stream.emit("error", new Error("Invalid subscriptions - invalid Retain as Published"));
                    return false;
                  }
                  var rh2 = subs[i2].rh || 0;
                  if (typeof rh2 !== "number" || rh2 > 2) {
                    stream.emit("error", new Error("Invalid subscriptions - invalid Retain Handling"));
                    return false;
                  }
                }
                length += Buffer2.byteLength(itopic) + 2 + 1;
              }
            } else {
              stream.emit("error", new Error("Invalid subscriptions"));
              return false;
            }
            stream.write(protocol.SUBSCRIBE_HEADER[1][dup ? 1 : 0][0]);
            writeVarByteInt(stream, length);
            writeNumber(stream, id2);
            if (propertiesData !== null) {
              propertiesData.write();
            }
            var result = true;
            for (var j2 = 0; j2 < subs.length; j2++) {
              var sub = subs[j2];
              var jtopic = sub.topic;
              var jqos = sub.qos;
              var jnl = +sub.nl;
              var jrap = +sub.rap;
              var jrh = sub.rh;
              var joptions;
              writeString(stream, jtopic);
              joptions = protocol.SUBSCRIBE_OPTIONS_QOS[jqos];
              if (version === 5) {
                joptions |= jnl ? protocol.SUBSCRIBE_OPTIONS_NL : 0;
                joptions |= jrap ? protocol.SUBSCRIBE_OPTIONS_RAP : 0;
                joptions |= jrh ? protocol.SUBSCRIBE_OPTIONS_RH[jrh] : 0;
              }
              result = stream.write(Buffer2.from([joptions]));
            }
            return result;
          }
          function suback(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var id2 = settings.messageId;
            var granted = settings.granted;
            var properties = settings.properties;
            var length = 0;
            if (typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            } else
              length += 2;
            if (typeof granted === "object" && granted.length) {
              for (var i2 = 0; i2 < granted.length; i2 += 1) {
                if (typeof granted[i2] !== "number") {
                  stream.emit("error", new Error("Invalid qos vector"));
                  return false;
                }
                length += 1;
              }
            } else {
              stream.emit("error", new Error("Invalid qos vector"));
              return false;
            }
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);
              if (!propertiesData) {
                return false;
              }
              length += propertiesData.length;
            }
            stream.write(protocol.SUBACK_HEADER);
            writeVarByteInt(stream, length);
            writeNumber(stream, id2);
            if (propertiesData !== null) {
              propertiesData.write();
            }
            return stream.write(Buffer2.from(granted));
          }
          function unsubscribe(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var id2 = settings.messageId;
            var dup = settings.dup ? protocol.DUP_MASK : 0;
            var unsubs = settings.unsubscriptions;
            var properties = settings.properties;
            var length = 0;
            if (typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            } else {
              length += 2;
            }
            if (typeof unsubs === "object" && unsubs.length) {
              for (var i2 = 0; i2 < unsubs.length; i2 += 1) {
                if (typeof unsubs[i2] !== "string") {
                  stream.emit("error", new Error("Invalid unsubscriptions"));
                  return false;
                }
                length += Buffer2.byteLength(unsubs[i2]) + 2;
              }
            } else {
              stream.emit("error", new Error("Invalid unsubscriptions"));
              return false;
            }
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getProperties(stream, properties);
              length += propertiesData.length;
            }
            stream.write(protocol.UNSUBSCRIBE_HEADER[1][dup ? 1 : 0][0]);
            writeVarByteInt(stream, length);
            writeNumber(stream, id2);
            if (propertiesData !== null) {
              propertiesData.write();
            }
            var result = true;
            for (var j2 = 0; j2 < unsubs.length; j2++) {
              result = writeString(stream, unsubs[j2]);
            }
            return result;
          }
          function unsuback(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var id2 = settings.messageId;
            var dup = settings.dup ? protocol.DUP_MASK : 0;
            var granted = settings.granted;
            var properties = settings.properties;
            var type = settings.cmd;
            var qos = 0;
            var length = 2;
            if (typeof id2 !== "number") {
              stream.emit("error", new Error("Invalid messageId"));
              return false;
            }
            if (version === 5) {
              if (typeof granted === "object" && granted.length) {
                for (var i2 = 0; i2 < granted.length; i2 += 1) {
                  if (typeof granted[i2] !== "number") {
                    stream.emit("error", new Error("Invalid qos vector"));
                    return false;
                  }
                  length += 1;
                }
              } else {
                stream.emit("error", new Error("Invalid qos vector"));
                return false;
              }
            }
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);
              if (!propertiesData) {
                return false;
              }
              length += propertiesData.length;
            }
            stream.write(protocol.ACKS[type][qos][dup][0]);
            writeVarByteInt(stream, length);
            writeNumber(stream, id2);
            if (propertiesData !== null) {
              propertiesData.write();
            }
            if (version === 5) {
              stream.write(Buffer2.from(granted));
            }
            return true;
          }
          function emptyPacket(packet, stream, opts) {
            return stream.write(protocol.EMPTY[packet.cmd]);
          }
          function disconnect(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var reasonCode = settings.reasonCode;
            var properties = settings.properties;
            var length = version === 5 ? 1 : 0;
            var propertiesData = null;
            if (version === 5) {
              propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);
              if (!propertiesData) {
                return false;
              }
              length += propertiesData.length;
            }
            stream.write(Buffer2.from([protocol.codes["disconnect"] << 4]));
            writeVarByteInt(stream, length);
            if (version === 5) {
              stream.write(Buffer2.from([reasonCode]));
            }
            if (propertiesData !== null) {
              propertiesData.write();
            }
            return true;
          }
          function auth(packet, stream, opts) {
            var version = opts ? opts.protocolVersion : 4;
            var settings = packet || {};
            var reasonCode = settings.reasonCode;
            var properties = settings.properties;
            var length = version === 5 ? 1 : 0;
            if (version !== 5)
              stream.emit("error", new Error("Invalid mqtt version for auth packet"));
            var propertiesData = getPropertiesByMaximumPacketSize(stream, properties, opts, length);
            if (!propertiesData) {
              return false;
            }
            length += propertiesData.length;
            stream.write(Buffer2.from([protocol.codes["auth"] << 4]));
            writeVarByteInt(stream, length);
            stream.write(Buffer2.from([reasonCode]));
            if (propertiesData !== null) {
              propertiesData.write();
            }
            return true;
          }
          var varByteIntCache = {};
          function writeVarByteInt(stream, num) {
            var buffer = varByteIntCache[num];
            if (!buffer) {
              buffer = genBufVariableByteInt(num).data;
              if (num < 16384)
                varByteIntCache[num] = buffer;
            }
            stream.write(buffer);
          }
          function writeString(stream, string) {
            var strlen = Buffer2.byteLength(string);
            writeNumber(stream, strlen);
            stream.write(string, "utf8");
          }
          function writeStringPair(stream, name, value) {
            writeString(stream, name);
            writeString(stream, value);
          }
          function writeNumberCached(stream, number) {
            return stream.write(numCache[number]);
          }
          function writeNumberGenerated(stream, number) {
            return stream.write(generateNumber(number));
          }
          function write4ByteNumber(stream, number) {
            return stream.write(generate4ByteBuffer(number));
          }
          function writeStringOrBuffer(stream, toWrite) {
            if (typeof toWrite === "string") {
              writeString(stream, toWrite);
            } else if (toWrite) {
              writeNumber(stream, toWrite.length);
              stream.write(toWrite);
            } else
              writeNumber(stream, 0);
          }
          function getProperties(stream, properties) {
            if (typeof properties !== "object" || properties.length != null) {
              return {
                length: 1,
                write: function() {
                  writeProperties(stream, {}, 0);
                }
              };
            }
            var propertiesLength = 0;
            function getLengthProperty(name) {
              var type = protocol.propertiesTypes[name];
              var value = properties[name];
              var length = 0;
              switch (type) {
                case "byte": {
                  if (typeof value !== "boolean") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + 1;
                  break;
                }
                case "int8": {
                  if (typeof value !== "number") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + 1;
                  break;
                }
                case "binary": {
                  if (value && value === null) {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + Buffer2.byteLength(value) + 2;
                  break;
                }
                case "int16": {
                  if (typeof value !== "number") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + 2;
                  break;
                }
                case "int32": {
                  if (typeof value !== "number") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + 4;
                  break;
                }
                case "var": {
                  if (typeof value !== "number") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + genBufVariableByteInt(value).length;
                  break;
                }
                case "string": {
                  if (typeof value !== "string") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += 1 + 2 + Buffer2.byteLength(value.toString());
                  break;
                }
                case "pair": {
                  if (typeof value !== "object") {
                    stream.emit("error", new Error("Invalid " + name));
                    return false;
                  }
                  length += Object.getOwnPropertyNames(value).reduce(function(result, name2) {
                    result += 1 + 2 + Buffer2.byteLength(name2.toString()) + 2 + Buffer2.byteLength(value[name2].toString());
                    return result;
                  }, 0);
                  break;
                }
                default: {
                  stream.emit("error", new Error("Invalid property " + name));
                  return false;
                }
              }
              return length;
            }
            if (properties) {
              for (var propName in properties) {
                var propLength = getLengthProperty(propName);
                if (!propLength)
                  return false;
                propertiesLength += propLength;
              }
            }
            var propertiesLengthLength = genBufVariableByteInt(propertiesLength).length;
            return {
              length: propertiesLengthLength + propertiesLength,
              write: function() {
                writeProperties(stream, properties, propertiesLength);
              }
            };
          }
          function getPropertiesByMaximumPacketSize(stream, properties, opts, length) {
            var mayEmptyProps = ["reasonString", "userProperties"];
            var maximumPacketSize = opts && opts.properties && opts.properties.maximumPacketSize ? opts.properties.maximumPacketSize : 0;
            var propertiesData = getProperties(stream, properties);
            if (maximumPacketSize) {
              while (length + propertiesData.length > maximumPacketSize) {
                var currentMayEmptyProp = mayEmptyProps.shift();
                if (currentMayEmptyProp && properties[currentMayEmptyProp]) {
                  delete properties[currentMayEmptyProp];
                  propertiesData = getProperties(stream, properties);
                } else {
                  return false;
                }
              }
            }
            return propertiesData;
          }
          function writeProperties(stream, properties, propertiesLength) {
            writeVarByteInt(stream, propertiesLength);
            for (var propName in properties) {
              if (properties.hasOwnProperty(propName) && properties[propName] !== null) {
                var value = properties[propName];
                var type = protocol.propertiesTypes[propName];
                switch (type) {
                  case "byte": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    stream.write(Buffer2.from([+value]));
                    break;
                  }
                  case "int8": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    stream.write(Buffer2.from([value]));
                    break;
                  }
                  case "binary": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    writeStringOrBuffer(stream, value);
                    break;
                  }
                  case "int16": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    writeNumber(stream, value);
                    break;
                  }
                  case "int32": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    write4ByteNumber(stream, value);
                    break;
                  }
                  case "var": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    writeVarByteInt(stream, value);
                    break;
                  }
                  case "string": {
                    stream.write(Buffer2.from([protocol.properties[propName]]));
                    writeString(stream, value);
                    break;
                  }
                  case "pair": {
                    Object.getOwnPropertyNames(value).forEach(function(name) {
                      stream.write(Buffer2.from([protocol.properties[propName]]));
                      writeStringPair(stream, name.toString(), value[name].toString());
                    });
                    break;
                  }
                  default: {
                    stream.emit("error", new Error("Invalid property " + propName));
                    return false;
                  }
                }
              }
            }
          }
          function byteLength(bufOrString) {
            if (!bufOrString)
              return 0;
            else if (bufOrString instanceof Buffer2)
              return bufOrString.length;
            else
              return Buffer2.byteLength(bufOrString);
          }
          function isStringOrBuffer(field) {
            return typeof field === "string" || field instanceof Buffer2;
          }
          module2.exports = generate;
        }, {
          "./constants": 90,
          "./numbers": 94,
          "process-nextick-args": 99,
          "safe-buffer": 118
        }],
        98: [function(require2, module2, exports2) {
          var wrappy = require2("wrappy");
          module2.exports = wrappy(once);
          module2.exports.strict = wrappy(onceStrict);
          once.proto = once(function() {
            Object.defineProperty(Function.prototype, "once", {
              value: function() {
                return once(this);
              },
              configurable: true
            });
            Object.defineProperty(Function.prototype, "onceStrict", {
              value: function() {
                return onceStrict(this);
              },
              configurable: true
            });
          });
          function once(fn2) {
            var f2 = function() {
              if (f2.called)
                return f2.value;
              f2.called = true;
              return f2.value = fn2.apply(this, arguments);
            };
            f2.called = false;
            return f2;
          }
          function onceStrict(fn2) {
            var f2 = function() {
              if (f2.called)
                throw new Error(f2.onceError);
              f2.called = true;
              return f2.value = fn2.apply(this, arguments);
            };
            var name = fn2.name || "Function wrapped with `once`";
            f2.onceError = name + " shouldn't be called more than once";
            f2.called = false;
            return f2;
          }
        }, {
          "wrappy": 139
        }],
        99: [function(require2, module2, exports2) {
          (function(process) {
            if (typeof process === "undefined" || !process.version || process.version.indexOf("v0.") === 0 || process.version.indexOf("v1.") === 0 && process.version.indexOf("v1.8.") !== 0) {
              module2.exports = {
                nextTick
              };
            } else {
              module2.exports = process;
            }
            function nextTick(fn2, arg1, arg2, arg3) {
              if (typeof fn2 !== "function") {
                throw new TypeError('"callback" argument must be a function');
              }
              var len = arguments.length;
              var args, i2;
              switch (len) {
                case 0:
                case 1:
                  return process.nextTick(fn2);
                case 2:
                  return process.nextTick(function afterTickOne() {
                    fn2.call(null, arg1);
                  });
                case 3:
                  return process.nextTick(function afterTickTwo() {
                    fn2.call(null, arg1, arg2);
                  });
                case 4:
                  return process.nextTick(function afterTickThree() {
                    fn2.call(null, arg1, arg2, arg3);
                  });
                default:
                  args = new Array(len - 1);
                  i2 = 0;
                  while (i2 < args.length) {
                    args[i2++] = arguments[i2];
                  }
                  return process.nextTick(function afterTick() {
                    fn2.apply(null, args);
                  });
              }
            }
          }).call(this, require2("_process"));
        }, {
          "_process": 100
        }],
        100: [function(require2, module2, exports2) {
          var process = module2.exports = {};
          var cachedSetTimeout;
          var cachedClearTimeout;
          function defaultSetTimout() {
            throw new Error("setTimeout has not been defined");
          }
          function defaultClearTimeout() {
            throw new Error("clearTimeout has not been defined");
          }
          (function() {
            try {
              if (typeof setTimeout === "function") {
                cachedSetTimeout = setTimeout;
              } else {
                cachedSetTimeout = defaultSetTimout;
              }
            } catch (e2) {
              cachedSetTimeout = defaultSetTimout;
            }
            try {
              if (typeof clearTimeout === "function") {
                cachedClearTimeout = clearTimeout;
              } else {
                cachedClearTimeout = defaultClearTimeout;
              }
            } catch (e2) {
              cachedClearTimeout = defaultClearTimeout;
            }
          })();
          function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
              return setTimeout(fun, 0);
            }
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
              cachedSetTimeout = setTimeout;
              return setTimeout(fun, 0);
            }
            try {
              return cachedSetTimeout(fun, 0);
            } catch (e2) {
              try {
                return cachedSetTimeout.call(null, fun, 0);
              } catch (e3) {
                return cachedSetTimeout.call(this, fun, 0);
              }
            }
          }
          function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
              return clearTimeout(marker);
            }
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
              cachedClearTimeout = clearTimeout;
              return clearTimeout(marker);
            }
            try {
              return cachedClearTimeout(marker);
            } catch (e2) {
              try {
                return cachedClearTimeout.call(null, marker);
              } catch (e3) {
                return cachedClearTimeout.call(this, marker);
              }
            }
          }
          var queue = [];
          var draining = false;
          var currentQueue;
          var queueIndex = -1;
          function cleanUpNextTick() {
            if (!draining || !currentQueue) {
              return;
            }
            draining = false;
            if (currentQueue.length) {
              queue = currentQueue.concat(queue);
            } else {
              queueIndex = -1;
            }
            if (queue.length) {
              drainQueue();
            }
          }
          function drainQueue() {
            if (draining) {
              return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;
            var len = queue.length;
            while (len) {
              currentQueue = queue;
              queue = [];
              while (++queueIndex < len) {
                if (currentQueue) {
                  currentQueue[queueIndex].run();
                }
              }
              queueIndex = -1;
              len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
          }
          process.nextTick = function(fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
              for (var i2 = 1; i2 < arguments.length; i2++) {
                args[i2 - 1] = arguments[i2];
              }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
              runTimeout(drainQueue);
            }
          };
          function Item(fun, array) {
            this.fun = fun;
            this.array = array;
          }
          Item.prototype.run = function() {
            this.fun.apply(null, this.array);
          };
          process.title = "browser";
          process.browser = true;
          process.env = {};
          process.argv = [];
          process.version = "";
          process.versions = {};
          function noop() {
          }
          process.on = noop;
          process.addListener = noop;
          process.once = noop;
          process.off = noop;
          process.removeListener = noop;
          process.removeAllListeners = noop;
          process.emit = noop;
          process.prependListener = noop;
          process.prependOnceListener = noop;
          process.listeners = function(name) {
            return [];
          };
          process.binding = function(name) {
            throw new Error("process.binding is not supported");
          };
          process.cwd = function() {
            return "/";
          };
          process.chdir = function(dir) {
            throw new Error("process.chdir is not supported");
          };
          process.umask = function() {
            return 0;
          };
        }, {}],
        101: [function(require2, module2, exports2) {
          (function(global2) {
            (function(root) {
              var freeExports = typeof exports2 == "object" && exports2 && !exports2.nodeType && exports2;
              var freeModule = typeof module2 == "object" && module2 && !module2.nodeType && module2;
              var freeGlobal = typeof global2 == "object" && global2;
              if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
                root = freeGlobal;
              }
              var punycode, maxInt = 2147483647, base = 36, tMin = 1, tMax = 26, skew = 38, damp = 700, initialBias = 72, initialN = 128, delimiter = "-", regexPunycode = /^xn--/, regexNonASCII = /[^\x20-\x7E]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
                "overflow": "Overflow: input needs wider integers to process",
                "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                "invalid-input": "Invalid input"
              }, baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.fromCharCode, key;
              function error(type) {
                throw new RangeError(errors[type]);
              }
              function map(array, fn2) {
                var length = array.length;
                var result = [];
                while (length--) {
                  result[length] = fn2(array[length]);
                }
                return result;
              }
              function mapDomain(string, fn2) {
                var parts = string.split("@");
                var result = "";
                if (parts.length > 1) {
                  result = parts[0] + "@";
                  string = parts[1];
                }
                string = string.replace(regexSeparators, ".");
                var labels = string.split(".");
                var encoded = map(labels, fn2).join(".");
                return result + encoded;
              }
              function ucs2decode(string) {
                var output = [], counter = 0, length = string.length, value, extra;
                while (counter < length) {
                  value = string.charCodeAt(counter++);
                  if (value >= 55296 && value <= 56319 && counter < length) {
                    extra = string.charCodeAt(counter++);
                    if ((extra & 64512) == 56320) {
                      output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
                    } else {
                      output.push(value);
                      counter--;
                    }
                  } else {
                    output.push(value);
                  }
                }
                return output;
              }
              function ucs2encode(array) {
                return map(array, function(value) {
                  var output = "";
                  if (value > 65535) {
                    value -= 65536;
                    output += stringFromCharCode(value >>> 10 & 1023 | 55296);
                    value = 56320 | value & 1023;
                  }
                  output += stringFromCharCode(value);
                  return output;
                }).join("");
              }
              function basicToDigit(codePoint) {
                if (codePoint - 48 < 10) {
                  return codePoint - 22;
                }
                if (codePoint - 65 < 26) {
                  return codePoint - 65;
                }
                if (codePoint - 97 < 26) {
                  return codePoint - 97;
                }
                return base;
              }
              function digitToBasic(digit, flag) {
                return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
              }
              function adapt(delta, numPoints, firstTime) {
                var k2 = 0;
                delta = firstTime ? floor(delta / damp) : delta >> 1;
                delta += floor(delta / numPoints);
                for (; delta > baseMinusTMin * tMax >> 1; k2 += base) {
                  delta = floor(delta / baseMinusTMin);
                }
                return floor(k2 + (baseMinusTMin + 1) * delta / (delta + skew));
              }
              function decode(input) {
                var output = [], inputLength = input.length, out, i2 = 0, n2 = initialN, bias = initialBias, basic, j2, index2, oldi, w2, k2, digit, t2, baseMinusT;
                basic = input.lastIndexOf(delimiter);
                if (basic < 0) {
                  basic = 0;
                }
                for (j2 = 0; j2 < basic; ++j2) {
                  if (input.charCodeAt(j2) >= 128) {
                    error("not-basic");
                  }
                  output.push(input.charCodeAt(j2));
                }
                for (index2 = basic > 0 ? basic + 1 : 0; index2 < inputLength; ) {
                  for (oldi = i2, w2 = 1, k2 = base; ; k2 += base) {
                    if (index2 >= inputLength) {
                      error("invalid-input");
                    }
                    digit = basicToDigit(input.charCodeAt(index2++));
                    if (digit >= base || digit > floor((maxInt - i2) / w2)) {
                      error("overflow");
                    }
                    i2 += digit * w2;
                    t2 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
                    if (digit < t2) {
                      break;
                    }
                    baseMinusT = base - t2;
                    if (w2 > floor(maxInt / baseMinusT)) {
                      error("overflow");
                    }
                    w2 *= baseMinusT;
                  }
                  out = output.length + 1;
                  bias = adapt(i2 - oldi, out, oldi == 0);
                  if (floor(i2 / out) > maxInt - n2) {
                    error("overflow");
                  }
                  n2 += floor(i2 / out);
                  i2 %= out;
                  output.splice(i2++, 0, n2);
                }
                return ucs2encode(output);
              }
              function encode(input) {
                var n2, delta, handledCPCount, basicLength, bias, j2, m2, q2, k2, t2, currentValue, output = [], inputLength, handledCPCountPlusOne, baseMinusT, qMinusT;
                input = ucs2decode(input);
                inputLength = input.length;
                n2 = initialN;
                delta = 0;
                bias = initialBias;
                for (j2 = 0; j2 < inputLength; ++j2) {
                  currentValue = input[j2];
                  if (currentValue < 128) {
                    output.push(stringFromCharCode(currentValue));
                  }
                }
                handledCPCount = basicLength = output.length;
                if (basicLength) {
                  output.push(delimiter);
                }
                while (handledCPCount < inputLength) {
                  for (m2 = maxInt, j2 = 0; j2 < inputLength; ++j2) {
                    currentValue = input[j2];
                    if (currentValue >= n2 && currentValue < m2) {
                      m2 = currentValue;
                    }
                  }
                  handledCPCountPlusOne = handledCPCount + 1;
                  if (m2 - n2 > floor((maxInt - delta) / handledCPCountPlusOne)) {
                    error("overflow");
                  }
                  delta += (m2 - n2) * handledCPCountPlusOne;
                  n2 = m2;
                  for (j2 = 0; j2 < inputLength; ++j2) {
                    currentValue = input[j2];
                    if (currentValue < n2 && ++delta > maxInt) {
                      error("overflow");
                    }
                    if (currentValue == n2) {
                      for (q2 = delta, k2 = base; ; k2 += base) {
                        t2 = k2 <= bias ? tMin : k2 >= bias + tMax ? tMax : k2 - bias;
                        if (q2 < t2) {
                          break;
                        }
                        qMinusT = q2 - t2;
                        baseMinusT = base - t2;
                        output.push(
                          stringFromCharCode(digitToBasic(t2 + qMinusT % baseMinusT, 0))
                        );
                        q2 = floor(qMinusT / baseMinusT);
                      }
                      output.push(stringFromCharCode(digitToBasic(q2, 0)));
                      bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                      delta = 0;
                      ++handledCPCount;
                    }
                  }
                  ++delta;
                  ++n2;
                }
                return output.join("");
              }
              function toUnicode(input) {
                return mapDomain(input, function(string) {
                  return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
                });
              }
              function toASCII(input) {
                return mapDomain(input, function(string) {
                  return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
                });
              }
              punycode = {
                /**
                 * A string representing the current Punycode.js version number.
                 * @memberOf punycode
                 * @type String
                 */
                "version": "1.4.1",
                /**
                 * An object of methods to convert from JavaScript's internal character
                 * representation (UCS-2) to Unicode code points, and back.
                 * @see <https://mathiasbynens.be/notes/javascript-encoding>
                 * @memberOf punycode
                 * @type Object
                 */
                "ucs2": {
                  "decode": ucs2decode,
                  "encode": ucs2encode
                },
                "decode": decode,
                "encode": encode,
                "toASCII": toASCII,
                "toUnicode": toUnicode
              };
              if (freeExports && freeModule) {
                if (module2.exports == freeExports) {
                  freeModule.exports = punycode;
                } else {
                  for (key in punycode) {
                    punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
                  }
                }
              } else {
                root.punycode = punycode;
              }
            })(this);
          }).call(this, typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {}],
        102: [function(require2, module2, exports2) {
          function hasOwnProperty2(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
          }
          module2.exports = function(qs2, sep, eq, options) {
            sep = sep || "&";
            eq = eq || "=";
            var obj = {};
            if (typeof qs2 !== "string" || qs2.length === 0) {
              return obj;
            }
            var regexp = /\+/g;
            qs2 = qs2.split(sep);
            var maxKeys = 1e3;
            if (options && typeof options.maxKeys === "number") {
              maxKeys = options.maxKeys;
            }
            var len = qs2.length;
            if (maxKeys > 0 && len > maxKeys) {
              len = maxKeys;
            }
            for (var i2 = 0; i2 < len; ++i2) {
              var x2 = qs2[i2].replace(regexp, "%20"), idx = x2.indexOf(eq), kstr, vstr, k2, v2;
              if (idx >= 0) {
                kstr = x2.substr(0, idx);
                vstr = x2.substr(idx + 1);
              } else {
                kstr = x2;
                vstr = "";
              }
              k2 = decodeURIComponent(kstr);
              v2 = decodeURIComponent(vstr);
              if (!hasOwnProperty2(obj, k2)) {
                obj[k2] = v2;
              } else if (isArray(obj[k2])) {
                obj[k2].push(v2);
              } else {
                obj[k2] = [obj[k2], v2];
              }
            }
            return obj;
          };
          var isArray = Array.isArray || function(xs2) {
            return Object.prototype.toString.call(xs2) === "[object Array]";
          };
        }, {}],
        103: [function(require2, module2, exports2) {
          var stringifyPrimitive = function(v2) {
            switch (typeof v2) {
              case "string":
                return v2;
              case "boolean":
                return v2 ? "true" : "false";
              case "number":
                return isFinite(v2) ? v2 : "";
              default:
                return "";
            }
          };
          module2.exports = function(obj, sep, eq, name) {
            sep = sep || "&";
            eq = eq || "=";
            if (obj === null) {
              obj = void 0;
            }
            if (typeof obj === "object") {
              return map(objectKeys(obj), function(k2) {
                var ks2 = encodeURIComponent(stringifyPrimitive(k2)) + eq;
                if (isArray(obj[k2])) {
                  return map(obj[k2], function(v2) {
                    return ks2 + encodeURIComponent(stringifyPrimitive(v2));
                  }).join(sep);
                } else {
                  return ks2 + encodeURIComponent(stringifyPrimitive(obj[k2]));
                }
              }).join(sep);
            }
            if (!name)
              return "";
            return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
          };
          var isArray = Array.isArray || function(xs2) {
            return Object.prototype.toString.call(xs2) === "[object Array]";
          };
          function map(xs2, f2) {
            if (xs2.map)
              return xs2.map(f2);
            var res = [];
            for (var i2 = 0; i2 < xs2.length; i2++) {
              res.push(f2(xs2[i2], i2));
            }
            return res;
          }
          var objectKeys = Object.keys || function(obj) {
            var res = [];
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key))
                res.push(key);
            }
            return res;
          };
        }, {}],
        104: [function(require2, module2, exports2) {
          exports2.decode = exports2.parse = require2("./decode");
          exports2.encode = exports2.stringify = require2("./encode");
        }, {
          "./decode": 102,
          "./encode": 103
        }],
        105: [function(require2, module2, exports2) {
          module2.exports = require2("./lib/_stream_duplex.js");
        }, {
          "./lib/_stream_duplex.js": 106
        }],
        106: [function(require2, module2, exports2) {
          var pna = require2("process-nextick-args");
          var objectKeys = Object.keys || function(obj) {
            var keys2 = [];
            for (var key in obj) {
              keys2.push(key);
            }
            return keys2;
          };
          module2.exports = Duplex;
          var util = require2("core-util-is");
          util.inherits = require2("inherits");
          var Readable = require2("./_stream_readable");
          var Writable = require2("./_stream_writable");
          util.inherits(Duplex, Readable);
          {
            var keys = objectKeys(Writable.prototype);
            for (var v2 = 0; v2 < keys.length; v2++) {
              var method = keys[v2];
              if (!Duplex.prototype[method])
                Duplex.prototype[method] = Writable.prototype[method];
            }
          }
          function Duplex(options) {
            if (!(this instanceof Duplex))
              return new Duplex(options);
            Readable.call(this, options);
            Writable.call(this, options);
            if (options && options.readable === false)
              this.readable = false;
            if (options && options.writable === false)
              this.writable = false;
            this.allowHalfOpen = true;
            if (options && options.allowHalfOpen === false)
              this.allowHalfOpen = false;
            this.once("end", onend);
          }
          Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
            // making it explicit this property is not enumerable
            // because otherwise some prototype manipulation in
            // userland will fail
            enumerable: false,
            get: function() {
              return this._writableState.highWaterMark;
            }
          });
          function onend() {
            if (this.allowHalfOpen || this._writableState.ended)
              return;
            pna.nextTick(onEndNT, this);
          }
          function onEndNT(self2) {
            self2.end();
          }
          Object.defineProperty(Duplex.prototype, "destroyed", {
            get: function() {
              if (this._readableState === void 0 || this._writableState === void 0) {
                return false;
              }
              return this._readableState.destroyed && this._writableState.destroyed;
            },
            set: function(value) {
              if (this._readableState === void 0 || this._writableState === void 0) {
                return;
              }
              this._readableState.destroyed = value;
              this._writableState.destroyed = value;
            }
          });
          Duplex.prototype._destroy = function(err, cb2) {
            this.push(null);
            this.end();
            pna.nextTick(cb2, err);
          };
        }, {
          "./_stream_readable": 108,
          "./_stream_writable": 110,
          "core-util-is": 13,
          "inherits": 88,
          "process-nextick-args": 99
        }],
        107: [function(require2, module2, exports2) {
          module2.exports = PassThrough;
          var Transform = require2("./_stream_transform");
          var util = require2("core-util-is");
          util.inherits = require2("inherits");
          util.inherits(PassThrough, Transform);
          function PassThrough(options) {
            if (!(this instanceof PassThrough))
              return new PassThrough(options);
            Transform.call(this, options);
          }
          PassThrough.prototype._transform = function(chunk, encoding, cb2) {
            cb2(null, chunk);
          };
        }, {
          "./_stream_transform": 109,
          "core-util-is": 13,
          "inherits": 88
        }],
        108: [function(require2, module2, exports2) {
          (function(process, global2) {
            var pna = require2("process-nextick-args");
            module2.exports = Readable;
            var isArray = require2("isarray");
            var Duplex;
            Readable.ReadableState = ReadableState;
            require2("events").EventEmitter;
            var EElistenerCount = function(emitter, type) {
              return emitter.listeners(type).length;
            };
            var Stream2 = require2("./internal/streams/stream");
            var Buffer2 = require2("safe-buffer").Buffer;
            var OurUint8Array = global2.Uint8Array || function() {
            };
            function _uint8ArrayToBuffer(chunk) {
              return Buffer2.from(chunk);
            }
            function _isUint8Array(obj) {
              return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
            }
            var util = require2("core-util-is");
            util.inherits = require2("inherits");
            var debugUtil = require2("util");
            var debug = void 0;
            if (debugUtil && debugUtil.debuglog) {
              debug = debugUtil.debuglog("stream");
            } else {
              debug = function() {
              };
            }
            var BufferList = require2("./internal/streams/BufferList");
            var destroyImpl = require2("./internal/streams/destroy");
            var StringDecoder;
            util.inherits(Readable, Stream2);
            var kProxyEvents = ["error", "close", "destroy", "pause", "resume"];
            function prependListener(emitter, event, fn2) {
              if (typeof emitter.prependListener === "function")
                return emitter.prependListener(event, fn2);
              if (!emitter._events || !emitter._events[event])
                emitter.on(event, fn2);
              else if (isArray(emitter._events[event]))
                emitter._events[event].unshift(fn2);
              else
                emitter._events[event] = [fn2, emitter._events[event]];
            }
            function ReadableState(options, stream) {
              Duplex = Duplex || require2("./_stream_duplex");
              options = options || {};
              var isDuplex = stream instanceof Duplex;
              this.objectMode = !!options.objectMode;
              if (isDuplex)
                this.objectMode = this.objectMode || !!options.readableObjectMode;
              var hwm = options.highWaterMark;
              var readableHwm = options.readableHighWaterMark;
              var defaultHwm = this.objectMode ? 16 : 16 * 1024;
              if (hwm || hwm === 0)
                this.highWaterMark = hwm;
              else if (isDuplex && (readableHwm || readableHwm === 0))
                this.highWaterMark = readableHwm;
              else
                this.highWaterMark = defaultHwm;
              this.highWaterMark = Math.floor(this.highWaterMark);
              this.buffer = new BufferList();
              this.length = 0;
              this.pipes = null;
              this.pipesCount = 0;
              this.flowing = null;
              this.ended = false;
              this.endEmitted = false;
              this.reading = false;
              this.sync = true;
              this.needReadable = false;
              this.emittedReadable = false;
              this.readableListening = false;
              this.resumeScheduled = false;
              this.destroyed = false;
              this.defaultEncoding = options.defaultEncoding || "utf8";
              this.awaitDrain = 0;
              this.readingMore = false;
              this.decoder = null;
              this.encoding = null;
              if (options.encoding) {
                if (!StringDecoder)
                  StringDecoder = require2("string_decoder/").StringDecoder;
                this.decoder = new StringDecoder(options.encoding);
                this.encoding = options.encoding;
              }
            }
            function Readable(options) {
              Duplex = Duplex || require2("./_stream_duplex");
              if (!(this instanceof Readable))
                return new Readable(options);
              this._readableState = new ReadableState(options, this);
              this.readable = true;
              if (options) {
                if (typeof options.read === "function")
                  this._read = options.read;
                if (typeof options.destroy === "function")
                  this._destroy = options.destroy;
              }
              Stream2.call(this);
            }
            Object.defineProperty(Readable.prototype, "destroyed", {
              get: function() {
                if (this._readableState === void 0) {
                  return false;
                }
                return this._readableState.destroyed;
              },
              set: function(value) {
                if (!this._readableState) {
                  return;
                }
                this._readableState.destroyed = value;
              }
            });
            Readable.prototype.destroy = destroyImpl.destroy;
            Readable.prototype._undestroy = destroyImpl.undestroy;
            Readable.prototype._destroy = function(err, cb2) {
              this.push(null);
              cb2(err);
            };
            Readable.prototype.push = function(chunk, encoding) {
              var state = this._readableState;
              var skipChunkCheck;
              if (!state.objectMode) {
                if (typeof chunk === "string") {
                  encoding = encoding || state.defaultEncoding;
                  if (encoding !== state.encoding) {
                    chunk = Buffer2.from(chunk, encoding);
                    encoding = "";
                  }
                  skipChunkCheck = true;
                }
              } else {
                skipChunkCheck = true;
              }
              return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
            };
            Readable.prototype.unshift = function(chunk) {
              return readableAddChunk(this, chunk, null, true, false);
            };
            function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
              var state = stream._readableState;
              if (chunk === null) {
                state.reading = false;
                onEofChunk(stream, state);
              } else {
                var er2;
                if (!skipChunkCheck)
                  er2 = chunkInvalid(state, chunk);
                if (er2) {
                  stream.emit("error", er2);
                } else if (state.objectMode || chunk && chunk.length > 0) {
                  if (typeof chunk !== "string" && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer2.prototype) {
                    chunk = _uint8ArrayToBuffer(chunk);
                  }
                  if (addToFront) {
                    if (state.endEmitted)
                      stream.emit("error", new Error("stream.unshift() after end event"));
                    else
                      addChunk(stream, state, chunk, true);
                  } else if (state.ended) {
                    stream.emit("error", new Error("stream.push() after EOF"));
                  } else {
                    state.reading = false;
                    if (state.decoder && !encoding) {
                      chunk = state.decoder.write(chunk);
                      if (state.objectMode || chunk.length !== 0)
                        addChunk(stream, state, chunk, false);
                      else
                        maybeReadMore(stream, state);
                    } else {
                      addChunk(stream, state, chunk, false);
                    }
                  }
                } else if (!addToFront) {
                  state.reading = false;
                }
              }
              return needMoreData(state);
            }
            function addChunk(stream, state, chunk, addToFront) {
              if (state.flowing && state.length === 0 && !state.sync) {
                stream.emit("data", chunk);
                stream.read(0);
              } else {
                state.length += state.objectMode ? 1 : chunk.length;
                if (addToFront)
                  state.buffer.unshift(chunk);
                else
                  state.buffer.push(chunk);
                if (state.needReadable)
                  emitReadable(stream);
              }
              maybeReadMore(stream, state);
            }
            function chunkInvalid(state, chunk) {
              var er2;
              if (!_isUint8Array(chunk) && typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
                er2 = new TypeError("Invalid non-string/buffer chunk");
              }
              return er2;
            }
            function needMoreData(state) {
              return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
            }
            Readable.prototype.isPaused = function() {
              return this._readableState.flowing === false;
            };
            Readable.prototype.setEncoding = function(enc) {
              if (!StringDecoder)
                StringDecoder = require2("string_decoder/").StringDecoder;
              this._readableState.decoder = new StringDecoder(enc);
              this._readableState.encoding = enc;
              return this;
            };
            var MAX_HWM = 8388608;
            function computeNewHighWaterMark(n2) {
              if (n2 >= MAX_HWM) {
                n2 = MAX_HWM;
              } else {
                n2--;
                n2 |= n2 >>> 1;
                n2 |= n2 >>> 2;
                n2 |= n2 >>> 4;
                n2 |= n2 >>> 8;
                n2 |= n2 >>> 16;
                n2++;
              }
              return n2;
            }
            function howMuchToRead(n2, state) {
              if (n2 <= 0 || state.length === 0 && state.ended)
                return 0;
              if (state.objectMode)
                return 1;
              if (n2 !== n2) {
                if (state.flowing && state.length)
                  return state.buffer.head.data.length;
                else
                  return state.length;
              }
              if (n2 > state.highWaterMark)
                state.highWaterMark = computeNewHighWaterMark(n2);
              if (n2 <= state.length)
                return n2;
              if (!state.ended) {
                state.needReadable = true;
                return 0;
              }
              return state.length;
            }
            Readable.prototype.read = function(n2) {
              debug("read", n2);
              n2 = parseInt(n2, 10);
              var state = this._readableState;
              var nOrig = n2;
              if (n2 !== 0)
                state.emittedReadable = false;
              if (n2 === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
                debug("read: emitReadable", state.length, state.ended);
                if (state.length === 0 && state.ended)
                  endReadable(this);
                else
                  emitReadable(this);
                return null;
              }
              n2 = howMuchToRead(n2, state);
              if (n2 === 0 && state.ended) {
                if (state.length === 0)
                  endReadable(this);
                return null;
              }
              var doRead = state.needReadable;
              debug("need readable", doRead);
              if (state.length === 0 || state.length - n2 < state.highWaterMark) {
                doRead = true;
                debug("length less than watermark", doRead);
              }
              if (state.ended || state.reading) {
                doRead = false;
                debug("reading or ended", doRead);
              } else if (doRead) {
                debug("do read");
                state.reading = true;
                state.sync = true;
                if (state.length === 0)
                  state.needReadable = true;
                this._read(state.highWaterMark);
                state.sync = false;
                if (!state.reading)
                  n2 = howMuchToRead(nOrig, state);
              }
              var ret;
              if (n2 > 0)
                ret = fromList(n2, state);
              else
                ret = null;
              if (ret === null) {
                state.needReadable = true;
                n2 = 0;
              } else {
                state.length -= n2;
              }
              if (state.length === 0) {
                if (!state.ended)
                  state.needReadable = true;
                if (nOrig !== n2 && state.ended)
                  endReadable(this);
              }
              if (ret !== null)
                this.emit("data", ret);
              return ret;
            };
            function onEofChunk(stream, state) {
              if (state.ended)
                return;
              if (state.decoder) {
                var chunk = state.decoder.end();
                if (chunk && chunk.length) {
                  state.buffer.push(chunk);
                  state.length += state.objectMode ? 1 : chunk.length;
                }
              }
              state.ended = true;
              emitReadable(stream);
            }
            function emitReadable(stream) {
              var state = stream._readableState;
              state.needReadable = false;
              if (!state.emittedReadable) {
                debug("emitReadable", state.flowing);
                state.emittedReadable = true;
                if (state.sync)
                  pna.nextTick(emitReadable_, stream);
                else
                  emitReadable_(stream);
              }
            }
            function emitReadable_(stream) {
              debug("emit readable");
              stream.emit("readable");
              flow(stream);
            }
            function maybeReadMore(stream, state) {
              if (!state.readingMore) {
                state.readingMore = true;
                pna.nextTick(maybeReadMore_, stream, state);
              }
            }
            function maybeReadMore_(stream, state) {
              var len = state.length;
              while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
                debug("maybeReadMore read 0");
                stream.read(0);
                if (len === state.length)
                  break;
                else
                  len = state.length;
              }
              state.readingMore = false;
            }
            Readable.prototype._read = function(n2) {
              this.emit("error", new Error("_read() is not implemented"));
            };
            Readable.prototype.pipe = function(dest, pipeOpts) {
              var src = this;
              var state = this._readableState;
              switch (state.pipesCount) {
                case 0:
                  state.pipes = dest;
                  break;
                case 1:
                  state.pipes = [state.pipes, dest];
                  break;
                default:
                  state.pipes.push(dest);
                  break;
              }
              state.pipesCount += 1;
              debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
              var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;
              var endFn = doEnd ? onend : unpipe;
              if (state.endEmitted)
                pna.nextTick(endFn);
              else
                src.once("end", endFn);
              dest.on("unpipe", onunpipe);
              function onunpipe(readable, unpipeInfo) {
                debug("onunpipe");
                if (readable === src) {
                  if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
                    unpipeInfo.hasUnpiped = true;
                    cleanup();
                  }
                }
              }
              function onend() {
                debug("onend");
                dest.end();
              }
              var ondrain = pipeOnDrain(src);
              dest.on("drain", ondrain);
              var cleanedUp = false;
              function cleanup() {
                debug("cleanup");
                dest.removeListener("close", onclose);
                dest.removeListener("finish", onfinish);
                dest.removeListener("drain", ondrain);
                dest.removeListener("error", onerror);
                dest.removeListener("unpipe", onunpipe);
                src.removeListener("end", onend);
                src.removeListener("end", unpipe);
                src.removeListener("data", ondata);
                cleanedUp = true;
                if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain))
                  ondrain();
              }
              var increasedAwaitDrain = false;
              src.on("data", ondata);
              function ondata(chunk) {
                debug("ondata");
                increasedAwaitDrain = false;
                var ret = dest.write(chunk);
                if (false === ret && !increasedAwaitDrain) {
                  if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
                    debug("false write response, pause", src._readableState.awaitDrain);
                    src._readableState.awaitDrain++;
                    increasedAwaitDrain = true;
                  }
                  src.pause();
                }
              }
              function onerror(er2) {
                debug("onerror", er2);
                unpipe();
                dest.removeListener("error", onerror);
                if (EElistenerCount(dest, "error") === 0)
                  dest.emit("error", er2);
              }
              prependListener(dest, "error", onerror);
              function onclose() {
                dest.removeListener("finish", onfinish);
                unpipe();
              }
              dest.once("close", onclose);
              function onfinish() {
                debug("onfinish");
                dest.removeListener("close", onclose);
                unpipe();
              }
              dest.once("finish", onfinish);
              function unpipe() {
                debug("unpipe");
                src.unpipe(dest);
              }
              dest.emit("pipe", src);
              if (!state.flowing) {
                debug("pipe resume");
                src.resume();
              }
              return dest;
            };
            function pipeOnDrain(src) {
              return function() {
                var state = src._readableState;
                debug("pipeOnDrain", state.awaitDrain);
                if (state.awaitDrain)
                  state.awaitDrain--;
                if (state.awaitDrain === 0 && EElistenerCount(src, "data")) {
                  state.flowing = true;
                  flow(src);
                }
              };
            }
            Readable.prototype.unpipe = function(dest) {
              var state = this._readableState;
              var unpipeInfo = {
                hasUnpiped: false
              };
              if (state.pipesCount === 0)
                return this;
              if (state.pipesCount === 1) {
                if (dest && dest !== state.pipes)
                  return this;
                if (!dest)
                  dest = state.pipes;
                state.pipes = null;
                state.pipesCount = 0;
                state.flowing = false;
                if (dest)
                  dest.emit("unpipe", this, unpipeInfo);
                return this;
              }
              if (!dest) {
                var dests = state.pipes;
                var len = state.pipesCount;
                state.pipes = null;
                state.pipesCount = 0;
                state.flowing = false;
                for (var i2 = 0; i2 < len; i2++) {
                  dests[i2].emit("unpipe", this, unpipeInfo);
                }
                return this;
              }
              var index2 = indexOf(state.pipes, dest);
              if (index2 === -1)
                return this;
              state.pipes.splice(index2, 1);
              state.pipesCount -= 1;
              if (state.pipesCount === 1)
                state.pipes = state.pipes[0];
              dest.emit("unpipe", this, unpipeInfo);
              return this;
            };
            Readable.prototype.on = function(ev2, fn2) {
              var res = Stream2.prototype.on.call(this, ev2, fn2);
              if (ev2 === "data") {
                if (this._readableState.flowing !== false)
                  this.resume();
              } else if (ev2 === "readable") {
                var state = this._readableState;
                if (!state.endEmitted && !state.readableListening) {
                  state.readableListening = state.needReadable = true;
                  state.emittedReadable = false;
                  if (!state.reading) {
                    pna.nextTick(nReadingNextTick, this);
                  } else if (state.length) {
                    emitReadable(this);
                  }
                }
              }
              return res;
            };
            Readable.prototype.addListener = Readable.prototype.on;
            function nReadingNextTick(self2) {
              debug("readable nexttick read 0");
              self2.read(0);
            }
            Readable.prototype.resume = function() {
              var state = this._readableState;
              if (!state.flowing) {
                debug("resume");
                state.flowing = true;
                resume(this, state);
              }
              return this;
            };
            function resume(stream, state) {
              if (!state.resumeScheduled) {
                state.resumeScheduled = true;
                pna.nextTick(resume_, stream, state);
              }
            }
            function resume_(stream, state) {
              if (!state.reading) {
                debug("resume read 0");
                stream.read(0);
              }
              state.resumeScheduled = false;
              state.awaitDrain = 0;
              stream.emit("resume");
              flow(stream);
              if (state.flowing && !state.reading)
                stream.read(0);
            }
            Readable.prototype.pause = function() {
              debug("call pause flowing=%j", this._readableState.flowing);
              if (false !== this._readableState.flowing) {
                debug("pause");
                this._readableState.flowing = false;
                this.emit("pause");
              }
              return this;
            };
            function flow(stream) {
              var state = stream._readableState;
              debug("flow", state.flowing);
              while (state.flowing && stream.read() !== null) {
              }
            }
            Readable.prototype.wrap = function(stream) {
              var _this = this;
              var state = this._readableState;
              var paused = false;
              stream.on("end", function() {
                debug("wrapped end");
                if (state.decoder && !state.ended) {
                  var chunk = state.decoder.end();
                  if (chunk && chunk.length)
                    _this.push(chunk);
                }
                _this.push(null);
              });
              stream.on("data", function(chunk) {
                debug("wrapped data");
                if (state.decoder)
                  chunk = state.decoder.write(chunk);
                if (state.objectMode && (chunk === null || chunk === void 0))
                  return;
                else if (!state.objectMode && (!chunk || !chunk.length))
                  return;
                var ret = _this.push(chunk);
                if (!ret) {
                  paused = true;
                  stream.pause();
                }
              });
              for (var i2 in stream) {
                if (this[i2] === void 0 && typeof stream[i2] === "function") {
                  this[i2] = function(method) {
                    return function() {
                      return stream[method].apply(stream, arguments);
                    };
                  }(i2);
                }
              }
              for (var n2 = 0; n2 < kProxyEvents.length; n2++) {
                stream.on(kProxyEvents[n2], this.emit.bind(this, kProxyEvents[n2]));
              }
              this._read = function(n3) {
                debug("wrapped _read", n3);
                if (paused) {
                  paused = false;
                  stream.resume();
                }
              };
              return this;
            };
            Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
              // making it explicit this property is not enumerable
              // because otherwise some prototype manipulation in
              // userland will fail
              enumerable: false,
              get: function() {
                return this._readableState.highWaterMark;
              }
            });
            Readable._fromList = fromList;
            function fromList(n2, state) {
              if (state.length === 0)
                return null;
              var ret;
              if (state.objectMode)
                ret = state.buffer.shift();
              else if (!n2 || n2 >= state.length) {
                if (state.decoder)
                  ret = state.buffer.join("");
                else if (state.buffer.length === 1)
                  ret = state.buffer.head.data;
                else
                  ret = state.buffer.concat(state.length);
                state.buffer.clear();
              } else {
                ret = fromListPartial(n2, state.buffer, state.decoder);
              }
              return ret;
            }
            function fromListPartial(n2, list, hasStrings) {
              var ret;
              if (n2 < list.head.data.length) {
                ret = list.head.data.slice(0, n2);
                list.head.data = list.head.data.slice(n2);
              } else if (n2 === list.head.data.length) {
                ret = list.shift();
              } else {
                ret = hasStrings ? copyFromBufferString(n2, list) : copyFromBuffer(n2, list);
              }
              return ret;
            }
            function copyFromBufferString(n2, list) {
              var p2 = list.head;
              var c2 = 1;
              var ret = p2.data;
              n2 -= ret.length;
              while (p2 = p2.next) {
                var str = p2.data;
                var nb2 = n2 > str.length ? str.length : n2;
                if (nb2 === str.length)
                  ret += str;
                else
                  ret += str.slice(0, n2);
                n2 -= nb2;
                if (n2 === 0) {
                  if (nb2 === str.length) {
                    ++c2;
                    if (p2.next)
                      list.head = p2.next;
                    else
                      list.head = list.tail = null;
                  } else {
                    list.head = p2;
                    p2.data = str.slice(nb2);
                  }
                  break;
                }
                ++c2;
              }
              list.length -= c2;
              return ret;
            }
            function copyFromBuffer(n2, list) {
              var ret = Buffer2.allocUnsafe(n2);
              var p2 = list.head;
              var c2 = 1;
              p2.data.copy(ret);
              n2 -= p2.data.length;
              while (p2 = p2.next) {
                var buf = p2.data;
                var nb2 = n2 > buf.length ? buf.length : n2;
                buf.copy(ret, ret.length - n2, 0, nb2);
                n2 -= nb2;
                if (n2 === 0) {
                  if (nb2 === buf.length) {
                    ++c2;
                    if (p2.next)
                      list.head = p2.next;
                    else
                      list.head = list.tail = null;
                  } else {
                    list.head = p2;
                    p2.data = buf.slice(nb2);
                  }
                  break;
                }
                ++c2;
              }
              list.length -= c2;
              return ret;
            }
            function endReadable(stream) {
              var state = stream._readableState;
              if (state.length > 0)
                throw new Error('"endReadable()" called on non-empty stream');
              if (!state.endEmitted) {
                state.ended = true;
                pna.nextTick(endReadableNT, state, stream);
              }
            }
            function endReadableNT(state, stream) {
              if (!state.endEmitted && state.length === 0) {
                state.endEmitted = true;
                stream.readable = false;
                stream.emit("end");
              }
            }
            function indexOf(xs2, x2) {
              for (var i2 = 0, l2 = xs2.length; i2 < l2; i2++) {
                if (xs2[i2] === x2)
                  return i2;
              }
              return -1;
            }
          }).call(this, require2("_process"), typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {
          "./_stream_duplex": 106,
          "./internal/streams/BufferList": 111,
          "./internal/streams/destroy": 112,
          "./internal/streams/stream": 113,
          "_process": 100,
          "core-util-is": 13,
          "events": 83,
          "inherits": 88,
          "isarray": 114,
          "process-nextick-args": 99,
          "safe-buffer": 118,
          "string_decoder/": 115,
          "util": 11
        }],
        109: [function(require2, module2, exports2) {
          module2.exports = Transform;
          var Duplex = require2("./_stream_duplex");
          var util = require2("core-util-is");
          util.inherits = require2("inherits");
          util.inherits(Transform, Duplex);
          function afterTransform(er2, data) {
            var ts2 = this._transformState;
            ts2.transforming = false;
            var cb2 = ts2.writecb;
            if (!cb2) {
              return this.emit("error", new Error("write callback called multiple times"));
            }
            ts2.writechunk = null;
            ts2.writecb = null;
            if (data != null)
              this.push(data);
            cb2(er2);
            var rs2 = this._readableState;
            rs2.reading = false;
            if (rs2.needReadable || rs2.length < rs2.highWaterMark) {
              this._read(rs2.highWaterMark);
            }
          }
          function Transform(options) {
            if (!(this instanceof Transform))
              return new Transform(options);
            Duplex.call(this, options);
            this._transformState = {
              afterTransform: afterTransform.bind(this),
              needTransform: false,
              transforming: false,
              writecb: null,
              writechunk: null,
              writeencoding: null
            };
            this._readableState.needReadable = true;
            this._readableState.sync = false;
            if (options) {
              if (typeof options.transform === "function")
                this._transform = options.transform;
              if (typeof options.flush === "function")
                this._flush = options.flush;
            }
            this.on("prefinish", prefinish);
          }
          function prefinish() {
            var _this = this;
            if (typeof this._flush === "function") {
              this._flush(function(er2, data) {
                done(_this, er2, data);
              });
            } else {
              done(this, null, null);
            }
          }
          Transform.prototype.push = function(chunk, encoding) {
            this._transformState.needTransform = false;
            return Duplex.prototype.push.call(this, chunk, encoding);
          };
          Transform.prototype._transform = function(chunk, encoding, cb2) {
            throw new Error("_transform() is not implemented");
          };
          Transform.prototype._write = function(chunk, encoding, cb2) {
            var ts2 = this._transformState;
            ts2.writecb = cb2;
            ts2.writechunk = chunk;
            ts2.writeencoding = encoding;
            if (!ts2.transforming) {
              var rs2 = this._readableState;
              if (ts2.needTransform || rs2.needReadable || rs2.length < rs2.highWaterMark)
                this._read(rs2.highWaterMark);
            }
          };
          Transform.prototype._read = function(n2) {
            var ts2 = this._transformState;
            if (ts2.writechunk !== null && ts2.writecb && !ts2.transforming) {
              ts2.transforming = true;
              this._transform(ts2.writechunk, ts2.writeencoding, ts2.afterTransform);
            } else {
              ts2.needTransform = true;
            }
          };
          Transform.prototype._destroy = function(err, cb2) {
            var _this2 = this;
            Duplex.prototype._destroy.call(this, err, function(err2) {
              cb2(err2);
              _this2.emit("close");
            });
          };
          function done(stream, er2, data) {
            if (er2)
              return stream.emit("error", er2);
            if (data != null)
              stream.push(data);
            if (stream._writableState.length)
              throw new Error("Calling transform done when ws.length != 0");
            if (stream._transformState.transforming)
              throw new Error(
                "Calling transform done when still transforming"
              );
            return stream.push(null);
          }
        }, {
          "./_stream_duplex": 106,
          "core-util-is": 13,
          "inherits": 88
        }],
        110: [function(require2, module2, exports2) {
          (function(process, global2, setImmediate) {
            var pna = require2("process-nextick-args");
            module2.exports = Writable;
            function CorkedRequest(state) {
              var _this = this;
              this.next = null;
              this.entry = null;
              this.finish = function() {
                onCorkedFinish(_this, state);
              };
            }
            var asyncWrite = !process.browser && ["v0.10", "v0.9."].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
            var Duplex;
            Writable.WritableState = WritableState;
            var util = require2("core-util-is");
            util.inherits = require2("inherits");
            var internalUtil = {
              deprecate: require2("util-deprecate")
            };
            var Stream2 = require2("./internal/streams/stream");
            var Buffer2 = require2("safe-buffer").Buffer;
            var OurUint8Array = global2.Uint8Array || function() {
            };
            function _uint8ArrayToBuffer(chunk) {
              return Buffer2.from(chunk);
            }
            function _isUint8Array(obj) {
              return Buffer2.isBuffer(obj) || obj instanceof OurUint8Array;
            }
            var destroyImpl = require2("./internal/streams/destroy");
            util.inherits(Writable, Stream2);
            function nop() {
            }
            function WritableState(options, stream) {
              Duplex = Duplex || require2("./_stream_duplex");
              options = options || {};
              var isDuplex = stream instanceof Duplex;
              this.objectMode = !!options.objectMode;
              if (isDuplex)
                this.objectMode = this.objectMode || !!options.writableObjectMode;
              var hwm = options.highWaterMark;
              var writableHwm = options.writableHighWaterMark;
              var defaultHwm = this.objectMode ? 16 : 16 * 1024;
              if (hwm || hwm === 0)
                this.highWaterMark = hwm;
              else if (isDuplex && (writableHwm || writableHwm === 0))
                this.highWaterMark = writableHwm;
              else
                this.highWaterMark = defaultHwm;
              this.highWaterMark = Math.floor(this.highWaterMark);
              this.finalCalled = false;
              this.needDrain = false;
              this.ending = false;
              this.ended = false;
              this.finished = false;
              this.destroyed = false;
              var noDecode = options.decodeStrings === false;
              this.decodeStrings = !noDecode;
              this.defaultEncoding = options.defaultEncoding || "utf8";
              this.length = 0;
              this.writing = false;
              this.corked = 0;
              this.sync = true;
              this.bufferProcessing = false;
              this.onwrite = function(er2) {
                onwrite(stream, er2);
              };
              this.writecb = null;
              this.writelen = 0;
              this.bufferedRequest = null;
              this.lastBufferedRequest = null;
              this.pendingcb = 0;
              this.prefinished = false;
              this.errorEmitted = false;
              this.bufferedRequestCount = 0;
              this.corkedRequestsFree = new CorkedRequest(this);
            }
            WritableState.prototype.getBuffer = function getBuffer() {
              var current = this.bufferedRequest;
              var out = [];
              while (current) {
                out.push(current);
                current = current.next;
              }
              return out;
            };
            (function() {
              try {
                Object.defineProperty(WritableState.prototype, "buffer", {
                  get: internalUtil.deprecate(function() {
                    return this.getBuffer();
                  }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                });
              } catch (_2) {
              }
            })();
            var realHasInstance;
            if (typeof Symbol === "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === "function") {
              realHasInstance = Function.prototype[Symbol.hasInstance];
              Object.defineProperty(Writable, Symbol.hasInstance, {
                value: function(object) {
                  if (realHasInstance.call(this, object))
                    return true;
                  if (this !== Writable)
                    return false;
                  return object && object._writableState instanceof WritableState;
                }
              });
            } else {
              realHasInstance = function(object) {
                return object instanceof this;
              };
            }
            function Writable(options) {
              Duplex = Duplex || require2("./_stream_duplex");
              if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
                return new Writable(options);
              }
              this._writableState = new WritableState(options, this);
              this.writable = true;
              if (options) {
                if (typeof options.write === "function")
                  this._write = options.write;
                if (typeof options.writev === "function")
                  this._writev = options.writev;
                if (typeof options.destroy === "function")
                  this._destroy = options.destroy;
                if (typeof options.final === "function")
                  this._final = options.final;
              }
              Stream2.call(this);
            }
            Writable.prototype.pipe = function() {
              this.emit("error", new Error("Cannot pipe, not readable"));
            };
            function writeAfterEnd(stream, cb2) {
              var er2 = new Error("write after end");
              stream.emit("error", er2);
              pna.nextTick(cb2, er2);
            }
            function validChunk(stream, state, chunk, cb2) {
              var valid = true;
              var er2 = false;
              if (chunk === null) {
                er2 = new TypeError("May not write null values to stream");
              } else if (typeof chunk !== "string" && chunk !== void 0 && !state.objectMode) {
                er2 = new TypeError("Invalid non-string/buffer chunk");
              }
              if (er2) {
                stream.emit("error", er2);
                pna.nextTick(cb2, er2);
                valid = false;
              }
              return valid;
            }
            Writable.prototype.write = function(chunk, encoding, cb2) {
              var state = this._writableState;
              var ret = false;
              var isBuf = !state.objectMode && _isUint8Array(chunk);
              if (isBuf && !Buffer2.isBuffer(chunk)) {
                chunk = _uint8ArrayToBuffer(chunk);
              }
              if (typeof encoding === "function") {
                cb2 = encoding;
                encoding = null;
              }
              if (isBuf)
                encoding = "buffer";
              else if (!encoding)
                encoding = state.defaultEncoding;
              if (typeof cb2 !== "function")
                cb2 = nop;
              if (state.ended)
                writeAfterEnd(this, cb2);
              else if (isBuf || validChunk(this, state, chunk, cb2)) {
                state.pendingcb++;
                ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb2);
              }
              return ret;
            };
            Writable.prototype.cork = function() {
              var state = this._writableState;
              state.corked++;
            };
            Writable.prototype.uncork = function() {
              var state = this._writableState;
              if (state.corked) {
                state.corked--;
                if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest)
                  clearBuffer(this, state);
              }
            };
            Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
              if (typeof encoding === "string")
                encoding = encoding.toLowerCase();
              if (!([
                "hex",
                "utf8",
                "utf-8",
                "ascii",
                "binary",
                "base64",
                "ucs2",
                "ucs-2",
                "utf16le",
                "utf-16le",
                "raw"
              ].indexOf((encoding + "").toLowerCase()) > -1))
                throw new TypeError("Unknown encoding: " + encoding);
              this._writableState.defaultEncoding = encoding;
              return this;
            };
            function decodeChunk(state, chunk, encoding) {
              if (!state.objectMode && state.decodeStrings !== false && typeof chunk === "string") {
                chunk = Buffer2.from(chunk, encoding);
              }
              return chunk;
            }
            Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
              // making it explicit this property is not enumerable
              // because otherwise some prototype manipulation in
              // userland will fail
              enumerable: false,
              get: function() {
                return this._writableState.highWaterMark;
              }
            });
            function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb2) {
              if (!isBuf) {
                var newChunk = decodeChunk(state, chunk, encoding);
                if (chunk !== newChunk) {
                  isBuf = true;
                  encoding = "buffer";
                  chunk = newChunk;
                }
              }
              var len = state.objectMode ? 1 : chunk.length;
              state.length += len;
              var ret = state.length < state.highWaterMark;
              if (!ret)
                state.needDrain = true;
              if (state.writing || state.corked) {
                var last = state.lastBufferedRequest;
                state.lastBufferedRequest = {
                  chunk,
                  encoding,
                  isBuf,
                  callback: cb2,
                  next: null
                };
                if (last) {
                  last.next = state.lastBufferedRequest;
                } else {
                  state.bufferedRequest = state.lastBufferedRequest;
                }
                state.bufferedRequestCount += 1;
              } else {
                doWrite(stream, state, false, len, chunk, encoding, cb2);
              }
              return ret;
            }
            function doWrite(stream, state, writev, len, chunk, encoding, cb2) {
              state.writelen = len;
              state.writecb = cb2;
              state.writing = true;
              state.sync = true;
              if (writev)
                stream._writev(chunk, state.onwrite);
              else
                stream._write(chunk, encoding, state.onwrite);
              state.sync = false;
            }
            function onwriteError(stream, state, sync, er2, cb2) {
              --state.pendingcb;
              if (sync) {
                pna.nextTick(cb2, er2);
                pna.nextTick(finishMaybe, stream, state);
                stream._writableState.errorEmitted = true;
                stream.emit("error", er2);
              } else {
                cb2(er2);
                stream._writableState.errorEmitted = true;
                stream.emit("error", er2);
                finishMaybe(stream, state);
              }
            }
            function onwriteStateUpdate(state) {
              state.writing = false;
              state.writecb = null;
              state.length -= state.writelen;
              state.writelen = 0;
            }
            function onwrite(stream, er2) {
              var state = stream._writableState;
              var sync = state.sync;
              var cb2 = state.writecb;
              onwriteStateUpdate(state);
              if (er2)
                onwriteError(stream, state, sync, er2, cb2);
              else {
                var finished2 = needFinish(state);
                if (!finished2 && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
                  clearBuffer(stream, state);
                }
                if (sync) {
                  asyncWrite(afterWrite, stream, state, finished2, cb2);
                } else {
                  afterWrite(stream, state, finished2, cb2);
                }
              }
            }
            function afterWrite(stream, state, finished2, cb2) {
              if (!finished2)
                onwriteDrain(stream, state);
              state.pendingcb--;
              cb2();
              finishMaybe(stream, state);
            }
            function onwriteDrain(stream, state) {
              if (state.length === 0 && state.needDrain) {
                state.needDrain = false;
                stream.emit("drain");
              }
            }
            function clearBuffer(stream, state) {
              state.bufferProcessing = true;
              var entry = state.bufferedRequest;
              if (stream._writev && entry && entry.next) {
                var l2 = state.bufferedRequestCount;
                var buffer = new Array(l2);
                var holder = state.corkedRequestsFree;
                holder.entry = entry;
                var count = 0;
                var allBuffers = true;
                while (entry) {
                  buffer[count] = entry;
                  if (!entry.isBuf)
                    allBuffers = false;
                  entry = entry.next;
                  count += 1;
                }
                buffer.allBuffers = allBuffers;
                doWrite(stream, state, true, state.length, buffer, "", holder.finish);
                state.pendingcb++;
                state.lastBufferedRequest = null;
                if (holder.next) {
                  state.corkedRequestsFree = holder.next;
                  holder.next = null;
                } else {
                  state.corkedRequestsFree = new CorkedRequest(state);
                }
                state.bufferedRequestCount = 0;
              } else {
                while (entry) {
                  var chunk = entry.chunk;
                  var encoding = entry.encoding;
                  var cb2 = entry.callback;
                  var len = state.objectMode ? 1 : chunk.length;
                  doWrite(stream, state, false, len, chunk, encoding, cb2);
                  entry = entry.next;
                  state.bufferedRequestCount--;
                  if (state.writing) {
                    break;
                  }
                }
                if (entry === null)
                  state.lastBufferedRequest = null;
              }
              state.bufferedRequest = entry;
              state.bufferProcessing = false;
            }
            Writable.prototype._write = function(chunk, encoding, cb2) {
              cb2(new Error("_write() is not implemented"));
            };
            Writable.prototype._writev = null;
            Writable.prototype.end = function(chunk, encoding, cb2) {
              var state = this._writableState;
              if (typeof chunk === "function") {
                cb2 = chunk;
                chunk = null;
                encoding = null;
              } else if (typeof encoding === "function") {
                cb2 = encoding;
                encoding = null;
              }
              if (chunk !== null && chunk !== void 0)
                this.write(chunk, encoding);
              if (state.corked) {
                state.corked = 1;
                this.uncork();
              }
              if (!state.ending && !state.finished)
                endWritable(this, state, cb2);
            };
            function needFinish(state) {
              return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
            }
            function callFinal(stream, state) {
              stream._final(function(err) {
                state.pendingcb--;
                if (err) {
                  stream.emit("error", err);
                }
                state.prefinished = true;
                stream.emit("prefinish");
                finishMaybe(stream, state);
              });
            }
            function prefinish(stream, state) {
              if (!state.prefinished && !state.finalCalled) {
                if (typeof stream._final === "function") {
                  state.pendingcb++;
                  state.finalCalled = true;
                  pna.nextTick(callFinal, stream, state);
                } else {
                  state.prefinished = true;
                  stream.emit("prefinish");
                }
              }
            }
            function finishMaybe(stream, state) {
              var need = needFinish(state);
              if (need) {
                prefinish(stream, state);
                if (state.pendingcb === 0) {
                  state.finished = true;
                  stream.emit("finish");
                }
              }
              return need;
            }
            function endWritable(stream, state, cb2) {
              state.ending = true;
              finishMaybe(stream, state);
              if (cb2) {
                if (state.finished)
                  pna.nextTick(cb2);
                else
                  stream.once("finish", cb2);
              }
              state.ended = true;
              stream.writable = false;
            }
            function onCorkedFinish(corkReq, state, err) {
              var entry = corkReq.entry;
              corkReq.entry = null;
              while (entry) {
                var cb2 = entry.callback;
                state.pendingcb--;
                cb2(err);
                entry = entry.next;
              }
              if (state.corkedRequestsFree) {
                state.corkedRequestsFree.next = corkReq;
              } else {
                state.corkedRequestsFree = corkReq;
              }
            }
            Object.defineProperty(Writable.prototype, "destroyed", {
              get: function() {
                if (this._writableState === void 0) {
                  return false;
                }
                return this._writableState.destroyed;
              },
              set: function(value) {
                if (!this._writableState) {
                  return;
                }
                this._writableState.destroyed = value;
              }
            });
            Writable.prototype.destroy = destroyImpl.destroy;
            Writable.prototype._undestroy = destroyImpl.undestroy;
            Writable.prototype._destroy = function(err, cb2) {
              this.end();
              cb2(err);
            };
          }).call(this, require2("_process"), typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {}, require2("timers").setImmediate);
        }, {
          "./_stream_duplex": 106,
          "./internal/streams/destroy": 112,
          "./internal/streams/stream": 113,
          "_process": 100,
          "core-util-is": 13,
          "inherits": 88,
          "process-nextick-args": 99,
          "safe-buffer": 118,
          "timers": 120,
          "util-deprecate": 134
        }],
        111: [function(require2, module2, exports2) {
          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }
          var Buffer2 = require2("safe-buffer").Buffer;
          var util = require2("util");
          function copyBuffer(src, target, offset) {
            src.copy(target, offset);
          }
          module2.exports = function() {
            function BufferList() {
              _classCallCheck(this, BufferList);
              this.head = null;
              this.tail = null;
              this.length = 0;
            }
            BufferList.prototype.push = function push(v2) {
              var entry = {
                data: v2,
                next: null
              };
              if (this.length > 0)
                this.tail.next = entry;
              else
                this.head = entry;
              this.tail = entry;
              ++this.length;
            };
            BufferList.prototype.unshift = function unshift(v2) {
              var entry = {
                data: v2,
                next: this.head
              };
              if (this.length === 0)
                this.tail = entry;
              this.head = entry;
              ++this.length;
            };
            BufferList.prototype.shift = function shift() {
              if (this.length === 0)
                return;
              var ret = this.head.data;
              if (this.length === 1)
                this.head = this.tail = null;
              else
                this.head = this.head.next;
              --this.length;
              return ret;
            };
            BufferList.prototype.clear = function clear() {
              this.head = this.tail = null;
              this.length = 0;
            };
            BufferList.prototype.join = function join(s2) {
              if (this.length === 0)
                return "";
              var p2 = this.head;
              var ret = "" + p2.data;
              while (p2 = p2.next) {
                ret += s2 + p2.data;
              }
              return ret;
            };
            BufferList.prototype.concat = function concat(n2) {
              if (this.length === 0)
                return Buffer2.alloc(0);
              if (this.length === 1)
                return this.head.data;
              var ret = Buffer2.allocUnsafe(n2 >>> 0);
              var p2 = this.head;
              var i2 = 0;
              while (p2) {
                copyBuffer(p2.data, ret, i2);
                i2 += p2.data.length;
                p2 = p2.next;
              }
              return ret;
            };
            return BufferList;
          }();
          if (util && util.inspect && util.inspect.custom) {
            module2.exports.prototype[util.inspect.custom] = function() {
              var obj = util.inspect({
                length: this.length
              });
              return this.constructor.name + " " + obj;
            };
          }
        }, {
          "safe-buffer": 118,
          "util": 11
        }],
        112: [function(require2, module2, exports2) {
          var pna = require2("process-nextick-args");
          function destroy(err, cb2) {
            var _this = this;
            var readableDestroyed = this._readableState && this._readableState.destroyed;
            var writableDestroyed = this._writableState && this._writableState.destroyed;
            if (readableDestroyed || writableDestroyed) {
              if (cb2) {
                cb2(err);
              } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
                pna.nextTick(emitErrorNT, this, err);
              }
              return this;
            }
            if (this._readableState) {
              this._readableState.destroyed = true;
            }
            if (this._writableState) {
              this._writableState.destroyed = true;
            }
            this._destroy(err || null, function(err2) {
              if (!cb2 && err2) {
                pna.nextTick(emitErrorNT, _this, err2);
                if (_this._writableState) {
                  _this._writableState.errorEmitted = true;
                }
              } else if (cb2) {
                cb2(err2);
              }
            });
            return this;
          }
          function undestroy() {
            if (this._readableState) {
              this._readableState.destroyed = false;
              this._readableState.reading = false;
              this._readableState.ended = false;
              this._readableState.endEmitted = false;
            }
            if (this._writableState) {
              this._writableState.destroyed = false;
              this._writableState.ended = false;
              this._writableState.ending = false;
              this._writableState.finished = false;
              this._writableState.errorEmitted = false;
            }
          }
          function emitErrorNT(self2, err) {
            self2.emit("error", err);
          }
          module2.exports = {
            destroy,
            undestroy
          };
        }, {
          "process-nextick-args": 99
        }],
        113: [function(require2, module2, exports2) {
          module2.exports = require2("events").EventEmitter;
        }, {
          "events": 83
        }],
        114: [function(require2, module2, exports2) {
          var toString = {}.toString;
          module2.exports = Array.isArray || function(arr) {
            return toString.call(arr) == "[object Array]";
          };
        }, {}],
        115: [function(require2, module2, exports2) {
          var Buffer2 = require2("safe-buffer").Buffer;
          var isEncoding = Buffer2.isEncoding || function(encoding) {
            encoding = "" + encoding;
            switch (encoding && encoding.toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
              case "raw":
                return true;
              default:
                return false;
            }
          };
          function _normalizeEncoding(enc) {
            if (!enc)
              return "utf8";
            var retried;
            while (true) {
              switch (enc) {
                case "utf8":
                case "utf-8":
                  return "utf8";
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return "utf16le";
                case "latin1":
                case "binary":
                  return "latin1";
                case "base64":
                case "ascii":
                case "hex":
                  return enc;
                default:
                  if (retried)
                    return;
                  enc = ("" + enc).toLowerCase();
                  retried = true;
              }
            }
          }
          function normalizeEncoding(enc) {
            var nenc = _normalizeEncoding(enc);
            if (typeof nenc !== "string" && (Buffer2.isEncoding === isEncoding || !isEncoding(enc)))
              throw new Error("Unknown encoding: " + enc);
            return nenc || enc;
          }
          exports2.StringDecoder = StringDecoder;
          function StringDecoder(encoding) {
            this.encoding = normalizeEncoding(encoding);
            var nb2;
            switch (this.encoding) {
              case "utf16le":
                this.text = utf16Text;
                this.end = utf16End;
                nb2 = 4;
                break;
              case "utf8":
                this.fillLast = utf8FillLast;
                nb2 = 4;
                break;
              case "base64":
                this.text = base64Text;
                this.end = base64End;
                nb2 = 3;
                break;
              default:
                this.write = simpleWrite;
                this.end = simpleEnd;
                return;
            }
            this.lastNeed = 0;
            this.lastTotal = 0;
            this.lastChar = Buffer2.allocUnsafe(nb2);
          }
          StringDecoder.prototype.write = function(buf) {
            if (buf.length === 0)
              return "";
            var r2;
            var i2;
            if (this.lastNeed) {
              r2 = this.fillLast(buf);
              if (r2 === void 0)
                return "";
              i2 = this.lastNeed;
              this.lastNeed = 0;
            } else {
              i2 = 0;
            }
            if (i2 < buf.length)
              return r2 ? r2 + this.text(buf, i2) : this.text(buf, i2);
            return r2 || "";
          };
          StringDecoder.prototype.end = utf8End;
          StringDecoder.prototype.text = utf8Text;
          StringDecoder.prototype.fillLast = function(buf) {
            if (this.lastNeed <= buf.length) {
              buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
              return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
            this.lastNeed -= buf.length;
          };
          function utf8CheckByte(byte) {
            if (byte <= 127)
              return 0;
            else if (byte >> 5 === 6)
              return 2;
            else if (byte >> 4 === 14)
              return 3;
            else if (byte >> 3 === 30)
              return 4;
            return byte >> 6 === 2 ? -1 : -2;
          }
          function utf8CheckIncomplete(self2, buf, i2) {
            var j2 = buf.length - 1;
            if (j2 < i2)
              return 0;
            var nb2 = utf8CheckByte(buf[j2]);
            if (nb2 >= 0) {
              if (nb2 > 0)
                self2.lastNeed = nb2 - 1;
              return nb2;
            }
            if (--j2 < i2 || nb2 === -2)
              return 0;
            nb2 = utf8CheckByte(buf[j2]);
            if (nb2 >= 0) {
              if (nb2 > 0)
                self2.lastNeed = nb2 - 2;
              return nb2;
            }
            if (--j2 < i2 || nb2 === -2)
              return 0;
            nb2 = utf8CheckByte(buf[j2]);
            if (nb2 >= 0) {
              if (nb2 > 0) {
                if (nb2 === 2)
                  nb2 = 0;
                else
                  self2.lastNeed = nb2 - 3;
              }
              return nb2;
            }
            return 0;
          }
          function utf8CheckExtraBytes(self2, buf, p2) {
            if ((buf[0] & 192) !== 128) {
              self2.lastNeed = 0;
              return "\uFFFD";
            }
            if (self2.lastNeed > 1 && buf.length > 1) {
              if ((buf[1] & 192) !== 128) {
                self2.lastNeed = 1;
                return "\uFFFD";
              }
              if (self2.lastNeed > 2 && buf.length > 2) {
                if ((buf[2] & 192) !== 128) {
                  self2.lastNeed = 2;
                  return "\uFFFD";
                }
              }
            }
          }
          function utf8FillLast(buf) {
            var p2 = this.lastTotal - this.lastNeed;
            var r2 = utf8CheckExtraBytes(this, buf);
            if (r2 !== void 0)
              return r2;
            if (this.lastNeed <= buf.length) {
              buf.copy(this.lastChar, p2, 0, this.lastNeed);
              return this.lastChar.toString(this.encoding, 0, this.lastTotal);
            }
            buf.copy(this.lastChar, p2, 0, buf.length);
            this.lastNeed -= buf.length;
          }
          function utf8Text(buf, i2) {
            var total = utf8CheckIncomplete(this, buf, i2);
            if (!this.lastNeed)
              return buf.toString("utf8", i2);
            this.lastTotal = total;
            var end = buf.length - (total - this.lastNeed);
            buf.copy(this.lastChar, 0, end);
            return buf.toString("utf8", i2, end);
          }
          function utf8End(buf) {
            var r2 = buf && buf.length ? this.write(buf) : "";
            if (this.lastNeed)
              return r2 + "\uFFFD";
            return r2;
          }
          function utf16Text(buf, i2) {
            if ((buf.length - i2) % 2 === 0) {
              var r2 = buf.toString("utf16le", i2);
              if (r2) {
                var c2 = r2.charCodeAt(r2.length - 1);
                if (c2 >= 55296 && c2 <= 56319) {
                  this.lastNeed = 2;
                  this.lastTotal = 4;
                  this.lastChar[0] = buf[buf.length - 2];
                  this.lastChar[1] = buf[buf.length - 1];
                  return r2.slice(0, -1);
                }
              }
              return r2;
            }
            this.lastNeed = 1;
            this.lastTotal = 2;
            this.lastChar[0] = buf[buf.length - 1];
            return buf.toString("utf16le", i2, buf.length - 1);
          }
          function utf16End(buf) {
            var r2 = buf && buf.length ? this.write(buf) : "";
            if (this.lastNeed) {
              var end = this.lastTotal - this.lastNeed;
              return r2 + this.lastChar.toString("utf16le", 0, end);
            }
            return r2;
          }
          function base64Text(buf, i2) {
            var n2 = (buf.length - i2) % 3;
            if (n2 === 0)
              return buf.toString("base64", i2);
            this.lastNeed = 3 - n2;
            this.lastTotal = 3;
            if (n2 === 1) {
              this.lastChar[0] = buf[buf.length - 1];
            } else {
              this.lastChar[0] = buf[buf.length - 2];
              this.lastChar[1] = buf[buf.length - 1];
            }
            return buf.toString("base64", i2, buf.length - n2);
          }
          function base64End(buf) {
            var r2 = buf && buf.length ? this.write(buf) : "";
            if (this.lastNeed)
              return r2 + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
            return r2;
          }
          function simpleWrite(buf) {
            return buf.toString(this.encoding);
          }
          function simpleEnd(buf) {
            return buf && buf.length ? this.write(buf) : "";
          }
        }, {
          "safe-buffer": 118
        }],
        116: [function(require2, module2, exports2) {
          exports2 = module2.exports = require2("./lib/_stream_readable.js");
          exports2.Stream = exports2;
          exports2.Readable = exports2;
          exports2.Writable = require2("./lib/_stream_writable.js");
          exports2.Duplex = require2("./lib/_stream_duplex.js");
          exports2.Transform = require2("./lib/_stream_transform.js");
          exports2.PassThrough = require2("./lib/_stream_passthrough.js");
        }, {
          "./lib/_stream_duplex.js": 106,
          "./lib/_stream_passthrough.js": 107,
          "./lib/_stream_readable.js": 108,
          "./lib/_stream_transform.js": 109,
          "./lib/_stream_writable.js": 110
        }],
        117: [function(require2, module2, exports2) {
          function ReInterval(callback, interval, args) {
            var self2 = this;
            this._callback = callback;
            this._args = args;
            this._interval = setInterval(callback, interval, this._args);
            this.reschedule = function(interval2) {
              if (!interval2)
                interval2 = self2._interval;
              if (self2._interval)
                clearInterval(self2._interval);
              self2._interval = setInterval(self2._callback, interval2, self2._args);
            };
            this.clear = function() {
              if (self2._interval) {
                clearInterval(self2._interval);
                self2._interval = void 0;
              }
            };
            this.destroy = function() {
              if (self2._interval) {
                clearInterval(self2._interval);
              }
              self2._callback = void 0;
              self2._interval = void 0;
              self2._args = void 0;
            };
          }
          function reInterval() {
            if (typeof arguments[0] !== "function")
              throw new Error("callback needed");
            if (typeof arguments[1] !== "number")
              throw new Error("interval needed");
            var args;
            if (arguments.length > 0) {
              args = new Array(arguments.length - 2);
              for (var i2 = 0; i2 < args.length; i2++) {
                args[i2] = arguments[i2 + 2];
              }
            }
            return new ReInterval(arguments[0], arguments[1], args);
          }
          module2.exports = reInterval;
        }, {}],
        118: [function(require2, module2, exports2) {
          var buffer = require2("buffer");
          var Buffer2 = buffer.Buffer;
          function copyProps(src, dst) {
            for (var key in src) {
              dst[key] = src[key];
            }
          }
          if (Buffer2.from && Buffer2.alloc && Buffer2.allocUnsafe && Buffer2.allocUnsafeSlow) {
            module2.exports = buffer;
          } else {
            copyProps(buffer, exports2);
            exports2.Buffer = SafeBuffer;
          }
          function SafeBuffer(arg, encodingOrOffset, length) {
            return Buffer2(arg, encodingOrOffset, length);
          }
          copyProps(Buffer2, SafeBuffer);
          SafeBuffer.from = function(arg, encodingOrOffset, length) {
            if (typeof arg === "number") {
              throw new TypeError("Argument must not be a number");
            }
            return Buffer2(arg, encodingOrOffset, length);
          };
          SafeBuffer.alloc = function(size, fill, encoding) {
            if (typeof size !== "number") {
              throw new TypeError("Argument must be a number");
            }
            var buf = Buffer2(size);
            if (fill !== void 0) {
              if (typeof encoding === "string") {
                buf.fill(fill, encoding);
              } else {
                buf.fill(fill);
              }
            } else {
              buf.fill(0);
            }
            return buf;
          };
          SafeBuffer.allocUnsafe = function(size) {
            if (typeof size !== "number") {
              throw new TypeError("Argument must be a number");
            }
            return Buffer2(size);
          };
          SafeBuffer.allocUnsafeSlow = function(size) {
            if (typeof size !== "number") {
              throw new TypeError("Argument must be a number");
            }
            return buffer.SlowBuffer(size);
          };
        }, {
          "buffer": 12
        }],
        119: [function(require2, module2, exports2) {
          module2.exports = shift;
          function shift(stream) {
            var rs2 = stream._readableState;
            if (!rs2)
              return null;
            return rs2.objectMode || typeof stream._duplexState === "number" ? stream.read() : stream.read(
              getStateLength(rs2)
            );
          }
          function getStateLength(state) {
            if (state.buffer.length) {
              if (state.buffer.head) {
                return state.buffer.head.data.length;
              }
              return state.buffer[0].length;
            }
            return state.length;
          }
        }, {}],
        120: [function(require2, module2, exports2) {
          (function(setImmediate, clearImmediate) {
            var nextTick = require2("process/browser.js").nextTick;
            var apply = Function.prototype.apply;
            var slice = Array.prototype.slice;
            var immediateIds = {};
            var nextImmediateId = 0;
            exports2.setTimeout = function() {
              return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
            };
            exports2.setInterval = function() {
              return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
            };
            exports2.clearTimeout = exports2.clearInterval = function(timeout) {
              timeout.close();
            };
            function Timeout(id2, clearFn) {
              this._id = id2;
              this._clearFn = clearFn;
            }
            Timeout.prototype.unref = Timeout.prototype.ref = function() {
            };
            Timeout.prototype.close = function() {
              this._clearFn.call(window, this._id);
            };
            exports2.enroll = function(item, msecs) {
              clearTimeout(item._idleTimeoutId);
              item._idleTimeout = msecs;
            };
            exports2.unenroll = function(item) {
              clearTimeout(item._idleTimeoutId);
              item._idleTimeout = -1;
            };
            exports2._unrefActive = exports2.active = function(item) {
              clearTimeout(item._idleTimeoutId);
              var msecs = item._idleTimeout;
              if (msecs >= 0) {
                item._idleTimeoutId = setTimeout(function onTimeout() {
                  if (item._onTimeout)
                    item._onTimeout();
                }, msecs);
              }
            };
            exports2.setImmediate = typeof setImmediate === "function" ? setImmediate : function(fn2) {
              var id2 = nextImmediateId++;
              var args = arguments.length < 2 ? false : slice.call(arguments, 1);
              immediateIds[id2] = true;
              nextTick(function onNextTick() {
                if (immediateIds[id2]) {
                  if (args) {
                    fn2.apply(null, args);
                  } else {
                    fn2.call(null);
                  }
                  exports2.clearImmediate(id2);
                }
              });
              return id2;
            };
            exports2.clearImmediate = typeof clearImmediate === "function" ? clearImmediate : function(id2) {
              delete immediateIds[id2];
            };
          }).call(this, require2("timers").setImmediate, require2("timers").clearImmediate);
        }, {
          "process/browser.js": 100,
          "timers": 120
        }],
        121: [function(require2, module2, exports2) {
          var isPrototype = require2("../prototype/is");
          module2.exports = function(value) {
            if (typeof value !== "function")
              return false;
            if (!hasOwnProperty.call(value, "length"))
              return false;
            try {
              if (typeof value.length !== "number")
                return false;
              if (typeof value.call !== "function")
                return false;
              if (typeof value.apply !== "function")
                return false;
            } catch (error) {
              return false;
            }
            return !isPrototype(value);
          };
        }, {
          "../prototype/is": 128
        }],
        122: [function(require2, module2, exports2) {
          var isValue = require2("../value/is"), isObject = require2("../object/is"), stringCoerce = require2("../string/coerce"), toShortString = require2("./to-short-string");
          var resolveMessage = function(message, value) {
            return message.replace("%v", toShortString(value));
          };
          module2.exports = function(value, defaultMessage, inputOptions) {
            if (!isObject(inputOptions))
              throw new TypeError(resolveMessage(defaultMessage, value));
            if (!isValue(value)) {
              if ("default" in inputOptions)
                return inputOptions["default"];
              if (inputOptions.isOptional)
                return null;
            }
            var errorMessage = stringCoerce(inputOptions.errorMessage);
            if (!isValue(errorMessage))
              errorMessage = defaultMessage;
            throw new TypeError(resolveMessage(errorMessage, value));
          };
        }, {
          "../object/is": 125,
          "../string/coerce": 129,
          "../value/is": 131,
          "./to-short-string": 124
        }],
        123: [function(require2, module2, exports2) {
          module2.exports = function(value) {
            try {
              return value.toString();
            } catch (error) {
              try {
                return String(value);
              } catch (error2) {
                return null;
              }
            }
          };
        }, {}],
        124: [function(require2, module2, exports2) {
          var safeToString = require2("./safe-to-string");
          var reNewLine = /[\n\r\u2028\u2029]/g;
          module2.exports = function(value) {
            var string = safeToString(value);
            if (string === null)
              return "<Non-coercible to string value>";
            if (string.length > 100)
              string = string.slice(0, 99) + "\u2026";
            string = string.replace(reNewLine, function(char) {
              switch (char) {
                case "\n":
                  return "\\n";
                case "\r":
                  return "\\r";
                case "\u2028":
                  return "\\u2028";
                case "\u2029":
                  return "\\u2029";
                default:
                  throw new Error("Unexpected character");
              }
            });
            return string;
          };
        }, {
          "./safe-to-string": 123
        }],
        125: [function(require2, module2, exports2) {
          var isValue = require2("../value/is");
          var possibleTypes = {
            "object": true,
            "function": true,
            "undefined": true
            /* document.all */
          };
          module2.exports = function(value) {
            if (!isValue(value))
              return false;
            return hasOwnProperty.call(possibleTypes, typeof value);
          };
        }, {
          "../value/is": 131
        }],
        126: [function(require2, module2, exports2) {
          var resolveException = require2("../lib/resolve-exception"), is2 = require2("./is");
          module2.exports = function(value) {
            if (is2(value))
              return value;
            return resolveException(value, "%v is not a plain function", arguments[1]);
          };
        }, {
          "../lib/resolve-exception": 122,
          "./is": 127
        }],
        127: [function(require2, module2, exports2) {
          var isFunction = require2("../function/is");
          var classRe = /^\s*class[\s{/}]/, functionToString = Function.prototype.toString;
          module2.exports = function(value) {
            if (!isFunction(value))
              return false;
            if (classRe.test(functionToString.call(value)))
              return false;
            return true;
          };
        }, {
          "../function/is": 121
        }],
        128: [function(require2, module2, exports2) {
          var isObject = require2("../object/is");
          module2.exports = function(value) {
            if (!isObject(value))
              return false;
            try {
              if (!value.constructor)
                return false;
              return value.constructor.prototype === value;
            } catch (error) {
              return false;
            }
          };
        }, {
          "../object/is": 125
        }],
        129: [function(require2, module2, exports2) {
          var isValue = require2("../value/is"), isObject = require2("../object/is");
          var objectToString = Object.prototype.toString;
          module2.exports = function(value) {
            if (!isValue(value))
              return null;
            if (isObject(value)) {
              var valueToString = value.toString;
              if (typeof valueToString !== "function")
                return null;
              if (valueToString === objectToString)
                return null;
            }
            try {
              return "" + value;
            } catch (error) {
              return null;
            }
          };
        }, {
          "../object/is": 125,
          "../value/is": 131
        }],
        130: [function(require2, module2, exports2) {
          var resolveException = require2("../lib/resolve-exception"), is2 = require2("./is");
          module2.exports = function(value) {
            if (is2(value))
              return value;
            return resolveException(value, "Cannot use %v", arguments[1]);
          };
        }, {
          "../lib/resolve-exception": 122,
          "./is": 131
        }],
        131: [function(require2, module2, exports2) {
          var _undefined = void 0;
          module2.exports = function(value) {
            return value !== _undefined && value !== null;
          };
        }, {}],
        132: [function(require2, module2, exports2) {
          var punycode = require2("punycode");
          var util = require2("./util");
          exports2.parse = urlParse;
          exports2.resolve = urlResolve;
          exports2.resolveObject = urlResolveObject;
          exports2.format = urlFormat;
          exports2.Url = Url;
          function Url() {
            this.protocol = null;
            this.slashes = null;
            this.auth = null;
            this.host = null;
            this.port = null;
            this.hostname = null;
            this.hash = null;
            this.search = null;
            this.query = null;
            this.pathname = null;
            this.path = null;
            this.href = null;
          }
          var protocolPattern = /^([a-z0-9.+-]+:)/i, portPattern = /:[0-9]*$/, simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/, delims = ["<", ">", '"', "`", " ", "\r", "\n", "	"], unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims), autoEscape = ["'"].concat(unwise), nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape), hostEndingChars = ["/", "?", "#"], hostnameMaxLen = 255, hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/, hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/, unsafeProtocol = {
            "javascript": true,
            "javascript:": true
          }, hostlessProtocol = {
            "javascript": true,
            "javascript:": true
          }, slashedProtocol = {
            "http": true,
            "https": true,
            "ftp": true,
            "gopher": true,
            "file": true,
            "http:": true,
            "https:": true,
            "ftp:": true,
            "gopher:": true,
            "file:": true
          }, querystring = require2("querystring");
          function urlParse(url, parseQueryString, slashesDenoteHost) {
            if (url && util.isObject(url) && url instanceof Url)
              return url;
            var u2 = new Url();
            u2.parse(url, parseQueryString, slashesDenoteHost);
            return u2;
          }
          Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
            if (!util.isString(url)) {
              throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
            }
            var queryIndex = url.indexOf("?"), splitter = queryIndex !== -1 && queryIndex < url.indexOf("#") ? "?" : "#", uSplit = url.split(splitter), slashRegex = /\\/g;
            uSplit[0] = uSplit[0].replace(slashRegex, "/");
            url = uSplit.join(splitter);
            var rest = url;
            rest = rest.trim();
            if (!slashesDenoteHost && url.split("#").length === 1) {
              var simplePath = simplePathPattern.exec(rest);
              if (simplePath) {
                this.path = rest;
                this.href = rest;
                this.pathname = simplePath[1];
                if (simplePath[2]) {
                  this.search = simplePath[2];
                  if (parseQueryString) {
                    this.query = querystring.parse(this.search.substr(1));
                  } else {
                    this.query = this.search.substr(1);
                  }
                } else if (parseQueryString) {
                  this.search = "";
                  this.query = {};
                }
                return this;
              }
            }
            var proto = protocolPattern.exec(rest);
            if (proto) {
              proto = proto[0];
              var lowerProto = proto.toLowerCase();
              this.protocol = lowerProto;
              rest = rest.substr(proto.length);
            }
            if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
              var slashes = rest.substr(0, 2) === "//";
              if (slashes && !(proto && hostlessProtocol[proto])) {
                rest = rest.substr(2);
                this.slashes = true;
              }
            }
            if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
              var hostEnd = -1;
              for (var i2 = 0; i2 < hostEndingChars.length; i2++) {
                var hec = rest.indexOf(hostEndingChars[i2]);
                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                  hostEnd = hec;
              }
              var auth, atSign;
              if (hostEnd === -1) {
                atSign = rest.lastIndexOf("@");
              } else {
                atSign = rest.lastIndexOf("@", hostEnd);
              }
              if (atSign !== -1) {
                auth = rest.slice(0, atSign);
                rest = rest.slice(atSign + 1);
                this.auth = decodeURIComponent(auth);
              }
              hostEnd = -1;
              for (var i2 = 0; i2 < nonHostChars.length; i2++) {
                var hec = rest.indexOf(nonHostChars[i2]);
                if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                  hostEnd = hec;
              }
              if (hostEnd === -1)
                hostEnd = rest.length;
              this.host = rest.slice(0, hostEnd);
              rest = rest.slice(hostEnd);
              this.parseHost();
              this.hostname = this.hostname || "";
              var ipv6Hostname = this.hostname[0] === "[" && this.hostname[this.hostname.length - 1] === "]";
              if (!ipv6Hostname) {
                var hostparts = this.hostname.split(/\./);
                for (var i2 = 0, l2 = hostparts.length; i2 < l2; i2++) {
                  var part = hostparts[i2];
                  if (!part)
                    continue;
                  if (!part.match(hostnamePartPattern)) {
                    var newpart = "";
                    for (var j2 = 0, k2 = part.length; j2 < k2; j2++) {
                      if (part.charCodeAt(j2) > 127) {
                        newpart += "x";
                      } else {
                        newpart += part[j2];
                      }
                    }
                    if (!newpart.match(hostnamePartPattern)) {
                      var validParts = hostparts.slice(0, i2);
                      var notHost = hostparts.slice(i2 + 1);
                      var bit = part.match(hostnamePartStart);
                      if (bit) {
                        validParts.push(bit[1]);
                        notHost.unshift(bit[2]);
                      }
                      if (notHost.length) {
                        rest = "/" + notHost.join(".") + rest;
                      }
                      this.hostname = validParts.join(".");
                      break;
                    }
                  }
                }
              }
              if (this.hostname.length > hostnameMaxLen) {
                this.hostname = "";
              } else {
                this.hostname = this.hostname.toLowerCase();
              }
              if (!ipv6Hostname) {
                this.hostname = punycode.toASCII(this.hostname);
              }
              var p2 = this.port ? ":" + this.port : "";
              var h2 = this.hostname || "";
              this.host = h2 + p2;
              this.href += this.host;
              if (ipv6Hostname) {
                this.hostname = this.hostname.substr(1, this.hostname.length - 2);
                if (rest[0] !== "/") {
                  rest = "/" + rest;
                }
              }
            }
            if (!unsafeProtocol[lowerProto]) {
              for (var i2 = 0, l2 = autoEscape.length; i2 < l2; i2++) {
                var ae2 = autoEscape[i2];
                if (rest.indexOf(ae2) === -1)
                  continue;
                var esc = encodeURIComponent(ae2);
                if (esc === ae2) {
                  esc = escape(ae2);
                }
                rest = rest.split(ae2).join(esc);
              }
            }
            var hash = rest.indexOf("#");
            if (hash !== -1) {
              this.hash = rest.substr(hash);
              rest = rest.slice(0, hash);
            }
            var qm2 = rest.indexOf("?");
            if (qm2 !== -1) {
              this.search = rest.substr(qm2);
              this.query = rest.substr(qm2 + 1);
              if (parseQueryString) {
                this.query = querystring.parse(this.query);
              }
              rest = rest.slice(0, qm2);
            } else if (parseQueryString) {
              this.search = "";
              this.query = {};
            }
            if (rest)
              this.pathname = rest;
            if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
              this.pathname = "/";
            }
            if (this.pathname || this.search) {
              var p2 = this.pathname || "";
              var s2 = this.search || "";
              this.path = p2 + s2;
            }
            this.href = this.format();
            return this;
          };
          function urlFormat(obj) {
            if (util.isString(obj))
              obj = urlParse(obj);
            if (!(obj instanceof Url))
              return Url.prototype.format.call(obj);
            return obj.format();
          }
          Url.prototype.format = function() {
            var auth = this.auth || "";
            if (auth) {
              auth = encodeURIComponent(auth);
              auth = auth.replace(/%3A/i, ":");
              auth += "@";
            }
            var protocol = this.protocol || "", pathname = this.pathname || "", hash = this.hash || "", host = false, query = "";
            if (this.host) {
              host = auth + this.host;
            } else if (this.hostname) {
              host = auth + (this.hostname.indexOf(":") === -1 ? this.hostname : "[" + this.hostname + "]");
              if (this.port) {
                host += ":" + this.port;
              }
            }
            if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
              query = querystring.stringify(this.query);
            }
            var search = this.search || query && "?" + query || "";
            if (protocol && protocol.substr(-1) !== ":")
              protocol += ":";
            if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
              host = "//" + (host || "");
              if (pathname && pathname.charAt(0) !== "/")
                pathname = "/" + pathname;
            } else if (!host) {
              host = "";
            }
            if (hash && hash.charAt(0) !== "#")
              hash = "#" + hash;
            if (search && search.charAt(0) !== "?")
              search = "?" + search;
            pathname = pathname.replace(/[?#]/g, function(match) {
              return encodeURIComponent(match);
            });
            search = search.replace("#", "%23");
            return protocol + host + pathname + search + hash;
          };
          function urlResolve(source, relative) {
            return urlParse(source, false, true).resolve(relative);
          }
          Url.prototype.resolve = function(relative) {
            return this.resolveObject(urlParse(relative, false, true)).format();
          };
          function urlResolveObject(source, relative) {
            if (!source)
              return relative;
            return urlParse(source, false, true).resolveObject(relative);
          }
          Url.prototype.resolveObject = function(relative) {
            if (util.isString(relative)) {
              var rel = new Url();
              rel.parse(relative, false, true);
              relative = rel;
            }
            var result = new Url();
            var tkeys = Object.keys(this);
            for (var tk2 = 0; tk2 < tkeys.length; tk2++) {
              var tkey = tkeys[tk2];
              result[tkey] = this[tkey];
            }
            result.hash = relative.hash;
            if (relative.href === "") {
              result.href = result.format();
              return result;
            }
            if (relative.slashes && !relative.protocol) {
              var rkeys = Object.keys(relative);
              for (var rk2 = 0; rk2 < rkeys.length; rk2++) {
                var rkey = rkeys[rk2];
                if (rkey !== "protocol")
                  result[rkey] = relative[rkey];
              }
              if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
                result.path = result.pathname = "/";
              }
              result.href = result.format();
              return result;
            }
            if (relative.protocol && relative.protocol !== result.protocol) {
              if (!slashedProtocol[relative.protocol]) {
                var keys = Object.keys(relative);
                for (var v2 = 0; v2 < keys.length; v2++) {
                  var k2 = keys[v2];
                  result[k2] = relative[k2];
                }
                result.href = result.format();
                return result;
              }
              result.protocol = relative.protocol;
              if (!relative.host && !hostlessProtocol[relative.protocol]) {
                var relPath = (relative.pathname || "").split("/");
                while (relPath.length && !(relative.host = relPath.shift()))
                  ;
                if (!relative.host)
                  relative.host = "";
                if (!relative.hostname)
                  relative.hostname = "";
                if (relPath[0] !== "")
                  relPath.unshift("");
                if (relPath.length < 2)
                  relPath.unshift("");
                result.pathname = relPath.join("/");
              } else {
                result.pathname = relative.pathname;
              }
              result.search = relative.search;
              result.query = relative.query;
              result.host = relative.host || "";
              result.auth = relative.auth;
              result.hostname = relative.hostname || relative.host;
              result.port = relative.port;
              if (result.pathname || result.search) {
                var p2 = result.pathname || "";
                var s2 = result.search || "";
                result.path = p2 + s2;
              }
              result.slashes = result.slashes || relative.slashes;
              result.href = result.format();
              return result;
            }
            var isSourceAbs = result.pathname && result.pathname.charAt(0) === "/", isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === "/", mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname, removeAllDots = mustEndAbs, srcPath = result.pathname && result.pathname.split("/") || [], relPath = relative.pathname && relative.pathname.split("/") || [], psychotic = result.protocol && !slashedProtocol[result.protocol];
            if (psychotic) {
              result.hostname = "";
              result.port = null;
              if (result.host) {
                if (srcPath[0] === "")
                  srcPath[0] = result.host;
                else
                  srcPath.unshift(result.host);
              }
              result.host = "";
              if (relative.protocol) {
                relative.hostname = null;
                relative.port = null;
                if (relative.host) {
                  if (relPath[0] === "")
                    relPath[0] = relative.host;
                  else
                    relPath.unshift(relative.host);
                }
                relative.host = null;
              }
              mustEndAbs = mustEndAbs && (relPath[0] === "" || srcPath[0] === "");
            }
            if (isRelAbs) {
              result.host = relative.host || relative.host === "" ? relative.host : result.host;
              result.hostname = relative.hostname || relative.hostname === "" ? relative.hostname : result.hostname;
              result.search = relative.search;
              result.query = relative.query;
              srcPath = relPath;
            } else if (relPath.length) {
              if (!srcPath)
                srcPath = [];
              srcPath.pop();
              srcPath = srcPath.concat(relPath);
              result.search = relative.search;
              result.query = relative.query;
            } else if (!util.isNullOrUndefined(relative.search)) {
              if (psychotic) {
                result.hostname = result.host = srcPath.shift();
                var authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
                if (authInHost) {
                  result.auth = authInHost.shift();
                  result.host = result.hostname = authInHost.shift();
                }
              }
              result.search = relative.search;
              result.query = relative.query;
              if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
                result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
              }
              result.href = result.format();
              return result;
            }
            if (!srcPath.length) {
              result.pathname = null;
              if (result.search) {
                result.path = "/" + result.search;
              } else {
                result.path = null;
              }
              result.href = result.format();
              return result;
            }
            var last = srcPath.slice(-1)[0];
            var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === "." || last === "..") || last === "";
            var up2 = 0;
            for (var i2 = srcPath.length; i2 >= 0; i2--) {
              last = srcPath[i2];
              if (last === ".") {
                srcPath.splice(i2, 1);
              } else if (last === "..") {
                srcPath.splice(i2, 1);
                up2++;
              } else if (up2) {
                srcPath.splice(i2, 1);
                up2--;
              }
            }
            if (!mustEndAbs && !removeAllDots) {
              for (; up2--; up2) {
                srcPath.unshift("..");
              }
            }
            if (mustEndAbs && srcPath[0] !== "" && (!srcPath[0] || srcPath[0].charAt(0) !== "/")) {
              srcPath.unshift("");
            }
            if (hasTrailingSlash && srcPath.join("/").substr(-1) !== "/") {
              srcPath.push("");
            }
            var isAbsolute = srcPath[0] === "" || srcPath[0] && srcPath[0].charAt(0) === "/";
            if (psychotic) {
              result.hostname = result.host = isAbsolute ? "" : srcPath.length ? srcPath.shift() : "";
              var authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
              if (authInHost) {
                result.auth = authInHost.shift();
                result.host = result.hostname = authInHost.shift();
              }
            }
            mustEndAbs = mustEndAbs || result.host && srcPath.length;
            if (mustEndAbs && !isAbsolute) {
              srcPath.unshift("");
            }
            if (!srcPath.length) {
              result.pathname = null;
              result.path = null;
            } else {
              result.pathname = srcPath.join("/");
            }
            if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
              result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
            }
            result.auth = relative.auth || result.auth;
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
          };
          Url.prototype.parseHost = function() {
            var host = this.host;
            var port = portPattern.exec(host);
            if (port) {
              port = port[0];
              if (port !== ":") {
                this.port = port.substr(1);
              }
              host = host.substr(0, host.length - port.length);
            }
            if (host)
              this.hostname = host;
          };
        }, {
          "./util": 133,
          "punycode": 101,
          "querystring": 104
        }],
        133: [function(require2, module2, exports2) {
          module2.exports = {
            isString: function(arg) {
              return typeof arg === "string";
            },
            isObject: function(arg) {
              return typeof arg === "object" && arg !== null;
            },
            isNull: function(arg) {
              return arg === null;
            },
            isNullOrUndefined: function(arg) {
              return arg == null;
            }
          };
        }, {}],
        134: [function(require2, module2, exports2) {
          (function(global2) {
            module2.exports = deprecate;
            function deprecate(fn2, msg) {
              if (config("noDeprecation")) {
                return fn2;
              }
              var warned = false;
              function deprecated() {
                if (!warned) {
                  if (config("throwDeprecation")) {
                    throw new Error(msg);
                  } else if (config("traceDeprecation")) {
                    console.trace(msg);
                  } else {
                    formatAppLog("warn", "at node_modules/mqtt/dist/mqtt.js:15788", msg);
                  }
                  warned = true;
                }
                return fn2.apply(this, arguments);
              }
              return deprecated;
            }
            function config(name) {
              try {
                if (!global2.localStorage)
                  return false;
              } catch (_2) {
                return false;
              }
              var val = global2.localStorage[name];
              if (null == val)
                return false;
              return String(val).toLowerCase() === "true";
            }
          }).call(this, typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {}],
        135: [function(require2, module2, exports2) {
          module2.exports = function isBuffer(arg) {
            return arg && typeof arg === "object" && typeof arg.copy === "function" && typeof arg.fill === "function" && typeof arg.readUInt8 === "function";
          };
        }, {}],
        136: [function(require2, module2, exports2) {
          (function(process, global2) {
            var formatRegExp = /%[sdj%]/g;
            exports2.format = function(f2) {
              if (!isString2(f2)) {
                var objects = [];
                for (var i2 = 0; i2 < arguments.length; i2++) {
                  objects.push(inspect(arguments[i2]));
                }
                return objects.join(" ");
              }
              var i2 = 1;
              var args = arguments;
              var len = args.length;
              var str = String(f2).replace(formatRegExp, function(x3) {
                if (x3 === "%%")
                  return "%";
                if (i2 >= len)
                  return x3;
                switch (x3) {
                  case "%s":
                    return String(args[i2++]);
                  case "%d":
                    return Number(args[i2++]);
                  case "%j":
                    try {
                      return JSON.stringify(args[i2++]);
                    } catch (_2) {
                      return "[Circular]";
                    }
                  default:
                    return x3;
                }
              });
              for (var x2 = args[i2]; i2 < len; x2 = args[++i2]) {
                if (isNull(x2) || !isObject(x2)) {
                  str += " " + x2;
                } else {
                  str += " " + inspect(x2);
                }
              }
              return str;
            };
            exports2.deprecate = function(fn2, msg) {
              if (isUndefined(global2.process)) {
                return function() {
                  return exports2.deprecate(fn2, msg).apply(this, arguments);
                };
              }
              if (process.noDeprecation === true) {
                return fn2;
              }
              var warned = false;
              function deprecated() {
                if (!warned) {
                  if (process.throwDeprecation) {
                    throw new Error(msg);
                  } else if (process.traceDeprecation) {
                    console.trace(msg);
                  } else {
                    formatAppLog("error", "at node_modules/mqtt/dist/mqtt.js:15918", msg);
                  }
                  warned = true;
                }
                return fn2.apply(this, arguments);
              }
              return deprecated;
            };
            var debugs = {};
            var debugEnviron;
            exports2.debuglog = function(set) {
              if (isUndefined(debugEnviron))
                debugEnviron = process.env.NODE_DEBUG || "";
              set = set.toUpperCase();
              if (!debugs[set]) {
                if (new RegExp("\\b" + set + "\\b", "i").test(debugEnviron)) {
                  var pid = process.pid;
                  debugs[set] = function() {
                    var msg = exports2.format.apply(exports2, arguments);
                    formatAppLog("error", "at node_modules/mqtt/dist/mqtt.js:15940", "%s %d: %s", set, pid, msg);
                  };
                } else {
                  debugs[set] = function() {
                  };
                }
              }
              return debugs[set];
            };
            function inspect(obj, opts) {
              var ctx = {
                seen: [],
                stylize: stylizeNoColor
              };
              if (arguments.length >= 3)
                ctx.depth = arguments[2];
              if (arguments.length >= 4)
                ctx.colors = arguments[3];
              if (isBoolean(opts)) {
                ctx.showHidden = opts;
              } else if (opts) {
                exports2._extend(ctx, opts);
              }
              if (isUndefined(ctx.showHidden))
                ctx.showHidden = false;
              if (isUndefined(ctx.depth))
                ctx.depth = 2;
              if (isUndefined(ctx.colors))
                ctx.colors = false;
              if (isUndefined(ctx.customInspect))
                ctx.customInspect = true;
              if (ctx.colors)
                ctx.stylize = stylizeWithColor;
              return formatValue(ctx, obj, ctx.depth);
            }
            exports2.inspect = inspect;
            inspect.colors = {
              "bold": [1, 22],
              "italic": [3, 23],
              "underline": [4, 24],
              "inverse": [7, 27],
              "white": [37, 39],
              "grey": [90, 39],
              "black": [30, 39],
              "blue": [34, 39],
              "cyan": [36, 39],
              "green": [32, 39],
              "magenta": [35, 39],
              "red": [31, 39],
              "yellow": [33, 39]
            };
            inspect.styles = {
              "special": "cyan",
              "number": "yellow",
              "boolean": "yellow",
              "undefined": "grey",
              "null": "bold",
              "string": "green",
              "date": "magenta",
              // "name": intentionally not styling
              "regexp": "red"
            };
            function stylizeWithColor(str, styleType) {
              var style = inspect.styles[styleType];
              if (style) {
                return "\x1B[" + inspect.colors[style][0] + "m" + str + "\x1B[" + inspect.colors[style][1] + "m";
              } else {
                return str;
              }
            }
            function stylizeNoColor(str, styleType) {
              return str;
            }
            function arrayToHash(array) {
              var hash = {};
              array.forEach(function(val, idx) {
                hash[val] = true;
              });
              return hash;
            }
            function formatValue(ctx, value, recurseTimes) {
              if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special
              value.inspect !== exports2.inspect && // Also filter out any prototype objects using the circular check.
              !(value.constructor && value.constructor.prototype === value)) {
                var ret = value.inspect(recurseTimes, ctx);
                if (!isString2(ret)) {
                  ret = formatValue(ctx, ret, recurseTimes);
                }
                return ret;
              }
              var primitive = formatPrimitive(ctx, value);
              if (primitive) {
                return primitive;
              }
              var keys = Object.keys(value);
              var visibleKeys = arrayToHash(keys);
              if (ctx.showHidden) {
                keys = Object.getOwnPropertyNames(value);
              }
              if (isError(value) && (keys.indexOf("message") >= 0 || keys.indexOf("description") >= 0)) {
                return formatError(value);
              }
              if (keys.length === 0) {
                if (isFunction(value)) {
                  var name = value.name ? ": " + value.name : "";
                  return ctx.stylize("[Function" + name + "]", "special");
                }
                if (isRegExp(value)) {
                  return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                }
                if (isDate(value)) {
                  return ctx.stylize(Date.prototype.toString.call(value), "date");
                }
                if (isError(value)) {
                  return formatError(value);
                }
              }
              var base = "", array = false, braces = ["{", "}"];
              if (isArray(value)) {
                array = true;
                braces = ["[", "]"];
              }
              if (isFunction(value)) {
                var n2 = value.name ? ": " + value.name : "";
                base = " [Function" + n2 + "]";
              }
              if (isRegExp(value)) {
                base = " " + RegExp.prototype.toString.call(value);
              }
              if (isDate(value)) {
                base = " " + Date.prototype.toUTCString.call(value);
              }
              if (isError(value)) {
                base = " " + formatError(value);
              }
              if (keys.length === 0 && (!array || value.length == 0)) {
                return braces[0] + base + braces[1];
              }
              if (recurseTimes < 0) {
                if (isRegExp(value)) {
                  return ctx.stylize(RegExp.prototype.toString.call(value), "regexp");
                } else {
                  return ctx.stylize("[Object]", "special");
                }
              }
              ctx.seen.push(value);
              var output;
              if (array) {
                output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
              } else {
                output = keys.map(function(key) {
                  return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
                });
              }
              ctx.seen.pop();
              return reduceToSingleString(output, base, braces);
            }
            function formatPrimitive(ctx, value) {
              if (isUndefined(value))
                return ctx.stylize("undefined", "undefined");
              if (isString2(value)) {
                var simple = "'" + JSON.stringify(value).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                return ctx.stylize(simple, "string");
              }
              if (isNumber(value))
                return ctx.stylize("" + value, "number");
              if (isBoolean(value))
                return ctx.stylize("" + value, "boolean");
              if (isNull(value))
                return ctx.stylize("null", "null");
            }
            function formatError(value) {
              return "[" + Error.prototype.toString.call(value) + "]";
            }
            function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
              var output = [];
              for (var i2 = 0, l2 = value.length; i2 < l2; ++i2) {
                if (hasOwnProperty2(value, String(i2))) {
                  output.push(formatProperty(
                    ctx,
                    value,
                    recurseTimes,
                    visibleKeys,
                    String(i2),
                    true
                  ));
                } else {
                  output.push("");
                }
              }
              keys.forEach(function(key) {
                if (!key.match(/^\d+$/)) {
                  output.push(formatProperty(
                    ctx,
                    value,
                    recurseTimes,
                    visibleKeys,
                    key,
                    true
                  ));
                }
              });
              return output;
            }
            function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
              var name, str, desc;
              desc = Object.getOwnPropertyDescriptor(value, key) || {
                value: value[key]
              };
              if (desc.get) {
                if (desc.set) {
                  str = ctx.stylize("[Getter/Setter]", "special");
                } else {
                  str = ctx.stylize("[Getter]", "special");
                }
              } else {
                if (desc.set) {
                  str = ctx.stylize("[Setter]", "special");
                }
              }
              if (!hasOwnProperty2(visibleKeys, key)) {
                name = "[" + key + "]";
              }
              if (!str) {
                if (ctx.seen.indexOf(desc.value) < 0) {
                  if (isNull(recurseTimes)) {
                    str = formatValue(ctx, desc.value, null);
                  } else {
                    str = formatValue(ctx, desc.value, recurseTimes - 1);
                  }
                  if (str.indexOf("\n") > -1) {
                    if (array) {
                      str = str.split("\n").map(function(line) {
                        return "  " + line;
                      }).join("\n").substr(2);
                    } else {
                      str = "\n" + str.split("\n").map(function(line) {
                        return "   " + line;
                      }).join("\n");
                    }
                  }
                } else {
                  str = ctx.stylize("[Circular]", "special");
                }
              }
              if (isUndefined(name)) {
                if (array && key.match(/^\d+$/)) {
                  return str;
                }
                name = JSON.stringify("" + key);
                if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
                  name = name.substr(1, name.length - 2);
                  name = ctx.stylize(name, "name");
                } else {
                  name = name.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
                  name = ctx.stylize(name, "string");
                }
              }
              return name + ": " + str;
            }
            function reduceToSingleString(output, base, braces) {
              var length = output.reduce(function(prev, cur) {
                if (cur.indexOf("\n") >= 0)
                  ;
                return prev + cur.replace(/\u001b\[\d\d?m/g, "").length + 1;
              }, 0);
              if (length > 60) {
                return braces[0] + (base === "" ? "" : base + "\n ") + " " + output.join(",\n  ") + " " + braces[1];
              }
              return braces[0] + base + " " + output.join(", ") + " " + braces[1];
            }
            function isArray(ar2) {
              return Array.isArray(ar2);
            }
            exports2.isArray = isArray;
            function isBoolean(arg) {
              return typeof arg === "boolean";
            }
            exports2.isBoolean = isBoolean;
            function isNull(arg) {
              return arg === null;
            }
            exports2.isNull = isNull;
            function isNullOrUndefined(arg) {
              return arg == null;
            }
            exports2.isNullOrUndefined = isNullOrUndefined;
            function isNumber(arg) {
              return typeof arg === "number";
            }
            exports2.isNumber = isNumber;
            function isString2(arg) {
              return typeof arg === "string";
            }
            exports2.isString = isString2;
            function isSymbol(arg) {
              return typeof arg === "symbol";
            }
            exports2.isSymbol = isSymbol;
            function isUndefined(arg) {
              return arg === void 0;
            }
            exports2.isUndefined = isUndefined;
            function isRegExp(re2) {
              return isObject(re2) && objectToString(re2) === "[object RegExp]";
            }
            exports2.isRegExp = isRegExp;
            function isObject(arg) {
              return typeof arg === "object" && arg !== null;
            }
            exports2.isObject = isObject;
            function isDate(d2) {
              return isObject(d2) && objectToString(d2) === "[object Date]";
            }
            exports2.isDate = isDate;
            function isError(e2) {
              return isObject(e2) && (objectToString(e2) === "[object Error]" || e2 instanceof Error);
            }
            exports2.isError = isError;
            function isFunction(arg) {
              return typeof arg === "function";
            }
            exports2.isFunction = isFunction;
            function isPrimitive(arg) {
              return arg === null || typeof arg === "boolean" || typeof arg === "number" || typeof arg === "string" || typeof arg === "symbol" || // ES6 symbol
              typeof arg === "undefined";
            }
            exports2.isPrimitive = isPrimitive;
            exports2.isBuffer = require2("./support/isBuffer");
            function objectToString(o2) {
              return Object.prototype.toString.call(o2);
            }
            function pad(n2) {
              return n2 < 10 ? "0" + n2.toString(10) : n2.toString(10);
            }
            var months = [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec"
            ];
            function timestamp() {
              var d2 = /* @__PURE__ */ new Date();
              var time = [
                pad(d2.getHours()),
                pad(d2.getMinutes()),
                pad(d2.getSeconds())
              ].join(":");
              return [d2.getDate(), months[d2.getMonth()], time].join(" ");
            }
            exports2.log = function() {
              formatAppLog("log", "at node_modules/mqtt/dist/mqtt.js:16392", "%s - %s", timestamp(), exports2.format.apply(exports2, arguments));
            };
            exports2.inherits = require2("inherits");
            exports2._extend = function(origin, add) {
              if (!add || !isObject(add))
                return origin;
              var keys = Object.keys(add);
              var i2 = keys.length;
              while (i2--) {
                origin[keys[i2]] = add[keys[i2]];
              }
              return origin;
            };
            function hasOwnProperty2(obj, prop) {
              return Object.prototype.hasOwnProperty.call(obj, prop);
            }
          }).call(this, require2("_process"), typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {
          "./support/isBuffer": 135,
          "_process": 100,
          "inherits": 88
        }],
        137: [function(require2, module2, exports2) {
          (function(process, global2) {
            var Transform = require2("readable-stream").Transform;
            var duplexify = require2("duplexify");
            var WS2 = require2("ws");
            var Buffer2 = require2("safe-buffer").Buffer;
            module2.exports = WebSocketStream;
            function buildProxy(options, socketWrite, socketEnd) {
              var proxy = new Transform({
                objectMode: options.objectMode
              });
              proxy._write = socketWrite;
              proxy._flush = socketEnd;
              return proxy;
            }
            function WebSocketStream(target, protocols, options) {
              var stream, socket;
              var isBrowser = process.title === "browser";
              var isNative = !!global2.WebSocket;
              var socketWrite = isBrowser ? socketWriteBrowser : socketWriteNode;
              if (protocols && !Array.isArray(protocols) && "object" === typeof protocols) {
                options = protocols;
                protocols = null;
                if (typeof options.protocol === "string" || Array.isArray(options.protocol)) {
                  protocols = options.protocol;
                }
              }
              if (!options)
                options = {};
              if (options.objectMode === void 0) {
                options.objectMode = !(options.binary === true || options.binary === void 0);
              }
              var proxy = buildProxy(options, socketWrite, socketEnd);
              if (!options.objectMode) {
                proxy._writev = writev;
              }
              var bufferSize = options.browserBufferSize || 1024 * 512;
              var bufferTimeout = options.browserBufferTimeout || 1e3;
              if (typeof target === "object") {
                socket = target;
              } else {
                if (isNative && isBrowser) {
                  socket = new WS2(target, protocols);
                } else {
                  socket = new WS2(target, protocols, options);
                }
                socket.binaryType = "arraybuffer";
              }
              if (socket.readyState === socket.OPEN) {
                stream = proxy;
              } else {
                stream = duplexify.obj();
                socket.onopen = onopen;
              }
              stream.socket = socket;
              socket.onclose = onclose;
              socket.onerror = onerror;
              socket.onmessage = onmessage;
              proxy.on("close", destroy);
              var coerceToBuffer = !options.objectMode;
              function socketWriteNode(chunk, enc, next) {
                if (socket.readyState !== socket.OPEN) {
                  next();
                  return;
                }
                if (coerceToBuffer && typeof chunk === "string") {
                  chunk = Buffer2.from(chunk, "utf8");
                }
                socket.send(chunk, next);
              }
              function socketWriteBrowser(chunk, enc, next) {
                if (socket.bufferedAmount > bufferSize) {
                  setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next);
                  return;
                }
                if (coerceToBuffer && typeof chunk === "string") {
                  chunk = Buffer2.from(chunk, "utf8");
                }
                try {
                  socket.send(chunk);
                } catch (err) {
                  return next(err);
                }
                next();
              }
              function socketEnd(done) {
                socket.close();
                done();
              }
              function onopen() {
                stream.setReadable(proxy);
                stream.setWritable(proxy);
                stream.emit("connect");
              }
              function onclose() {
                stream.end();
                stream.destroy();
              }
              function onerror(err) {
                stream.destroy(err);
              }
              function onmessage(event) {
                var data = event.data;
                if (data instanceof ArrayBuffer)
                  data = Buffer2.from(data);
                else
                  data = Buffer2.from(data, "utf8");
                proxy.push(data);
              }
              function destroy() {
                socket.close();
              }
              function writev(chunks, cb2) {
                var buffers = new Array(chunks.length);
                for (var i2 = 0; i2 < chunks.length; i2++) {
                  if (typeof chunks[i2].chunk === "string") {
                    buffers[i2] = Buffer2.from(chunks[i2], "utf8");
                  } else {
                    buffers[i2] = chunks[i2].chunk;
                  }
                }
                this._write(Buffer2.concat(buffers), "binary", cb2);
              }
              return stream;
            }
          }).call(this, require2("_process"), typeof commonjsGlobal !== "undefined" ? commonjsGlobal : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {});
        }, {
          "_process": 100,
          "duplexify": 19,
          "readable-stream": 116,
          "safe-buffer": 118,
          "ws": 138
        }],
        138: [function(require2, module2, exports2) {
          var ws2 = null;
          if (typeof WebSocket !== "undefined") {
            ws2 = WebSocket;
          } else if (typeof MozWebSocket !== "undefined") {
            ws2 = MozWebSocket;
          } else if (typeof window !== "undefined") {
            ws2 = window.WebSocket || window.MozWebSocket;
          }
          module2.exports = ws2;
        }, {}],
        139: [function(require2, module2, exports2) {
          module2.exports = wrappy;
          function wrappy(fn2, cb2) {
            if (fn2 && cb2)
              return wrappy(fn2)(cb2);
            if (typeof fn2 !== "function")
              throw new TypeError("need wrapper function");
            Object.keys(fn2).forEach(function(k2) {
              wrapper[k2] = fn2[k2];
            });
            return wrapper;
            function wrapper() {
              var args = new Array(arguments.length);
              for (var i2 = 0; i2 < args.length; i2++) {
                args[i2] = arguments[i2];
              }
              var ret = fn2.apply(this, args);
              var cb3 = args[args.length - 1];
              if (typeof ret === "function" && ret !== cb3) {
                Object.keys(cb3).forEach(function(k2) {
                  ret[k2] = cb3[k2];
                });
              }
              return ret;
            }
          }
        }, {}],
        140: [function(require2, module2, exports2) {
          module2.exports = extend;
          var hasOwnProperty2 = Object.prototype.hasOwnProperty;
          function extend() {
            var target = {};
            for (var i2 = 0; i2 < arguments.length; i2++) {
              var source = arguments[i2];
              for (var key in source) {
                if (hasOwnProperty2.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          }
        }, {}]
      }, {}, [9])(9);
    });
  })(mqtt$1);
  var mqtt = mqttExports;
  var mqttOption = {
    keepalive: 60,
    clientId: "mqttjs_" + Math.random().toString(16).substr(2, 8),
    protocolId: "MQTT",
    protocolVersion: 4,
    // MQTT 3.1.1
    clean: true,
    reconnectPeriod: 2e3,
    // 2s
    connectTimeout: 10 * 1e3
    // 10s
  };
  function subscribe(client) {
    if (!is_mqtt_connect(client)) {
      formatAppLog("error", "at utils/myMqtt.js:17", "mqtt client \u672A\u8FDE\u63A5 \u7981\u6B62\u8BA2\u9605");
      return;
    }
    const topics = ["alarm/flow"];
    topics.forEach((topic) => {
      client.subscribe(topic, (err) => {
        if (!err) {
          formatAppLog("log", "at utils/myMqtt.js:25", `MQTT \u8BA2\u9605 ${topic}`);
        } else {
          formatAppLog("error", "at utils/myMqtt.js:28", `MQTT \u8BA2\u9605 ${topic} \u5931\u8D25`);
        }
      });
    });
  }
  function is_mqtt_connect(client) {
    if (client && client.connected) {
      return true;
    } else {
      return false;
    }
  }
  function mqtt_connect(client = null) {
    if (is_mqtt_connect(client)) {
      formatAppLog("warn", "at utils/myMqtt.js:45", "mqtt \u5DF2\u7ECF\u8FDE\u63A5");
      return;
    }
    try {
      client = mqtt.connect("wx://10.64.45.149:8083/mqtt", mqttOption);
      client.on("connect", () => {
        formatAppLog("log", "at utils/myMqtt.js:52", "mqtt \u8FDE\u63A5");
        subscribe(client);
      });
      client.on("error", (error) => {
        formatAppLog("error", "at utils/myMqtt.js:57", `MQTT \u9519\u8BEF ${error}`);
      });
      client.on("disconnect", () => {
        formatAppLog("warn", "at utils/myMqtt.js:62", "MQTT \u65AD\u5F00");
      });
      client.on("end", () => {
        formatAppLog("log", "at utils/myMqtt.js:66", "MQTT \u4E3B\u52A8\u7ED3\u675F");
      });
    } catch (e2) {
      formatAppLog("error", "at utils/myMqtt.js:69", "mqtt \u8FDE\u63A5\u9519\u8BEF: ", e2);
    }
    return client;
  }
  function mqtt_disconnect(client) {
    if (!is_mqtt_connect(client))
      return;
    try {
      client.end();
    } catch (e2) {
      formatAppLog("error", "at utils/myMqtt.js:80", "MQTT \u7ED3\u675F\u9519\u8BEF: ", e2);
    }
  }
  var _sfc_main = /* @__PURE__ */ (0, import_vue2.defineComponent)({
    __name: "index",
    setup(__props) {
      var cameraId = "1686676270546554881";
      var client = null;
      const timers = {
        minutes: null,
        recent: null,
        calendar: null
      };
      const settingStore = useSettingStore();
      const scop_data = (0, import_vue2.ref)({
        current_count: 0,
        total_count: 0,
        data: [
          {
            in_count: 0,
            out_count: 0
          },
          {
            in_count: 0,
            out_count: 0
          }
        ]
      });
      const decoder = new TextDecoder("utf-8");
      function safe_check(options) {
        if (options) {
          if (options.cameraId) {
            formatAppLog("log", "at pages/index/index.nvue:90", "\u66F4\u65B0 cameraId: ", options.cameraId);
            cameraId = options.cameraId;
            return true;
          }
        }
        return false;
      }
      onLoad((options) => {
        if (!safe_check(options)) {
          formatAppLog("warn", "at pages/index/index.nvue:101", "\u4F20\u53C2\u9519\u8BEF");
          return;
        }
        plus.key.removeEventListener("backbutton", () => {
        });
        plus.key.addEventListener("backbutton", uni.navigateBack, false);
        client = mqtt_connect(client);
        client.on("message", (topic, message) => {
          try {
            const data = JSON.parse(decoder.decode(message));
            formatAppLog("log", "at pages/index/index.nvue:115", `topic: ${topic}	message: `, data);
            const cam = data.cam;
            if (cam === void 0) {
              formatAppLog("error", "at pages/index/index.nvue:119", "\u6CA1\u6709\u76F8\u673A");
              return;
            }
            let change_flag = false;
            if (cam.camera_id === cameraId) {
              change_flag = true;
              scop_data.value.data[0].in_count = data.in_count;
              scop_data.value.data[0].out_count = data.out_count;
            } else if (cam.camera_id === "1686676270546554882") {
              change_flag = true;
              scop_data.value.data[1].in_count = data.in_count;
              scop_data.value.data[1].out_count = data.out_count;
            } else {
            }
            if (change_flag) {
              scop_data.value.total_count = scop_data.value.data[0].in_count + scop_data.value.data[1].in_count;
              scop_data.value.current_count = scop_data.value.total_count - scop_data.value.data[0].out_count - scop_data.value.data[1].out_count;
              if (scop_data.value.current_count < 0) {
                scop_data.value.current_count = 0;
              }
            }
          } catch (e2) {
            formatAppLog("error", "at pages/index/index.nvue:149", "json \u89E3\u6790\u5931\u8D25 ", e2);
          }
        });
      });
      onUnload(() => {
        try {
          mqtt_disconnect(client);
        } catch (e2) {
          formatAppLog("error", "at pages/index/index.nvue:159", "mqtt_disconnect error: ", e2);
        }
        plus.key.removeEventListener("backbutton", uni.navigateBack);
        if (timers.minutes !== null) {
          clearInterval(timers.minutes);
        }
        if (timers.recent !== null) {
          clearInterval(timers.recent);
        }
        if (timers.calendar !== null) {
          clearInterval(timers.calendar);
        }
      });
      const minutes_flow_data = (0, import_vue2.ref)(null);
      const recent_flow_data = (0, import_vue2.ref)(null);
      const calendar_flow_data = (0, import_vue2.ref)(null);
      function update_minutes_flow_data_func() {
        update_minutes_flow_data(cameraId).then((data) => {
          minutes_flow_data.value = data;
        });
      }
      function update_recent_flow_data_func() {
        update_recent_flow_data(cameraId).then((data) => {
          recent_flow_data.value = data;
        });
      }
      function update_calendar_flow_data_func() {
        update_calendar_flow_data(cameraId).then((data) => {
          calendar_flow_data.value = data;
        });
      }
      update_minutes_flow_data_func();
      update_recent_flow_data_func();
      update_calendar_flow_data_func();
      timers.minutes = setInterval(update_minutes_flow_data_func, 10 * 60 * 1e3);
      timers.recent = setInterval(update_recent_flow_data_func, 10 * 60 * 1e3);
      timers.calendar = setInterval(update_calendar_flow_data_func, 10 * 60 * 1e3);
      return (_ctx, _cache) => {
        return (0, import_vue2.openBlock)(), (0, import_vue2.createElementBlock)("scroll-view", {
          scrollY: true,
          showScrollbar: true,
          enableBackToTop: true,
          bubble: "true",
          style: { flexDirection: "column" }
        }, [
          (0, import_vue2.createElementVNode)("view", { class: "content" }, [
            (0, import_vue2.createElementVNode)("u-image", {
              class: "background bg-img-1",
              src: _imports_0,
              mode: "scaleToFill"
            }),
            (0, import_vue2.createVNode)((0, import_vue2.unref)(HeaderTitle), {
              title: (0, import_vue2.unref)(settingStore).textConfig.topTitle
            }, null, 8, ["title"]),
            (0, import_vue2.createElementVNode)("view", { class: "centre-box" }, [
              (0, import_vue2.createVNode)((0, import_vue2.unref)(ContentBox), { class: "test" }, {
                default: (0, import_vue2.withCtx)(() => [
                  (0, import_vue2.createVNode)((0, import_vue2.unref)(CalendarFlow), {
                    data: calendar_flow_data.value,
                    title: (0, import_vue2.unref)(settingStore).textConfig.leftTitle
                  }, null, 8, ["data", "title"])
                ]),
                _: 1
                /* STABLE */
              }),
              (0, import_vue2.createVNode)((0, import_vue2.unref)(RealTime), {
                class: "test-1",
                number: scop_data.value.current_count,
                total: scop_data.value.total_count,
                title: (0, import_vue2.unref)(settingStore).textConfig.centre.title,
                text: (0, import_vue2.unref)(settingStore).textConfig.centre.text
              }, null, 8, ["number", "total", "title", "text"]),
              (0, import_vue2.createVNode)((0, import_vue2.unref)(ContentBox), { class: "test" }, {
                default: (0, import_vue2.withCtx)(() => [
                  (0, import_vue2.createVNode)((0, import_vue2.unref)(RecentFlow), {
                    data: recent_flow_data.value,
                    title: (0, import_vue2.unref)(settingStore).textConfig.rightTitle
                  }, null, 8, ["data", "title"])
                ]),
                _: 1
                /* STABLE */
              })
            ]),
            (0, import_vue2.createElementVNode)("view", { class: "bottom-box" }, [
              (0, import_vue2.createVNode)((0, import_vue2.unref)(ContentBox), { class: "bt" }, {
                default: (0, import_vue2.withCtx)(() => [
                  (0, import_vue2.createVNode)((0, import_vue2.unref)(MinutesFlow), {
                    data: minutes_flow_data.value,
                    title: (0, import_vue2.unref)(settingStore).textConfig.bottomTitle
                  }, null, 8, ["data", "title"])
                ]),
                _: 1
                /* STABLE */
              })
            ])
          ])
        ]);
      };
    }
  });
  var _style_0 = { "content": { "": { "display": "flex", "flexDirection": "column", "width": 962, "height": 542 } }, "background": { "": { "position": "absolute", "zIndex": -2 } }, "bg-img-1": { "": { "top": 0, "left": 0, "width": 962, "height": 542 } }, "centre-box": { "": { "marginTop": 0, "marginRight": 10, "marginBottom": 0, "marginLeft": 10, "display": "flex", "flexDirection": "row" } }, "test-1": { "": { "width": 340, "height": 290, "paddingTop": 0, "paddingRight": 20, "paddingBottom": 0, "paddingLeft": 20 } }, "test": { "": { "width": 300, "height": 290 } }, "bottom-box": { "": { "marginTop": 10, "marginRight": 10, "marginBottom": 10, "marginLeft": 10 } }, "bt": { "": { "width": 938, "height": 172 } } };
  var index = /* @__PURE__ */ _export_sfc(_sfc_main, [["styles", [_style_0]], ["__file", "D:/code/HBuilderProjects/IntelligentFlow/pages/index/index.nvue"]]);

  // <stdin>
  var webview = plus.webview.currentWebview();
  if (webview) {
    const __pageId = parseInt(webview.id);
    const __pagePath = "pages/index/index";
    let __pageQuery = {};
    try {
      __pageQuery = JSON.parse(webview.__query__);
    } catch (e2) {
    }
    index.mpType = "page";
    const app = Vue.createPageApp(index, { $store: getApp({ allowDefault: true }).$store, __pageId, __pagePath, __pageQuery });
    app.provide("__globalStyles", Vue.useCssStyles([...__uniConfig.styles, ...index.styles || []]));
    app.mount("#root");
  }
})();
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/*!
* ZRender, a high performance 2d drawing library.
*
* Copyright (c) 2013, Baidu Inc.
* All rights reserved.
*
* LICENSE
* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt
*/
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
